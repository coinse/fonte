{"sha": "8627ba3bde6edb7f91cf7122d7f8e9961096c4ff", "log": "Performance: hit stack.size() less in agency adoption  On HTML test cases that use adoption, this was causing ~ 23% of CPU time. Knocks it down to ~ 7%. (Which I found unintuitive, because it's a simple int getter, and I expected that to get inlined by the JIT.", "commit": "\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n                             LinkedList<Element> stack = tb.getStack();\n                             // the spec doesn't limit to < 64, but in degenerate cases (9000+ stack depth) this prevents\n                             // run-aways\n-                            for (int si = 0; si < stack.size() && si < 64; si++) {\n+                            final int stackSize = stack.size();\n+                            for (int si = 0; si < stackSize && si < 64; si++) {\n                                 Element el = stack.get(si);\n                                 if (el == formatEl) {\n                                     commonAncestor = stack.get(si - 1);", "timestamp": 1384113571, "metainfo": ""}