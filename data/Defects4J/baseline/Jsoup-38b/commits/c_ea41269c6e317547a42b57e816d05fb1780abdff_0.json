{"sha": "ea41269c6e317547a42b57e816d05fb1780abdff", "log": "Reduce code dupes for ScriptDataDoubleEscapeStart and ScriptDataDoubleEscapeEnd", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokeniserState.java\n+++ b/src/main/java/org/jsoup/parser/TokeniserState.java\n     },\n     ScriptDataDoubleEscapeStart {\n         void read(Tokeniser t, CharacterReader r) {\n-            if (r.matchesLetter()) {\n-                String name = r.consumeLetterSequence();\n-                t.dataBuffer.append(name.toLowerCase());\n-                t.emit(name);\n-                return;\n-            }\n-\n-            char c = r.consume();\n-            switch (c) {\n-                case '\\t':\n-                case '\\n':\n-                case '\\r':\n-                case '\\f':\n-                case ' ':\n-                case '/':\n-                case '>':\n-                    if (t.dataBuffer.toString().equals(\"script\"))\n-                        t.transition(ScriptDataDoubleEscaped);\n-                    else\n-                        t.transition(ScriptDataEscaped);\n-                    t.emit(c);\n-                    break;\n-                default:\n-                    r.unconsume();\n-                    t.transition(ScriptDataEscaped);\n-            }\n+            handleDataDoubleEscapeTag(t, r, ScriptDataDoubleEscaped, ScriptDataEscaped);\n         }\n     },\n     ScriptDataDoubleEscaped {\n     },\n     ScriptDataDoubleEscapeEnd {\n         void read(Tokeniser t, CharacterReader r) {\n-            if (r.matchesLetter()) {\n-                String name = r.consumeLetterSequence();\n-                t.dataBuffer.append(name.toLowerCase());\n-                t.emit(name);\n-                return;\n-            }\n-\n-            char c = r.consume();\n-            switch (c) {\n-                case '\\t':\n-                case '\\n':\n-                case '\\r':\n-                case '\\f':\n-                case ' ':\n-                case '/':\n-                case '>':\n-                    if (t.dataBuffer.toString().equals(\"script\"))\n-                        t.transition(ScriptDataEscaped);\n-                    else\n-                        t.transition(ScriptDataDoubleEscaped);\n-                    t.emit(c);\n-                    break;\n-                default:\n-                    r.unconsume();\n-                    t.transition(ScriptDataDoubleEscaped);\n-            }\n+            handleDataDoubleEscapeTag(t,r, ScriptDataEscaped, ScriptDataDoubleEscaped);\n         }\n     },\n     BeforeAttributeName {\n             t.transition(elseTransition);\n         }\n     }\n+\n+    private static final void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback) {\n+        if (r.matchesLetter()) {\n+            String name = r.consumeLetterSequence();\n+            t.dataBuffer.append(name.toLowerCase());\n+            t.emit(name);\n+            return;\n+        }\n+\n+        char c = r.consume();\n+        switch (c) {\n+            case '\\t':\n+            case '\\n':\n+            case '\\r':\n+            case '\\f':\n+            case ' ':\n+            case '/':\n+            case '>':\n+                if (t.dataBuffer.toString().equals(\"script\"))\n+                    t.transition(primary);\n+                else\n+                    t.transition(fallback);\n+                t.emit(c);\n+                break;\n+            default:\n+                r.unconsume();\n+                t.transition(fallback);\n+        }\n+    }\n }", "timestamp": 1359841828, "metainfo": ""}