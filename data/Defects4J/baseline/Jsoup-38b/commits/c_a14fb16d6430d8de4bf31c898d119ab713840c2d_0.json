{"sha": "a14fb16d6430d8de4bf31c898d119ab713840c2d", "log": "Fixed issue with selector parser where some boolean AND + OR combined queries (e.g. \"meta[http-equiv], meta[content]\") were being parsed incorrectly as OR only queries (e.g. former as \"meta, [http-equiv], meta[content]\")  Fixed issue where a content-tye specified in a meta tag may not be reliably detected, due to the above issue.", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n             Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n             if (meta != null) { // if not found, will keep utf-8 as best attempt\n                 String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");\n-                if (foundCharset != null && !foundCharset.equals(defaultCharset)) { // need to re-decode\n+                if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode\n                     charsetName = foundCharset;\n                     byteData.rewind();\n                     docData = Charset.forName(foundCharset).decode(byteData).toString();\n--- a/src/main/java/org/jsoup/select/CombiningEvaluator.java\n+++ b/src/main/java/org/jsoup/select/CombiningEvaluator.java\n     }\n \n     static final class Or extends CombiningEvaluator {\n+        /**\n+         * Create a new Or evaluator. The initial evaluators are ANDed together and used as the first clause of the OR.\n+         * @param evaluators initial OR clause (these are wrapped into an AND evaluator).\n+         */\n         Or(Collection<Evaluator> evaluators) {\n-            super(evaluators);\n+            super();\n+            if (evaluators.size() > 1)\n+                this.evaluators.add(new And(evaluators));\n+            else // 0 or 1\n+                this.evaluators.addAll(evaluators);\n         }\n \n         public void add(Evaluator e) {\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n \n         List<Element> none = doc.getElementsByAttribute(\"class\");\n         assertEquals(0, none.size());\n+    }\n+\n+    @Test public void testGetElementsWithAttributeDash() {\n+        Document doc = Jsoup.parse(\"<meta http-equiv=content-type value=utf8 id=1> <meta name=foo content=bar id=2> <div http-equiv=content-type value=utf8 id=3>\");\n+        Elements meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\");\n+        assertEquals(1, meta.size());\n+        assertEquals(\"1\", meta.first().id());\n     }\n \n     @Test public void testGetElementsWithAttributeValue() {", "timestamp": 1309605127, "metainfo": ""}