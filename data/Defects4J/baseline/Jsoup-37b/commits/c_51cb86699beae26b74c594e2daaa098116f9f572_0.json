{"sha": "51cb86699beae26b74c594e2daaa098116f9f572", "log": "Fixed issue in TokeniserState where the tokeniser could get trapped at EOF if in RCDataEndTag state.", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokeniserState.java\n+++ b/src/main/java/org/jsoup/parser/TokeniserState.java\n             }\n \n             char c = r.consume();\n-            boolean handled = true;\n             switch (c) {\n                 case '\\t':\n                 case '\\n':\n                     if (t.isAppropriateEndTagToken())\n                         t.transition(BeforeAttributeName);\n                     else\n-                        handled = false;\n+                        anythingElse(t, r);\n                     break;\n                 case '/':\n                     if (t.isAppropriateEndTagToken())\n                         t.transition(SelfClosingStartTag);\n                     else\n-                        handled = false;\n+                        anythingElse(t, r);\n                     break;\n                 case '>':\n                     if (t.isAppropriateEndTagToken()) {\n                         t.transition(Data);\n                     }\n                     else\n-                        handled = false;\n-                    break;\n-            }\n-            if (!handled) {\n-                t.emit(\"</\" + t.dataBuffer.toString());\n-                r.unconsume();\n-                t.transition(Rcdata);\n-            }\n+                        anythingElse(t, r);\n+                    break;\n+                default:\n+                    anythingElse(t, r);\n+            }\n+        }\n+\n+        private void anythingElse(Tokeniser t, CharacterReader r) {\n+            t.emit(\"</\" + t.dataBuffer.toString());\n+            t.transition(Rcdata);\n         }\n     },\n     RawtextLessthanSign {\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         assertEquals(doc.select(\"span\").first().children().size(), 0); // the span gets closed\n         assertEquals(doc.select(\"table\").size(), 1); // only one table\n     }\n+\n+    @Test public void handlesUnclosedTitleAtEof() {\n+        assertEquals(\"Data\", Jsoup.parse(\"<title>Data\").title());\n+        assertEquals(\"Data<\", Jsoup.parse(\"<title>Data<\").title());\n+        assertEquals(\"Data</\", Jsoup.parse(\"<title>Data</\").title());\n+        assertEquals(\"Data</t\", Jsoup.parse(\"<title>Data</t\").title());\n+        assertEquals(\"Data</ti\", Jsoup.parse(\"<title>Data</ti\").title());\n+        assertEquals(\"Data\", Jsoup.parse(\"<title>Data</title>\").title());\n+        assertEquals(\"Data\", Jsoup.parse(\"<title>Data</title >\").title());\n+    }\n }", "timestamp": 1309605128, "metainfo": ""}