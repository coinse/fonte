{"sha": "dd4b68223f30d8142f26a13582d0b996dece6588", "log": "Change what considered as \"whitespace\"", "commit": "\n--- a/src/main/java/org/jsoup/helper/StringUtil.java\n+++ b/src/main/java/org/jsoup/helper/StringUtil.java\n \n         int l = string.length();\n         for (int i = 0; i < l; i++) {\n-            if (!Character.isWhitespace(string.codePointAt(i)))\n+            if (!StringUtil.isWhitespace(string.codePointAt(i)))\n                 return false;\n         }\n         return true;\n         return true;\n     }\n \n+    /**\n+     * Tests if a code point is \"whitespace\" defined in spec.\n+     * @param c code point to test\n+     * @return true if code point is whitespace, false otherwise\n+     */\n+    public static boolean isWhitespace(int c){\n+        if (c == ' ' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r'){\n+            return true;\n+        }\n+        return false;\n+    }\n+\n     public static String normaliseWhitespace(String string) {\n         StringBuilder sb = new StringBuilder(string.length());\n \n         int l = string.length();\n         for (int i = 0; i < l; i++) {\n             int c = string.codePointAt(i);\n-            if (Character.isWhitespace(c)) {\n+            if (isWhitespace(c)) {\n                 if (lastWasWhite) {\n                     modified = true;\n                     continue;\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n package org.jsoup.parser;\n \n+import org.jsoup.helper.StringUtil;\n import org.jsoup.helper.Validate;\n \n /**\n      @return if starts with whitespace\n      */\n     public boolean matchesWhitespace() {\n-        return !isEmpty() && Character.isWhitespace(queue.charAt(pos));\n+        return !isEmpty() && StringUtil.isWhitespace(queue.charAt(pos));\n     }\n \n     /**\n--- a/src/main/java/org/jsoup/parser/TreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/TreeBuilderState.java\n             // todo: this checks more than spec - \"\\t\", \"\\n\", \"\\f\", \"\\r\", \" \"\n             for (int i = 0; i < data.length(); i++) {\n                 char c = data.charAt(i);\n-                if (!Character.isWhitespace(c))\n+                if (!StringUtil.isWhitespace(c))\n                     return false;\n             }\n             return true;\n--- a/src/test/java/org/jsoup/helper/StringUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/StringUtilTest.java\n \n import org.junit.Test;\n \n-import static org.junit.Assert.*;\n+import java.util.Arrays;\n \n-import java.util.Arrays;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n \n public class StringUtilTest {\n \n         assertTrue(StringUtil.isNumeric(\"1234\"));\n     }\n \n+    @Test public void isWhitespace() {\n+        assertTrue(StringUtil.isWhitespace('\\t'));\n+        assertTrue(StringUtil.isWhitespace('\\n'));\n+        assertTrue(StringUtil.isWhitespace('\\r'));\n+        assertTrue(StringUtil.isWhitespace('\\f'));\n+        assertTrue(StringUtil.isWhitespace(' '));\n+        \n+        assertFalse(StringUtil.isWhitespace('\\u00a0'));\n+        assertFalse(StringUtil.isWhitespace('\\u2000'));\n+        assertFalse(StringUtil.isWhitespace('\\u3000'));\n+    }\n+\n     @Test public void normaliseWhiteSpace() {\n         assertEquals(\" \", StringUtil.normaliseWhitespace(\"    \\r \\n \\r\\n\"));\n         assertEquals(\" hello there \", StringUtil.normaliseWhitespace(\"   hello   \\r \\n  there    \\n\"));", "timestamp": 1331792395, "metainfo": ""}