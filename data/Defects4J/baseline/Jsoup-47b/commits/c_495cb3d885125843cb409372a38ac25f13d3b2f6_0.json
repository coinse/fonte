{"sha": "495cb3d885125843cb409372a38ac25f13d3b2f6", "log": "Speed improvement for .class selector  2.5x to 14x on Android 5.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n  */\n public class Element extends Node {\n     private Tag tag;\n+\n+    private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");\n+\n     /**\n      * Create a new, standalone Element. (Standalone in that is has no parent.)\n      * \n      * @return set of classnames, empty if no class attribute\n      */\n     public Set<String> classNames() {\n-    \tString[] names = className().split(\"\\\\s+\");\n+    \tString[] names = classSplit.split(className());\n     \tSet<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\n     \tclassNames.remove(\"\"); // if classNames() was empty, would include an empty class\n \n      * @param className name of class to check for\n      * @return true if it does, false if not\n      */\n+    /*\n+    Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames().\n+\n+    Wiki: 71, 13 (5.4x)\n+    CNN: 227, 91 (2.5x)\n+    Alterslash: 59, 4 (14.8x)\n+    Jsoup: 14, 1 (14x)\n+    */\n     public boolean hasClass(String className) {\n-        Set<String> classNames = classNames();\n-        for (String name : classNames) {\n+        String classAttr = attributes.get(\"class\");\n+        if (classAttr.equals(\"\") || classAttr.length() < className.length())\n+            return false;\n+\n+        final String[] classes = classSplit.split(classAttr);\n+        for (String name : classes) {\n             if (className.equalsIgnoreCase(name))\n                 return true;\n         }\n+\n         return false;\n     }\n ", "timestamp": 1428381208, "metainfo": ""}