{"sha": "c4bb2a4933994931900cde164e517ff0e3a61353", "log": "Simplifed Tag creator.", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n     private static final Map<String, Tag> tags = new HashMap<String, Tag>();\n     private static final Tag defaultAncestor;\n     static {\n-        defaultAncestor = new Tag(\"BODY\", true, true, true, false, false);\n+        defaultAncestor = new Tag(\"BODY\");\n         tags.put(defaultAncestor.tagName, defaultAncestor);\n     }\n \n     private String tagName;\n-    private boolean isBlock; // block or inline\n-    private boolean canContainBlock; // Can this tag hold block level tags?\n-    private boolean canContainInline; // only pcdata if not\n-    private boolean optionalClosing; // If tag is open, and another seen, close previous tag\n-    private boolean empty; // can hold nothing; e.g. img\n+    private boolean isBlock = true; // block or inline\n+    private boolean canContainBlock = true; // Can this tag hold block level tags?\n+    private boolean canContainInline = true; // only pcdata if not\n+    private boolean optionalClosing = false; // If tag is open, and another seen, close previous tag\n+    private boolean empty = false; // can hold nothing; e.g. img\n     private List<Tag> ancestors;\n \n-    private Tag(String tagName, boolean block, boolean canContainBlock, boolean canContainInline, boolean optionalClosing, boolean empty) {\n+    private Tag(String tagName) {\n         this.tagName = tagName.toLowerCase();\n-        isBlock = block;\n-        this.canContainBlock = canContainBlock;\n-        this.canContainInline = canContainInline;\n-        this.optionalClosing = optionalClosing;\n-        this.empty = empty;\n     }\n \n     public String getName() {\n             Tag tag = tags.get(tagName);\n             if (tag == null) {\n                 // not defined: create default\n-                tag = new Tag(tagName, true, true, true, false, false);\n+                tag = new Tag(tagName);\n                 tag.setAncestor(defaultAncestor.tagName);\n             }\n             return tag;\n     }\n \n     private static Tag createBlock(String tagName) {\n-        return register(new Tag(tagName, true, true, true, false, false));\n+        return register(new Tag(tagName));\n     }\n \n     private static Tag createInline(String tagName) {\n-        return register(new Tag(tagName, false, false, true, false, false));\n+        Tag inline = new Tag(tagName);\n+        inline.isBlock = false;\n+        inline.canContainBlock = false;\n+        return register(inline);\n     }\n \n     private static Tag register(Tag tag) {", "timestamp": 1309605107, "metainfo": ""}