{"sha": "3eb8a67876703682e4156b378871911870fcaad9", "log": "Allow combinators at start of selector query  Closes #13", "commit": "\n--- a/src/main/java/org/jsoup/select/Selector.java\n+++ b/src/main/java/org/jsoup/select/Selector.java\n \n     private Elements select() {\n         tq.consumeWhitespace();\n-        addElements(findElements()); // chomp first matcher off queue        \n+        \n+        if (tq.matchesAny(combinators)) { // if starts with a combinator, use root as elements\n+            elements.add(root);\n+            combinator(tq.consume().toString());\n+        } else {\n+            addElements(findElements()); // chomp first element matcher off queue \n+        }            \n+               \n         while (!tq.isEmpty()) {\n-            // hierarchy and extras (todo: implement +, ~)\n+            // hierarchy and extras\n             boolean seenWhite = tq.consumeWhitespace();\n             \n             if (tq.matchChomp(\",\")) { // group or\n--- a/src/test/java/org/jsoup/select/SelectorTest.java\n+++ b/src/test/java/org/jsoup/select/SelectorTest.java\n         Element el4 = doc.select(\".b2-qux_bif\").first();\n         assertEquals(\"Two\", el4.text());\n     }\n+    \n+    // for http://github.com/jhy/jsoup/issues#issue/13\n+    @Test public void testSupportsLeadingCombinator() {\n+        String h = \"<div><p><span>One</span><span>Two</span></p></div>\";\n+        Document doc = Jsoup.parse(h);\n+        \n+        Element p = doc.select(\"div > p\").first();\n+        Elements spans = p.select(\"> span\");\n+        assertEquals(2, spans.size());\n+        assertEquals(\"One\", spans.first().text());\n+        \n+        // make sure doesn't get nested\n+        h = \"<div id=1><div id=2><div id=3></div></div></div>\";\n+        doc = Jsoup.parse(h);\n+        Element div = doc.select(\"div\").select(\" > div\").first();\n+        assertEquals(\"2\", div.id());\n+    }\n }", "timestamp": 1309605112, "metainfo": ""}