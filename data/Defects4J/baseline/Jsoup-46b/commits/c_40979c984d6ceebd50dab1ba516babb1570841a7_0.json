{"sha": "40979c984d6ceebd50dab1ba516babb1570841a7", "log": "Don't register unknown tags.  Unknown tags created with Tags.valueOf(String) were being registered, so that further .valueOf()s would return an == tag. But that's a potential memory leak, particularly with malicious input HTML, and serves no real purpose (as .equals() still works), so that functionality has been removed.", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n     }\n \n     /**\n-     Get a Tag by name. If not previously defined (unknown), registers and returns a new generic tag, that can do anything.\n+     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n      <p>\n-     Two unknown tags with the same name will compare ==.\n+     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n      @param tagName Name of tag, e.g. \"p\". Case insensitive.\n      @return The tag, either defined or new generic.\n      */\n             Tag tag = tags.get(tagName);\n             if (tag == null) {\n                 // not defined: create default\n-                // TODO: log, generate warning?\n                 tag = new Tag(tagName, true, true, true, false, false);\n-                register(tag);\n+                tag.setAncestor(defaultAncestor.tagName);\n             }\n             return tag;\n         }", "timestamp": 1309605103, "metainfo": ""}