{"sha": "8462234502ff4c6543e54e3e7b542029182bdcd3", "log": "We don't care if trailing LF has been consumed  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVLexer.java\n+++ b/src/main/java/org/apache/commons/csv/CSVLexer.java\n \n         //  read the next char and set eol\n         int c = in.read();\n-\n-        /* note: unfortunately isEndOfLine may consumes a character silently.\n-        *       this has no effect outside of the method. so a simple workaround\n-        *       is to call 'readAgain' on the stream...\n-        */\n+        /*\n+         * Note:\n+         * The following call will swallow LF if c == CR.\n+         * But we don't need to know if the last char\n+         * was CR or LF - they are equivalent here.\n+         */\n         boolean eol = isEndOfLine(c);\n-        c = in.readAgain();\n \n         //  empty line detection: eol AND (last char was EOL or beginning)\n         if (emptyLinesIgnored) {\n                 lastChar = c;\n                 c = in.read();\n                 eol = isEndOfLine(c);\n-                c = in.readAgain();\n                 // reached end of file without any content (empty line at the end)\n                 if (isEndOfFile(c)) {\n                     tkn.type = EOF;", "timestamp": 1333022633, "metainfo": ""}