{"sha": "c510c7222f7cd773708d672726b873fefb3f0dc7", "log": "Tidy up; rename shared fields to be clearer  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n  */\n public class CSVParserTest {\n \n-    String code = \"a,b,c,d\\n\"\n+    private static final String CSVINPUT = \"a,b,c,d\\n\"\n                     + \" a , b , 1 2 \\n\"\n                     + \"\\\"foo baar\\\", b,\\n\"\n                     // + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\\\\\"\\\",d,e\\n\";\n                     + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\"\\\"\\\",d,e\\n\";   // changed to use standard CSV escaping\n-    String[][] res = {\n+\n+    private static final String[][] RESULT = {\n             {\"a\", \"b\", \"c\", \"d\"},\n             {\"a\", \"b\", \"1 2\"},\n             {\"foo baar\", \"b\", \"\"},\n \n     @Test\n     public void testGetLine() throws IOException {\n-        CSVParser parser = new CSVParser(new StringReader(code), CSVFormat.DEFAULT.withSurroundingSpacesIgnored(true));\n-        for (String[] re : res) {\n+        CSVParser parser = new CSVParser(new StringReader(CSVINPUT), CSVFormat.DEFAULT.withSurroundingSpacesIgnored(true));\n+        for (String[] re : RESULT) {\n             assertArrayEquals(re, parser.getRecord().values());\n         }\n         \n \n     @Test\n     public void testGetRecords() throws IOException {\n-        CSVParser parser = new CSVParser(new StringReader(code), CSVFormat.DEFAULT.withSurroundingSpacesIgnored(true));\n-        List<CSVRecord> records = parser.getRecords();\n-        assertEquals(res.length, records.size());\n-        assertTrue(records.size() > 0);\n-        for (int i = 0; i < res.length; i++) {\n-            assertArrayEquals(res[i], records.get(i).values());\n+        CSVParser parser = new CSVParser(new StringReader(CSVINPUT), CSVFormat.DEFAULT.withSurroundingSpacesIgnored(true));\n+        List<CSVRecord> records = parser.getRecords();\n+        assertEquals(RESULT.length, records.size());\n+        assertTrue(records.size() > 0);\n+        for (int i = 0; i < RESULT.length; i++) {\n+            assertArrayEquals(RESULT[i], records.get(i).values());\n         }\n     }\n \n         String code = \"\"\n                 + \"a,b\\n\"            // 1)\n                 + \"\\\"\\n\\\",\\\" \\\"\\n\"   // 2)\n-                + \"\\\"\\\",#\\n\"   // 2)\n+                + \"\\\"\\\",#\\n\"         // 3)\n                 ;\n         String[][] res = {\n                 {\"a\", \"b\"},", "timestamp": 1332940691, "metainfo": ""}