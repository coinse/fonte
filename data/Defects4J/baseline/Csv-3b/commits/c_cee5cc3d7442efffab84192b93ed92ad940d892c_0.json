{"sha": "cee5cc3d7442efffab84192b93ed92ad940d892c", "log": "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals   ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n         List<CSVRecord> records = parser.getRecords();\n         assertTrue(records.size() > 0);\n \n-        assertTrue(CSVPrinterTest.equals(res, records));\n+        Utils.compare(\"\", res, records);\n     }\n \n     @Test\n         List<CSVRecord> records = parser.getRecords();\n         assertTrue(records.size() > 0);\n \n-        assertTrue(\"Failed to parse without comments\", CSVPrinterTest.equals(res, records));\n+        Utils.compare(\"Failed to parse without comments\", res, records);\n \n         String[][] res_comments = {\n                 {\"a\", \"b#\"},\n         parser = new CSVParser(code, format);\n         records = parser.getRecords();\n         \n-        assertTrue(\"Failed to parse with comments\",CSVPrinterTest.equals(res_comments, records));\n+        Utils.compare(\"Failed to parse with comments\", res_comments, records);\n     }\n \n     @Test\n--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n         CSVParser parser = new CSVParser(result, format);\n         List<CSVRecord> parseResult = parser.getRecords();\n \n-        if (!equals(lines, parseResult)) {\n-            System.out.println(\"Printer output :\" + printable(result));\n-            assertTrue(false);\n-        }\n-    }\n-\n-    public static boolean equals(String[][] a, List<CSVRecord> b) {\n-        if (a.length != b.size()) {\n-            System.out.println(\"expected length  :\" + a.length);\n-            System.out.println(\"got              :\" + b.size());\n-            return false;\n-        }\n-        for (int i = 0; i < a.length; i++) {\n-            String[] linea = a[i];\n-            String[] lineb = b.get(i).values();\n-            if (linea.length != lineb.length) {\n-                System.out.println(\"[\" + i + \"] expected length  :\" + linea.length);\n-                System.out.println(\"[\" + i + \"] got              :\" + lineb.length);\n-                return false;\n-            }\n-            for (int j = 0; j < linea.length; j++) {\n-                String aval = linea[j];\n-                String bval = lineb[j];\n-                if (!aval.equals(bval)) {\n-                    System.out.println(\"[\" + i + \",\" + j + \"] expected  :\" + printable(aval));\n-                    System.out.println(\"[\" + i + \",\" + j + \"] got       :\" + printable(bval));\n-                    return false;\n-                }\n-            }\n-        }\n-        return true;\n+        Utils.compare(\"Printer output :\" + printable(result), lines, parseResult);\n     }\n \n     public static String printable(String s) {", "timestamp": 1333026583, "metainfo": ""}