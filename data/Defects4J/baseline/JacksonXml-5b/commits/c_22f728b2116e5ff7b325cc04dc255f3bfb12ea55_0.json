{"sha": "22f728b2116e5ff7b325cc04dc255f3bfb12ea55", "log": "Fixed compilation problems following refactoring for 2.4.0.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java\n         return name;\n     }\n \n-    /* Ok, now: following contains quite a bit of duplication.\n-     * But it is still needed since trying to refactor things tends\n-     * to end in infinite loop or stack overflow... we can eventually\n-     * remove these methods once we are certain that core databinding\n-     * never calls these methods (perhaps with 2.3 or at latest 2.4)\n-     */\n-    \n-    @Deprecated\n-    @Override\n-    public String findSerializationName(AnnotatedField a)\n-    {\n-        PropertyName pname = _findXmlName(a);\n-        if (pname != null) {\n-            return pname.getSimpleName();\n-        }\n-        String name = super.findSerializationName(a);\n-        if (name == null) {\n-            if (a.hasAnnotation(JacksonXmlText.class)) {\n-                return \"\";\n-            }\n-        }\n-        return name;\n-    }\n-\n-    @Deprecated\n-    @Override\n-    public String findSerializationName(AnnotatedMethod a)\n-    {\n-        PropertyName pname = _findXmlName(a);\n-        if (pname != null) {\n-            return pname.getSimpleName();\n-        }\n-        String name = super.findSerializationName(a);\n-        if (name == null) {\n-            if (a.hasAnnotation(JacksonXmlText.class)) {\n-                return \"\";\n-            }\n-        }\n-        return name;\n-    }\n-\n     @Override\n     public PropertyName findNameForDeserialization(Annotated a)\n     {\n             }\n         }\n         return name;\n-    }\n-    \n-    @Deprecated\n-    @Override\n-    public String findDeserializationName(AnnotatedField a)\n-    {\n-        PropertyName pname = _findXmlName(a);\n-        if (pname != null) {\n-            return pname.getSimpleName();\n-        }\n-        String name = super.findDeserializationName(a);\n-        if (name == null) {\n-            if (a.hasAnnotation(JacksonXmlText.class)) {\n-                return \"\";\n-            }\n-        }\n-        return name;\n-    }\n-\n-    @Deprecated\n-    @Override\n-    public String findDeserializationName(AnnotatedMethod a)\n-    {\n-        PropertyName pname = _findXmlName(a);\n-        if (pname != null) {\n-            return pname.getSimpleName();\n-        }\n-        String name = super.findDeserializationName(a);\n-        if (name == null) {\n-            if (a.hasAnnotation(JacksonXmlText.class)) {\n-                return \"\";\n-            }\n-        }\n-        return name;\n-    }\n-    \n-    @Deprecated\n-    @Override\n-    public String findDeserializationName(AnnotatedParameter a)\n-    {\n-        PropertyName pname = _findXmlName(a);\n-        if (pname != null) {\n-            // empty name not acceptable...\n-            String local = pname.getSimpleName();\n-            if (local != null && local.length() > 0) {\n-                return local;\n-            }\n-        }\n-        // xml text still has special handling...\n-        String name = super.findDeserializationName(a);\n-        if (name == null) {\n-            if (a.hasAnnotation(JacksonXmlText.class)) {\n-                return \"\";\n-            }\n-        }\n-        return super.findDeserializationName(a);\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n         return xp;\n     }\n     \n-    /*\n-    /**********************************************************\n-    /* Deprecated internal factory methods for parser creation\n-    /**********************************************************\n-     */\n-\n-    //protected IOContext _createContext(Object srcRef, boolean resourceManaged)\n-\n-    /**\n-     * Overridable factory method that actually instantiates desired\n-     * parser.\n-     */\n-    @Override\n-    @Deprecated\n-    protected FromXmlParser _createJsonParser(InputStream in, IOContext ctxt)\n-        throws IOException, JsonParseException\n-    {\n-        return _createParser(in, ctxt);\n-    }\n-\n-    /**\n-     * Overridable factory method that actually instantiates desired\n-     * parser.\n-     */\n-    @Override\n-    @Deprecated\n-    protected FromXmlParser _createJsonParser(Reader r, IOContext ctxt)\n-        throws IOException, JsonParseException\n-    {\n-        return _createParser(r, ctxt);\n-    }\n-\n-    /**\n-     * Overridable factory method that actually instantiates desired\n-     * parser.\n-     */\n-    @Override\n-    @Deprecated\n-    protected FromXmlParser _createJsonParser(byte[] data, int offset, int len, IOContext ctxt)\n-        throws IOException, JsonParseException\n-    {\n-        return _createParser(data, offset, len, ctxt);\n-    }\n \n     /*\n     /**********************************************************************", "timestamp": 1390924223, "metainfo": ""}