{"sha": "75c803722a92fcbf8918138a9f04451bcf43a3c7", "log": "Adding writeRawValue method support to ToXmlGenerator.  This will allow to write 'writteRawValue' code in the same fashion as Json one.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java\n     /* Output method implementations, unprocessed (\"raw\")\n     /**********************************************************\n      */\n+\n+    @Override\n+    public void writeRawValue(String text) throws IOException {\n+        // [dataformat-xml#39]\n+        if (_stax2Emulation) {\n+            _reportUnimplementedStax2(\"writeRawValue\");\n+        }\n+        try {\n+            _verifyValueWrite(\"write raw value\");\n+            if (_nextName == null) {\n+                handleMissingName();\n+            }\n+\n+            if (_nextIsAttribute) {\n+                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text);\n+            } else {\n+                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n+                _xmlWriter.writeRaw(text);\n+                _xmlWriter.writeEndElement();\n+            }\n+        } catch (XMLStreamException e) {\n+            StaxUtil.throwXmlAsIOException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void writeRawValue(String text, int offset, int len) throws IOException {\n+        // [dataformat-xml#39]\n+        if (_stax2Emulation) {\n+            _reportUnimplementedStax2(\"writeRawValue\");\n+        }\n+        try {\n+            _verifyValueWrite(\"write raw value\");\n+            if (_nextName == null) {\n+                handleMissingName();\n+            }\n+\n+            if (_nextIsAttribute) {\n+                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text.substring(offset, offset + len));\n+            } else {\n+                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n+                _xmlWriter.writeRaw(text, offset, len);\n+                _xmlWriter.writeEndElement();\n+            }\n+        } catch (XMLStreamException e) {\n+            StaxUtil.throwXmlAsIOException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void writeRawValue(char[] text, int offset, int len) throws IOException {\n+        // [dataformat-xml#39]\n+        if (_stax2Emulation) {\n+            _reportUnimplementedStax2(\"writeRawValue\");\n+        }\n+        _verifyValueWrite(\"write raw value\");\n+        if (_nextName == null) {\n+            handleMissingName();\n+        }\n+        try {\n+            if (_nextIsAttribute) {\n+                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), new String(text, offset, len));\n+            } else {\n+                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n+                _xmlWriter.writeRaw(text, offset, len);\n+                _xmlWriter.writeEndElement();\n+            }\n+        } catch (XMLStreamException e) {\n+            StaxUtil.throwXmlAsIOException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void writeRawValue(SerializableString text) throws IOException {\n+        _reportUnsupportedOperation();\n+    }\n \n     @Override\n     public void writeRaw(String text) throws IOException", "timestamp": 1494327321, "metainfo": ""}