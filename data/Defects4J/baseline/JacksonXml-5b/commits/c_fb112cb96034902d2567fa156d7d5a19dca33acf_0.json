{"sha": "fb112cb96034902d2567fa156d7d5a19dca33acf", "log": "add a unit test to verify working of manual serialization", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter.java\n         public void writeIndentation(XMLStreamWriter2 sw, int level)\n             throws XMLStreamException\n         {\n-        \tsw.writeRaw(SYSTEM_LINE_SEPARATOR);\n+            sw.writeRaw(SYSTEM_LINE_SEPARATOR);\n             level += level; // 2 spaces per level\n             while (level > SPACE_COUNT) { // should never happen but...\n             \tsw.writeRaw(SPACES, 0, SPACE_COUNT); \n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestSerializationManual.java\n+package com.fasterxml.jackson.dataformat.xml;\n+\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+\n+import javax.xml.namespace.QName;\n+\n+import com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator;\n+\n+public class TestSerializationManual extends XmlTestBase\n+{\n+    public static class Value {\n+        public int num;\n+\n+        public Value(int n) { num = n; }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    public void testIssue54() throws Exception\n+    {\n+        XmlMapper xmlMapper = new XmlMapper();\n+        StringWriter sw = new StringWriter();\n+        ToXmlGenerator generator = (ToXmlGenerator) xmlMapper.getFactory().createGenerator(sw);\n+//        generator.initGenerator();\n+\n+        generator.setNextName(new QName(\"items\"));\n+        generator.writeStartObject();\n+        ArrayList<Value> values = new ArrayList<Value>();\n+        values.add(new Value(13));\n+        values.add(new Value(456));\n+        for (Value value : values) {\n+            generator.writeFieldName(\"foo\");\n+            generator.setNextName(new QName(\"item\"));\n+            generator.writeObject(value);\n+        }\n+        generator.writeEndObject();\n+        generator.close();\n+        \n+        String xml = sw.toString();\n+        assertEquals(\"<items><item><num>13</num></item><item><num>456</num></item></items>\", xml);\n+   }\n+}", "timestamp": 1363060151, "metainfo": ""}