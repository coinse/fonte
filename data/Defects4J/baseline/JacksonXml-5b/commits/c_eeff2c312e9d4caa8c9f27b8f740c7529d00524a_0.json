{"sha": "eeff2c312e9d4caa8c9f27b8f740c7529d00524a", "log": "prepare for 2.7.8", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n             xmlIn = XMLInputFactory.newInstance();\n             // as per [dataformat-xml#190], disable external entity expansion by default\n             xmlIn.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, Boolean.FALSE);\n+            // and ditto wrt [dataformat-xml#211], SUPPORT_DTD\n+            xmlIn.setProperty(XMLInputFactory.SUPPORT_DTD, Boolean.FALSE);\n         }\n         if (xmlOut == null) {\n             xmlOut = XMLOutputFactory.newInstance();\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/SupportDTDDefaultsTest.java\n+package com.fasterxml.jackson.dataformat.xml.failing;\n+\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.dataformat.xml.*;\n+\n+// for [databind-xml#211]\n+public class SupportDTDDefaultsTest extends XmlTestBase\n+{\n+    public void testDTDAttempt() throws Exception\n+    {\n+        XmlMapper mapper = new XmlMapper();\n+        String XML = \"<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE foo SYSTEM 'http://127.0.0.1:8001' [ ]>\\n\"\n+                +\"<foo/>\";\n+\n+        try {\n+            /*Map<String, String> info =*/ mapper.readValue(XML, Map.class);\n+            //At this point a GET request would have been sent to localhost:8001. You will see a Connection Refused in case you don't have a server listening there.\n+        } catch (Exception e){\n+            fail(\"Should not try to resolve external DTD subset: \"+e);\n+        }\n+    }\n+}", "timestamp": 1474945878, "metainfo": ""}