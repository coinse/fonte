{"sha": "d9892b05c19f21a09802334f5bb6f169ac11e246", "log": "more cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java\n             Class<?> cls = type.getRawClass();\n             // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n             // (actually, ditto for char[]; thought to be a String)\n-            if (cls == byte[].class || cls == byte[].class) {\n+            if (cls == byte[].class || cls == char[].class) {\n                 return false;\n             }\n             // issue#5: also, should not add wrapping for Maps\n \n     public static boolean isIndexedType(Class<?> cls)\n     {\n-        return (cls.isArray() && cls != byte[].class) || Collection.class.isAssignableFrom(cls);\n+        return (cls.isArray() && cls != byte[].class && cls != char[].class)\n+                || Collection.class.isAssignableFrom(cls);\n     }\n }\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestUnwrappedDeserIssue86.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestUnwrappedDeserIssue86.java\n import java.util.Arrays;\n import java.util.List;\n \n-import junit.framework.Assert;\n-\n import org.junit.Test;\n \n import com.fasterxml.jackson.annotation.JsonInclude.Include;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n \n-public class TestUnwrappedDeserIssue86\n+public class TestUnwrappedDeserIssue86 extends XmlTestBase\n {\n     @JacksonXmlRootElement(localName = \"test\")\n     public static class Issue86 {\n             \"</test>\" +\n         \"</test>\";\n \n-    final Issue86 before = new Issue86(\n-        \"0\",\n-        Arrays.asList(\n-            new Issue86(\n-                \"0.1\",\n+    final Issue86 before = new Issue86(\"0\",\n+        Arrays.asList(new Issue86(\"0.1\",\n+                Arrays.asList(new Issue86(\"0.1.1\", null))),\n+            new Issue86(\"0.2\", null),\n+            new Issue86(\"0.3\",\n                 Arrays.asList(\n-                    new Issue86(\n-                        \"0.1.1\",\n-                        null))),\n-            new Issue86(\n-                \"0.2\",\n-                null),\n-            new Issue86(\n-                \"0.3\",\n-                Arrays.asList(\n-                    new Issue86(\n-                        \"0.3.1\",\n-                        null)))));\n+                    new Issue86(\"0.3.1\", null)))));\n \n     final XmlMapper mapper = new XmlMapper();\n     mapper.setSerializationInclusion(Include.NON_NULL);\n \n     final String xml = mapper.writeValueAsString(before);\n-    Assert.assertEquals(source, xml);\n+    assertEquals(source, xml);\n \n     final Issue86 after = mapper.readValue(xml, Issue86.class);\n-    Assert.assertEquals(before, after);\n+    assertEquals(before, after);\n   }\n }", "timestamp": 1412655310, "metainfo": ""}