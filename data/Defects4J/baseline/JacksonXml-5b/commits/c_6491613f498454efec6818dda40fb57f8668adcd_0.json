{"sha": "6491613f498454efec6818dda40fb57f8668adcd", "log": "Add a unit test for #72", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestTextValue.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestTextValue.java\n import java.io.IOException;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.dataformat.xml.annotation.*;\n \n public class TestTextValue extends XmlTestBase\n {\n-    /*\n-    /**********************************************************\n-    /* Helper types\n-    /**********************************************************\n-     */\n-\n     static class Simple\n     {\n         @JacksonXmlProperty(isAttribute=true)\n         public String text = \"something\";\n     }\n \t\n-    // Issue-24:\n+    // [Issue#24]\n \n     static class Main {\n         @JsonProperty(\"com.test.stack\") public Stack stack;\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestTextValue.java\n+package com.fasterxml.jackson.dataformat.xml.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.annotation.*;\n+\n+public class TestTextValue extends XmlTestBase\n+{\n+    static class TextOnlyBean\n+    {\n+        @JacksonXmlText\n+        protected String textValue;\n+\n+        public TextOnlyBean() { }\n+        public TextOnlyBean(String str, boolean foo) { textValue = str; }\n+    }\n+\n+    @JsonPropertyOrder({ \"a\", \"b\" })\n+    static class TextOnlyWrapper\n+    {\n+        public TextOnlyBean a, b;\n+\n+        public TextOnlyWrapper() { }\n+        public TextOnlyWrapper(String a, String b) {\n+            this.a = new TextOnlyBean(a, true);\n+            this.b = new TextOnlyBean(b, true);\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    // [Issue#72]\n+    public void testTextOnlyPojo() throws Exception\n+    {\n+        XmlMapper mapper = xmlMapper(true);\n+        TextOnlyWrapper input = new TextOnlyWrapper(\"foo\", \"bar\");\n+        // serialization should work fine\n+        String xml = mapper.writeValueAsString(input);\n+        assertEquals(\"<TextOnlyWrapper><a>foo</a><b>bar</b></TextOnlyWrapper>\", xml);\n+        // but how about deser?\n+        TextOnlyWrapper result = mapper.readValue(xml, TextOnlyWrapper.class);\n+        assertNotNull(result);\n+        assertEquals(\"foo\", result.a.textValue);\n+        assertEquals(\"bar\", result.b.textValue);\n+    }\n+}", "timestamp": 1376621365, "metainfo": ""}