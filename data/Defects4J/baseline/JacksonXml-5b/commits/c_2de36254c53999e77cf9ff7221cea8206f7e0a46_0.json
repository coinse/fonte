{"sha": "2de36254c53999e77cf9ff7221cea8206f7e0a46", "log": "warnings cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n         return _binaryValue;\n     }\n \n+    @SuppressWarnings(\"resource\")\n     protected byte[] _decodeBase64(Base64Variant b64variant) throws IOException\n     {\n         ByteArrayBuilder builder = _getByteArrayBuilder();\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n             }\n         }\n \n-        @SuppressWarnings(\"resource\")\n         final ToXmlGenerator xmlGen = (jgen instanceof ToXmlGenerator) ? (ToXmlGenerator) jgen : null;\n         // Ok then; addition we want to do is to add wrapper element, and that's what happens here\n         // 19-Aug-2013, tatu: ... except for those nasty 'convertValue()' calls...\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/RoundtripContentTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/RoundtripContentTest.java\n \n //System.err.println(\"DEBUG: Xml == \"+xml);\n \n-        ObjectReader r = MAPPER.reader(MediaItem.class);\n+        ObjectReader r = MAPPER.readerFor(MediaItem.class);\n         MediaItem result = r.readValue(xml);\n         assertNotNull(result);\n         assertEquals(content.getTitle(), result.getContent().getTitle());\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/RootListHandlingTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/RootListHandlingTest.java\n         // and then try reading back\n         JavaType resListType = xmlMapper.getTypeFactory()\n                 .constructCollectionType(List.class, SampleResource.class);\n-        Object ob = xmlMapper.reader(resListType).readValue(xml);\n+        Object ob = xmlMapper.readerFor(resListType).readValue(xml);\n         assertNotNull(ob);\n \n //      System.err.println(\"XML -> \"+xmlMapper.writerWithDefaultPrettyPrinter().writeValueAsString(ob));\n         }\n \n         // and then try reading back\n-        SampleResource[] result = xmlMapper.reader(SampleResource[].class).readValue(xml);\n+        SampleResource[] result = xmlMapper.readerFor(SampleResource[].class).readValue(xml);\n         assertNotNull(result);\n \n //      System.err.println(\"XML -> \"+xmlMapper.writerWithDefaultPrettyPrinter().writeValueAsString(ob));\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/misc/UnwrappingWithXMLTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/misc/UnwrappingWithXMLTest.java\n     {\n         final String XML = \"<Unwrapping><name>Joe</name><loc.x>15</loc.x><loc.y>27</loc.y></Unwrapping>\";\n         ObjectMapper mapper = xmlMapper(false);\n-        Unwrapping wrapper = mapper.reader(Unwrapping.class).readValue(XML);\n+        Unwrapping wrapper = mapper.readerFor(Unwrapping.class).readValue(XML);\n         assertNotNull(wrapper);\n         assertNotNull(wrapper.location);\n         assertEquals(15, wrapper.location.x);\n     {\n         final String XML = \"<UnwrappingWithAttributes name=\\\"Joe\\\" loc.x=\\\"15\\\" loc.y=\\\"27\\\"/>\";\n         ObjectMapper mapper = xmlMapper(false);\n-        UnwrappingWithAttributes wrapper = mapper.reader(UnwrappingWithAttributes.class).readValue(XML);\n+        UnwrappingWithAttributes wrapper = mapper.readerFor(UnwrappingWithAttributes.class).readValue(XML);\n         assertNotNull(wrapper);\n         assertNotNull(wrapper.location);\n         assertEquals(15, wrapper.location.x);\n     {\n         final String XML = \"<UnwrappingSubWithAttributes name=\\\"Joe\\\" loc.x=\\\"15\\\"><loc.y>27</loc.y></UnwrappingSubWithAttributes>\";\n         ObjectMapper mapper = xmlMapper(false);\n-        UnwrappingSubWithAttributes wrapper = mapper.reader(UnwrappingSubWithAttributes.class).readValue(XML);\n+        UnwrappingSubWithAttributes wrapper = mapper.readerFor(UnwrappingSubWithAttributes.class).readValue(XML);\n         assertNotNull(wrapper);\n         assertNotNull(wrapper.location);\n         assertEquals(15, wrapper.location.x);\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/stream/FormatDetectionTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/stream/FormatDetectionTest.java\n         ObjectMapper mapper = new ObjectMapper();\n         XmlMapper xmlMapper = new XmlMapper();\n \n-        ObjectReader detecting = mapper.reader(POJO.class);\n+        ObjectReader detecting = mapper.readerFor(POJO.class);\n         detecting = detecting\n-                .withFormatDetection(detecting, xmlMapper.reader(POJO.class));\n+                .withFormatDetection(detecting, xmlMapper.readerFor(POJO.class));\n         POJO pojo = detecting.readValue(utf8Bytes(\"<POJO><y>3</y><x>1</x></POJO>\"));\n         assertNotNull(pojo);\n         assertEquals(1, pojo.x);\n         list.v.add(new POJO(3, 4));\n         String xml = xmlMapper.writeValueAsString(list);\n \n-        ObjectReader detecting = mapper.reader(ListPOJO.class);\n+        ObjectReader detecting = mapper.readerFor(ListPOJO.class);\n         ListPOJO resultList = detecting\n-                .withFormatDetection(detecting, xmlMapper.reader(ListPOJO.class))\n+                .withFormatDetection(detecting, xmlMapper.readerFor(ListPOJO.class))\n                 .readValue(utf8Bytes(xml));\n         assertNotNull(resultList);\n         assertEquals(2, resultList.v.size());", "timestamp": 1432017500, "metainfo": ""}