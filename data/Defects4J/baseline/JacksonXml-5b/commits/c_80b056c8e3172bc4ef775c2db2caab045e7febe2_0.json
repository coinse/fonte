{"sha": "80b056c8e3172bc4ef775c2db2caab045e7febe2", "log": "Fixed [Issue#48], problems with `XmlMapper.copy()`", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n         _xmlInputFactory = xmlIn;\n         _xmlOutputFactory = xmlOut;\n     }\n+\n+\n+    protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n+            XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n+            String nameForTextElem)\n+    {\n+        super(oc);\n+        _xmlParserFeatures = xpFeatures;\n+        _xmlGeneratorFeatures = xgFeatures;\n+        _cfgNameForTextElement = nameForTextElem;\n+        if (xmlIn == null) {\n+            xmlIn = XMLInputFactory.newInstance();\n+        }\n+        if (xmlOut == null) {\n+            xmlOut = XMLOutputFactory.newInstance();\n+        }\n+        _initFactories(xmlIn, xmlOut);\n+        _xmlInputFactory = xmlIn;\n+        _xmlOutputFactory = xmlOut;\n+    }\n+    /*\n+        return new XmlFactory(_xmlParserFeatures, _xmlGeneratorFeatures,\n+                _xmlInputFactory, _xmlOutputFactory,\n+                );\n+     */\n     \n     protected void _initFactories(XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n     {\n         _checkInvalidCopy(XmlFactory.class);\n         // note: as with base class, must NOT copy mapper reference\n         // as to XML factories... must pass as-is, unfortunately?\n-        return new XmlFactory(_xmlInputFactory, _xmlOutputFactory);\n+        return new XmlFactory(null, _xmlParserFeatures, _xmlGeneratorFeatures,\n+                _xmlInputFactory, _xmlOutputFactory,\n+                _cfgNameForTextElement);\n     }\n \n     @Override\n     /**********************************************************\n      */\n     \n+    /**\n+     * @since 2.1\n+     */\n     public void setXMLTextElementName(String name) {\n         _cfgNameForTextElement = name;\n+    }\n+\n+    /**\n+     * @since 2.2\n+     */\n+    public String getXMLTextElementName() {\n+        return _cfgNameForTextElement;\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n             registerModule(module);\n         }\n     }\n-\n+    \n     // @since 2.1\n     @Override\n     public XmlMapper copy()\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestVersions.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestVersions.java\n \n import com.fasterxml.jackson.core.Version;\n import com.fasterxml.jackson.core.Versioned;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n \n import com.fasterxml.jackson.dataformat.xml.XmlFactory;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator;\n \n public class TestVersions extends XmlTestBase\n {\n     public void testMapperCopy()\n     {\n         XmlMapper mapper1 = new XmlMapper();\n-        ObjectMapper mapper2 = mapper1.copy();\n+        mapper1.setXMLTextElementName(\"foo\");\n+        mapper1.configure(ToXmlGenerator.Feature.WRITE_XML_DECLARATION, true);\n+        \n+        XmlMapper mapper2 = mapper1.copy();\n         assertNotSame(mapper1, mapper2);\n-        assertNotSame(mapper1.getFactory(), mapper2.getFactory());\n-        assertEquals(XmlFactory.class, mapper2.getFactory().getClass());\n+        XmlFactory xf1 = mapper1.getFactory();\n+        XmlFactory xf2 = mapper2.getFactory();\n+        assertNotSame(xf1, xf2);\n+        assertEquals(XmlFactory.class, xf2.getClass());\n+\n+        // and [Issue#48] as well, incomplete copy...\n+        assertEquals(xf1.getXMLTextElementName(), xf2.getXMLTextElementName());\n+        assertEquals(xf1._xmlGeneratorFeatures, xf2._xmlGeneratorFeatures);\n+        assertEquals(xf1._xmlParserFeatures, xf2._xmlParserFeatures);\n     }\n     \n     /*", "timestamp": 1354295788, "metainfo": ""}