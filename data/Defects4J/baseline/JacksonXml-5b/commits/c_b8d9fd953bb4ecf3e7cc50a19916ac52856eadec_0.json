{"sha": "b8d9fd953bb4ecf3e7cc50a19916ac52856eadec", "log": "Add test for #121", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestEnums.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestEnums.java\n package com.fasterxml.jackson.dataformat.xml.deser;\n \n-import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n-import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.*;\n \n public class TestEnums extends XmlTestBase\n {\n-    /*\n-    /**********************************************************\n-    /* Helper types\n-    /**********************************************************\n-     */\n-\n     static enum TestEnum { A, B, C; }\n \n     static class EnumBean\n     /**********************************************************\n      */\n \n+    private final XmlMapper MAPPER = new XmlMapper();\n+    \n     public void testEnum() throws Exception\n     {\n-        XmlMapper mapper = new XmlMapper();\n-        String str = mapper.writeValueAsString(new EnumBean(TestEnum.B));\n-        EnumBean result = mapper.readValue(str, EnumBean.class);\n+        String xml = MAPPER.writeValueAsString(new EnumBean(TestEnum.B));\n+        EnumBean result = MAPPER.readValue(xml, EnumBean.class);\n         assertNotNull(result);\n         assertEquals(TestEnum.B, result.value);\n     }\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestEnums.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestEnums.java\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n+\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n \n     /**********************************************************\n      */\n \n+    private final XmlMapper MAPPER = new XmlMapper();\n+    \n     public void testUntypedEnum() throws Exception\n     {\n         ObjectMapper mapper = new XmlMapper();\n \n         assertEquals(TestEnum.B, result.value);\n     }\n+\n+    // [dataformat-xml#121]\n+    public void testRootEnumIssue121() throws Exception\n+    {\n+        String xml = MAPPER.writeValueAsString(TestEnum.B);\n+        TestEnum result = MAPPER.readValue(xml, TestEnum.class);\n+        assertNotNull(result);\n+        assertEquals(TestEnum.B, result);\n+    }\n }", "timestamp": 1412619124, "metainfo": ""}