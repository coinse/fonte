{"sha": "79a4b57f2bbe08ce46e6dabb0a8b76f4a787141c", "log": "Fix #204", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n             _parsingContext = _parsingContext.getParent();\n             _namesToWrap = _parsingContext.getNamesToWrap();\n             break;\n-            \n         case XmlTokenStream.XML_ATTRIBUTE_NAME:\n             // If there was a chance of leaf node, no more...\n             if (_mayBeLeaf) {\n             }\n             break;\n         case XmlTokenStream.XML_ATTRIBUTE_VALUE:\n-            _currText = _xmlTokens.getText();\n             _currToken = JsonToken.VALUE_STRING;\n-            break;\n+            return (_currText = _xmlTokens.getText());\n         case XmlTokenStream.XML_TEXT:\n             _currText = _xmlTokens.getText();\n             if (_mayBeLeaf) {\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/stream/XmlParserNextXxxTest.java\n+package com.fasterxml.jackson.dataformat.xml.stream;\n+\n+import java.io.*;\n+\n+import com.fasterxml.jackson.core.*;\n+\n+import com.fasterxml.jackson.dataformat.xml.XmlFactory;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser;\n+\n+public class XmlParserNextXxxTest extends XmlTestBase\n+{\n+    protected JsonFactory _jsonFactory;\n+    protected XmlFactory _xmlFactory;\n+\n+    // let's actually reuse XmlMapper to make things bit faster\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        _xmlFactory = new XmlFactory();\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    // [dataformat-xml#204]\n+    public void testXmlAttributesWithNextTextValue() throws Exception\n+    {\n+        final String XML = \"<data max=\\\"7\\\" offset=\\\"9\\\"/>\";\n+\n+        FromXmlParser xp = (FromXmlParser) _xmlFactory.createParser(new StringReader(XML));\n+\n+        // First: verify handling without forcing array handling:\n+        assertToken(JsonToken.START_OBJECT, xp.nextToken()); // <data>\n+        assertToken(JsonToken.FIELD_NAME, xp.nextToken()); // <max>\n+        assertEquals(\"max\", xp.getCurrentName());\n+\n+        assertEquals(\"7\", xp.nextTextValue());\n+\n+        assertToken(JsonToken.FIELD_NAME, xp.nextToken()); // <offset>\n+        assertEquals(\"offset\", xp.getCurrentName());\n+\n+        assertEquals(\"offset\", xp.getText());\n+\n+        assertEquals(\"9\", xp.nextTextValue());\n+\n+        assertEquals(\"9\", xp.getText());\n+\n+        assertToken(JsonToken.END_OBJECT, xp.nextToken()); // </data>\n+        xp.close();\n+    }\n+}", "timestamp": 1471558021, "metainfo": ""}