{"sha": "ad131914cb64fbdeae9cce1c31ed0d3495e6bab0", "log": "Add explicit override for JsonGenerator.getOutputBuffered()", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n      * XML indentation differs from JSON indentation, thereby\n      * need to change default pretty-printer\n      */\n+    @Deprecated // since 2.6\n     @Override\n     protected PrettyPrinter _defaultPrettyPrinter() {\n         return new DefaultXmlPrettyPrinter();\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n-    \n+\n+    /*\n+    /**********************************************************\n+    /* Overridden methods, configuration\n+    /**********************************************************\n+     */\n+\n+    /**\n+     * Standard JSON indenter does not work well with XML, use\n+     * default XML indenter instead.\n+     *<p>\n+     * !!! TODO: same as implementation in core 2.6; override may be\n+     * removed from 2.7\n+     */\n+    @Override\n+    public final JsonGenerator useDefaultPrettyPrinter()\n+    {\n+        // related to [dataformat-xml#136], need to verify:\n+        if (_cfgPrettyPrinter != null) {\n+            return this;\n+        }\n+        return setPrettyPrinter(_constructDefaultPrettyPrinter());\n+    }\n+\n+    @Override\n+    protected PrettyPrinter _constructDefaultPrettyPrinter() {\n+        return new DefaultXmlPrettyPrinter();\n+    }\n+\n+    @Override\n+    public JsonGenerator setPrettyPrinter(PrettyPrinter pp) {\n+        _cfgPrettyPrinter = pp;\n+        _xmlPrettyPrinter = (pp instanceof XmlPrettyPrinter) ?\n+               (XmlPrettyPrinter) pp : null;\n+        return this;\n+    }\n+\n+    @Override\n+    public Object getOutputTarget() {\n+        // Stax2 does not expose underlying target, so best we can do is to return\n+        // the Stax XMLStreamWriter instance:\n+        return _originalXmlWriter;\n+    }\n+\n+    /**\n+     * Stax2 does not expose buffered content amount, so we can only return\n+     * <code>-1</code> from here\n+     */\n+    @Override\n+    public int getOutputBuffered() {\n+        return -1;\n+    }\n+\n     /*\n     /**********************************************************\n     /* Extended API, configuration\n     }\n \n     @Override\n-    public void writeNumber(String encodedValue) throws IOException,JsonGenerationException, UnsupportedOperationException\n+    public void writeNumber(String encodedValue) throws IOException, UnsupportedOperationException\n     {\n         writeString(encodedValue);\n     }\n             _reportError(\"Can not \"+typeMsg+\", expecting field name\");\n         }\n     }\n-\n-    /**\n-     * Standard JSON indenter does not work well with XML, use\n-     * default XML indenter instead.\n-     *<p>\n-     * !!! TODO: same as implementation in core 2.6; override may be\n-     * removed from 2.7\n-     */\n-    @Override\n-    public final JsonGenerator useDefaultPrettyPrinter()\n-    {\n-        // related to [dataformat-xml#136], need to verify:\n-        if (_cfgPrettyPrinter != null) {\n-            return this;\n-        }\n-        return setPrettyPrinter(_constructDefaultPrettyPrinter());\n-    }\n-\n-    @Override\n-    protected PrettyPrinter _constructDefaultPrettyPrinter() {\n-        return new DefaultXmlPrettyPrinter();\n-    }\n-\n-    @Override\n-    public JsonGenerator setPrettyPrinter(PrettyPrinter pp) {\n-        _cfgPrettyPrinter = pp;\n-        _xmlPrettyPrinter = (pp instanceof XmlPrettyPrinter) ?\n-        \t\t(XmlPrettyPrinter) pp : null;\n-        return this;\n-    }\n-\n \n     /*\n     /**********************************************************", "timestamp": 1432766329, "metainfo": ""}