{"sha": "2c88665e5377d68b5d8e36af0ca58a53e7ce4251", "log": "add a unit test", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/unwrapped/TestNestedUnwrappedLists.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/unwrapped/TestNestedUnwrappedLists.java\n     // // // Test\n \n     static class ServiceDelivery {\n-        public Date responseTimestamp;\n+        public String responseTimestamp;\n         public List<VehicleMonitoringDelivery> vehicleMonitoringDelivery;    \n     }\n \n     static class VehicleMonitoringDelivery {\n-        public Date responseTimestamp;\n+        public String responseTimestamp;\n         public Date validUntil;\n         public List<VehicleActivity> vehicleActivity;\n     }\n \n     static class VehicleActivity {\n-        public Date recordedAtTime;    \n+        public String recordedAtTime;    \n     }\n \n+    /*\n+    /**********************************************************************\n+    /* Set up\n+    /**********************************************************************\n+     */\n+\n+    protected XmlMapper _xmlMapper;\n+\n+    // let's actually reuse XmlMapper to make things bit faster\n+    @Override\n+    public void setUp() throws Exception\n+    {\n+        super.setUp();\n+        JacksonXmlModule module = new JacksonXmlModule();\n+        module.setDefaultUseWrapper(false);\n+        _xmlMapper = new XmlMapper(module);\n+        _xmlMapper.setPropertyNamingStrategy(new PropertyNamingStrategy.PascalCaseStrategy());\n+        _xmlMapper.enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n+    }\n+    \n     /*\n     /**********************************************************************\n     /* Unit tests\n \n     public void testNested1_2() throws Exception\n     {\n-        JacksonXmlModule module = new JacksonXmlModule();\n-        module.setDefaultUseWrapper(false);\n-        XmlMapper mapper = new XmlMapper(module);\n-        mapper.setPropertyNamingStrategy(new PropertyNamingStrategy.PascalCaseStrategy());\n-        mapper.enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n         final String XML =\n \"<ServiceDelivery>\\n\"\n +\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n +\"</ServiceDelivery>\\n\"\n                 ;\n         \n-        ServiceDelivery svc = mapper.readValue(XML, ServiceDelivery.class);\n+        ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\n         assertNotNull(svc);\n         assertNotNull(svc.vehicleMonitoringDelivery);\n         assertEquals(1, svc.vehicleMonitoringDelivery.size());\n         VehicleMonitoringDelivery del = svc.vehicleMonitoringDelivery.get(0);\n+        assertEquals(\"2012-09-12T09:28:17.213-04:00\", del.responseTimestamp);\n         assertNotNull(del);\n         assertNotNull(del.vehicleActivity);\n         assertEquals(2, del.vehicleActivity.size());\n+        VehicleActivity act = del.vehicleActivity.get(1);\n+        assertNotNull(act);\n+        assertEquals(\"2013-09-12T09:29:07.536-04:00\", act.recordedAtTime);\n     }\n \n+    public void testNested1_2b() throws Exception\n+    {\n+        final String XML =\n+\"<ServiceDelivery>\\n\"\n++\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n++\"  <VehicleMonitoringDelivery>\\n\"\n++\"    <VehicleActivity>\\n\"\n++\"      <RecordedAtTime>2012-09-12T09:28:07.536-04:00</RecordedAtTime>\\n\"\n++\"    </VehicleActivity>\\n\"\n++\"    <VehicleActivity>\\n\"\n++\"      <RecordedAtTime>2013-09-12T09:29:07.536-04:00</RecordedAtTime>\\n\"\n++\"    </VehicleActivity>\\n\"\n++\"    <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n++\"    <ValidUntil>2012-09-12T09:29:17.213-04:00</ValidUntil>\\n\"\n++\"  </VehicleMonitoringDelivery>\\n\"\n++\"</ServiceDelivery>\\n\"\n+                ;\n+        \n+        ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\n+        assertNotNull(svc);\n+        assertNotNull(svc.vehicleMonitoringDelivery);\n+        assertEquals(1, svc.vehicleMonitoringDelivery.size());\n+        VehicleMonitoringDelivery del = svc.vehicleMonitoringDelivery.get(0);\n+        assertEquals(\"2012-09-12T09:28:17.213-04:00\", del.responseTimestamp);\n+        assertNotNull(del);\n+        assertNotNull(del.vehicleActivity);\n+        assertEquals(2, del.vehicleActivity.size());\n+        VehicleActivity act = del.vehicleActivity.get(1);\n+        assertNotNull(act);\n+        assertEquals(\"2013-09-12T09:29:07.536-04:00\", act.recordedAtTime);\n+    }\n+    \n     public void testNested2_1() throws Exception\n     {\n-        JacksonXmlModule module = new JacksonXmlModule();\n-        module.setDefaultUseWrapper(false);\n-        XmlMapper mapper = new XmlMapper(module);\n-        mapper.setPropertyNamingStrategy(new PropertyNamingStrategy.PascalCaseStrategy());\n         final String XML =\n \"<ServiceDelivery>\\n\"\n +\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n +\"</ServiceDelivery>\\n\"\n                 ;\n         \n-        ServiceDelivery svc = mapper.readValue(XML, ServiceDelivery.class);\n+        ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\n         assertNotNull(svc);\n         assertNotNull(svc.vehicleMonitoringDelivery);\n         assertEquals(2, svc.vehicleMonitoringDelivery.size());", "timestamp": 1347844257, "metainfo": ""}