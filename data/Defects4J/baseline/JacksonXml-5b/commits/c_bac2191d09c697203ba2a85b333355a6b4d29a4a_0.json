{"sha": "bac2191d09c697203ba2a85b333355a6b4d29a4a", "log": "Add a test for #55", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/unwrapped/TestListAnnotationSharing.java\n+package com.fasterxml.jackson.dataformat.xml.unwrapped;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+\n+// for [Issue#55]\n+public class TestListAnnotationSharing extends XmlTestBase\n+{\n+    static class Wrapper {\n+        @JacksonXmlElementWrapper(localName = \"Points\", useWrapping = true)\n+        @JsonProperty(\"Point\")\n+        private List<Point> points = new ArrayList<Point>();\n+\n+        public List<Point> getPoints() {\n+            return points;\n+        }\n+    }\n+\n+    static class Point {\n+        public int x, y;\n+\n+        public Point() { }\n+        public Point(int x, int y) { this.x = x;\n+            this.y = y;\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    private final XmlMapper MAPPER = new XmlMapper();\n+    \n+     public void testAnnotationSharing() throws Exception\n+     {\n+         Wrapper input = new Wrapper();\n+         input.points.add(new Point(1, 2));\n+         String xml = MAPPER.writeValueAsString(input);\n+\n+         assertEquals(\"<Wrapper><Points><Point><x>1</x><y>2</y></Point></Points></Wrapper>\", xml);\n+\n+         // and then back\n+         Wrapper result = MAPPER.readValue(xml, Wrapper.class);\n+         assertEquals(1, result.points.size());\n+     }\n+    \n+}", "timestamp": 1363145027, "metainfo": ""}