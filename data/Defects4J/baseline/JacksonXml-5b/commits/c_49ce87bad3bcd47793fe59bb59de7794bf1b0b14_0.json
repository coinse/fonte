{"sha": "49ce87bad3bcd47793fe59bb59de7794bf1b0b14", "log": "Try to reproduce #137, no fail yet.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/ser/TestIndentation.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/ser/TestIndentation.java\n     // Verify [JACKSON-444], Issue #1\n     public void testSimpleStringBean() throws Exception\n     {\n-        String xml = _xmlMapper.writeValueAsString(new StringWrapperBean(\"abc\")); \n+        StringWrapperBean input = new StringWrapperBean(\"abc\");\n+        String xml = _xmlMapper.writeValueAsString(input); \n+\n         // should have at least one linefeed, space...\n         if (xml.indexOf('\\n') < 0 || xml.indexOf(' ') < 0) {\n-        \tfail(\"No indentation: XML == \"+xml);\n+            fail(\"No indentation: XML == \"+xml);\n         }\n         // Let's verify we get similar stuff back, first:\n         StringWrapperBean result = _xmlMapper.readValue(xml, StringWrapperBean.class);\n         assertNotNull(result);\n         assertEquals(\"abc\", result.string.str);\n \n+        // Try via ObjectWriter as well\n+        xml = _xmlMapper.writerWithDefaultPrettyPrinter().writeValueAsString(input);\n+        if (xml.indexOf('\\n') < 0 || xml.indexOf(' ') < 0) {\n+            fail(\"No indentation: XML == \"+xml);\n+        }\n+        result = _xmlMapper.readValue(xml, StringWrapperBean.class);\n+        assertNotNull(result);\n+        assertEquals(\"abc\", result.string.str);\n     }\n \n     public void testSimpleIntBean() throws Exception", "timestamp": 1423871081, "metainfo": ""}