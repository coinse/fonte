{"sha": "11f400f1475d9e9657d7f8570dc6d3afc7d2941a", "log": "Add a unit test (failing) for [Issue#38]", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/XmlTestBase.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/XmlTestBase.java\n         br.close();\n         return sb.toString();\n     }\n+\n+    public String jaxbSerialized(Object ob) throws Exception\n+    {\n+        StringWriter sw = new StringWriter();\n+        javax.xml.bind.JAXB.marshal(ob, sw);\n+        sw.close();\n+        return sw.toString();\n+    }\n }\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestUnwrappedRootList.java\n+package com.fasterxml.jackson.dataformat.xml.failing;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.databind.AnnotationIntrospector;\n+import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+import com.fasterxml.jackson.dataformat.xml.*;\n+\n+public class TestUnwrappedRootList extends XmlTestBase\n+{\n+    public static class SampleResource {\n+        private Long id;\n+        private String name;\n+        private String description;\n+\n+        public Long getId() {\n+            return id;\n+        }\n+\n+        public void setId(Long id) {\n+            this.id = id;\n+        }\n+\n+        public String getName() {\n+            return name;\n+        }\n+\n+        public void setName(String name) {\n+            this.name = name;\n+        }\n+\n+        public String getDescription() {\n+            return description;\n+        }\n+\n+        public void setDescription(String description) {\n+            this.description = description;\n+        }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    // for [Issue#38] -- root-level Collections not supported\n+    public void testListSerialization() throws Exception\n+    {\n+        JacksonXmlModule module = new JacksonXmlModule();\n+        module.setDefaultUseWrapper(false);\n+        XmlMapper xmlMapper = new XmlMapper(module);\n+        AnnotationIntrospector introspector = new JacksonAnnotationIntrospector();\n+        xmlMapper.setAnnotationIntrospector(introspector);\n+        \n+        SampleResource r1 = new SampleResource();\n+        r1.setId(123L);\n+        r1.setName(\"Albert\");\n+        r1.setDescription(\"desc\");\n+\n+        SampleResource r2 = new SampleResource();\n+        r2.setId(123L);\n+        r2.setName(\"William\");\n+        r2.setDescription(\"desc2\");\n+\n+        List<SampleResource> l = new ArrayList<SampleResource>();\n+        l.add(r1);\n+        l.add(r2);\n+\n+        // to see what JAXB might do, uncomment:\n+//        System.out.println(\"By JAXB: \"+jaxbSerialized(l));\n+        \n+        String result = xmlMapper.writeValueAsString(l);\n+        assertNotNull(result);\n+\n+        // TODO: verify actual contents\n+        \n+//        assertEquals(\"<x></x>\", result);\n+    }\n+}", "timestamp": 1349553971, "metainfo": ""}