{"sha": "c57a1cb37f6663b7d3a7d74caafc13b6099b0a50", "log": "stylistic changes", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestListDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestListDeserialization.java\n \n     private final XmlMapper MAPPER = new XmlMapper();\n     {\n-    \t// easier for eye:\n-    \tMAPPER.enable(SerializationFeature.INDENT_OUTPUT);\n+        // easier for eye:\n+        MAPPER.enable(SerializationFeature.INDENT_OUTPUT);\n     }\n \n     /* Issue#17 [https://github.com/FasterXML/jackson-dataformat-xml/issues/17]\n      */\n     public void testWrappedList() throws Exception\n     {\n-    \tPerson p = new Person( \"Name\", 30 );\n-    \tp.notes.add(\"note 1\");\n-    \tp.notes.add(\"note 2\");\n-    \tString xml = MAPPER.writeValueAsString( p );\n-    \tPerson result = MAPPER.readValue(xml, Person.class);\n-    \tassertNotNull(result);\n-    \tassertEquals(\"Name\", result.name);\n-    \tassertEquals(30, result.age);\n-    \tassertEquals(2, result.notes.size());\n-    \tassertEquals(\"note 1\", result.notes.get(0));\n-    \tassertEquals(\"note 2\", result.notes.get(1));\n+        Person p = new Person( \"Name\", 30 );\n+        p.notes.add(\"note 1\");\n+        p.notes.add(\"note 2\");\n+        String xml = MAPPER.writeValueAsString( p );\n+        Person result = MAPPER.readValue(xml, Person.class);\n+        assertNotNull(result);\n+        assertEquals(\"Name\", result.name);\n+        assertEquals(30, result.age);\n+        assertEquals(2, result.notes.size());\n+        assertEquals(\"note 1\", result.notes.get(0));\n+        assertEquals(\"note 2\", result.notes.get(1));\n     }\n \n     public void testWrappedListWithGetters() throws Exception\n                 ListBeanWrapped.class);\n         assertNotNull(bean);\n         assertNotNull(bean.values);\n-        assertEquals(2, bean.values.size());\n+        if (bean.values.size() < 2) { // preliminary check\n+            fail(\"List should have 2 entries, had \"+bean.values.size());\n+        }\n         assertEquals(Integer.valueOf(1), bean.values.get(0));\n         assertEquals(Integer.valueOf(2), bean.values.get(1));\n+        assertEquals(2, bean.values.size());\n     }\n \n     public void testUnwrappedListBeanDeser() throws Exception", "timestamp": 1357525138, "metainfo": ""}