{"sha": "7fe868089855c33d6345e740bfdbe6f140794598", "log": "Fixed an issue when parsing <script> tags.  When in body where the tokeniser wouldn't switch to the InScript state, which meant that data in a <script> wouldn't parse correctly.  Fixes #104", "commit": "\n--- a/src/main/java/org/jsoup/parser/TreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/TreeBuilder.java\n         // handle empty unknown tags\n         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate fake end tag.\n         if (startTag.isSelfClosing() && !Tag.isKnownTag(startTag.name())) {\n-            Element el =  insertEmpty(startTag);\n+            Element el = insertEmpty(startTag);\n             process(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in\n             return el;\n         }\n--- a/src/main/java/org/jsoup/parser/TreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/TreeBuilderState.java\n                             if (!html.hasAttr(attribute.getKey()))\n                                 html.attributes().put(attribute);\n                         }\n-                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"style\", \"title\")) {\n+                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\")) {\n                         return tb.process(t, InHead);\n                     } else if (name.equals(\"body\")) {\n                         tb.error(this);\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         assertEquals(\"font-family: bold\", tels.get(0).data());\n         assertEquals(\"\", tels.get(0).text());\n \n-        String s = \"<p>Hello</p><script>Nope</script><p>There</p>\";\n+        String s = \"<p>Hello</p><script>obj.insert('<a rel=\\\"none\\\" />');\\ni++;</script><p>There</p>\";\n         Document doc = Jsoup.parse(s);\n         assertEquals(\"Hello There\", doc.text());\n-        assertEquals(\"Nope\", doc.data());\n+        assertEquals(\"obj.insert('<a rel=\\\"none\\\" />');\\ni++;\", doc.data());\n     }\n \n     @Test public void handlesTextAfterData() {", "timestamp": 1309605130, "metainfo": ""}