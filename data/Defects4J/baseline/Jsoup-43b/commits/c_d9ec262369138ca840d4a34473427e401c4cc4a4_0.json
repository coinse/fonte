{"sha": "d9ec262369138ca840d4a34473427e401c4cc4a4", "log": "Merge branch 'pr/306'", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n public class Document extends Element {\n     private OutputSettings outputSettings = new OutputSettings();\n     private QuirksMode quirksMode = QuirksMode.noQuirks;\n+    private String location;\n \n     /**\n      Create a new, empty Document.\n      */\n     public Document(String baseUri) {\n         super(Tag.valueOf(\"#root\"), baseUri);\n+        this.location = baseUri;\n     }\n \n     /**\n         return doc;\n     }\n \n+    /**\n+     * Get the URL this Document was parsed from. If the starting URL is a redirect,\n+     * this will return the final URL from which the document was served from.\n+     * @return sourceUri\n+     */\n+    public String location() {\n+     return location;\n+    }\n+    \n     /**\n      Accessor to the document's {@code head} element.\n      @return {@code head}\n--- a/src/test/java/org/jsoup/integration/ParseTest.java\n+++ b/src/test/java/org/jsoup/integration/ParseTest.java\n         assertEquals(\"In July, GM said its electric Chevrolet Volt will be sold in the United States at $41,000 -- $8,000 more than its nearest competitor, the Nissan Leaf.\", p.text());\n     }\n \n-    File getFile(String resourceName) {\n+    public File getFile(String resourceName) {\n         try {\n             File file = new File(ParseTest.class.getResource(resourceName).toURI());\n             return file;\n--- a/src/test/java/org/jsoup/nodes/DocumentTest.java\n+++ b/src/test/java/org/jsoup/nodes/DocumentTest.java\n package org.jsoup.nodes;\n+\n+import java.io.File;\n+import java.io.IOException;\n \n import org.jsoup.Jsoup;\n import org.jsoup.TextUtil;\n+import org.jsoup.integration.ParseTest;\n import org.junit.Test;\n import org.junit.Ignore;\n \n         assertEquals(\"<!DOCTYPE html><html><head><title>Doctype test</title></head><body></body></html>\",\n                 TextUtil.stripNewlines(clone.html()));\n     }\n+    \n+    @Test public void testLocation() throws IOException {\n+    \tFile in = new ParseTest().getFile(\"/htmltests/yahoo-jp.html\");\n+        Document doc = Jsoup.parse(in, \"UTF-8\", \"http://www.yahoo.co.jp/index.html\");\n+        String location = doc.location();\n+        String baseUri = doc.baseUri();\n+        assertEquals(\"http://www.yahoo.co.jp/index.html\",location);\n+        assertEquals(\"http://www.yahoo.co.jp/_ylh=X3oDMTB0NWxnaGxsBF9TAzIwNzcyOTYyNjUEdGlkAzEyBHRtcGwDZ2Ex/\",baseUri);\n+        in = new ParseTest().getFile(\"/htmltests/nyt-article-1.html\");\n+        doc = Jsoup.parse(in, null, \"http://www.nytimes.com/2010/07/26/business/global/26bp.html?hp\");\n+        location = doc.location();\n+        baseUri = doc.baseUri();\n+        assertEquals(\"http://www.nytimes.com/2010/07/26/business/global/26bp.html?hp\",location);\n+        assertEquals(\"http://www.nytimes.com/2010/07/26/business/global/26bp.html?hp\",baseUri);\n+        \n+    }\n \n     // Ignored since this test can take awhile to run.\n     @Ignore", "timestamp": 1384134430, "metainfo": ""}