{"sha": "85c835652321262a86d9d32eb20f87c231954bda", "log": "Documentation added, todo removed.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n         return \"#document\";\n     }\n     \n+    /**\n+     * Sets the charset used in this document. This method is equivalent\n+     * to {@link OutputSettings#charset(java.nio.charset.Charset)\n+     * OutputSettings.charset(Charset)} but in addition it updates the\n+     * charset / encoding element within the document.\n+     * \n+     * <p>This only applies if {@link #updateMetaCharset(boolean)\n+     * updateMetaCharset} set to <tt>true</tt>; otherwise there are no elements\n+     * changed and the new value is delegated to\n+     * {@link OutputSettings#charset(java.nio.charset.Charset) \n+     * OutputSettings.charset(Charset)} only.</p>\n+     * \n+     * <p>If there's no element with charset / encoding information yet it will\n+     * be created. Obsolete charset / encoding definitions are removed!</p>\n+     * \n+     * <p><b>Elements used:</b></p>\n+     * \n+     * <ul>\n+     * <li><b>Html:</b> <i>&lt;meta charset=\"CHARSET\"&gt;</i></li>\n+     * <li><b>Xml:</b> <i>&lt;?xml version=\"1.0\" encoding=\"CHARSET\"&gt;</i></li>\n+     * </ul>\n+     * \n+     * @param charset Charset\n+     * \n+     * @see #updateMetaCharset(boolean) \n+     * @see OutputSettings#charset(java.nio.charset.Charset) \n+     */\n     public void charset(Charset charset) {\n         outputSettings.charset(charset);\n         ensureMetaCharset();\n     }\n     \n+    /**\n+     * Returns the charset used in this document. This method is equivalent\n+     * to {@link OutputSettings#charset()}.\n+     * \n+     * @return Current Charset\n+     * \n+     * @see OutputSettings#charset() \n+     */\n     public Charset charset() {\n         return outputSettings.charset();\n     }\n     \n+    /**\n+     * Sets whether the element with charset information in this document is\n+     * updated on changes through {@link #charset(java.nio.charset.Charset)\n+     * Document.charset(Charset)} or not.\n+     * \n+     * <p>If set to <tt>false</tt> <i>(default)</i> there are no elements\n+     * modified.</p>\n+     * \n+     * @param update If <tt>true</tt> the element updated on charset\n+     * changes, <tt>false</tt> if not\n+     * \n+     * @see #charset(java.nio.charset.Charset) \n+     */\n     public void updateMetaCharset(boolean update) {\n         this.updateMetaCharset = true;\n     }\n     \n+    /**\n+     * Returns whether the element with charset information in this document is\n+     * updated on changes through {@link #charset(java.nio.charset.Charset)\n+     * Document.charset(Charset)} or not.\n+     * \n+     * @return Returns <tt>true</tt> if the element is updated on charset\n+     * changes, <tt>false</tt> if not\n+     */\n     public boolean updateMetaCharset() {\n         return updateMetaCharset;\n     }\n         return clone;\n     }\n     \n+    /**\n+     * Ensures a meta charset (html) or xml declaration (xml) with the current\n+     * encoding used. This only applies with {@link #updateMetaCharset(boolean)\n+     * updateMetaCharset} set to <tt>true</tt>, otherwise this method does\n+     * nothing.\n+     * \n+     * <ul>\n+     * <li>An exsiting element gets updated with the current charset</li>\n+     * <li>If there's no element yet it will be inserted</li>\n+     * <li>Obsolete elements are removed</li>\n+     * </ul>\n+     * \n+     * <p><b>Elements used:</b></p>\n+     * \n+     * <ul>\n+     * <li><b>Html:</b> <i>&lt;meta charset=\"CHARSET\"&gt;</i></li>\n+     * <li><b>Xml:</b> <i>&lt;?xml version=\"1.0\" encoding=\"CHARSET\"&gt;</i></li>\n+     * </ul>\n+     */\n     private void ensureMetaCharset() {\n         if( updateMetaCharset == true ) {\n             OutputSettings.Syntax syntax = outputSettings().syntax();\n          * @return the document's output settings, for chaining\n          */\n         public OutputSettings charset(Charset charset) {\n-            // todo: this should probably update the doc's meta charset\n             this.charset = charset;\n             charsetEncoder = charset.newEncoder();\n             return this;", "timestamp": 1414748568, "metainfo": ""}