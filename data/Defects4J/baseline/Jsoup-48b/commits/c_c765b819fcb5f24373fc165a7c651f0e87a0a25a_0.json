{"sha": "c765b819fcb5f24373fc165a7c651f0e87a0a25a", "log": "Replaced whitespaces by \"%20\" in urls on redirects and .connect(String url)", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n         return con;\n     }\n \n+\tprivate static String encodeUrl(String url) {\n+\t\tif(url == null)\n+\t\t\treturn null;\n+    \treturn url.replaceAll(\" \", \"%20\");\n+\t}\n+\n     private Connection.Request req;\n     private Connection.Response res;\n \n     public Connection url(String url) {\n         Validate.notEmpty(url, \"Must supply a valid URL\");\n         try {\n-            req.url(new URL(url));\n+            req.url(new URL(encodeUrl(url)));\n         } catch (MalformedURLException e) {\n             throw new IllegalArgumentException(\"Malformed URL: \" + url, e);\n         }\n                 if (needsRedirect && req.followRedirects()) {\n                     req.method(Method.GET); // always redirect with a get. any data param from original req are dropped.\n                     req.data().clear();\n-                    req.url(new URL(req.url(), res.header(\"Location\")));\n+                    req.url(new URL(req.url(), encodeUrl(res.header(\"Location\"))));\n                     for (Map.Entry<String, String> cookie : res.cookies.entrySet()) { // add response cookies to request (for e.g. login posts)\n                         req.cookie(cookie.getKey(), cookie.getValue());\n                     }\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n     }\n \n     @Test\n+    public void fetchURIWithWihtespace() throws IOException {\n+        Connection con = Jsoup.connect(\"http://try.jsoup.org/#with whitespaces\");\n+        Document doc = con.get();\n+        assertTrue(doc.title().contains(\"jsoup\"));\n+    }\n+\n+    @Test\n     public void fetchBaidu() throws IOException {\n         Connection.Response res = Jsoup.connect(\"http://www.baidu.com/\").timeout(10*1000).execute();\n         Document doc = res.parse();\n         Connection con = Jsoup.connect(\"http://direct.infohound.net/tools/302-rel.pl\"); // to ./ - /tools/\n         Document doc = con.post();\n         assertTrue(doc.title().contains(\"HTML Tidy Online\"));\n+    }\n+\n+    @Test\n+    public void followsRedirectsWithWithespaces() throws IOException {\n+        Connection con = Jsoup.connect(\"http://tinyurl.com/kgofxl8\"); // to http://www.google.com/?q=white spaces\n+        Document doc = con.get();\n+        assertTrue(doc.title().contains(\"Google\"));\n     }\n \n     @Test", "timestamp": 1384131419, "metainfo": ""}