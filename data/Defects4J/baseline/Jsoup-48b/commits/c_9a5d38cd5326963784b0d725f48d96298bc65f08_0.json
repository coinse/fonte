{"sha": "9a5d38cd5326963784b0d725f48d96298bc65f08", "log": "Added removeEnforcedAttribute method to Whitelist", "commit": "\n--- a/src/main/java/org/jsoup/safety/Whitelist.java\n+++ b/src/main/java/org/jsoup/safety/Whitelist.java\n     }\n \n     /**\n+     Remove a previously configured enforced attribute from a tag.\n+\n+     @param tag   The tag the enforced attribute is for.\n+     @param key   The attribute key\n+     @return this (for chaining)\n+     */\n+    public Whitelist removeEnforcedAttribute(String tag, String key) {\n+        Validate.notEmpty(tag);\n+        Validate.notEmpty(key);\n+\n+        TagName tagName = TagName.valueOf(tag);\n+        if(tagNames.contains(tagName) && enforcedAttributes.containsKey(tagName)) {\n+            AttributeKey attrKey = AttributeKey.valueOf(key);\n+            Map<AttributeKey, AttributeValue> attrMap = enforcedAttributes.get(tagName);\n+            attrMap.remove(attrKey);\n+\n+            if(attrMap.size() == 0) // Remove tag from enforced attribute map if no enforced attributes are present\n+                enforcedAttributes.remove(tagName);\n+        }\n+    }\n+\n+    /**\n      * Configure this Whitelist to preserve relative links in an element's URL attribute, or convert them to absolute\n      * links. By default, this is <b>false</b>: URLs will be  made absolute (e.g. start with an allowed protocol, like\n      * e.g. {@code http://}.", "timestamp": 1407907491, "metainfo": ""}