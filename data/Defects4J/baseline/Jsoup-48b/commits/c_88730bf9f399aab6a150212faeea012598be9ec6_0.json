{"sha": "88730bf9f399aab6a150212faeea012598be9ec6", "log": "Fixed a crash when reading an unterminated CDATA section.  Fixes #349", "commit": "\n--- a/src/main/java/org/jsoup/parser/CharacterReader.java\n+++ b/src/main/java/org/jsoup/parser/CharacterReader.java\n             // scan to first instance of startchar:\n             if (startChar != input[offset])\n                 while(++offset < length && startChar != input[offset]);\n-            if (offset < length) {\n-                int i = offset + 1;\n-                int last = i + seq.length()-1;\n+            int i = offset + 1;\n+            int last = i + seq.length()-1;\n+            if (offset < length && last <= length) {\n                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);\n                 if (i == last) // found full sequence\n                     return offset - pos;\n--- a/src/test/java/org/jsoup/parser/CharacterReaderTest.java\n+++ b/src/test/java/org/jsoup/parser/CharacterReaderTest.java\n         assertEquals(10, r.nextIndexOf(\"Two\"));\n         assertEquals(\"something Two Three Four\", r.consumeToEnd());\n         assertEquals(-1, r.nextIndexOf(\"Two\"));\n+    }\n+\n+    @Test public void nextIndexOfUnmatched() {\n+        CharacterReader r = new CharacterReader(\"<[[one]]\");\n+        assertEquals(-1, r.nextIndexOf(\"]]>\"));\n     }\n \n     @Test public void consumeToChar() {\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n         assertEquals(\"<html> <foo><&amp;\", div.text());\n         assertEquals(0, div.children().size());\n         assertEquals(1, div.childNodeSize()); // no elements, one text node\n+    }\n+\n+    @Test public void handlesUnclosedCdataAtEOF() {\n+        // https://github.com/jhy/jsoup/issues/349 would crash, as character reader would try to seek past EOF\n+        String h = \"<![CDATA[]]\";\n+        Document doc = Jsoup.parse(h);\n+        assertEquals(1, doc.body().childNodeSize());\n     }\n \n     @Test public void handlesInvalidStartTags() {", "timestamp": 1381098985, "metainfo": ""}