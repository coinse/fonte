{"sha": "6f2f15a10b8d846e984f1604a4bfd85baeb8d079", "log": "Fixed bug 22988   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/JXPathContext.java,v 1.17 2003/05/04 23:51:59 dmitri Exp $\n- * $Revision: 1.17 $\n- * $Date: 2003/05/04 23:51:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/JXPathContext.java,v 1.18 2003/09/08 20:50:44 dmitri Exp $\n+ * $Revision: 1.18 $\n+ * $Date: 2003/09/08 20:50:44 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2003/05/04 23:51:59 $\n+ * @version $Revision: 1.18 $ $Date: 2003/09/08 20:50:44 $\n  */\n public abstract class JXPathContext {\n     protected JXPathContext parentContext;\n     protected Variables vars;\n     protected Functions functions;\n     protected AbstractFactory factory;\n-    protected Locale locale;\n-    protected boolean lenientSet = false;\n-    protected boolean lenient = false;\n+    private Locale locale;\n+    private boolean lenientSet = false;\n+    private boolean lenient = false;\n     protected IdentityManager idManager;\n     protected KeyManager keyManager;\n     protected HashMap decimalFormats;\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java,v 1.33 2003/08/24 01:52:09 dmitri Exp $\n- * $Revision: 1.33 $\n- * $Date: 2003/08/24 01:52:09 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java,v 1.34 2003/09/08 20:50:44 dmitri Exp $\n+ * $Revision: 1.34 $\n+ * $Date: 2003/09/08 20:50:44 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * The reference implementation of JXPathContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.33 $ $Date: 2003/08/24 01:52:09 $\n+ * @version $Revision: 1.34 $ $Date: 2003/09/08 20:50:44 $\n  */\n public class JXPathContextReferenceImpl extends JXPathContext {\n     \n         if (result instanceof EvalContext) {\n             EvalContext ctx = (EvalContext) result;\n             result = ctx.getSingleNodePointer();\n-            if (!lenient && result == null) {\n+            if (!isLenient() && result == null) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         if (result instanceof NodePointer) {\n             result = ((NodePointer) result).getValuePointer();\n-            if (!lenient && !((NodePointer) result).isActual()) {\n+            if (!isLenient() && !((NodePointer) result).isActual()) {\n                 // We need to differentiate between pointers representing\n                 // a non-existing property and ones representing a property\n                 // whose value is null.  In the latter case, the pointer\n             result = ((EvalContext) result).getSingleNodePointer();\n         }\n         if (result instanceof Pointer) {\n-            if (!lenient && !((NodePointer) result).isActual()) {\n+            if (!isLenient() && !((NodePointer) result).isActual()) {\n                 throw new JXPathException(\"No pointer for xpath: \" + xpath);\n             }\n             return (Pointer) result;", "timestamp": 1063054244, "metainfo": ""}