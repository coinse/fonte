{"sha": "9a33344e5c8c8ec5f6bb091cac10bd9201ecd8d1", "log": "Unified the setValue method   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java,v 1.4 2002/05/29 00:40:58 dmitri Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/05/29 00:40:58 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java,v 1.5 2002/07/11 01:17:16 dmitri Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/07/11 01:17:16 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * a path, following elements will by of type PropertyPointer.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2002/05/29 00:40:58 $\n+ * @version $Revision: 1.5 $ $Date: 2002/07/11 01:17:16 $\n  */\n public class BeanPointer extends PropertyOwnerPointer {\n     private QName name;\n         return bean;\n     }\n \n-    /**\n-     * Throws an exception if you try to change the root element.\n-     */\n-    public void setValue(Object value){\n-        super.setValue(value);\n-        if (parent instanceof PropertyPointer){\n-            parent.setValue(value);\n-        }\n-        else {\n-            throw new UnsupportedOperationException(\"Cannot setValue of an object that is not some other object's property\");\n-        }\n-    }\n-\n     public void remove(){\n         super.setValue(null);\n         if (parent != null){\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/DynamicPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/DynamicPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/Attic/DynamicPointer.java,v 1.3 2002/05/30 02:04:57 dmitri Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/05/30 02:04:57 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/Attic/DynamicPointer.java,v 1.4 2002/07/11 01:17:16 dmitri Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/07/11 01:17:16 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * for the first element of a path; following elements will by of type PropertyPointer.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2002/05/30 02:04:57 $\n+ * @version $Revision: 1.4 $ $Date: 2002/07/11 01:17:16 $\n  */\n public class DynamicPointer extends PropertyOwnerPointer {\n     private QName name;\n     }\n \n     /**\n-     * Throws UnsupportedOperationException.\n-     */\n-    public void setValue(Object value){\n-        throw new UnsupportedOperationException(\"Cannot replace the root object\");\n-    }\n-\n-    /**\n      * If the bean is a collection, returns the length of that collection,\n      * otherwise returns 1.\n      */\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java,v 1.5 2002/05/08 23:05:05 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/05/08 23:05:05 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java,v 1.6 2002/07/11 01:17:16 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/07/11 01:17:16 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * as the parent.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/05/08 23:05:05 $\n+ * @version $Revision: 1.6 $ $Date: 2002/07/11 01:17:16 $\n  */\n public class NullElementPointer extends PropertyOwnerPointer {\n \n \n     public NodePointer getValuePointer(){\n         return new NullPointer(this, getName());\n-    }\n-\n-    public void setValue(Object value){\n-        super.setValue(value);\n-        if (parent instanceof PropertyPointer){\n-            parent.setValue(value);\n-        }\n-        else {\n-            throw new UnsupportedOperationException(\"Cannot setValue of an object that is not some other object's property\");\n-        }\n     }\n \n     public boolean isActual(){\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java,v 1.4 2002/06/08 22:47:24 dmitri Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/06/08 22:47:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java,v 1.5 2002/07/11 01:17:16 dmitri Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/07/11 01:17:16 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2002/06/08 22:47:24 $\n+ * @version $Revision: 1.5 $ $Date: 2002/07/11 01:17:16 $\n  */\n public class NullPointer extends PropertyOwnerPointer {\n     private QName name;\n \n     public Object getBaseValue(){\n         return null;\n-    }\n-\n-    public void setValue(Object value){\n-        super.setValue(value);\n-        if (parent instanceof PropertyPointer){\n-            parent.setValue(value);\n-        }\n-        else {\n-            throw new UnsupportedOperationException(\"Cannot setValue of an object that is not some other object's property/child\");\n-        }\n     }\n \n     public boolean isActual(){\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java,v 1.5 2002/06/18 00:01:15 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/06/18 00:01:15 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java,v 1.6 2002/07/11 01:17:16 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/07/11 01:17:16 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * a collection.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/06/18 00:01:15 $\n+ * @version $Revision: 1.6 $ $Date: 2002/07/11 01:17:16 $\n  */\n public abstract class PropertyOwnerPointer extends NodePointer {\n \n     }\n \n     public abstract QName getName();\n+\n     public void setValue(Object value){\n         this.value = value;\n+        if (parent != null){\n+            if (!parent.isNode()){\n+                parent.setValue(value);\n+            }\n+            else {\n+                throw new UnsupportedOperationException(\n+                  \"Cannot setValue of an object that is not \" +\n+                  \"some other object's property\");\n+            }\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\n+              \"Cannot replace the root object\");\n+        }\n     }\n \n     public abstract PropertyPointer getPropertyPointer();", "timestamp": 1026350236, "metainfo": ""}