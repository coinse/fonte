{"sha": "f29394859dec11a4f037668aa33edae26338fb73", "log": "Renamed \"next\" to \"nextNode\"   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java,v 1.6 2002/04/24 04:06:46 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:06:46 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"ancestor::\" and \"ancestor-or-self::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:06:46 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class AncestorContext extends EvalContext {\n     private NodeTest nodeTest;\n         }\n \n         while (getCurrentPosition() < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         while (nextIgnoreDuplicates()){\n             NodePointer location = getCurrentNodePointer();\n             if (!visitedNodes.contains(location)){\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java,v 1.5 2002/04/24 04:06:46 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/04/24 04:06:46 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java,v 1.6 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"attribute::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/04/24 04:06:46 $\n+ * @version $Revision: 1.6 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class AttributeContext extends EvalContext {\n     private NodeTest nodeTest;\n         }\n \n         while (getCurrentPosition() < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         super.setPosition(getCurrentPosition() + 1);\n         if (!setStarted){\n             setStarted = true;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java,v 1.7 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java,v 1.8 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * \"preceding-sibling::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.8 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class ChildContext extends EvalContext {\n     private NodeTest nodeTest;\n         return getCurrentNodePointer();\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         return setPosition(getCurrentPosition() + 1);\n     }\n \n--- a/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.6 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class DescendantContext extends EvalContext {\n     private NodeTest nodeTest;\n         }\n \n         while (this.position < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         if (!setStarted){\n             setStarted = true;\n             stack = new Stack();\n--- a/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java,v 1.6 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * on to the parent context.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class InitialContext extends EvalContext {\n     private boolean startedSet = false;\n         return nodePointer;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         return setPosition(position + 1);\n     }\n \n--- a/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java,v 1.4 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java,v 1.5 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"namespace::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.5 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class NamespaceContext extends EvalContext {\n     private NodeTest nodeTest;\n         }\n \n         while (getCurrentPosition() < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         super.setPosition(getCurrentPosition() + 1);\n         if (!setStarted){\n             setStarted = true;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java,v 1.5 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java,v 1.6 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"parent::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.6 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class ParentContext extends EvalContext {\n     private NodeTest nodeTest;\n         return position == 1;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         while (nextIgnoreDuplicates()){\n             NodePointer location = getCurrentNodePointer();\n             if (!visitedNodes.contains(location)){\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java,v 1.6 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"preceding::\" and \"following::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class PrecedingOrFollowingContext extends EvalContext {\n     private NodeTest nodeTest;\n         }\n \n         while (this.position < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         if (!setStarted){\n             setStarted = true;\n             currentRootLocation = parentContext.getCurrentNodePointer();\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java,v 1.7 2002/04/26 01:00:37 dmitri Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/04/26 01:00:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java,v 1.8 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that checks predicates.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2002/04/26 01:00:37 $\n+ * @version $Revision: 1.8 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class PredicateContext extends EvalContext {\n     private Expression expression;\n             getEvaluationHint(CoreOperation.DYNAMIC_PROPERTY_ACCESS_HINT);\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         if (done){\n             return false;\n         }\n-        while (parentContext.next()){\n+        while (parentContext.nextNode()){\n             if (setupDynamicPropertyPointer()){\n                 Object pred = parentContext.eval(dynamicPropertyNameExpression);\n                 if (pred instanceof NodePointer){\n         }\n \n         while (this.position < position){\n-            if (!next()){\n+            if (!nextNode()){\n                 return false;\n             }\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java,v 1.6 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that is used to hold the root node for the path traversal.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class RootContext extends EvalContext {\n     private boolean startedSet = false;\n         return 1;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         if (started){\n             return false;\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java,v 1.6 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that returns the current node from the parent context if the test succeeds.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class SelfContext extends EvalContext {\n     private NodeTest nodeTest;\n         return nodePointer;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         return setPosition(getCurrentPosition() + 1);\n     }\n \n--- a/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n     }\n \n     private static int indexFromPredicate(EvalContext context, Expression predicate){\n-        Object value = context.eval(predicate, true);\n+        Object value = context.eval(predicate);\n         if (value instanceof EvalContext){\n             value = ((EvalContext)value).getSingleNodePointer();\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java,v 1.5 2002/04/24 04:05:39 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/04/24 04:05:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java,v 1.6 2002/04/28 04:35:48 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/04/28 04:35:48 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * of a union operation like (a | b)\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/04/24 04:05:39 $\n+ * @version $Revision: 1.6 $ $Date: 2002/04/28 04:35:48 $\n  */\n public class UnionContext extends EvalContext {\n     private boolean startedSet = false;\n         return true;\n     }\n \n-    public boolean next(){\n+    public boolean nextNode(){\n         return setPosition(position + 1);\n     }\n \n         for (int i = 0; i < contexts.length; i++){\n             EvalContext ctx = (EvalContext)contexts[i];\n             while (ctx.nextSet()){\n-                while (ctx.next()){\n+                while (ctx.nextNode()){\n                     NodePointer ptr = ctx.getCurrentNodePointer();\n                     if (!set.contains(ptr)){\n                         ptr = (NodePointer)ptr.clone();", "timestamp": 1019968548, "metainfo": ""}