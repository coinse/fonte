{"sha": "30d7b3a62bd76b498815673ac463edea8e3bcc65", "log": "setValue(text) bug fix - removing multiple nodes from a list while iterating over it   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java,v 1.8 2002/08/10 16:13:04 dmitri Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/10 16:13:04 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java,v 1.9 2002/08/26 22:15:26 dmitri Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/08/26 22:15:26 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2002/08/10 16:13:04 $\n+ * @version $Revision: 1.9 $ $Date: 2002/08/26 22:15:26 $\n  */\n public class DOMNodePointer extends NodePointer {\n     private Node node;\n     }\n \n     public QName getName(){\n+        String ln = null;\n+        String ns = null;\n         int type = node.getNodeType();\n         if (type == Node.ELEMENT_NODE){\n-            return new QName(DOMNodePointer.getPrefix(node), DOMNodePointer.getLocalName(node));\n+            ns = DOMNodePointer.getPrefix(node);\n+            ln = DOMNodePointer.getLocalName(node);\n         }\n         else if (type == Node.PROCESSING_INSTRUCTION_NODE){\n-            return new QName(null, ((ProcessingInstruction)node).getTarget());\n-        }\n-        return null;\n+            ln = ((ProcessingInstruction)node).getTarget();\n+        }\n+        return new QName(ns, ln);\n     }\n \n     public String getNamespaceURI(){\n         else {\n             NodeList children = node.getChildNodes();\n             int count = children.getLength();\n-            for (int i = 0; i < count; i++){\n+            for (int i = count; --i >= 0;){\n                 Node child = children.item(i);\n                 if (child.getNodeType() == Node.TEXT_NODE ||\n                         child.getNodeType() == Node.CDATA_SECTION_NODE){", "timestamp": 1030400126, "metainfo": ""}