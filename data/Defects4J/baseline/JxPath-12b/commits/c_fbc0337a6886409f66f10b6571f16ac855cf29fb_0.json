{"sha": "fbc0337a6886409f66f10b6571f16ac855cf29fb", "log": "extract ReverseComparator to its own class  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n import org.apache.commons.jxpath.Pointer;\n import org.apache.commons.jxpath.ri.axes.RootContext;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n+import org.apache.commons.jxpath.util.ReverseComparator;\n \n /**\n  * An XPath evaluation context.\n     private boolean hasPerformedIteratorStep = false;\n     private Iterator pointerIterator;\n \n-    // Sorts in the reverse order to the one defined by the Comparable\n-    // interface.\n-    private static final Comparator REVERSE_COMPARATOR = new Comparator() {\n-        public int compare(Object o1, Object o2) {\n-            return ((Comparable) o2).compareTo(o1);\n-        }\n-    };\n-\n     public EvalContext(EvalContext parentContext) {\n         this.parentContext = parentContext;\n     }\n             Collections.sort(list);\n         }\n         else {\n-            Collections.sort(list, REVERSE_COMPARATOR);\n+            Collections.sort(list, ReverseComparator.INSTANCE);\n         }\n         pointerIterator = list.iterator();\n         return true;\n--- /dev/null\n+++ b/src/java/org/apache/commons/jxpath/util/ReverseComparator.java\n+package org.apache.commons.jxpath.util;\n+\n+import java.util.Comparator;\n+\n+/**\n+ * Reverse comparator.\n+ *\n+ * @author Dmitri Plotnikov\n+ * @version $Revision:$ $Date:$\n+ */\n+public class ReverseComparator implements Comparator {\n+    /**\n+     * Singleton reverse comparator instance.\n+     */\n+    public static final Comparator INSTANCE = new ReverseComparator();\n+\n+    private ReverseComparator() {\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    public int compare(Object o1, Object o2) {\n+        return ((Comparable) o2).compareTo(o1);\n+    }\n+\n+}", "timestamp": 1168468908, "metainfo": ""}