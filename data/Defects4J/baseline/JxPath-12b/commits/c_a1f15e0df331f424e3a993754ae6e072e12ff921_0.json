{"sha": "a1f15e0df331f424e3a993754ae6e072e12ff921", "log": "Fixed problem with collection of maps   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java,v 1.19 2003/03/25 02:41:34 dmitri Exp $\n- * $Revision: 1.19 $\n- * $Date: 2003/03/25 02:41:34 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java,v 1.20 2003/05/06 02:13:26 dmitri Exp $\n+ * $Revision: 1.20 $\n+ * $Date: 2003/05/06 02:13:26 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that checks predicates.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.19 $ $Date: 2003/03/25 02:41:34 $\n+ * @version $Revision: 1.20 $ $Date: 2003/05/06 02:13:26 $\n  */\n public class PredicateContext extends EvalContext {\n     private Expression expression;\n         while (parentContext.nextNode()) {\n             if (setupDynamicPropertyPointer()) {\n                 Object pred = nameTestExpression.computeValue(parentContext);\n-                if (pred instanceof NodePointer) {\n-                    pred = ((NodePointer) pred).getValue();\n-                }\n-                dynamicPropertyPointer.setPropertyName(\n-                    InfoSetUtil.stringValue(pred));\n-                position = 1;\n-                done = true;\n-                return true;\n+                String propertyName = InfoSetUtil.stringValue(pred);\n+\n+                // At this point it would be nice to say: \n+                // dynamicPropertyPointer.setPropertyName(propertyName)\n+                // and then: dynamicPropertyPointer.isActual().\n+                // However some PropertyPointers, e.g. DynamicPropertyPointer\n+                // will declare that any property you ask for is actual.\n+                // That's not acceptable for us: we really need to know\n+                // if the property is currently declared. Thus,\n+                // we'll need to perform a search.\n+                boolean ok = false;\n+                String names[] = dynamicPropertyPointer.getPropertyNames();\n+                for (int i = 0; i < names.length; i++) {\n+                    if (names[i].equals(propertyName)) {\n+                        ok = true;\n+                        break;\n+                    }\n+                }\n+                if (ok) {\n+                    dynamicPropertyPointer.setPropertyName(propertyName);\n+                    position++;\n+                    return true;\n+                }\n             }\n             else {\n                 Object pred = expression.computeValue(parentContext);\n--- a/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,v 1.3 2003/03/11 00:59:39 dmitri Exp $\n- * $Revision: 1.3 $\n- * $Date: 2003/03/11 00:59:39 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,v 1.4 2003/05/06 02:13:27 dmitri Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2003/05/06 02:13:27 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n \n package org.apache.commons.jxpath.ri.model.dynamic;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.JXPathTestCase;\n import org.apache.commons.jxpath.TestBean;\n  * @todo more iterator testing with maps\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2003/03/11 00:59:39 $\n+ * @version $Revision: 1.4 $ $Date: 2003/05/06 02:13:27 $\n  */\n \n public class DynamicPropertiesModelTest extends JXPathTestCase {\n             \"temp2\",\n             context.getValue(\"map[@name = 'TestKey2'][1]\"));\n     }\n+    \n+    public void testCollectionOfMaps() {\n+        TestBean bean = (TestBean) context.getContextBean();\n+        List list = new ArrayList();\n+\n+        bean.getMap().put(\"stuff\", list);        \n+\n+        Map m = new HashMap();\n+        m.put(\"fruit\", \"apple\");\n+        list.add(m);\n+\n+        m = new HashMap();\n+        m.put(\"berry\", \"watermelon\");\n+        list.add(m);\n+\n+        m = new HashMap();\n+        m.put(\"fruit\", \"banana\");\n+        list.add(m);\n+\n+        assertXPathValueIterator(\n+            context,\n+            \"/map/stuff/fruit\",\n+            list(\"apple\", \"banana\"));\n+\n+        assertXPathValueIterator(\n+            context,\n+            \"/map/stuff[@name='fruit']\",\n+            list(\"apple\", \"banana\"));\n+    }\n }", "timestamp": 1052187207, "metainfo": ""}