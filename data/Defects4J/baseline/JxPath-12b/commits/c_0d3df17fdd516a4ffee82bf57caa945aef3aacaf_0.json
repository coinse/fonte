{"sha": "0d3df17fdd516a4ffee82bf57caa945aef3aacaf", "log": "simplify test  ", "commit": "\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n  */\n package org.apache.commons.jxpath.ri.compiler;\n \n-import java.io.StringReader;\n-import java.util.Iterator;\n-\n-import javax.xml.parsers.DocumentBuilderFactory;\n-\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.JXPathTestCase;\n+import org.apache.commons.jxpath.TestMixedModelBean;\n import org.apache.commons.jxpath.Variables;\n-import org.w3c.dom.Document;\n-import org.xml.sax.InputSource;\n \n /**\n  * Test basic functionality of JXPath - infoset types,\n \n     public void setUp() {\n         if (context == null) {\n-            context = JXPathContext.newContext(null);\n+            context = JXPathContext.newContext(new TestMixedModelBean());\n             context.setFactory(new VariableFactory());\n \n             Variables vars = context.getVariables();\n     }\n     \n     public void testUnionOfVariableAndNode() throws Exception {\n-        Document doc = DocumentBuilderFactory.newInstance()\n-                .newDocumentBuilder().parse(\n-                        new InputSource(new StringReader(\n-                                \"<MAIN><A/><A/></MAIN>\")));\n-\n-        JXPathContext context = JXPathContext.newContext(doc);\n-        context.getVariables().declareVariable(\"var\", \"varValue\");\n-        int sz = 0;\n-        for (Iterator ptrs = context.iteratePointers(\"$var | /MAIN/A\"); ptrs.hasNext(); sz++) {\n-            ptrs.next();\n-        }\n-        assertEquals(3, sz);\n+        assertXPathValue(context, \"count($a | /document/vendor/location)\", new Double(3));\n+        assertXPathValue(context, \"count($a | /list)\", new Double(7)); //$o + list which contains six discrete values (one is duped, wrapped in a Container)\n     }\n }", "timestamp": 1183414845, "metainfo": ""}