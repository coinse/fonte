{"sha": "d36e894cb61100284b81027d6765e66181f982b5", "log": "revert changes for JXPATH-61  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n                 \"Namespace registration is not implemented by \" + getClass());\n     }\n \n-    /**\n-     * Binds a namespace URI for XPath QNames that are missing the prefix.\n-     * If you have this XML: \n-     * <pre>\n-     *   &lt;a xmlns=\"myns\"&gt; \n-     *     &lt;b&gt;109&lt;/b&gt;\n-     *   &lt;/a&gt; \n-     * </pre>\n-     * and\n-     * <pre>\n-     *   context.setDefaultNamespaceURI(\"myns\");\n-     * </pre>\n-     * you can use the path \"/a/b\" instead of \"/foo:a/foo:b\" (the assumption\n-     * here is that the prefix \"foo\" is bound to \"myns\" by calling \n-     * registerNamespace).\n-      */\n-    public void registerDefaultNamespace(String uri) {\n-        throw new UnsupportedOperationException(\n-                \"Namespace registration is not implemented by \" + getClass());        \n-    }\n-\n-    /**\n-    */\n-    public String getDefaultNamespaceURI() {\n-        return null;        \n-    }    \n }\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n     private Pointer contextPointer;\n     \n     protected NamespaceResolver namespaceResolver;\n-    private String defaultNamespaceURI;\n \n     // The frequency of the cache cleanup\n     private static final int CLEANUP_THRESHOLD = 500;\n \n     public NamespaceResolver getNamespaceResolver() {\n         namespaceResolver.seal();\n-        namespaceResolver.registerDefaultNamespaceURI(getDefaultNamespaceURI());\n         return namespaceResolver;\n     }\n     \n-    public String getDefaultNamespaceURI() {\n-        if (defaultNamespaceURI != null) {\n-            return defaultNamespaceURI;\n-        }\n-        if (parentContext != null) {\n-            return parentContext.getDefaultNamespaceURI();\n-        }\n-        return null;\n-    }\n-\n-    public void registerDefaultNamespace(String uri) {\n-        defaultNamespaceURI = uri;\n-    }\n-\n     /**\n      * Checks if existenceCheckClass exists on the class path. If so, allocates\n      * an instance of the specified class, otherwise returns null.\n--- a/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n+++ b/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n     protected HashMap namespaceMap = new HashMap();\n     protected HashMap reverseMap;\n     protected NodePointer pointer;\n-    private String defaultNamespaceURI;\n     private boolean sealed;\n         \n     public NamespaceResolver(NamespaceResolver parent) {\n         return prefix;\n     }\n         \n-    public String getDefaultNamespaceURI() {\n-        return defaultNamespaceURI;\n-    }\n-\n-    public void registerDefaultNamespaceURI(String uri) {\n-        this.defaultNamespaceURI = uri;\n-    }\n-    \n     public boolean isSealed() {\n         return sealed;\n     }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n             NodeTest nodeTest = step.getNodeTest();\n             QName qname = ((NodeNameTest) nodeTest).getNodeName();\n             String prefix = qname.getPrefix();\n-            String namespaceURI = prefix != null \n-                ? context.getJXPathContext().getNamespaceURI(prefix) \n-                : context.getJXPathContext().getDefaultNamespaceURI();\n-            if (namespaceURI != null) {\n+            if (prefix != null) {\n+                String namespaceURI = context.getJXPathContext()\n+                        .getNamespaceURI(prefix);\n                 nodeTest = new NodeNameTest(qname, namespaceURI);\n             }\n             return pointer.childIterator(nodeTest, false, null);\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Path.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Path.java\n         if (nodeTest instanceof NodeNameTest) {\n             QName qname = ((NodeNameTest) nodeTest).getNodeName();\n             String prefix = qname.getPrefix();\n-            String namespaceURI = prefix != null \n-                ? context.getJXPathContext().getNamespaceURI(prefix) \n-                : context.getJXPathContext().getDefaultNamespaceURI();\n-            if (namespaceURI != null) {\n+            if (prefix != null) {\n+                String namespaceURI = context.getJXPathContext()\n+                        .getNamespaceURI(prefix); \n                 nodeTest = new NodeNameTest(qname, namespaceURI);\n             }\n         }\n-        \n+\n         switch (axis) {\n         case Compiler.AXIS_ANCESTOR :\n             return new AncestorContext(context, false, nodeTest);\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n         if (success) {\n             NodeTest nodeTest;\n             String prefix = name.getPrefix();\n-            String namespaceURI = prefix != null \n-                ? context.getNamespaceURI(prefix) \n-                : context.getDefaultNamespaceURI();\n+            String namespaceURI = prefix == null ? null : \n+                context.getNamespaceURI(prefix);\n             nodeTest = new NodeNameTest(name, namespaceURI);\n \n             NodeIterator it = childIterator(nodeTest, false, null);\n                     }\n                     String ln = DOMNodePointer.getLocalName(node);\n                     String nsURI = getNamespaceURI();\n-                    if (equalStrings(nsURI, \n-                            getNamespaceResolver().getDefaultNamespaceURI())) {\n+                    if (nsURI == null) {\n                         buffer.append(ln);\n                         buffer.append('[');\n                         buffer.append(getRelativePositionByName()).append(']');\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n         if (success) {\n             NodeTest nodeTest;\n             String prefix = name.getPrefix();\n-            String namespaceURI = prefix != null \n-                ? context.getNamespaceURI(prefix) \n-                : context.getDefaultNamespaceURI();\n+            String namespaceURI = prefix == null ? null : context\n+                    .getNamespaceURI(prefix);\n             nodeTest = new NodeNameTest(name, namespaceURI);\n \n             NodeIterator it =\n                 String nsURI = getNamespaceURI();\n                 String ln = JDOMNodePointer.getLocalName(node);\n                 \n-                if (equalStrings(nsURI, \n-                        getNamespaceResolver().getDefaultNamespaceURI())) {\n+                if (nsURI == null) {\n                     buffer.append(ln);\n                     buffer.append('[');\n                     buffer.append(getRelativePositionByName()).append(']');\n--- a/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n         context.registerNamespace(\"x\", \"temp\");\n         assertXPathValue(context, \"vendor/x:pos//number\", \"109\");\n     }\n-    \n-    public void testDefaultNamespaceIgnored() {\n-        context.registerDefaultNamespace(\"temp\");\n-        assertXPathValueAndPointer(context, \"//pos//number\", \"110\",\n-                \"/node()[1]/pos[2]/register[1]/number[1]\");\n-        context.registerDefaultNamespace(null);\n-    }\n \n     public void testAxisChildIndexPredicate() {\n         assertXPathValue(", "timestamp": 1179779925, "metainfo": ""}