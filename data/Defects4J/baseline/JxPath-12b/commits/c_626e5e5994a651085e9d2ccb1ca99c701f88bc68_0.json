{"sha": "626e5e5994a651085e9d2ccb1ca99c701f88bc68", "log": "[JXPATH-96] use NodePointerFactory for VariablePointers  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n import org.apache.commons.jxpath.JXPathNotFoundException;\n import org.apache.commons.jxpath.JXPathTypeConversionException;\n import org.apache.commons.jxpath.Pointer;\n-import org.apache.commons.jxpath.Variables;\n import org.apache.commons.jxpath.ri.axes.InitialContext;\n import org.apache.commons.jxpath.ri.axes.RootContext;\n import org.apache.commons.jxpath.ri.compiler.Expression;\n import org.apache.commons.jxpath.ri.compiler.TreeCompiler;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n import org.apache.commons.jxpath.ri.model.NodePointerFactory;\n-import org.apache.commons.jxpath.ri.model.VariablePointer;\n+import org.apache.commons.jxpath.ri.model.VariablePointerFactory;\n import org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory;\n import org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory;\n import org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory;\n     private static Map compiled = new HashMap();\n     private static int cleanupCount = 0;\n \n-    private static Vector nodeFactories = new Vector();\n+    private static final Vector nodeFactories = new Vector();\n     private static NodePointerFactory nodeFactoryArray[] = null;\n     static {\n         nodeFactories.add(new CollectionPointerFactory());\n         nodeFactories.add(new BeanPointerFactory());\n         nodeFactories.add(new DynamicPointerFactory());\n+        nodeFactories.add(new VariablePointerFactory());\n \n         // DOM  factory is only registered if DOM support is on the classpath\n         Object domFactory = allocateConditionally(\n     }\n \n     public NodePointer getVariablePointer(QName name) {\n-        String varName = name.toString();\n-        JXPathContext varCtx = this;\n-        Variables vars = null;\n-        while (varCtx != null) {\n-            vars = varCtx.getVariables();\n-            if (vars.isDeclaredVariable(varName)) {\n-                break;\n-            }\n-            varCtx = varCtx.getParentContext();\n-            vars = null;\n-        }\n-        if (vars != null) {\n-            return new VariablePointer(vars, name);\n-        }\n-        else {\n-            // The variable is not declared, but we will create\n-            // a pointer anyway in case the user want to set, rather\n-            // than get, the value of the variable.\n-            return new VariablePointer(name);\n-        }\n+        return NodePointer.newNodePointer(name, VariablePointerFactory\n+                .contextWrapper(this), getLocale());\n     }\n \n     public Function getFunction(QName functionName, Object[] parameters) {\n--- /dev/null\n+++ b/src/java/org/apache/commons/jxpath/ri/model/VariablePointerFactory.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.jxpath.ri.model;\n+\n+import java.util.Locale;\n+\n+import org.apache.commons.jxpath.JXPathContext;\n+import org.apache.commons.jxpath.Variables;\n+import org.apache.commons.jxpath.ri.QName;\n+\n+/**\n+ * NodePointerFactory to create VariablePointers.\n+ * @author Matt Benson\n+ * @since JXPath 1.3\n+ * @version $Revision$ $Date$\n+ */\n+public class VariablePointerFactory implements NodePointerFactory {\n+    public static final int VARIABLE_POINTER_FACTORY_ORDER = 890;\n+\n+    /**\n+     * Node value wrapper to trigger a VariablePointerFactory.\n+     */\n+    public static class VariableContextWrapper {\n+        final JXPathContext context;\n+\n+        private VariableContextWrapper(JXPathContext context) {\n+            this.context = context;\n+        }\n+    }\n+\n+    /**\n+     * VariableContextWrapper factory method.\n+     * @param context the JXPathContext to wrap.\n+     * @return VariableContextWrapper.\n+     */\n+    public static VariableContextWrapper contextWrapper(JXPathContext context) {\n+        return new VariableContextWrapper(context);\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see org.apache.commons.jxpath.ri.model.NodePointerFactory#createNodePointer(org.apache.commons.jxpath.ri.QName,\n+     *      java.lang.Object, java.util.Locale)\n+     */\n+    public NodePointer createNodePointer(QName name, Object object,\n+            Locale locale) {\n+        if (object instanceof VariableContextWrapper) {\n+            JXPathContext varCtx = ((VariableContextWrapper) object).context;\n+            while (varCtx != null) {\n+                Variables vars = varCtx.getVariables();\n+                if (vars.isDeclaredVariable(name.toString())) {\n+                    return new VariablePointer(vars, name);\n+                }\n+                varCtx = varCtx.getParentContext();\n+            }\n+            // The variable is not declared, but we will create\n+            // a pointer anyway in case the user wants to set, rather\n+            // than get, the value of the variable.\n+            return new VariablePointer(name);\n+        }\n+        return null;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see org.apache.commons.jxpath.ri.model.NodePointerFactory#createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,\n+     *      org.apache.commons.jxpath.ri.QName, java.lang.Object)\n+     */\n+    public NodePointer createNodePointer(NodePointer parent, QName name,\n+            Object object) {\n+        return createNodePointer(name, object, null);\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see org.apache.commons.jxpath.ri.model.NodePointerFactory#getOrder()\n+     */\n+    public int getOrder() {\n+        return VARIABLE_POINTER_FACTORY_ORDER;\n+    }\n+\n+}", "timestamp": 1184790136, "metainfo": ""}