{"sha": "716c03b3b12ec106974898451b149f6eb79c65da", "log": "[JXPATH-50] properly handle NodeSet returned by extension function. Submitted by Keith D. Gregory.   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java\n  */\n package org.apache.commons.jxpath.ri.compiler;\n \n+import org.apache.commons.jxpath.NodeSet;\n import org.apache.commons.jxpath.Pointer;\n import org.apache.commons.jxpath.ri.EvalContext;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n         if (result instanceof EvalContext) {\n             return new ValueIterator((EvalContext) result);\n         }\n+        if (result instanceof NodeSet) {\n+            return new ValueIterator(((NodeSet) result).getPointers().iterator());\n+        }\n         return ValueUtils.iterate(result);\n     }\n \n         if (result instanceof EvalContext) {\n             return (EvalContext) result;\n         }\n+        if (result instanceof NodeSet) {\n+            return new PointerIterator(((NodeSet) result).getPointers().iterator(),\n+                    new QName(null, \"value\"),\n+                    context.getRootContext().getCurrentNodePointer().getLocale());\n+        }\n         return new PointerIterator(ValueUtils.iterate(result),\n                 new QName(null, \"value\"),\n                 context.getRootContext().getCurrentNodePointer().getLocale());\n         private QName qname;\n         private Locale locale;\n \n+        //to what method does the following comment refer?\n         /**\n          * @deprecated Use the method that takes a NamespaceManager\n          */\n \n         public Object next() {\n             Object o = iterator.next();\n-            return NodePointer.newNodePointer(qname, o, locale);\n+            return o instanceof Pointer ? o : NodePointer.newNodePointer(qname, o, locale);\n         }\n \n         public void remove() {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n public class ExtensionFunctionTest extends JXPathTestCase {\n     private Functions functions;\n     private JXPathContext context;\n+    private TestBean testBean;\n \n     public static void main(String[] args) {\n         TestRunner.run(ExtensionFunctionTest.class);\n \n     public void setUp() {\n         if (context == null) {\n-            context = JXPathContext.newContext(new TestBean());\n+            testBean = new TestBean();\n+            context = JXPathContext.newContext(testBean);\n             Variables vars = context.getVariables();\n             vars.declareVariable(\"test\", new TestFunctions(4, \"test\"));\n \n             \"test:nodeSet()/name\",\n             list(\"Name 1\", \"Name 2\"));\n \n+        assertXPathValueIterator(\n+            context,\n+            \"test:nodeSet()\",\n+            list(testBean.getBeans()[0], testBean.getBeans()[1]));\n+\n         assertXPathPointerIterator(\n             context,\n             \"test:nodeSet()/name\",\n             return 0;\n         }\n     }\n-}\n+}", "timestamp": 1168468644, "metainfo": ""}