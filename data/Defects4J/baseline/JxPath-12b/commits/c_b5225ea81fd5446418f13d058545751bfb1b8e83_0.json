{"sha": "b5225ea81fd5446418f13d058545751bfb1b8e83", "log": "Fixed Bug 22333:  JXPathContextFactory doesn't cache most common result of search   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/JXPathContextFactory.java,v 1.5 2003/03/11 00:59:12 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2003/03/11 00:59:12 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/JXPathContextFactory.java,v 1.6 2003/08/24 02:30:10 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2003/08/24 02:30:10 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * @see JXPathContext#newContext(JXPathContext,Object)\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2003/03/11 00:59:12 $\n+ * @version $Revision: 1.6 $ $Date: 2003/08/24 02:30:10 $\n  */\n public abstract class JXPathContextFactory {\n \n     private static final String DEFAULT_FACTORY_CLASS =\n         \"org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl\";\n \n+    /** Avoid reading all the files when the findFactory\n+        method is called the second time ( cache the result of\n+        finding the default impl )\n+    */\n+    private static String factoryImplName = null;\n+    \n     protected JXPathContextFactory () {\n \n     }\n      * available or cannot be instantiated.\n      */\n     public static JXPathContextFactory newInstance() {\n-        String factoryImplName =\n-            findFactory(FACTORY_NAME_PROPERTY, DEFAULT_FACTORY_CLASS);\n-\n         if (factoryImplName == null) {\n-            throw new JXPathContextFactoryConfigurationError(\n-                    \"No default implementation found\");\n+            factoryImplName =\n+                findFactory(FACTORY_NAME_PROPERTY, DEFAULT_FACTORY_CLASS);\n         }\n \n         JXPathContextFactory factoryImpl;\n     // This code is duplicated in all factories.\n     // Keep it in sync or move it to a common place\n     // Because it's small probably it's easier to keep it here\n-    /** Avoid reading all the files when the findFactory\n-        method is called the second time ( cache the result of\n-        finding the default impl )\n-    */\n-    private static String foundFactory = null;\n \n     /** Temp debug code - this will be removed after we test everything\n      */\n         @return class name of the JXPathContextFactory\n     */\n     private static String findFactory(String property, String defaultFactory) {\n-        // Use the system property first\n-        try {\n-            String systemProp = System.getProperty(property);\n-            if (systemProp != null) {\n-                if (debug) {\n-                    System.err.println(\n-                        \"JXPath: found system property\" + systemProp);\n-                }\n-                return systemProp;\n-            }\n-\n-        }\n-        catch (SecurityException se) {\n-            // Ignore\n-        }\n-\n-        if (foundFactory != null) {\n-            return foundFactory;\n-        }\n-\n         // Use the factory ID system property first\n         try {\n             String systemProp = System.getProperty(property);\n             if (f.exists()) {\n                 Properties props = new Properties();\n                 props.load(new FileInputStream(f));\n-                foundFactory = props.getProperty(property);\n-                if (debug) {\n-                    System.err.println(\n-                        \"JXPath: found java.home property \" + foundFactory);\n-                }\n-                if (foundFactory != null) {\n-                    return foundFactory;\n+                String factory = props.getProperty(property);\n+                if (factory != null) {\n+                    if (debug) {\n+                        System.err.println(\n+                            \"JXPath: found java.home property \" + factory);\n+                    }\n+                    return factory;\n                 }\n             }\n         }\n                 BufferedReader rd =\n                     new BufferedReader(new InputStreamReader(is));\n \n-                foundFactory = rd.readLine();\n+                String factory = rd.readLine();\n                 rd.close();\n \n-                if (debug) {\n-                    System.err.println(\n-                        \"JXPath: loaded from services: \" + foundFactory);\n-                }\n-                if (foundFactory != null && !\"\".equals(foundFactory)) {\n-                    return foundFactory;\n+                if (factory != null && !\"\".equals(factory)) {\n+                    if (debug) {\n+                        System.err.println(\n+                            \"JXPath: loaded from services: \" + factory);\n+                    }\n+                    return factory;\n                 }\n             }\n         }", "timestamp": 1061692210, "metainfo": ""}