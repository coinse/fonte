{"sha": "255910cf788dc4501ced62791a7aed15848c9a04", "log": "loc refactor  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n             return r == 0 ? 1 : r;\n         }\n-        if (p1 == null && p2 == null) {\n+        //henceforth depth1 == depth2:\n+        if (depth1 == 1 || p1 == p2 || p1 != null && p1.equals(p2)) {\n             return 0;\n         }\n-\n-        if (p1 != null && p1.equals(p2)) {\n-            return 0;\n-        }\n-\n-        if (depth1 == 1) {\n-            return 0;\n-        }\n         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n-        if (r != 0) {\n-            return r;\n-        }\n-\n-        return p1.parent.compareChildNodePointers(p1, p2);\n+        return r == 0 ? p1.parent.compareChildNodePointers(p1, p2) : r;\n     }\n \n     /**", "timestamp": 1183409676, "metainfo": ""}