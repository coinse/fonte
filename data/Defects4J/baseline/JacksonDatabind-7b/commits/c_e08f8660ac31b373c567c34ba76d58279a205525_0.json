{"sha": "e08f8660ac31b373c567c34ba76d58279a205525", "log": "Add a test for [Issue#75]", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestKeySerializers.java\n+package com.fasterxml.jackson.failing;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+\n+public class TestKeySerializers extends BaseMapTest\n+{\n+    public static class KarlSerializer extends JsonSerializer<String>\n+    {\n+        @Override\n+        public void serialize(String value, JsonGenerator jgen, SerializerProvider provider) throws IOException {\n+            jgen.writeFieldName(\"Karl\");\n+        }\n+    }\n+\n+    public static class NotKarlBean\n+    {\n+        public Map<String,Integer> map = new HashMap<String,Integer>();\n+        {\n+            map.put(\"Not Karl\", 1);\n+        }\n+    }\n+\n+    public static class KarlBean\n+    {\n+        @JsonSerialize(keyUsing = KarlSerializer.class)\n+        public Map<String,Integer> map = new HashMap<String,Integer>();\n+        {\n+            map.put(\"Not Karl\", 1);\n+        }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+    \n+    public void testNotKarl() throws IOException {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        final String serialized = mapper.writeValueAsString(new NotKarlBean());\n+        assertEquals(\"{\\\"map\\\":{\\\"Not Karl\\\":1}}\", serialized);\n+    }\n+\n+    public void testKarl() throws IOException {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        final String serialized = mapper.writeValueAsString(new KarlBean());\n+        assertEquals(\"{\\\"map\\\":{\\\"Karl\\\":1}}\", serialized);\n+    }\n+\n+    // [Issue#75]: caching of KeySerializers\n+    public void testBoth() throws IOException {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        final String value1 = mapper.writeValueAsString(new NotKarlBean());\n+        assertEquals(\"{\\\"map\\\":{\\\"Not Karl\\\":1}}\", value1);\n+        final String value2 = mapper.writeValueAsString(new KarlBean());\n+        assertEquals(\"{\\\"map\\\":{\\\"Karl\\\":1}}\", value2);\n+    }\n+}", "timestamp": 1348453136, "metainfo": ""}