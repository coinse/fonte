{"sha": "c4a00322e562be3a53b93638b8ea9640a7c27806", "log": "Add a unit test for #359", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestConvertingSerializer.java\n+package com.fasterxml.jackson.failing;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.databind.util.StdConverter;\n+\n+public class TestConvertingSerializer\n+    extends com.fasterxml.jackson.databind.BaseMapTest\n+{\n+    // [Issue#357]\n+    static class A { }\n+\n+    static class B {\n+        @JsonSerialize(contentConverter = AToStringConverter.class)\n+        public List<A> list = Arrays.asList(new A());\n+    }\n+\n+    static class AToStringConverter extends StdConverter<A, List<String>> {\n+        @Override\n+        public List<String> convert(A value) {\n+            return Arrays.asList(\"Hello world!\");\n+        }\n+    }\n+\n+    // [Issue#359]\n+\n+    static class Bean359 {\n+        @JsonSerialize(as = List.class, contentAs = Source.class)\n+        public List<Source> stuff = Arrays.asList(new Source());\n+    }\n+\n+    @JsonSerialize(using = TargetSerializer.class)\n+    static class Target {\n+        public String unexpected = \"Bye.\";\n+    }\n+\n+    @JsonSerialize(converter = SourceToTargetConverter.class)\n+    static class Source { }\n+\n+    static class SourceToTargetConverter extends StdConverter<Source, Target> {\n+        @Override\n+        public Target convert(Source value) {\n+            return new Target();\n+        }\n+    }\n+\n+    static class TargetSerializer extends JsonSerializer<TargetSerializer>\n+    {\n+        @Override\n+        public void serialize(TargetSerializer a, JsonGenerator jsonGenerator, SerializerProvider provider)\n+                throws IOException {\n+            jsonGenerator.writeString(\"Target\");\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    // [Issue#357]\n+    public void testConverterForList357() throws Exception {\n+        String json = objectWriter().writeValueAsString(new B());\n+        assertEquals(\"{\\\"list\\\":[[\\\"Hello world!\\\"]]}\", json);\n+    }\n+\n+    // [Issue#359]\n+    public void testIssue359() throws Exception\n+    {\n+        String json = objectWriter().writeValueAsString(new Bean359());\n+        assertNotNull(json);\n+        assertEquals(\"{\\\"stuff\\\":[\\\"Target\\\"]}\", json);\n+    }\n+\n+}\n--- a/src/test/java/com/fasterxml/jackson/failing/TestIssueGH113.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestIssueGH113.java\n \n import com.fasterxml.jackson.databind.*;\n \n+/**\n+ * Test(s) for [Issue#113], problems with polymorphic types, JsonCreator.\n+ */\n public class TestIssueGH113 extends BaseMapTest\n {\n     @JsonIgnoreProperties(ignoreUnknown = true)", "timestamp": 1386223084, "metainfo": ""}