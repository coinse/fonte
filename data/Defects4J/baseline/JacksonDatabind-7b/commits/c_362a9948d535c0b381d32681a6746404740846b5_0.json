{"sha": "362a9948d535c0b381d32681a6746404740846b5", "log": "Start working on converting deserializers", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n         return null;\n     }\n \n+    /**\n+     * Method for finding {@link Converter} that annotated entity\n+     * (property or class) has indicated to be used as part of\n+     * deserialization.\n+     * If not null, either has to be actual\n+     * {@link Converter} instance, or class for such converter;\n+     * and resulting converter will be used after Jackson has deserializer\n+     * data into intermediate type (Converter input type), and Converter\n+     * needs to convert this into its target type to be set as property value.\n+     *<p>\n+     * This feature is typically used to convert intermediate Jackson types\n+     * (that default deserializers can produce) into custom type instances.\n+     *<p>\n+     * Note also that this feature does not necessarily work well with polymorphic\n+     * type handling, or object identity handling; if such features are needed\n+     * an explicit deserializer is usually better way to handle deserialization.\n+     * \n+     * @param a Annotated property (field, method) or class to check for\n+     *   annotations\n+     *   \n+     * @since 2.2\n+     */\n+    public Object findDeserializationConverter(Annotated a) {\n+        return null;\n+    }\n+\n+    /**\n+     * Method for finding {@link Converter} that annotated property\n+     * has indicated needs to be used for values of container type\n+     * (this also means that method should only be called for properties\n+     * of container types, List/Map/array properties).\n+     *<p>\n+     * If not null, either has to be actual\n+     * {@link Converter} instance, or class for such converter;\n+     * and resulting converter will be used after Jackson has deserializer\n+     * data into intermediate type (Converter input type), and Converter\n+     * needs to convert this into its target type to be set as property value.\n+     *<p>\n+     * Other notes are same as those for {@link #findDeserializationConverter}\n+     * \n+     * @param a Annotated property (field, method) to check.\n+     *   \n+     * @since 2.2\n+     */\n+    public Object findDeserializationContentConverter(AnnotatedMember a) {\n+        return null;\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Deserialization: class annotations\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n     }\n \n     @Override\n-    public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)\n-    {\n+    public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType) {\n         Class<?> result = _primary.findDeserializationContentType(am, baseContentType);\n         if (result == null) {\n             result = _secondary.findDeserializationContentType(am, baseContentType);\n         return result;\n     }\n \n+    @Override\n+    public Object findDeserializationConverter(Annotated a) {\n+        Object ob = _primary.findDeserializationConverter(a);\n+        if (ob == null) {\n+            ob = _secondary.findDeserializationConverter(a);\n+        }\n+        return ob;\n+    }\n+\n+    @Override\n+    public Object findDeserializationContentConverter(AnnotatedMember a) {\n+        Object ob = _primary.findDeserializationContentConverter(a);\n+        if (ob == null) {\n+            ob = _secondary.findDeserializationContentConverter(a);\n+        }\n+        return ob;\n+    }\n+    \n     // // // Deserialization: class annotations\n \n     @Override\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n                 return cls;\n             }\n         }\n-        /* 30-Jun-2011, tatu: Here we used to have support for @JsonContentClass;\n-         *    removed in 1.9\n-         */\n-        return null;\n-    }\n-\n+        return null;\n+    }\n+\n+    @Override\n+    public Object findDeserializationConverter(Annotated a)\n+    {\n+        JsonDeserialize ann = a.getAnnotation(JsonDeserialize.class);\n+        if (ann != null) {\n+            Class<?> def = ann.converter();\n+            if (def != Converter.None.class) {\n+                return def;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public Object findDeserializationContentConverter(AnnotatedMember a)\n+    {\n+        JsonDeserialize ann = a.getAnnotation(JsonDeserialize.class);\n+        if (ann != null) {\n+            Class<?> def = ann.contentConverter();\n+            if (def != Converter.None.class) {\n+                return def;\n+            }\n+        }\n+        return null;    }\n+    \n     /*\n     /**********************************************************\n     /* Deserialization: Class annotations\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/convert/TestConvertingDeserializer.java\n+package com.fasterxml.jackson.databind.convert;\n+\n+public class TestConvertingDeserializer {\n+\n+}", "timestamp": 1362196728, "metainfo": ""}