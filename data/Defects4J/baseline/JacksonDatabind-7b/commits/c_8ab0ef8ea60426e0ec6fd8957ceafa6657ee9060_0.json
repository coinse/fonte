{"sha": "8ab0ef8ea60426e0ec6fd8957ceafa6657ee9060", "log": "fix a minor bug with filtered map serialization", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n             if (_filterId != null) {\n                 serializeFilteredFields(value, jgen, provider,\n                         findPropertyFilter(provider, _filterId, value));\n+                jgen.writeEndObject();\n                 return;\n             }\n             if (_sortKeys || provider.isEnabled(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS)) {\n--- a/src/test/java/com/fasterxml/jackson/databind/filter/TestMapFiltering.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/filter/TestMapFiltering.java\n     {\n         FilterProvider prov = new SimpleFilterProvider().addFilter(\"filterX\",\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\"b\"));\n-        assertEquals(aposToQuotes(\"{'values':{'b':5}}\"),\n-                MAPPER.writer(prov).writeValueAsString(new MapBean()));\n+        String json = MAPPER.writer(prov).writeValueAsString(new MapBean());\n+        assertEquals(aposToQuotes(\"{'values':{'b':5}}\"), json);\n     }\n \n     public void testMapFilteringViaClass() throws Exception\n         bean.put(\"b\", 3);\n         FilterProvider prov = new SimpleFilterProvider().addFilter(\"filterForMaps\",\n                 SimpleBeanPropertyFilter.filterOutAllExcept(\"b\"));\n-        assertEquals(aposToQuotes(\"{'b':3}\"),\n-                MAPPER.writer(prov).writeValueAsString(bean));\n+        String json = MAPPER.writer(prov).writeValueAsString(bean);\n+        assertEquals(aposToQuotes(\"{'b':3}\"), json);\n     }\n     \n }", "timestamp": 1398830019, "metainfo": ""}