{"sha": "1fe91631f0ba9280d1f78415b758046d401e9b0a", "log": "Add a unit test.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/TestVersions.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestVersions.java\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+import com.fasterxml.jackson.databind.cfg.DatabindVersion;\n+import com.fasterxml.jackson.databind.cfg.PackageVersion;\n \n /**\n  * Tests to ensure that we get proper Version information via\n  */\n public class TestVersions extends com.fasterxml.jackson.test.BaseTest\n {\n-    // Not a good to do this, but has to do, for now...\n-    private final static int MAJOR_VERSION = 2;\n-    private final static int MINOR_VERSION = 2;\n-\n     private final static String GROUP_ID = \"com.fasterxml.jackson.core\";\n     private final static String ARTIFACT_ID = \"jackson-databind\";\n \n         assertVersion(new JacksonAnnotationIntrospector());\n     }\n \n+    public void testDatabindVersion()\n+    {\n+        assertEquals(PackageVersion.VERSION, DatabindVersion.instance.version());\n+    }\n+\n     /*\n     /**********************************************************\n     /* Helper methods\n     {\n         Version v = vers.version();\n         assertFalse(\"Should find version information (got \"+v+\")\", v.isUknownVersion());\n-        assertEquals(MAJOR_VERSION, v.getMajorVersion());\n-        assertEquals(MINOR_VERSION, v.getMinorVersion());\n-        // Check patch level initially, comment out for maint versions\n-//        assertEquals(0, v.getPatchLevel());\n-        assertEquals(GROUP_ID, v.getGroupId());\n-        assertEquals(ARTIFACT_ID, v.getArtifactId());\n+        assertEquals(PackageVersion.VERSION, v);\n     }\n }\n ", "timestamp": 1357336744, "metainfo": ""}