{"sha": "a769351d239c09fbe544d18f489e31a078879a44", "log": "Last part of this round of refactoring aimed at passing full PropertyName (not just simple name) via POJO properties collector", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n             for (int i = 0, len = ctor.getParameterCount(); i < len; ++i) {\n                 AnnotatedParameter param = ctor.getParameter(i);\n                 PropertyName pn = ai.findNameForDeserialization(param);\n-                String name = (pn == null) ? null : pn.getSimpleName();\n                 // is it legal not to have name?\n-                if (name != null && name.length() > 0) {\n+                if (pn != null && !pn.isEmpty()) {\n                     // shouldn't need to worry about @JsonIgnore (no real point, so)\n-                    POJOPropertyBuilder prop = _property(name);\n+                    POJOPropertyBuilder prop = _property(pn);\n                     // 28-Mar-2014, tatu: for now, all creator names considered explicit;\n                     //    may need to change for JDK 8 where implicit names exist\n-                    prop.addCtor(param, name, true, true, false);\n+                    prop.addCtor(param, pn, true, true, false);\n                     _creatorProperties.add(prop);\n                 }\n             }\n             for (int i = 0, len = factory.getParameterCount(); i < len; ++i) {\n                 AnnotatedParameter param = factory.getParameter(i);\n                 PropertyName pn = ai.findNameForDeserialization(param);\n-                String name = (pn == null) ? null : pn.getSimpleName();\n                 // is it legal not to have name?\n-                if (name != null) {\n+                if (pn != null && !pn.isEmpty()) {\n                     // shouldn't need to worry about @JsonIgnore (no real point, so)\n-                    POJOPropertyBuilder prop = _property(name);\n+                    POJOPropertyBuilder prop = _property(pn);\n                     // 28-Mar-2014, tatu: for now, all names considered explicit\n-                    prop.addCtor(param, name, true, true, false);\n+                    prop.addCtor(param, pn, true, true, false);\n                     _creatorProperties.add(prop);\n                 }\n             }\n     protected void reportProblem(String msg) {\n         throw new IllegalArgumentException(\"Problem with definition of \"+_classDef+\": \"+msg);\n     }\n-    \n+\n+    protected POJOPropertyBuilder _property(PropertyName name) {\n+        return _property(name.getSimpleName());\n+    }\n+    \n+    // !!! TODO: deprecate, require use of PropertyName\n     protected POJOPropertyBuilder _property(String implName)\n     {\n         POJOPropertyBuilder prop = _properties.get(implName);\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n             }\n             PropertyName name = node.name;\n             // different from default name?\n-            /* 14-Mar-2014, tatu: As per [#369], Must match local name... but,\n-             *   shouldn't really exclude namespace. Not sure what's the best\n-             *   fix but for now, let's not worry about that.\n-             */\n             if (name.equals(_name)) { // nope, skip\n                 continue;\n             }\n             next = n;\n             // ensure that we'll never have missing names\n             this.name = (name == null || !name.hasSimpleName()) ? null : name;\n+\n+            if (explName && this.name == null) { // sanity check to catch internal problems\n+                throw new IllegalArgumentException(\"Can not pass true for 'explName' if name is null/empty\");\n+            }\n             \n             isNameExplicit = explName;\n             isVisible = visible;", "timestamp": 1396238716, "metainfo": ""}