{"sha": "2337bfa822930d8f7ee96ee33f8e714e1f94dd8c", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n     protected String _managedReferenceName;\n \n     /**\n+     * If property has associated view information (list of\n+     * Views in which property is to be included), this contains\n+     * those views; if not, will be null.\n+     */\n+    protected Class<?>[] _views;\n+    \n+    /**\n      * Index of property (within all property of a bean); assigned\n      * when all properties have been collected. Order of entries\n      * is arbitrary, but once indexes are assigned they are not\n         _managedReferenceName = n;\n     }\n     \n+    public void setViews(Class<?>[] views) {\n+        _views = views;\n+    }\n+    \n     /**\n      * Method used to assign index for property.\n      */\n     public JsonDeserializer<Object> getValueDeserializer() { return _valueDeserializer; }\n \n     public TypeDeserializer getValueTypeDeserializer() { return _valueTypeDeserializer; }\n+\n+    public Class<?>[] getViews() { return _views; }\n+\n+    public boolean hasViews() { return _views != null; }\n     \n     /**\n      * Method for accessing unique index of this property; indexes are\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/ThrowableDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/ThrowableDeserializer.java\n /**\n  * Deserializer that builds on basic {@link BeanDeserializer} but\n  * override some aspects like instance construction.\n- *<p>\n- * Note that this deserializer was significantly changed in Jackson 1.7\n- * (due to massive changes in {@link BeanDeserializer}).\n  */\n public class ThrowableDeserializer\n     extends BeanDeserializer\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializer.java\n \n \n /**\n- * Serializer class that can serialize arbitrary bean objects\n+ * Serializer class that can serialize Java objects that map\n+ * to JSON Object output. Internally handling is mostly dealt with\n+ * by a sequence of {@link BeanPropertyWriter}s that will handle\n+ * access value to serialize and call appropriate serializers to\n+ * write out JSON.\n  *<p>\n  * Implementation note: we will post-process resulting serializer,\n  * to figure out actual serializers for final types. This must be\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n      * definitions. Default implementation constructs filter that checks\n      * active view type to views property is to be included in.\n      */\n-    protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer, Class<?>[] inViews)\n+    protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer,\n+            Class<?>[] inViews)\n     {\n         return FilteredBeanPropertyWriter.constructViewBased(writer, inViews);\n     }", "timestamp": 1327538700, "metainfo": ""}