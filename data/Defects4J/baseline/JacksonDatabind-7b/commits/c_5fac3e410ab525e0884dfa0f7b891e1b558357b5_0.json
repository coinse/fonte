{"sha": "5fac3e410ab525e0884dfa0f7b891e1b558357b5", "log": "add one more unit test for explicit is-getter", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonSerialize.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonSerialize.java\n import java.util.*;\n \n import com.fasterxml.jackson.annotation.*;\n+import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;\n import com.fasterxml.jackson.core.JsonGenerator;\n-\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n \n         assertEquals(\"{\\\"id\\\":\\\"fooId\\\",\\\"bar\\\":\\\"barId\\\"}\",\n                 MAPPER.writeValueAsString(new Foo294(\"fooId\", \"barId\")));\n     }\n+\n+    @JsonPropertyOrder({ \"a\", \"something\" })\n+    static class Response {\n+        public String a = \"x\";\n+\n+        @JsonProperty   //does not show up\n+        public boolean isSomething() { return true; }\n+    }\n+\n+    public void testWithIsGetter() throws Exception\n+    {\n+        ObjectMapper m = new ObjectMapper();\n+        m.setVisibility(PropertyAccessor.GETTER, Visibility.NONE)\n+        .setVisibility(PropertyAccessor.FIELD, Visibility.ANY)\n+        .setVisibility(PropertyAccessor.CREATOR, Visibility.NONE)\n+        .setVisibility(PropertyAccessor.IS_GETTER, Visibility.NONE)\n+        .setVisibility(PropertyAccessor.SETTER, Visibility.NONE);        \n+        final String JSON = m.writeValueAsString(new Response());\n+        assertEquals(aposToQuotes(\"{'a':'x','something':true}\"), JSON);\n+    }\n }", "timestamp": 1402805062, "metainfo": ""}