{"sha": "877e3d8b9f1dcccf94d260667f8db3e1bb2efd98", "log": "Fix for #459 in master", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n         _beanDesc = src._beanDesc;\n         _defaultViewInclusion = src._defaultViewInclusion;\n \n-        _anySetter = src._anySetter;\n-        _ignoreAllUnknown = src._ignoreAllUnknown;\n-\n         // let's make copy of properties\n         _properties.putAll(src._properties);\n+        _injectables = _copy(src._injectables);\n         _backRefProperties = _copy(src._backRefProperties);\n         // Hmmh. Should we create defensive copies here? For now, not yet\n         _ignorableProps = src._ignorableProps;        \n         _valueInstantiator = src._valueInstantiator;\n         _objectIdReader = src._objectIdReader;\n         \n+        _anySetter = src._anySetter;\n+        _ignoreAllUnknown = src._ignoreAllUnknown;\n+        \n         _buildMethod = src._buildMethod;\n         _builderConfig = src._builderConfig;\n     }\n \n-    private static HashMap<String, SettableBeanProperty> _copy(HashMap<String, SettableBeanProperty> src)\n-    {\n-        if (src == null) {\n-            return null;\n-        }\n-        return new HashMap<String, SettableBeanProperty>(src);\n+    private static HashMap<String, SettableBeanProperty> _copy(HashMap<String, SettableBeanProperty> src) {\n+        return (src == null) ? null\n+                : new HashMap<String, SettableBeanProperty>(src);\n+    }\n+\n+    private static <T> List<T> _copy(List<T> src) {\n+        return (src == null) ? null : new ArrayList<T>(src);\n     }\n     \n     /*\n     /**\n      * Method for adding a new property or replacing a property.\n      */\n-    public void addOrReplaceProperty(SettableBeanProperty prop, boolean allowOverride)\n-    {\n+    public void addOrReplaceProperty(SettableBeanProperty prop, boolean allowOverride) {\n         _properties.put(prop.getName(), prop);\n     }\n ", "timestamp": 1400186009, "metainfo": ""}