{"sha": "00d8158c85aed6aed12c84e9558064717f528d57", "log": "add bit more complete handling of deser views", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n         if (_propertyBasedCreator != null) {\n             return deserializeUsingPropertyBasedWithUnwrapped(jp, ctxt);\n         }\n-        \n         TokenBuffer tokens = new TokenBuffer(jp.getCodec());\n         tokens.writeStartObject();\n         final Object bean = _valueInstantiator.createUsingDefault(ctxt);\n         if (_injectables != null) {\n             injectValues(ctxt, bean);\n         }\n+\n+        final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n         \n         for (; jp.getCurrentToken() != JsonToken.END_OBJECT; jp.nextToken()) {\n             String propName = jp.getCurrentName();\n             jp.nextToken();\n             SettableBeanProperty prop = _beanProperties.find(propName);\n             if (prop != null) { // normal case\n+                if (activeView != null && !prop.visibleInView(activeView)) {\n+                    jp.skipChildren();\n+                    continue;\n+                }\n                 try {\n                     prop.deserializeAndSet(jp, ctxt, bean);\n                 } catch (Exception e) {\n         }\n         TokenBuffer tokens = new TokenBuffer(jp.getCodec());\n         tokens.writeStartObject();\n+        final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n         for (; t == JsonToken.FIELD_NAME; t = jp.nextToken()) {\n             String propName = jp.getCurrentName();\n             SettableBeanProperty prop = _beanProperties.find(propName);\n             jp.nextToken();\n             if (prop != null) { // normal case\n+                if (activeView != null && !prop.visibleInView(activeView)) {\n+                    jp.skipChildren();\n+                    continue;\n+                }\n                 try {\n                     prop.deserializeAndSet(jp, ctxt, bean);\n                 } catch (Exception e) {\n             Object bean)\n         throws IOException, JsonProcessingException\n     {\n+        final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n         final ExternalTypeHandler ext = _externalTypeIdHandler.start();\n         for (; jp.getCurrentToken() != JsonToken.END_OBJECT; jp.nextToken()) {\n             String propName = jp.getCurrentName();\n             jp.nextToken();\n             SettableBeanProperty prop = _beanProperties.find(propName);\n             if (prop != null) { // normal case\n+                if (activeView != null && !prop.visibleInView(activeView)) {\n+                    jp.skipChildren();\n+                    continue;\n+                }\n                 try {\n                     prop.deserializeAndSet(jp, ctxt, bean);\n                 } catch (Exception e) {", "timestamp": 1327732866, "metainfo": ""}