{"sha": "8be8fe51d07012c8963c6bde56a9ebf1a41c2599", "log": "Trying to resolve strange, spurious test failures (only occurs on one build platform), suspect it has something to do with sharing of ObjectMappers during tests", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/creators/TestCreators2.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/creators/TestCreators2.java\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n \n-public class TestCreators2\n-    extends BaseMapTest\n+public class TestCreators2 extends BaseMapTest\n {\n-    /*\n-    /**********************************************************\n-    /* Helper classes\n-    /**********************************************************\n-     */\n-\n     static class HashTest\n     {\n         final byte[] bytes;\n     /**********************************************************\n      */\n \n-    private final ObjectMapper MAPPER = objectMapper();\n+    private final ObjectMapper MAPPER = new ObjectMapper();\n     \n     // for [JACKSON-547]\n     public void testExceptionFromConstructor() throws Exception\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestUntypedDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestUntypedDeserialization.java\n     /* Test methods\n     /**********************************************************\n      */\n-\n+    \n     @SuppressWarnings(\"unchecked\")\n     public void testSampleDoc() throws Exception\n     {\n \n         // and that's all folks!\n     }\n-\n+    \n     public void testNestedUntypes() throws IOException\n     {\n-        ObjectMapper mapper = objectMapper();\n+        // 05-Apr-2014, tatu: Odd failures if using shared mapper; so work around:\n+        final ObjectMapper mapper = new ObjectMapper();\n         Object root = mapper.readValue(aposToQuotes(\"{'a':3,'b':[1,2]}\"),\n                 Object.class);\n         assertTrue(root instanceof Map<?,?>);\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestTypedDeserializationWithDefault.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestTypedDeserializationWithDefault.java\n     /* Unit tests, deserialization\n     /**********************************************************\n      */\n+\n+    private final ObjectMapper MAPPER = new ObjectMapper();\n     \n     public void testDeserializationWithObject() throws Exception\n     {\n-        Inter inter = objectReader(Inter.class).readValue(\"{\\\"type\\\": \\\"mine\\\", \\\"blah\\\": [\\\"a\\\", \\\"b\\\", \\\"c\\\"]}\");\n+        Inter inter = MAPPER.reader(Inter.class).readValue(\"{\\\"type\\\": \\\"mine\\\", \\\"blah\\\": [\\\"a\\\", \\\"b\\\", \\\"c\\\"]}\");\n         assertTrue(inter instanceof MyInter);\n         assertFalse(inter instanceof LegacyInter);\n         assertEquals(Arrays.asList(\"a\", \"b\", \"c\"), ((MyInter) inter).blah);\n \n     public void testDeserializationWithString() throws Exception\n     {\n-        Inter inter = objectReader(Inter.class).readValue(\"\\\"a,b,c,d\\\"\");\n+        Inter inter = MAPPER.reader(Inter.class).readValue(\"\\\"a,b,c,d\\\"\");\n         assertTrue(inter instanceof LegacyInter);\n         assertEquals(Arrays.asList(\"a\", \"b\", \"c\", \"d\"), ((MyInter) inter).blah);\n     }\n \n     public void testDeserializationWithArray() throws Exception\n     {\n-        Inter inter = objectReader(Inter.class).readValue(\"[\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"]\");\n+        Inter inter = MAPPER.reader(Inter.class).readValue(\"[\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"]\");\n         assertTrue(inter instanceof LegacyInter);\n         assertEquals(Arrays.asList(\"a\", \"b\", \"c\", \"d\"), ((MyInter) inter).blah);\n     }\n \n     public void testDeserializationWithArrayOfSize2() throws Exception\n     {\n-        Inter inter = objectReader(Inter.class).readValue(\"[\\\"a\\\", \\\"b\\\"]\");\n+        Inter inter = MAPPER.reader(Inter.class).readValue(\"[\\\"a\\\", \\\"b\\\"]\");\n         assertTrue(inter instanceof LegacyInter);\n         assertEquals(Arrays.asList(\"a\", \"b\"), ((MyInter) inter).blah);\n     }\n     // [Issue#148]\n     public void testDefaultAsNoClass() throws Exception\n     {\n-        Object ob = objectReader(DefaultWithNoClass.class).readValue(\"{ }\");\n+        Object ob = MAPPER.reader(DefaultWithNoClass.class).readValue(\"{ }\");\n         assertNull(ob);\n-        ob = objectReader(DefaultWithNoClass.class).readValue(\"{ \\\"bogus\\\":3 }\");\n+        ob = MAPPER.reader(DefaultWithNoClass.class).readValue(\"{ \\\"bogus\\\":3 }\");\n         assertNull(ob);\n     }\n ", "timestamp": 1396758914, "metainfo": ""}