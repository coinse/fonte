{"sha": "951700f33ff1ab6b3704582ca3d7d9c8834db4e6", "log": "Javadoc improved to clarify on null handling by JsonSerializer", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java\n  * Abstract class that defines API used by {@link ObjectMapper} (and\n  * other chained {@link JsonSerializer}s too) to serialize Objects of\n  * arbitrary types into JSON, using provided {@link JsonGenerator}.\n- *<p>\n- * NOTE: it is recommended that custom serializers extend\n  * {@link com.fasterxml.jackson.databind.ser.std.StdSerializer} instead\n  * of this class, since it will implement many of optional\n  * methods of this class.\n+ *<p>\n+ * NOTE: various <code>serialize</code> methods are never (to be) called\n+ * with null values -- caller <b>must</b> handle null values, usually\n+ * by calling {@link SerializerProvider#findNullValueSerializer} to obtain\n+ * serializer to use.\n+ * This also means that custom serializers can not be directly used to change\n+ * the output to produce when serializing null values.\n  *<p>\n  * If serializer is an aggregate one -- meaning it delegates handling of some\n  * of its contents by using other serializer(s) -- it typically also needs", "timestamp": 1357245637, "metainfo": ""}