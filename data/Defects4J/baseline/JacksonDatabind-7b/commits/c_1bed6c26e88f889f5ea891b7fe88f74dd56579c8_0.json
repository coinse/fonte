{"sha": "1bed6c26e88f889f5ea891b7fe88f74dd56579c8", "log": "Fix #412 in master", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectWriter.java\n      * Method for constructing a new instance that is configured\n      * with specified feature enabled.\n      */\n-    public ObjectWriter with(SerializationFeature feature) \n-    {\n+    public ObjectWriter with(SerializationFeature feature)  {\n         SerializationConfig newConfig = _config.with(feature);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }\n      * Method for constructing a new instance that is configured\n      * with specified features enabled.\n      */\n-    public ObjectWriter with(SerializationFeature first,\n-            SerializationFeature... other)\n-    {\n+    public ObjectWriter with(SerializationFeature first, SerializationFeature... other) {\n         SerializationConfig newConfig = _config.with(first, other);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }    \n      * Method for constructing a new instance that is configured\n      * with specified features enabled.\n      */\n-    public ObjectWriter withFeatures(SerializationFeature... features)\n-    {\n+    public ObjectWriter withFeatures(SerializationFeature... features) {\n         SerializationConfig newConfig = _config.withFeatures(features);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }    \n      * Method for constructing a new instance that is configured\n      * with specified feature enabled.\n      */\n-    public ObjectWriter without(SerializationFeature feature) \n-    {\n+    public ObjectWriter without(SerializationFeature feature) {\n         SerializationConfig newConfig = _config.without(feature);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }    \n      * Method for constructing a new instance that is configured\n      * with specified features enabled.\n      */\n-    public ObjectWriter without(SerializationFeature first,\n-            SerializationFeature... other)\n-    {\n+    public ObjectWriter without(SerializationFeature first, SerializationFeature... other) {\n         SerializationConfig newConfig = _config.without(first, other);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }    \n      * Method for constructing a new instance that is configured\n      * with specified features enabled.\n      */\n-    public ObjectWriter withoutFeatures(SerializationFeature... features)\n-    {\n+    public ObjectWriter withoutFeatures(SerializationFeature... features) {\n         SerializationConfig newConfig = _config.withoutFeatures(features);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }    \n      * Note that the method does NOT change state of this reader, but\n      * rather construct and returns a newly configured instance.\n      */\n-    public ObjectWriter with(DateFormat df)\n-    {\n+    public ObjectWriter with(DateFormat df) {\n         SerializationConfig newConfig = _config.with(df);\n         return (newConfig == _config) ? this : new ObjectWriter(this, newConfig);\n     }\n      * Method that will construct a new instance that will use the default\n      * pretty printer for serialization.\n      */\n-    public ObjectWriter withDefaultPrettyPrinter()\n-    {\n+    public ObjectWriter withDefaultPrettyPrinter() {\n         return with(new DefaultPrettyPrinter());\n     }\n \n      * Method that will construct a new instance that uses specified\n      * provider for resolving filter instances by id.\n      */\n-    public ObjectWriter with(FilterProvider filterProvider)\n-    {\n-        if (filterProvider == _config.getFilterProvider()) { // no change?\n-            return this;\n-        }\n-        return new ObjectWriter(this, _config.withFilters(filterProvider));\n+    public ObjectWriter with(FilterProvider filterProvider) {\n+        return (filterProvider == _config.getFilterProvider()) ? this\n+                 : new ObjectWriter(this, _config.withFilters(filterProvider));\n     }\n \n     /**\n      * Method that will construct a new instance that will use specified pretty\n      * printer (or, if null, will not do any pretty-printing)\n      */\n-    public ObjectWriter with(PrettyPrinter pp)\n-    {\n+    public ObjectWriter with(PrettyPrinter pp) {\n         if (pp == _prettyPrinter) {\n             return this;\n         }\n      * Note that method does NOT change state of this reader, but\n      * rather construct and returns a newly configured instance.\n      */\n-    public ObjectWriter withRootName(String rootName)\n-    {\n+    public ObjectWriter withRootName(String rootName) {\n         SerializationConfig newConfig = _config.withRootName(rootName);\n         return (newConfig == _config) ? this :  new ObjectWriter(this, newConfig);\n     }\n      * rather construct and returns a newly configured instance.\n      */\n     \n-    public ObjectWriter withSchema(FormatSchema schema)\n-    {\n+    public ObjectWriter withSchema(FormatSchema schema) {\n         if (_schema == schema) {\n             return this;\n         }\n      * Note that method does NOT change state of this reader, but\n      * rather construct and returns a newly configured instance.\n      */\n-    public ObjectWriter withType(JavaType rootType)\n-    {\n+    public ObjectWriter withType(JavaType rootType) {\n         // 15-Mar-2013, tatu: Important! Indicate that static typing is needed:\n         rootType = rootType.withStaticTyping();\n         JsonSerializer<Object> rootSer = _prefetchRootSerializer(_config, rootType);\n      * @since 2.3\n      */\n     public ObjectWriter with(JsonFactory f) {\n-        if (f == _generatorFactory) {\n-            return this;\n-        }\n-        return new ObjectWriter(this, f);\n+        return (f == _generatorFactory) ? this : new ObjectWriter(this, f);\n     }    \n \n     /**\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n             wrap = _config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE);\n             if (wrap) {\n                 jgen.writeStartObject();\n-                jgen.writeFieldName(_rootNames.findRootName(value.getClass(), _config));\n+                jgen.writeFieldName((rootType == null)\n+                        ? _rootNames.findRootName(value.getClass(), _config)\n+                        : _rootNames.findRootName(rootType, _config));\n             }\n         } else if (rootName.length() == 0) {\n             wrap = false;", "timestamp": 1393397986, "metainfo": ""}