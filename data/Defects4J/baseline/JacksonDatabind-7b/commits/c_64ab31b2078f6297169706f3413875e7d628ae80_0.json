{"sha": "64ab31b2078f6297169706f3413875e7d628ae80", "log": "A fix to PropertyBasedObjectIdGenerator, related to problem [https://github.com/FasterXML/jackson-module-jaxb-annotations/issues/9] of JAXB annotations module", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/PropertyBasedObjectIdGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/PropertyBasedObjectIdGenerator.java\n import com.fasterxml.jackson.databind.ser.*;\n \n public class PropertyBasedObjectIdGenerator\n-\textends ObjectIdGenerators.PropertyGenerator\n+    extends ObjectIdGenerators.PropertyGenerator\n {\n     protected final BeanPropertyWriter _property;\n     \n     {\n         super(scope);\n         _property = prop;\n+    }\n+\n+    /**\n+     * We must override this method, to prevent errors when scopes are the same,\n+     * but underlying class (on which to access property) is different.\n+     */\n+    @Override\n+    public boolean canUseFor(ObjectIdGenerator<?> gen) {\n+        if (gen.getClass() == getClass()) {\n+            PropertyBasedObjectIdGenerator other = (PropertyBasedObjectIdGenerator) gen;\n+            if (other.getScope() == _scope) {\n+                /* 26-Jul-2012, tatu: This is actually not enough, because the property\n+                 *   accessor within BeanPropertyWriter won't work for other property fields\n+                 *  (see [https://github.com/FasterXML/jackson-module-jaxb-annotations/issues/9]\n+                 *  for details).\n+                 *  So we need to verify that underlying property is actually the same.\n+                 */\n+                return (other._property == _property);\n+            }\n+        }\n+        return false;\n     }\n     \n     @Override", "timestamp": 1343369343, "metainfo": ""}