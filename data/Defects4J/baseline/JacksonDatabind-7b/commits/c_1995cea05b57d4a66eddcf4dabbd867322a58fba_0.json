{"sha": "1995cea05b57d4a66eddcf4dabbd867322a58fba", "log": "bit more unit testing x", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java\n     protected HashMap<Class<? extends Annotation>,Annotation> _annotations;\n \n     public AnnotationMap() { }\n+    \n     private AnnotationMap(HashMap<Class<? extends Annotation>,Annotation> a) {\n         _annotations = a;\n     }\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestConfig.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestConfig.java\n     }\n \n     enum Alpha { A, B, C; }\n+\n+    public static class SimpleBean {\n+        public int x, y;\n+    }\n     \n     /*\n     /**********************************************************\n         // should still use the basic name handling here\n         assertEquals(Alpha.B, m.readValue(quote(\"B\"), Alpha.class));\n     }\n+\n+    public void testNoAccessOverrides() throws Exception\n+    {\n+        ObjectMapper m = new ObjectMapper();\n+        m.disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS);\n+        SimpleBean bean = m.readValue(\"{\\\"x\\\":1,\\\"y\\\":2}\", SimpleBean.class);\n+        assertEquals(1, bean.x);\n+        assertEquals(2, bean.y);\n+    }\n }\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestConfig.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestConfig.java\n     static class Indentable {\n         public int a = 3;\n     }\n+\n+    public static class SimpleBean {\n+        public int x = 1;\n+    }\n     \n     /*\n     /**********************************************************\n      */\n \n     final static ObjectMapper MAPPER = new ObjectMapper();\n-    \n+\n     public void testDefaults()\n     {\n         SerializationConfig cfg = MAPPER.getSerializationConfig();\n         assertEquals(INDENTED, sw.toString());\n     }\n \n+    public void testNoAccessOverrides() throws Exception\n+    {\n+        ObjectMapper m = new ObjectMapper();\n+        m.disable(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS);\n+        assertEquals(\"{\\\"x\\\":1}\", m.writeValueAsString(new SimpleBean()));\n+    }\n+    \n     private final static String getLF() {\n         return System.getProperty(\"line.separator\");\n     }", "timestamp": 1364503127, "metainfo": ""}