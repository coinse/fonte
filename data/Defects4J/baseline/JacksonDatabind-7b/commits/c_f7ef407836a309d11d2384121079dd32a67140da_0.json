{"sha": "f7ef407836a309d11d2384121079dd32a67140da", "log": "Adding Character tests  Adding Character tests to prove there 'null' JSON check in NumberDeserializer removed in commit 72e590f80883551fe212bfdabf65993eaf66fa1e was not required", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestSimpleTypes.java\n     final static class FloatBean {\n         float _v;\n         void setV(float v) { _v = v; }\n+    }\n+    \n+    final static class CharacterBean {\n+        char _v;\n+        void setV(char v) { _v = v; }\n+        char getV() { return _v; }\n+    }\n+    \n+    final static class CharacterWrapperBean {\n+        Character _v;\n+        void setV(Character v) { _v = v; }\n+        Character getV() { return _v; }\n     }\n \n     /**\n         // But can also pass in ascii code\n         result = MAPPER.readValue(new StringReader(\" \"+((int) 'X')), Character.class);\n         assertEquals(Character.valueOf('X'), result);\n+        \n+        final CharacterWrapperBean wrapper = MAPPER.readValue(new StringReader(\"{\\\"v\\\":null}\"), CharacterWrapperBean.class);\n+        assertNotNull(wrapper);\n+        assertNull(wrapper.getV());\n+        \n+        final ObjectMapper mapper = new ObjectMapper();\n+        try {\n+            mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);\n+            mapper.readValue(\"{\\\"v\\\":null}\", CharacterBean.class);\n+            fail(\"Attempting to deserialize a 'null' JSON reference into a 'char' property did not throw an exception\");\n+        } catch (JsonMappingException exp) {\n+            //Exception thrown as required\n+        }\n+        \n+        mapper.disable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES);  \n+        final CharacterBean charBean = MAPPER.readValue(new StringReader(\"{\\\"v\\\":null}\"), CharacterBean.class);\n+        assertNotNull(wrapper);\n+        assertEquals('\\u0000', charBean.getV());\n     }\n \n     public void testIntWrapper() throws Exception", "timestamp": 1389471000, "metainfo": ""}