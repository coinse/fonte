{"sha": "614a72e345fa054369f9e32540656ac26e432823", "log": "Adding explicit null check for BeanPropertyMap, to improve troubleshooting", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializationProblemHandler.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializationProblemHandler.java\n      * Content (supposedly) matching the property are accessible via\n      * parser that can be obtained from passed deserialization context.\n      * Handler can also choose to skip the content; if so, it MUST return\n-     * true to indicate it did handle property succesfully.\n+     * true to indicate it did handle property successfully.\n      * Skipping is usually done like so:\n      *<pre>\n-     *  ctxt.getParser().skipChildren();\n+     *  jp.skipChildren();\n      *</pre>\n      *<p>\n      * Note: version 1.2 added new deserialization feature\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n \n     public SettableBeanProperty find(String key)\n     {\n+        if (key == null) {\n+            throw new IllegalArgumentException(\"Can not pass null property name\");\n+        }\n         int index = key.hashCode() & _hashMask;\n         Bucket bucket = _buckets[index];\n         // Let's unroll first lookup since that is null or match in 90+% cases", "timestamp": 1386008435, "metainfo": ""}