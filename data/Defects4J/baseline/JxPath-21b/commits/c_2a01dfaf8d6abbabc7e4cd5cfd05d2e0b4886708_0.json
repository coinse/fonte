{"sha": "2a01dfaf8d6abbabc7e4cd5cfd05d2e0b4886708", "log": "[JXPATH-89] relax restriction against comparisons between different trees; incompatible parents are simply equal (thus no assumptions can be made wrt order).  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n         }\n \n         if (depth1 == 1) {\n-            throw new JXPathException(\n-                    \"Cannot compare pointers that do not belong to the same tree: '\"\n-                            + p1 + \"' and '\" + p2 + \"'\");\n+            return 0;\n         }\n         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n         if (r != 0) {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n  */\n package org.apache.commons.jxpath.ri.compiler;\n \n+import java.io.StringReader;\n+import java.util.Iterator;\n+\n+import javax.xml.parsers.DocumentBuilderFactory;\n+\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.JXPathTestCase;\n import org.apache.commons.jxpath.Variables;\n+import org.w3c.dom.Document;\n+import org.xml.sax.InputSource;\n \n /**\n  * Test basic functionality of JXPath - infoset types,\n         assertTrue(\n             \"Evaluating '$none', expected exception - did not get it\",\n             exception);\n-\n+        \n         exception = false;\n         try {\n             context.setValue(\"$none\", new Integer(1));\n             \"temp2\",\n             context.getValue(\"$temp[1]\"));\n     }\n+    \n+    public void testUnionOfVariableAndNode() throws Exception {\n+        Document doc = DocumentBuilderFactory.newInstance()\n+                .newDocumentBuilder().parse(\n+                        new InputSource(new StringReader(\n+                                \"<MAIN><A/><A/></MAIN>\")));\n+\n+        JXPathContext context = JXPathContext.newContext(doc);\n+        context.getVariables().declareVariable(\"var\", \"varValue\");\n+        int sz = 0;\n+        for (Iterator ptrs = context.iteratePointers(\"$var | /MAIN/A\"); ptrs.hasNext(); sz++) {\n+            ptrs.next();\n+        }\n+        assertEquals(3, sz);\n+    }\n }", "timestamp": 1183409267, "metainfo": ""}