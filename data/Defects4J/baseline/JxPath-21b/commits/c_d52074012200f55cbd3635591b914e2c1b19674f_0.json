{"sha": "d52074012200f55cbd3635591b914e2c1b19674f", "log": "[JXPATH-97] implement prefix matching for undeclared XML namespaces  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n             if (wildcard && testPrefix == null) {\n                 return true;\n             }\n-\n             if (wildcard\n                 || testName.getName()\n                         .equals(DOMNodePointer.getLocalName(node))) {\n                 String nodeNS = DOMNodePointer.getNamespaceURI(node);\n-                return equalStrings(namespaceURI, nodeNS);\n+                return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n+                        && equalStrings(testPrefix, getPrefix(node));\n             }\n             return false;\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n             if (wildcard && testPrefix == null) {\n                 return true;\n             }\n-\n             if (wildcard\n                 || testName.getName()\n                         .equals(JDOMNodePointer.getLocalName(node))) {\n                 String nodeNS = JDOMNodePointer.getNamespaceURI(node);\n-                return equalStrings(namespaceURI, nodeNS);\n+                return equalStrings(namespaceURI, nodeNS) || nodeNS == null\n+                        && equalStrings(testPrefix, getPrefix(node));\n             }\n             return false;\n         }\n--- a/src/test/org/apache/commons/jxpath/JXPathTestSuite.java\n+++ b/src/test/org/apache/commons/jxpath/JXPathTestSuite.java\n import org.apache.commons.jxpath.ri.compiler.CoreOperationTest;\n import org.apache.commons.jxpath.ri.compiler.ExtensionFunctionTest;\n import org.apache.commons.jxpath.ri.compiler.VariableTest;\n+import org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest;\n import org.apache.commons.jxpath.ri.model.MixedModelTest;\n+import org.apache.commons.jxpath.ri.model.XMLPreserveSpaceTest;\n import org.apache.commons.jxpath.ri.model.XMLSpaceTest;\n import org.apache.commons.jxpath.ri.model.beans.BeanModelTest;\n import org.apache.commons.jxpath.ri.model.container.ContainerModelTest;\n         suite.addTestSuite(BasicTypeConverterTest.class);\n         suite.addTestSuite(RecursiveAxesTest.class);\n         suite.addTestSuite(XMLSpaceTest.class);\n+        suite.addTestSuite(XMLPreserveSpaceTest.class);\n+        suite.addTestSuite(ExternalXMLNamespaceTest.class);\n         return suite;\n     }\n }\n--- /dev/null\n+++ b/src/test/org/apache/commons/jxpath/ri/model/ExternalXMLNamespaceTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.jxpath.ri.model;\n+\n+import org.apache.commons.jxpath.JXPathContext;\n+import org.apache.commons.jxpath.JXPathTestCase;\n+import org.apache.commons.jxpath.xml.DocumentContainer;\n+\n+/**\n+ * Test externally registered XML namespaces; JXPATH-97.\n+ *\n+ * @author Matt Benson\n+ * @version $Revision$ $Date$\n+ */\n+public class ExternalXMLNamespaceTest extends JXPathTestCase {\n+    protected JXPathContext context;\n+\n+    /**\n+     * Construct a new instance of this test case.\n+     *\n+     * @param name Name of the test case\n+     */\n+    public ExternalXMLNamespaceTest(String name) {\n+        super(name);\n+    }\n+\n+    protected DocumentContainer createDocumentContainer(String model) {\n+        DocumentContainer result = new DocumentContainer(JXPathTestCase.class\n+                .getResource(\"ExternalNS.xml\"), model);\n+        //this setting only works for DOM, so no JDOM tests :|\n+        result.setNamespaceAware(false);\n+        return result;\n+    }\n+\n+    protected void doTest(String xpath, String model, String expected) {\n+        JXPathContext context = JXPathContext\n+                .newContext(createDocumentContainer(model));\n+        context.registerNamespace(\"A\", \"foo\");\n+        context.registerNamespace(\"B\", \"bar\");\n+        assertXPathValue(context, xpath, expected);\n+    }\n+\n+    protected void doTestAttribute(String model) {\n+        doTest(\"/ElementA/@A:myAttr\", model, \"Mytype\");\n+    }\n+\n+    protected void doTestElement(String model) {\n+         doTest(\"/ElementA/B:ElementB\", model, \"MY VALUE\");\n+    }\n+\n+    public void testAttributeDOM() {\n+        doTestAttribute(DocumentContainer.MODEL_DOM);\n+    }\n+\n+    public void testElementDOM() {\n+        doTestElement(DocumentContainer.MODEL_DOM);\n+    }\n+\n+}", "timestamp": 1185226361, "metainfo": ""}