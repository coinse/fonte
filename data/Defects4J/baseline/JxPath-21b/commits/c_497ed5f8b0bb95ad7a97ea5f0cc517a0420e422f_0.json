{"sha": "497ed5f8b0bb95ad7a97ea5f0cc517a0420e422f", "log": "[JXPATH-100] sort union when pulling first matching node  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n  */\n package org.apache.commons.jxpath.ri.axes;\n \n-import java.util.HashSet;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n \n import org.apache.commons.jxpath.BasicNodeSet;\n+import org.apache.commons.jxpath.Pointer;\n import org.apache.commons.jxpath.ri.EvalContext;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n \n         if (!prepared) {\n             prepared = true;\n             BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();\n-            HashSet set = new HashSet();\n+            ArrayList pointers = new ArrayList();\n             for (int i = 0; i < contexts.length; i++) {\n                 EvalContext ctx = (EvalContext) contexts[i];\n                 while (ctx.nextSet()) {\n                     while (ctx.nextNode()) {\n                         NodePointer ptr = ctx.getCurrentNodePointer();\n-                        if (!set.contains(ptr)) {\n-                            nodeSet.add(ptr);\n-                            set.add(ptr);\n+                        if (!pointers.contains(ptr)) {\n+                            pointers.add(ptr);\n                         }\n                     }\n                 }\n+            }\n+            sortPointers(pointers);\n+\n+            for (Iterator it = pointers.iterator(); it.hasNext();) {\n+                nodeSet.add((Pointer) it.next());\n             }\n         }\n         return super.setPosition(position);\n--- a/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n                 \"Box of oranges\",\n                 \"/vendor[1]/product[1]/goods:name[1]\");\n     }\n+\n+    public void testUnion() {\n+        assertXPathValue(context, \"/vendor[1]/contact[1] | /vendor[1]/contact[4]\", \"John\");\n+        assertXPathValue(context, \"/vendor[1]/contact[4] | /vendor[1]/contact[1]\", \"John\");\n+    }\n }", "timestamp": 1188244376, "metainfo": ""}