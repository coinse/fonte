{"sha": "820a69d81b3b5d33f4a2b2cd9f153450f7535452", "log": "[JXPATH-149] relational operations do not function properly when comparing a non-Iterator LHS to an Iterator RHS  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n             return containsMatch((Iterator) left, right);\n         }\n         if (right instanceof Iterator) {\n-            return containsMatch((Iterator) right, left);\n+            return containsMatch(left, (Iterator) right);\n         }\n         double ld = InfoSetUtil.doubleValue(left);\n         if (Double.isNaN(ld)) {\n     }\n \n     /**\n+     * Learn whether any element returned from an Iterator matches a given value.\n+     * @param it Iterator\n+     * @param value to look for\n+     * @return whether a match was found\n+     */\n+    private boolean containsMatch(Object value, Iterator it) {\n+        while (it.hasNext()) {\n+            Object element = it.next();\n+            if (compute(value, element)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n      * Learn whether there is an intersection between two Iterators.\n      * @param lit left Iterator\n      * @param rit right Iterator\n--- /dev/null\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/JXPath149Test.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.jxpath.ri.compiler;\n+\n+import org.apache.commons.jxpath.JXPathContext;\n+import org.apache.commons.jxpath.JXPathTestCase;\n+\n+public class JXPath149Test extends JXPathTestCase {\n+\n+    public void testComplexOperationWithVariables() {\n+        JXPathContext context = JXPathContext.newContext(null);\n+        context.getVariables().declareVariable(\"a\", Integer.valueOf(0));\n+        context.getVariables().declareVariable(\"b\", Integer.valueOf(0));\n+        context.getVariables().declareVariable(\"c\", Integer.valueOf(1));\n+        assertXPathValue(context, \"$a + $b <= $c\", Boolean.TRUE);\n+    }\n+}", "timestamp": 1307555935, "metainfo": ""}