{"sha": "3b3e58d3d35aaa7e8e35c0856611f4bfc3f291c7", "log": "[JXPATH-93] fix nodeset handling for <,>,<=,>=  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n     }\n \n     public final Object computeValue(EvalContext context) {\n-        return compute(args[0].computeValue(context), args[1]\n-                .computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;\n+        return compute(args[0].compute(context), args[1].compute(context))\n+                ? Boolean.TRUE : Boolean.FALSE;\n     }\n \n     protected final int getPrecedence() {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/CoreOperationTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/CoreOperationTest.java\n         assertXPathValue(context, \"$array < 0\", Boolean.FALSE, Boolean.class);\n     }\n \n+    public void testEmptyNodeSetOperations() {\n+        assertXPathValue(context, \"/idonotexist = 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"/idonotexist != 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"/idonotexist < 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"/idonotexist > 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"/idonotexist >= 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"/idonotexist <= 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] = 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] != 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] < 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] > 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] >= 0\", Boolean.FALSE, Boolean.class);\n+        assertXPathValue(context, \"$array[position() < 1] <= 0\", Boolean.FALSE, Boolean.class);\n+    }\n+\n     public void testNan() {\n         assertXPathValue(context, \"$nan > $nan\", Boolean.FALSE, Boolean.class);\n         assertXPathValue(context, \"$nan < $nan\", Boolean.FALSE, Boolean.class);", "timestamp": 1184355818, "metainfo": ""}