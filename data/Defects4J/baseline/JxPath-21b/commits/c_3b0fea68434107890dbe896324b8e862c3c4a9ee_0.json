{"sha": "3b0fea68434107890dbe896324b8e862c3c4a9ee", "log": "Javadoc corrections  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ClassFunctions.java\n+++ b/src/java/org/apache/commons/jxpath/ClassFunctions.java\n     /**\n      * Returns a set of one namespace - the one specified in the constructor.\n      *\n-     * @returns a singleton\n+     * @return a singleton\n      */\n     public Set getUsedNamespaces() {\n         return Collections.singleton(namespace);\n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n      * NamespaceContextPointer is the same as the Context Pointer, see\n      * {@link #getContextPointer() getContextPointer()}\n      * \n-     * @param contextPointer The pointer to the context where prefixes used in\n+     * @param namespaceContextPointer The pointer to the context where prefixes used in\n      *        XPath expressions should be resolved.\n      */\n     public void setNamespaceContextPointer(Pointer namespaceContextPointer) {\n--- a/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n+++ b/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n     private Source source;\n \n     /**\n-     * @param  URL is a URL for an XML file. Use getClass().getResource\n+     * @param xmlURL is a URL for an XML file. Use getClass().getResource\n      * (resourceName) to load XML from a resource file.\n      */\n     public XMLDocumentContainer(URL xmlURL) {\n--- a/src/java/org/apache/commons/jxpath/ri/Compiler.java\n+++ b/src/java/org/apache/commons/jxpath/ri/Compiler.java\n      *\n      * @param qname is a QNAME object\n      */\n-    Object variableReference(Object qName);\n+    Object variableReference(Object qname);\n \n     /**\n      * Produces an EXPRESSION object representing the computation of\n     /**\n      * Produces a NODE_TEST object that represents a node type test.\n      *\n-     * @param qname is a QNAME object\n+     * @param nodeType is a NODE_TEST object\n      */\n     Object nodeTypeTest(int nodeType);\n \n      * Produces  a NODE_TEST object that represents a processing instruction\n      * test.\n      *\n-     * @param qname is a QNAME object\n+     * @param instruction is a NODE_TEST object\n      */\n     Object processingInstructionTest(String instruction);\n \n--- a/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n+++ b/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n      * prefix was not defined explicitly using the registerNamespace method,\n      * JXPathContext will then check the context node to see if the prefix is\n      * defined there. See\n-     * {@link #setNamespaceContextPointer(Pointer) setNamespaceContextPointer}.\n+     * {@link #setNamespaceContextPointer(NodePointer) setNamespaceContextPointer}.\n      * \n      * @param prefix The namespace prefix to look up\n      * @return namespace URI or null if the prefix is undefined.\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n      * @param parentContext represents the previous step on the path\n      * @param  includeSelf differentiates between \"ancestor::\" and \"ancestor-\n      * or-self::\" axes\n-     * @param nameTest is the name of the element(s) we are looking for\n+     * @param nodeTest is the name of the element(s) we are looking for\n      */\n     public AncestorContext(\n         EvalContext parentContext,\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n \n     /**\n      * @param parentContext represents the previous step on the path\n-     * @param nameTest is the name of the attribute we are looking for\n+     * @param nodeTest is the name of the attribute we are looking for\n      */\n     public AttributeContext(EvalContext parentContext, NodeTest nodeTest) {\n         super(parentContext);\n--- a/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java\n+++ b/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java\n     /**\n      * Use this constructor if the desired model is DOM.\n      *\n-     * @param URL is a URL for an XML file.\n+     * @param xmlURL is a URL for an XML file.\n      * Use getClass().getResource(resourceName) to load XML from a\n      * resource file.\n      */\n     }\n \n     /**\n-     * @param  URL is a URL for an XML file. Use getClass().getResource\n+     * @param xmlURL is a URL for an XML file. Use getClass().getResource\n      * (resourceName) to load XML from a resource file.\n      *\n      * @param model is one of the MODEL_* constants defined in this class. It", "timestamp": 1179798697, "metainfo": ""}