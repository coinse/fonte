{"sha": "6b2fdb626af2547caa0ddda0e89d162f4605d924", "log": "setFunctions now completely overrides the default,  thus enabling a secure implementation of the Functions interface   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n  *\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.23 $ $Date: 2004/04/01 02:55:31 $\n+ * @version $Revision: 1.24 $ $Date: 2004/04/04 23:16:23 $\n  */\n public abstract class JXPathContext {\n     protected JXPathContext parentContext;\n \n     private static JXPathContextFactory contextFactory;\n     private static JXPathContext compilationContext;\n+    \n+    private static final PackageFunctions GENERIC_FUNCTIONS =\n+        new PackageFunctions(\"\", null);\n \n     /**\n      * Creates a new JXPathContext with the specified object as the root node.\n      * Returns the set of functions installed on the context.\n      */\n     public Functions getFunctions() {\n-        return functions;\n+        if (functions != null) {\n+            return functions;\n+        }\n+        if (parentContext == null) {\n+            return GENERIC_FUNCTIONS;\n+        }\n+        return null;\n     }\n \n     /**\n--- a/src/java/org/apache/commons/jxpath/PackageFunctions.java\n+++ b/src/java/org/apache/commons/jxpath/PackageFunctions.java\n \n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision: 1.14 $ $Date: 2004/04/04 23:16:23 $\n  */\n public class PackageFunctions implements Functions {\n     private String classPrefix;\n                 ex);\n         }\n \n-        if (methodName.endsWith(\"new\")) {\n+        if (methodName.equals(\"new\")) {\n             Constructor constructor =\n                 MethodLookupUtils.lookupConstructor(functionClass, parameters);\n             if (constructor != null) {\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n import org.apache.commons.jxpath.Functions;\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.JXPathException;\n-import org.apache.commons.jxpath.PackageFunctions;\n import org.apache.commons.jxpath.Pointer;\n import org.apache.commons.jxpath.Variables;\n import org.apache.commons.jxpath.ri.axes.InitialContext;\n  * The reference implementation of JXPathContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.42 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision: 1.43 $ $Date: 2004/04/04 23:16:23 $\n  */\n public class JXPathContextReferenceImpl extends JXPathContext {\n     \n     \n     private static final Compiler COMPILER = new TreeCompiler();\n     private static Map compiled = new HashMap();\n-    private static final PackageFunctions GENERIC_FUNCTIONS =\n-        new PackageFunctions(\"\", null);\n     private static int cleanupCount = 0;\n     \n     private static Vector nodeFactories = new Vector();\n             }\n             funcCtx = funcCtx.getParentContext();\n         }\n-        func = GENERIC_FUNCTIONS.getFunction(namespace, name, parameters);\n-        if (func != null) {\n-            return func;\n-        }\n         throw new JXPathException(\n             \"Undefined function: \" + functionName.toString());\n     }\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n import java.util.List;\n import java.util.Locale;\n \n+import junit.textui.TestRunner;\n+\n import org.apache.commons.jxpath.ClassFunctions;\n import org.apache.commons.jxpath.ExpressionContext;\n import org.apache.commons.jxpath.Function;\n  * Test extension functions.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision: 1.16 $ $Date: 2004/04/04 23:16:24 $\n  */\n \n public class ExtensionFunctionTest extends JXPathTestCase {\n     private Functions functions;\n     private JXPathContext context;\n \n+    public static void main(String[] args) {\n+        TestRunner.run(ExtensionFunctionTest.class);\n+    }\n+    \n     /**\n      * Construct a new instance of this test case.\n      *\n                 new PackageFunctions(\n                     \"org.apache.commons.jxpath.ri.compiler.\",\n                     \"jxpathtest\"));\n+            lib.addFunctions(new PackageFunctions(\"\", null));\n             context.setFunctions(lib);\n         }\n         functions = new ClassFunctions(TestFunctions.class, \"test\");\n     }\n \n     public void testAllocation() {\n-\n+        \n         // Allocate new object using the default constructor\n         assertXPathValue(context, \"string(test:new())\", \"foo=0; bar=null\");\n ", "timestamp": 1081120584, "metainfo": ""}