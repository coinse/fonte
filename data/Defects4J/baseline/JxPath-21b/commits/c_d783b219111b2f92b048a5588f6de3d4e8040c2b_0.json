{"sha": "d783b219111b2f92b048a5588f6de3d4e8040c2b", "log": "checkstyle/pmd  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n         try {\n             debug = System.getProperty(\"jxpath.debug\") != null;\n         }\n-        catch (SecurityException se) {\n+        catch (SecurityException se) { //NOPMD\n             // This is ok\n         }\n     }\n             }\n \n         }\n-        catch (SecurityException se) {\n+        catch (SecurityException se) { //NOPMD\n             // Ignore\n        }\n \n                 FileInputStream fis = new FileInputStream(f);\n                 try {\n                     props.load(fis);\n-                } finally {\n+                }\n+                finally {\n                     if (fis != null) {\n                         try {\n                             fis.close();\n-                        } catch (IOException e) {\n+                        }\n+                        catch (IOException e) { //NOPMD\n                             //swallow\n                         }\n                     }\n                 String factory = null;\n                 try {\n                     factory = rd.readLine();\n-                } finally {\n+                }\n+                finally {\n                     try {\n                         rd.close();\n-                    } catch (IOException e) {\n+                    }\n+                    catch (IOException e) { //NOPMD\n                         //swallow\n                     }\n                 }\n--- a/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n         try {\n             return (JXPathBeanInfo) instantiate(beanClass, name);\n         }\n-        catch (Exception ex) {\n+        catch (Exception ex) { //NOPMD\n             // Just drop through\n         }\n \n                 return (JXPathBeanInfo) beanClass.newInstance();\n             }\n         }\n-        catch (Exception ex) {\n+        catch (Exception ex) { //NOPMD\n             // Just drop through\n         }\n \n                 Class cls = cl.loadClass(className);\n                 return cls.newInstance();\n             }\n-            catch (Exception ex) {\n+            catch (Exception ex) { //NOPMD\n                 // Just drop through and try the system classloader.\n             }\n         }\n--- a/src/java/org/apache/commons/jxpath/PackageFunctions.java\n+++ b/src/java/org/apache/commons/jxpath/PackageFunctions.java\n         String namespace,\n         String name,\n         Object[] parameters) {\n-        if ((namespace == null && this.namespace != null)\n+        if ((namespace == null && this.namespace != null) //NOPMD\n             || (namespace != null && !namespace.equals(this.namespace))) {\n             return null;\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n     public Object getValue(String xpath, Expression expr) {\n         Object result = expr.computeValue(getEvalContext());\n         if (result == null) {\n-            if (expr instanceof Path) {\n-                if (!isLenient()) {\n-                    throw new JXPathNotFoundException(\"No value for xpath: \"\n-                            + xpath);\n-                }\n+            if (expr instanceof Path && !isLenient()) {\n+                throw new JXPathNotFoundException(\"No value for xpath: \"\n+                        + xpath);\n             }\n             return null;\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n             setStarted = true;\n             if (stack == null) {\n                 stack = new Stack();\n-            } else {\n+            }\n+            else {\n                 stack.clear();\n             }\n             currentNodePointer = parentContext.getCurrentNodePointer();\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n             setStarted = true;\n             if (stack == null) {\n                 stack = new Stack();\n-            } else {\n+            }\n+            else {\n                 stack.clear();\n             }\n             currentRootLocation = parentContext.getCurrentNodePointer();\n--- a/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n     }\n \n     public NodePointer getCurrentNodePointer() {\n-        if (position == 0) {\n-            if (!setPosition(1)) {\n-                return null;\n-            }\n+        if (position == 0 && !setPosition(1)) {\n+            return null;\n         }\n         return nodePointer;\n     }\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n         }\n \n         BeanPointer other = (BeanPointer) object;\n-        if (parent != other.parent) {\n-            if (parent == null || !parent.equals(other.parent)) {\n-                return false;\n-            }\n+        if (parent != other.parent && (parent == null || !parent.equals(other.parent))) {\n+            return false;\n         }\n \n         if ((name == null && other.name != null)\n-            || (name != null && !name.equals(other.name))) {\n+                || (name != null && !name.equals(other.name))) {\n             return false;\n         }\n \n         }\n \n         if (bean instanceof Number\n-            || bean instanceof String\n-            || bean instanceof Boolean) {\n+                || bean instanceof String\n+                || bean instanceof Boolean) {\n             return bean.equals(other.bean);\n         }\n         return bean == other.bean;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n     }\n \n     public void setIndex(int index) {\n-        if (this.index != index) {\n-            // When dealing with a scalar, index == 0 is equivalent to\n-            // WHOLE_COLLECTION, so do not change it.\n-            if (this.index != WHOLE_COLLECTION\n+        if (this.index == index) {\n+            return;\n+        }\n+        // When dealing with a scalar, index == 0 is equivalent to\n+        // WHOLE_COLLECTION, so do not change it.\n+        if (this.index != WHOLE_COLLECTION\n                 || index != 0\n                 || isCollection()) {\n-                super.setIndex(index);\n-                value = UNINITIALIZED;\n-            }\n+            super.setIndex(index);\n+            value = UNINITIALIZED;\n         }\n     }\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributePointer.java\n  */\n public class DOMAttributePointer extends NodePointer {\n     private static final long serialVersionUID = 1115085175427555951L;\n-    \n+\n     private Attr attr;\n \n     /**\n--- a/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n+++ b/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n             return true;\n         }\n \n-        if (object instanceof Boolean) {\n-            if (Number.class.isAssignableFrom(useType)\n-                    || \"java.util.concurrent.atomic.AtomicBoolean\"\n-                            .equals(useType.getName())) {\n+        if (object instanceof Boolean && (Number.class.isAssignableFrom(useType)\n+                || \"java.util.concurrent.atomic.AtomicBoolean\"\n+                        .equals(useType.getName()))) {\n+            return true;\n+        }\n+        if (object instanceof Number\n+                && (Number.class.isAssignableFrom(useType) || useType == Boolean.class)) {\n+            return true;\n+        }\n+        if (object instanceof String\n+                && (useType == Boolean.class\n+                        || useType == Character.class\n+                        || useType == Byte.class\n+                        || useType == Short.class\n+                        || useType == Integer.class\n+                        || useType == Long.class\n+                        || useType == Float.class\n+                        || useType == Double.class)) {\n                 return true;\n-            }\n-        }\n-        if (object instanceof Number) {\n-            if (Number.class.isAssignableFrom(useType) || useType == Boolean.class) {\n-                return true;\n-            }\n-        }\n-        if (object instanceof String) {\n-            if (useType == Boolean.class\n-                || useType == Character.class\n-                || useType == Byte.class\n-                || useType == Short.class\n-                || useType == Integer.class\n-                || useType == Long.class\n-                || useType == Float.class\n-                || useType == Double.class) {\n-                return true;\n-            }\n         }\n         if (fromType.isArray()) {\n             // Collection -> array\n      */\n     static final class ValuePointer implements Pointer {\n         private static final long serialVersionUID = -4817239482392206188L;\n-        \n+\n         private Object bean;\n \n         /**\n--- a/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n                     return constructor;\n                 }\n             }\n-            catch (NoSuchMethodException ex) {\n+            catch (NoSuchMethodException ex) { //NOPMD\n                 // Ignore\n             }\n         }\n                     return method;\n                 }\n             }\n-            catch (NoSuchMethodException ex) {\n+            catch (NoSuchMethodException ex) { //NOPMD\n                 // Ignore\n             }\n         }\n                     return method;\n                 }\n             }\n-            catch (NoSuchMethodException ex) {\n+            catch (NoSuchMethodException ex) { //NOPMD\n                 // Ignore\n             }\n         }\n--- a/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n                 try {\n                     return clazz.getDeclaredMethod(name, parameterTypes);\n                 }\n-                catch (NoSuchMethodException e) {\n+                catch (NoSuchMethodException e) { //NOPMD\n                     //ignore\n                 }\n             }\n                 method =\n                     interfaces[i].getDeclaredMethod(methodName, parameterTypes);\n             }\n-            catch (NoSuchMethodException e) {\n+            catch (NoSuchMethodException e) { //NOPMD\n                 //ignore\n             }\n             if (method != null) {", "timestamp": 1214251838, "metainfo": ""}