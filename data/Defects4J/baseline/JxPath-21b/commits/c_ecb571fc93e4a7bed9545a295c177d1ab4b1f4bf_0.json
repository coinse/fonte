{"sha": "ecb571fc93e4a7bed9545a295c177d1ab4b1f4bf", "log": "svn:keywords correction  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/AbstractFactory.java\n+++ b/src/java/org/apache/commons/jxpath/AbstractFactory.java\n  * to indicate that the factory has successfully created the described object.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class AbstractFactory {\n \n--- a/src/java/org/apache/commons/jxpath/BasicNodeSet.java\n+++ b/src/java/org/apache/commons/jxpath/BasicNodeSet.java\n /**\n  * A simple implementation of NodeSet that behaves as a collection of pointers. \n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class BasicNodeSet implements NodeSet {\n     private List pointers = new ArrayList();\n--- a/src/java/org/apache/commons/jxpath/BasicVariables.java\n+++ b/src/java/org/apache/commons/jxpath/BasicVariables.java\n  * A basic implementation of the Variables interface that uses a HashMap.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class BasicVariables implements Variables {\n \n--- a/src/java/org/apache/commons/jxpath/ClassFunctions.java\n+++ b/src/java/org/apache/commons/jxpath/ClassFunctions.java\n  * the method.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class ClassFunctions implements Functions {\n     private Class functionClass;\n--- a/src/java/org/apache/commons/jxpath/CompiledExpression.java\n+++ b/src/java/org/apache/commons/jxpath/CompiledExpression.java\n  * JXPathContext.compile}\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface CompiledExpression {\n \n--- a/src/java/org/apache/commons/jxpath/Container.java\n+++ b/src/java/org/apache/commons/jxpath/Container.java\n  * rather than the container itself.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface Container {\n \n--- a/src/java/org/apache/commons/jxpath/DynamicPropertyHandler.java\n+++ b/src/java/org/apache/commons/jxpath/DynamicPropertyHandler.java\n  * </ul>\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface DynamicPropertyHandler {\n \n--- a/src/java/org/apache/commons/jxpath/Function.java\n+++ b/src/java/org/apache/commons/jxpath/Function.java\n  * {@link PackageFunctions PackageFunctions}.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface Function {\n \n--- a/src/java/org/apache/commons/jxpath/FunctionLibrary.java\n+++ b/src/java/org/apache/commons/jxpath/FunctionLibrary.java\n  * that need to be registered.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class FunctionLibrary implements Functions {\n     private List allFunctions = new ArrayList();\n--- a/src/java/org/apache/commons/jxpath/Functions.java\n+++ b/src/java/org/apache/commons/jxpath/Functions.java\n  * to register extension functions implemented as Java methods.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface Functions {\n \n--- a/src/java/org/apache/commons/jxpath/IdentityManager.java\n+++ b/src/java/org/apache/commons/jxpath/IdentityManager.java\n  * when the root of the context is a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface IdentityManager {\n \n--- a/src/java/org/apache/commons/jxpath/JXPathBasicBeanInfo.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathBasicBeanInfo.java\n  * See java.beans.BeanInfo, java.beans.Introspector\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/05/08 15:03:36 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathBasicBeanInfo implements JXPathBeanInfo {\n     private boolean atomic = false;\n--- a/src/java/org/apache/commons/jxpath/JXPathBeanInfo.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathBeanInfo.java\n  * JXPathBeanInfo interface.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface JXPathBeanInfo  {\n \n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n  *\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.25 $ $Date: 2004/06/29 21:15:46 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class JXPathContext {\n     protected JXPathContext parentContext;\n--- a/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContextFactory.java\n  * @see JXPathContext#newContext(JXPathContext,Object)\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class JXPathContextFactory {\n \n--- a/src/java/org/apache/commons/jxpath/JXPathContextFactoryConfigurationError.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContextFactoryConfigurationError.java\n  * or instantiated.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n \n public class JXPathContextFactoryConfigurationError extends Error {\n--- a/src/java/org/apache/commons/jxpath/JXPathException.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathException.java\n  * Thrown in various situations by JXPath; may contain a nested exception.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n \n public class JXPathException extends RuntimeException {\n--- a/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n  * JXPathBeanInfo} objects for Java classes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/05/08 15:10:05 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathIntrospector {\n \n--- a/src/java/org/apache/commons/jxpath/KeyManager.java\n+++ b/src/java/org/apache/commons/jxpath/KeyManager.java\n  * function.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface KeyManager {\n \n--- a/src/java/org/apache/commons/jxpath/MapDynamicPropertyHandler.java\n+++ b/src/java/org/apache/commons/jxpath/MapDynamicPropertyHandler.java\n  * Implements the DynamicPropertyHandler interface for java.util.Map.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/03/02 01:03:14 $\n+ * @version $Revision$ $Date$\n  */\n public class MapDynamicPropertyHandler implements DynamicPropertyHandler {\n \n--- a/src/java/org/apache/commons/jxpath/NodeSet.java\n+++ b/src/java/org/apache/commons/jxpath/NodeSet.java\n  * of <i>values</i> matching the path.\n  * \n  * @author <a href=\"mailto:dmitri@apache.org\">Dmitri Plotnikov</a>\n- * @version $Id: NodeSet.java,v 1.3 2004/02/29 14:17:42 scolebourne Exp $\n+ * @version $Id$\n  */\n public interface NodeSet {\n \n--- a/src/java/org/apache/commons/jxpath/PackageFunctions.java\n+++ b/src/java/org/apache/commons/jxpath/PackageFunctions.java\n \n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.14 $ $Date: 2004/04/04 23:16:23 $\n+ * @version $Revision$ $Date$\n  */\n public class PackageFunctions implements Functions {\n     private String classPrefix;\n--- a/src/java/org/apache/commons/jxpath/Pointer.java\n+++ b/src/java/org/apache/commons/jxpath/Pointer.java\n  * object.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface Pointer extends Cloneable, Comparable, Serializable {\n \n--- a/src/java/org/apache/commons/jxpath/Variables.java\n+++ b/src/java/org/apache/commons/jxpath/Variables.java\n  * {@link JXPathContext#setVariables JXPathContext.setVariables()}\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public interface Variables {\n \n--- a/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n+++ b/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n  * @deprecated 1.1 Please use org.apache.commons.jxpath.xml.DocumentContainer\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class XMLDocumentContainer implements Container {\n \n--- a/src/java/org/apache/commons/jxpath/functions/ConstructorFunction.java\n+++ b/src/java/org/apache/commons/jxpath/functions/ConstructorFunction.java\n  * An extension function that creates an instance using a constructor.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class ConstructorFunction implements Function {\n \n--- a/src/java/org/apache/commons/jxpath/functions/MethodFunction.java\n+++ b/src/java/org/apache/commons/jxpath/functions/MethodFunction.java\n  * An XPath extension function implemented as an individual Java method.\n  * \n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class MethodFunction implements Function {\n \n--- a/src/java/org/apache/commons/jxpath/ri/Compiler.java\n+++ b/src/java/org/apache/commons/jxpath/ri/Compiler.java\n  * </pre></blockquote>\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public interface Compiler {\n \n--- a/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n  * implement behavior of various XPath axes: \"child::\", \"parent::\" etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.30 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class EvalContext implements ExpressionContext, Iterator {\n     protected EvalContext parentContext;\n--- a/src/java/org/apache/commons/jxpath/ri/InfoSetUtil.java\n+++ b/src/java/org/apache/commons/jxpath/ri/InfoSetUtil.java\n  * Type conversions, XPath style.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/07/16 22:49:33 $\n+ * @version $Revision$ $Date$\n  */\n public class InfoSetUtil {\n \n--- a/src/java/org/apache/commons/jxpath/ri/JXPathCompiledExpression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathCompiledExpression.java\n  *\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathCompiledExpression implements CompiledExpression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextFactoryReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextFactoryReferenceImpl.java\n  * Default implementation of JXPathContextFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathContextFactoryReferenceImpl extends JXPathContextFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n  * The reference implementation of JXPathContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.44 $ $Date: 2004/12/30 21:59:36 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathContextReferenceImpl extends JXPathContext {\n     \n--- a/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n+++ b/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n  * The reference implementation of JXPathContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/12/30 21:59:36 $\n+ * @version $Revision$ $Date$\n  */\n public class NamespaceResolver implements Cloneable {\n     final protected NamespaceResolver parent;\n--- a/src/java/org/apache/commons/jxpath/ri/Parser.java\n+++ b/src/java/org/apache/commons/jxpath/ri/Parser.java\n  * XPath parser\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class Parser {\n \n--- a/src/java/org/apache/commons/jxpath/ri/QName.java\n+++ b/src/java/org/apache/commons/jxpath/ri/QName.java\n  * and an local name.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class QName {\n     private String prefix;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n  * EvalContext that walks the \"ancestor::\" and \"ancestor-or-self::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class AncestorContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java\n  * EvalContext that walks the \"attribute::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class AttributeContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n  * \"preceding-sibling::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.16 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class ChildContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n  * axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.16 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class DescendantContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/InitialContext.java\n  * on to the parent context.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/07/30 13:51:01 $\n+ * @version $Revision$ $Date$\n  */\n public class InitialContext extends EvalContext {\n     private boolean startedSet = false;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/NamespaceContext.java\n  * EvalContext that walks the \"namespace::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision$ $Date$\n  */\n public class NamespaceContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/NodeSetContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/NodeSetContext.java\n  * A simple context that is based on a NodeSet.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class NodeSetContext extends EvalContext {\n     private boolean startedSet = false;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n  * EvalContext that walks the \"parent::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class ParentContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PrecedingOrFollowingContext.java\n  * EvalContext that walks the \"preceding::\" and \"following::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class PrecedingOrFollowingContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/PredicateContext.java\n  * EvalContext that checks predicates.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.22 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class PredicateContext extends EvalContext {\n     private Expression expression;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/RootContext.java\n  * EvalContext that is used to hold the root node for the path traversal.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.18 $ $Date: 2004/04/01 02:55:31 $\n+ * @version $Revision$ $Date$\n  */\n public class RootContext extends EvalContext {\n     private JXPathContextReferenceImpl jxpathContext;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SelfContext.java\n  * test succeeds.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.12 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class SelfContext extends EvalContext {\n     private NodeTest nodeTest;\n--- a/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java\n  * predicates that either integer or have the form <code>[@name = ...]</code>.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2002/04/24 04:05:40 $\n+ * @version $Revision$ $Date$\n  */\n public class SimplePathInterpreter {\n \n--- a/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java\n  * of a union operation like (a | b)\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.12 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class UnionContext extends NodeSetContext {\n     private boolean startedSet = false;\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Constant.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Constant.java\n  * A compile tree element containing a constant number or string.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class Constant extends Expression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java\n  * like \"position()\" or \"number()\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.16 $ $Date: 2004/04/01 02:53:45 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreFunction extends Operation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperation.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperation.java\n  * \"- \", \"*\" etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.14 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class CoreOperation extends Operation {\n         \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationAdd.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationAdd.java\n  * Implementation of Expression for the operation \"+\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationAdd extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationAnd.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationAnd.java\n  * Implementation of Expression for the operation \"and\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationAnd extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java\n  * \"=\" and \"!=\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class CoreOperationCompare extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationDivide.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationDivide.java\n  * Implementation of Expression for the operation \"div\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationDivide extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationEqual.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationEqual.java\n  * Implementation of Expression for the operation \"=\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationEqual extends CoreOperationCompare {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThan.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThan.java\n  * Implementation of Expression for the operation \"&gt;\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationGreaterThan extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThanOrEqual.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThanOrEqual.java\n  * Implementation of Expression for the operation \"&gt;=\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationGreaterThanOrEqual extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationLessThan.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationLessThan.java\n  * Implementation of Expression for the operation \"&lt;\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationLessThan extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationLessThanOrEqual.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationLessThanOrEqual.java\n  * Implementation of Expression for the operation \"&lt;=\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationLessThanOrEqual extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationMod.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationMod.java\n  * Implementation of Expression for the operation \"mod\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationMod extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationMultiply.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationMultiply.java\n  * Implementation of Expression for the operation \"*\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationMultiply extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationNegate.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationNegate.java\n  * Implementation of Expression for the operation unary \"-\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationNegate extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationNotEqual.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationNotEqual.java\n  * Implementation of Expression for the operation \"!=\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationNotEqual extends CoreOperationCompare {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationOr.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationOr.java\n  * Implementation of Expression for the operation \"or\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationOr extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationSubtract.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationSubtract.java\n  * Implementation of Expression for the operation \"-\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationSubtract extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationUnion.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationUnion.java\n  * Implementation of Expression for the operation \"|\".\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class CoreOperationUnion extends CoreOperation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java\n  * provides that hint.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class Expression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/ExpressionPath.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/ExpressionPath.java\n  * /bar</code>.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class ExpressionPath extends Path {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunction.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunction.java\n  * call.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision$ $Date$\n  */\n public class ExtensionFunction extends Operation {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/LocationPath.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/LocationPath.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class LocationPath extends Path {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/NameAttributeTest.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/NameAttributeTest.java\n  * or maps.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class NameAttributeTest extends CoreOperationEqual {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/NodeNameTest.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/NodeNameTest.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class NodeNameTest extends NodeTest {\n     private QName qname;\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/NodeTest.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/NodeTest.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class NodeTest {\n }\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/NodeTypeTest.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/NodeTypeTest.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class NodeTypeTest extends NodeTest {\n     private int nodeType;\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Operation.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Operation.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class Operation extends Expression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Path.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Path.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.14 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class Path extends Expression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/ProcessingInstructionTest.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/ProcessingInstructionTest.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class ProcessingInstructionTest extends NodeTest {\n     private String target;\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/Step.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/Step.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class Step {\n     private int axis;\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/02/29 14:17:39 $\n+ * @version $Revision$ $Date$\n  */\n public class TreeCompiler implements Compiler {\n \n--- a/src/java/org/apache/commons/jxpath/ri/compiler/VariableReference.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/VariableReference.java\n  * An element of the compile tree holding a variable reference.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:38 $\n+ * @version $Revision$ $Date$\n  */\n public class VariableReference extends Expression {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/NodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/NodeIterator.java\n  * Definition for an iterator for all kinds of Nodes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public interface NodeIterator {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/NodePointer.java\n  * attribute and only simple, context-independent predicates.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.25 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class NodePointer implements Pointer {\n \n \n     /**\n      * @see #getValuePointer()\n-     * \n+     * \n      * @return NodePointer is either <code>this</code> or a pointer\n-     *   for the immediately contained value.\n+     *   for the immediately contained value.\n      */\n     public NodePointer getImmediateValuePointer() {\n         return this;\n--- a/src/java/org/apache/commons/jxpath/ri/model/NodePointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/NodePointerFactory.java\n  * by the \"getOrder\" method and always queried in that order.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public interface NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n  * Pointer to a context variable.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.18 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public class VariablePointer extends NodePointer {\n     private Variables variables;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanAttributeIterator.java\n  * well as the \"xml:lang\" attribute.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class BeanAttributeIterator extends PropertyIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java\n  * in the chain.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class BeanPointer extends PropertyOwnerPointer {\n     private QName name;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointerFactory.java\n  * Implements NodePointerFactory for JavaBeans.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class BeanPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n  * Pointer pointing to a property of a JavaBean.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public class BeanPropertyPointer extends PropertyPointer {\n     private String propertyName;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionAttributeNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionAttributeNodeIterator.java\n  * aggregate attribute node iterator.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class CollectionAttributeNodeIterator extends CollectionNodeIterator {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionChildNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionChildNodeIterator.java\n  * aggregate child node iterator.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class CollectionChildNodeIterator extends CollectionNodeIterator {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionNodeIterator.java\n  * aggregate node iterator.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class CollectionNodeIterator implements NodeIterator {\n     private CollectionPointer pointer;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionPointer.java\n  * Transparent pointer to a collection (array or Collection).\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.19 $ $Date: 2004/04/04 22:06:35 $\n+ * @version $Revision$ $Date$\n  */\n public class CollectionPointer extends NodePointer {\n     private Object collection;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/CollectionPointerFactory.java\n  * Implements NodePointerFactory for stand-alone collections.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class CollectionPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/LangAttributePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/LangAttributePointer.java\n  * of the attribute is based on the locale supplied to it in the constructor.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class LangAttributePointer extends NodePointer {\n     public LangAttributePointer(NodePointer parent) {\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java\n  * with index 2 (= 3 - 1) and a \"foo\" pointer as the parent.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class NullElementPointer extends CollectionPointer {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPointer.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:41 $\n+ * @version $Revision$ $Date$\n  */\n public class NullPointer extends PropertyOwnerPointer {\n     private QName name;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.18 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class NullPropertyPointer extends PropertyPointer {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java\n  * Examples of such objects are JavaBeans and objects with Dynamic Properties.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/03/25 03:49:50 $\n+ * @version $Revision$ $Date$\n  */\n public class PropertyIterator implements NodeIterator {\n     private boolean empty = false;\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java\n  * a collection.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.19 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class PropertyOwnerPointer extends NodePointer {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n  * a property of the parent object.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.14 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class PropertyPointer extends NodePointer {\n     public static final int UNSPECIFIED_PROPERTY = Integer.MIN_VALUE;\n--- a/src/java/org/apache/commons/jxpath/ri/model/container/ContainerPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/container/ContainerPointer.java\n  * itself.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public class ContainerPointer extends NodePointer {\n     private Container container;\n--- a/src/java/org/apache/commons/jxpath/ri/model/container/ContainerPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/container/ContainerPointerFactory.java\n  * Implements NodePointerFactory for Container objects.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class ContainerPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java\n  * An iterator of attributes of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMAttributeIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributePointer.java\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMAttributePointer extends NodePointer {\n     private Attr attr;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNamespaceIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNamespaceIterator.java\n  * An iterator of namespaces of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMNamespaceIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java\n  * An iterator of children of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMNodeIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.26 $ $Date$\n+ * @version $Revision$ $Date$\n  */\n public class DOMNodePointer extends NodePointer {\n     private Node node;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMPointerFactory.java\n  * Implements NodePointerFactory for DOM elements.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/NamespacePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/NamespacePointer.java\n  * Represents a namespace node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/04/01 02:55:32 $\n+ * @version $Revision$ $Date$\n  */\n public class NamespacePointer extends NodePointer {\n     private String prefix;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPointer.java\n  * A Pointer that points to a DynaBean.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class DynaBeanPointer extends PropertyOwnerPointer {\n     private QName name;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPointerFactory.java\n  * </a>\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class DynaBeanPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanPropertyPointer.java\n  * Pointer pointing to a property of a DynaBean.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.12 $ $Date: 2004/04/04 22:06:35 $\n+ * @version $Revision$ $Date$\n  */\n public class DynaBeanPropertyPointer extends PropertyPointer {\n     private DynaBean dynaBean;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicAttributeIterator.java\n  * will always find that property (albeit with a null value).\n  *  \n  * @author <a href=\"mailto:dmitri@apache.org\">Dmitri Plotnikov</a>\n- * @version $Id: DynamicAttributeIterator.java,v 1.4 2004/02/29 14:17:44 scolebourne Exp $\n+ * @version $Id$\n  */\n public class DynamicAttributeIterator extends BeanAttributeIterator {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPointer.java\n  * PropertyPointer.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class DynamicPointer extends PropertyOwnerPointer {\n     private QName name;\n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPointerFactory.java\n  * Implements NodePointerFactory for Dynamic classes like Map.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class DynamicPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyIterator.java\n  * @deprecated - no longer needed, as it is identical to PropertyIterator.\n  * \n  * @author <a href=\"mailto:dmitri@apache.org\">Dmitri Plotnikov</a>\n- * @version $Id: DynamicPropertyIterator.java,v 1.5 2004/02/29 14:17:44 scolebourne Exp $\n+ * @version $Id$\n  */\n public class DynamicPropertyIterator extends PropertyIterator {\n \n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java\n  * Pointer pointing to a property of an object with dynamic properties.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public class DynamicPropertyPointer extends PropertyPointer {\n     private DynamicPropertyHandler handler;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java\n  * An iterator of attributes of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMAttributeIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributePointer.java\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/04/01 02:55:31 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMAttributePointer extends NodePointer {\n     private Attribute attr;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java\n  * An iterator of namespaces of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/04/01 02:55:31 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMNamespaceIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespacePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespacePointer.java\n  * Represents a namespace node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/04/01 02:55:31 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMNamespacePointer extends NodePointer {\n     private String prefix;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodeIterator.java\n  * An iterator of children of a JDOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMNodeIterator implements NodeIterator {\n     private NodePointer parent;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2004/06/29 22:58:18 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMNodePointer extends NodePointer {\n     private Object node;\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMPointerFactory.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMPointerFactory.java\n  * Implements NodePointerFactory for DOM elements.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMPointerFactory implements NodePointerFactory {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/Constants.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/Constants.java\n  * String constants for this package.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public final class Constants {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/HttpSessionAndServletContext.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/HttpSessionAndServletContext.java\n  * Just a structure to hold a ServletRequest and ServletContext together.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.1 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class HttpSessionAndServletContext {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/HttpSessionHandler.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/HttpSessionHandler.java\n  * access to attributes of a HttpSession.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class HttpSessionHandler extends ServletContextHandler {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/JXPathServletContexts.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/JXPathServletContexts.java\n  * servlet. JXPath does not automatically create sessions.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public final class JXPathServletContexts {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/KeywordVariables.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/KeywordVariables.java\n  * to a single object using a reserved name (keyword).\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class KeywordVariables implements Variables {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/PageContextHandler.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/PageContextHandler.java\n  * access to attributes of a PageContext in all scopes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class PageContextHandler implements DynamicPropertyHandler {\n \n--- a/src/java/org/apache/commons/jxpath/servlet/PageScopeContext.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/PageScopeContext.java\n  * \"$page/foo\" would only look in the \"page\" scope.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class PageScopeContext {\n     private PageContext pageContext;\n--- a/src/java/org/apache/commons/jxpath/servlet/PageScopeContextHandler.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/PageScopeContextHandler.java\n  * access to attributes of a PageScopeContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class PageScopeContextHandler implements DynamicPropertyHandler {\n     \n--- a/src/java/org/apache/commons/jxpath/servlet/ServletContextHandler.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/ServletContextHandler.java\n  * access to attributes of a ServletContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class ServletContextHandler implements DynamicPropertyHandler {\n     \n--- a/src/java/org/apache/commons/jxpath/servlet/ServletRequestAndContext.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/ServletRequestAndContext.java\n  * Just a structure to hold a ServletRequest and ServletContext together.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.1 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class ServletRequestAndContext extends\n         HttpSessionAndServletContext\n--- a/src/java/org/apache/commons/jxpath/servlet/ServletRequestHandler.java\n+++ b/src/java/org/apache/commons/jxpath/servlet/ServletRequestHandler.java\n  * access to attributes and parameters of a ServletRequest.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class ServletRequestHandler extends HttpSessionHandler {\n     \n--- a/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n+++ b/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n  * The default implementation of TypeConverter.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2004/07/25 13:16:04 $\n+ * @version $Revision$ $Date$\n  */\n public class BasicTypeConverter implements TypeConverter {\n \n--- a/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n  * as constructors based on a name and list of parameters.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n public class MethodLookupUtils {\n \n--- a/src/java/org/apache/commons/jxpath/util/TypeConverter.java\n+++ b/src/java/org/apache/commons/jxpath/util/TypeConverter.java\n  * @see TypeUtils#setTypeConverter\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n public interface TypeConverter {\n \n--- a/src/java/org/apache/commons/jxpath/util/TypeUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/TypeUtils.java\n  * Global type conversion utilities.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n public class TypeUtils {\n     private static TypeConverter typeConverter = new BasicTypeConverter();\n--- a/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n  * Collection and property access utilities.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.19 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n public class ValueUtils {\n     private static Map dynamicPropertyHandlerMap = new HashMap();\n--- a/src/java/org/apache/commons/jxpath/xml/DOMParser.java\n+++ b/src/java/org/apache/commons/jxpath/xml/DOMParser.java\n  * An implementation of the XMLParser interface that produces a DOM Document.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class DOMParser extends XMLParser2 {\n \n--- a/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java\n+++ b/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java\n  * read at all.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class DocumentContainer extends XMLParser2 implements Container {\n \n--- a/src/java/org/apache/commons/jxpath/xml/JDOMParser.java\n+++ b/src/java/org/apache/commons/jxpath/xml/JDOMParser.java\n  * An implementation of the XMLParser interface that produces a JDOM Document.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public class JDOMParser extends XMLParser2 {\n     \n--- a/src/java/org/apache/commons/jxpath/xml/XMLParser.java\n+++ b/src/java/org/apache/commons/jxpath/xml/XMLParser.java\n  * some of the parsers we want to support may not be JAXP compliant.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public interface XMLParser {\n \n--- a/src/java/org/apache/commons/jxpath/xml/XMLParser2.java\n+++ b/src/java/org/apache/commons/jxpath/xml/XMLParser2.java\n  * The features have the same defaults as DocumentBuilderFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:37 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class XMLParser2 implements XMLParser \n {\n--- a/src/test/org/apache/commons/jxpath/JXPathTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/JXPathTestCase.java\n  * Abstract superclass for various JXPath tests.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.36 $ $Date: 2004/07/16 22:52:32 $\n+ * @version $Revision$ $Date$\n  */\n \n public abstract class JXPathTestCase extends TestCase {\n--- a/src/test/org/apache/commons/jxpath/JXPathTestSuite.java\n+++ b/src/test/org/apache/commons/jxpath/JXPathTestSuite.java\n  * </p>\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/04/04 22:06:35 $\n+ * @version $Revision$ $Date$\n  */\n \n public class JXPathTestSuite extends TestCase {\n--- a/src/test/org/apache/commons/jxpath/NestedTestBean.java\n+++ b/src/test/org/apache/commons/jxpath/NestedTestBean.java\n  * A general purpose JavaBean for JUnit tests for the \"jxpath\" component.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class NestedTestBean {\n     private String name = \"Name 0\";\n--- a/src/test/org/apache/commons/jxpath/TestBean.java\n+++ b/src/test/org/apache/commons/jxpath/TestBean.java\n  * General purpose test bean for JUnit tests for the \"jxpath\" component.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class TestBean {\n \n--- a/src/test/org/apache/commons/jxpath/TestMixedModelBean.java\n+++ b/src/test/org/apache/commons/jxpath/TestMixedModelBean.java\n  * Mixed model test bean: Java, collections, map, DOM, Container.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class TestMixedModelBean {\n     private String string;\n--- a/src/test/org/apache/commons/jxpath/TestNull.java\n+++ b/src/test/org/apache/commons/jxpath/TestNull.java\n  * General purpose test bean for JUnit tests for the \"jxpath\" component.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:40 $\n+ * @version $Revision$ $Date$\n  */\n public class TestNull {\n \n--- a/src/test/org/apache/commons/jxpath/ri/JXPathCompiledExpressionTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/JXPathCompiledExpressionTest.java\n  * Test compiler.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n \n public class JXPathCompiledExpressionTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/StressTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/StressTest.java\n  * Test thread safety.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n \n public class StressTest extends TestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/axes/RecursiveBean.java\n+++ b/src/test/org/apache/commons/jxpath/ri/axes/RecursiveBean.java\n  * descendant search contexts.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.3 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class RecursiveBean  {\n \n--- a/src/test/org/apache/commons/jxpath/ri/axes/TestBeanWithNode.java\n+++ b/src/test/org/apache/commons/jxpath/ri/axes/TestBeanWithNode.java\n  * Test bean for mixed model JUnit tests.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class TestBeanWithNode extends TestBean {\n     private Object node;\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/ContextDependencyTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/ContextDependencyTest.java\n  * Tests the determination of whether an expression is context dependent.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n \n public class ContextDependencyTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/CoreFunctionTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/CoreFunctionTest.java\n  * Test basic functionality of JXPath - core functions.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/05/08 20:07:09 $\n+ * @version $Revision$ $Date$\n  */\n \n public class CoreFunctionTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/CoreOperationTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/CoreOperationTest.java\n  * operations.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n \n public class CoreOperationTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java\n  * Test extension functions.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2004/10/06 00:34:14 $\n+ * @version $Revision$ $Date$\n  */\n \n public class ExtensionFunctionTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/compiler/TestFunctions.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/TestFunctions.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2004/03/25 05:42:01 $\n+ * @version $Revision$ $Date$\n  */\n public class TestFunctions {\n \n--- a/src/test/org/apache/commons/jxpath/ri/compiler/TestFunctions2.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/TestFunctions2.java\n \n /**\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class TestFunctions2 {\n \n--- a/src/test/org/apache/commons/jxpath/ri/compiler/VariableFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/VariableFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n public class VariableFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/compiler/VariableTest.java\n  * operations.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision$ $Date$\n  */\n \n public class VariableTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n  * Abstract superclass for Bean access with JXPath.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.19 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n \n public abstract class BeanModelTestCase extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/ExceptionPropertyTestBean.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/ExceptionPropertyTestBean.java\n /**\n  * \n  * @author <a href=\"mailto:dmitri@apache.org\">Dmitri Plotnikov</a>\n- * @version $Id: ExceptionPropertyTestBean.java,v 1.4 2004/02/29 14:17:45 scolebourne Exp $\n+ * @version $Id$\n  */\n public class ExceptionPropertyTestBean {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/MixedModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/MixedModelTest.java\n  * Tests JXPath with mixed model: beans, maps, DOM etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/04/04 22:06:36 $\n+ * @version $Revision$ $Date$\n  */\n \n public class MixedModelTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/TestMixedModelFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/TestMixedModelFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class TestMixedModelFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n  * DOM, JDOM etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.25 $ $Date: 2004/12/30 21:59:36 $\n+ * @version $Revision$ $Date$\n  */\n \n public abstract class XMLModelTestCase extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java\n  * Tests JXPath with JavaBeans\n *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n \n public class BeanModelTest extends BeanModelTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/beans/TestBeanFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/beans/TestBeanFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n public class TestBeanFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/beans/TestIndexedPropertyBean.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/beans/TestIndexedPropertyBean.java\n  * Test bean for JUnit tests of indexed property handling.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n public class TestIndexedPropertyBean {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java\n  * Tests JXPath with containers as root or value of a variable, property, etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.1 $ $Date: 2004/04/04 22:06:35 $\n+ * @version $Revision$ $Date$\n  */\n \n public class ContainerModelTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/dom/DOMModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dom/DOMModelTest.java\n  * Tests JXPath with DOM\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2004/03/02 01:32:20 $\n+ * @version $Revision$ $Date$\n  */\n \n public class DOMModelTest extends XMLModelTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/dom/TestDOMFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dom/TestDOMFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/06/29 22:58:17 $\n+ * @version $Revision$ $Date$\n  */\n public class TestDOMFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dynabeans/DynaBeanModelTest.java\n  * Test for support of DynaBeans (see BeanUtils)\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n \n public class DynaBeanModelTest extends BeanModelTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/dynabeans/TestDynaBeanFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dynabeans/TestDynaBeanFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:44 $\n+ * @version $Revision$ $Date$\n  */\n public class TestDynaBeanFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java\n  * @todo more iterator testing with maps\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n \n public class DynamicPropertiesModelTest extends JXPathTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/dynamic/TestDynamicPropertyFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/dynamic/TestDynamicPropertyFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2004/02/29 14:17:45 $\n+ * @version $Revision$ $Date$\n  */\n public class TestDynamicPropertyFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/ri/model/jdom/JDOMModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/jdom/JDOMModelTest.java\n  * Tests JXPath with JDOM\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.12 $ $Date: 2004/02/29 14:17:43 $\n+ * @version $Revision$ $Date$\n  */\n \n public class JDOMModelTest extends XMLModelTestCase {\n--- a/src/test/org/apache/commons/jxpath/ri/model/jdom/TestJDOMFactory.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/jdom/TestJDOMFactory.java\n  * Test AbstractFactory.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.6 $ $Date: 2004/06/29 22:58:17 $\n+ * @version $Revision$ $Date$\n  */\n public class TestJDOMFactory extends AbstractFactory {\n \n--- a/src/test/org/apache/commons/jxpath/util/BasicTypeConverterTest.java\n+++ b/src/test/org/apache/commons/jxpath/util/BasicTypeConverterTest.java\n  * Tests BasicTypeConverter\n  * \n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2004/06/29 21:50:02 $\n+ * @version $Revision$ $Date$\n  */\n \n public class BasicTypeConverterTest extends TestCase {\n--- a/src/test-webapp/JXPathServletContextsTestServlet.java\n+++ b/src/test-webapp/JXPathServletContextsTestServlet.java\n /**\n  * Invoke like this: http://localhost:8080/jxpath?parm=OK\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/05/08 15:10:49 $\n+ * @version $Revision$ $Date$\n  */\n public class JXPathServletContextsTestServlet extends HttpServlet {\n ", "timestamp": 1109423266, "metainfo": ""}