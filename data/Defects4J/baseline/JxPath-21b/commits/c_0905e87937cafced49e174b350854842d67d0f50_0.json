{"sha": "0905e87937cafced49e174b350854842d67d0f50", "log": "B2 build preparations   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java,v 1.2 2003/01/11 05:41:26 dmitri Exp $\n- * $Revision: 1.2 $\n- * $Date: 2003/01/11 05:41:26 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java,v 1.3 2003/02/26 01:45:01 dmitri Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2003/02/26 01:45:01 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n package org.apache.commons.jxpath.ri.model.dynamic;\n \n import java.util.Arrays;\n+import java.util.Map;\n \n import org.apache.commons.jxpath.AbstractFactory;\n import org.apache.commons.jxpath.DynamicPropertyHandler;\n  * Pointer pointing to a property of an object with dynamic properties.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.2 $ $Date: 2003/01/11 05:41:26 $\n+ * @version $Revision: 1.3 $ $Date: 2003/02/26 01:45:01 $\n  */\n public class DynamicPropertyPointer extends PropertyPointer {\n     private DynamicPropertyHandler handler;\n \n     public void remove() {\n         if (index == WHOLE_COLLECTION) {\n-            handler.setProperty(getBean(), getPropertyName(), null);\n+            removeKey();\n         }\n         else if (isCollection()) {\n             Object collection = ValueUtils.remove(getBaseValue(), index);\n             handler.setProperty(getBean(), getPropertyName(), collection);\n         }\n         else if (index == 0) {\n-            handler.setProperty(getBean(), getPropertyName(), null);\n-        }\n-    }\n-\n+            removeKey();\n+        }\n+    }\n+\n+    private void removeKey() {\n+        Object bean = getBean();\n+        if (bean instanceof Map) {\n+            ((Map) bean).remove(getPropertyName());\n+        }\n+        else {\n+            handler.setProperty(bean, getPropertyName(), null);\n+        }\n+    }\n+    \n     public String asPath() {\n         StringBuffer buffer = new StringBuffer();\n         buffer.append(getParent().asPath());", "timestamp": 1046223901, "metainfo": ""}