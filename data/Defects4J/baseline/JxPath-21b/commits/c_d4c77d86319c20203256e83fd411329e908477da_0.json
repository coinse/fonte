{"sha": "d4c77d86319c20203256e83fd411329e908477da", "log": "Refix: accidentally undid a previous fix   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java,v 1.12 2003/01/19 23:58:27 dmitri Exp $\n- * $Revision: 1.12 $\n- * $Date: 2003/01/19 23:58:27 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java,v 1.13 2003/01/20 00:07:52 dmitri Exp $\n+ * $Revision: 1.13 $\n+ * $Date: 2003/01/20 00:07:52 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import org.apache.commons.jxpath.Variables;\n import org.apache.commons.jxpath.ri.QName;\n import org.apache.commons.jxpath.ri.compiler.NodeTest;\n+import org.apache.commons.jxpath.ri.model.beans.NullPointer;\n import org.apache.commons.jxpath.util.ValueUtils;\n \n /**\n  * Pointer to a context variable.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.12 $ $Date: 2003/01/19 23:58:27 $\n+ * @version $Revision: 1.13 $ $Date: 2003/01/20 00:07:52 $\n  */\n public class VariablePointer extends NodePointer {\n     private Variables variables;\n             Object value = null;\n             if (actual) {\n                 value = getImmediateNode();\n-            }\n-            valuePointer = NodePointer.newChildNodePointer(this, null, value);\n+                valuePointer =\n+                    NodePointer.newChildNodePointer(this, null, value);\n+            }\n+            else {\n+                return new NullPointer(this, getName()) {\n+                    public Object getImmediateNode() {\n+                        throw new JXPathException(\n+                            \"Undefined variable: \" + name);\n+                    }\n+                };\n+            }\n         }\n         return valuePointer;\n     }\n-\n+    \n     public int getLength() {\n         if (actual) {\n             Object value = getBaseValue();", "timestamp": 1043021272, "metainfo": ""}