{"sha": "57c3a7226ff9a5c36ab86e5e32233871b499994f", "log": "javadoc  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java\n     private boolean reverse;\n     private NodeIterator iterator;\n \n+    /**\n+     * Create a new ChildContext.\n+     * @param parentContext parent EvalContext\n+     * @param nodeTest NodeTest\n+     * @param startFromParentLocation whether to start from parent location\n+     * @param reverse whether to iterate in reverse\n+     */\n     public ChildContext(\n         EvalContext parentContext,\n         NodeTest nodeTest,\n         this.reverse = reverse;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n     public NodePointer getCurrentNodePointer() {\n         if (position == 0) {\n             if (!setPosition(1)) {\n      * even if it is a collection. It will not extract the first element\n      * of the collection.  For example, \"books\" will return the collection\n      * of books rather than the first book from that collection.\n+     * @return Pointer\n      */\n     public Pointer getSingleNodePointer() {\n         if (position == 0) {\n         return getCurrentNodePointer();\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n     public boolean nextNode() {\n         return setPosition(getCurrentPosition() + 1);\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n     public void reset() {\n         super.reset();\n         iterator = null;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n     public boolean setPosition(int position) {\n         int oldPosition = getCurrentPosition();\n         super.setPosition(position);", "timestamp": 1201985388, "metainfo": ""}