{"sha": "4d58840813d8a7b1a7deb4a1508314f3f26da772", "log": "consolidate duplicate code  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n     }\n \n     /**\n-     * Find the AbstractFactory, if any, associated with the specified context.\n-     * @param context JXPathContext to search\n-     * @return AbstractFactory\n-     */\n-    private AbstractFactory getAbstractFactory(JXPathContext context) {\n-        AbstractFactory factory = context.getFactory();\n-        if (factory == null) {\n-            throw new JXPathException(\n-              \"Factory is not set on the JXPathContext - cannot create path: \"\n-              + asPath());\n-        }\n-        return factory;\n-    }\n-\n-    /**\n      * {@inheritDoc}\n      */\n     public int compareChildNodePointers(\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n         return getValuePointer().compareChildNodePointers(pointer1, pointer2);\n     }\n \n-    /**\n-     * Get the required AbstractFactory configured on the specified JXPathContext.\n-     * @param context JXPathContext\n-     * @return AbstractFactory\n-     * @throws JXPathException if no factory configured.\n-     */\n-    private AbstractFactory getAbstractFactory(JXPathContext context) {\n-        AbstractFactory factory = context.getFactory();\n-        if (factory == null) {\n-            throw new JXPathException(\n-                \"Factory is not set on the \"\n-                    + \"JXPathContext - cannot create path: \"\n-                    + asPath());\n-        }\n-        return factory;\n-    }\n }\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n     }\n \n     /**\n-     * Return a string escaping single and double quotes.\n-     * @param string string to treat\n-     * @return string with any necessary changes made.\n-     */\n-    private String escape(String string) {\n-        final char[] c = new char[] { '\\'', '\"' };\n-        final String[] esc = new String[] { \"&apos;\", \"&quot;\" };\n-        StringBuffer sb = null;\n-        for (int i = 0; sb == null && i < c.length; i++) {\n-            if (string.indexOf(c[i]) >= 0) {\n-                sb = new StringBuffer(string);\n-            }\n-        }\n-        if (sb == null) {\n-            return string;\n-        }\n-        for (int i = 0; i < c.length; i++) {\n-            if (string.indexOf(c[i]) < 0) {\n-                continue;\n-            }\n-            int pos = 0;\n-            while (pos < sb.length()) {\n-                if (sb.charAt(pos) == c[i]) {\n-                    sb.replace(pos, pos + 1, esc[i]);\n-                    pos += esc[i].length();\n-                } else {\n-                    pos++;\n-                }\n-            }\n-        }\n-        return sb.toString();\n-    }\n-\n-    /**\n      * Get relative position of this among like-named siblings.\n      * @return 1..n\n      */\n     }\n \n     /**\n-     * Get the AbstractFactory associated with the specified JXPathContext.\n-     * @param context JXPathContext\n-     * @return AbstractFactory\n-     */\n-    private AbstractFactory getAbstractFactory(JXPathContext context) {\n-        AbstractFactory factory = context.getFactory();\n-        if (factory == null) {\n-            throw new JXPathException(\n-                \"Factory is not set on the JXPathContext - \"\n-                    + \"cannot create path: \"\n-                    + asPath());\n-        }\n-        return factory;\n-    }\n-\n-    /**\n      * {@inheritDoc}\n      */\n     public int compareChildNodePointers(", "timestamp": 1202072787, "metainfo": ""}