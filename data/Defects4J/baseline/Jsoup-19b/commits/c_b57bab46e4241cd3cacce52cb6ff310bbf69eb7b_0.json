{"sha": "b57bab46e4241cd3cacce52cb6ff310bbf69eb7b", "log": "Tweaks", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n     private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=([^\\\\s;]*)\");\n     static final String defaultCharset = \"UTF-8\"; // used if not found in header or meta charset\n     private static final int bufferSize = 0x20000; // ~130K.\n-    \n+\n+    private DataUtil() {}\n+\n     /**\n      * Loads a file to a String.\n      * @param in\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n package org.jsoup.helper;\n \n-import java.io.BufferedInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.OutputStreamWriter;\n+import org.jsoup.Connection;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.parser.TokenQueue;\n+\n+import java.io.*;\n import java.net.HttpURLConnection;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLEncoder;\n import java.nio.ByteBuffer;\n import java.nio.charset.Charset;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.zip.GZIPInputStream;\n+import java.util.*;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-\n-import org.jsoup.Connection;\n-import org.jsoup.nodes.Document;\n-import org.jsoup.parser.TokenQueue;\n+import java.util.zip.GZIPInputStream;\n \n /**\n  * Implementation of {@link Connection}.\n \n         public Request timeout(int millis) {\n             Validate.isTrue(millis >= 0, \"Timeout milliseconds must be 0 (infinite) or greater\");\n-            this.timeoutMilliseconds = millis;\n+            timeoutMilliseconds = millis;\n             return this;\n         }\n \n--- a/src/main/java/org/jsoup/helper/Validate.java\n+++ b/src/main/java/org/jsoup/helper/Validate.java\n package org.jsoup.helper;\n-\n-import java.util.Collection;\n \n /**\n  * Simple validation methods. Designed for jsoup internal use\n  */\n public final class Validate {\n+    \n+    private Validate() {}\n \n     /**\n      * Validates that the obect is not null\n--- a/src/main/java/org/jsoup/select/Collector.java\n+++ b/src/main/java/org/jsoup/select/Collector.java\n  * @author Jonathan Hedley\n  */\n public class Collector {\n+\n+    private Collector() {\n+    }\n \n     /**\n      Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     }\n \n     private static class Accumulator implements NodeVisitor {\n-        private Elements elements;\n-        private Evaluator eval;\n+        private final Elements elements;\n+        private final Evaluator eval;\n \n         Accumulator(Elements elements, Evaluator eval) {\n             this.elements = elements;\n--- a/src/main/java/org/jsoup/select/Elements.java\n+++ b/src/main/java/org/jsoup/select/Elements.java\n      * @return Elements containing only the specified element, or, if that element did not exist, an empty list.\n      */\n     public Elements eq(int index) {\n-        if (contents.size() > index)\n-            return new Elements(get(index));\n-        else\n-            return new Elements();\n+        return contents.size() > index ? new Elements(get(index)) : new Elements();\n     }\n     \n     /**\n      * @return true if at least one element in the list matches the query.\n      */\n     public boolean is(String query) {\n-        Elements children = this.select(query);\n+        Elements children = select(query);\n         return !children.isEmpty();\n     }\n \n      @return The first matched element, or <code>null</code> if contents is empty;\n      */\n     public Element first() {\n-        return !contents.isEmpty() ? contents.get(0) : null;\n+        return contents.isEmpty() ? null : contents.get(0);\n     }\n \n     /**\n      @return The last matched element, or <code>null</code> if contents is empty.\n      */\n     public Element last() {\n-        return !contents.isEmpty() ? contents.get(contents.size() - 1) : null;\n+        return contents.isEmpty() ? null : contents.get(contents.size() - 1);\n     }\n \n     // implements List<Element> delegates:\n--- a/src/test/java/org/jsoup/parser/TokenQueueTest.java\n+++ b/src/test/java/org/jsoup/parser/TokenQueueTest.java\n         data = tq.chompToIgnoreCase(\"</textarea\");\n         assertEquals(\"<textarea> one two < three </oops>\", data);\n     }\n+\n+    @Test public void addFirst() {\n+        TokenQueue tq = new TokenQueue(\"One Two\");\n+        tq.consumeWord();\n+        tq.addFirst(\"Three\");\n+        assertEquals(\"Three Two\", tq.remainder());\n+    }\n }", "timestamp": 1309605120, "metainfo": ""}