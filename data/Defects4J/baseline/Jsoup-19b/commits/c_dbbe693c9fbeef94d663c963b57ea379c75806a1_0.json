{"sha": "dbbe693c9fbeef94d663c963b57ea379c75806a1", "log": "fix non-void element parsing such as <a href=/link/>link text</a>", "commit": "\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n         \n         tq.consumeWhitespace();\n         Attributes attributes = new Attributes();\n+        Tag tag = Tag.valueOf(tagName);\n         while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.isEmpty()) {\n-            Attribute attribute = parseAttribute();\n+            Attribute attribute = parseAttribute(tag);\n             if (attribute != null)\n                 attributes.put(attribute);\n         }\n \n-        Tag tag = Tag.valueOf(tagName);\n+        \n         Element child = new Element(tag, baseUri, attributes);\n \n         boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>\n         }\n     }\n \n-    private Attribute parseAttribute() {\n+    private Attribute parseAttribute(Tag tag) {\n         tq.consumeWhitespace();\n         String key = tq.consumeAttributeKey();\n         String value = \"\";\n             } else {\n                 StringBuilder valueAccum = new StringBuilder();\n                 // no ' or \" to look for, so scan to end tag or space (or end of stream)\n-                while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.matchesWhitespace() && !tq.isEmpty()) {\n+                // /> allowed only for empty tags\n+                while (!(tq.matchesAny(\"<\", \">\") || (tag.isEmpty() && tq.matches(\"/>\")))  && !tq.matchesWhitespace() && !tq.isEmpty()) {\n                     valueAccum.append(tq.consume());\n                 }\n                 value = valueAccum.toString();\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n     @Test public void handlesUnknownNamespaceTags() {\n         String h = \"<foo:bar id=1/><abc:def id=2>Foo<p>Hello</abc:def><foo:bar>There</foo:bar>\";\n         Document doc = Jsoup.parse(h);\n-        assertEquals(\"<foo:bar id=\\\"1\\\" /><abc:def id=\\\"2\\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>\", TextUtil.stripNewlines(doc.body().html()));\n+        //assertEquals(\"<foo:bar id=\\\"1\\\" /><abc:def id=\\\"2\\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>\", TextUtil.stripNewlines(doc.body().html()));\n+        assertEquals(\"<foo:bar id=\\\"1/\\\"><abc:def id=\\\"2\\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar></foo:bar>\", TextUtil.stripNewlines(doc.body().html()));\n     }\n     \n     @Test public void handlesEmptyBlocks() {\n-        String h = \"<div id=1/><div id=2><img /></div>\";\n-        Document doc = Jsoup.parse(h);\n-        Element div1 = doc.getElementById(\"1\");\n-        assertTrue(div1.children().isEmpty());\n+        String h = \"<div id=1/><div id=2><img /></div> <hr /> hr text\";\n+        Document doc = Jsoup.parse(h);\n+        //Element div1 = doc.getElementById(\"1\");\n+        //assertFalse(div1.children().isEmpty());\n+        assertTrue(doc.select(\"#1\").isEmpty());\n+        assertTrue(doc.select(\"hr\").get(0).children().isEmpty());\n+        \n+        \n     }\n     \n     @Test public void handlesMultiClosingBody() {", "timestamp": 1309605124, "metainfo": ""}