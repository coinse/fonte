{"sha": "575c88d8a2dd9cc0a69331409322de9c2deebd0e", "log": "Add some more tests that document escaping behavior  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n     }\n \n     @Test\n+    public void testCR() throws Exception {\n+        final Lexer lexer = getLexer(\"character\" + CR + \"Escaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\"));\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"Escaped\"));\n+    }\n+\n+    @Test\n     public void testEscapedLF() throws Exception {\n         final Lexer lexer = getLexer(\"character\\\\\" + LF + \"Escaped\", formatWithEscaping);\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + LF + \"Escaped\"));\n+    }\n+\n+    @Test\n+    public void testLF() throws Exception {\n+        final Lexer lexer = getLexer(\"character\" + LF + \"Escaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\"));\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"Escaped\"));\n     }\n \n     @Test // TODO is this correct? Do we expect TAB to be un/escaped?\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + TAB + \"Escaped\"));\n     }\n \n+    @Test // TODO is this correct? Do we expect TAB to be un/escaped?\n+    public void testTab() throws Exception {\n+        final Lexer lexer = getLexer(\"character\" + TAB + \"Escaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + TAB + \"Escaped\"));\n+    }\n+\n     @Test // TODO is this correct? Do we expect BACKSPACE to be un/escaped?\n     public void testEscapedBackspace() throws Exception {\n         final Lexer lexer = getLexer(\"character\\\\\" + BACKSPACE + \"Escaped\", formatWithEscaping);\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + BACKSPACE + \"Escaped\"));\n     }\n \n+    @Test // TODO is this correct? Do we expect BACKSPACE to be un/escaped?\n+    public void testBackspace() throws Exception {\n+        final Lexer lexer = getLexer(\"character\" + BACKSPACE + \"Escaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + BACKSPACE + \"Escaped\"));\n+    }\n+\n     @Test // TODO is this correct? Do we expect FF to be un/escaped?\n     public void testEscapedFF() throws Exception {\n         final Lexer lexer = getLexer(\"character\\\\\" + FF + \"Escaped\", formatWithEscaping);\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + FF + \"Escaped\"));\n     }\n \n+    @Test // TODO is this correct? Do we expect FF to be un/escaped?\n+    public void testFF() throws Exception {\n+        final Lexer lexer = getLexer(\"character\" + FF + \"Escaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + FF + \"Escaped\"));\n+    }\n+\n     @Test\n     public void testEscapedMySqlNullValue() throws Exception {\n         // MySQL uses \\N to symbolize null values. We have to restore this", "timestamp": 1375528368, "metainfo": ""}