{"sha": "6b3afdc93def2b60e7b3c6071b9d9e73dc1c2c62", "log": "Clean up constant name.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n  */\n public class CSVParserTest {\n \n-    private static final String CSVINPUT = \"a,b,c,d\\n\"\n+    private static final String CSV_INPUT = \"a,b,c,d\\n\"\n                     + \" a , b , 1 2 \\n\"\n                     + \"\\\"foo baar\\\", b,\\n\"\n                     // + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\\\\\"\\\",d,e\\n\";\n \n     @Test\n     public void testGetLine() throws IOException {\n-        final CSVParser parser = CSVParser.parse(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));\n+        final CSVParser parser = CSVParser.parse(CSV_INPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));\n         for (final String[] re : RESULT) {\n             assertArrayEquals(re, parser.nextRecord().values());\n         }\n \n     @Test\n     public void testGetRecords() throws IOException {\n-        final CSVParser parser = CSVParser.parse(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));\n+        final CSVParser parser = CSVParser.parse(CSV_INPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));\n         final List<CSVRecord> records = parser.getRecords();\n         assertEquals(RESULT.length, records.size());\n         assertTrue(records.size() > 0);", "timestamp": 1396643402, "metainfo": ""}