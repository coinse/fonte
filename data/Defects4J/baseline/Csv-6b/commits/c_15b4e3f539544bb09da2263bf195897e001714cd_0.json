{"sha": "15b4e3f539544bb09da2263bf195897e001714cd", "log": "Sort members alphabetically  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n \n     private static final long serialVersionUID = 1L;\n \n-    /**\n-     * Returns true if the given character is a line break character.\n-     *\n-     * @param c\n-     *            the character to check, may be null\n-     *\n-     * @return true if <code>c</code> is a line break character (and not null)\n-     */\n-    // package protected to give access without needing a synthetic accessor\n-    static boolean isLineBreak(final Character c) {\n-        return c != null && isLineBreak(c.charValue());\n-    }\n-\n     private final char delimiter;\n     private final Character quoteChar; // null if quoting is disabled\n     private final Quote quotePolicy;\n     // package protected to give access without needing a synthetic accessor\n     static boolean isLineBreak(final char c) {\n         return c == LF || c == CR;\n+    }\n+\n+    /**\n+     * Returns true if the given character is a line break character.\n+     *\n+     * @param c\n+     *            the character to check, may be null\n+     *\n+     * @return true if <code>c</code> is a line break character (and not null)\n+     */\n+    // package protected to give access without needing a synthetic accessor\n+    static boolean isLineBreak(final Character c) {\n+        return c != null && isLineBreak(c.charValue());\n     }\n \n     /**", "timestamp": 1376130648, "metainfo": ""}