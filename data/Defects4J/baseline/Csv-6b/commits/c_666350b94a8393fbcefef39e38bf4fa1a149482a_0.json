{"sha": "666350b94a8393fbcefef39e38bf4fa1a149482a", "log": "Sort members.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVRecordBooleanTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVRecordBooleanTest.java\n \n     private CSVRecord record;\n \n+    /**\n+     * @return\n+     * @throws IOException\n+     */\n+    private CSVRecord createTestRecord() throws IOException {\n+        String csv = \"A,B,C,D\\ntrue, TRUE, false, foo\";\n+        CSVRecord record = CSVParser.parseString(csv, CSVFormat.DEFAULT.withHeader().withIgnoreSurroundingSpaces(true))\n+                .iterator().next();\n+        return record;\n+    }\n+\n     @Before\n     public void setUp() throws IOException {\n         this.record = createTestRecord();\n-    }\n-\n-    @Test\n-    public void testGetBooleanByString() {\n-        Assert.assertEquals(Boolean.TRUE, Boolean.valueOf(record.getBoolean(\"A\")));\n-        Assert.assertEquals(Boolean.TRUE, Boolean.valueOf(record.getBoolean(\"B\")));\n-        Assert.assertEquals(Boolean.FALSE, Boolean.valueOf(record.getBoolean(\"C\")));\n-        Assert.assertEquals(Boolean.FALSE, Boolean.valueOf(record.getBoolean(\"D\")));\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n         Assert.assertEquals(null, Boolean.valueOf(record.getBoolean(null)));\n     }\n \n-    /**\n-     * @return\n-     * @throws IOException\n-     */\n-    private CSVRecord createTestRecord() throws IOException {\n-        String csv = \"A,B,C,D\\ntrue, TRUE, false, foo\";\n-        CSVRecord record = CSVParser.parseString(csv, CSVFormat.DEFAULT.withHeader().withIgnoreSurroundingSpaces(true))\n-                .iterator().next();\n-        return record;\n+    @Test\n+    public void testGetBooleanByString() {\n+        Assert.assertEquals(Boolean.TRUE, Boolean.valueOf(record.getBoolean(\"A\")));\n+        Assert.assertEquals(Boolean.TRUE, Boolean.valueOf(record.getBoolean(\"B\")));\n+        Assert.assertEquals(Boolean.FALSE, Boolean.valueOf(record.getBoolean(\"C\")));\n+        Assert.assertEquals(Boolean.FALSE, Boolean.valueOf(record.getBoolean(\"D\")));\n     }\n \n }", "timestamp": 1375393719, "metainfo": ""}