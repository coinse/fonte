{"sha": "ac57740b13bddd414c98253d53092546c1c330a2", "log": "Fixed selector for multi descenders.", "commit": "\n--- a/src/main/java/org/jsoup/select/Selector.java\n+++ b/src/main/java/org/jsoup/select/Selector.java\n                     elements.addAll(select(subQuery, root));\n                 }\n             } else if (tq.matchChomp(\">\")) { // parent > child\n-                Elements candidates = select(tq.remainder(), elements);\n-                return filterForChildren(elements, candidates);\n+                String subQuery = tq.chompTo(\">\"); // support multi > childs\n+                Elements candidates = select(subQuery, elements);\n+                Elements children = filterForChildren(elements, candidates);\n+                elements.clear(); elements.addAll(children);\n             } else if (seenWhite) { // ancestor descendant\n                 Elements candidates = select(tq.remainder(), elements);\n                 return filterForDescendants(elements, candidates);\n--- a/src/test/java/org/jsoup/select/SelectorTest.java\n+++ b/src/test/java/org/jsoup/select/SelectorTest.java\n         assertEquals(\"p\", divChilds.get(1).tagName());\n         assertEquals(\"span\", divChilds.get(2).tagName());\n     }\n+    \n+    @Test public void multiChildDescent() {\n+        String h = \"<div id=foo><h1 class=bar><a href=http://example.com/>One</a></h1></div>\";\n+        Document doc = Jsoup.parse(h);\n+        Elements els = doc.select(\"div#foo > h1.bar > a[href*=example]\");\n+        assertEquals(1, els.size());\n+        assertEquals(\"a\", els.first().tagName());\n+    }\n \n     @Test public void caseInsensitive() {\n         String h = \"<dIv tItle=bAr><div>\"; // mixed case so a simple toLowerCase() on value doesn't catch", "timestamp": 1309605104, "metainfo": ""}