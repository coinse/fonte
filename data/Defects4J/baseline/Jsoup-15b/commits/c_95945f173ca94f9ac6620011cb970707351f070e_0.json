{"sha": "95945f173ca94f9ac6620011cb970707351f070e", "log": "Implemented Element prepend methods", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n     public Elements select(String query) {\n         return Selector.select(query, this);\n     }\n-\n-    /**\n-     * Adds an element to this element's children.\n-     * @param child the Element to add. It should be a new element, without an existing parent.\n-     * @return this element, so that you can add more children.\n-     */\n-    public Element appendChild(Element child) { // TODO remove, and dynamically filter for children()\n-        Validate.notNull(child);\n-        \n-        childNodes.add(child);\n-        child.setParentNode(this);\n-        return this;\n-    }\n-\n-    /**\n-     * Adds a node to this element. \n-     * @param child the node to add. Must not already have a parent.\n+    \n+    /**\n+     * Add a node to the last child of this element.\n+     * \n+     * @param child node to add. Must not already have a parent.\n      * @return this element, so that you can add more child nodes or elements.\n      */\n     public Element appendChild(Node child) {\n         Validate.notNull(child);\n         \n+        child.setParentNode(this);\n         childNodes.add(child);\n+        return this;\n+    }\n+    \n+    /**\n+     * Add a node to the start of this element's children.\n+     * \n+     * @param child node to add. Must not already have a parent.\n+     * @return this element, so that you can add more child nodes or elements.\n+     */\n+    public Element prependChild(Node child) {\n+        Validate.notNull(child);\n+        \n         child.setParentNode(this);\n-        return this;\n-    }\n-    \n-    /**\n-     * Create a new element by tag name, and add it to this element.\n+        childNodes.add(0, child);\n+        return this;\n+    }\n+    \n+    /**\n+     * Create a new element by tag name, and add it as the last child.\n      * \n      * @param tagName the name of the tag (e.g. {@code div}).\n      * @return the new element, to allow you to add content to it, e.g.:\n      *  {@code parent.appendElement(\"h1\").attr(\"id\", \"header\").text(\"Welcome\");}\n      */\n     public Element appendElement(String tagName) {\n-        Validate.notEmpty(tagName);\n-        \n         Element child = new Element(Tag.valueOf(tagName), baseUri());\n         appendChild(child);\n         return child;\n     }\n     \n     /**\n+     * Create a new element by tag name, and add it as the first child.\n+     * \n+     * @param tagName the name of the tag (e.g. {@code div}).\n+     * @return the new element, to allow you to add content to it, e.g.:\n+     *  {@code parent.prependElement(\"h1\").attr(\"id\", \"header\").text(\"Welcome\");}\n+     */\n+    public Element prependElement(String tagName) {\n+        Element child = new Element(Tag.valueOf(tagName), baseUri());\n+        prependChild(child);\n+        return child;\n+    }\n+    \n+    /**\n      * Create and append a new TextNode to this element.\n      * \n      * @param text the unencoded text to add\n     }\n     \n     /**\n-     * Add inner HTML to this element. The supplied HTML will be parsed, and each node appended.\n+     * Create and prepend a new TextNode to this element.\n+     * \n+     * @param text the unencoded text to add\n+     * @return this element\n+     */\n+    public Element prependText(String text) {\n+        TextNode node = new TextNode(text, baseUri());\n+        prependChild(node);\n+        return this;\n+    }\n+    \n+    /**\n+     * Add inner HTML to this element. The supplied HTML will be parsed, and each node appended to the end of the children.\n      * @param html HTML to add inside this element, after the existing HTML\n      * @return this element\n      * @see #html(String)\n         for (Node node : fragment.childNodes()) {\n             node.parentNode = null;\n             appendChild(node);\n+        }\n+        return this;\n+    }\n+    \n+    /**\n+     * Add inner HTML to this element. The supplied HTML will be parsed, and each node prepended to the start of the children.\n+     * @param html HTML to add inside this element, before the existing HTML\n+     * @return this element\n+     * @see #html(String)\n+     */\n+    public Element prepend(String html) {\n+        Validate.notNull(html);\n+        \n+        Element fragment = Parser.parseBodyFragment(html, baseUri).getBody();\n+        // TODO: must parse without implicit elements, so you can e.g. add <td> to a <tr> (without creating a whole new table)\n+        List<Node> nodes = fragment.childNodes();\n+        for (int i = nodes.size() - 1; i >= 0; i--) {\n+            Node node = nodes.get(i);\n+            node.parentNode = null;\n+            prependChild(node);\n         }\n         return this;\n     }\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n                 doc.html());\n     }\n     \n+    @Test public void testPrependElement() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.prependElement(\"p\").text(\"Before\");\n+        assertEquals(\"Before\", div.child(0).text());\n+        assertEquals(\"Hello\", div.child(1).text());\n+    }\n+    \n     @Test public void testAddNewText() {\n         Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n         Element div = doc.getElementById(\"1\");\n         assertEquals(\"<p>Hello</p> there &amp; now &gt;\", div.html());\n     }\n     \n+    @Test public void testPrependText() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.prependText(\"there & now > \");\n+        assertEquals(\"there &amp; now &gt; <p>Hello</p>\", div.html());\n+    }\n+    \n     @Test public void testAddNewHtml() {\n         Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n         Element div = doc.getElementById(\"1\");\n         div.append(\"<p>there</p><p>now</p>\");\n         assertEquals(\"<p>Hello</p><p>there</p><p>now</p>\", div.html());\n+    }\n+    \n+    @Test public void testPrependNewHtml() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.prepend(\"<p>there</p><p>now</p>\");\n+        assertEquals(\"<p>there</p><p>now</p><p>Hello</p>\", div.html());\n     }\n     \n     @Test public void testSetHtml() {", "timestamp": 1309605106, "metainfo": ""}