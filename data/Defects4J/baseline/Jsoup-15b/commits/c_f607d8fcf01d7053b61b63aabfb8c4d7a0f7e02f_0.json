{"sha": "f607d8fcf01d7053b61b63aabfb8c4d7a0f7e02f", "log": "Added TextNode#text and TextNode#text(String)  Closes #18", "commit": "\n--- a/src/main/java/org/jsoup/nodes/TextNode.java\n+++ b/src/main/java/org/jsoup/nodes/TextNode.java\n \n     public String nodeName() {\n         return \"#text\";\n+    }\n+    \n+    /**\n+     * Get the text content of this text node.\n+     * @return Unencoded, normalised text.\n+     * @see TextNode#getWholeText()\n+     */\n+    public String text() {\n+        return outerHtml();\n+    }\n+    \n+    /**\n+     * Set the text content of this text node.\n+     * @param text unencoded text\n+     * @return this, for chaining\n+     */\n+    public TextNode text(String text) {\n+        attributes.put(TEXT_KEY, text);\n+        return this;\n     }\n \n     /**\n--- a/src/test/java/org/jsoup/nodes/TextNodeTest.java\n+++ b/src/test/java/org/jsoup/nodes/TextNodeTest.java\n package org.jsoup.nodes;\n \n+import org.jsoup.Jsoup;\n import org.junit.Test;\n \n import static org.junit.Assert.*;\n         assertFalse(four.isBlank());\n         assertFalse(five.isBlank());\n     }\n+    \n+    @Test public void testTextBean() {\n+        Document doc = Jsoup.parse(\"<p>One <span>two</span> three</p>\");\n+        Element p = doc.select(\"p\").first();\n+        \n+        TextNode tn = (TextNode) p.childNode(2);\n+        assertEquals(\" three\", tn.text());\n+        \n+        tn.text(\" POW!\");\n+        assertEquals(\"One <span>two</span> POW!\", p.html());\n+    }\n }", "timestamp": 1309605112, "metainfo": ""}