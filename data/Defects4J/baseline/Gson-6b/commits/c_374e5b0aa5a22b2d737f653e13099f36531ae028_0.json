{"sha": "374e5b0aa5a22b2d737f653e13099f36531ae028", "log": "Added test ovr new DOM functionality", "commit": "\n--- /dev/null\n+++ b/gson/src/test/java/com/google/gson/functional/JsonArrayTest.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.gson.functional;\n+\n+import com.google.gson.JsonArray;\n+import junit.framework.TestCase;\n+\n+/**\n+ * Functional tests for adding primitives to a JsonArray.\n+ *\n+ * @author Dillon Dixon\n+ */\n+public class JsonArrayTest extends TestCase {\n+\n+  public void testStringPrimitiveAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    jsonArray.add(\"Hello\");\n+    jsonArray.add(\"Goodbye\");\n+    jsonArray.add(\"Thank you\");\n+    jsonArray.add((String) null);\n+    jsonArray.add(\"Yes\");\n+\n+    assertEquals(\"[\\\"Hello\\\",\\\"Goodbye\\\",\\\"Thank you\\\",null,\\\"Yes\\\"]\", jsonArray.toString());\n+  }\n+\n+  public void testIntegerPrimitiveAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    int x = 1;\n+    jsonArray.add(x);\n+\n+    x = 2;\n+    jsonArray.add(x);\n+\n+    x = -3;\n+    jsonArray.add(x);\n+\n+    jsonArray.add((Integer) null);\n+\n+    x = 4;\n+    jsonArray.add(x);\n+\n+    x = 0;\n+    jsonArray.add(x);\n+\n+    assertEquals(\"[1,2,-3,null,4,0]\", jsonArray.toString());\n+  }\n+\n+  public void testDoublePrimitiveAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    double x = 1.0;\n+    jsonArray.add(x);\n+\n+    x = 2.13232;\n+    jsonArray.add(x);\n+\n+    x = 0.121;\n+    jsonArray.add(x);\n+\n+    jsonArray.add((Double) null);\n+\n+    x = -0.00234;\n+    jsonArray.add(x);\n+\n+    jsonArray.add((Double) null);\n+\n+    assertEquals(\"[1.0,2.13232,0.121,null,-0.00234,null]\", jsonArray.toString());\n+  }\n+\n+  public void testBooleanPrimitiveAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    jsonArray.add(true);\n+    jsonArray.add(true);\n+    jsonArray.add(false);\n+    jsonArray.add(false);\n+    jsonArray.add((Boolean) null);\n+    jsonArray.add(true);\n+\n+    assertEquals(\"[true,true,false,false,null,true]\", jsonArray.toString());\n+  }\n+\n+  public void testCharPrimitiveAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    jsonArray.add('a');\n+    jsonArray.add('e');\n+    jsonArray.add('i');\n+    jsonArray.add((char) 111);\n+    jsonArray.add((Character) null);\n+    jsonArray.add('u');\n+    jsonArray.add(\"and sometimes Y\");\n+\n+    assertEquals(\"[\\\"a\\\",\\\"e\\\",\\\"i\\\",\\\"o\\\",null,\\\"u\\\",\\\"and sometimes Y\\\"]\", jsonArray.toString());\n+  }\n+\n+  public void testSameAddition() {\n+    JsonArray jsonArray = new JsonArray();\n+\n+    jsonArray.add('a');\n+    jsonArray.add('a');\n+    jsonArray.add(true);\n+    jsonArray.add(true);\n+    jsonArray.add(1212);\n+    jsonArray.add(1212);\n+    jsonArray.add(34.34);\n+    jsonArray.add(34.34);\n+    jsonArray.add((Boolean) null);\n+    jsonArray.add((Boolean) null);\n+\n+    assertEquals(\"[\\\"a\\\",\\\"a\\\",true,true,1212,1212,34.34,34.34,null,null]\", jsonArray.toString());\n+  }\n+}", "timestamp": 1437717452, "metainfo": ""}