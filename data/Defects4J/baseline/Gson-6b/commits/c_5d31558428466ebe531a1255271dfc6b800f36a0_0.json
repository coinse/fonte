{"sha": "5d31558428466ebe531a1255271dfc6b800f36a0", "log": "eliminated maven compilation problems with JDK 5", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonDeserializationContext.java\n+++ b/gson/src/main/java/com/google/gson/JsonDeserializationContext.java\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public <T> T construct(Type type) {\n-    return objectConstructor.construct(type);\n+    Object instance = objectConstructor.construct(type);\n+    return (T) instance;\n   }\n \n   public Object constructArray(Type type, int length) {\n    * @return An object of type typeOfT.\n    * @throws JsonParseException if the parse tree does not contain expected data.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public <T> T deserialize(JsonElement json, Type typeOfT) throws JsonParseException {\n     if (json == null || json.isJsonNull()) {\n       return null;\n     } else if (json.isJsonArray()) {\n-      return fromJsonArray(typeOfT, json.getAsJsonArray(), this);\n+      Object array = fromJsonArray(typeOfT, json.getAsJsonArray(), this);\n+      return (T) array;\n     } else if (json.isJsonObject()) {\n-      return fromJsonObject(typeOfT, json.getAsJsonObject(), this);\n+      Object object = fromJsonObject(typeOfT, json.getAsJsonObject(), this);\n+      return (T) object;\n     } else if (json.isJsonPrimitive()) {\n-      return fromJsonPrimitive(typeOfT, json.getAsJsonPrimitive(), this);\n+      Object primitive = fromJsonPrimitive(typeOfT, json.getAsJsonPrimitive(), this);\n+      return (T) primitive;\n     } else {\n       throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\");\n     }", "timestamp": 1306340016, "metainfo": ""}