{"sha": "d416361ac58046af0bbba29ed1a6158f640ebc9e", "log": "Added a test to ensure Gson can use JSON fields to store type information.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java\n \n package com.google.gson.functional;\n \n-import java.lang.reflect.Type;\n-\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.JsonDeserializationContext;\n import com.google.gson.JsonParseException;\n \n import junit.framework.TestCase;\n+\n+import java.lang.reflect.Type;\n \n /**\n  * Functional Test exercising custom deserialization only.  When test applies to both \n       return new DataHolder(dataString + SUFFIX);\n     }\n   }\n+  \n+  public void testJsonTypeFieldBasedDeserialization() {\n+    String json = \"{field1:'abc',field2:'def',__type__:'SUB_TYPE1'}\";\n+    Gson gson = new GsonBuilder().registerTypeAdapter(MyBase.class, new JsonDeserializer<MyBase>() {\n+      public MyBase deserialize(JsonElement json, Type pojoType,\n+          JsonDeserializationContext context) throws JsonParseException {\n+        String type = json.getAsJsonObject().get(MyBase.TYPE_ACCESS).getAsString();\n+        return context.deserialize(json, SubTypes.valueOf(type).getSubclass());\n+      }\n+    }).create();    \n+    SubType1 target = (SubType1) gson.fromJson(json, MyBase.class);\n+    assertEquals(\"abc\", target.field1);    \n+  }\n+  private static class MyBase {\n+    static final String TYPE_ACCESS = \"__type__\";\n+  }\n+  private enum SubTypes { \n+    SUB_TYPE1(SubType1.class),\n+    SUB_TYPE2(SubType2.class);\n+    private final Type subClass;\n+    private SubTypes(Type subClass) {\n+      this.subClass = subClass;\n+    }\n+    public Type getSubclass() {\n+      return subClass;\n+    }\n+  }\n+  private static class SubType1 extends MyBase {\n+    String field1;    \n+  }\n+  private static class SubType2 extends MyBase {\n+    @SuppressWarnings(\"unused\")\n+    String field2;    \n+  }\n }", "timestamp": 1254803128, "metainfo": ""}