{"sha": "498049b3048901ea96715dd2ef8fd5f71027d3d7", "log": "updated documentation for registerTypeHierarchyAdapter to cover TypeAdapter.", "commit": "\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n \n   /**\n    * Configures Gson for custom serialization or deserialization for an inheritance type hierarchy.\n-   * This method combines the registration of a {@link JsonSerializer} and a {@link\n-   * JsonDeserializer}. It is best used when a single object {@code typeAdapter} implements both of\n-   * the required interfaces for custom serialization with Gson. If a serializer or deserializer was\n-   * previously registered for the specified type hierarchy, it is overwritten. If a serializer or\n-   * deserializer is registered for a specific type in the type hierarchy, it will be invoked\n-   * instead of the one registered for the type hierarchy.\n+   * This method combines the registration of a {@link TypeAdapter}, {@link JsonSerializer} and\n+   * a {@link JsonDeserializer}. If a type adapter was previously registered for the specified\n+   * type hierarchy, it is overridden. If a type adapter is registered for a specific type in\n+   * the type hierarchy, it will be invoked instead of the one registered for the type hierarchy.\n    *\n    * @param baseType the class definition for the type adapter being registered for the base class\n    *        or interface\n-   * @param typeAdapter This object must implement at least one of {@link JsonSerializer} or {@link\n-   *        JsonDeserializer} interfaces.\n+   * @param typeAdapter This object must implement at least one of {@link TypeAdapter}, \n+   *        {@link JsonSerializer} or {@link JsonDeserializer} interfaces.\n    * @return a reference to this {@code GsonBuilder} object to fulfill the \"Builder\" pattern\n    * @since 1.7\n    */", "timestamp": 1325311228, "metainfo": ""}