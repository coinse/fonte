{"sha": "5fc2db9e7266701959129e88aa7ed8baeb493adc", "log": "Parity with Gson behavior where we use runtime type of an object while serializing instead of the declared type of the field.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n-import com.google.gson.FieldAttributes;\n-import com.google.gson.FieldAttributesTest;\n import com.google.gson.internal.$Gson$Types;\n import com.google.gson.internal.UnsafeAllocator;\n import com.google.gson.reflect.TypeToken;\n   }\n \n   private static Type getMoreSpecificType(Type type, Object obj, Object fieldValue) {\n-    if (obj != null && (Object.class == type || type instanceof TypeVariable)) {\n-      if (fieldValue != null) {\n-        type = fieldValue.getClass();\n-      }\n+    if (obj == null || fieldValue == null) {\n+      return type;\n+    }\n+    if (type == Object.class || type instanceof TypeVariable || type instanceof Class<?>) {\n+      type = (Class<?>) fieldValue.getClass();\n     }\n     return type;\n   }", "timestamp": 1312496845, "metainfo": ""}