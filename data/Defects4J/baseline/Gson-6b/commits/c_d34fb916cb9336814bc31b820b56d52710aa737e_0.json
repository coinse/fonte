{"sha": "d34fb916cb9336814bc31b820b56d52710aa737e", "log": "Added tests for enum serialization and derserialization.", "commit": "\n--- /dev/null\n+++ b/gson/src/test/java/com/google/gson/functional/EnumTest.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.gson.functional;\n+\n+import com.google.gson.Gson;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Functional tests for Java 5.0 enums.\n+ *\n+ * @author Inderjeet Singh\n+ * @author Joel Leitch\n+ */\n+public class EnumTest extends TestCase {\n+  \n+  private Gson gson;\n+  \n+  @Override\n+  protected void setUp() throws Exception {\n+    super.setUp();\n+    gson = new Gson();\n+  }\n+  \n+  public void testEnumSerialization() throws Exception {\n+    String result = gson.toJson(TestEnum.TEST_1);\n+    assertEquals('\"' + TestEnum.TEST_1.toString() + '\"', result);\n+  }\n+  \n+  public void testEnumDeserialization() throws Exception {\n+    TestEnum result = gson.fromJson('\"' + TestEnum.TEST_1.toString() + '\"', TestEnum.class);\n+    assertEquals(TestEnum.TEST_1, result);\n+  }\n+  \n+  public void testEnumFieldSerialization() throws Exception {\n+    String result = gson.toJson(TestEnum.TEST_1);\n+    assertEquals('\"' + TestEnum.TEST_1.toString() + '\"', result);\n+  }\n+  \n+  public void testEnumFieldDeserialization() throws Exception {\n+    Foo result = gson.fromJson(\"{\\\"f\\\":\\\"TEST_1\\\"}\", Foo.class);\n+    assertEquals(TestEnum.TEST_1, result.f);\n+  }\n+\n+  private static enum TestEnum {\n+    TEST_1,\n+    TEST_2;\n+  }\n+  \n+  private static class Foo {\n+    private TestEnum f;\n+    \n+    public Foo() {\n+      this(TestEnum.TEST_1);\n+    }\n+    \n+    public Foo(TestEnum f) {\n+      this.f = f;\n+    }\n+  }\n+}", "timestamp": 1232412774, "metainfo": ""}