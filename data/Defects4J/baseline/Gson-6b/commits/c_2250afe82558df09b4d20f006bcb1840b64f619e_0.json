{"sha": "2250afe82558df09b4d20f006bcb1840b64f619e", "log": "Allow serialization of Object in collections.  This used to be supported before restructuring the Collection type handling.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n         childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n       }\n       for (Object child : src) {\n-        Type childType = (childGenericType == null) ? \n-            childType = child.getClass() : childGenericType;\n+        Type childType = (childGenericType == null || childGenericType == Object.class)\n+            ? child.getClass() : childGenericType;\n         JsonElement element = context.serialize(child, childType);\n         array.add(element);\n       }\n--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n     for (int i = 0; i < expected.size(); ++i) {\n       assertEquals(expected.get(i), target.get(i));\n     }\n+  }\n+\n+  public void testCollectionOfObjectSerialization() {\n+    List<Object> target = new ArrayList<Object>();\n+    target.add(\"Hello\");\n+    target.add(\"World\");\n+    assertEquals(\"[\\\"Hello\\\",\\\"World\\\"]\", gson.toJson(target));\n+    \n+    Type type = new TypeToken<List<Object>>() {}.getType();\n+    assertEquals(\"[\\\"Hello\\\",\\\"World\\\"]\", gson.toJson(target, type));\n   }\n \n   public void testCollectionOfStringsSerialization() {", "timestamp": 1227143181, "metainfo": ""}