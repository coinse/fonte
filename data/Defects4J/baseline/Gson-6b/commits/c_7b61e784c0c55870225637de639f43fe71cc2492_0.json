{"sha": "7b61e784c0c55870225637de639f43fe71cc2492", "log": "Remove testParameterizedMapSubclassDeserialization that never passed. We'll eventually add an equivalent to the extras/ package.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n     assertTrue(json.contains(\"\\\"a\\\":\\\"b\\\"\"));\n   }\n \n-  public void testParameterizedMapSubclassDeserialization() {\n-    Type type = new TypeToken<MyParameterizedMap<String, Integer>>() {}.getType();\n-    String json = \"{\\\"a\\\":1,\\\"b\\\":2}\";\n-    MyParameterizedMap<String, Integer> map = gson.fromJson(json, type);\n-    assertEquals(1, map.get(\"a\").intValue());\n-    assertEquals(2, map.get(\"b\").intValue());\n-  }\n-\n   @SuppressWarnings({ \"unused\", \"serial\" })\n   private static class MyParameterizedMap<K, V> extends LinkedHashMap<K, V> {\n     final int foo;\n     } catch (JsonSyntaxException expected) {\n     }\n   }\n-  \n+\n   public void testSerializeMapOfMaps() {\n     Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();\n     Map<String, Map<String, String>> map = newMap(\n     assertEquals(\"{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}\",\n         gson.toJson(map, type).replace('\"', '\\''));\n   }\n-  \n+\n   public void testDeerializeMapOfMaps() {\n     Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();\n     Map<String, Map<String, String>> map = newMap(\n     String json = \"{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}\";\n     assertEquals(map, gson.fromJson(json, type));\n   }\n-  \n+\n   private <K, V> Map<K, V> newMap(K key1, V value1, K key2, V value2) {\n     Map<K, V> result = new LinkedHashMap<K, V>();\n     result.put(key1, value1);\n     result.put(key2, value2);\n     return result;\n   }\n-    \n+\n   public void testMapNamePromotionWithJsonElementReader() {\n     String json = \"{'2.3':'a'}\";\n     Map<Double, String> map = new LinkedHashMap<Double, String>();", "timestamp": 1334254556, "metainfo": ""}