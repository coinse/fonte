{"sha": "9bbdcac5a82600f30b1f1d1d0de27db936d3bd55", "log": "Fixed issue code.google.com/p/google-gson/issues/detail?id=353 by adding remove and contains methods in JsonArray", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonArray.java\n+++ b/gson/src/main/java/com/google/gson/JsonArray.java\n   }\n \n   /**\n+   * Removes the first occurrence of the specified element from this array, if it is present.\n+   * If the array does not contain the element, it is unchanged.\n+   * @param element element to be removed from this array, if present\n+   * @return true if this array contained the specified element, false otherwise\n+   */\n+  public boolean remove(JsonElement element) {\n+    return elements.remove(element);\n+  }\n+\n+  /**\n+   * Removes the element at the specified position in this array. Shifts any subsequent elements\n+   * to the left (subtracts one from their indices). Returns the element that was removed from\n+   * the array.\n+   * @param index index the index of the element to be removed\n+   * @return the element previously at the specified position\n+   * @throws IndexOutOfBoundsException if the specified index is outside the array bounds\n+   */\n+  public JsonElement remove(int index) {\n+    return elements.remove(index);\n+  }\n+\n+  /**\n+   * Returns true if this array contains the specified element.\n+   * @return true if this array contains the specified element.\n+   * @param element whose presence in this array is to be tested\n+   */\n+  public boolean contains(JsonElement element) {\n+    return elements.contains(element);\n+  }\n+\n+  /**\n    * Returns the number of elements in the array.\n    *\n    * @return the number of elements in the array.\n--- a/gson/src/test/java/com/google/gson/JsonArrayTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonArrayTest.java\n \n package com.google.gson;\n \n+import junit.framework.TestCase;\n+\n import com.google.gson.common.MoreAsserts;\n-import junit.framework.TestCase;\n \n /**\n  * @author Jesse Wilson\n     assertFalse(b.equals(a));\n   }\n \n+  public void testRemove() {\n+    JsonArray array = new JsonArray();\n+    try {\n+      array.remove(0);\n+      fail();\n+    } catch (IndexOutOfBoundsException expected) {}\n+    JsonPrimitive a = new JsonPrimitive(\"a\");\n+    array.add(a);\n+    assertTrue(array.remove(a));\n+    assertFalse(array.contains(a));\n+    array.add(a);\n+    array.add(new JsonPrimitive(\"b\"));\n+    assertEquals(\"b\", array.remove(1).getAsString());\n+    assertEquals(1, array.size());\n+    assertTrue(array.contains(a));\n+  }\n+\n   public void testDeepCopy() {\n     JsonArray original = new JsonArray();\n     JsonArray firstEntry = new JsonArray();", "timestamp": 1404325296, "metainfo": ""}