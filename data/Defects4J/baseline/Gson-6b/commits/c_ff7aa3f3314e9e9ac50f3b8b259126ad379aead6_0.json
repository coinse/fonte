{"sha": "ff7aa3f3314e9e9ac50f3b8b259126ad379aead6", "log": "Escape only the required characters when emitting JSON. This means that instead of emitting     [\"foo\\nbar\", \"baz\"]  we'll emit this:    [\"foo bar\", baz\"]  This simple change measured about ~35% faster for in-memory writes!", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n        * quotation mark, reverse solidus, and the control characters\n        * (U+0000 through U+001F).\"\n        */\n-      switch (c) {\n-      case '\"':\n-      case '\\\\':\n-      case '/':\n+      if (c == '\"' || c == '\\\\') {\n         out.write('\\\\');\n         out.write(c);\n-        break;\n-\n-      case '\\t':\n-        out.write(\"\\\\t\");\n-        break;\n-\n-      case '\\b':\n-        out.write(\"\\\\b\");\n-        break;\n-\n-      case '\\n':\n-        out.write(\"\\\\n\");\n-        break;\n-\n-      case '\\r':\n-        out.write(\"\\\\r\");\n-        break;\n-\n-      case '\\f':\n-        out.write(\"\\\\f\");\n-        break;\n-\n-      default:\n-        if (c <= 0x1F) {\n-          out.write(String.format(\"\\\\u%04x\", (int) c));\n-        } else {\n-          out.write(c);\n-        }\n-        break;\n+      } else if (c <= 0x1F) {\n+        out.write(String.format(\"\\\\u%04x\", (int) c));\n+      } else {\n+        out.write(c);\n       }\n-\n     }\n     out.write(\"\\\"\");\n   }", "timestamp": 1282980562, "metainfo": ""}