{"sha": "3361030766593c0b05e17dace401cce6fcdf9e24", "log": "Merge pull request #705 from google/627  Implemented equals and hashcode for LazilyParsedNumber to fix", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n+++ b/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n public final class LazilyParsedNumber extends Number {\n   private final String value;\n \n+  /** @param value must not be null */\n   public LazilyParsedNumber(String value) {\n     this.value = value;\n   }\n   private Object writeReplace() throws ObjectStreamException {\n     return new BigDecimal(value);\n   }\n-}\n+\n+  @Override\n+  public int hashCode() {\n+    return value.hashCode();\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (obj instanceof LazilyParsedNumber) {\n+      LazilyParsedNumber other = (LazilyParsedNumber) obj;\n+      return value == other.value || value.equals(other.value);\n+    }\n+    return false;\n+  }\n+}\n--- /dev/null\n+++ b/gson/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java\n+/*\n+ * Copyright (C) 2015 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.internal;\n+\n+import junit.framework.TestCase;\n+\n+public class LazilyParsedNumberTest extends TestCase {\n+  public void testHashCode() {\n+    LazilyParsedNumber n1 = new LazilyParsedNumber(\"1\");\n+    LazilyParsedNumber n1Another = new LazilyParsedNumber(\"1\");\n+    assertEquals(n1.hashCode(), n1Another.hashCode());\n+  }\n+\n+  public void testEquals() {\n+    LazilyParsedNumber n1 = new LazilyParsedNumber(\"1\");\n+    LazilyParsedNumber n1Another = new LazilyParsedNumber(\"1\");\n+    assertTrue(n1.equals(n1Another));\n+  }\n+}\n--- a/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java\n+++ b/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java\n \n   /**\n    * Constructors for common interface types like Map and List and their\n-   * subytpes.\n+   * subtypes.\n    */\n   @SuppressWarnings(\"unchecked\") // use runtime checks to guarantee that 'T' is what it is\n   private <T> ObjectConstructor<T> newDefaultImplementationConstructor(\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n  * This code encodes the above structure: <pre>   {@code\n  *   public void writeJsonStream(OutputStream out, List<Message> messages) throws IOException {\n  *     JsonWriter writer = new JsonWriter(new OutputStreamWriter(out, \"UTF-8\"));\n- *     writer.setIndentSpaces(4);\n+ *     writer.setIndent(\"    \");\n  *     writeMessagesArray(writer, messages);\n  *     writer.close();\n  *   }", "timestamp": 1443389104, "metainfo": ""}