{"sha": "87717662f72436f547333a270d289743f79622aa", "log": "Merge pull request #689 from vbauer/util-classes  Add unit tests for constructors from util classes", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java\n  * @author Joel Leitch\n  */\n public final class $Gson$Preconditions {\n+  private $Gson$Preconditions() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n   public static <T> T checkNotNull(T obj) {\n     if (obj == null) {\n       throw new NullPointerException();\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n public final class $Gson$Types {\n   static final Type[] EMPTY_TYPE_ARRAY = new Type[] {};\n \n-  private $Gson$Types() {}\n+  private $Gson$Types() {\n+    throw new UnsupportedOperationException();\n+  }\n \n   /**\n    * Returns a new parameterized type, applying {@code typeArguments} to\n--- a/gson/src/main/java/com/google/gson/internal/Primitives.java\n+++ b/gson/src/main/java/com/google/gson/internal/Primitives.java\n  * @author Kevin Bourrillion\n  */\n public final class Primitives {\n-  private Primitives() {}\n+  private Primitives() {\n+    throw new UnsupportedOperationException();\n+  }\n \n   /** A map from primitive types to their corresponding wrapper types. */\n   private static final Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;\n--- a/gson/src/main/java/com/google/gson/internal/Streams.java\n+++ b/gson/src/main/java/com/google/gson/internal/Streams.java\n  * Reads and writes GSON parse trees over streams.\n  */\n public final class Streams {\n+  private Streams() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n   /**\n    * Takes a reader in any state and returns the next value as a JsonElement.\n    */\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n  * Type adapters for basic types.\n  */\n public final class TypeAdapters {\n-  private TypeAdapters() {}\n+  private TypeAdapters() {\n+    throw new UnsupportedOperationException();\n+  }\n \n   @SuppressWarnings(\"rawtypes\")\n   public static final TypeAdapter<Class> CLASS = new TypeAdapter<Class>() {\n--- a/gson/src/test/java/com/google/gson/common/MoreAsserts.java\n+++ b/gson/src/test/java/com/google/gson/common/MoreAsserts.java\n     Assert.assertFalse(a.equals(null));\n     Assert.assertFalse(a.equals(new Object()));\n   }\n+\n }\n--- a/gson/src/main/java/com/google/gson/annotations/SerializedName.java\n+++ b/gson/src/main/java/com/google/gson/annotations/SerializedName.java\n  * @author Joel Leitch\n  */\n @Retention(RetentionPolicy.RUNTIME)\n-@Target(ElementType.FIELD)\n+@Target({ElementType.FIELD, ElementType.METHOD})\n public @interface SerializedName {\n \n   /**", "timestamp": 1439599351, "metainfo": ""}