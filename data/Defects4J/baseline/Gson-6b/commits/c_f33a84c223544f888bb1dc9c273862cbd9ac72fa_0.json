{"sha": "f33a84c223544f888bb1dc9c273862cbd9ac72fa", "log": "Added tests for ensuring that control characters are escaped by Gson.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Escaper.java\n+++ b/gson/src/main/java/com/google/gson/Escaper.java\n   }\n \n   private static boolean isControlCharacter(int codePoint) {\n+    // JSON spec defines these code points as control characters, so they must be escaped\n     return codePoint < 0x20 \n-        || codePoint == 0x7f \n-        || (codePoint >= 0x80 && codePoint <= 0x9f);\n+        || codePoint == 0x2028  // Line separator\n+        || codePoint == 0x2029  // Paragraph separator\n+        || (codePoint >= 0x7f && codePoint <= 0x9f);\n   }\n \n   private static void appendHexJavaScriptRepresentation(int codePoint, Appendable out)\n--- a/gson/src/test/java/com/google/gson/EscaperTest.java\n+++ b/gson/src/test/java/com/google/gson/EscaperTest.java\n     String containsQuote = \"123\\\"456\";\n     String escapedString = Escaper.escapeJsonString(containsQuote);\n     assertEquals(\"123\\\\\\\"456\", escapedString);\n+  }\n+\n+  public void testLineSeparatorEscaping() throws Exception {\n+    String src = \"123\\u2028 456\";\n+    String escapedString = Escaper.escapeJsonString(src);\n+    assertEquals(\"123\\\\u2028 456\", escapedString);\n+  }\n+\n+  public void testParagraphSeparatorEscaping() throws Exception {\n+    String src = \"123\\u2029 456\";\n+    String escapedString = Escaper.escapeJsonString(src);\n+    assertEquals(\"123\\\\u2029 456\", escapedString);\n+  }\n+\n+  public void testControlCharBlockEscaping() throws Exception {\n+    for (char c = '\\u007f'; c <= '\\u009f'; ++c) {\n+      String src = \"123 \" + c + \" 456\";\n+      String escapedString = Escaper.escapeJsonString(src);\n+      assertFalse(src.equals(escapedString));\n+    }\n   }\n \n   public void testEqualsEscaping() throws Exception {", "timestamp": 1229720338, "metainfo": ""}