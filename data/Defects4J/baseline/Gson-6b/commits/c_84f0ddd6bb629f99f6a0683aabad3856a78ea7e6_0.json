{"sha": "84f0ddd6bb629f99f6a0683aabad3856a78ea7e6", "log": "Throwing a helpful error in cases where the user forgot to use the TypeToken idiom.", "commit": "\n--- a/gson/src/main/java/com/google/gson/TypeInfoFactory.java\n+++ b/gson/src/main/java/com/google/gson/TypeInfoFactory.java\n         }\n       }\n     } else if (typeToEvaluate instanceof TypeVariable) {\n-      // The class definition has the actual types used for the type variables.\n-      // Find the matching actual type for the Type Variable used for the field.\n-      // For example, class Foo<A> { A a; }\n-      // new Foo<Integer>(); defines the actual type of A to be Integer.\n-      // So, to find the type of the field a, we will have to look at the class'\n-      // actual type arguments.\n-      TypeVariable<?> fieldTypeVariable = (TypeVariable<?>) typeToEvaluate;\n-      TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters();\n-      ParameterizedType objParameterizedType = (ParameterizedType) parentType;\n-      int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);\n-      Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();\n-      return actualTypeArguments[indexOfActualTypeArgument];\n+      if (parentType instanceof ParameterizedType) {\n+        // The class definition has the actual types used for the type variables.\n+        // Find the matching actual type for the Type Variable used for the field.\n+        // For example, class Foo<A> { A a; }\n+        // new Foo<Integer>(); defines the actual type of A to be Integer.\n+        // So, to find the type of the field a, we will have to look at the class'\n+        // actual type arguments.\n+        TypeVariable<?> fieldTypeVariable = (TypeVariable<?>) typeToEvaluate;\n+        TypeVariable<?>[] classTypeVariables = rawParentClass.getTypeParameters();\n+        ParameterizedType objParameterizedType = (ParameterizedType) parentType;\n+        int indexOfActualTypeArgument = getIndex(classTypeVariables, fieldTypeVariable);\n+        Type[] actualTypeArguments = objParameterizedType.getActualTypeArguments();\n+        return actualTypeArguments[indexOfActualTypeArgument];\n+      } else {\n+        throw new UnsupportedOperationException(\"Expecting parameterized type, got \" + parentType\n+            + \".\\n Are you missing the use of TypeToken idiom?\\n See \" \n+            + \"http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener\");\n+      }\n     } else if (typeToEvaluate instanceof WildcardType) {\n       WildcardType castedType = (WildcardType) typeToEvaluate;\n       return getActualType(castedType.getUpperBounds()[0], parentType, rawParentClass);", "timestamp": 1238624650, "metainfo": ""}