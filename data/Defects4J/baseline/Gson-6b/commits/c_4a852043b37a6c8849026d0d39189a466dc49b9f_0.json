{"sha": "4a852043b37a6c8849026d0d39189a466dc49b9f", "log": "Moved the classes to create procedural web-services into a procedural package.", "commit": "\n--- a/wsexample/server/src/main/java/com/google/gson/wsexample/server/MainServlet.java\n+++ b/wsexample/server/src/main/java/com/google/gson/wsexample/server/MainServlet.java\n import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n import com.google.gson.webservice.definition.procedural.WebServiceResponse;\n-import com.google.gson.wsf.server.RequestReceiver;\n-import com.google.gson.wsf.server.ResponseSender;\n+import com.google.gson.wsf.server.procedural.RequestReceiver;\n+import com.google.gson.wsf.server.procedural.ResponseSender;\n \n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/inject/server/procedural/WebServiceCallServerProvider.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.inject.server.procedural;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.webservice.definition.procedural.WebServiceCall;\n+import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n+import com.google.gson.webservice.definition.procedural.WebServiceResponse;\n+import com.google.gson.wsf.server.procedural.RequestReceiver;\n+import com.google.gson.wsf.server.procedural.WebServiceCallServerBuilder;\n+import com.google.inject.Inject;\n+import com.google.inject.Provider;\n+\n+/**\n+ * Guice provider for {@link WebServiceCall} to be used by a server-side implementation.\n+ *\n+ * @author inder\n+ */\n+public final class WebServiceCallServerProvider implements Provider<WebServiceCallServerBuilder> {\n+  private final Gson gson;\n+  private final WebServiceCallSpec callSpec;\n+  private final HttpServletRequest request;\n+\n+  @Inject\n+  public WebServiceCallServerProvider(Gson gson, HttpServletRequest request, \n+      WebServiceCallSpec callSpec) {\n+    this.callSpec = callSpec;\n+    this.gson = gson;\n+    this.request = request;\n+  }\n+\n+  @Override\n+  public WebServiceCallServerBuilder get() {\n+    RequestReceiver receiver = new RequestReceiver(gson, callSpec.getRequestSpec());\n+    WebServiceRequest wsRequest = receiver.receive(request);           \n+    \n+    WebServiceResponse.Builder responseBuilder = \n+      new WebServiceResponse.Builder(callSpec.getResponseSpec());\n+    return new WebServiceCallServerBuilder(callSpec, wsRequest, responseBuilder);\n+  }\n+}\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/inject/server/procedural/WebServiceCallSpecProvider.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.inject.server.procedural;\n+\n+import com.google.gson.webservice.definition.CallPath;\n+import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceSpec;\n+import com.google.inject.Inject;\n+import com.google.inject.Provider;\n+\n+/**\n+ * Guice provider for {@link WebServiceCallSpec}.\n+ *\n+ * @author inder\n+ */\n+public final class WebServiceCallSpecProvider implements Provider<WebServiceCallSpec> {\n+  private final CallPath callPath;\n+  private final WebServiceSpec webServiceSpec;\n+  \n+  @Inject\n+  WebServiceCallSpecProvider(CallPath callPath, WebServiceSpec webServiceSpec) {\n+    this.callPath = callPath;\n+    this.webServiceSpec = webServiceSpec;\n+  }\n+\n+  @Override\n+  public WebServiceCallSpec get() {\n+    return webServiceSpec.getCalls().get(callPath);\n+  }    \n+}\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/server/procedural/RequestReceiver.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.server.procedural;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.lang.reflect.Type;\n+import java.util.Map;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.webservice.definition.HeaderMap;\n+import com.google.gson.webservice.definition.HeaderMapSpec;\n+import com.google.gson.webservice.definition.HttpMethod;\n+import com.google.gson.webservice.definition.WebServiceSystemException;\n+import com.google.gson.webservice.definition.procedural.RequestBody;\n+import com.google.gson.webservice.definition.procedural.RequestBodySpec;\n+import com.google.gson.webservice.definition.procedural.RequestSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n+\n+/**\n+ * Receives and parses a request at the server side on a {@link HttpServletRequest}.  \n+ * \n+ * @author inder\n+ */\n+public final class RequestReceiver {\n+\n+  private final Gson gson;\n+  private final RequestSpec spec;\n+\n+  public RequestReceiver(Gson gson, RequestSpec spec) {\n+    this.gson = gson;\n+    this.spec = spec;\n+  }\n+  \n+  public WebServiceRequest receive(HttpServletRequest request) {\n+    try {\n+      HeaderMap requestParams = buildRequestParams(request);\n+      RequestBody requestBody = buildRequestBody(request);\n+      \n+      HttpMethod method = HttpMethod.getMethod(request.getMethod());\n+      return new WebServiceRequest(method, requestParams, requestBody);\n+    } catch (IOException e) {\n+      throw new WebServiceSystemException(e);\n+    } catch (JsonParseException e) {\n+      // Not a Web service request\n+      throw new WebServiceSystemException(e);\n+    }\n+  }\n+  \n+  private HeaderMap buildRequestParams(HttpServletRequest request) {\n+    HeaderMapSpec paramsSpec = this.spec.getHeadersSpec();\n+    HeaderMap.Builder paramsBuilder = new HeaderMap.Builder(paramsSpec);\n+    for (Map.Entry<String, Type> param : paramsSpec.entrySet()) {\n+      String name = param.getKey();\n+      Type type = param.getValue();\n+      String header = request.getHeader(name);\n+      if (header == null || header.equals(\"\")) {\n+        // check parameter map for the value\n+        header = request.getParameter(name);\n+      }\n+      if (header != null && !header.equals(\"\")) { \n+        Object value = gson.fromJson(header, type);\n+        paramsBuilder.put(name, value);\n+      }\n+    }\n+    return paramsBuilder.build();\n+  }\n+  \n+  private RequestBody buildRequestBody(HttpServletRequest request) throws IOException {\n+    RequestBodySpec bodySpec = spec.getBodySpec();\n+    if (bodySpec.size() == 0) {\n+      return createEmptyRequestBody(bodySpec);\n+    }\n+    Reader reader = new BufferedReader(new InputStreamReader(request.getInputStream()));\n+    RequestBody requestBody = gson.fromJson(reader, RequestBody.class);\n+    return requestBody;\n+  }\n+\n+  private RequestBody createEmptyRequestBody(RequestBodySpec bodySpec) {\n+    return new RequestBody.Builder(bodySpec).build();\n+  }\n+}\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/server/procedural/ResponseBuilder.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.server.procedural;\n+\n+import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n+import com.google.gson.webservice.definition.procedural.WebServiceResponse;\n+\n+/**\n+ * An interface describing a class that can build a response\n+ *\n+ * @author inder\n+ */\n+public interface ResponseBuilder {\n+  public void buildResponse(WebServiceCallSpec callSpec, WebServiceRequest request,\n+      WebServiceResponse.Builder responseBuilder); \n+}\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/server/procedural/ResponseSender.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.server.procedural;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.util.Map;\n+import java.util.logging.Logger;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.webservice.definition.HeaderMap;\n+import com.google.gson.webservice.definition.HeaderMapSpec;\n+import com.google.gson.webservice.definition.procedural.ResponseBody;\n+import com.google.gson.webservice.definition.procedural.WebServiceResponse;\n+\n+/**\n+ * Sends a JSON web service response on {@link HttpServletResponse}.\n+ * \n+ * @author inder\n+ */\n+public final class ResponseSender {\n+  private static final Logger logger = Logger.getLogger(ResponseSender.class.getCanonicalName());\n+\n+  private Gson gson;\n+\n+  public ResponseSender(Gson gson) {\n+    this.gson = gson;\n+  }\n+  \n+  public void send(HttpServletResponse conn, WebServiceResponse response) {\n+    try {\n+      sendHeaders(conn, response.getHeaders());\n+      sendBody(conn, response.getBody());\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+ \n+  private void sendHeaders(HttpServletResponse conn, HeaderMap responseParams) {\n+    HeaderMapSpec spec = responseParams.getSpec();\n+    for (Map.Entry<String, Object> param : responseParams.entrySet()) {\n+      String paramName = param.getKey();\n+      Object paramValue = param.getValue();\n+      Type paramType = spec.getTypeFor(paramName);\n+      String json = gson.toJson(paramValue, paramType);\n+      logger.fine(\"RESPONSE HEADER:{\" + paramName + \", \" + json + \"}\");\n+      conn.addHeader(paramName, json);\n+    }\n+  }\n+\n+  private void sendBody(HttpServletResponse conn, ResponseBody responseBody) throws IOException {\n+    conn.setContentType(responseBody.getContentType());\n+    conn.setCharacterEncoding(responseBody.getCharacterEncoding());\n+    String json = gson.toJson(responseBody);\n+    logger.fine(\"RESPONSE BODY:\" + json);\n+    conn.getWriter().append(json);\n+  }\n+}\n--- /dev/null\n+++ b/wsf/src/main/java/com/google/gson/wsf/server/procedural/WebServiceCallServerBuilder.java\n+/*\n+ * Copyright (C) 2009 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.wsf.server.procedural;\n+\n+import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n+import com.google.gson.webservice.definition.procedural.WebServiceResponse.Builder;\n+\n+public class WebServiceCallServerBuilder {\n+\n+  public WebServiceCallServerBuilder(\n+      @SuppressWarnings(\"unused\") WebServiceCallSpec callSpec,\n+      @SuppressWarnings(\"unused\") WebServiceRequest wsRequest,\n+      @SuppressWarnings(\"unused\") Builder responseBuilder) {\n+  }\n+}", "timestamp": 1288720131, "metainfo": ""}