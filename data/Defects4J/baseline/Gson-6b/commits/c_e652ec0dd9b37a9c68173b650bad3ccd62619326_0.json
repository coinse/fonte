{"sha": "e652ec0dd9b37a9c68173b650bad3ccd62619326", "log": "revised a test to validate that we can query a delegate adapter from typeadapterfactorie registered in JsonAdapter", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java\n     }\n     static final class JsonAdapterFactory implements TypeAdapterFactory {\n       public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {\n+\n+        // Ensure that gson.getDelegateAdapter continues to work for type adapter factories\n+        // registered through JsonAdapter annotation. Query for a random type adapter.\n+        gson.getDelegateAdapter(this, TypeToken.get(JsonAdapterAnnotationOnFieldsTest.class));\n+\n         return new TypeAdapter<T>() {\n           @Override public void write(JsonWriter out, T value) throws IOException {\n             out.value(\"jsonAdapterFactory\");", "timestamp": 1415671376, "metainfo": ""}