{"sha": "dc60cb193123b2564bac0c2de9a998e4649fea30", "log": "Made FieldNamingStrategy2 is package protected class. Made type hierarchy adapter registration package protected. Marked some of the classes final. Minor changes in the performance tests.", "commit": "\n--- a/gson/src/main/java/com/google/gson/FieldNamingStrategy.java\n+++ b/gson/src/main/java/com/google/gson/FieldNamingStrategy.java\n  * @author Inderjeet Singh\n  * @author Joel Leitch\n  * @since 1.3\n- * @deprecated use {@link FieldNamingStrategy2} instead\n  */\n-@Deprecated\n public interface FieldNamingStrategy {\n \n   /**\n--- a/gson/src/main/java/com/google/gson/FieldNamingStrategy2.java\n+++ b/gson/src/main/java/com/google/gson/FieldNamingStrategy2.java\n  *\n  * @author Inderjeet Singh\n  * @author Joel Leitch\n- * @since 1.4\n+ * @since 1.5\n  */\n-public interface FieldNamingStrategy2 {\n+interface FieldNamingStrategy2 {\n \n   /**\n    * Translates the field name into its JSON field name representation.\n--- a/gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java\n+++ b/gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java\n  * @author Inderjeet Singh\n  * @author Joel Leitch\n  */\n-class FieldNamingStrategy2Adapter implements FieldNamingStrategy2 {\n+final class FieldNamingStrategy2Adapter implements FieldNamingStrategy2 {\n   private final FieldNamingStrategy adaptee;\n \n   public FieldNamingStrategy2Adapter(FieldNamingStrategy adaptee) {\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n    * @param fieldNamingStrategy the actual naming strategy to apply to the fields\n    * @return a reference to this {@code GsonBuilder} object to fulfill the \"Builder\" pattern\n    * @since 1.3\n-   * @deprecated use {@link #setFieldNamingStrategy(FieldNamingStrategy2)} instead.\n-   */\n-  @Deprecated\n+   */\n   public GsonBuilder setFieldNamingStrategy(FieldNamingStrategy fieldNamingStrategy) {\n     return setFieldNamingStrategy(new FieldNamingStrategy2Adapter(fieldNamingStrategy));\n   }\n    *\n    * @param fieldNamingStrategy the actual naming strategy to apply to the fields\n    * @return a reference to this {@code GsonBuilder} object to fulfill the \"Builder\" pattern\n-   * @since 1.4\n-   */\n-  public GsonBuilder setFieldNamingStrategy(FieldNamingStrategy2 fieldNamingStrategy) {\n+   * @since 1.5\n+   */\n+  GsonBuilder setFieldNamingStrategy(FieldNamingStrategy2 fieldNamingStrategy) {\n     this.fieldNamingPolicy =\n         new SerializedNameAnnotationInterceptingNamingPolicy(fieldNamingStrategy);\n     return this;\n    * @return a reference to this {@code GsonBuilder} object to fulfill the \"Builder\" pattern\n    * @since 1.5\n    */\n-  public GsonBuilder registerTypeHierarchyAdapter(Class<?> baseType, Object typeAdapter) {\n+  GsonBuilder registerTypeHierarchyAdapter(Class<?> baseType, Object typeAdapter) {\n     Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>\n     || typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);\n     if (typeAdapter instanceof InstanceCreator<?>) {\n--- a/gson/src/main/java/com/google/gson/JavaFieldNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/JavaFieldNamingPolicy.java\n  *\n  * @author Joel Leitch\n  */\n-class JavaFieldNamingPolicy extends RecursiveFieldNamingPolicy {\n+final class JavaFieldNamingPolicy extends RecursiveFieldNamingPolicy {\n \n   @Override\n   protected String translateName(String target, Type fieldType, Collection<Annotation> annotations) {\n--- a/gson/src/main/java/com/google/gson/JsonParserJavaccTokenManager.java\n+++ b/gson/src/main/java/com/google/gson/JsonParserJavaccTokenManager.java\n package com.google.gson;\n \n /** Token Manager. */\n-class JsonParserJavaccTokenManager implements JsonParserJavaccConstants\n+@SuppressWarnings(\"all\")\n+final class JsonParserJavaccTokenManager implements JsonParserJavaccConstants\n {\n \n   /** Debug output. */\n--- a/gson/src/main/java/com/google/gson/LowerCamelCaseSeparatorNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/LowerCamelCaseSeparatorNamingPolicy.java\n  *\n  * @author Joel Leitch\n  */\n-class LowerCamelCaseSeparatorNamingPolicy extends CompositionFieldNamingPolicy {\n+final class LowerCamelCaseSeparatorNamingPolicy extends CompositionFieldNamingPolicy {\n \n   public LowerCamelCaseSeparatorNamingPolicy(String separatorString) {\n     super(new CamelCaseSeparatorNamingPolicy(separatorString), new LowerCaseNamingPolicy());\n--- a/gson/src/main/java/com/google/gson/LowerCaseNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/LowerCaseNamingPolicy.java\n  * @author Inderjeet Singh\n  * @author Joel Leitch\n  */\n-class LowerCaseNamingPolicy extends RecursiveFieldNamingPolicy {\n+final class LowerCaseNamingPolicy extends RecursiveFieldNamingPolicy {\n \n   @Override\n   protected String translateName(String target, Type fieldType,\n--- a/gson/src/main/java/com/google/gson/LruCache.java\n+++ b/gson/src/main/java/com/google/gson/LruCache.java\n  * @author Inderjeet Singh\n  * @author Joel Leitch\n  */\n-class LruCache<K, V> extends LinkedHashMap<K, V> implements Cache<K, V> {\n+final class LruCache<K, V> extends LinkedHashMap<K, V> implements Cache<K, V> {\n   private static final long serialVersionUID = 1L;\n \n   private final int maxCapacity;\n--- a/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java\n  *\n  * @author Joel Leitch\n  */\n-class ModifyFirstLetterNamingPolicy extends RecursiveFieldNamingPolicy {\n+final class ModifyFirstLetterNamingPolicy extends RecursiveFieldNamingPolicy {\n \n   public enum LetterModifier {\n     UPPER,\n--- a/gson/src/main/java/com/google/gson/UpperCamelCaseSeparatorNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/UpperCamelCaseSeparatorNamingPolicy.java\n  *\n  * @author Joel Leitch\n  */\n-class UpperCamelCaseSeparatorNamingPolicy extends CompositionFieldNamingPolicy {\n+final class UpperCamelCaseSeparatorNamingPolicy extends CompositionFieldNamingPolicy {\n \n   public UpperCamelCaseSeparatorNamingPolicy(String separatorString) {\n     super(new CamelCaseSeparatorNamingPolicy(separatorString),\n--- a/gson/src/main/java/com/google/gson/UpperCaseNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/UpperCaseNamingPolicy.java\n  *\n  * @author Joel Leitch\n  */\n-class UpperCaseNamingPolicy extends RecursiveFieldNamingPolicy {\n+final class UpperCaseNamingPolicy extends RecursiveFieldNamingPolicy {\n \n   @Override\n   protected String translateName(String target, Type fieldType, Collection<Annotation> annotations) {\n--- a/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java\n+++ b/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java\n \n package com.google.gson.metrics;\n \n+import com.google.gson.Gson;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.annotations.Expose;\n+import com.google.gson.reflect.TypeToken;\n+\n+import junit.framework.TestCase;\n+\n import java.io.StringWriter;\n import java.lang.reflect.Type;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n-import junit.framework.TestCase;\n-\n-import com.google.gson.Gson;\n-import com.google.gson.JsonParseException;\n-import com.google.gson.annotations.Expose;\n-import com.google.gson.reflect.TypeToken;\n \n /**\n  * Tests to measure performance for Gson. All tests in this file will be disabled in code. To run\n    * Created in response to http://code.google.com/p/google-gson/issues/detail?id=96\n    */\n   // Last I tested, Gson was able to serialize upto 14MB byte array\n-  public void disable_testByteArraySerialization() {\n+  public void disabled_testByteArraySerialization() {\n     for (int size = 4145152; true; size += 1036288) {\n       byte[] ba = new byte[size];\n       for (int i = 0; i < size; ++i) {\n // Serialize exposed classes avg time: 159 ms\n // Deserialized exposed classes avg time: 173 ms\n   \n-  public void disable_testSerializeClasses() {\n+  public void disabled_testSerializeClasses() {\n     ClassWithList c = new ClassWithList(\"str\"); \n-    for (int i = 0; i < 5000; ++i) { \n+    for (int i = 0; i < COLLECTION_SIZE; ++i) { \n       c.list.add(new ClassWithField(\"element-\" + i)); \n     }\n     StringWriter w = new StringWriter(); \n     System.out.printf(\"Serialize classes avg time: %d ms\\n\", avg);     \n   }\n \n-  public void disable_testDeserializeClasses() {\n+  public void disabled_testDeserializeClasses() {\n     String json = buildJsonForClassWithList();\n     ClassWithList[] target = new ClassWithList[NUM_ITERATIONS];\n     long t1 = System.currentTimeMillis(); \n     \n   }\n \n-  public void disable_testSerializeExposedClasses() {\n+  public void disabled_testSerializeExposedClasses() {\n     ClassWithListOfObjects c1 = new ClassWithListOfObjects(\"str\"); \n     for (int i1 = 0; i1 < COLLECTION_SIZE; ++i1) { \n       c1.list.add(new ClassWithExposedField(\"element-\" + i1)); \n     System.out.printf(\"Serialize exposed classes avg time: %d ms\\n\", avg);     \n   }\n \n-  public void disable_testDeserializeExposedClasses() {\n+  public void disabled_testDeserializeExposedClasses() {\n     String json = buildJsonForClassWithList();\n     ClassWithListOfObjects[] target = new ClassWithListOfObjects[NUM_ITERATIONS];\n     long t1 = System.currentTimeMillis(); \n     long t2 = System.currentTimeMillis(); \n     long avg = (t2 - t1) / NUM_ITERATIONS;\n     System.out.printf(\"Deserialize exposed classes avg time: %d ms\\n\", avg);     \n+  }\n+\n+  public void disabled_testLargeGsonMapRoundTrip() throws Exception {\n+    Map<Long, Long> original = new HashMap<Long, Long>();\n+    for (long i = 0; i < 1000000; i++) {\n+      original.put(i, i + 1);\n+    }\n+\n+    Gson gson = new Gson();\n+    String json = gson.toJson(original);\n+    Type longToLong = new TypeToken<Map<Long, Long>>(){}.getType();\n+    gson.fromJson(json, longToLong);\n   }\n \n   private String buildJsonForClassWithList() {", "timestamp": 1282176642, "metainfo": ""}