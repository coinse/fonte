{"sha": "f7121ad87d2916c72a854f746b37d62aead1ff0b", "log": "Restored this behavior: If a type adapter is registered for a base class, then a field of that type is serialized with the type adapter instead of using the run-time type. This fixes: CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java\n   @SuppressWarnings(\"unchecked\")\n   @Override\n   public void write(JsonWriter writer, T value) throws IOException {\n-    Type runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(type, value);\n-    TypeAdapter t = runtimeType != type ?\n-        context.getAdapter(TypeToken.get(runtimeType)) : delegate;\n+    TypeAdapter t = delegate;\n+    if (delegate instanceof ReflectiveTypeAdapter) {\n+      Type runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(type, value);\n+      if (runtimeType != type) {\n+        t = context.getAdapter(TypeToken.get(runtimeType));\n+      }\n+    }\n     t.write(writer, value);\n   }\n }", "timestamp": 1313114362, "metainfo": ""}