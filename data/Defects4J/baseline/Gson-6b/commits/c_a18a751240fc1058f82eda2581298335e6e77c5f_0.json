{"sha": "a18a751240fc1058f82eda2581298335e6e77c5f", "log": "Share the same JsonNull instance with the Gson code.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n \n     public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n       if (src == null) {\n-        return new JsonNull();\n+        return JsonNull.createJsonNull();\n       }\n       JsonArray array = new JsonArray();\n       Type childGenericType = null;\n \n         JsonElement valueElement;\n         if (value == null) {\n-          valueElement = new JsonNull();\n+          valueElement = JsonNull.createJsonNull();\n         } else {\n           Type childType = (childGenericType == null) ? \n               childType = value.getClass() : childGenericType;\n--- a/gson/src/main/java/com/google/gson/JsonNull.java\n+++ b/gson/src/main/java/com/google/gson/JsonNull.java\n  * @since 1.2\n  */\n public final class JsonNull extends JsonElement {\n+  private static final JsonNull INSTANCE = new JsonNull();\n \n   /**\n    * Creates a new JsonNull object.\n   public boolean equals(Object other) {\n     return other instanceof JsonNull;\n   }\n+  \n+  /**\n+   * Creation method used to return an instance of a {@link JsonNull}.  To reduce the memory\n+   * footprint, a single object has been created for this class; therefore the same instance is\n+   * being returned for each invocation of this method.\n+   *\n+   * @return a instance of a {@link JsonNull}\n+   */\n+  static JsonNull createJsonNull() {\n+    return INSTANCE;\n+  }\n }\n--- a/gson/src/main/java/com/google/gson/JsonObject.java\n+++ b/gson/src/main/java/com/google/gson/JsonObject.java\n    */\n   private JsonElement createJsonElement(Object value) {\n     if (value == null) {\n-      return new JsonNull();\n+      return JsonNull.createJsonNull();\n     } else {\n       return new JsonPrimitive(value);\n     }\n   public JsonElement get(String memberName) {\n     if (members.containsKey(memberName)) {\n       JsonElement member = members.get(memberName);\n-      return member == null ? new JsonNull() : member;\n+      return member == null ? JsonNull.createJsonNull() : member;\n     } else {\n       return null;\n     }\n--- a/gson/src/main/java/com/google/gson/JsonParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonParser.java\n   Token t;\n     t = jj_consume_token(NULL);\n                {if (true)\n-                return new JsonNull();}\n+                return JsonNull.createJsonNull();}\n     throw new Error(\"Missing return statement in function\");\n   }\n \n--- a/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n   public void visitArrayField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.createJsonNull());\n       }\n     } else {\n       Object array = getFieldValue(f, obj);\n   public void visitObjectField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.createJsonNull());\n       }\n     } else {\n       Object fieldValue = getFieldValue(f, obj);\n     JsonSerializer serializer = serializers.getHandlerFor(objType);\n     if (serializer != null) {\n       if (obj == null) {\n-        assignToRoot(new JsonNull());\n+        assignToRoot(JsonNull.createJsonNull());\n       } else {\n         assignToRoot(serializer.serialize(obj, objType, context));\n       }\n       Object obj = f.get(parent);\n       if (obj == null) {\n         if (serializeNulls) {\n-          addChildAsElement(f, new JsonNull());\n+          addChildAsElement(f, JsonNull.createJsonNull());\n         }\n         return true;\n       }", "timestamp": 1229631269, "metainfo": ""}