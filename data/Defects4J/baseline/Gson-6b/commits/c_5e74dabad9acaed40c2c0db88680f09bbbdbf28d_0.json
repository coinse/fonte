{"sha": "5e74dabad9acaed40c2c0db88680f09bbbdbf28d", "log": "Re-use Preconditions instead of re-writing them here.", "commit": "\n--- a/gson/src/main/java/com/google/gson/reflect/TypeToken.java\n+++ b/gson/src/main/java/com/google/gson/reflect/TypeToken.java\n \n package com.google.gson.reflect;\n \n+import com.google.gson.internal.Preconditions;\n import com.google.gson.internal.Types;\n \n import java.lang.reflect.GenericArrayType;\n    */\n   @SuppressWarnings(\"unchecked\")\n   TypeToken(Type type) {\n-    checkNotNull(type);\n-    this.type = Types.canonicalize(type);\n+    this.type = Types.canonicalize(Preconditions.checkNotNull(type));\n     this.rawType = (Class<? super T>) Types.getRawType(this.type);\n     this.hashCode = this.type.hashCode();\n   }\n   public static <T> TypeToken<T> get(Class<T> type) {\n     return new TypeToken<T>(type);\n   }\n-\n-  static void checkNotNull(Object obj) {\n-    checkArgument(obj != null);\n-  }\n-\n-  static void checkArgument(boolean condition) {\n-    if (!condition) {\n-      throw new IllegalArgumentException(\"condition failed: \" + condition);\n-    }\n-  }\n }", "timestamp": 1301433507, "metainfo": ""}