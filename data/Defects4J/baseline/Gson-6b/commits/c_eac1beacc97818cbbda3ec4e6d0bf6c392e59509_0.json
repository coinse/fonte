{"sha": "eac1beacc97818cbbda3ec4e6d0bf6c392e59509", "log": "Added performance tests for byte array serialization and deserialization.", "commit": "\n--- a/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java\n+++ b/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java\n   public void testDummy() {    \n     // This is here to prevent Junit for complaining when we disable all tests.\n   }\n+\n+  // Last I tested, Gson was able to serialize upto 8MB byte array\n+  public void disable_testByteArraySerialization() {\n+    int size = 8096;\n+    while (true) {\n+      byte[] ba = new byte[size];\n+      for (int i = 0; i < size; ++i) {\n+        ba[i] = 0x32;\n+      }\n+      String json = gson.toJson(ba);\n+      System.out.printf(\"Gson could serialize a byte array of size: %d\\n\", size);\n+      size <<= 2;\n+    }\n+  }\n+  \n+  // Last I tested, Gson was able to deserialize a byte array of 32KB\n+  public void disable_testByteArrayDeserialization() {\n+    int numElements = 8096;\n+    while (true) {\n+      StringBuilder sb = new StringBuilder(numElements*2);\n+      sb.append(\"[\");\n+      boolean first = true;\n+      for (int i = 0; i < numElements; ++i) {\n+        if (first) {\n+          first = false;\n+        } else {\n+          sb.append(\",\");\n+        }\n+        sb.append(\"5\");\n+      }\n+      sb.append(\"]\");\n+      String json = sb.toString();\n+      byte[] ba = gson.fromJson(json, byte[].class);\n+      System.out.printf(\"Gson could handle a byte array of size: %d\\n\", ba.length);\n+      numElements <<= 2;\n+    }\n+  }\n+  \n \n   public void disabled_testStringDeserializationPerformance() {    \n     StringBuilder sb = new StringBuilder(8096);", "timestamp": 1247524075, "metainfo": ""}