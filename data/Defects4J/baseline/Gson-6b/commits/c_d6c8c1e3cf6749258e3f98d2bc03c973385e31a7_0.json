{"sha": "d6c8c1e3cf6749258e3f98d2bc03c973385e31a7", "log": "Fix bugs in getPath() with arrays of objects and arrays of arrays", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n     }\n     if (p == PEEKED_END_ARRAY) {\n       stackSize--;\n+      pathIndices[stackSize - 1]++;\n       peeked = PEEKED_NONE;\n     } else {\n       throw new IllegalStateException(\"Expected END_ARRAY but was \" + peek()\n     if (p == PEEKED_END_OBJECT) {\n       stackSize--;\n       pathNames[stackSize] = null; // Free the last path name so that it can be garbage collected!\n+      pathIndices[stackSize - 1]++;\n       peeked = PEEKED_NONE;\n     } else {\n       throw new IllegalStateException(\"Expected END_OBJECT but was \" + peek()\n--- a/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java\n     reader.nextString();\n     assertEquals(\"$.a[5].c\", reader.getPath());\n     reader.endObject();\n-    assertEquals(\"$.a[5]\", reader.getPath());\n-    reader.beginArray();\n-    assertEquals(\"$.a[5][0]\", reader.getPath());\n-    reader.nextInt();\n-    assertEquals(\"$.a[5][1]\", reader.getPath());\n-    reader.endArray();\n-    assertEquals(\"$.a[5]\", reader.getPath());\n+    assertEquals(\"$.a[6]\", reader.getPath());\n+    reader.beginArray();\n+    assertEquals(\"$.a[6][0]\", reader.getPath());\n+    reader.nextInt();\n+    assertEquals(\"$.a[6][1]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$.a[7]\", reader.getPath());\n     reader.endArray();\n     assertEquals(\"$.a\", reader.getPath());\n     reader.endObject();\n     reader.skipValue();\n     assertEquals(\"$[1]\", reader.getPath());\n   }\n+\n+  public void testArrayOfObjects() throws IOException {\n+    JsonReader reader = new JsonReader(new StringReader(\"[{},{},{}]\"));\n+    reader.beginArray();\n+    assertEquals(\"$[0]\", reader.getPath());\n+    reader.beginObject();\n+    assertEquals(\"$[0].\", reader.getPath());\n+    reader.endObject();\n+    assertEquals(\"$[1]\", reader.getPath());\n+    reader.beginObject();\n+    assertEquals(\"$[1].\", reader.getPath());\n+    reader.endObject();\n+    assertEquals(\"$[2]\", reader.getPath());\n+    reader.beginObject();\n+    assertEquals(\"$[2].\", reader.getPath());\n+    reader.endObject();\n+    assertEquals(\"$[3]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$\", reader.getPath());\n+  }\n+\n+  public void testArrayOfArrays() throws IOException {\n+    JsonReader reader = new JsonReader(new StringReader(\"[[],[],[]]\"));\n+    reader.beginArray();\n+    assertEquals(\"$[0]\", reader.getPath());\n+    reader.beginArray();\n+    assertEquals(\"$[0][0]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$[1]\", reader.getPath());\n+    reader.beginArray();\n+    assertEquals(\"$[1][0]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$[2]\", reader.getPath());\n+    reader.beginArray();\n+    assertEquals(\"$[2][0]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$[3]\", reader.getPath());\n+    reader.endArray();\n+    assertEquals(\"$\", reader.getPath());\n+  }\n }", "timestamp": 1415671188, "metainfo": ""}