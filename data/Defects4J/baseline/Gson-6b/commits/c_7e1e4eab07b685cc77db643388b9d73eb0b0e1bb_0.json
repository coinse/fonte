{"sha": "7e1e4eab07b685cc77db643388b9d73eb0b0e1bb", "log": "Remove the constraint that map keys mustn't be the empty string.  See bug 227.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonObject.java\n+++ b/gson/src/main/java/com/google/gson/JsonObject.java\n    * @param value the member object.\n    */\n   public void add(String property, JsonElement value) {\n-    Preconditions.checkArgument(property != null && !\"\".equals(property.trim()));\n+    Preconditions.checkArgument(property != null);\n     if (value == null) {\n       value = JsonNull.createJsonNull();\n     }\n--- a/gson/src/test/java/com/google/gson/JsonObjectTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonObjectTest.java\n     String json = new Gson().toJson(jsonObj);\n     assertEquals(\"{\\\"a\\\\\\\"b\\\":\\\"c\\\\\\\"d\\\"}\", json);\n   }\n+\n+  /**\n+   * From issue 227.\n+   */\n+  public void testWritePropertyWithEmptyStringName() {\n+    JsonObject jsonObj = new JsonObject();\n+    jsonObj.add(\"\", new JsonPrimitive(true));\n+    assertEquals(\"{\\\"\\\":true}\", new Gson().toJson(jsonObj));\n+\n+  }\n+\n+  public void testReadPropertyWithEmptyStringName() {\n+    JsonObject jsonObj = new JsonParser().parse(\"{\\\"\\\":true}\").getAsJsonObject();\n+    assertEquals(true, jsonObj.get(\"\").getAsBoolean());\n+\n+  }\n }\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n     String json = gson.toJson(map);\n     assertEquals(\"{\\\"a\\\\\\\"b\\\":\\\"c\\\\\\\"d\\\"}\", json);\n   }\n+  \n+  /**\n+   * From issue 227.\n+   */\n+  public void testWriteMapsWithEmptyStringKey() {\n+    Map<String, Boolean> map = new HashMap<String, Boolean>();\n+    map.put(\"\", true);\n+    assertEquals(\"{\\\"\\\":true}\", gson.toJson(map));\n+\n+  }\n+\n+  public void testReadMapsWithEmptyStringKey() {\n+    Map<String, Boolean> map = gson.fromJson(\"{\\\"\\\":true}\", new TypeToken<Map<String, Boolean>>() {}.getType());\n+    assertEquals(Boolean.TRUE, map.get(\"\"));\n+  }\n }", "timestamp": 1282971753, "metainfo": ""}