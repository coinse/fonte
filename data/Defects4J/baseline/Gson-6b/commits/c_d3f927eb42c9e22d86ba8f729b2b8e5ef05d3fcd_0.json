{"sha": "d3f927eb42c9e22d86ba8f729b2b8e5ef05d3fcd", "log": "Pure refactorings: Replaced DEFAULT_SERIALIZERS, DEFAULT_DESERIALIZERS and DEFAULT_INSTANCE_CREATORS with a single EMPTY_MAP. Removed obsoleted TODO from Gson. made ParameterizedTypeHandlerMap.makeUnmodifiable a builder method that returns this instance.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n import java.util.Locale;\n import java.util.TimeZone;\n \n-import com.google.gson.internal.ParameterizedTypeHandlerMap;\n-\n /**\n  * List of all the default type adapters ({@link JsonSerializer}s, {@link JsonDeserializer}s,\n  * and {@link InstanceCreator}s.\n  * @author Joel Leitch\n  */\n final class DefaultTypeAdapters {\n-\n-  // The constants DEFAULT_SERIALIZERS, DEFAULT_DESERIALIZERS, and DEFAULT_INSTANCE_CREATORS\n-  // must be defined after the constants for the type adapters. Otherwise, the type adapter\n-  // constants will appear as nulls.\n-  static final ParameterizedTypeHandlerMap<JsonSerializer<?>> DEFAULT_SERIALIZERS =\n-      createDefaultSerializers();\n-  static final ParameterizedTypeHandlerMap<JsonDeserializer<?>> DEFAULT_DESERIALIZERS =\n-      createDefaultDeserializers();\n-  static final ParameterizedTypeHandlerMap<InstanceCreator<?>> DEFAULT_INSTANCE_CREATORS =\n-      createDefaultInstanceCreators();\n-\n-  private static ParameterizedTypeHandlerMap<JsonSerializer<?>> createDefaultSerializers() {\n-    ParameterizedTypeHandlerMap<JsonSerializer<?>> map =\n-        new ParameterizedTypeHandlerMap<JsonSerializer<?>>();\n-    map.makeUnmodifiable();\n-    return map;\n-  }\n-\n-  private static ParameterizedTypeHandlerMap<JsonDeserializer<?>> createDefaultDeserializers() {\n-    ParameterizedTypeHandlerMap<JsonDeserializer<?>> map =\n-        new ParameterizedTypeHandlerMap<JsonDeserializer<?>>();\n-    map.makeUnmodifiable();\n-    return map;\n-  }\n-\n-  private static ParameterizedTypeHandlerMap<InstanceCreator<?>> createDefaultInstanceCreators() {\n-    ParameterizedTypeHandlerMap<InstanceCreator<?>> map\n-        = new ParameterizedTypeHandlerMap<InstanceCreator<?>>();\n-    map.makeUnmodifiable();\n-    return map;\n-  }\n-\n   /**\n    * This type adapter supports three subclasses of date: Date, Timestamp, and\n    * java.sql.Date.\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n  * @author Joel Leitch\n  */\n public final class Gson {\n-\n-  //TODO(inder): get rid of all the registerXXX methods and take all such parameters in the\n-  // constructor instead. At the minimum, mark those methods private.\n+  @SuppressWarnings(\"unchecked\")\n+  static final ParameterizedTypeHandlerMap EMPTY_MAP = \n+    new ParameterizedTypeHandlerMap().makeUnmodifiable();\n \n    static final boolean DEFAULT_JSON_NON_EXECUTABLE = false;\n \n    *   {@link GsonBuilder#excludeFieldsWithModifiers(int...)}.</li>\n    * </ul>\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public Gson() {\n     this(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,\n-        DefaultTypeAdapters.DEFAULT_INSTANCE_CREATORS,\n-        false, DefaultTypeAdapters.DEFAULT_SERIALIZERS,\n-        DefaultTypeAdapters.DEFAULT_DESERIALIZERS, false, DEFAULT_JSON_NON_EXECUTABLE, true,\n+        EMPTY_MAP, false, EMPTY_MAP, EMPTY_MAP, false, DEFAULT_JSON_NON_EXECUTABLE, true,\n         false, false, LongSerializationPolicy.DEFAULT,\n         Collections.<TypeAdapter.Factory>emptyList());\n   }\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n       deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n       serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n     }\n-\n-    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n-    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n-    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n-        customDeserializers);\n-\n-    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n-        instanceCreators.copyOf();\n-\n-    customSerializers.makeUnmodifiable();\n-    customDeserializers.makeUnmodifiable();\n-    customInstanceCreators.makeUnmodifiable();\n+    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, serializers, deserializers);\n \n     return new Gson(new DisjunctionExclusionStrategy(deserializationStrategies),\n         new DisjunctionExclusionStrategy(serializationStrategies),\n-        fieldNamingPolicy, customInstanceCreators, serializeNulls,\n-        customSerializers, customDeserializers, complexMapKeySerialization,\n-        generateNonExecutableJson, escapeHtmlChars, prettyPrinting,\n+        fieldNamingPolicy, instanceCreators.copyOf().makeUnmodifiable(), serializeNulls,\n+        serializers.copyOf().makeUnmodifiable(), deserializers.copyOf().makeUnmodifiable(),\n+        complexMapKeySerialization, generateNonExecutableJson, escapeHtmlChars, prettyPrinting,\n         serializeSpecialFloatingPointValues, longSerializationPolicy, typeAdapterFactories);\n   }\n \n--- a/gson/src/main/java/com/google/gson/internal/ParameterizedTypeHandlerMap.java\n+++ b/gson/src/main/java/com/google/gson/internal/ParameterizedTypeHandlerMap.java\n  * @param <T> The handler that will be looked up by type\n  */\n public final class ParameterizedTypeHandlerMap<T> {\n+\n   private static final Logger logger =\n       Logger.getLogger(ParameterizedTypeHandlerMap.class.getName());\n   /**\n     }\n   }\n \n-  public synchronized void makeUnmodifiable() {\n+  public synchronized ParameterizedTypeHandlerMap<T> makeUnmodifiable() {\n     modifiable = false;\n+    return this;\n   }\n \n   public synchronized T getHandlerFor(Type type, boolean systemOnly) {\n--- a/gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java\n+++ b/gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java\n  */\n public class FunctionWithInternalDependenciesTest extends TestCase {\n \n+  @SuppressWarnings(\"unchecked\")\n   public void testAnonymousLocalClassesSerialization() throws Exception {\n     LinkedList<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();\n     strategies.add(new SyntheticFieldExclusionStrategy(true));\n     strategies.add(new ModifierBasedExclusionStrategy(Modifier.TRANSIENT, Modifier.STATIC));\n     ExclusionStrategy exclusionStrategy = new DisjunctionExclusionStrategy(strategies);\n     Gson gson = new Gson(exclusionStrategy, exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,\n-        DefaultTypeAdapters.DEFAULT_INSTANCE_CREATORS,\n-        false, DefaultTypeAdapters.DEFAULT_SERIALIZERS,\n-        DefaultTypeAdapters.DEFAULT_DESERIALIZERS, false, Gson.DEFAULT_JSON_NON_EXECUTABLE,\n+        Gson.EMPTY_MAP, false, Gson.EMPTY_MAP, Gson.EMPTY_MAP, false,\n+        Gson.DEFAULT_JSON_NON_EXECUTABLE,\n         true, false, false, LongSerializationPolicy.DEFAULT,\n         Collections.<TypeAdapter.Factory>emptyList());\n     assertEquals(\"{}\", gson.toJson(new ClassWithNoFields() {", "timestamp": 1317405400, "metainfo": ""}