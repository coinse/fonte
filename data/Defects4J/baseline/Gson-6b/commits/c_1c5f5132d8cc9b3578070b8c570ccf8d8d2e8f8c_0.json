{"sha": "1c5f5132d8cc9b3578070b8c570ccf8d8d2e8f8c", "log": "Revert most of r677: Required strings to be quoted even in lenient mode.  As far as Inderjeet and I can tell, this is consistent with Gson 1.5.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n package com.google.gson;\n \n import com.google.gson.stream.JsonReader;\n+import com.google.gson.stream.JsonToken;\n import com.google.gson.stream.JsonWriter;\n-\n+import com.google.gson.stream.MalformedJsonException;\n import java.io.IOException;\n import java.io.Reader;\n import java.io.StringReader;\n   public <T> T fromJson(Reader json, Class<T> classOfT) throws JsonSyntaxException, JsonIOException {\n     JsonReader jsonReader = new JsonReader(json);\n     Object object = fromJson(jsonReader, classOfT);\n+    assertFullConsumption(object, jsonReader);\n     return Primitives.wrap(classOfT).cast(object);\n   }\n \n    */\n   public <T> T fromJson(Reader json, Type typeOfT) throws JsonIOException, JsonSyntaxException {\n     JsonReader jsonReader = new JsonReader(json);\n-    return this.<T>fromJson(jsonReader, typeOfT);\n+    T object = this.<T>fromJson(jsonReader, typeOfT);\n+    assertFullConsumption(object, jsonReader);\n+    return object;\n+  }\n+\n+  private static void assertFullConsumption(Object obj, JsonReader reader) {\n+    try {\n+      if (obj != null && reader.peek() != JsonToken.END_DOCUMENT) {\n+        throw new JsonIOException(\"JSON document was not fully consumed.\");\n+      }\n+    } catch (MalformedJsonException e) {\n+      throw new JsonSyntaxException(e);\n+    } catch (IOException e) {\n+      throw new JsonIOException(e);\n+    }\n   }\n \n   /**\n--- a/gson/src/main/java/com/google/gson/JsonParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonParser.java\n package com.google.gson;\n \n import com.google.gson.stream.JsonReader;\n-\n+import com.google.gson.stream.JsonToken;\n+import com.google.gson.stream.MalformedJsonException;\n import java.io.EOFException;\n+import java.io.IOException;\n import java.io.Reader;\n import java.io.StringReader;\n \n    * @since 1.3\n    */\n   public JsonElement parse(Reader json) throws JsonIOException, JsonSyntaxException {\n-    JsonReader jsonReader = new JsonReader(json);\n-    return parse(jsonReader);\n+    try {\n+      JsonReader jsonReader = new JsonReader(json);\n+      JsonElement element = parse(jsonReader);\n+      if (!element.isJsonNull() && jsonReader.peek() != JsonToken.END_DOCUMENT) {\n+        throw new JsonSyntaxException(\"Did not consume the entire document.\");\n+      }\n+      return element;\n+    } catch (MalformedJsonException e) {\n+      throw new JsonSyntaxException(e);\n+    } catch (IOException e) {\n+      throw new JsonIOException(e);\n+    } catch (NumberFormatException e) {\n+      throw new JsonSyntaxException(e);\n+    }\n   }\n \n   /**", "timestamp": 1290640933, "metainfo": ""}