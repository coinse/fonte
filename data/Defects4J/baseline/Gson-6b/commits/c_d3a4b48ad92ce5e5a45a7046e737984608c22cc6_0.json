{"sha": "d3a4b48ad92ce5e5a45a7046e737984608c22cc6", "log": "Unconditionally escape unicode newline characters.  Fixes issue 341.", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n        * quotation marks except for the characters that must be escaped:\n        * quotation mark, reverse solidus, and the control characters\n        * (U+0000 through U+001F).\"\n+       *\n+       * We also escape '\\u2028' and '\\u2029', which JavaScript interprets as\n+       * newline characters. This prevents eval() from failing with a syntax\n+       * error. http://code.google.com/p/google-gson/issues/detail?id=341\n        */\n       switch (c) {\n       case '\"':\n         }\n         break;\n \n+      case '\\u2028':\n+      case '\\u2029':\n+        out.write(String.format(\"\\\\u%04x\", (int) c));\n+        break;\n+\n       default:\n         if (c <= 0x1F) {\n           out.write(String.format(\"\\\\u%04x\", (int) c));\n--- a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n         + \"\\\"\\\\u0019\\\"]\", stringWriter.toString());\n   }\n \n+  public void testUnicodeLineBreaksEscaped() throws IOException {\n+    StringWriter stringWriter = new StringWriter();\n+    JsonWriter jsonWriter = new JsonWriter(stringWriter);\n+    jsonWriter.beginArray();\n+    jsonWriter.value(\"\\u2028 \\u2029\");\n+    jsonWriter.endArray();\n+    assertEquals(\"[\\\"\\\\u2028 \\\\u2029\\\"]\", stringWriter.toString());\n+  }\n+\n   public void testEmptyArray() throws IOException {\n     StringWriter stringWriter = new StringWriter();\n     JsonWriter jsonWriter = new JsonWriter(stringWriter);", "timestamp": 1310486722, "metainfo": ""}