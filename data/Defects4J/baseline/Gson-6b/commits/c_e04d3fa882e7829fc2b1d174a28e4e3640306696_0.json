{"sha": "e04d3fa882e7829fc2b1d174a28e4e3640306696", "log": "Don't look for instance fields on interfaces.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n     private Map<String, BoundField> getBoundFields(\n         MiniGson context, TypeToken<?> type, Class<?> raw) {\n       Map<String, BoundField> result = new LinkedHashMap<String, BoundField>();\n+      if (raw.isInterface()) {\n+        return result;\n+      }\n+\n       Type declaredType = type.getType();\n       while (raw != Object.class) {\n         Field[] fields = raw.getDeclaredFields();", "timestamp": 1312501990, "metainfo": ""}