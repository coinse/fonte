{"sha": "3c4d121dc8736c7359731f9cb99098e2999f8575", "log": "Fix integration tests that fell out from some benchmarking.", "commit": "\n--- a/extras/src/main/java/com/google/gson/mini/MiniGson.java\n+++ b/extras/src/main/java/com/google/gson/mini/MiniGson.java\n     factories.add(TypeAdapters.DOUBLE_FACTORY);\n     factories.add(TypeAdapters.LONG_FACTORY);\n     factories.add(TypeAdapters.STRING_FACTORY);\n-    factories.add(ReflectiveTypeAdapter.FACTORY);\n     factories.add(CollectionTypeAdapter.FACTORY);\n     factories.add(StringToValueMapTypeAdapter.FACTORY);\n     factories.add(ArrayTypeAdapter.FACTORY);\n+    factories.add(ReflectiveTypeAdapter.FACTORY);\n     this.factories = Collections.unmodifiableList(factories);\n   }\n \n--- a/extras/src/main/java/com/google/gson/mini/ReflectiveTypeAdapter.java\n+++ b/extras/src/main/java/com/google/gson/mini/ReflectiveTypeAdapter.java\n       Map<String, BoundField<?>> result = new LinkedHashMap<String, BoundField<?>>();\n       while (raw != Object.class) {\n         for (Field field : raw.getDeclaredFields()) {\n+          field.setAccessible(true); // TODO: don't call setAccessible unless necessary\n           Type fieldType = $Gson$Types.resolve(type.getType(), raw, field.getGenericType());\n           BoundField<?> boundField = BoundField.create(context, field, TypeToken.get(fieldType));\n           result.put(boundField.name, boundField);", "timestamp": 1310737432, "metainfo": ""}