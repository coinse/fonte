{"sha": "5bffa1f6790b2a5e8bc0996240c1b12317793324", "log": "Fix for Issue 178.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonCompactFormatter.java\n+++ b/gson/src/main/java/com/google/gson/JsonCompactFormatter.java\n     public void visitNull() throws IOException {\n       writer.append(\"null\");\n     }\n-    \n+\n     public void startArray(JsonArray array) throws IOException {\n       writer.append('[');\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonPrimitive member, \n+    public void visitArrayMember(JsonArray parent, JsonPrimitive member,\n         boolean isFirst) throws IOException {\n       if (!isFirst) {\n         writer.append(',');\n       member.toString(writer, escaper);\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonArray member, \n+    public void visitArrayMember(JsonArray parent, JsonArray member,\n         boolean isFirst) throws IOException {\n       if (!isFirst) {\n         writer.append(',');\n       }\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonObject member, \n+    public void visitArrayMember(JsonArray parent, JsonObject member,\n         boolean isFirst) throws IOException {\n       if (!isFirst) {\n         writer.append(',');\n         writer.append(',');\n       }\n       writer.append('\"');\n-      writer.append(memberName);\n+      writer.append(escaper.escapeJsonString(memberName));\n       writer.append(\"\\\":\");\n       member.toString(writer, escaper);\n     }\n         writer.append(',');\n       }\n       writer.append('\"');\n-      writer.append(memberName);\n+      writer.append(escaper.escapeJsonString(memberName));\n       writer.append(\"\\\":\");\n     }\n \n         writer.append(',');\n       }\n       writer.append('\"');\n-      writer.append(memberName);\n+      writer.append(escaper.escapeJsonString(memberName));\n       writer.append(\"\\\":\");\n     }\n \n-    public void visitNullObjectMember(JsonObject parent, String memberName, \n+    public void visitNullObjectMember(JsonObject parent, String memberName,\n         boolean isFirst) throws IOException {\n       if (serializeNulls) {\n         visitObjectMember(parent, memberName, (JsonObject) null, isFirst);\n-      }      \n+      }\n     }\n-    \n+\n     public void endObject(JsonObject object) throws IOException {\n       writer.append('}');\n     }\n   }\n-  \n+\n   private final boolean escapeHtmlChars;\n \n   JsonCompactFormatter() {\n     this(true);\n   }\n-  \n+\n   JsonCompactFormatter(boolean escapeHtmlChars) {\n     this.escapeHtmlChars = escapeHtmlChars;\n   }\n \n-  public void format(JsonElement root, Appendable writer, \n+  public void format(JsonElement root, Appendable writer,\n       boolean serializeNulls) throws IOException {\n     if (root == null) {\n       return;\n--- a/gson/src/main/java/com/google/gson/JsonObject.java\n+++ b/gson/src/main/java/com/google/gson/JsonObject.java\n    */\n   public void add(String property, JsonElement value) {\n     Preconditions.checkArgument(property != null && !\"\".equals(property.trim()));\n-\n     if (value == null) {\n       value = JsonNull.createJsonNull();\n     }\n         sb.append(',');\n       }\n       sb.append('\\\"');\n-      sb.append(entry.getKey());\n+      sb.append(escaper.escapeJsonString(entry.getKey()));\n       sb.append(\"\\\":\");\n       entry.getValue().toString(sb, escaper);\n     }\n--- a/gson/src/main/java/com/google/gson/JsonPrintFormatter.java\n+++ b/gson/src/main/java/com/google/gson/JsonPrintFormatter.java\n   JsonPrintFormatter() {\n     this(true);\n   }\n-  \n+\n   JsonPrintFormatter(boolean escapeHtmlChars) {\n     this(DEFAULT_PRINT_MARGIN, DEFAULT_INDENTATION_SIZE, DEFAULT_RIGHT_MARGIN, escapeHtmlChars);\n   }\n     private void breakLineIfNeeded() throws IOException {\n       breakLineIfThisToNextExceedsLimit(0);\n     }\n-    \n+\n     private void breakLineIfThisToNextExceedsLimit(int nextLength) throws IOException {\n         if (getLine().length() + nextLength > printMargin - rightMargin) {\n           finishLine();\n       writer.beginArray();\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonPrimitive member, \n+    public void visitArrayMember(JsonArray parent, JsonPrimitive member,\n         boolean isFirst) throws IOException {\n       addCommaCheckingFirst(isFirst);\n       writer.value(escapeJsonPrimitive(member));\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonArray member, \n+    public void visitArrayMember(JsonArray parent, JsonArray member,\n         boolean first) throws IOException {\n       addCommaCheckingFirst(first);\n     }\n \n-    public void visitArrayMember(JsonArray parent, JsonObject member, \n+    public void visitArrayMember(JsonArray parent, JsonObject member,\n         boolean first) throws IOException {\n       addCommaCheckingFirst(first);\n     }\n       writer.beginObject();\n     }\n \n-    public void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member, \n-        boolean isFirst) throws IOException {\n-      addCommaCheckingFirst(isFirst);\n-      writer.key(memberName);\n+    public void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member,\n+        boolean isFirst) throws IOException {\n+      addCommaCheckingFirst(isFirst);\n+      writer.key(escaper.escapeJsonString(memberName));\n       writer.fieldSeparator();\n       writer.value(escapeJsonPrimitive(member));\n     }\n \n-    public void visitObjectMember(JsonObject parent, String memberName, JsonArray member, \n-        boolean isFirst) throws IOException {\n-      addCommaCheckingFirst(isFirst);\n-      writer.key(memberName);\n+    public void visitObjectMember(JsonObject parent, String memberName, JsonArray member,\n+        boolean isFirst) throws IOException {\n+      addCommaCheckingFirst(isFirst);\n+      writer.key(escaper.escapeJsonString(memberName));\n       writer.fieldSeparator();\n     }\n \n-    public void visitObjectMember(JsonObject parent, String memberName, JsonObject member, \n-        boolean isFirst) throws IOException {\n-      addCommaCheckingFirst(isFirst);\n-      writer.key(memberName);\n+    public void visitObjectMember(JsonObject parent, String memberName, JsonObject member,\n+        boolean isFirst) throws IOException {\n+      addCommaCheckingFirst(isFirst);\n+      writer.key(escaper.escapeJsonString(memberName));\n       writer.fieldSeparator();\n     }\n \n-    public void visitNullObjectMember(JsonObject parent, String memberName, \n+    public void visitNullObjectMember(JsonObject parent, String memberName,\n         boolean isFirst) throws IOException {\n       if (serializeNulls) {\n         visitObjectMember(parent, memberName, (JsonObject) null, isFirst);\n       }\n     }\n-    \n+\n     public void endObject(JsonObject object) {\n       writer.endObject();\n     }\n     public void visitNull() throws IOException {\n       writer.value(\"null\");\n     }\n-    \n+\n     private String escapeJsonPrimitive(JsonPrimitive member) throws IOException {\n       StringBuilder builder = new StringBuilder();\n       member.toString(builder, escaper);\n     }\n   }\n \n-  public void format(JsonElement root, Appendable writer, \n+  public void format(JsonElement root, Appendable writer,\n       boolean serializeNulls) throws IOException {\n     if (root == null) {\n       return;\n     }\n     JsonWriter jsonWriter = new JsonWriter(writer);\n     JsonElementVisitor visitor = new PrintFormattingVisitor(\n-        jsonWriter, new Escaper(escapeHtmlChars), serializeNulls);    \n+        jsonWriter, new Escaper(escapeHtmlChars), serializeNulls);\n     JsonTreeNavigator navigator = new JsonTreeNavigator(visitor, serializeNulls);\n     navigator.navigate(root);\n     jsonWriter.finishLine();", "timestamp": 1282373452, "metainfo": ""}