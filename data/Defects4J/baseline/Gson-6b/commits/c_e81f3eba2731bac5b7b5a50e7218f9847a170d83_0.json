{"sha": "e81f3eba2731bac5b7b5a50e7218f9847a170d83", "log": "Expose newJsonWriter wrapper instead of just options.  This is more future proof to ensure that consumers holding on to TypeAdapters for efficiency can always encode JSON in the same way as if the Gson instance was used directly.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n         constructorConstructor, fieldNamingPolicy, excluder));\n \n     this.factories = Collections.unmodifiableList(factories);\n-  }\n-\n-  /** Returns true if this Gson instance writes fields with null values. */\n-  public boolean serializeNulls() {\n-    return serializeNulls;\n   }\n \n   private TypeAdapter<Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n   }\n \n   /**\n-   * Returns a new JSON writer configured for this GSON and with the non-execute\n-   * prefix if that is configured.\n-   */\n-  private JsonWriter newJsonWriter(Writer writer) throws IOException {\n+   * Returns a new JSON writer configured for the settings on this Gson instance.\n+   */\n+  public JsonWriter newJsonWriter(Writer writer) throws IOException {\n     if (generateNonExecutableJson) {\n       writer.write(JSON_NON_EXECUTABLE_PREFIX);\n     }", "timestamp": 1443309578, "metainfo": ""}