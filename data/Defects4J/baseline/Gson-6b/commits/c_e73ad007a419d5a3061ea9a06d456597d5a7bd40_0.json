{"sha": "e73ad007a419d5a3061ea9a06d456597d5a7bd40", "log": "Added test that serialize interfaces.", "commit": "\n--- /dev/null\n+++ b/gson/src/test/java/com/google/gson/functional/InterfaceTest.java\n+/*\n+ * Copyright (C) 2008 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.gson.functional;\n+\n+import com.google.gson.Gson;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Functional tests involving interfaces.\n+ *\n+ * @author Inderjeet Singh\n+ * @author Joel Leitch\n+ */\n+public class InterfaceTest extends TestCase {\n+  private static final String OBJ_JSON = \"{\\\"someStringValue\\\":\\\"StringValue\\\"}\";\n+\n+  private Gson gson;\n+  private TestObject obj;\n+\n+  protected void setUp() throws Exception {\n+    super.setUp();\n+    gson = new Gson();\n+    obj = new TestObject(\"StringValue\");\n+  }\n+\n+  public void testSerializingObjectImplementingInterface() throws Exception {\n+    assertEquals(OBJ_JSON, gson.toJson(obj));\n+  }\n+  \n+  public void testSerializingInterfaceObjectField() throws Exception {\n+    TestObjectWrapper objWrapper = new TestObjectWrapper(obj);\n+    assertEquals(\"{\\\"obj\\\":\" + OBJ_JSON + \"}\", gson.toJson(objWrapper));\n+  }\n+\n+  private static interface TestObjectInterface {\n+    // Holder\n+  }\n+  \n+  private static class TestObject implements TestObjectInterface {\n+    @SuppressWarnings(\"unused\")\n+    private String someStringValue;\n+    \n+    private TestObject(String value) {\n+      this.someStringValue = value;\n+    }\n+  }\n+\n+  private static class TestObjectWrapper {\n+    @SuppressWarnings(\"unused\")\n+    private TestObjectInterface obj;\n+    \n+    private TestObjectWrapper(TestObjectInterface obj) {\n+      this.obj = obj;\n+    }\n+  }\n+}", "timestamp": 1254251029, "metainfo": ""}