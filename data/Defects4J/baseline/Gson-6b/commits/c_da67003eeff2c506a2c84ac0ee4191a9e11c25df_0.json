{"sha": "da67003eeff2c506a2c84ac0ee4191a9e11c25df", "log": "GSON 1.x uses arbitrary precision for primitive type conversion (so -122.08e-2132 != 0) GSON 2.x uses double precision (so -122.08e-2132 == 0)", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n     }\n   }\n \n-  public void testDeserializingBigDecimalAsLongFails() {\n-    try {\n-      gson.fromJson(\"-122.08e-2132\", long.class);\n-      fail();\n-    } catch (JsonSyntaxException expected) {\n-    }\n+  public void testValueVeryCloseToZeroIsZero() {\n+    assertEquals(0, (byte) gson.fromJson(\"-122.08e-2132\", byte.class));\n+    assertEquals(0, (short) gson.fromJson(\"-122.08e-2132\", short.class));\n+    assertEquals(0, (int) gson.fromJson(\"-122.08e-2132\", int.class));\n+    assertEquals(0, (long) gson.fromJson(\"-122.08e-2132\", long.class));\n+    assertEquals(-0.0f, gson.fromJson(\"-122.08e-2132\", float.class));\n+    assertEquals(-0.0, gson.fromJson(\"-122.08e-2132\", double.class));\n+    assertEquals(0.0f, gson.fromJson(\"122.08e-2132\", float.class));\n+    assertEquals(0.0, gson.fromJson(\"122.08e-2132\", double.class));\n   }\n \n   public void testDeserializingBigDecimalAsFloat() {", "timestamp": 1315545781, "metainfo": ""}