{"sha": "4f0728f6a09063ab9f2121dd6077634a316c9401", "log": "Fixed issue 126 by ensuring that parameterized type deduction is not done for transient fields.", "commit": "\n--- a/gson/src/main/java/com/google/gson/ObjectNavigator.java\n+++ b/gson/src/main/java/com/google/gson/ObjectNavigator.java\n     Field[] fields = clazz.getDeclaredFields();\n     AccessibleObject.setAccessible(fields, true);\n     for (Field f : fields) {\n-      TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField(f, objType);\n-      Type actualTypeOfField = fieldTypeInfo.getActualType();\n       if (exclusionStrategy.shouldSkipField(f)) {\n         continue; // skip\n       } else {\n+        TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField(f, objType);\n+        Type actualTypeOfField = fieldTypeInfo.getActualType();\n         boolean visitedWithCustomHandler = \n           visitor.visitFieldUsingCustomHandler(f, actualTypeOfField, obj);\n         if (!visitedWithCustomHandler) {\n--- a/gson/src/test/java/com/google/gson/common/TestTypes.java\n+++ b/gson/src/test/java/com/google/gson/common/TestTypes.java\n     }\n   }\n \n-  public static class ClassWithTransientFields {\n+  public static class ClassWithTransientFields<T> {\n+    public transient T transientT; \n     public final transient long transientLongValue;\n     private final long[] longValue;\n ", "timestamp": 1243965735, "metainfo": ""}