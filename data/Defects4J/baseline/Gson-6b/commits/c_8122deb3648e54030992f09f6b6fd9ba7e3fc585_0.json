{"sha": "8122deb3648e54030992f09f6b6fd9ba7e3fc585", "log": "fixed copyright notice, minor cosmetic changes.", "commit": "\n--- a/wsexample/server/src/main/java/com/google/gson/wsexample/server/MainServlet.java\n+++ b/wsexample/server/src/main/java/com/google/gson/wsexample/server/MainServlet.java\n-// Copyright 2010 Google Inc. All Rights Reserved.\n-\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package com.google.gson.wsexample.server;\n \n import com.google.gson.Gson;\n public class MainServlet extends HttpServlet {\n   @Override\n   public void service(HttpServletRequest req, HttpServletResponse res) {\n-    // construct specs\n     WebServiceCallSpec spec = SampleJsonService.PLACE_ORDER;\n     RequestSpec requestSpec = spec.getRequestSpec();\n     ResponseSpec responseSpec = spec.getResponseSpec();\n-    // construct gson instance\n     Gson gson = new GsonBuilder()\n         .registerTypeAdapter(RequestBody.class,\n             new RequestBodyGsonConverter(requestSpec.getBodySpec()))\n         .create();\n     RequestReceiver requestReceiver = new RequestReceiver(gson, requestSpec);\n     WebServiceRequest webServiceRequest = requestReceiver.receive(req);\n-    RequestBody requestBody = webServiceRequest.getBody();\n-    Cart cart = requestBody.get(TypedKeys.RequestBody.CART);\n+\n+    Cart cart = webServiceRequest.getBody().get(TypedKeys.RequestBody.CART);\n     String authToken = webServiceRequest.getHeader(TypedKeys.Request.AUTH_TOKEN);\n+\n     Order order = placeOrder(cart, authToken);\n \n+    // Empty headers per the spec\n     HeaderMap responseHeaders = new HeaderMap.Builder(responseSpec.getHeadersSpec()).build();\n     ResponseBody responseBody = new ResponseBody.Builder(responseSpec.getBodySpec())\n         .put(TypedKeys.ResponseBody.ORDER, order)\n   }\n   \n   private Order placeOrder(Cart cart, String authToken) {\n+    // Create an order, in this case a dummy one.\n     return new Order(cart, \"Order123\");\n   }\n }", "timestamp": 1279586080, "metainfo": ""}