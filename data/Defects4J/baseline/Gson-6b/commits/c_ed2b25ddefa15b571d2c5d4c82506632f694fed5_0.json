{"sha": "ed2b25ddefa15b571d2c5d4c82506632f694fed5", "log": "Don't serialize nulls in JsonElementWriter if setSerializeNulls(false)", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java\n \n   private void put(JsonElement value) {\n     if (pendingName != null) {\n-      JsonObject object = (JsonObject) peek();\n-      object.add(pendingName, value);\n+      if (!value.isJsonNull() || getSerializeNulls()) {\n+        JsonObject object = (JsonObject) peek();\n+        object.add(pendingName, value);\n+      }\n       pendingName = null;\n     } else if (stack.isEmpty()) {\n       product = value;\n--- a/gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java\n \n   // TODO: more tests\n   // TODO: figure out what should be returned by an empty writer\n-  // TODO: test when serialize nulls is false\n \n   public void testArray() throws IOException {\n     JsonElementWriter writer = new JsonElementWriter();\n     } catch (IOException expected) {\n     }\n   }\n+\n+  public void testSerializeNullsFalse() throws IOException {\n+    JsonElementWriter writer = new JsonElementWriter();\n+    writer.setSerializeNulls(false);\n+    writer.beginObject();\n+    writer.name(\"A\");\n+    writer.nullValue();\n+    writer.endObject();\n+    assertEquals(\"{}\", writer.get().toString());\n+  }\n+\n+  public void testSerializeNullsTrue() throws IOException {\n+    JsonElementWriter writer = new JsonElementWriter();\n+    writer.setSerializeNulls(true);\n+    writer.beginObject();\n+    writer.name(\"A\");\n+    writer.nullValue();\n+    writer.endObject();\n+    assertEquals(\"{\\\"A\\\":null}\", writer.get().toString());\n+  }\n }", "timestamp": 1317428553, "metainfo": ""}