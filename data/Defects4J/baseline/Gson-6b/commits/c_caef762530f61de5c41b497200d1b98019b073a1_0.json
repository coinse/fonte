{"sha": "caef762530f61de5c41b497200d1b98019b073a1", "log": "added factory fields for consistency", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n     factories.add(TypeAdapters.newFactory(float.class, Float.class,\n             floatAdapter(serializeSpecialFloatingPointValues)));\n     factories.add(TypeAdapters.NUMBER_FACTORY);\n-    factories.add(TypeAdapters.newFactory(AtomicInteger.class, TypeAdapters.ATOMIC_INTEGER));\n-    factories.add(TypeAdapters.newFactory(AtomicBoolean.class, TypeAdapters.ATOMIC_BOOLEAN));\n+    factories.add(TypeAdapters.ATOMIC_INTEGER_FACTORY);\n+    factories.add(TypeAdapters.ATOMIC_BOOLEAN_FACTORY);\n     factories.add(TypeAdapters.newFactory(AtomicLong.class, atomicLongAdapter(longAdapter)));\n-    factories.add(TypeAdapters.newFactory(AtomicIntegerArray.class, TypeAdapters.ATOMIC_INTEGER_ARRAY));\n+    factories.add(TypeAdapters.ATOMIC_INTEGER_ARRAY_FACTORY);\n     factories.add(TypeAdapters.CHARACTER_FACTORY);\n     factories.add(TypeAdapters.STRING_BUILDER_FACTORY);\n     factories.add(TypeAdapters.STRING_BUFFER_FACTORY);\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n       out.value(value.get());\n     }\n   }.nullSafe();\n+  public static final TypeAdapterFactory ATOMIC_INTEGER_FACTORY =\n+      newFactory(AtomicInteger.class, TypeAdapters.ATOMIC_INTEGER);\n \n   public static final TypeAdapter<AtomicBoolean> ATOMIC_BOOLEAN = new TypeAdapter<AtomicBoolean>() {\n     @Override public AtomicBoolean read(JsonReader in) throws IOException {\n       out.value(value.get());\n     }\n   }.nullSafe();\n+  public static final TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY =\n+      newFactory(AtomicBoolean.class, TypeAdapters.ATOMIC_BOOLEAN);\n \n   public static final TypeAdapter<AtomicIntegerArray> ATOMIC_INTEGER_ARRAY = new TypeAdapter<AtomicIntegerArray>() {\n     @Override public AtomicIntegerArray read(JsonReader in) throws IOException {\n       out.endArray();\n     }\n   }.nullSafe();\n+  public static final TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY =\n+      newFactory(AtomicIntegerArray.class, TypeAdapters.ATOMIC_INTEGER_ARRAY);\n \n   public static final TypeAdapter<Number> LONG = new TypeAdapter<Number>() {\n     @Override", "timestamp": 1446761031, "metainfo": ""}