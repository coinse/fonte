{"sha": "657688ca797a08975aea47d364b309ac8b7c12bb", "log": "Test that the date format is honored, even in a collection. http://code.google.com/p/google-gson/issues/detail?id=230", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n import java.sql.Timestamp;\n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n+import java.util.Arrays;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.GregorianCalendar;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Properties;\n import java.util.Set;\n     assertEquals(expectedDateString, json);\n   }\n \n+  // http://code.google.com/p/google-gson/issues/detail?id=230\n+  public void testDateSerializationInCollection() throws Exception {\n+    TimeZone defaultTimeZone = TimeZone.getDefault();\n+    TimeZone.setDefault(TimeZone.getTimeZone(\"America/Los_Angeles\"));\n+    Locale defaultLocale = Locale.getDefault();\n+    Locale.setDefault(Locale.US);\n+    try {\n+      Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd\").create();\n+      List<Date> dates = Arrays.asList(new Date(0));\n+      String json = gson.toJson(dates, new TypeToken<List<Date>>() {}.getType());\n+      assertEquals(\"[\\\"1969-12-31\\\"]\", json);\n+    } finally {\n+      TimeZone.setDefault(defaultTimeZone);\n+      Locale.setDefault(defaultLocale);\n+    }\n+  }\n+\n   private static class ClassWithBigDecimal {\n     BigDecimal value;\n     // For use by Gson", "timestamp": 1300745433, "metainfo": ""}