{"sha": "26016ca66e8cb76ada0a01fa9420a88a8d346f68", "log": "removed eclipse warnings, unused fields. Made inner classes static where possible.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n+++ b/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n  *\n  * @author Inderjeet Singh\n  */\n-@SuppressWarnings(\"serial\")\n public final class LazilyParsedNumber extends Number {\n   private final String value;\n \n--- a/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java\n+++ b/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java\n  * LinkedHashMap classes.\n  */\n public final class LinkedHashTreeMap<K, V> extends AbstractMap<K, V> implements Serializable {\n-  @SuppressWarnings(\"unchecked\") // to avoid Comparable<Comparable<Comparable<...>>>\n+  @SuppressWarnings({ \"unchecked\", \"rawtypes\" }) // to avoid Comparable<Comparable<Comparable<...>>>\n   private static final Comparator<Comparable> NATURAL_ORDER = new Comparator<Comparable>() {\n     public int compare(Comparable a, Comparable b) {\n       return a.compareTo(b);\n    * @param comparator the comparator to order elements with, or {@code null} to\n    *     use the natural ordering.\n    */\n-  @SuppressWarnings(\"unchecked\") // unsafe! if comparator is null, this assumes K is comparable\n+  @SuppressWarnings({ \"unchecked\", \"rawtypes\" }) // unsafe! if comparator is null, this assumes K is comparable\n   public LinkedHashTreeMap(Comparator<? super K> comparator) {\n     this.comparator = comparator != null\n         ? comparator\n       return oldValue;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     @Override public boolean equals(Object o) {\n       if (o instanceof Entry) {\n         Entry other = (Entry) o;\n--- a/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java\n     }\n   };\n \n-  private final Gson context;\n   private final Class<E> componentType;\n   private final TypeAdapter<E> componentTypeAdapter;\n \n   public ArrayTypeAdapter(Gson context, TypeAdapter<E> componentTypeAdapter, Class<E> componentType) {\n-    this.context = context;\n     this.componentTypeAdapter =\n       new TypeAdapterRuntimeTypeWrapper<E>(context, componentTypeAdapter, componentType);\n     this.componentType = componentType;\n--- a/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java\n     return result;\n   }\n \n-  private final class Adapter<E> extends TypeAdapter<Collection<E>> {\n-    private final Gson context;\n-    private final Type elementType;\n+  private static final class Adapter<E> extends TypeAdapter<Collection<E>> {\n     private final TypeAdapter<E> elementTypeAdapter;\n     private final ObjectConstructor<? extends Collection<E>> constructor;\n \n     public Adapter(Gson context, Type elementType,\n         TypeAdapter<E> elementTypeAdapter,\n         ObjectConstructor<? extends Collection<E>> constructor) {\n-      this.context = context;\n-      this.elementType = elementType;\n       this.elementTypeAdapter =\n           new TypeAdapterRuntimeTypeWrapper<E>(context, elementTypeAdapter, elementType);\n       this.constructor = constructor;\n--- a/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java\n   }\n \n   private final class Adapter<K, V> extends TypeAdapter<Map<K, V>> {\n-    private final Gson context;\n-    private final Type keyType;\n-    private final Type valueType;\n     private final TypeAdapter<K> keyTypeAdapter;\n     private final TypeAdapter<V> valueTypeAdapter;\n     private final ObjectConstructor<? extends Map<K, V>> constructor;\n     public Adapter(Gson context, Type keyType, TypeAdapter<K> keyTypeAdapter,\n         Type valueType, TypeAdapter<V> valueTypeAdapter,\n         ObjectConstructor<? extends Map<K, V>> constructor) {\n-      this.context = context;\n-      this.keyType = keyType;\n-      this.valueType = valueType;\n       this.keyTypeAdapter =\n         new TypeAdapterRuntimeTypeWrapper<K>(context, keyTypeAdapter, keyType);\n       this.valueTypeAdapter =\n--- a/gson/src/test/java/com/google/gson/JsonNullTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonNullTest.java\n   }\n \n   public void testDeepCopy() {\n+    @SuppressWarnings(\"deprecation\")\n     JsonNull a = new JsonNull();\n     assertSame(JsonNull.INSTANCE, a.deepCopy());\n     assertSame(JsonNull.INSTANCE, JsonNull.INSTANCE.deepCopy());", "timestamp": 1365797348, "metainfo": ""}