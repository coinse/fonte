{"sha": "2bcc832adeff81c48991274f4c7fe4f9b4cc1599", "log": "removed dependence on Google Guice and Google Collections libraries", "commit": "\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/CallPathMap.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/CallPathMap.java\n  */\n package com.google.gson.webservice.definition;\n \n+import java.util.HashMap;\n import java.util.Map;\n-\n-import com.google.common.collect.Maps;\n \n /**\n  * A generic Map of calls with relative path where the call is available as the key. \n public final class CallPathMap<T> {\n   \n   public static class Builder<T> {\n-    private final Map<CallPath, T> contents = Maps.newHashMap();\n+    private final Map<CallPath, T> contents = new HashMap<CallPath, T>();\n     private final T nullValue;\n     \n     public Builder(T nullValue) {\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMap.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMap.java\n import java.lang.reflect.Type;\n import java.util.Map;\n \n-import com.google.inject.Inject;\n-\n /**\n  * Map of request or response header objects. There is a {@link HeaderMapSpec} associated with the\n  * map as well and only those headers are allowed that are consistent with the specification.\n public final class HeaderMap extends ParamMap {\n \n   public static class Builder extends ParamMap.Builder<HeaderMapSpec> {\n-    @Inject\n     public Builder(HeaderMapSpec spec) {\n       super(spec);\n     }\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMapSpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMapSpec.java\n package com.google.gson.webservice.definition;\n \n import java.lang.reflect.Type;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Set;\n-\n-import com.google.common.collect.Maps;\n \n /**\n  * Specification of a header map for {@link HeaderMap}. \n public final class HeaderMapSpec implements ParamMapSpec {\n   \n   public static class Builder {\n-    private final Map<String, Type> map = Maps.newLinkedHashMap();\n+    private final Map<String, Type> map = new LinkedHashMap<String, Type>();\n   \n     public void put(String headerName, Type headerType) {\n       map.put(headerName, headerType);\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/ParamMap.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/ParamMap.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package com.google.gson.webservice.definition;\n \n import java.lang.reflect.Type;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Set;\n-\n-import com.google.common.base.Preconditions;\n-import com.google.common.collect.Maps;\n \n class ParamMap {\n \n   public static class Builder<T extends ParamMapSpec> {    \n-    protected final Map<String, Object> contents = Maps.newLinkedHashMap();\n+    protected final Map<String, Object> contents = new LinkedHashMap<String, Object>();\n     protected final T spec;\n \n     public Builder(T spec) {\n--- /dev/null\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/Preconditions.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.webservice.definition;\n+\n+final class Preconditions {\n+\n+  public static void checkArgument(boolean condition) {\n+    if (!condition) {\n+      throw new IllegalArgumentException();\n+    }\n+  }\n+\n+  public static void checkNotNull(Object obj) {\n+    if (obj == null) {\n+      throw new IllegalArgumentException();\n+    }\n+  }\n+}\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/RequestBody.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/RequestBody.java\n import java.lang.reflect.Type;\n import java.util.Map;\n \n-import com.google.inject.Inject;\n-\n /**\n  * Definition of the request body of a {@link WebServiceCall}. The request body is what is sent out\n  * in the output stream of the request (for example, with \n \n   public static class Builder extends ParamMap.Builder<RequestBodySpec> {    \n     \n-    @Inject\n     public Builder(RequestBodySpec spec) {\n       super(spec);\n     }\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/RequestBodySpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/RequestBodySpec.java\n package com.google.gson.webservice.definition;\n \n import java.lang.reflect.Type;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n-\n-import com.google.common.collect.Maps;\n \n /**\n  * Specification of a {@link RequestBody}.\n public final class RequestBodySpec extends ContentBodySpec {\n   \n   public static class Builder {\n-    private final Map<String, Type> paramsSpec = Maps.newLinkedHashMap();\n+    private final Map<String, Type> paramsSpec = new LinkedHashMap<String, Type>();\n     public Builder add(String paramName, Type type) {\n       paramsSpec.put(paramName, type);\n       return this;\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/RequestSpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/RequestSpec.java\n  * limitations under the License.\n  */\n package com.google.gson.webservice.definition;\n-\n-import com.google.common.base.Preconditions;\n \n /**\n  * Specification for a {@link WebServiceRequest}.\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseBody.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseBody.java\n import java.lang.reflect.Type;\n import java.util.Map;\n \n-import com.google.inject.Inject;\n-\n /**\n  * body of the response. This is written out as JSON to be sent out to the client. \n  * \n \n   public static class Builder extends ParamMap.Builder<ResponseBodySpec> {    \n \n-    @Inject\n     public Builder(ResponseBodySpec spec) {\n       super(spec);\n     }\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseBodySpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseBodySpec.java\n package com.google.gson.webservice.definition;\n \n import java.lang.reflect.Type;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n-\n-import com.google.common.collect.Maps;\n \n /**\n  * Specification of a {@link ResponseBody}.\n public final class ResponseBodySpec extends ContentBodySpec {\n   \n   public static class Builder {\n-    private final Map<String, Type> paramsSpec = Maps.newLinkedHashMap();\n+    private final Map<String, Type> paramsSpec = new LinkedHashMap<String, Type>();\n     public Builder add(String paramName, Type type) {\n       paramsSpec.put(paramName, type);\n       return this;\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseSpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/ResponseSpec.java\n  * limitations under the License.\n  */\n package com.google.gson.webservice.definition;\n-\n-import com.google.common.base.Preconditions;\n \n /**\n  * Specification for a {@link WebServiceResponse}.\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/WebServiceCallSpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/WebServiceCallSpec.java\n import java.util.Arrays;\n import java.util.LinkedHashSet;\n import java.util.Set;\n-\n-import com.google.common.base.Preconditions;\n \n \n /**", "timestamp": 1263905231, "metainfo": ""}