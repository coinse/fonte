{"sha": "eac1505670eb03586389a14b860c6b90dc2fe898", "log": "Removed eclipse warnings about unneeded else statements and rawtypes/unchecked access.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n   private static final DefaultTimestampDeserializer TIMESTAMP_DESERIALIZER =\n     new DefaultTimestampDeserializer();\n \n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings(\"rawtypes\")\n   private static final EnumTypeAdapter ENUM_TYPE_ADAPTER = new EnumTypeAdapter();\n   private static final UrlTypeAdapter URL_TYPE_ADAPTER = new UrlTypeAdapter();\n   private static final UriTypeAdapter URI_TYPE_ADAPTER = new UriTypeAdapter();\n     return map;\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n   private static JsonDeserializer<?> wrapDeserializer(JsonDeserializer<?> deserializer) {\n     return new JsonDeserializerExceptionWrapper(deserializer);\n   }\n     }\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n   private static class CollectionTypeAdapter implements JsonSerializer<Collection>,\n       JsonDeserializer<Collection>, InstanceCreator<Collection> {\n     public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n     }\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n   static class MapTypeAdapter implements JsonSerializer<Map>, JsonDeserializer<Map>,\n       InstanceCreator<Map> {\n \n--- a/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n   /**\n    * objTypePair.getObject() must not be null\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n   private JsonElement findAndInvokeCustomSerializer(ObjectTypePair objTypePair) {\n     Pair<JsonSerializer<?>,ObjectTypePair> pair = objTypePair.getMatchingHandler(serializers);\n     if (pair == null) {\n--- a/gson/src/main/java/com/google/gson/Streams.java\n+++ b/gson/src/main/java/com/google/gson/Streams.java\n        */\n       if (isEmpty) {\n         return JsonNull.createJsonNull();\n-      } else {\n-        throw new JsonIOException(e);\n       }\n+      throw new JsonIOException(e);\n     } catch (MalformedJsonException e) {\n       throw new JsonSyntaxException(e);\n     } catch (IOException e) {\n--- a/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java\n     public boolean equals(Object o) {\n       if (!(o instanceof Blue)) {\n         return false;\n-      } else {\n-        Blue blue = (Blue) o;\n-        return redField.equals(blue.redField);\n-\n       }\n+      Blue blue = (Blue) o;\n+      return redField.equals(blue.redField);\n     }\n   }\n ", "timestamp": 1289460595, "metainfo": ""}