{"sha": "535bce5c73eff59f08082368da143de385e9508e", "log": "Minor fixes: BeanDeserializerBuilder copy ctor was not copying all settings", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n     protected BeanDeserializerBuilder(BeanDeserializerBuilder src)\n     {\n         _beanDesc = src._beanDesc;\n+        _defaultViewInclusion = src._defaultViewInclusion;\n+\n         _anySetter = src._anySetter;\n         _ignoreAllUnknown = src._ignoreAllUnknown;\n \n         // Hmmh. Should we create defensive copies here? For now, not yet\n         _ignorableProps = src._ignorableProps;        \n         _valueInstantiator = src._valueInstantiator;\n-        _defaultViewInclusion = src._defaultViewInclusion;\n+        _objectIdReader = src._objectIdReader;\n+        \n+        _buildMethod = src._buildMethod;\n+        _builderConfig = src._builderConfig;\n     }\n \n     private static HashMap<String, SettableBeanProperty> _copy(HashMap<String, SettableBeanProperty> src)\n         _objectIdReader = r;\n     }\n \n-    public void setPOJOBuilder(AnnotatedMethod buildMethod,\n-            JsonPOJOBuilder.Value config) {\n-    \t_buildMethod = buildMethod;\n-    \t_builderConfig = config;\n+    public void setPOJOBuilder(AnnotatedMethod buildMethod, JsonPOJOBuilder.Value config) {\n+        _buildMethod = buildMethod;\n+        _builderConfig = config;\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n             HashSet<String> ignorableProps, boolean ignoreAllUnknown,\n             boolean hasViews)\n     {\n-    \tsuper(builder, beanDesc, properties, backRefs,\n-    \t\t\tignorableProps, ignoreAllUnknown, hasViews);\n-    \t_buildMethod = builder.getBuildMethod();\n-    \t// 05-Mar-2012, tatu: Can not really make Object Ids work with builders, not yet anyway\n-    \tif (_objectIdReader != null) {\n-    \t    throw new IllegalArgumentException(\"Can not use Object Id with Builder-based deserialization (type \"\n-    \t            +beanDesc.getType()+\")\");\n-    \t}\n+        super(builder, beanDesc, properties, backRefs,\n+                ignorableProps, ignoreAllUnknown, hasViews);\n+        _buildMethod = builder.getBuildMethod();\n+        // 05-Mar-2012, tatu: Can not really make Object Ids work with builders, not yet anyway\n+        if (_objectIdReader != null) {\n+            throw new IllegalArgumentException(\"Can not use Object Id with Builder-based deserialization (type \"\n+                    +beanDesc.getType()+\")\");\n+        }\n     }\n \n     /**\n     }\n     \n     protected BuilderBasedDeserializer(BuilderBasedDeserializer src, NameTransformer unwrapper) {\n-    \tsuper(src, unwrapper);\n+        super(src, unwrapper);\n         _buildMethod = src._buildMethod;\n     }\n \n     {\n         try {\n             return _buildMethod.getMember().invoke(builder);\n-    \t} catch (Exception e) {\n-    \t    wrapInstantiationProblem(e, ctxt);\n-    \t    return null;\n-    \t}\n+        } catch (Exception e) {\n+            wrapInstantiationProblem(e, ctxt);\n+            return null;\n+        }\n     }\n     \n     /**", "timestamp": 1368495786, "metainfo": ""}