{"sha": "4e7c4709f9b95349a0a3a4f9f93d2549626d0cf4", "log": "Completed [JACKSON-695] implementation with tests.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java\n         if (value == bean) {\n             _reportSelfReference(bean);\n         }\n-        if (_suppressableValue != null) {\n-            if ((MARKER_FOR_EMPTY == _suppressableValue) || _suppressableValue.equals(value)) {\n-                return;\n-            }\n-        }\n+        // then find serializer to use\n         JsonSerializer<Object> ser = _serializer;\n         if (ser == null) {\n             Class<?> cls = value.getClass();\n                 ser = _findAndAddDynamic(map, cls, prov);\n             }\n         }\n+        // and then see if we must suppress certain values (default, empty)\n+        if (_suppressableValue != null) {\n+            if (MARKER_FOR_EMPTY == _suppressableValue) {\n+                if (ser.isEmpty(value)) {\n+                    return;\n+                }\n+            } else if (_suppressableValue.equals(value)) {\n+                return;\n+            }\n+        }\n         jgen.writeFieldName(_name);\n         if (_typeSerializer == null) {\n             ser.serialize(value, jgen, prov);\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n         boolean suppressNulls = false;\n \n         JsonSerialize.Inclusion methodProps = _annotationIntrospector.findSerializationInclusion(am, _outputProps);\n-\n+        \n         if (methodProps != null) {\n             switch (methodProps) {\n             case NON_DEFAULT:\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter.java\n         if (value == bean) {\n             _reportSelfReference(bean);\n         }\n-        if (_suppressableValue != null) {\n-            if ((MARKER_FOR_EMPTY == _suppressableValue) || _suppressableValue.equals(value)) {\n-                return;\n-            }\n-            return;\n-        }\n         JsonSerializer<Object> ser = _serializer;\n         if (ser == null) {\n             Class<?> cls = value.getClass();\n             ser = map.serializerFor(cls);\n             if (ser == null) {\n                 ser = _findAndAddDynamic(map, cls, prov);\n+            }\n+        }\n+        if (_suppressableValue != null) {\n+            if (MARKER_FOR_EMPTY == _suppressableValue) {\n+                if (ser.isEmpty(value)) {\n+                    return;\n+                }\n+            } else if (_suppressableValue.equals(value)) {\n+                return;\n             }\n         }\n \n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestEmptyClass.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestEmptyClass.java\n \n     // for [JACKSON-695]:\n \n-    @JsonSerialize(using=NonZeroSerializer.class, include=JsonSerialize.Inclusion.NON_EMPTY)\n+    @JsonSerialize(using=NonZeroSerializer.class)\n     static class NonZero {\n-        public int value;\n+        public int nr;\n         \n-        public NonZero(int i) { value = i; }\n+        public NonZero(int i) { nr = i; }\n     }\n \n+    @JsonSerialize(include=JsonSerialize.Inclusion.NON_EMPTY)\n     static class NonZeroWrapper {\n         public NonZero value;\n         \n         @Override\n         public void serialize(NonZero value, JsonGenerator jgen, SerializerProvider provider) throws IOException\n         {\n-            jgen.writeNumber(value.value);\n+            jgen.writeNumber(value.nr);\n         }\n \n         @Override\n         public boolean isEmpty(NonZero value) {\n-System.err.println(\"Empty? \"+value);            \n             if (value == null) return true;\n-            return (value.value == 0);\n+            return (value.nr == 0);\n         }\n     }\n     ", "timestamp": 1326434848, "metainfo": ""}