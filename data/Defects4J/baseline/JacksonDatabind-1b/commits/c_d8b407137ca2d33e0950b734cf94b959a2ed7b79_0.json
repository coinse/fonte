{"sha": "d8b407137ca2d33e0950b734cf94b959a2ed7b79", "log": "Implement [Issue#116], make JavaType implement java.lang.reflect.Type", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n  * and as keys for deserializers.\n  *<p>\n  * Instances can (only) be constructed by\n- * <code>com.fasterxml.jackson.databind.TypeFactory</code>\n- * (included in \"jackson-databind\")\n+ * <code>com.fasterxml.jackson.databind.TypeFactory</code>.\n+ *<p>\n+ * Since 2.2 this implements {@link java.lang.reflect.Type} to allow\n+ * it to be pushed through interfaces that only expose that type.\n  */\n public abstract class JavaType\n     extends ResolvedType\n-    implements java.io.Serializable\n+    implements java.io.Serializable, // 2.1\n+        java.lang.reflect.Type // 2.2\n {\n     // for 2.1.0:\n     private static final long serialVersionUID = -5321897246493723158L;\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n         else if (type instanceof ParameterizedType) {\n             resultType = _fromParamType((ParameterizedType) type, context);\n         }\n+        else if (type instanceof JavaType) { // [Issue#116]\n+            return (JavaType) type;\n+        }\n         else if (type instanceof GenericArrayType) {\n             resultType = _fromArrayType((GenericArrayType) type, context);\n         }\n--- a/src/test/java/com/fasterxml/jackson/databind/type/TestAnnotatedClass.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/type/TestAnnotatedClass.java\n      * Test class for checking that field introspection\n      * works as expected\n      */\n+    @SuppressWarnings(\"unused\")\n     static class FieldBean\n     {\n         // static, not to be included:\n         public static boolean DUMMY;\n \n         // not public, no annotations, shouldn't be included\n-        @SuppressWarnings(\"unused\")\n         private long bar;\n \n-        @SuppressWarnings(\"unused\")\n         @JsonProperty\n         private String props;\n     }\n--- a/src/test/java/com/fasterxml/jackson/databind/type/TestJavaType.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/type/TestJavaType.java\n         assertFalse(key.equals(new ClassKey(Integer.class)));\n         assertEquals(String.class.getName(), key.toString());\n     }\n+\n+    // [Issue#116]\n+    public void testJavaTypeAsJLRType()\n+    {\n+        TypeFactory tf = TypeFactory.defaultInstance();\n+        JavaType t1 = tf.constructType(getClass());\n+        // should just get it back as-is:\n+        JavaType t2 = tf.constructType(t1);\n+        assertSame(t1, t2);\n+    }\n }\n ", "timestamp": 1353466874, "metainfo": ""}