{"sha": "9b2ee382ddee0d69eefac72243c05f17711da8c1", "log": "Merge pull request #107 from fge/master  Two fixes", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/node/ObjectNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/ObjectNode.java\n         }\n         return _children.put(fieldName, value);\n     }\n-\n-    /*\n-    /**********************************************************\n-    /* Helper classes\n-    /**********************************************************\n-     */\n-\n-    /**\n-     * For efficiency, let's share the \"no fields\" iterator...\n-     */\n-    protected static class NoFieldsIterator\n-        implements Iterator<Map.Entry<String, JsonNode>>\n-    {\n-        final static NoFieldsIterator instance = new NoFieldsIterator();\n-\n-        private NoFieldsIterator() { }\n-\n-//      @Override\n-        public boolean hasNext() { return false; }\n-//      @Override\n-        public Map.Entry<String,JsonNode> next() { throw new NoSuchElementException(); }\n-\n-//      @Override\n-        public void remove() { // or IllegalOperationException?\n-            throw new IllegalStateException();\n-        }\n-    }\n }\n--- a/src/test/java/com/fasterxml/jackson/databind/TestObjectMapperBeanDeserializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestObjectMapperBeanDeserializer.java\n package com.fasterxml.jackson.databind;\n \n import java.io.*;\n-import java.net.URL;\n+import java.net.URI;\n import java.util.*;\n \n import com.fasterxml.jackson.core.*;\n         int _x;\n         long _y;\n         String _desc;\n-        URL _url;\n+        URI _uri;\n         Collection<?> _misc;\n \n         // Explicit constructor\n-        public TestBean(int x, long y, String desc, URL url, Collection<?> misc)\n+        public TestBean(int x, long y, String desc, URI uri, Collection<?> misc)\n         {\n             _x = x;\n             _y = y;\n             _desc = desc;\n-            _url = url;\n+            _uri = uri;\n             _misc = misc;\n         }\n \n         public String getDesc() { return _desc; }\n         public int getX() { return _x; }\n         public long getY() { return _y; }\n-        public URL getURL() { return _url; }\n+        public URI getURI() { return _uri; }\n         public Collection<?> getMisc() { return _misc; }\n \n         public void setDesc(String value) { _desc = value; }\n         public void setX(int value) { _x = value; }\n         public void setY(long value) { _y = value; }\n-        public void setURL(URL value) { _url = value; }\n+        public void setURI(URI value) { _uri = value; }\n         public void setMisc(Collection<?> value) { _misc = value; }\n \n         @Override\n             return (other._x == _x)\n                 && (other._y == _y)\n                 && (other._desc.equals(_desc))\n-                && (other._url.equals(_url))\n+                && (other._uri.equals(_uri))\n                 && (other._misc.equals(_misc))\n                 ;\n         }\n             sb.append(\"x=\").append(_x);\n             sb.append(\" y=\").append(_y);\n             sb.append(\" desc=\").append(_desc);\n-            sb.append(\" url=\").append(_url);\n+            sb.append(\" uri=\").append(_uri);\n             sb.append(\" misc=\").append(_misc);\n             sb.append(\"]\");\n             return sb.toString();\n         misc.add(42);\n         misc.add(null);\n         misc.add(Boolean.TRUE);\n-        TestBean bean = new TestBean(13, -900L, \"\\\"test\\\"\", new URL(\"http://foobar.com\"), misc);\n+        TestBean bean = new TestBean(13, -900L, \"\\\"test\\\"\", new URI(\"http://foobar.com\"), misc);\n \n         // Hmmh. We probably should use serializer too... easier\n         String json = MAPPER.writeValueAsString(bean);", "timestamp": 1352996013, "metainfo": ""}