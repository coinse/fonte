{"sha": "91c7b7450f396a0130e74e60f455d4fc1bacb7cd", "log": "Add a unit test to reproduce [JACKSON-847]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n      * can be defined.\n      */\n     protected JsonSerializer<Object> _nullKeySerializer = DEFAULT_NULL_KEY_SERIALIZER;\n-    \n+\n     /*\n     /**********************************************************\n     /* State, for non-blueprint instances: generic\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestObjectId.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+// related to [JACKSON-847]\n+public class TestObjectId extends BaseMapTest\n+{\n+    @JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property=\"@id\")\n+    static class ColumnMetadata {\n+      private final String name;\n+      private final String type;\n+      private final String comment;\n+\n+      @JsonCreator\n+      public ColumnMetadata(\n+        @JsonProperty(\"name\") String name,\n+        @JsonProperty(\"type\") String type,\n+        @JsonProperty(\"comment\") String comment\n+      ) {\n+        this.name = name;\n+        this.type = type;\n+        this.comment = comment;\n+      }\n+\n+      @JsonProperty(\"name\")\n+      public String getName() {\n+        return name;\n+      }\n+\n+      @JsonProperty(\"type\")\n+      public String getType() {\n+        return type;\n+      }\n+\n+      @JsonProperty(\"comment\")\n+      public String getComment() {\n+        return comment;\n+      }    \n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+    \n+    private final ObjectMapper MAPPER = new ObjectMapper();\n+    \n+    public void testColumnMetadata() throws Exception {\n+        ColumnMetadata columnMetadata = new ColumnMetadata(\"Billy\", \"employee\", \"comment\");\n+        String serialized = MAPPER.writeValueAsString(columnMetadata);\n+        System.out.println(serialized);\n+        ColumnMetadata deserialized = MAPPER.readValue(serialized, ColumnMetadata.class);\n+        assertNotNull(deserialized);\n+        assertEquals(\"Billy\", deserialized.getName());\n+        assertEquals(\"employee\", deserialized.getType());\n+        assertEquals(\"comment\", deserialized.getComment());\n+        \n+    }\n+}", "timestamp": 1346175489, "metainfo": ""}