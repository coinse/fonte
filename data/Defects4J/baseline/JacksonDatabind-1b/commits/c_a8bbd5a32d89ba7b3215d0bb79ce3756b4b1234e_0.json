{"sha": "a8bbd5a32d89ba7b3215d0bb79ce3756b4b1234e", "log": "Merge pull request #140 from phedny/master  Serialization feature for writing BigDecimal in plain form", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n      * Feature is disabled by default, so that no special handling is done.\n      */\n     WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED(false),\n+\n+    /**\n+     * Feature that determines whether {@link java.math.BigDecimal} entries are\n+     * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent\n+     * values to be written using scientific notation.\n+     * <p>\n+     * Feature is disabled by default.\n+     */\n+    WRITE_BIGDECIMAL_AS_PLAIN(false),\n     \n     /**\n      * Feature that determines whether {@link java.util.Map} entries are first\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n         {\n             // As per [JACKSON-423], handling for BigInteger and BigDecimal was missing!\n             if (value instanceof BigDecimal) {\n-                jgen.writeNumber((BigDecimal) value);\n+                if (provider.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n+                    jgen.writeNumber(((BigDecimal) value).toPlainString());\n+                } else {\n+                    jgen.writeNumber((BigDecimal) value);\n+                }\n             } else if (value instanceof BigInteger) {\n                 jgen.writeNumber((BigInteger) value);\n                 \n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestJdkTypes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestJdkTypes.java\n         map.put(\"pi\", new BigDecimal(PI_STR));\n         String str = MAPPER.writeValueAsString(map);\n         assertEquals(\"{\\\"pi\\\":3.14159265}\", str);\n+    }\n+    \n+    public void testBigDecimalAsPlainString()\n+        throws Exception\n+    {\n+        MAPPER.enable(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN);\n+        Map<String, Object> map = new HashMap<String, Object>();\n+        String PI_STR = \"3.00000000\";\n+        map.put(\"pi\", new BigDecimal(PI_STR));\n+        String str = MAPPER.writeValueAsString(map);\n+        assertEquals(\"{\\\"pi\\\":3.00000000}\", str);\n     }\n     \n     /**", "timestamp": 1357489423, "metainfo": ""}