{"sha": "285e3e8d77ad8aa3fe1b402d790b07e48293a2f8", "log": "Refactoring", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializer.java\n         throws IOException, JsonGenerationException\n     {\n         if (_objectIdWriter != null) {\n-            serializeWithObjectId(bean, jgen, provider);\n+            _serializeWithObjectId(bean, jgen, provider, true);\n             return;\n         }\n         jgen.writeStartObject();\n-        if (_propertyFilterId != null) {\n-            serializeFieldsFiltered(bean, jgen, provider);\n-        } else {\n-            serializeFields(bean, jgen, provider);\n-        }\n-        jgen.writeEndObject();\n-    }\n-\n-    private final void serializeWithObjectId(Object bean,\n-            JsonGenerator jgen, SerializerProvider provider)\n-        throws IOException, JsonGenerationException\n-    {\n-        final ObjectIdWriter w = _objectIdWriter;\n-        WritableObjectId oid = provider.findObjectId(bean, w.generator);\n-        Object id = oid.id;\n-        \n-        if (id != null) { // have seen before; serialize just id\n-            oid.serializer.serialize(id, jgen, provider);\n-            return;\n-        }\n-        // if not, bit more work:\n-        oid.serializer = w.serializer;\n-        oid.id = id = oid.generator.generateId(bean);\n-        // possibly. Or maybe not:\n-        if (w.alwaysAsId) { \n-            oid.serializer.serialize(id, jgen, provider);\n-            return;\n-        }\n-        // If not, need to inject the id:\n-        jgen.writeStartObject();\n-        SerializedString name = w.propertyName;\n-        if (name != null) {\n-            jgen.writeFieldName(name);\n-            w.serializer.serialize(id, jgen, provider);\n-        }\n         if (_propertyFilterId != null) {\n             serializeFieldsFiltered(bean, jgen, provider);\n         } else {\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer.java\n         throws IOException, JsonGenerationException\n     {\n         if (_objectIdWriter != null) {\n-            serializeWithObjectId(bean, jgen, provider);\n+            _serializeWithObjectId(bean, jgen, provider, false);\n             return;\n         }\n         if (_propertyFilterId != null) {\n         } else {\n             serializeFields(bean, jgen, provider);\n         }\n-    }\n-\n-    private final void serializeWithObjectId(Object bean, JsonGenerator jgen, SerializerProvider provider)\n-        throws IOException, JsonGenerationException\n-    {\n-        final ObjectIdWriter w = _objectIdWriter;\n-        WritableObjectId oid = provider.findObjectId(bean, w.generator);\n-        Object id = oid.id;\n-        \n-        if (id != null) { // have seen before; serialize just id\n-            oid.serializer.serialize(id, jgen, provider);\n-            return;\n-        }\n-        // if not, bit more work:\n-        oid.serializer = w.serializer;\n-        oid.id = id = oid.generator.generateId(bean);\n-        // possibly. Or maybe not:\n-        if (w.alwaysAsId) { \n-            oid.serializer.serialize(id, jgen, provider);\n-            return;\n-        }\n-        \n-        jgen.writeStartObject();\n-        SerializedString name = w.propertyName;\n-        if (name != null) {\n-            jgen.writeFieldName(name);\n-            w.serializer.serialize(id, jgen, provider);\n-        }\n-        if (_propertyFilterId != null) {\n-            serializeFieldsFiltered(bean, jgen, provider);\n-        } else {\n-            serializeFields(bean, jgen, provider);\n-        }\n-        jgen.writeEndObject();\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n         }\n     }\n \n-    private final void _serializeWithObjectId(Object bean,\n+    protected final void _serializeWithObjectId(Object bean,\n+            JsonGenerator jgen, SerializerProvider provider,\n+            boolean startEndObject)\n+        throws IOException, JsonGenerationException\n+    {\n+        final ObjectIdWriter w = _objectIdWriter;\n+        WritableObjectId oid = provider.findObjectId(bean, w.generator);\n+        Object id = oid.id;\n+        \n+        if (id != null) { // have seen before; serialize just id\n+            oid.serializer.serialize(id, jgen, provider);\n+            return;\n+        }\n+        // if not, bit more work:\n+        oid.serializer = w.serializer;\n+        oid.id = id = oid.generator.generateId(bean);\n+        // possibly. Or maybe not:\n+        if (w.alwaysAsId) { \n+            oid.serializer.serialize(id, jgen, provider);\n+            return;\n+        }\n+        // If not, need to inject the id:\n+        if (startEndObject) {\n+            jgen.writeStartObject();\n+        }\n+        SerializedString name = w.propertyName;\n+        if (name != null) {\n+            jgen.writeFieldName(name);\n+            w.serializer.serialize(id, jgen, provider);\n+        }\n+        if (_propertyFilterId != null) {\n+            serializeFieldsFiltered(bean, jgen, provider);\n+        } else {\n+            serializeFields(bean, jgen, provider);\n+        }\n+        if (startEndObject) {\n+            jgen.writeEndObject();\n+        }\n+    }\n+    \n+    protected final void _serializeWithObjectId(Object bean,\n             JsonGenerator jgen, SerializerProvider provider,\n             TypeSerializer typeSer)\n         throws IOException, JsonGenerationException", "timestamp": 1362978199, "metainfo": ""}