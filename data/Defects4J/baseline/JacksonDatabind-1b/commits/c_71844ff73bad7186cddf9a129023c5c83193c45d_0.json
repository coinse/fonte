{"sha": "71844ff73bad7186cddf9a129023c5c83193c45d", "log": "Removed NumberType.SHORT", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/node/ShortNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/ShortNode.java\n     @Override public JsonToken asToken() { return JsonToken.VALUE_NUMBER_INT; }\n \n     @Override\n-    public JsonParser.NumberType numberType() { return JsonParser.NumberType.SHORT; }\n+    public JsonParser.NumberType numberType() { return JsonParser.NumberType.INT; }\t\t\t// should be SHORT\n \n \n     @Override\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n         {\n             JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat(typeHint);\n             if (v2 != null) {\n-                v2.numberType(JsonParser.NumberType.SHORT);\n+                v2.numberType(JsonParser.NumberType.INT);\t\t\t// should be SHORT\n             }\n         }\n     }\n--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n         public NumberType getNumberType() throws IOException, JsonParseException\n         {\n             Number n = getNumberValue();\n-            if (n instanceof Short) return NumberType.SHORT;\n+            if (n instanceof Short) return NumberType.INT;\t\t// should be SHORT\n             if (n instanceof Integer) return NumberType.INT;\n             if (n instanceof Long) return NumberType.LONG;\n             if (n instanceof Double) return NumberType.DOUBLE;\n--- a/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n         assertStandardEquals(n);\n         assertTrue(0 != n.hashCode());\n         assertEquals(JsonToken.VALUE_NUMBER_INT, n.asToken());\n-        assertEquals(JsonParser.NumberType.SHORT, n.numberType());\n+        assertEquals(JsonParser.NumberType.INT, n.numberType());\t// should be SHORT\n         assertEquals(1, n.intValue());\n         assertEquals(1L, n.longValue());\n         assertEquals(BigDecimal.ONE, n.decimalValue());", "timestamp": 1365850028, "metainfo": ""}