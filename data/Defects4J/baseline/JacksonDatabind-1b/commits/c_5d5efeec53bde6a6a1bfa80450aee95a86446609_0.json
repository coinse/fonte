{"sha": "5d5efeec53bde6a6a1bfa80450aee95a86446609", "log": "Add a unit test for [Issue#89]", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestCustomSerializers.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestCustomSerializers.java\n         SimpleModule module = new SimpleModule(\"test\", Version.unknownVersion());\n         module.addSerializer(new StdDelegatingSerializer(Immutable.class,\n                 new Converter<Immutable, Map<String,Integer>>() {\n-                    @Override\n+                    //@Override\n                     public Map<String, Integer> convert(Immutable value)\n                     {\n                         HashMap<String,Integer> map = new LinkedHashMap<String,Integer>();\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestFiltering.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestFiltering.java\n         public String a = \"a\";\n         public String b = \"b\";\n     }\n+\n     \n+    // [Issue#89]\n+    static class Pod\n+    {\n+        protected String username;\n+\n+//        @JsonProperty(value = \"user_password\")\n+        protected String userPassword;\n+\n+        public String getUsername() {\n+            return username;\n+        }\n+\n+        public void setUsername(String value) {\n+            this.username = value;\n+        }\n+\n+        @JsonIgnore\n+        @JsonProperty(value = \"user_password\")\n+        public java.lang.String getUserPassword() {\n+            return userPassword;\n+        }\n+\n+        @JsonProperty(value = \"user_password\")\n+        public void setUserPassword(String value) {\n+            this.userPassword = value;\n+        }\n+\n+    }    \n     /*\n     /**********************************************************\n     /* Unit tests\n     /**********************************************************\n      */\n-\n+    \n     public void testSimpleInclusionFilter() throws Exception\n     {\n         ObjectMapper mapper = new ObjectMapper();\n         FilterProvider prov = new SimpleFilterProvider().setDefaultFilter(SimpleBeanPropertyFilter.filterOutAllExcept(\"b\"));\n         assertEquals(\"{\\\"b\\\":\\\"b\\\"}\", mapper.writer(prov).writeValueAsString(new Bean()));\n     }\n+\n+    // [Issue#89] combining @JsonIgnore, @JsonProperty\n+    public void testIssue89() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        Pod pod = new Pod();\n+        pod.username = \"Bob\";\n+        pod.userPassword = \"s3cr3t!\";\n+\n+        String json = mapper.writeValueAsString(pod);\n+\n+        assertEquals(\"{\\\"username\\\":\\\"Bob\\\"}\", json);\n+\n+        Pod pod2 = mapper.readValue(\"{\\\"username\\\":\\\"Bill\\\",\\\"user_password\\\":\\\"foo!\\\"}\", Pod.class);\n+        assertEquals(\"Bill\", pod2.username);\n+        assertEquals(\"foo!\", pod2.userPassword);\n+    }\n }", "timestamp": 1349285699, "metainfo": ""}