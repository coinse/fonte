{"sha": "88ae9dc8de0f5327a7c0ca72232dd8e3da6e5446", "log": "Fix [Issue#117]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n         ValueInstantiator inst;\n         \n         if (instDef instanceof ValueInstantiator) {\n-            inst = (ValueInstantiator) instDef;\n-        } else {\n-            if (!(instDef instanceof Class)) {\n-                throw new IllegalStateException(\"AnnotationIntrospector returned key deserializer definition of type \"\n-                        +instDef.getClass().getName()\n-                        +\"; expected type KeyDeserializer or Class<KeyDeserializer> instead\");\n-            }\n-            Class<?> instClass = (Class<?>)instDef;\n-            if (instClass == NoClass.class) {\n-                return null;\n-            }\n-            if (!ValueInstantiator.class.isAssignableFrom(instClass)) {\n-                throw new IllegalStateException(\"AnnotationIntrospector returned Class \"+instClass.getName()\n-                        +\"; expected Class<ValueInstantiator>\");\n-            }\n-            HandlerInstantiator hi = config.getHandlerInstantiator();\n-            if (hi != null) {\n-                inst = hi.valueInstantiatorInstance(config, annotated, instClass);\n-            } else {\n-                inst = (ValueInstantiator) ClassUtil.createInstance(instClass,\n-                        config.canOverrideAccessModifiers());\n-            }\n-        }\n-        // not resolvable or contextual, just return:\n-        return inst;\n+            return (ValueInstantiator) instDef;\n+        }\n+        if (!(instDef instanceof Class)) {\n+            throw new IllegalStateException(\"AnnotationIntrospector returned key deserializer definition of type \"\n+                    +instDef.getClass().getName()\n+                    +\"; expected type KeyDeserializer or Class<KeyDeserializer> instead\");\n+        }\n+        Class<?> instClass = (Class<?>)instDef;\n+        if (instClass == NoClass.class) {\n+            return null;\n+        }\n+        if (!ValueInstantiator.class.isAssignableFrom(instClass)) {\n+            throw new IllegalStateException(\"AnnotationIntrospector returned Class \"+instClass.getName()\n+                    +\"; expected Class<ValueInstantiator>\");\n+        }\n+        HandlerInstantiator hi = config.getHandlerInstantiator();\n+        if (hi != null) {\n+            inst = hi.valueInstantiatorInstance(config, annotated, instClass);\n+            if (inst != null) {\n+                return inst;\n+            }\n+        }\n+        return (ValueInstantiator) ClassUtil.createInstance(instClass,\n+                config.canOverrideAccessModifiers());\n     }\n     \n     protected void _addDeserializerConstructors\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java\n     {\n         Class<?> implClass = objectIdInfo.getGeneratorType();\n         HandlerInstantiator hi = _config.getHandlerInstantiator();\n-        ObjectIdGenerator<?> gen;\n-\n-        if (hi != null) {\n-            gen = hi.objectIdGeneratorInstance(_config, annotated, implClass);\n-        } else {\n+        ObjectIdGenerator<?> gen = (hi == null) ? null : \n+            hi.objectIdGeneratorInstance(_config, annotated, implClass);\n+        if (gen == null) {\n             gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                     _config.canOverrideAccessModifiers());\n         }\n                 throw new IllegalStateException(\"AnnotationIntrospector returned Class \"+deserClass.getName()+\"; expected Class<JsonDeserializer>\");\n             }\n             HandlerInstantiator hi = _config.getHandlerInstantiator();\n-            if (hi != null) {\n-                deser = hi.deserializerInstance(_config, annotated, deserClass);\n-            } else {\n+            deser = (hi == null) ? null : hi.deserializerInstance(_config, annotated, deserClass);\n+            if (deser == null) {\n                 deser = (JsonDeserializer<?>) ClassUtil.createInstance(deserClass,\n                         _config.canOverrideAccessModifiers());\n             }\n                         +\"; expected Class<KeyDeserializer>\");\n             }\n             HandlerInstantiator hi = _config.getHandlerInstantiator();\n-            if (hi != null) {\n-                deser = hi.keyDeserializerInstance(_config, annotated, deserClass);\n-            } else {\n+            deser = (hi == null) ? null : hi.keyDeserializerInstance(_config, annotated, deserClass);\n+            if (deser == null) {\n                 deser = (KeyDeserializer) ClassUtil.createInstance(deserClass,\n                         _config.canOverrideAccessModifiers());\n             }\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n         }\n         HandlerInstantiator hi = _config.getHandlerInstantiator();\n         if (hi != null) {\n-            return hi.namingStrategyInstance(_config, _classDef, namingClass);\n+            PropertyNamingStrategy pns = hi.namingStrategyInstance(_config, _classDef, namingClass);\n+            if (pns != null) {\n+                return pns;\n+            }\n         }\n         return (PropertyNamingStrategy) ClassUtil.createInstance(namingClass,\n                     _config.canOverrideAccessModifiers());\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n     {\n         Class<?> implClass = objectIdInfo.getGeneratorType();\n         HandlerInstantiator hi = _config.getHandlerInstantiator();\n-        ObjectIdGenerator<?> gen;\n-\n-        if (hi != null) {\n-            gen =  hi.objectIdGeneratorInstance(_config, annotated, implClass);\n-        } else {\n+        ObjectIdGenerator<?> gen = (hi == null) ? null : hi.objectIdGeneratorInstance(_config, annotated, implClass);\n+        if (gen == null) {\n             gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                     _config.canOverrideAccessModifiers());\n         }\n                         +serClass.getName()+\"; expected Class<JsonSerializer>\");\n             }\n             HandlerInstantiator hi = _config.getHandlerInstantiator();\n-            if (hi != null) {\n-                ser = hi.serializerInstance(_config, annotated, serClass);\n-            } else {\n+            ser = (hi == null) ? null : hi.serializerInstance(_config, annotated, serClass);\n+            if (ser == null) {\n                 ser = (JsonSerializer<?>) ClassUtil.createInstance(serClass,\n                         _config.canOverrideAccessModifiers());\n             }", "timestamp": 1353528426, "metainfo": ""}