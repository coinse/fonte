{"sha": "d36adebd3547279b709960c902c3fb7b89a9a4ef", "log": "Added a formatter test for options with a null or empty named argument  ", "commit": "\n--- a/src/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli/HelpFormatter.java\n         }\n \n         // if the Option has a value\n-        if (option.hasArg() && (option.getArgName() != null))\n+        if (option.hasArg() && option.hasArgName())\n         {\n             buff.append(\" <\").append(option.getArgName()).append(\">\");\n         }\n--- a/src/test/org/apache/commons/cli/HelpFormatterTest.java\n+++ b/src/test/org/apache/commons/cli/HelpFormatterTest.java\n         assertEquals(\"usage: app -a | -b | -c\" + EOL, out.toString());\n     }\n \n+    public void testPrintOptionWithEmptyArgNameUsage() {\n+        Option option = new Option(\"f\", true, null);\n+        option.setArgName(\"\");\n+        option.setRequired(true);\n+\n+        Options options = new Options();\n+        options.addOption(option);\n+\n+        StringWriter out = new StringWriter();\n+\n+        HelpFormatter formatter = new HelpFormatter();\n+        formatter.printUsage(new PrintWriter(out), 80, \"app\", options);\n+\n+        assertEquals(\"usage: app -f\" + EOL, out.toString());\n+    }\n+\n }", "timestamp": 1212142969, "metainfo": ""}