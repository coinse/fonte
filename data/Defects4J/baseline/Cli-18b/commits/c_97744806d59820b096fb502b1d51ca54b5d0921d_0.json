{"sha": "97744806d59820b096fb502b1d51ca54b5d0921d", "log": "Applying the patch from CLI-135 to put the public addValue method back, even though it just throws an exception. This maintains binary compatibility, for some level of compatibility.   ", "commit": "\n--- a/src/java/org/apache/commons/cli/Option.java\n+++ b/src/java/org/apache/commons/cli/Option.java\n      * \n      * @param value is a/the value of this Option\n      */\n-    void addValue(String value)\n+    void addValueForProcessing(String value)\n     {\n         switch (numberOfArgs)\n         {\n         this.values.clear();\n     }\n \n+    public boolean addValue(Object object) {\n+        throw new UnsupportedOperationException(\n+           \"The addValue method is not intended for client use. \" + \n+           \"Subclasses should use the addValueForProcessing method instead. \"\n+           );\n+    }\n+\n }\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n                     {\n                         try\n                         {\n-                            opt.addValue(value);\n+                            opt.addValueForProcessing(value);\n                         }\n                         catch (RuntimeException exp)\n                         {\n             // found a value\n             try\n             {\n-                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n+                opt.addValueForProcessing( Util.stripLeadingAndTrailingQuotes(str) );\n             }\n             catch (RuntimeException exp)\n             {\n--- a/src/test/org/apache/commons/cli/OptionTest.java\n+++ b/src/test/org/apache/commons/cli/OptionTest.java\n  */\n public class OptionTest extends TestCase {\n \n+   private static class TestOption extends Option {\n+        public TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException {\n+            super(opt, hasArg, description);\n+        }\n+        public boolean addValue(String value) {\n+            addValueForProcessing(value);\n+            return true;\n+        }\n+   }\n+\n    public void testClear() {\n-       Option option = new Option(\"x\", true, \"\");\n+       TestOption option = new TestOption(\"x\", true, \"\");\n        assertEquals(0, option.getValuesList().size());\n        option.addValue(\"a\");\n        assertEquals(1, option.getValuesList().size());\n \n     // See http://issues.apache.org/jira/browse/CLI-21\n     public void testClone() throws CloneNotSupportedException {\n-        Option a = new Option(\"a\", true, \"\");\n-        Option b = (Option) a.clone();\n+        TestOption a = new TestOption(\"a\", true, \"\");\n+        TestOption b = (TestOption) a.clone();\n         assertEquals(a, b);\n         assertNotSame(a, b);\n         a.setDescription(\"a\");", "timestamp": 1183100924, "metainfo": ""}