{"sha": "0e37cba87eea9d89156c144e3d4298c9c9ed04d4", "log": "Don't clone the element's classnames  Fixes #278", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n     @Override\n     public Element clone() {\n         Element clone = (Element) super.clone();\n-        clone.classNames(); // creates linked set of class names from class attribute\n+        clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames\n         return clone;\n     }\n }\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertEquals(\"<div><p>One</p><p><span>Two</span></p></div><p><span>Two</span><span>Three</span></p>\", TextUtil.stripNewlines(doc.body().html()));\n     }\n \n+    @Test public void testClonesClassnames() {\n+        Document doc = Jsoup.parse(\"<div class='one two'></div>\");\n+        Element div = doc.select(\"div\").first();\n+        Set<String> classes = div.classNames();\n+        assertEquals(2, classes.size());\n+        assertTrue(classes.contains(\"one\"));\n+        assertTrue(classes.contains(\"two\"));\n+\n+        Element copy = div.clone();\n+        Set<String> copyClasses = copy.classNames();\n+        assertEquals(2, copyClasses.size());\n+        assertTrue(copyClasses.contains(\"one\"));\n+        assertTrue(copyClasses.contains(\"two\"));\n+        copyClasses.add(\"three\");\n+        copyClasses.remove(\"one\");\n+\n+        assertTrue(classes.contains(\"one\"));\n+        assertFalse(classes.contains(\"three\"));\n+        assertFalse(copyClasses.contains(\"one\"));\n+        assertTrue(copyClasses.contains(\"three\"));\n+\n+        assertEquals(\"\", div.html());\n+        assertEquals(\"\", copy.html());\n+    }\n+\n     @Test public void testTagNameSet() {\n         Document doc = Jsoup.parse(\"<div><i>Hello</i>\");\n         doc.select(\"i\").first().tagName(\"em\");", "timestamp": 1356300185, "metainfo": ""}