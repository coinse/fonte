{"sha": "fa07dea5850eb11bb7b4dc06823802156b89baaf", "log": "CSV-71 - Add convenience Methods to CSVLexer Use convenience fields from Lexer parent class; missed one method replacement earlier  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVLexer.java\n+++ b/src/main/java/org/apache/commons/csv/CSVLexer.java\n         c = in.readAgain();\n \n         //  empty line detection: eol AND (last char was EOL or beginning)\n-        if (format.isEmptyLinesIgnored()) {\n+        if (emptyLinesIgnored) {\n             while (eol\n                     && (lastChar == '\\n' || lastChar == '\\r' || lastChar == ExtendedBufferedReader.UNDEFINED)\n                     && !isEndOfFile(lastChar)) {\n         }\n \n         // did we reach eof during the last iteration already ? EOF\n-        if (isEndOfFile(lastChar) || (lastChar != format.getDelimiter() && isEndOfFile(c))) {\n+        if (isEndOfFile(lastChar) || (isDelimiter(lastChar) && isEndOfFile(c))) {\n             tkn.type = EOF;\n             return tkn;\n         }\n         //  important: make sure a new char gets consumed in each iteration\n         while (!tkn.isReady && tkn.type != EOF) {\n             // ignore whitespaces at beginning of a token\n-            if (format.isLeadingSpacesIgnored()) {\n+            if (leadingSpacesIgnored) {\n                 while (isWhitespace(c) && !eol) {\n                     wsBuf.append((char) c);\n                     c = in.read();\n             } else {\n                 // next token must be a simple token\n                 // add removed blanks when not ignoring whitespace chars...\n-                if (!format.isLeadingSpacesIgnored()) {\n+                if (!leadingSpacesIgnored) {\n                     tkn.content.append(wsBuf);\n                 }\n                 simpleTokenLexer(tkn, c);\n             c = in.read();\n         }\n \n-        if (format.isTrailingSpacesIgnored()) {\n+        if (trailingSpacesIgnored) {\n             trimTrailingSpaces(tkn.content);\n         }\n ", "timestamp": 1332439243, "metainfo": ""}