{"sha": "9db51cf756951fa62a7670b70d314af2f0ffc197", "log": "Implemented getElementsByTagName", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n \n /**\n \n     public Tag getTag() {\n         return tag;\n+    }\n+\n+    public String id() {\n+        return attr(\"id\");\n     }\n \n     @Override\n         return null;\n     }\n \n+    public List<Element> getElementsByTag(String tagName) {\n+        Validate.notEmpty(tagName);\n+        tagName = tagName.toLowerCase().trim();\n+\n+        List<Element> elements = new ArrayList<Element>();\n+        if (tag.getName().equals(tagName))\n+            elements.add(this);\n+        for (Element child : elementChildren) {\n+            elements.addAll(child.getElementsByTag(tagName));\n+        }\n+        return elements;\n+    }\n+\n \n }\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n import org.jsoup.nodes.*;\n \n import java.util.LinkedList;\n-import java.util.Queue;\n \n /**\n  Parses a {@link TokenStream} into a {@link Document}\n         this.tokenStream = tokenStream;\n         this.stack = new LinkedList<Element>();\n         this.attributeParser = new AttributeParser();\n+    }\n+\n+    public static Document parse(String html) {\n+        TokenStream ts = TokenStream.create(html);\n+        Parser parser = new Parser(ts);\n+        return parser.parse();\n     }\n \n     public Document parse() {\n--- /dev/null\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n+package org.jsoup.nodes;\n+\n+import org.jsoup.JSoup;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+import java.util.List;\n+\n+/**\n+ * Tests for Element (DOM stuff mostly).\n+ *\n+ * @author Jonathan Hedley\n+ */\n+public class ElementTest {\n+    @Test\n+    public void getElementsByTagName() {\n+        Document doc = JSoup.parse(\"<div id=div1><p>Hello</p><p>Another</p><div id=div2><img src=foo.png></div></div>\");\n+        List<Element> divs = doc.getElementsByTag(\"div\");\n+        assertEquals(2, divs.size());\n+        assertEquals(\"div1\", divs.get(0).id());\n+        assertEquals(\"div2\", divs.get(1).id());\n+\n+        List<Element> ps = doc.getElementsByTag(\"p\");\n+        assertEquals(2, ps.size());\n+        assertEquals(\"Hello\", ((TextNode) ps.get(0).childNode(0)).getWholeText());\n+        assertEquals(\"Another\", ((TextNode) ps.get(1).childNode(0)).getWholeText());\n+\n+        List<Element> imgs = doc.getElementsByTag(\"img\");\n+        assertEquals(\"foo.png\", imgs.get(0).attr(\"src\"));\n+    }\n+\n+}", "timestamp": 1309605100, "metainfo": ""}