{"sha": "84056ded0760b1ea9a2eb816d6fc0170b8d7f3cd", "log": "Implemented query string from data", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n             Validate\n                 .isTrue(protocol.equals(\"http\") || protocol.equals(\"https\"), \"Only http & https protocols supported\");\n \n+            if (req.method() == Connection.Method.GET && req.data().size() > 0)\n+                url = getRequestUrl(req); // appends query string\n+            \n             HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n             conn.setRequestMethod(req.method().name());\n             conn.setInstanceFollowRedirects(true);\n             }\n             return sb.toString();\n         }\n+        \n+        private static URL getRequestUrl(Connection.Request req) throws IOException {\n+            URL in = req.url();\n+            StringBuilder url = new StringBuilder();\n+            boolean first = true;\n+            // reconstitute the query, ready for appends\n+            url\n+                .append(in.getProtocol())\n+                .append(\"://\")\n+                .append(in.getAuthority()) // includes host, port\n+                .append(in.getPath())\n+                .append(\"?\");\n+            if (in.getQuery() != null) {\n+                url.append(in.getQuery());\n+                first = false;\n+            }\n+            for (Connection.KeyVal keyVal : req.data()) {\n+                if (!first)\n+                    url.append('&');\n+                else\n+                    first = false;\n+                url\n+                    .append(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset))\n+                    .append('=')\n+                    .append(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));\n+            }\n+            return new URL(url.toString());\n+        }\n     }\n \n     public static class KeyVal implements Connection.KeyVal {", "timestamp": 1309605118, "metainfo": ""}