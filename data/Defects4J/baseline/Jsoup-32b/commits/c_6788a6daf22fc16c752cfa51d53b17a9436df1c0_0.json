{"sha": "6788a6daf22fc16c752cfa51d53b17a9436df1c0", "log": "Parse <frameset> outside of <body>", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n         // head can only contain a few. if more than head in here, modify to have a list of valids\n         // TODO: (could solve this with walk for ancestor)\n         if (this.tagName.equals(\"head\")) {\n-            if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") ||\n+            if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"noscript\") || child.tagName.equals(\"link\") ||\n                     child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n                 return true;\n             }\n         createBlock(\"HTML\").setAncestor(new String[0]); // specific includes not impl\n         createBlock(\"HEAD\").setAncestor(\"HTML\"); // specific includes not impl: SCRIPT, STYLE, META, LINK, OBJECT\n         createBlock(\"BODY\").setAncestor(\"HTML\"); // specific includes not impl\n+        createBlock(\"FRAMESET\").setAncestor(\"HTML\");\n \n         // head\n         // all ancestors set to (head, body): so implicitly create head, but allow in body\n         createInline(\"SCRIPT\").setAncestor(\"HEAD\", \"BODY\").setContainDataOnly();\n+        createInline(\"NOSCRIPT\").setAncestor(\"HEAD\", \"BODY\");\n         createInline(\"STYLE\").setAncestor(\"HEAD\", \"BODY\").setContainDataOnly();\n         createInline(\"META\").setAncestor(\"HEAD\", \"BODY\").setEmpty();\n         createBlock(\"LINK\").setAncestor(\"HEAD\", \"BODY\").setEmpty(); // only within head\n         createInline(\"OBJECT\").setAncestor(\"HEAD\", \"BODY\"); // flow (block/inline) or param\n         createInline(\"TITLE\").setAncestor(\"HEAD\", \"BODY\").setContainDataOnly();\n         createInline(\"BASE\").setAncestor(\"HEAD\", \"BODY\").setEmpty();\n+\n+        createBlock(\"FRAME\").setAncestor(\"FRAMESET\").setEmpty();\n+        createBlock(\"NOFRAMES\").setAncestor(\"FRAMESET\").setContainDataOnly();\n \n \n \n         createBlock(\"OL\");\n         createBlock(\"PRE\").setContainInlineOnly().setPreserveWhitespace();\n         createBlock(\"DIV\");\n-        createBlock(\"NOSCRIPT\");\n         createBlock(\"BLOCKQUOTE\");\n         createBlock(\"HR\").setEmpty();\n         createBlock(\"ADDRESS\").setContainInlineOnly();\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         assertEquals(\"Zug\", dts.get(1).nextElementSibling().text());\n     }\n \n+    @Test public void handlesFrames() {\n+        String h = \"<html><head><script></script><noscript></noscript></head><frameset><frame src=foo></frame><frame src=foo></frameset></html>\";\n+        Document doc = Jsoup.parse(h);\n+        assertEquals(\"<html><head><script></script><noscript></noscript></head><frameset><frame src=\\\"foo\\\" /><frame src=\\\"foo\\\" /></frameset></html>\",\n+                TextUtil.stripNewlines(doc.html()));\n+    }\n+\n \n }", "timestamp": 1309605108, "metainfo": ""}