{"sha": "713e9c5382476d5e309ac4e18b1dba8f060f3837", "log": "Make some methods package-protected to avoid the need for synthetic accessors. TODO consider whether to do so for the fields as well  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n      *            the header\n      * @throws IllegalArgumentException if the delimiter is a line break character\n      */\n-    private CSVFormat(final char delimiter, final Character quoteChar, final Quote quotePolicy, final Character commentStart, final Character escape, final\n-                    boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String lineSeparator,\n- final String[] header)\n+    // package protected to give access without needing a synthetic accessor\n+    CSVFormat(final char delimiter, final Character quoteChar, final Quote quotePolicy, final Character commentStart, final Character escape,\n+              final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String lineSeparator, final String[] header)\n     {\n         if (isLineBreak(delimiter))\n         {\n      *\n      * @return true if <code>c</code> is a line break character\n      */\n-    private static boolean isLineBreak(final Character c) {\n+    // package protected to give access without needing a synthetic accessor\n+    static boolean isLineBreak(final Character c) {\n         return c != null && isLineBreak(c.charValue());\n     }\n \n      *\n      * @return true if <code>c</code> is a line break character\n      */\n-    private static boolean isLineBreak(final char c) {\n+    // package protected to give access without needing a synthetic accessor\n+    static boolean isLineBreak(final char c) {\n         return c == LF || c == CR;\n     }\n \n          * @param format\n          *            The format to use values from\n          */\n-        private CSVFormatBuilder(CSVFormat format) {\n+        @SuppressWarnings(\"synthetic-access\") // TODO fields could be made package-protected\n+        // package protected to give access without needing a synthetic accessor\n+        CSVFormatBuilder(CSVFormat format) {\n             this(format.delimiter, format.quoteChar, format.quotePolicy,\n                     format.commentStart, format.escape,\n                     format.ignoreSurroundingSpaces, format.ignoreEmptyLines,\n          *            the char used for value separation, must not be a line break character\n          * @throws IllegalArgumentException if the delimiter is a line break character\n          */\n-        private CSVFormatBuilder(final char delimiter){\n+        // package protected to give access without needing a synthetic accessor\n+        CSVFormatBuilder(final char delimiter){\n             this(delimiter, null, null, null, null, false, false, null, null);\n         }\n ", "timestamp": 1353453741, "metainfo": ""}