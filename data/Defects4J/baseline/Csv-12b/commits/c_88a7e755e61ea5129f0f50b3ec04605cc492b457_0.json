{"sha": "88a7e755e61ea5129f0f50b3ec04605cc492b457", "log": "CSV-113 Check whether ISE/IAE are being used appropriately  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n      * @throws IllegalArgumentException\n      *             If the parameters of the format are inconsistent or if either reader or format are null.\n      * @throws IOException\n-     *             If an I/O error occurs\n+     *             If there is a problem reading the header or skipping the first record\n      */\n     public CSVParser(final Reader reader, final CSVFormat format) throws IOException {\n         Assertions.notNull(reader, \"reader\");\n      * Initializes the name to index mapping if the format defines a header.\n      *\n      * @return null if the format has no header.\n+     * @throws IOException if there is a problem reading the header or skipping the first record\n      */\n     private Map<String, Integer> initializeHeader() throws IOException {\n         Map<String, Integer> hdrMap = null;\n             if (header != null) {\n                 for (int i = 0; i < header.length; i++) {\n                     if (hdrMap.containsKey(header[i])) {\n-                        throw new IllegalStateException(\"The header contains duplicate names: \" +\n+                        throw new IllegalArgumentException(\"The header contains duplicate names: \" +\n                                 Arrays.toString(header));\n                     }\n                     hdrMap.put(header[i], Integer.valueOf(i));\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n         parser.close();\n     }\n \n-    @Test(expected = IllegalStateException.class)\n+    @Test(expected = IllegalArgumentException.class)\n     public void testDuplicateHeaderEntries() throws Exception {\n         CSVParser.parse(\"a,b,a\\n1,2,3\\nx,y,z\", CSVFormat.DEFAULT.withHeader(new String[]{}));\n     }", "timestamp": 1399500776, "metainfo": ""}