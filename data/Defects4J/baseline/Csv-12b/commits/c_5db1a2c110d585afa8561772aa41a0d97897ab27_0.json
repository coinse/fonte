{"sha": "5db1a2c110d585afa8561772aa41a0d97897ab27", "log": "Make checkstyle happy: remove trailing white spaces, break line that was longer than 120 chars.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n  * </p>\n  * <pre>CSVFormat.EXCEL.withHeader(&quot;Col1&quot;, &quot;Col2&quot;, &quot;Col3&quot;);</pre>\n  * <p>\n- * Calling {@link #withHeader(String...)} let's you use the given names to address values in a {@link CSVRecord}, and \n+ * Calling {@link #withHeader(String...)} let's you use the given names to address values in a {@link CSVRecord}, and\n  * assumes that your CSV source does not contain a first record that also defines column names. If it does, then\n- * you are overriding this metadata with your names and you should skip the first record by calling \n- * {@link #withSkipHeaderRecord(boolean)} with {@code true}. \n+ * you are overriding this metadata with your names and you should skip the first record by calling\n+ * {@link #withSkipHeaderRecord(boolean)} with {@code true}.\n  * </p>\n  * <h4>Parsing</h4>\n  * <p>\n  * </p>\n  * <h4>Referencing columns safely</h4>\n  * <p>\n- * If your source contains a header record, you can simplify your code and safely reference columns, \n+ * If your source contains a header record, you can simplify your code and safely reference columns,\n  * by using {@link #withHeader(String...)} with no arguments:\n  * </p>\n  * <pre>CSVFormat.EXCEL.withHeader();</pre>\n  * <p>\n  * This causes the parser to read the first record and use its values as column names.\n  * Then, call one of the {@link CSVRecord} get method that takes a String column name argument:\n- * </p> \n+ * </p>\n  * <pre>String value = record.get(&quot;Col1&quot;);</pre>\n  * <p>\n  * This makes your code impervious to changes in column order in the CSV file.\n  * </p>\n- * <h4>Notes</h4> \n+ * <h4>Notes</h4>\n  * <p>\n  * This class is immutable.\n  * </p>\n      * <li>withIgnoreEmptyLines(true)</li>\n      * </ul>\n      */\n-    public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, false);\n+    public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null,\n+                                                            false, true, CRLF, null, null, false);\n \n     /**\n      * Comma separated format as defined by <a href=\"http://tools.ietf.org/html/rfc4180\">RFC 4180</a>.", "timestamp": 1376132674, "metainfo": ""}