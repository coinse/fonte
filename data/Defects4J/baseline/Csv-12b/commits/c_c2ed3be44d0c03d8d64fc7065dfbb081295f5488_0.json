{"sha": "c2ed3be44d0c03d8d64fc7065dfbb081295f5488", "log": "Add API org.apache.commons.csv.CSVParser.getRecords(T).  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n import java.nio.charset.Charset;\n import java.util.ArrayList;\n import java.util.Iterator;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.NoSuchElementException;\n                     + \"\\\"foo baar\\\", b,\\n\"\n                     // + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\\\\\"\\\",d,e\\n\";\n                     + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\"\\\"\\\",d,e\\n\";   // changed to use standard CSV escaping\n+\n+    private static final String CSV_INPUT_1 = \"a,b,c,d\";\n \n     private static final String[][] RESULT = {\n             {\"a\", \"b\", \"c\", \"d\"},\n     @Test\n     public void testGetLineNumberWithLF() throws Exception {\n         this.validateLineNumbers(String.valueOf(LF));\n+    }\n+\n+    @Test\n+    public void testGetOneLine() throws IOException {\n+        final CSVParser parser = CSVParser.parse(CSV_INPUT_1, CSVFormat.DEFAULT);\n+        final CSVRecord record = parser.getRecords().get(0);\n+        assertArrayEquals(RESULT[0], record.values());\n+        parser.close();\n+    }\n+\n+    @Test\n+    public void testGetOneLineCustomCollection() throws IOException {\n+        final CSVParser parser = CSVParser.parse(CSV_INPUT_1, CSVFormat.DEFAULT);\n+        final CSVRecord record = parser.getRecords(new LinkedList<CSVRecord>()).getFirst();\n+        assertArrayEquals(RESULT[0], record.values());\n+        parser.close();\n     }\n \n     @Test", "timestamp": 1396644286, "metainfo": ""}