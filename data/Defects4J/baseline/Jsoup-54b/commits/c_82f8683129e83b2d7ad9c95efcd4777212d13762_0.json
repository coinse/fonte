{"sha": "82f8683129e83b2d7ad9c95efcd4777212d13762", "log": "Fixed an issue when normalising whitespace for strings containing high-surrogate characters.", "commit": "\n--- a/src/main/java/org/jsoup/helper/StringUtil.java\n+++ b/src/main/java/org/jsoup/helper/StringUtil.java\n         boolean modified = false;\n \n         int l = string.length();\n-        for (int i = 0; i < l; i++) {\n-            int c = string.codePointAt(i);\n+        int c;\n+        for (int i = 0; i < l; i+= Character.charCount(c)) {\n+            c = string.codePointAt(i);\n             if (isWhitespace(c)) {\n                 if (lastWasWhite) {\n                     modified = true;\n--- a/src/test/java/org/jsoup/helper/StringUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/StringUtilTest.java\n package org.jsoup.helper;\n \n+import org.jsoup.Jsoup;\n import org.junit.Test;\n \n import java.util.Arrays;\n         assertTrue(check2 != StringUtil.normaliseWhitespace(check2));\n         assertTrue(check3 != StringUtil.normaliseWhitespace(check3));\n     }\n+\n+    @Test public void normaliseWhiteSpaceHandlesHighSurrogates() {\n+        String test71540chars = \"\\ud869\\udeb2\\u304b\\u309a  1\";\n+        String test71540charsExpectedSingleWhitespace = \"\\ud869\\udeb2\\u304b\\u309a 1\";\n+\n+        assertEquals(test71540charsExpectedSingleWhitespace, StringUtil.normaliseWhitespace(test71540chars));\n+        String extractedText = Jsoup.parse(test71540chars).text();\n+        assertEquals(test71540charsExpectedSingleWhitespace, extractedText);\n+    }\n }", "timestamp": 1342533812, "metainfo": ""}