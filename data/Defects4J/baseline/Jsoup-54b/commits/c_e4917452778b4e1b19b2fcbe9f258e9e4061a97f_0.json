{"sha": "e4917452778b4e1b19b2fcbe9f258e9e4061a97f", "log": "Implemented Element#ownText()", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n \n     /**\n      * Gets the combined text of this element and all its children.\n-     * \n+     * <p>\n+     * For example, given HTML {@code <p>Hello <b>there</b> now!</p>}, {@code p.text()} returns {@code \"Hello there now!\"}\n+     *\n      * @return unencoded text, or empty string if none.\n+     * @see #ownText()\n      */\n     public String text() {\n         StringBuilder sb = new StringBuilder();\n         for (Node child : childNodes) {\n             if (child instanceof TextNode) {\n                 TextNode textNode = (TextNode) child;\n-                String text = textNode.getWholeText();\n-\n-                if (!preserveWhitespace()) {\n-                    text = TextNode.normaliseWhitespace(text);\n-                    if (TextNode.lastCharIsWhitespace(accum))\n-                        text = TextNode.stripLeadingWhitespace(text);\n-                }\n-                accum.append(text);\n-\n+                appendNormalisedText(accum, textNode);\n             } else if (child instanceof Element) {\n                 Element element = (Element) child;\n                 if (accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum))\n                 element.text(accum);\n             }\n         }\n+    }\n+\n+    /**\n+     * Gets the text owned by this element only; does not get the combined text of all children.\n+     * <p>\n+     * For example, given HTML {@code <p>Hello <b>there</b> now!</p>}, {@code p.text()} returns {@code \"Hello now!\"}.\n+     * Note that the text within the {@code b} element is not return, as it is not a direct child of the {@code p} element.\n+     *\n+     * @return unencoded text, or empty string if none.\n+     * @see #text()\n+     */\n+    public String ownText() {\n+        StringBuilder sb = new StringBuilder();\n+        ownText(sb);\n+        return sb.toString().trim();\n+    }\n+\n+    private void ownText(StringBuilder accum) {\n+        for (Node child : childNodes) {\n+            if (child instanceof TextNode) {\n+                TextNode textNode = (TextNode) child;\n+                appendNormalisedText(accum, textNode);\n+            }\n+        }\n+    }\n+\n+    private void appendNormalisedText(StringBuilder accum, TextNode textNode) {\n+        String text = textNode.getWholeText();\n+\n+        if (!preserveWhitespace()) {\n+            text = TextNode.normaliseWhitespace(text);\n+            if (TextNode.lastCharIsWhitespace(accum))\n+                text = TextNode.stripLeadingWhitespace(text);\n+        }\n+        accum.append(text);\n     }\n \n     boolean preserveWhitespace() {\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         Document doc = Jsoup.parse(reference);\n         assertEquals(\"Hello Another element\", doc.text());\n         assertEquals(\"Another element\", doc.getElementsByTag(\"p\").get(1).text());\n+    }\n+\n+    @Test public void testGetChildText() {\n+        Document doc = Jsoup.parse(\"<p>Hello <b>there</b> now\");\n+        Element p = doc.select(\"p\").first();\n+        assertEquals(\"Hello there now\", p.text());\n+        assertEquals(\"Hello now\", p.ownText());\n     }\n \n     @Test public void testNormalisesText() {", "timestamp": 1309605119, "metainfo": ""}