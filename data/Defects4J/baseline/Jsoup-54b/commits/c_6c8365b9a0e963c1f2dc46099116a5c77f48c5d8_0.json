{"sha": "6c8365b9a0e963c1f2dc46099116a5c77f48c5d8", "log": "Added test for invocation of alternate parser when loading from file input stream.", "commit": "\n--- a/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java\n+++ b/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java\n import org.jsoup.Jsoup;\n import org.jsoup.TextUtil;\n import org.jsoup.nodes.Document;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n+import java.io.File;\n+import java.io.FileInputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URISyntaxException;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotSame;\n         assertEquals(\"<!DOCTYPE html><!-- a comment -->One <qux />Two\",\n                 TextUtil.stripNewlines(doc.html()));\n     }\n-    \n+\n     @Test\n     public void testSupplyParserToJsoupClass() {\n         String xml = \"<doc><val>One<val>Two</val></bar>Three</doc>\";\n         assertEquals(\"<doc><val>One<val>Two</val>Three</val></doc>\",\n                 TextUtil.stripNewlines(doc.html()));\n     }\n-    \n+\n+    @Ignore\n     @Test\n     public void testSupplyParserToConnection() throws IOException {\n         String xmlUrl = \"http://direct.infohound.net/tools/jsoup-xml-test.xml\";\n-        \n+\n         // parse with both xml and html parser, ensure different\n         Document xmlDoc = Jsoup.connect(xmlUrl).parser(Parser.xmlParser()).get();\n         Document htmlDoc = Jsoup.connect(xmlUrl).get();\n         assertEquals(1, htmlDoc.select(\"head\").size()); // html parser normalises\n         assertEquals(0, xmlDoc.select(\"head\").size()); // xml parser does not\n     }\n+\n+    @Test\n+    public void testSupplyParserToDataStream() throws IOException, URISyntaxException {\n+        File xmlFile = new File(XmlTreeBuilder.class.getResource(\"/htmltests/xml-test.xml\").toURI());\n+        InputStream inStream = new FileInputStream(xmlFile);\n+        Document doc = Jsoup.parse(inStream, null, \"http://foo.com\", Parser.xmlParser());\n+        assertEquals(\"<doc><val>One<val>Two</val>Three</val></doc>\",\n+                TextUtil.stripNewlines(doc.html()));\n+    }\n }", "timestamp": 1330911337, "metainfo": ""}