{"sha": "cbd9605b113482873f9c99362874ca9123daaf66", "log": "1. add unit tests for SNI 2. add empty hostname verifier", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n                 if (!req.isValidateSSLCertificates()) {\n                     initUnSecureSSL();\n                     ((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);\n+                    ((HttpsURLConnection)conn).setHostnameVerifier(getInsecureVerifier());\n                 }\n             }\n \n                 conn.addRequestProperty(header.getKey(), header.getValue());\n             }\n             return conn;\n+        }\n+\n+        /**\n+         * Instantiate Hostname Verifier that does nothing.\n+         * This is used for connections with disabled SSL certificates validation.\n+         *\n+         *\n+         * @return Hostname Verifier that does nothing and accepts all hostnames\n+         */\n+        private static HostnameVerifier getInsecureVerifier() {\n+            HostnameVerifier hv = new HostnameVerifier() {\n+                public boolean verify(String urlHostName, SSLSession session) {\n+                    return true;\n+                }\n+            };\n+            return hv;\n         }\n \n         /**\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n import org.jsoup.nodes.FormElement;\n import org.junit.Ignore;\n import org.junit.Test;\n-import org.junit.internal.runners.statements.ExpectException;\n \n import java.io.File;\n import java.io.FileInputStream;\n  Tests the URL connection. Not enabled by default, so tests don't require network connection.\n \n  @author Jonathan Hedley, jonathan@hedley.net */\n-@Ignore // ignored by default so tests don't require network access. comment out to enable.\n+//@Ignore // ignored by default so tests don't require network access. comment out to enable.\n public class UrlConnectTest {\n     private static final String WEBSITE_WITH_INVALID_CERTIFICATE = \"https://certs.cac.washington.edu/CAtest/\";\n+    private static final String WEBSITE_WITH_SNI = \"https://sni.velox.ch/\";\n     private static String echoURL = \"http://direct.infohound.net/tools/q.pl\";\n \n     @Test\n         Jsoup.connect(url).execute();\n     }\n \n+\n+    /**\n+     * Verify that requests to websites with SNI fail on jdk 1.6\n+     * <p/>\n+     * read for more details:\n+     * http://en.wikipedia.org/wiki/Server_Name_Indication\n+     *\n+     * Test is ignored independent from others as it requires JDK 1.6\n+     * @throws Exception\n+     */\n+    @Test(expected = IOException.class)\n+    @Ignore\n+    public void testSNIFail() throws Exception {\n+        String url = WEBSITE_WITH_SNI;\n+        Jsoup.connect(url).execute();\n+    }\n+\n+    /**\n+     * Verify that requests to websites with SNI pass\n+     * <p/>\n+     * <b>NB!</b> this test is FAILING right now on jdk 1.6\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    @Ignore\n+    public void testSNIPass() throws Exception {\n+        String url = WEBSITE_WITH_SNI;\n+        Connection.Response defaultRes = Jsoup.connect(url).setValidateSSLCertificates(false).execute();\n+        assertThat(defaultRes.statusCode(), is(200));\n+    }\n+\n     /**\n      * Verify that security disabling feature works properly.\n      * <p/>", "timestamp": 1412753601, "metainfo": ""}