{"sha": "4f2ff53293ce4afb609ff7cb8b2d2fd27240cb39", "log": "Auto detect charset from HTML5 <meta charset> tag if present", "commit": "\n--- a/src/main/java/org/jsoup/DataUtil.java\n+++ b/src/main/java/org/jsoup/DataUtil.java\n  */\n class DataUtil {\n     private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=([^\\\\s;]*)\");\n-    private static final String defaultCharset = \"UTF-8\"; // used if not found in header or http-equiv\n+    private static final String defaultCharset = \"UTF-8\"; // used if not found in header or meta charset\n     private static final int bufferSize = 0x20000; // ~130K.\n     \n     /**\n         ByteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());\n         \n         String docData;\n-        if (charsetName == null) { // determine from http-equiv. safe parse as UTF-8\n+        if (charsetName == null) { // determine from meta. safe parse as UTF-8\n+            // look for <meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"> or HTML5 <meta charset=\"gb2312\">\n             docData = Charset.forName(defaultCharset).decode(byteData).toString();\n             Document doc = Jsoup.parse(docData);\n-            Element httpEquiv = doc.select(\"meta[http-equiv]\").first();\n-            if (httpEquiv != null) { // if not found, will keep utf-8 as best attempt\n-                String foundCharset = getCharsetFromContentType(httpEquiv.attr(\"content\"));\n+            Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n+            if (meta != null) { // if not found, will keep utf-8 as best attempt\n+                String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");\n                 if (foundCharset != null && !foundCharset.equals(defaultCharset)) { // need to re-decode\n                     byteData.rewind();\n                     docData = Charset.forName(foundCharset).decode(byteData).toString();\n--- a/src/test/java/org/jsoup/integration/ParseTest.java\n+++ b/src/test/java/org/jsoup/integration/ParseTest.java\n     }\n     \n     @Test public void testBaidu() throws IOException {\n+        // tests <meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\">\n         File in = getFile(\"/htmltests/baidu-cn-home.html\");\n         Document doc = Jsoup.parse(in, null, \"http://www.baidu.com/\"); // http charset is gb2312, but NOT specifying it, to test http-equiv parse\n         Element submit = doc.select(\"#su\").first();\n         assertEquals(\"http://news.baidu.com\", newsLink.absUrl(\"href\"));\n     }\n     \n+    @Test public void testHtml5Charset() throws IOException {\n+        // test that <meta charset=\"gb2312\"> works\n+        File in = getFile(\"/htmltests/meta-charset-1.html\");\n+        Document doc = Jsoup.parse(in, null, \"http://example.com/\"); //gb2312, has html5 <meta charset>\n+        assertEquals(\"\u65b0\", doc.text());\n+        \n+        // double check, no charset, falls back to utf8 which is incorrect\n+        in = getFile(\"/htmltests/meta-charset-2.html\"); //\n+        doc = Jsoup.parse(in, null, \"http://example.com\"); // gb2312, no charset\n+        assertFalse(\"\u65b0\".equals(doc.text()));\n+        \n+        // confirm fallback to utf8\n+        in = getFile(\"/htmltests/meta-charset-3.html\");\n+        doc = Jsoup.parse(in, null, \"http://example.com/\"); // utf8, no charset\n+        assertEquals(\"\u65b0\", doc.text());\n+    }\n+    \n     File getFile(String resourceName) {\n         try {\n             File file = new File(ParseTest.class.getResource(resourceName).toURI());", "timestamp": 1309605115, "metainfo": ""}