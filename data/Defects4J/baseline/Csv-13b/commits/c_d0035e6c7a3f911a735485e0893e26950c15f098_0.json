{"sha": "d0035e6c7a3f911a735485e0893e26950c15f098", "log": "headerMapping is only created once, so make it final  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n public class CSVParser implements Iterable<CSVRecord> {\n \n     private final CSVLexer lexer;\n-    private Map<String, Integer> headerMapping;\n+    private final Map<String, Integer> headerMapping;\n \n     // the following objects are shared to reduce garbage\n     \n         \n         this.lexer = new CSVLexer(format, new ExtendedBufferedReader(input));\n         \n-        initializeHeader(format);\n+        this.headerMapping = initializeHeader(format);\n     }\n \n     /**\n     /**\n      * Initializes the name to index mapping if the format defines a header.\n      */\n-    private void initializeHeader(CSVFormat format) throws IOException {\n+    private Map<String, Integer> initializeHeader(CSVFormat format) throws IOException {\n+        Map<String, Integer> hdrMap = null;\n         if (format.getHeader() != null) {\n-            headerMapping = new HashMap<String, Integer>();\n+            hdrMap = new HashMap<String, Integer>();\n \n             String[] header = null;\n             if (format.getHeader().length == 0) {\n             // build the name to index mappings\n             if (header != null) {\n                 for (int i = 0; i < header.length; i++) {\n-                    headerMapping.put(header[i], Integer.valueOf(i));\n-                }\n-            }\n-        }\n+                    hdrMap.put(header[i], Integer.valueOf(i));\n+                }\n+            }\n+        }\n+        return hdrMap;\n     }\n \n     /**", "timestamp": 1332345691, "metainfo": ""}