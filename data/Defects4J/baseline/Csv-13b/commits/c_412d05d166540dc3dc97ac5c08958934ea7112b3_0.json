{"sha": "412d05d166540dc3dc97ac5c08958934ea7112b3", "log": "Better throw a NoSuchElementException if no more elements are available because parser has been closed  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n     }\n \n     /**\n-     * Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\n+     * Returns an iterator on the records.\n+     *\n+     * <p>IOExceptions occurring during the iteration are wrapped in a\n      * RuntimeException.\n+     * If the parser is closed a call to {@code next()} will throw a\n+     * NoSuchElementException.</p>\n      */\n     public Iterator<CSVRecord> iterator() {\n         return new Iterator<CSVRecord>() {\n \n             public CSVRecord next() {\n                 if (CSVParser.this.isClosed()) {\n-                    return null;\n+                    throw new NoSuchElementException(\"CSVParser has been closed\");\n                 }\n                 CSVRecord next = this.current;\n                 this.current = null;\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n         assertEquals(4, records.size());\n     }\n \n-    @Test\n+    @Test(expected = NoSuchElementException.class)\n     public void testClose() throws Exception {\n         final Reader in = new StringReader(\"# comment\\na,b,c\\n1,2,3\\nx,y,z\");\n         final CSVParser parser = CSVFormat.DEFAULT.withCommentStart('#').withHeader().parse(in);\n         assertTrue(records.hasNext());\n         parser.close();\n         assertFalse(records.hasNext());\n-        assertNull(records.next());\n-        assertFalse(records.hasNext());\n-        assertNull(records.next());\n+        records.next();\n     }\n \n     @Test", "timestamp": 1375386070, "metainfo": ""}