{"sha": "473727be265240adf6d15a1d7abad2f0f31967fd", "log": "Rename ivar headerMapping -> headerMap.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n public class CSVParser implements Iterable<CSVRecord> {\n \n     private final Lexer lexer;\n-    private final Map<String, Integer> headerMapping;\n+    private final Map<String, Integer> headerMap;\n \n     // the following objects are shared to reduce garbage\n \n \n         this.lexer = new CSVLexer(format, new ExtendedBufferedReader(input));\n \n-        this.headerMapping = initializeHeader(format);\n+        this.headerMap = initializeHeader(format);\n     }\n \n     /**\n      *             on parse error or input read-failure\n      */\n     CSVRecord getRecord() throws IOException {\n-        CSVRecord result = new CSVRecord(null, headerMapping, null);\n+        CSVRecord result = new CSVRecord(null, headerMap, null);\n         record.clear();\n         StringBuilder sb = null;\n         do {\n \n         if (!record.isEmpty()) {\n             final String comment = sb == null ? null : sb.toString();\n-            result = new CSVRecord(record.toArray(new String[record.size()]), headerMapping, comment);\n+            result = new CSVRecord(record.toArray(new String[record.size()]), headerMap, comment);\n         }\n         return result;\n     }", "timestamp": 1347454770, "metainfo": ""}