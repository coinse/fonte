{"sha": "ee7335a2fc5a95dabc73d779699a973a5b828213", "log": "[CSV-99] Revert Builder implementation in CSVFormat.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n  * </p>\n  * You can extend a format through a builder. For example, to extend the Excel format with columns header, you write:\n  * </p>\n- * <pre>CSVFormat.EXCEL.toBuilder().withHeader(&quot;Col1&quot;, &quot;Col2&quot;, &quot;Col3&quot;).build();</pre>\n+ * <pre>CSVFormat.EXCEL.toBuilder().withHeader(&quot;Col1&quot;, &quot;Col2&quot;, &quot;Col3&quot;);</pre>\n  * <p>\n  * You can parse through a format. For example, to parse an Excel file with columns header, you write:\n  * </p>\n      * For example for parsing or generating a CSV file on a French system the following format will be used:\n      *\n      * <pre>\n-     * CSVFormat fmt = CSVFormat.newBuilder(EXCEL).withDelimiter(';').build();\n+     * CSVFormat fmt = CSVFormat.newBuilder(EXCEL).withDelimiter(';');\n      * </pre>\n      * Settings are:\n      * <ul>", "timestamp": 1375195488, "metainfo": ""}