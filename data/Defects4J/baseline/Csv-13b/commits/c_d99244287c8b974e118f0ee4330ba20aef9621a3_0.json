{"sha": "d99244287c8b974e118f0ee4330ba20aef9621a3", "log": "Use locally stored big file as per perf/PerformanceTest  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/PerformanceTest.java\n+++ b/src/test/java/org/apache/commons/csv/PerformanceTest.java\n package org.apache.commons.csv;\n \n import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n import java.io.FileReader;\n import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n import java.lang.reflect.Constructor;\n+import java.util.zip.GZIPInputStream;\n+\n+import org.apache.commons.io.IOUtils;\n \n /**\n  * Basic test harness.\n \n     private static final CSVFormat format = CSVFormat.EXCEL;\n \n+    private static final File BIG_FILE = new File(System.getProperty(\"java.io.tmpdir\"), \"worldcitiespop.txt\");\n+\n     public static void main(final String [] args) throws Exception {\n+        if (BIG_FILE.exists()) {\n+            System.out.println(String.format(\"Found test fixture %s: %,d bytes.\", BIG_FILE, BIG_FILE.length()));\n+        } else {\n+            System.out.println(\"Decompressing test fixture \" + BIG_FILE + \"...\");\n+            final InputStream input = new GZIPInputStream(new FileInputStream(\"src/test/resources/perf/worldcitiespop.txt.gz\"));\n+            final OutputStream output = new FileOutputStream(BIG_FILE);\n+            IOUtils.copy(input, output);\n+            System.out.println(String.format(\"Decompressed test fixture %s: %,d bytes.\", BIG_FILE, BIG_FILE.length()));            \n+        }\n         final int argc = args.length;\n         String tests[];\n         if (argc > 0) {\n     }\n \n     private static BufferedReader getReader() throws IOException {\n-        return new BufferedReader(new FileReader(\"worldcitiespop.txt\"));\n+        return new BufferedReader(new FileReader(BIG_FILE));\n     }\n \n     // Container for basic statistics", "timestamp": 1350141336, "metainfo": ""}