{"sha": "bbb2da1b69cdd6c44407d0192ecb1129d4c81e39", "log": "Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n      */\n     public static final CSVFormat EXCEL = new CSVFormat(',', '\"', DISABLED, DISABLED, false, false, false, false, \"\\r\\n\");\n \n-    /** Tabulation delimited format. */\n+    /** Tab-delimited format, with quote; leading and trailing spaces ignored. */\n     public static final CSVFormat TDF = new CSVFormat('\\t', '\"', DISABLED, DISABLED, true, true, false, true, \"\\r\\n\");\n \n     /**\n      * Default MySQL format used by the <tt>SELECT INTO OUTFILE</tt> and\n-     * <tt>LOAD DATA INFILE</tt> operations. This is a tabulation delimited\n+     * <tt>LOAD DATA INFILE</tt> operations. This is a tab-delimited\n      * format with a LF character as the line separator. Values are not quoted\n      * and special characters are escaped with '\\'.\n      * \n      * @param trailingSpacesIgnored     <tt>true</tt> when trailing whitespaces should be ignored\n      * @param unicodeEscapesInterpreted <tt>true</tt> when unicode escapes should be interpreted\n      * @param emptyLinesIgnored         <tt>true</tt> when the parser should skip emtpy lines\n+     * @param lineSeparator             the line separator to use.\n      */\n     CSVFormat(\n             char delimiter,\n     }\n \n     /**\n-     * Returns the line separator delimiting the records.\n+     * Returns the line separator delimiting output records.\n      * \n      * @return the line separator\n      */\n     }\n \n     /**\n-     * Returns a copy of this format using the specified line separator.\n-     * \n-     * @param lineSeparator the line separator\n-     * @return A copy of this format using the specified line separator\n+     * Returns a copy of this format using the specified output line separator.\n+     * \n+     * @param lineSeparator the line separator to be used for output.\n+     * \n+     * @return A copy of this format using the specified output line separator\n      */\n     public CSVFormat withLineSeparator(String lineSeparator) {\n         return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);", "timestamp": 1331750063, "metainfo": ""}