{"sha": "fd3a9862bd53c24e319655f968ea0f054453c839", "log": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n  */\n public final class CSVFormat implements Serializable {\n \n+    /**\n+     * Predefines formats.\n+     * \n+     * @since 1.2\n+     */\n+    public static enum Predefined {\n+\n+        /**\n+         * @see CSVFormat#DEFAULT.\n+         */\n+        Default(CSVFormat.DEFAULT), \n+\n+        /**\n+         * @see CSVFormat#EXCEL.\n+         */\n+        Excel(CSVFormat.EXCEL), \n+\n+        /**\n+         * @see CSVFormat#MYSQL.\n+         */\n+        MySQL(CSVFormat.MYSQL), \n+\n+        /**\n+         * @see CSVFormat#RFC4180.\n+         */\n+        RFC4180(CSVFormat.RFC4180),\n+\n+        /**\n+         * @see CSVFormat#TDF.\n+         */\n+        TDF(CSVFormat.TDF);\n+\n+        private final CSVFormat format;\n+\n+        private Predefined(CSVFormat format) {\n+            this.format = format;\n+        }\n+        \n+        /**\n+         * Gets the format.\n+         * \n+         * @return the format.\n+         */\n+        public CSVFormat getFormat() {\n+            return format;\n+        }\n+    };\n+    \n     private static final long serialVersionUID = 1L;\n \n     private final char delimiter;\n      * <li>withRecordSeparator(\"\\r\\n\")</li>\n      * <li>withIgnoreEmptyLines(true)</li>\n      * </ul>\n+     * @see Predefined#Default\n      */\n     public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true,\n             CRLF, null, null, null, false, false);\n      * <li>withRecordSeparator(\"\\r\\n\")</li>\n      * <li>withIgnoreEmptyLines(false)</li>\n      * </ul>\n+     * @see Predefined#RFC4180\n      */\n     public static final CSVFormat RFC4180 = DEFAULT.withIgnoreEmptyLines(false);\n \n      * Note: this is currently like {@link #RFC4180} plus {@link #withAllowMissingColumnNames(boolean)\n      * withAllowMissingColumnNames(true)}.\n      * </p>\n+     * @see Predefined#Excel\n      */\n     public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false).withAllowMissingColumnNames();\n \n      * <li>withRecordSeparator(\"\\r\\n\")</li>\n      * <li>withIgnoreSurroundingSpaces(true)</li>\n      * </ul>\n+     * @see Predefined#TDF\n      */\n     public static final CSVFormat TDF = DEFAULT.withDelimiter(TAB).withIgnoreSurroundingSpaces();\n \n      * <li>withEscape('\\\\')</li>\n      * </ul>\n      *\n+     * @see Predefined#MySQL\n      * @see <a href=\"http://dev.mysql.com/doc/refman/5.1/en/load-data.html\">\n      *      http://dev.mysql.com/doc/refman/5.1/en/load-data.html</a>\n      */\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatPredefinedTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.csv;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Tests {@link CSVFormat.Predefined}.\n+ */\n+public class CSVFormatPredefinedTest {\n+\n+    private void test(final CSVFormat format, final String enumName) {\n+        Assert.assertEquals(format, CSVFormat.Predefined.valueOf(enumName).getFormat());\n+    }\n+\n+    @Test\n+    public void testDefault() {\n+        test(CSVFormat.DEFAULT, \"Default\");\n+    }\n+\n+    @Test\n+    public void testExcel() {\n+        test(CSVFormat.EXCEL, \"Excel\");\n+    }\n+\n+    @Test\n+    public void testMySQL() {\n+        test(CSVFormat.MYSQL, \"MySQL\");\n+    }\n+\n+    @Test\n+    public void testRFC4180() {\n+        test(CSVFormat.RFC4180, \"RFC4180\");\n+    }\n+\n+    @Test\n+    public void testTDF() {\n+        test(CSVFormat.TDF, \"TDF\");\n+    }\n+}", "timestamp": 1439244684, "metainfo": ""}