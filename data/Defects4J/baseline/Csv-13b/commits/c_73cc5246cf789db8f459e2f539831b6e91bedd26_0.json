{"sha": "73cc5246cf789db8f459e2f539831b6e91bedd26", "log": "[CSV-106] CSVFormat.format always append null.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n      *             If an I/O error occurs\n      */\n     public void println() throws IOException {\n-        out.append(format.getRecordSeparator());\n+        final String recordSeparator = format.getRecordSeparator();\n+        if (recordSeparator != null) {\n+            out.append(recordSeparator);\n+        }\n         newRecord = true;\n     }\n \n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n     public void testDelimiterSameAsCommentStartThrowsException() {\n         CSVFormat.DEFAULT.withDelimiter('!').withCommentStart('!').validate();\n     }\n-\n+    \n     @Test(expected = IllegalStateException.class)\n     public void testDelimiterSameAsEscapeThrowsException() {\n         CSVFormat.DEFAULT.withDelimiter('!').withEscape('!').validate();\n         assertNotSame(formatWithHeader.getHeader(), headerCopy);\n     }\n \n+    @Test\n+    public void testNullRecordSeparatorCsv106() {\n+        final CSVFormat format = CSVFormat.newFormat(';').withSkipHeaderRecord(true).withHeader(\"H1\", \"H2\");\n+        final String formatStr = format.format(\"A\", \"B\");\n+        assertNotNull(formatStr);\n+        assertFalse(formatStr.endsWith(\"null\"));\n+    }\n+\n     @Test(expected = IllegalStateException.class)\n     public void testQuoteCharSameAsCommentStartThrowsException() {\n         CSVFormat.DEFAULT.withQuoteChar('!').withCommentStart('!').validate();", "timestamp": 1394669817, "metainfo": ""}