{"sha": "78e2b2463337ccb2e047f8b8888db7a39877314b", "log": "Added another baseline benchmark against StringUtils.split() from commons-lang  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVBenchmark.java\n+++ b/src/test/java/org/apache/commons/csv/CSVBenchmark.java\n import java.util.concurrent.TimeUnit;\n \n import com.generationjava.io.CsvReader;\n+import org.apache.commons.lang3.StringUtils;\n import org.openjdk.jmh.annotations.Benchmark;\n import org.openjdk.jmh.annotations.BenchmarkMode;\n import org.openjdk.jmh.annotations.Fork;\n @BenchmarkMode(Mode.AverageTime)\n @Fork(value = 1, jvmArgs = \"-server\")\n @Threads(1)\n-@Warmup(iterations = 10)\n-@Measurement(iterations = 10)\n+@Warmup(iterations = 5)\n+@Measurement(iterations = 20)\n @OutputTimeUnit(TimeUnit.MILLISECONDS)\n public class CSVBenchmark {\n \n     }\n \n     @Benchmark\n-    public int baseline(Blackhole bh) throws Exception {\n+    public int read(Blackhole bh) throws Exception {\n         BufferedReader in = getReader();\n         int count = 0;\n         String line;\n         while ((line = in.readLine()) != null) {\n             count++;\n+        }\n+        \n+        bh.consume(count);\n+        in.close();\n+        return count;\n+    }\n+\n+    @Benchmark\n+    public int split(Blackhole bh) throws Exception {\n+        BufferedReader in = getReader();\n+        int count = 0;\n+        String line;\n+        while ((line = in.readLine()) != null) {\n+            String[] values = StringUtils.split(line, ',');\n+            count += values.length;\n         }\n         \n         bh.consume(count);", "timestamp": 1423486724, "metainfo": ""}