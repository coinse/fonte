{"sha": "0e7e9deabbddc56abcd0b92bcb50f704b4ed1da4", "log": "Make package private classes final.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVLexer.java\n+++ b/src/main/java/org/apache/commons/csv/CSVLexer.java\n \n import java.io.IOException;\n \n-class CSVLexer extends Lexer {\n+final class CSVLexer extends Lexer {\n \n     /** ctor needs to be public so can be called dynamically by PerformanceTest class */\n     public CSVLexer(final CSVFormat format, final ExtendedBufferedReader in) {\n--- a/src/main/java/org/apache/commons/csv/Constants.java\n+++ b/src/main/java/org/apache/commons/csv/Constants.java\n /**\n  * Constants for this package.\n  */\n-class Constants {\n+final class Constants {\n     \n     static final char BACKSPACE = '\\b';\n     static final char COMMA = ',';\n--- a/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n+++ b/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n  * In particular the reader supports a look-ahead option, which allows you to see the next char returned by\n  * {@link #read()}.\n  */\n-class ExtendedBufferedReader extends BufferedReader {\n+final class ExtendedBufferedReader extends BufferedReader {\n \n     /** The last char returned */\n     private int lastChar = UNDEFINED;\n--- a/src/main/java/org/apache/commons/csv/Token.java\n+++ b/src/main/java/org/apache/commons/csv/Token.java\n  * <p/>\n  * It is used as contract between the lexer and the parser.\n  */\n-class Token {\n+final class Token {\n \n     /** length of the initial token (content-)buffer */\n     private static final int INITIAL_TOKEN_LENGTH = 50;", "timestamp": 1350149336, "metainfo": ""}