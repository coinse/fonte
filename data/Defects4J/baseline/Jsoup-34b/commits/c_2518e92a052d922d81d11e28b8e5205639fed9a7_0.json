{"sha": "2518e92a052d922d81d11e28b8e5205639fed9a7", "log": "Fixed support for self-closing script tags.  Fixes #305", "commit": "\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n         if (startTag.isSelfClosing()) {\n             Element el = insertEmpty(startTag);\n             stack.add(el);\n+            tokeniser.transition(TokeniserState.Data); // handles <script />, otherwise needs breakout steps from script data\n             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing\n             return el;\n         }\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n                         tb.transition(InHeadNoscript);\n                     } else if (name.equals(\"script\")) {\n                         // skips some script rules as won't execute them\n-                        tb.insert(start);\n+\n                         tb.tokeniser.transition(TokeniserState.ScriptData);\n                         tb.markInsertionMode();\n                         tb.transition(Text);\n+                        tb.insert(start);\n                     } else if (name.equals(\"head\")) {\n                         tb.error(this);\n                         return false;\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n \n     @Test public void handlesKnownEmptyBlocks() {\n         // if a known tag, allow self closing outside of spec, but force an end tag. unknown tags can be self closing.\n-        String h = \"<div id='1' /><div id=2><img /><img></div><a id=3 /><i /><foo /><foo>One</foo> <hr /> hr text <hr> hr text two\";\n-        Document doc = Jsoup.parse(h);\n-        assertEquals(\"<div id=\\\"1\\\"></div><div id=\\\"2\\\"><img /><img /></div><a id=\\\"3\\\"></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr /> hr text two\", TextUtil.stripNewlines(doc.body().html()));\n+        String h = \"<div id='1' /><script src='/foo' /><div id=2><img /><img></div><a id=3 /><i /><foo /><foo>One</foo> <hr /> hr text <hr> hr text two\";\n+        Document doc = Jsoup.parse(h);\n+        assertEquals(\"<div id=\\\"1\\\"></div><script src=\\\"/foo\\\"></script><div id=\\\"2\\\"><img /><img /></div><a id=\\\"3\\\"></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr /> hr text two\", TextUtil.stripNewlines(doc.body().html()));\n     }\n \n     @Test public void handlesSolidusAtAttributeEnd() {", "timestamp": 1381092371, "metainfo": ""}