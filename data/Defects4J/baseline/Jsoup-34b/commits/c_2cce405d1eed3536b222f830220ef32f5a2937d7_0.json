{"sha": "2cce405d1eed3536b222f830220ef32f5a2937d7", "log": "Parse unknown tags as inline elements that can contain blocks.  Ensures <p><custom>Test</custom></p> parses like that, and not <p></p><custom>Test</custom>.  Closes #1", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n         synchronized (tags) {\n             Tag tag = tags.get(tagName);\n             if (tag == null) {\n-                // not defined: create default\n+                // not defined: create default; go anywhere, do anything! (incl be inside a <p>)\n                 tag = new Tag(tagName);\n                 tag.setAncestor(defaultAncestor.tagName);\n+                tag.isBlock = false;\n+                tag.canContainBlock = true;\n             }\n             return tag;\n         }\n--- a/src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java\n+++ b/src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java\n         String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n         assertEquals(\"<a>XSS</a>\", cleanHtml);\n     }\n+\n+    @Test public void testDropsUnknownTags() {\n+        String h = \"<p><custom foo=true>Test</custom></p>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<p>Test</p>\", cleanHtml);\n+    }\n }\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         assertEquals(\"qux\", foos.last().attr(\"title\"));\n         assertEquals(\"there\", foos.last().text());\n     }\n+\n+    @Test public void handlesUnknownInlineTags() {\n+        String h = \"<p><cust>Test</cust></p><p><cust><cust>Test</cust></cust></p>\";\n+        Document doc = Jsoup.parseBodyFragment(h);\n+        String out = doc.body().html();\n+        assertEquals(h, TextUtil.stripNewlines(out));\n+    }\n     \n     @Test public void handlesEmptyBlocks() {\n         String h = \"<div id=1/><div id=2><img /></div>\";", "timestamp": 1309605108, "metainfo": ""}