{"sha": "7ea1e534d6d48da3a18953f323d9b275a57c4a09", "log": "evaluators made public", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Evaluator.java\n+++ b/src/main/java/org/jsoup/nodes/Evaluator.java\n  * @author Jonathan Hedley\n  */\n public abstract class Evaluator {\n-    private Evaluator() {}\n+    protected Evaluator() {}\n     \n     /**\n      * Test if the element meets the evaluator's requirements.\n      */\n     public abstract boolean matches(Element element);\n \n-    static final class Tag extends Evaluator {\n+    public static final class Tag extends Evaluator {\n         private String tagName;\n-        Tag (String tagName) {\n+        public Tag (String tagName) {\n             this.tagName = tagName;\n         }\n \n         }\n     }\n \n-    static final class Id extends Evaluator {\n+    public static final class Id extends Evaluator {\n         private String id;\n-        Id (String id) {\n+        public Id (String id) {\n             this.id = id;\n         }\n \n         }\n     }\n \n-    static final class Class extends Evaluator {\n+    public static final class Class extends Evaluator {\n         private String className;\n-        Class(String className) {\n+        public Class(String className) {\n             this.className = className;\n         }\n \n         }\n     }\n \n-    static final class Attribute extends Evaluator {\n+    public static final class Attribute extends Evaluator {\n         private String key;\n \n-        Attribute (String key) {\n+        public Attribute (String key) {\n             this.key = key;\n         }\n \n         }\n     }\n \n-    static final class AttributeStarting extends Evaluator {\n+    public static final class AttributeStarting extends Evaluator {\n         private String keyPrefix;\n \n-        AttributeStarting (String keyPrefix) {\n+        public AttributeStarting (String keyPrefix) {\n             this.keyPrefix = keyPrefix;\n         }\n \n         }\n     }\n \n-    static final class AttributeWithValue extends AttributeKeyPair {\n-        AttributeWithValue(String key, String value) {\n+    public static final class AttributeWithValue extends AttributeKeyPair {\n+        public AttributeWithValue(String key, String value) {\n             super(key, value);\n         }\n \n         }\n     }\n \n-    static final class AttributeWithValueNot extends AttributeKeyPair {\n-        AttributeWithValueNot(String key, String value) {\n+    public static final class AttributeWithValueNot extends AttributeKeyPair {\n+        public AttributeWithValueNot(String key, String value) {\n             super(key, value);\n         }\n \n         }\n     }\n \n-    static final class AttributeWithValueStarting extends AttributeKeyPair {\n-        AttributeWithValueStarting(String key, String value) {\n+    public static final class AttributeWithValueStarting extends AttributeKeyPair {\n+        public AttributeWithValueStarting(String key, String value) {\n             super(key, value);\n         }\n \n         }\n     }\n \n-    static final class AttributeWithValueEnding extends AttributeKeyPair {\n-        AttributeWithValueEnding(String key, String value) {\n+    public static final class AttributeWithValueEnding extends AttributeKeyPair {\n+        public AttributeWithValueEnding(String key, String value) {\n             super(key, value);\n         }\n \n         }\n     }\n \n-    static final class AttributeWithValueContaining extends AttributeKeyPair {\n-        AttributeWithValueContaining(String key, String value) {\n+    public static final class AttributeWithValueContaining extends AttributeKeyPair {\n+        public AttributeWithValueContaining(String key, String value) {\n             super(key, value);\n         }\n \n         }\n     }\n     \n-    static final class AttributeWithValueMatching extends Evaluator{\n+    public static final class AttributeWithValueMatching extends Evaluator{\n         protected String key;\n         protected Pattern pattern;\n         \n-        AttributeWithValueMatching(String key, Pattern pattern) {\n+        public AttributeWithValueMatching(String key, Pattern pattern) {\n             this.key = key.trim().toLowerCase();\n             this.pattern = pattern;\n         }\n         }\n     }\n \n-    abstract static class AttributeKeyPair extends Evaluator {\n+    public abstract static class AttributeKeyPair extends Evaluator {\n         protected String key;\n         protected String value;\n \n-        AttributeKeyPair(String key, String value) {\n+        public AttributeKeyPair(String key, String value) {\n             Validate.notEmpty(key);\n             Validate.notEmpty(value);\n             \n         }\n     }\n \n-    static final class AllElements extends Evaluator {\n+    public static final class AllElements extends Evaluator {\n         public boolean matches(Element element) {\n             return true;\n         }\n     }\n     \n-    static final class IndexLessThan extends IndexEvaluator {\n-        IndexLessThan(int index) {\n+    public static final class IndexLessThan extends IndexEvaluator {\n+        public IndexLessThan(int index) {\n             super(index);\n         }\n \n         }\n     }\n     \n-    static final class IndexGreaterThan extends IndexEvaluator {\n-        IndexGreaterThan(int index) {\n+    public static final class IndexGreaterThan extends IndexEvaluator {\n+        public IndexGreaterThan(int index) {\n             super(index);\n         }\n \n         }\n     }\n     \n-    static final class IndexEquals extends IndexEvaluator {\n-        IndexEquals(int index) {\n+    public static final class IndexEquals extends IndexEvaluator {\n+        public IndexEquals(int index) {\n             super(index);\n         }\n \n         }\n     }    \n     \n-    abstract static class IndexEvaluator extends Evaluator {\n+    public abstract static class IndexEvaluator extends Evaluator {\n         protected int index;\n         \n-        IndexEvaluator(int index) {\n+        public IndexEvaluator(int index) {\n             this.index = index;\n         }\n     }\n     \n-    static final class ContainsText extends Evaluator {\n+    public static final class ContainsText extends Evaluator {\n         private String searchText;\n-        ContainsText(String searchText) {\n+        public ContainsText(String searchText) {\n             this.searchText = searchText.toLowerCase();\n         }\n \n         }\n     }\n     \n-    static final class ContainsOwnText extends Evaluator {\n+    public static final class ContainsOwnText extends Evaluator {\n         private String searchText;\n-        ContainsOwnText(String searchText) {\n+        public ContainsOwnText(String searchText) {\n             this.searchText = searchText.toLowerCase();\n         }\n \n         }\n     }\n     \n-    static final class Matches extends Evaluator {\n+    public static final class Matches extends Evaluator {\n         private Pattern pattern;\n-        Matches(Pattern pattern) {\n+        public Matches(Pattern pattern) {\n             this.pattern = pattern;\n         }\n \n         }\n     }\n     \n-    static final class MatchesOwn extends Evaluator {\n+    public static final class MatchesOwn extends Evaluator {\n         private Pattern pattern;\n-        MatchesOwn(Pattern pattern) {\n+        public MatchesOwn(Pattern pattern) {\n             this.pattern = pattern;\n         }\n ", "timestamp": 1309605123, "metainfo": ""}