{"sha": "70b2cf9a73e38bd3831a8e196c84556275c3f588", "log": "Fixed doctype tokeniser to allow whitespace between name and public identifier.", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokeniserState.java\n+++ b/src/main/java/org/jsoup/parser/TokeniserState.java\n                 t.transition(Data);\n                 return;\n             }\n-            if (r.matches('>')) {\n+            if (r.matchesAny('\\t', '\\n', '\\f', ' '))\n+                r.advance(); // ignore whitespace\n+            else if (r.matches('>')) {\n                 t.emitDoctypePending();\n                 t.advanceTransition(Data);\n             } else if (r.matchConsumeIgnoreCase(\"PUBLIC\")) {\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         Document doc = Jsoup.parse(\"<a \\n href=\\\"one\\\" \\r\\n id=\\\"two\\\" \\f >\");\n         assertEquals(\"<a href=\\\"one\\\" id=\\\"two\\\"></a>\", doc.body().html());\n     }\n+\n+    @Test public void handlesWhitespaceInoDocType() {\n+        String html = \"<!DOCTYPE html\\n\" +\n+                \"      PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\"\\n\" +\n+                \"      \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\";\n+        Document doc = Jsoup.parse(html);\n+        assertEquals(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\", doc.childNode(0).outerHtml());\n+    }\n }", "timestamp": 1314513570, "metainfo": ""}