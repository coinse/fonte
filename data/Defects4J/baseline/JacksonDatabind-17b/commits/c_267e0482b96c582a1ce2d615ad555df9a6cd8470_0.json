{"sha": "267e0482b96c582a1ce2d615ad555df9a6cd8470", "log": "add a unit test for inferred/implied names", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n         public int getValue() { return value+1; }\n     }\n \n+    protected static class InferingIntrospector extends JacksonAnnotationIntrospector\n+    {\n+        private static final long serialVersionUID = 1L;\n+\n+        @Override\n+        public String findImplicitPropertyName(AnnotatedMember member) {\n+            String name = member.getName();\n+            if (name.startsWith(\"_\")) {\n+                return name.substring(1);\n+            }\n+            return null;\n+        }\n+    }\n+\n+    static class Infernal {\n+        public String _name() { return \"foo\"; }\n+        public String getName() { return \"Bob\"; }\n+\n+        public void setStuff() { ; // ok\n+        }\n+\n+        public void _stuff() {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+\n     /*\n     /**********************************************************\n     /* Test methods\n         assertEquals(1, mapper.readValue(\"{\\\"value\\\":1}\", Getters1A.class).value);\n         assertEquals(2, mapper.readValue(\"{\\\"value\\\":2}\", Getters1B.class).value);\n     }\n+\n+    public void testInferredNameConflictsWithGetters() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setAnnotationIntrospector(new InferingIntrospector());\n+        String json = mapper.writeValueAsString(new Infernal());\n+        assertEquals(aposToQuotes(\"{'name':'Bob'}\"), json);\n+    }\n+    \n+    public void testInferredNameConflictsWithSetters() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setAnnotationIntrospector(new InferingIntrospector());\n+        Infernal inf = mapper.readValue(aposToQuotes(\"{'name':'Bob'}\"), Infernal.class);\n+        assertNotNull(inf);\n+    }\n }", "timestamp": 1401509155, "metainfo": ""}