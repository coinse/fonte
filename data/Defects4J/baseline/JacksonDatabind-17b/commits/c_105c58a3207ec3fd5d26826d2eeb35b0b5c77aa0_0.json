{"sha": "105c58a3207ec3fd5d26826d2eeb35b0b5c77aa0", "log": "Implemented #269", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n \n     @Override\n     public PropertyMetadata getMetadata() {\n-        return PropertyMetadata.construct(_isRequired(), _findDescription());\n-    }\n-\n-    protected boolean _isRequired() {\n+        final Boolean b = _findRequired();\n+        final String desc = _findDescription();\n+        if (b == null) {\n+            return (desc == null) ? PropertyMetadata.STD_REQUIRED_OR_OPTIONAL\n+                    : PropertyMetadata.STD_REQUIRED_OR_OPTIONAL.withDescription(desc);\n+        }\n+        return PropertyMetadata.construct(b.booleanValue(), _findDescription());\n+    }\n+\n+    protected Boolean _findRequired() {\n         Boolean b = fromMemberAnnotations(new WithMember<Boolean>() {\n             @Override\n             public Boolean withMember(AnnotatedMember member) {\n                 return _annotationIntrospector.hasRequiredMarker(member);\n             }\n         });\n-        return (b != null) && b.booleanValue();\n+        return b;\n     }\n     \n     protected String _findDescription() {\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPOJOPropertiesCollector.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPOJOPropertiesCollector.java\n         public String getName() {\n            return (String) additionalProperties.get(\"name\");\n         }\n+    }\n+\n+    static class PropDescBean\n+    {\n+        public final static String A_DESC = \"That's A!\";\n+\n+        @JsonPropertyDescription(A_DESC)\n+        public String a;\n+\n+        protected int b;\n+        \n+        public String getA() { return a; }\n+\n+        public void setA(String a) { this.a = a; }\n+\n+        @JsonProperty(required=true)\n+        public int getB() { return b; }\n     }\n     \n     /*\n \n     public void testJackson744() throws Exception\n     {\n-        BasicBeanDescription beanDesc = mapper.getDeserializationConfig().introspect(mapper.constructType(Issue744Bean.class));\n+        BeanDescription beanDesc = mapper.getDeserializationConfig().introspect(mapper.constructType(Issue744Bean.class));\n         assertNotNull(beanDesc);\n         AnnotatedMethod setter = beanDesc.findAnySetter();\n         assertNotNull(setter);\n+    }\n+\n+    // [Issue#269]: Support new @JsonPropertyDescription\n+    public void testPropertyDesc() throws Exception\n+    {\n+        // start via deser\n+        BeanDescription beanDesc = mapper.getDeserializationConfig().introspect(mapper.constructType(PropDescBean.class));\n+        _verifyPropertyDesc(beanDesc);\n+        // and then via ser:\n+        beanDesc = mapper.getSerializationConfig().introspect(mapper.constructType(PropDescBean.class));\n+        _verifyPropertyDesc(beanDesc);\n+    }\n+\n+    private void _verifyPropertyDesc(BeanDescription beanDesc)\n+    {\n+        assertNotNull(beanDesc);\n+        List<BeanPropertyDefinition> props = beanDesc.findProperties();\n+        assertEquals(2, props.size());\n+        for (BeanPropertyDefinition prop : props) {\n+            String name = prop.getName();\n+            final PropertyMetadata md = prop.getMetadata();\n+            if (\"a\".equals(name)) {\n+                assertFalse(md.isRequired());\n+                assertNull(md.getRequired());\n+                assertEquals(PropDescBean.A_DESC, md.getDescription());\n+            } else if (\"b\".equals(name)) {\n+                assertTrue(md.isRequired());\n+                assertEquals(Boolean.TRUE, md.getRequired());\n+                assertNull(md.getDescription());\n+            } else {\n+                fail(\"Unrecognized property '\"+name+\"'\");\n+            }\n+        }\n     }\n     \n     /*", "timestamp": 1374881623, "metainfo": ""}