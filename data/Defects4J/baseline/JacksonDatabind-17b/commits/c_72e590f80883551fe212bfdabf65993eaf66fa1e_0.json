{"sha": "72e590f80883551fe212bfdabf65993eaf66fa1e", "log": "Adding @since 2.4 and removing unused null check", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java\n      * values to the corresponding value type.  This is basically the opposite of the {@link #ACCEPT_SINGLE_VALUE_AS_ARRAY}\n      * feature.  If more than one value is found in the array, a JsonMappingException is thrown.\n      * <p>\n+     * \n      * Feature is disabled by default\n+     * @since 2.4\n      */\n     UNWRAP_SINGLE_VALUE_ARRAYS(false),\n \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java\n                             );\n                 }\n                 return value;\n-            } else if (t == JsonToken.VALUE_NULL && !_valueClass.isPrimitive()) {\n-                //Issue#unreported\n-                //  This handles the case where the value required is the Character wrapper class and the token is the null token\n-                return getEmptyValue();\n             }\n             throw ctxt.mappingException(_valueClass, t);\n         }", "timestamp": 1389470274, "metainfo": ""}