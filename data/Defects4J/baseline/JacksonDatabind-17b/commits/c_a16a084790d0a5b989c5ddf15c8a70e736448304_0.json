{"sha": "a16a084790d0a5b989c5ddf15c8a70e736448304", "log": "Fixed [JACKSON-778]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java\n              */\n             TypeVariable<?>[] vars = raw.getTypeParameters();\n             if (vars != null && vars.length > 0) {\n-                for (TypeVariable<?> var : vars) {\n+                JavaType[] typeParams = null;\n+\n+                if (_contextType != null && raw.isAssignableFrom(_contextType.getRawClass())) {\n+                    typeParams = _typeFactory.findTypeParameters(_contextType, raw);\n+                }\n+\n+                for (int i = 0; i < vars.length; i++) {\n+                    TypeVariable<?> var = vars[i];\n+\n                     String name = var.getName();\n                     Type varType = var.getBounds()[0];\n                     if (varType != null) {\n                             if (_bindings.containsKey(name)) continue;\n                         }\n                         _addPlaceholder(name); // to prevent infinite loops\n-                        _bindings.put(name, _typeFactory._constructType(varType, this));\n+\n+                        if (typeParams != null) {\n+                            _bindings.put(name, typeParams[i]);\n+                        } else {\n+                            _bindings.put(name, _typeFactory._constructType(varType, this));\n+                        }\n                     }\n                 }\n             }\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestGenericTypes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestGenericTypes.java\n import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.ObjectMapper;\n \n-\n-/**\n- * @since 1.7\n- */\n public class TestGenericTypes extends BaseMapTest\n {\n     /*", "timestamp": 1329981101, "metainfo": ""}