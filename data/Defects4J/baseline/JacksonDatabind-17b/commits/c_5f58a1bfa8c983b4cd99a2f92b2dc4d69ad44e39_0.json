{"sha": "5f58a1bfa8c983b4cd99a2f92b2dc4d69ad44e39", "log": "Add more consistency checks for type id generation", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.java\n      */\n \n     protected String idFromValue(Object value) {\n-        return _idResolver.idFromValue(value);\n+        String id = _idResolver.idFromValue(value);\n+        if (id == null) {\n+            String typeDesc = (value == null) ? \"NULL\" : value.getClass().getName();\n+            throw new IllegalArgumentException(\"Can not resolve type id for \"\n+                    +typeDesc+\" (using \"+_idResolver.getClass().getName()+\")\");\n+        }\n+        return id;\n     }\n \n     protected String idFromValueAndType(Object value, Class<?> type) {\n-        return _idResolver.idFromValueAndType(value, type);\n+        String id = _idResolver.idFromValueAndType(value, type);\n+        if (id == null) {\n+            String typeDesc = (value == null) ? \"NULL\" : value.getClass().getName();\n+            throw new IllegalArgumentException(\"Can not resolve type id for \"\n+                    +typeDesc+\" (using \"+_idResolver.getClass().getName()+\")\");\n+        }\n+        return id;\n     }\n }", "timestamp": 1382496942, "metainfo": ""}