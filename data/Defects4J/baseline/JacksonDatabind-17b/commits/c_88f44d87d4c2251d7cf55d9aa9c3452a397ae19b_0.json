{"sha": "88f44d87d4c2251d7cf55d9aa9c3452a397ae19b", "log": "Fix #223", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java\n             } else { // can NOT suppress entries in tabular output\n                 jgen.writeNull();\n             }\n+            return;\n         }\n         // otherwise find serializer to use\n         JsonSerializer<Object> ser = _serializer;\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n     static class A {\n         public B value = new B();\n     }\n-    \n+\n     @JsonPropertyOrder(alphabetic=true)\n     static class B {\n         public int x = 1;\n     @JsonFormat(shape=Shape.ARRAY)\n     static class SingleBean {\n         public String name = \"foo\";\n+    }\n+\n+    @JsonPropertyOrder(alphabetic=true)\n+    @JsonFormat(shape=Shape.ARRAY)\n+    static class TwoStringsBean {\n+        public String bar = null;\n+        public String foo = \"bar\";\n     }\n     \n     /*\n         String json = MAPPER.writeValueAsString(new FlatPojo(\"Bubba\", 1, 2, false));\n         // will have wrapper POJO, then POJO-as-array..\n         assertEquals(\"[false,\\\"Bubba\\\",1,2]\", json);\n-    }    \n+    }\n+\n+    // [Issue#223]\n+    public void testNullColumn() throws Exception\n+    {\n+        assertEquals(\"[null,\\\"bar\\\"]\", MAPPER.writeValueAsString(new TwoStringsBean()));\n+    }\n \n     /*\n     /*****************************************************", "timestamp": 1368846318, "metainfo": ""}