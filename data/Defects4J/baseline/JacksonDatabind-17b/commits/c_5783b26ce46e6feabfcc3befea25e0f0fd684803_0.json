{"sha": "5783b26ce46e6feabfcc3befea25e0f0fd684803", "log": "Add a unit test for #337", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestAnyProperties.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestAnyProperties.java\n public class TestAnyProperties\n     extends BaseMapTest\n {\n-    /*\n-    /**********************************************************\n-    /* Annotated helper classes\n-    /**********************************************************\n-     */\n-\n     static class MapImitator\n     {\n         HashMap<String,Object> _map;\n         }\n     }\n \n-    public class Bean797Base\n+    static class Bean797Base\n     {\n         @JsonAnyGetter\n         public Map<String, JsonNode> getUndefinedProperties() {\n         }\n     }\n \n-    public class Bean797BaseImpl extends Bean797Base\n+    static class Bean797BaseImpl extends Bean797Base\n     {\n         @Override\n         public Map<String, JsonNode> getUndefinedProperties() {\n             return new HashMap<String, JsonNode>();\n+        }\n+    }\n+\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n+    static abstract class Base { }\n+\n+    static class Impl extends Base {\n+        public String value;\n+        \n+        public Impl() { }\n+        public Impl(String v) { value = v; }\n+    }\n+\n+    static class PolyAnyBean\n+    {\n+        protected Map<String,Base> props = new HashMap<String,Base>();\n+        \n+        @JsonAnyGetter\n+        public Map<String,Base> props() {\n+            return props;\n+        }\n+\n+        @JsonAnySetter\n+        public void prop(String name, Base value) {\n+            props.put(name, value);\n         }\n     }\n     \n         assertEquals(\"{}\", json);\n     }\n \n+    // [Issue#337]\n+    public void testPolymorphic() throws Exception\n+    {\n+        PolyAnyBean input = new PolyAnyBean();\n+        input.props.put(\"a\", new Impl(\"xyz\"));\n+        String json = MAPPER.writeValueAsString(input);\n+        \n+//        System.err.println(\"JSON: \"+json);\n+\n+        PolyAnyBean result = MAPPER.readValue(json, PolyAnyBean.class);\n+        assertEquals(1, result.props.size());\n+        Base ob = result.props.get(\"a\");\n+        assertNotNull(ob);\n+        assertTrue(ob instanceof Impl);\n+        assertEquals(\"xyz\", ((Impl) ob).value);\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Private helper methods", "timestamp": 1383281148, "metainfo": ""}