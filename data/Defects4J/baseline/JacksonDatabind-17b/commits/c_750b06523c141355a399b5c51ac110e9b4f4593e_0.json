{"sha": "750b06523c141355a399b5c51ac110e9b4f4593e", "log": "adding test for #211 (commented out)", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestUnwrapped.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestUnwrapped.java\n \n import com.fasterxml.jackson.annotation.*;\n \n+import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.databind.*;\n \n /**\n         assertEquals(1, loc.x);\n         assertEquals(2, loc.y);\n     }\n+\n+    // 22-Apr-2013, tatu: Commented out as it can't be simply fixed; requires implementing\n+    //    deep-update/merge. But leaving here to help with that effort, if/when it proceeds.\n+    \n+    /*\n+    \n+    // [Issue#211]: Actually just variant of #160\n+    \n+    static class Issue211Bean {\n+        public String test1;\n+\n+        public String test2;\n+        @JsonUnwrapped\n+        public Issue211Unwrapped unwrapped;\n+    }\n+\n+    static class Issue211Unwrapped {\n+        public String test3;\n+        public String test4;\n+    }\n+    \n+    public void testIssue211() throws Exception\n+    {\n+         Issue211Bean bean = new Issue211Bean();\n+         bean.test1 = \"Field 1\";\n+         bean.test2 = \"Field 2\";\n+         Issue211Unwrapped tJackson2 = new Issue211Unwrapped();\n+         tJackson2.test3 = \"Field 3\";\n+         tJackson2.test4 = \"Field 4\";\n+         bean.unwrapped = tJackson2;\n+ \n+         final String JSON = \"{\\\"test1\\\": \\\"Field 1 merged\\\", \\\"test3\\\": \\\"Field 3 merged\\\"}\";\n+         ObjectMapper o = new ObjectMapper();\n+         Issue211Bean result = o.readerForUpdating(bean).withType(Issue211Bean.class).readValue(JSON);\n+         assertSame(bean, result);\n+         assertEquals(\"Field 1 merged\", result.test1);\n+         assertEquals(\"Field 2\", result.test2);\n+         assertNotNull(result.unwrapped);\n+         assertEquals(\"Field 3 merged\", result.unwrapped.test3);\n+         assertEquals(\"Field 4\", result.unwrapped.test4);\n+    }  \n+    */\n }", "timestamp": 1366670909, "metainfo": ""}