{"sha": "46b65b5f56522f2a7839355637079e4c2c6cb13d", "log": "try fixing issues with native type id serialization", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsArrayTypeSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsArrayTypeSerializer.java\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartObject();\n-        }\n+        }\n+        jgen.writeStartObject();\n     }\n \n     @Override\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartObject();\n-        }\n+        }\n+        jgen.writeStartObject();\n     }\n     \n     @Override\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartArray();\n-        }\n+        }\n+        jgen.writeStartArray();\n     }\n \n     @Override\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartArray();\n-        }\n+        }\n+        jgen.writeStartArray();\n     }\n     \n     @Override\n     public void writeTypeSuffixForObject(Object value, JsonGenerator jgen)\n             throws IOException, JsonProcessingException\n     {\n-        if (!jgen.canWriteTypeId()) {\n-            jgen.writeEndObject();\n+        jgen.writeEndObject();\n+        if (!jgen.canWriteTypeId()) {\n             jgen.writeEndArray();\n         }\n     }\n     public void writeTypeSuffixForArray(Object value, JsonGenerator jgen)\n             throws IOException, JsonProcessingException\n     {\n-        if (!jgen.canWriteTypeId()) {\n-            // wrapper array first, and then array caller needs to close\n-            jgen.writeEndArray();\n+        // first array caller needs to close, then wrapper array\n+        jgen.writeEndArray();\n+        if (!jgen.canWriteTypeId()) {\n             jgen.writeEndArray();\n         }\n     }\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartObject();\n-        }\n+        }\n+        jgen.writeStartObject();\n     }\n     \n     @Override\n         } else {\n             jgen.writeStartArray();\n             jgen.writeString(typeId);\n-            jgen.writeStartArray();\n-        }\n+        }\n+        jgen.writeStartArray();\n     }\n \n     @Override\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer.java\n         final String typeId = idFromValue(value);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             jgen.writeStartObject();\n             jgen.writeStringField(_typePropertyName, typeId);\n         final String typeId = idFromValueAndType(value, type);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             jgen.writeStartObject();\n             jgen.writeStringField(_typePropertyName, typeId);\n     {\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             jgen.writeStartObject();\n             jgen.writeStringField(_typePropertyName, typeId);\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer.java\n         final String typeId = idFromValue(value);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             // wrapper\n             jgen.writeStartObject();\n         final String typeId = idFromValueAndType(value, type);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             // wrapper\n             jgen.writeStartObject();\n         final String typeId = idFromValue(value);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             // can still wrap ok\n             jgen.writeStartObject();\n         final String typeId = idFromValueAndType(value, type);\n         if (jgen.canWriteTypeId()) {\n             jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n         } else {\n             // can still wrap ok\n             jgen.writeStartObject();\n     public void writeTypeSuffixForObject(Object value, JsonGenerator jgen)\n         throws IOException, JsonProcessingException\n     {\n-        if (!jgen.canWriteTypeId()) {\n-            // first close JSON Object caller used\n-            jgen.writeEndObject();\n+        // first close JSON Object caller used\n+        jgen.writeEndObject();\n+        if (!jgen.canWriteTypeId()) {\n             // and then wrapper\n             jgen.writeEndObject();\n         }\n     public void writeTypeSuffixForArray(Object value, JsonGenerator jgen)\n         throws IOException, JsonProcessingException\n     {\n-        if (!jgen.canWriteTypeId()) {\n-            // first close array caller needed\n-            jgen.writeEndArray();\n+        // first close array caller needed\n+        jgen.writeEndArray();\n+        if (!jgen.canWriteTypeId()) {\n             // then wrapper object\n             jgen.writeEndObject();\n         }\n     public void writeCustomTypePrefixForObject(Object value, JsonGenerator jgen, String typeId)\n         throws IOException, JsonProcessingException\n     {\n-        jgen.writeStartObject();\n-        jgen.writeObjectFieldStart(typeId);\n+        if (jgen.canWriteTypeId()) {\n+            jgen.writeTypeId(typeId);\n+            jgen.writeStartObject();\n+        } else {\n+            jgen.writeStartObject();\n+            jgen.writeObjectFieldStart(typeId);\n+        }\n     }\n     \n     @Override\n     public void writeCustomTypePrefixForArray(Object value, JsonGenerator jgen, String typeId)\n         throws IOException, JsonProcessingException\n     {\n-        jgen.writeStartObject();\n-        jgen.writeArrayFieldStart(typeId);\n+        if (jgen.canWriteTypeId()) {\n+            jgen.writeTypeId(typeId);\n+            jgen.writeStartArray();\n+        } else {\n+            jgen.writeStartObject();\n+            jgen.writeArrayFieldStart(typeId);\n+        }\n     }\n \n     @Override\n     public void writeCustomTypePrefixForScalar(Object value, JsonGenerator jgen, String typeId)\n         throws IOException, JsonProcessingException\n     {\n-        jgen.writeStartObject();\n-        jgen.writeFieldName(typeId);\n+        if (jgen.canWriteTypeId()) {\n+            jgen.writeTypeId(typeId);\n+        } else {\n+            jgen.writeStartObject();\n+            jgen.writeFieldName(typeId);\n+        }\n     }\n \n     @Override", "timestamp": 1375069874, "metainfo": ""}