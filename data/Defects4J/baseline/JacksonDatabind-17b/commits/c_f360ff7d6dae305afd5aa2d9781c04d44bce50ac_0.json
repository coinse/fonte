{"sha": "f360ff7d6dae305afd5aa2d9781c04d44bce50ac", "log": "Add bit more sizable test for sanity checking", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/big/TestBiggerData.java\n+package com.fasterxml.jackson.databind.big;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestBiggerData extends BaseMapTest\n+{\n+\tstatic class Citm\n+\t{\n+\t\tpublic Map<Integer,String> areaNames;\n+\t\tpublic Map<Integer,String> audienceSubCategoryNames;\n+\t\tpublic Map<Integer,String> blockNames;\n+\t\tpublic Map<Integer,String> seatCategoryNames;\n+\t\tpublic Map<Integer,String> subTopicNames;\n+\t\tpublic Map<Integer,String> subjectNames;\n+\t\tpublic Map<Integer,String> topicNames;\n+\t\tpublic Map<Integer,int[]> topicSubTopics;\n+\t\tpublic Map<String,String> venueNames;\n+\n+\t\tpublic Map<Integer,Event> events;\n+\t\tpublic List<Performance> performances;\n+\t}\n+\n+\tstatic class Event\n+\t{\n+\t\tpublic int id;\n+\t\tpublic String name;\n+\t\tpublic String description;\n+\t\tpublic String subtitle;\n+\t\tpublic String logo;\n+\t\tpublic int subjectCode;\n+\t\tpublic int[] topicIds;\n+\t\tpublic int[] subTopicIds;\n+\t}\n+\n+\tstatic class Performance\n+\t{\n+\t\tpublic int id;\n+\t\tpublic int eventId;\n+\t\tpublic String name;\n+\t\tpublic String description;\n+\t\tpublic String logo;\n+\n+\t\tpublic List<Price> prices;\n+\t\tpublic List<SeatCategory> seatCategories;\n+\n+\t\tpublic long start;\n+\t\tpublic String seatMapImage;\n+\t\tpublic String venueCode;\n+}\n+\n+\tstatic class Price {\n+\t\tpublic int amount;\n+\t\tpublic int audienceSubCategoryId;\n+\t\tpublic int seatCategoryId;\n+\t}\n+\n+\tstatic class SeatCategory {\n+\t\tpublic int seatCategoryId;\n+\t\tpublic List<Area> areas;\n+\t}\n+\n+\tstatic class Area {\n+\t\tpublic int areaId;\n+\t\tpublic int[] blockIds;\n+\t}\n+\n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+\tpublic void testReading() throws Exception\n+\t{\n+\t\tObjectMapper mapper = objectMapper();\n+\t\tCitm citm = mapper.readValue(getClass().getResourceAsStream(\"/data/citm_catalog.json\"),\n+\t\t\t\tCitm.class);\n+\t\tassertNotNull(citm);\n+\t\tassertNotNull(citm.areaNames);\n+\t\tassertEquals(17, citm.areaNames.size());\n+\t\tassertNotNull(citm.events);\n+\t\tassertEquals(184, citm.events.size());\n+\n+\t\tassertNotNull(citm.seatCategoryNames);\n+\t\tassertEquals(64, citm.seatCategoryNames.size());\n+\t\tassertNotNull(citm.subTopicNames);\n+\t\tassertEquals(19, citm.subTopicNames.size());\n+\t\tassertNotNull(citm.subjectNames);\n+\t\tassertEquals(0, citm.subjectNames.size());\n+\t\tassertNotNull(citm.topicNames);\n+\t\tassertEquals(4, citm.topicNames.size());\n+\t\tassertNotNull(citm.topicSubTopics);\n+\t\tassertEquals(4, citm.topicSubTopics.size());\n+\t\tassertNotNull(citm.venueNames);\n+\t\tassertEquals(1, citm.venueNames.size());\n+\t}\n+\n+\tpublic void testRoundTrip() throws Exception\n+\t{\n+\t\tObjectMapper mapper = objectMapper();\n+\t\tCitm citm = mapper.readValue(getClass().getResourceAsStream(\"/data/citm_catalog.json\"),\n+\t\t\t\tCitm.class);\n+\n+\t\tObjectWriter w = mapper.writerWithDefaultPrettyPrinter();\n+\t\t\n+\t\tString json1 = w.writeValueAsString(citm);\n+\t\tCitm citm2 = mapper.readValue(json1, Citm.class);\n+\t\tString json2 = w.writeValueAsString(citm2);\n+\n+\t\tassertEquals(json1, json2);\n+\t}\n+}", "timestamp": 1401063694, "metainfo": ""}