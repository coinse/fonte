{"sha": "a69dd47cf54406d907d25b66f52e57fc55f899c5", "log": "Merge pull request #64 from CUTR-at-USF/master  Adds PropertyNamingStrategy subclass supporting PascalCase for Issue #63", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/PropertyNamingStrategy.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/PropertyNamingStrategy.java\n             return resultLength > 0 ? result.toString() : input;\n         }\n     }\n+    \n+    /**\n+     * See {@link PascalCaseStrategy} for details.\n+     */\n+    public static final PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE =\n+        new PascalCaseStrategy();\n+    \n+    /**\n+     * A {@link PropertyNamingStrategy} that translates typical camelCase Java \n+     * property names to PascalCase JSON element names (i.e., with a capital\n+     * first letter).  In particular, the following translations are applied by \n+     * this PropertyNamingStrategy.\n+     * \n+     * <ul><li>The first lower-case letter in the Java property name is translated \n+     * into its equivalent upper-case representation.</li></ul>\n+     * \n+     * This rules result in the following example translation from \n+     * Java property names to JSON element names.\n+     * <ul><li>&quot;userName&quot; is translated to &quot;UserName&quot;</li></ul>\n+     */\n+    public static class PascalCaseStrategy extends PropertyNamingStrategyBase\n+    {\n+    \t/**\n+    \t * Converts camelCase to PascalCase\n+    \t * \n+    \t * For example, \"userName\" would be converted to\n+    \t * \"UserName\".\n+      \t * \n+    \t * @param input formatted as camelCase string\n+    \t * @return input converted to PascalCase format\n+    \t */\n+    \t@Override\n+    \tpublic String translate(String input) {\n+    \t\tif (input == null){\n+    \t\t\treturn input; // garbage in, garbage out\n+    \t\t}else{\n+    \t\t\t// Replace first lower-case letter with upper-case equivalent\n+    \t\t\treturn input.substring(0, 1).toUpperCase() + input.substring(1);\n+    \t\t}\n+    \t}\t\n+    }\n }\n--- a/src/test/java/com/fasterxml/jackson/databind/TestStdNamingStrategies.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestStdNamingStrategies.java\n package com.fasterxml.jackson.databind;\n \n import static com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES;\n+import static com.fasterxml.jackson.databind.PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE;\n \n import java.util.Arrays;\n import java.util.List;\n  * CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES was added in Jackson 1.9, \n  * as per [JACKSON-598].\n  * \n- * @since 1.9\n+ * and\n+ * \n+ * Unit test to verify translations of \n+ * {@link PropertyNamingStrategy#PASCAL_CASE_TO_CAMEL_CASE } \n+ * outside the context of an ObjectMapper.\n+ * PASCAL_CASE_TO_CAMEL_CASE was added in Jackson 2.1.0, \n+ * as per [JACKSON-63].\n+ * \n+ * @since 2.1.0\n  */\n public class TestStdNamingStrategies extends BaseMapTest\n {\n         assertEquals(\"from7user\", result.from7user);\n         assertEquals(\"_\", result._);\n     }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods for PASCAL_CASE_TO_CAMEL_CASE\n+    /**********************************************************\n+     */\n+\n+    /**\n+     * Unit test to verify translations of \n+     * {@link PropertyNamingStrategy#PASCAL_CASE_TO_CAMEL_CASE } \n+     * outside the context of an ObjectMapper.\n+     * PASCAL_CASE_TO_CAMEL_CASE was added in Jackson 2.1.0, \n+     * as per [JACKSON-63].\n+     */\n+    @Test\n+    public void testPascalCaseStandAlone()\n+    {\n+    \tString translatedJavaName = PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE.nameForField(null, null,\n+                \"userName\");\n+        assertEquals(\"UserName\", translatedJavaName);\n+    }\n }", "timestamp": 1346378136, "metainfo": ""}