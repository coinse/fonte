{"sha": "d75f2e7976d1ee5e3088ba87440ba25feec304b1", "log": "Added type information to unresolved forward reference exception thrown at end of processing.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java\n         for (Entry<IdKey,ReadableObjectId> entry : _objectIds.entrySet()) {\n             ReadableObjectId roid = entry.getValue();\n             if(roid.hasReferringProperties()){\n-                IdKey key = entry.getKey();\n                 if(exception == null){\n                     exception = new UnresolvedForwardReference(\"Unresolved forward references for: \");\n                 }\n                 for (Iterator<Referring> iterator = roid.referringProperties(); iterator.hasNext();) {\n                     Referring referring = iterator.next();\n-                    // TODO add proper info (class + json loc).\n-                    // Modify jackson-annotation to permit access to information of IdKey.\n-                    exception.addUnresolvedId(roid.id, null, referring.getLocation());\n+                    exception.addUnresolvedId(roid.id, referring.getBeanType(), referring.getLocation());\n                 }\n             }\n         }\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n \n         public AnySetterReferring(Object instance, String propName, Object id, JsonLocation location)\n         {\n-            super(location);\n+            super(location, _type.getRawClass());\n             _pojo = instance;\n             _propName = propName;\n             _unresolvedId = id;\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/UnresolvedForwardReference.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/UnresolvedForwardReference.java\n             _location = where;\n         }\n         \n-        public Object getId()\n-        {\n-            return _id;\n-        }\n-        \n-        public Class<?> getType()\n-        {\n-            return _type;\n-        }\n-        \n-        public JsonLocation getLocation()\n-        {\n-            return _location;\n-        }\n+        /**\n+         * The id which is unresolved.\n+         */\n+        public Object getId() { return _id; }\n+        /**\n+         * The type of object which was expected.\n+         */\n+        public Class<?> getType() { return _type; }\n+        public JsonLocation getLocation() { return _location; }\n \n         @Override\n         public String toString()\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java\n \n         public PropertyReferring(Object ob, Object id, JsonLocation location)\n         {\n-            super(location);\n+            super(location, _type.getRawClass());\n             _pojo = ob;\n             _unresolvedId = id;\n         }\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ReadableObjectId.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ReadableObjectId.java\n \n     public static abstract class Referring {\n         private final JsonLocation _location;\n+        private final Class<?> _beanType;\n \n-        protected Referring(JsonLocation location)\n+        public Referring(JsonLocation location, Class<?> beanType)\n         {\n             _location = location;\n+            _beanType = beanType;\n         }\n \n-        public JsonLocation getLocation()\n-        {\n-            return _location;\n-        }\n+        public JsonLocation getLocation() { return _location; }\n+        public Class<?> getBeanType() { return _beanType; }\n \n         public abstract void handleResolvedForwardReference(Object id, Object value)\n             throws IOException;\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java\n \n             private UnresolvedId(Object id, JsonLocation location)\n             {\n-                super(location);\n+                super(location, _collectionType.getContentType().getRawClass());\n                 _id = id;\n             }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java\n \n             private UnresolvedId(Object key, Object id, JsonLocation location)\n             {\n-                super(location);\n+                super(location, _mapType.getContentType().getRawClass());\n                 _key = key;\n                 _id = id;\n             }\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n             assertEquals(Employee.class, firstUnresolvedId.getType());\n             UnresolvedId secondUnresolvedId = unresolvedIds.get(1);\n             assertEquals(firstUnresolvedId.getId(), secondUnresolvedId.getId());\n-            assertEquals(firstUnresolvedId.getType(), secondUnresolvedId.getType());\n+            assertEquals(Employee.class, secondUnresolvedId.getType());\n         }\n     }\n ", "timestamp": 1389637511, "metainfo": ""}