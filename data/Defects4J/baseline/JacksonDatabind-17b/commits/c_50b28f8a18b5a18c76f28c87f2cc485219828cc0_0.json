{"sha": "50b28f8a18b5a18c76f28c87f2cc485219828cc0", "log": "Add a (failing) unit test for #307", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/filter/TestMapFiltering.java\n+package com.fasterxml.jackson.databind.filter;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.annotation.JsonFilter;\n+\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.ser.FilterProvider;\n+import com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;\n+import com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;\n+\n+public class TestMapFiltering extends BaseMapTest\n+{\n+    static class MapBean {\n+        @JsonFilter(\"filterX\")\n+        public Map<String,Integer> values;\n+        \n+        public MapBean() {\n+            values = new LinkedHashMap<String,Integer>();\n+            values.put(\"a\", 1);\n+            values.put(\"b\", 5);\n+            values.put(\"c\", 9);\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+    \n+    // should also work for @JsonAnyGetter, as per [JACKSON-516]\n+    public void testAnyGetterFiltering() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        FilterProvider prov = new SimpleFilterProvider().addFilter(\"filterX\",\n+                SimpleBeanPropertyFilter.filterOutAllExcept(\"b\"));\n+        assertEquals(aposToQuotes(\"{'values':{'b':5}}\"),\n+                mapper.writer(prov).writeValueAsString(new MapBean()));\n+    }\n+\n+}", "timestamp": 1382166337, "metainfo": ""}