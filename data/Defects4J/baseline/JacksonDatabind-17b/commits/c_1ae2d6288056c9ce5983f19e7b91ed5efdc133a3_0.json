{"sha": "1ae2d6288056c9ce5983f19e7b91ed5efdc133a3", "log": "add a test for #426", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/filter/TestUnknownPropertyDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/filter/TestUnknownPropertyDeserialization.java\n         @JsonIgnoreProperties(\"x\")\n         public Map<String,Integer> values;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Test methods\n         assertEquals(Integer.valueOf(2), result.values.get(\"y\"));\n     }\n }\n-\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestUnknownProperty426.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+/**\n+ * Unit tests for checking handling of unknown properties\n+ */\n+public class TestUnknownProperty426 extends BaseMapTest\n+{\n+    // For [Issue#426]\n+    @JsonIgnoreProperties({ \"userId\"})\n+    public class User {\n+        Integer userId; \n+\n+        void setUserId(String id) {\n+            setUserId(new Integer(id));\n+        }\n+    \n+        public Integer getUserId() {\n+            return userId;\n+        }\n+    \n+        public void setUserId(Integer v) {\n+            this.userId = v;\n+        }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    private final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    public void testIssue426() throws Exception\n+    {\n+        String jsonString = \"{id: 9, firstName: \\\"Mike\\\" }\";\n+        User result = MAPPER.reader( User.class ).readValue(jsonString);\n+        assertNotNull(result);\n+    }\n+}\n+", "timestamp": 1400188389, "metainfo": ""}