{"sha": "9fc6eeb3c86f2f59e4d2fa3b4546508ceaacd7b4", "log": "One more unit test", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectId.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectId.java\n         public ValueNode() { this(0); }\n         public ValueNode(int v) { value = v; }\n     }\n+\n+    @JsonIdentityInfo(generator=ObjectIdGenerators.UUIDGenerator.class, property=\"#\")\n+    static class UUIDNode\n+    {\n+        public int value;\n+        public UUIDNode parent;\n+        public UUIDNode first;\n+        public UUIDNode second;\n+\n+        public UUIDNode() { this(0); }\n+        public UUIDNode(int v) { value = v; }\n+    }\n     \n     /*\n     /*****************************************************\n         assertSame(result, result.next);\n     }\n \n+    public void testSimpleUUIDForClassRoundTrip() throws Exception\n+    {\n+        UUIDNode root = new UUIDNode(1);\n+        UUIDNode child1 = new UUIDNode(2);\n+        UUIDNode child2 = new UUIDNode(3);\n+        root.first = child1;\n+        root.second = child2;\n+        child1.parent = root;\n+        child2.parent = root;\n+        child1.first = child2;\n+\n+        String json = mapper.writeValueAsString(root);\n+\n+        // and should come back the same too...\n+        UUIDNode result = mapper.readValue(json, UUIDNode.class);\n+        assertEquals(1, result.value);\n+        UUIDNode result2 = result.first;\n+        UUIDNode result3 = result.second;\n+        assertNotNull(result2);\n+        assertNotNull(result3);\n+        assertEquals(2, result2.value);\n+        assertEquals(3, result3.value);\n+\n+        assertSame(result, result2.parent);\n+        assertSame(result, result3.parent);\n+        assertSame(result3, result2.first);\n+    }\n+    \n     /*\n     /*****************************************************\n     /* Unit tests; simple property annotation", "timestamp": 1328673258, "metainfo": ""}