{"sha": "bfbeaab2d41abac76f78e17a58ad317ec70d3aae", "log": "documentation for deserialization versus polymorhism.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/JsonDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JsonDeserializer.java\n      * first event that is part of value to deserializer (and which \n      * is never JSON 'null' literal, more on this below): for simple\n      * types it may be the only value; and for structured types the\n-     * Object start marker.\n+     * Object start marker or a FIELD_NAME.\n+     * </p>\n+     * <p>\n+     * The two possible input conditions for structured types result\n+     * from polymorphism via fields. In the ordinary case, Jackson\n+     * calls this method when it has encountered an OBJECT_START,\n+     * and the method implementation must advance to the next token to\n+     * see the first field name. If the application configures\n+     * polymorphism via a field, then the object looks like the following.\n+     *  <pre>\n+     *      {\n+     *          \"@class\": \"class name\",\n+     *          ...\n+     *      }\n+     *  </pre>\n+     *  Jackson consumes the two tokens (the <tt>@class</tt> field name\n+     *  and its value) in order to learn the class and select the deserializer.\n+     *  Thus, the stream is pointing to the FIELD_NAME for the first field\n+     *  after the @class. Thus, if you want your method to work correctly\n+     *  both with and without polymorphism, you must begin your method with:\n+     *  <pre>\n+     *       if (jp.getCurrentToken() == JsonToken.START_OBJECT) {\n+     *         jp.nextToken();\n+     *       }\n+     *  </pre>\n+     * This results in the stream pointing to the field name, so that\n+     * the two conditions align.\n+     * </p>\n+     * <p>\n      * Post-condition is that the parser will point to the last\n      * event that is part of deserialized value (or in case deserialization\n      * fails, event that was not recognized or usable, which may be", "timestamp": 1391023867, "metainfo": ""}