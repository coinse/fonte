{"sha": "84042ca4dc76880854cea7cd422e48a2fa47c57e", "log": "First part of custom null serializers implemented (per-property)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n         }\n         // and if not JAXB collection/array with annotations, maybe regular type info?\n         TypeSerializer typeSer = findPropertyTypeSerializer(type, prov.getConfig(), accessor);\n-        BeanPropertyWriter pbw = pb.buildWriter(propDef, type, annotatedSerializer,\n+        BeanPropertyWriter pbw = pb.buildWriter(prov, propDef, type, annotatedSerializer,\n                         typeSer, contentTypeSer, accessor, staticTyping);\n         return pbw;\n     }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n     public Annotations getClassAnnotations() {\n         return _beanDesc.getClassAnnotations();\n     }\n+\n+    /**\n+     * @deprecated Since 2.3, use variant that takes {@link SerializerProvider} as\n+     *   first argument -- to be removed from 2.4\n+     */\n+    @Deprecated\n+    protected final BeanPropertyWriter buildWriter(BeanPropertyDefinition propDef,\n+            JavaType declaredType, JsonSerializer<?> ser,\n+            TypeSerializer typeSer, TypeSerializer contentTypeSer,\n+            AnnotatedMember am, boolean defaultUseStaticTyping)\n+    {\n+        /* We will only retain this method until 2.4; left for now to explicitly\n+         * cause compilation/linking issue iff anyone has overridden the method\n+         * (hopefully not)\n+         */\n+        throw new IllegalStateException();\n+    }\n+    \n+    /*\n+     */\n     \n     /**\n      * @param contentTypeSer Optional explicit type information serializer\n      *    to use for contained values (only used for properties that are\n      *    of container type)\n      */\n-    protected BeanPropertyWriter buildWriter(BeanPropertyDefinition propDef,\n+    protected BeanPropertyWriter buildWriter(SerializerProvider prov,\n+            BeanPropertyDefinition propDef,\n             JavaType declaredType, JsonSerializer<?> ser,\n             TypeSerializer typeSer, TypeSerializer contentTypeSer,\n             AnnotatedMember am, boolean defaultUseStaticTyping)\n+        throws JsonMappingException\n     {\n         // do we have annotation that forces type to use (to declared type or its super type)?\n         JavaType serializationType = findSerializationType(am, defaultUseStaticTyping, declaredType);\n                 break;\n             }\n         }\n-\n         BeanPropertyWriter bpw = new BeanPropertyWriter(propDef,\n                 am, _beanDesc.getClassAnnotations(), declaredType,\n                 ser, typeSer, serializationType, suppressNulls, valueToSuppress);\n+\n+        // 14-Oct-2013, tatu: And how about custom null serializer?\n+        Object serDef = _annotationIntrospector.findNullSerializer(am);\n+        if (serDef != null) {\n+            bpw.assignNullSerializer(prov.serializerInstance(am, serDef));\n+        }\n         \n         // [JACKSON-132]: Unwrapping\n         NameTransformer unwrapper = _annotationIntrospector.findUnwrappingNameTransformer(am);", "timestamp": 1381807547, "metainfo": ""}