{"sha": "2cd82cded3fb6d7c11af5ddac14eaad384959436", "log": "some groundwork to eventually fix [JACKSON-798]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n         }\n         return deserializeWithExternalTypeId(jp, ctxt, _valueInstantiator.createUsingDefault(ctxt));\n     }\n-\n+    \n     protected Object deserializeWithExternalTypeId(JsonParser jp, DeserializationContext ctxt,\n             Object bean)\n         throws IOException, JsonProcessingException\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java\n             boolean hasViews)\n     {\n         super(beanDesc.getType());\n+\n         AnnotatedClass ac = beanDesc.getClassInfo();\n         _classAnnotations = ac.getAnnotations();       \n-        \n         _beanType = beanDesc.getType();\n-\n         _valueInstantiator = builder.getValueInstantiator();\n         \n         _beanProperties = properties;\n     public void resolve(DeserializationContext ctxt)\n         throws JsonMappingException\n     {\n+        ExternalTypeHandler.Builder extTypes = null;\n         // if ValueInstantiator can use \"creator\" approach, need to resolve it here...\n         if (_valueInstantiator.canCreateFromObjectWith()) {\n             SettableBeanProperty[] creatorProps = _valueInstantiator.getFromObjectArguments(ctxt.getConfig());\n+            // also: need to try to resolve 'external' type ids...\n+            for (SettableBeanProperty prop : creatorProps) {\n+                if (prop.hasValueTypeDeserializer()) {\n+                    TypeDeserializer typeDeser = prop.getValueTypeDeserializer();\n+                    if (typeDeser.getTypeInclusion() == JsonTypeInfo.As.EXTERNAL_PROPERTY) {\n+                        if (extTypes == null) {\n+                            extTypes = new ExternalTypeHandler.Builder();\n+                        }\n+                        extTypes.addExternal(prop, typeDeser.getPropertyName());\n+                    }\n+                }\n+            }\n             _propertyBasedCreator = PropertyBasedCreator.construct(ctxt, _valueInstantiator, creatorProps);\n         }\n \n         Iterator<SettableBeanProperty> it = _beanProperties.allProperties();\n         UnwrappedPropertyHandler unwrapped = null;\n-        ExternalTypeHandler.Builder extTypes = null;\n-        \n+\n         while (it.hasNext()) {\n             SettableBeanProperty origProp = it.next();\n             SettableBeanProperty prop = origProp;\n     {\n         ObjectIdReader oir = _objectIdReader;\n         String[] ignorals = null;\n-        \n+\n         // First: may have an override for Object Id:\n         final AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();\n         if (property != null && intr != null) {\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n public class BuilderBasedDeserializer\n \textends BeanDeserializerBase\n {\n-\tprotected final AnnotatedMethod _buildMethod;\n+    protected final AnnotatedMethod _buildMethod;\n \t\n     /*\n     /**********************************************************", "timestamp": 1330833654, "metainfo": ""}