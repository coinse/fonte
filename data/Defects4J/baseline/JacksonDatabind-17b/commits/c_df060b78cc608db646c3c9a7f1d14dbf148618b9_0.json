{"sha": "df060b78cc608db646c3c9a7f1d14dbf148618b9", "log": "Minor simplification for BeanDeserializer: drop ref to AnnotatedClass (which is heavy-weight), replaced by Annotations to retain class annotations, much lighter object", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;\n import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;\n import com.fasterxml.jackson.databind.type.ClassKey;\n+import com.fasterxml.jackson.databind.util.Annotations;\n import com.fasterxml.jackson.databind.util.ClassUtil;\n import com.fasterxml.jackson.databind.util.NameTransformer;\n import com.fasterxml.jackson.databind.util.TokenBuffer;\n      */\n \n     /**\n-     * Class for which deserializer is built; used for accessing\n+     * Annotations from the bean class: used for accessing\n      * annotations during resolution phase (see {@link #resolve}).\n      */\n-    final protected AnnotatedClass _forClass;\n+    final protected Annotations _classAnnotations;\n     \n     /**\n      * Declared type of the bean this deserializer handles.\n             boolean hasViews)\n     {\n         super(beanDesc.getType());\n-        _forClass = beanDesc.getClassInfo();\n+        AnnotatedClass ac = beanDesc.getClassInfo();\n+        _classAnnotations = ac.getAnnotations();       \n+        \n         _beanType = beanDesc.getType();\n \n         _valueInstantiator = builder.getValueInstantiator();\n     {\n         super(src._beanType);\n         \n-        _forClass = src._forClass;\n+        _classAnnotations = src._classAnnotations;\n         _beanType = src._beanType;\n         \n         _valueInstantiator = src._valueInstantiator;\n     {\n         super(src._beanType);\n     \n-        _forClass = src._forClass;\n+        _classAnnotations = src._classAnnotations;\n         _beanType = src._beanType;\n         \n         _valueInstantiator = src._valueInstantiator;\n             AnnotatedWithParams delegateCreator = _valueInstantiator.getDelegateCreator();\n             // Need to create a temporary property to allow contextual deserializers:\n             BeanProperty.Std property = new BeanProperty.Std(null,\n-                    delegateType, _forClass.getAnnotations(), delegateCreator);\n+                    delegateType, _classAnnotations, delegateCreator);\n             _delegateDeserializer = findDeserializer(ctxt, delegateType, property);\n         }\n         if (extTypes != null) {\n                     +referredType.getRawClass().getName()+\")\");\n         }\n         return new SettableBeanProperty.ManagedReferenceProperty(refName, prop, backProp,\n-                _forClass.getAnnotations(), isContainer);\n+                _classAnnotations, isContainer);\n     }\n \n     /**", "timestamp": 1328677469, "metainfo": ""}