{"sha": "3ac5fa9ec32bbc20cddd7db2804635fe0a99bac3", "log": "change cache key creation to lazy, minor perf improvement", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.java\n      * this is not shared between threads, we can just reuse single\n      * instance.\n      */\n-    protected final TypeKey _cacheKey = new TypeKey(getClass(), false);\n+    protected TypeKey _cacheKey = null;\n     \n     private ReadOnlyClassToSerializerMap(JsonSerializerMap map)\n     {\n \n     public JsonSerializer<Object> typedValueSerializer(JavaType type)\n     { \n-        _cacheKey.resetTyped(type);\n+        if (_cacheKey == null) {\n+            _cacheKey = new TypeKey(type, true);\n+        } else {\n+            _cacheKey.resetTyped(type);\n+        }\n         return _map.find(_cacheKey);\n     }\n \n     public JsonSerializer<Object> typedValueSerializer(Class<?> cls)\n     { \n-        _cacheKey.resetTyped(cls);\n-        return _map.find(_cacheKey);\n-    }\n-    \n-    public JsonSerializer<Object> untypedValueSerializer(Class<?> cls)\n-    { \n-        _cacheKey.resetUntyped(cls);\n+        if (_cacheKey == null) {\n+            _cacheKey = new TypeKey(cls, true);\n+        } else {\n+            _cacheKey.resetTyped(cls);\n+        }\n         return _map.find(_cacheKey);\n     }\n \n     public JsonSerializer<Object> untypedValueSerializer(JavaType type)\n     { \n-        _cacheKey.resetUntyped(type);\n+        if (_cacheKey == null) {\n+            _cacheKey = new TypeKey(type, false);\n+        } else {\n+            _cacheKey.resetUntyped(type);\n+        }\n+        return _map.find(_cacheKey);\n+    }\n+\n+    public JsonSerializer<Object> untypedValueSerializer(Class<?> cls)\n+    { \n+        if (_cacheKey == null) {\n+            _cacheKey = new TypeKey(cls, false);\n+        } else {\n+            _cacheKey.resetUntyped(cls);\n+        }\n         return _map.find(_cacheKey);\n     }\n }", "timestamp": 1352677650, "metainfo": ""}