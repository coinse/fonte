{"sha": "5309174c08ada60b2aaf89cccf264e76348ec1d1", "log": "Add method Annotated.annotations() to allow efficient iteration over all annotations, without exposing mutable state", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/Annotated.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/Annotated.java\n      */\n     public abstract Class<?> getRawType();\n \n+    /**\n+     * Accessor that can be used to iterate over all the annotations\n+     * associated with annotated component.\n+     * \n+     * @since 2.3\n+     */\n+    public abstract Iterable<Annotation> annotations();\n+\n+    /**\n+     * Internal helper method used to access annotation information;\n+     * not exposed to developers since instances are mutable.\n+     */\n     protected abstract AnnotationMap getAllAnnotations();\n }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java\n         return _class;\n     }\n \n+    @Override\n+    public Iterable<Annotation> annotations() {\n+        if (_classAnnotations == null) {\n+            return Collections.emptyList();\n+        }\n+        return _classAnnotations.annotations();\n+    }\n+    \n     @Override\n     protected AnnotationMap getAllAnnotations() {\n         if (_classAnnotations == null) {\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedMember.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedMember.java\n \n import java.lang.annotation.Annotation;\n import java.lang.reflect.Member;\n+import java.util.Collections;\n \n import com.fasterxml.jackson.databind.util.ClassUtil;\n \n \n     public abstract Member getMember();\n \n+    @Override\n+    public Iterable<Annotation> annotations() {\n+        if (_annotations == null) {\n+            return Collections.emptyList();\n+        }\n+        return _annotations.annotations();\n+    }\n+    \n     @Override\n     protected AnnotationMap getAllAnnotations() {\n         return _annotations;\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java\n         return (A) _annotations.get(cls);\n     }\n \n+    /**\n+     * @since 2.3\n+     */\n+    public Iterable<Annotation> annotations() {\n+        if (_annotations == null || _annotations.size() == 0) {\n+            return Collections.emptyList();\n+        }\n+        return _annotations.values();\n+    }\n+    \n     public static AnnotationMap merge(AnnotationMap primary, AnnotationMap secondary)\n     {\n         if (primary == null || primary._annotations == null || primary._annotations.isEmpty()) {", "timestamp": 1382758563, "metainfo": ""}