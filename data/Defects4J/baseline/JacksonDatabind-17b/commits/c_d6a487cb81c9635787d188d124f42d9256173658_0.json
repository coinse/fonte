{"sha": "d6a487cb81c9635787d188d124f42d9256173658", "log": "Minor mods for object id handling", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n  * {@link SettableBeanProperty} instances.\n  *<p>\n  * Note that this class is used instead of generic {@link java.util.HashMap}\n- * is performance: although default implementation is very good for generic\n- * use cases, it can still be streamlined a bit for specific use case\n- * we have.\n+ * for bit of performance gain (and some memory savings): although default\n+ * implementation is very good for generic use cases, it can be streamlined\n+ * a bit for specific use case we have. Even relatively small improvements\n+ * matter since this is directly on the critical path during deserialization,\n+ * as it is done for each and every POJO property deserialized.\n  */\n public final class BeanPropertyMap\n {\n         _buckets = buckets;\n     }\n \n+    private BeanPropertyMap(Bucket[] buckets, int size)\n+    {\n+        _buckets = buckets;\n+        _size = size;\n+        _hashMask = buckets.length-1;\n+    }\n+    \n+    /**\n+     * Fluent copy method that creates a new instance that is a copy\n+     * of this instance except for one additional property that is\n+     * passed as the argument.\n+     * Note that method does not modify this instance but constructs\n+     * and returns a new one.\n+     * \n+     * @since 2.0\n+     */\n+    public BeanPropertyMap withProperty(SettableBeanProperty newProperty)\n+    {\n+        int bcount = _buckets.length;\n+        // can do a straight copy, since all additions are at the front\n+        Bucket[] newBuckets = new Bucket[bcount];\n+        System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n+        // and then insert the new property:\n+        String key = newProperty.getName();\n+        int index = key.hashCode() & _hashMask;\n+        newBuckets[index] = new Bucket(newBuckets[index], key, newProperty);\n+        return new BeanPropertyMap(newBuckets, _size+1);\n+    }\n+    \n     /**\n      * Factory method for constructing a map where all entries use given\n      * prefix", "timestamp": 1328680752, "metainfo": ""}