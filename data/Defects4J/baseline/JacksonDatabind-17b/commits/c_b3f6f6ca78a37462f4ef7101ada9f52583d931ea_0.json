{"sha": "b3f6f6ca78a37462f4ef7101ada9f52583d931ea", "log": "minor cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n         // 25-Feb-2011, tatu: As per [JACKSON-519], need to ensure contextuality works here, too\n         return _handleContextualResolvable(ser, property);\n     }\n-    \n+\n     /*\n     /********************************************************\n     /* Accessors for specialized serializers\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java\n             if (ser != null) { break; }\n         }\n         if (ser == null) {\n-            if (EnumMap.class.isAssignableFrom(type.getRawClass())) {\n+            /* 05-Nov-2014, tatu: As per [databind#601], may be easier NOT to use specialized\n+             *    serializers, if custom serialization of keys is needed.\n+             */\n+            if (EnumMap.class.isAssignableFrom(type.getRawClass())\n+                    && ((keySerializer == null) || ClassUtil.isJacksonStdImpl(keySerializer))) {\n                 JavaType keyType = type.getKeyType();\n                 // Need to find key enum values...\n                 EnumValues enums = null;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n     implements ContextualSerializer\n {\n     protected final static JavaType UNSPECIFIED_TYPE = TypeFactory.unknownType();\n-    \n+\n     /**\n      * Map-valued property being serialized with this instance\n      */\n     protected final BeanProperty _property;\n-    \n+\n     /**\n      * Set of entries to omit during serialization, if any\n      */\n      * Key serializer to use, if it can be statically determined\n      */\n     protected JsonSerializer<Object> _keySerializer;\n-    \n+\n     /**\n      * Value serializer to use, if it can be statically determined\n      */\n      * @since 2.4\n      */\n     protected final boolean _sortKeys;\n-    \n+\n     /*\n     /**********************************************************\n     /* Life-cycle", "timestamp": 1415229845, "metainfo": ""}