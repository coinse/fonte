{"sha": "4208653900529e610f466970eb4fe892311a931c", "log": "Implement Module auto-detection", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n     \n     /*\n     /**********************************************************\n-    /* Module registration\n+    /* Module registration, discovery\n     /**********************************************************\n      */\n \n             registerModule(module);\n         }\n         return this;\n+    }\n+\n+    /**\n+     * Convenience method for registering specified modules in order;\n+     * functionally equivalent to:\n+     *<pre>\n+     *   for (Module module : modules) {\n+     *      registerModule(module);\n+     *   }\n+     *</pre>\n+     * \n+     * @since 2.2\n+     */\n+    public ObjectMapper registerModules(Iterable<Module> modules)\n+    {\n+        for (Module module : modules) {\n+            registerModule(module);\n+        }\n+        return this;\n+    }\n+    \n+    /**\n+     * Method for locating available methods, using JDK {@link ServiceLoader}\n+     * facility, along with module-provided SPI.\n+     * \n+     * @since 2.2\n+     */\n+    public List<Module> findModules() {\n+        return findModules(null);\n+    }\n+\n+    /**\n+     * Method for locating available methods, using JDK {@link ServiceLoader}\n+     * facility, along with module-provided SPI.\n+     * \n+     * @since 2.2\n+     */\n+    public List<Module> findModules(ClassLoader classLoader)\n+    {\n+        ArrayList<Module> modules = new ArrayList<Module>();\n+        ServiceLoader<Module> loader = (classLoader == null) ?\n+                ServiceLoader.load(Module.class) : ServiceLoader.load(Module.class, classLoader);\n+        for (Module module : loader) {\n+            modules.add(module);\n+        }\n+        return modules;\n+    }\n+\n+    /**\n+     * Convenience method that is functionally equivalent to:\n+     *<code>\n+     *   mapper.registerModules(mapper.findModules());\n+     *<code>\n+     *\n+     * @since 2.2\n+     */\n+    public ObjectMapper findAndRegisterModules() {\n+        return registerModules(findModules());\n     }\n     \n     /*", "timestamp": 1365723728, "metainfo": ""}