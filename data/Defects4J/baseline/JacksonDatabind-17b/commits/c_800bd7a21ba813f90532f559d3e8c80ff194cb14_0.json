{"sha": "800bd7a21ba813f90532f559d3e8c80ff194cb14", "log": "TestObjectMapperBeanDeserializer: replace URL field with URI  .equals() was called on the URL member, but the problem is that URL's .equals() performs name resolution.  Use URI instead, which doesn't and fulfills the same role as far as testing is concerned.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/TestObjectMapperBeanDeserializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestObjectMapperBeanDeserializer.java\n package com.fasterxml.jackson.databind;\n \n import java.io.*;\n-import java.net.URL;\n+import java.net.URI;\n import java.util.*;\n \n import com.fasterxml.jackson.core.*;\n         int _x;\n         long _y;\n         String _desc;\n-        URL _url;\n+        URI _uri;\n         Collection<?> _misc;\n \n         // Explicit constructor\n-        public TestBean(int x, long y, String desc, URL url, Collection<?> misc)\n+        public TestBean(int x, long y, String desc, URI uri, Collection<?> misc)\n         {\n             _x = x;\n             _y = y;\n             _desc = desc;\n-            _url = url;\n+            _uri = uri;\n             _misc = misc;\n         }\n \n         public String getDesc() { return _desc; }\n         public int getX() { return _x; }\n         public long getY() { return _y; }\n-        public URL getURL() { return _url; }\n+        public URI getURI() { return _uri; }\n         public Collection<?> getMisc() { return _misc; }\n \n         public void setDesc(String value) { _desc = value; }\n         public void setX(int value) { _x = value; }\n         public void setY(long value) { _y = value; }\n-        public void setURL(URL value) { _url = value; }\n+        public void setURI(URI value) { _uri = value; }\n         public void setMisc(Collection<?> value) { _misc = value; }\n \n         @Override\n             return (other._x == _x)\n                 && (other._y == _y)\n                 && (other._desc.equals(_desc))\n-                && (other._url.equals(_url))\n+                && (other._uri.equals(_uri))\n                 && (other._misc.equals(_misc))\n                 ;\n         }\n             sb.append(\"x=\").append(_x);\n             sb.append(\" y=\").append(_y);\n             sb.append(\" desc=\").append(_desc);\n-            sb.append(\" url=\").append(_url);\n+            sb.append(\" uri=\").append(_uri);\n             sb.append(\" misc=\").append(_misc);\n             sb.append(\"]\");\n             return sb.toString();\n         misc.add(42);\n         misc.add(null);\n         misc.add(Boolean.TRUE);\n-        TestBean bean = new TestBean(13, -900L, \"\\\"test\\\"\", new URL(\"http://foobar.com\"), misc);\n+        TestBean bean = new TestBean(13, -900L, \"\\\"test\\\"\", new URI(\"http://foobar.com\"), misc);\n \n         // Hmmh. We probably should use serializer too... easier\n         String json = MAPPER.writeValueAsString(bean);", "timestamp": 1352989426, "metainfo": ""}