{"sha": "3108d85c7ca25507a10bd6d4b49b7a2fb807329b", "log": "LAst config cleanups of the day", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java\n     public DeserializationConfig(BaseSettings base,\n             int defaultFeatures, SubtypeResolver str, Map<ClassKey,Class<?>> mixins)\n     {\n-        super(base, defaultFeatures, null, mixins);\n+        super(base, defaultFeatures, str, mixins);\n         _nodeFactory = JsonNodeFactory.instance;\n     }\n \n      * instance.\n      */\n     @Override\n-    public DeserializationConfig createUnshared(SubtypeResolver subtypeResolver)\n-    {\n-        return new DeserializationConfig(this, subtypeResolver);\n-    }\n-\n-\n-    @Override\n-    public DeserializationConfig createUnshared(SubtypeResolver subtypeResolver,\n-            int features)\n-    {\n-        return new DeserializationConfig(this, subtypeResolver, features);\n+    public DeserializationConfig createUnshared() {\n+        return this;\n+    }\n+\n+\n+    @Override\n+    public DeserializationConfig createUnshared(int features) {\n+        return new DeserializationConfig(this, features);\n     }\n     \n     /**\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n     protected final JsonFactory _jsonFactory;\n \n     /**\n-     * Registered concrete subtypes that can be used instead of (or\n-     * in addition to) ones declared using annotations.\n-     */\n-    protected SubtypeResolver _subtypeResolver;\n-\n-    /**\n      * Specific factory used for creating {@link JavaType} instances;\n      * needed to allow modules to add more custom type handling\n      * (mostly to support types of non-Java JVM languages)\n      */\n     protected InjectableValues _injectableValues;\n \n+    /**\n+     * Thing used for registering sub-types, resolving them to\n+     * super/sub-types as needed.\n+     */\n+    protected SubtypeResolver _subtypeResolver;\n+    \n     /*\n     /**********************************************************\n     /* Configuration settings: mix-in annotations\n      * (like date format being used, see {@link SerializationConfig#withDateFormat}).\n      */\n     public SerializationConfig copySerializationConfig() {\n-        return _serializationConfig.createUnshared(_subtypeResolver);\n+        return _serializationConfig.createUnshared();\n     }\n \n     public SerializationConfig copySerializationConfig(int features) {\n-        return _serializationConfig.createUnshared(_subtypeResolver, features);\n+        return _serializationConfig.createUnshared(features);\n     }\n     \n     /**\n      * see {@link DeserializationConfig#addHandler})\n      */\n     public DeserializationConfig copyDeserializationConfig() {\n-        return _deserializationConfig.createUnshared(_subtypeResolver)\n+        return _deserializationConfig.createUnshared()\n                 .passSerializationFeatures(_serializationConfig.getFeatureFlags());\n     }\n \n     /**\n      * Method for setting custom subtype resolver to use.\n      */\n-    public void setSubtypeResolver(SubtypeResolver r) {\n-        _subtypeResolver = r;\n+    public ObjectMapper setSubtypeResolver(SubtypeResolver str) {\n+        _subtypeResolver = str;\n+        _deserializationConfig = _deserializationConfig.withSubtypeResolver(str);\n+        _serializationConfig = _serializationConfig.withSubtypeResolver(str);\n+        return this;\n     }\n \n     /**\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java\n     public SerializationConfig(BaseSettings base,\n             int defaultFeatures, SubtypeResolver str, Map<ClassKey,Class<?>> mixins)\n     {\n-        super(base, defaultFeatures, null, mixins);\n+        super(base, defaultFeatures, str, mixins);\n         _filterProvider = null;\n     }\n     \n      */\n     \n     @Override\n-    public SerializationConfig createUnshared(SubtypeResolver subtypeResolver)\n-    {\n-        return new SerializationConfig(this, subtypeResolver, _featureFlags);\n-    }\n-\n-    @Override\n-    public SerializationConfig createUnshared(SubtypeResolver subtypeResolver,\n-            int features)\n-    {\n-        return new SerializationConfig(this, subtypeResolver, features);\n+    public SerializationConfig createUnshared() {\n+        return this;\n+    }\n+\n+    @Override\n+    public SerializationConfig createUnshared(int features) {\n+        return new SerializationConfig(this, features);\n     }\n     \n     @Override\n--- a/src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java\n      * (which may be this instance, if it is immutable; if not, a copy\n      * is constructed with same settings)\n      */\n-    public abstract T createUnshared(SubtypeResolver subtypeResolver);\n+    public abstract T createUnshared();\n \n     /**\n      * Method to use for constructing an instance that is not shared\n      * (which may be this instance, if it is immutable; if not, a copy\n      * is constructed with same settings)\n      */\n-    public abstract T createUnshared(SubtypeResolver subtypeResolver,\n-            int features);\n+    public abstract T createUnshared(int features);\n \n     /**\n      * Method for constructing and returning a new instance with different", "timestamp": 1326955273, "metainfo": ""}