{"sha": "bf70dda2e5ddfa12e11743706cd55ab2e0e318ac", "log": "...", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/failing/TestIssueGH113.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestIssueGH113.java\n {\n     @JsonIgnoreProperties(ignoreUnknown = true)\n     @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n-    @JsonSubTypes({\n-            @JsonSubTypes.Type(Cat.class),\n-            @JsonSubTypes.Type(Dog.class)\n-    })\n+    @JsonSubTypes({  @JsonSubTypes.Type(Dog.class) })\n     public static abstract class Animal {\n         public final static String ID = \"id\";\n \n     }\n \n     @JsonIgnoreProperties(ignoreUnknown = true)\n-    public static class Cat extends Animal {\n-        public Cat() {\n-            super();\n-        }\n-\n-        @JsonCreator\n-        public Cat(@JsonProperty(ID) String id) {\n-            super(id);\n-        }\n-\n-    }\n-\n-    @JsonIgnoreProperties(ignoreUnknown = true)\n     public static class Dog extends Animal {\n         public Dog() {\n             super();\n \n     @JsonIgnoreProperties(ignoreUnknown = true)\n     public static class AnimalWrapper {\n-        public static final String ANIMAL = \"animal\";\n         private Animal animal;\n \n         @JsonCreator\n-        public AnimalWrapper(@JsonProperty(ANIMAL) Animal animal) {\n+        public AnimalWrapper(@JsonProperty(\"animal\") Animal animal) {\n             this.animal = animal;\n         }\n \n-        @JsonProperty(ANIMAL)\n         public Animal getAnimal() {\n             return animal;\n         }", "timestamp": 1353556578, "metainfo": ""}