{"sha": "08a1eb7875d24830e37a969e9963ccc365586ca1", "log": "Change revision/data tags to Id, remove authors, javadoc formatting.  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/AlreadySelectedException.java\n+++ b/src/main/java/org/apache/commons/cli/AlreadySelectedException.java\n  * Thrown when more than one option in an option group\n  * has been provided.\n  *\n- * @author John Keyes ( john at integralsource.com )\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class AlreadySelectedException extends ParseException\n {\n--- a/src/main/java/org/apache/commons/cli/AmbiguousOptionException.java\n+++ b/src/main/java/org/apache/commons/cli/AmbiguousOptionException.java\n /**\n  * Exception thrown when an option can't be identified from a partial name.\n  * \n- * @author Emmanuel Bourg\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @since 1.3\n  */\n public class AmbiguousOptionException extends UnrecognizedOptionException\n--- a/src/main/java/org/apache/commons/cli/BasicParser.java\n+++ b/src/main/java/org/apache/commons/cli/BasicParser.java\n  * The class BasicParser provides a very simple implementation of\n  * the {@link Parser#flatten(Options,String[],boolean) flatten} method.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @deprecated since 1.3, use the {@link DefaultParser} instead\n  */\n @Deprecated\n--- a/src/main/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/main/java/org/apache/commons/cli/CommandLine.java\n \n /**\n  * Represents list of arguments parsed against a {@link Options} descriptor.\n+ * <p>\n+ * It allows querying of a boolean {@link #hasOption(String opt)},\n+ * in addition to retrieving the {@link #getOptionValue(String opt)}\n+ * for options requiring arguments.\n+ * <p>\n+ * Additionally, any left-over or unrecognized arguments,\n+ * are available for further processing.\n  *\n- * <p>It allows querying of a boolean {@link #hasOption(String opt)},\n- * in addition to retrieving the {@link #getOptionValue(String opt)}\n- * for options requiring arguments.</p>\n- *\n- * <p>Additionally, any left-over or unrecognized arguments,\n- * are available for further processing.</p>\n- *\n- * @author bob mcwhirter (bob @ werken.com)\n- * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class CommandLine implements Serializable\n {\n--- a/src/main/java/org/apache/commons/cli/CommandLineParser.java\n+++ b/src/main/java/org/apache/commons/cli/CommandLineParser.java\n  * can parse a String array according to the {@link Options} specified\n  * and return a {@link CommandLine}.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public interface CommandLineParser\n {\n--- a/src/main/java/org/apache/commons/cli/DefaultParser.java\n+++ b/src/main/java/org/apache/commons/cli/DefaultParser.java\n /**\n  * Default parser.\n  * \n- * @author Emmanuel Bourg\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @since 1.3\n  */\n public class DefaultParser implements CommandLineParser\n--- a/src/main/java/org/apache/commons/cli/GnuParser.java\n+++ b/src/main/java/org/apache/commons/cli/GnuParser.java\n  * The class GnuParser provides an implementation of the\n  * {@link Parser#flatten(Options, String[], boolean) flatten} method.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @deprecated since 1.3, use the {@link DefaultParser} instead\n  */\n @Deprecated\n--- a/src/main/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/main/java/org/apache/commons/cli/HelpFormatter.java\n  * Please report issues at http://example.com/issues\n  * </pre>\n  * \n- * @author Slawek Zachcial\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class HelpFormatter\n {\n--- a/src/main/java/org/apache/commons/cli/MissingArgumentException.java\n+++ b/src/main/java/org/apache/commons/cli/MissingArgumentException.java\n  * Thrown when an option requiring an argument\n  * is not provided with an argument.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class MissingArgumentException extends ParseException\n {\n--- a/src/main/java/org/apache/commons/cli/MissingOptionException.java\n+++ b/src/main/java/org/apache/commons/cli/MissingOptionException.java\n /**\n  * Thrown when a required option has not been provided.\n  *\n- * @author John Keyes ( john at integralsource.com )\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class MissingOptionException extends ParseException\n {\n--- a/src/main/java/org/apache/commons/cli/Option.java\n+++ b/src/main/java/org/apache/commons/cli/Option.java\n import java.util.ArrayList;\n import java.util.List;\n \n-/** <p>Describes a single command-line option.  It maintains\n+/**\n+ * Describes a single command-line option.  It maintains\n  * information regarding the short-name of the option, the long-name,\n  * if any exists, a flag indicating if an argument is required for\n- * this option, and a self-documenting description of the option.</p>\n- *\n- * <p>An Option is not created independently, but is create through\n- * an instance of {@link Options}.<p>\n+ * this option, and a self-documenting description of the option.\n+ * <p>\n+ * An Option is not created independently, but is create through\n+ * an instance of {@link Options}.\n  *\n  * @see org.apache.commons.cli.Options\n  * @see org.apache.commons.cli.CommandLine\n  *\n- * @author bob mcwhirter (bob @ werken.com)\n- * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class Option implements Cloneable, Serializable\n {\n--- a/src/main/java/org/apache/commons/cli/OptionBuilder.java\n+++ b/src/main/java/org/apache/commons/cli/OptionBuilder.java\n \n /**\n  * OptionBuilder allows the user to create Options using descriptive methods.\n- *\n- * <p>Details on the Builder pattern can be found at\n- * <a href=\"http://c2.com/cgi-bin/wiki?BuilderPattern\">\n- * http://c2.com/cgi-bin/wiki?BuilderPattern</a>.</p>\n- *\n- * <p>This class is NOT thread safe. See <a href=\"https://issues.apache.org/jira/browse/CLI-209\">CLI-209</a></p>\n+ * <p>\n+ * Details on the Builder pattern can be found at\n+ * <a href=\"http://c2.com/cgi-bin/wiki?BuilderPattern\">http://c2.com/cgi-bin/wiki?BuilderPattern</a>.\n+ * <p>\n+ * This class is NOT thread safe. See <a href=\"https://issues.apache.org/jira/browse/CLI-209\">CLI-209</a>\n  * \n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @since 1.0\n  */\n public final class OptionBuilder\n--- a/src/main/java/org/apache/commons/cli/OptionGroup.java\n+++ b/src/main/java/org/apache/commons/cli/OptionGroup.java\n /**\n  * A group of mutually exclusive options.\n  *\n- * @author John Keyes ( john at integralsource.com )\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class OptionGroup implements Serializable\n {\n--- a/src/main/java/org/apache/commons/cli/OptionValidator.java\n+++ b/src/main/java/org/apache/commons/cli/OptionValidator.java\n /**\n  * Validates an Option string.\n  *\n- * @author John Keyes ( john at integralsource.com )\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @since 1.1\n  */\n final class OptionValidator\n--- a/src/main/java/org/apache/commons/cli/Options.java\n+++ b/src/main/java/org/apache/commons/cli/Options.java\n import java.util.Map;\n \n /**\n- * <p>Main entry-point into the library.</p>\n- *\n- * <p>Options represents a collection of {@link Option} objects, which\n- * describe the possible options for a command-line.<p>\n- *\n- * <p>It may flexibly parse long and short options, with or without\n+ * Main entry-point into the library.\n+ * <p>\n+ * Options represents a collection of {@link Option} objects, which\n+ * describe the possible options for a command-line.\n+ * <p>\n+ * It may flexibly parse long and short options, with or without\n  * values.  Additionally, it may parse only a portion of a commandline,\n- * allowing for flexible multi-stage parsing.<p>\n+ * allowing for flexible multi-stage parsing.\n  *\n  * @see org.apache.commons.cli.CommandLine\n  *\n- * @author bob mcwhirter (bob @ werken.com)\n- * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class Options implements Serializable\n {\n--- a/src/main/java/org/apache/commons/cli/ParseException.java\n+++ b/src/main/java/org/apache/commons/cli/ParseException.java\n /**\n  * Base for Exceptions thrown during parsing of a command-line.\n  *\n- * @author bob mcwhirter (bob @ werken.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class ParseException extends Exception\n {\n--- a/src/main/java/org/apache/commons/cli/Parser.java\n+++ b/src/main/java/org/apache/commons/cli/Parser.java\n /**\n  * <code>Parser</code> creates {@link CommandLine}s.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @deprecated since 1.3, the two-pass parsing with the flatten method is not enough flexible to handle complex cases\n  */\n @Deprecated\n--- a/src/main/java/org/apache/commons/cli/PatternOptionBuilder.java\n+++ b/src/main/java/org/apache/commons/cli/PatternOptionBuilder.java\n import java.util.Date;\n \n /**\n- * <p>\n  * Allows Options to be created from a single String.\n  * The pattern contains various single character flags and via\n  * an optional punctuation character, their expected type.\n- * </p>\n- *\n+ * <p>\n  * <table border=\"1\">\n  * <tr><td>a</td><td>-a flag</td></tr>\n  * <tr><td>b@</td><td>-b [classname]</td></tr>\n  * <tr><td>f/</td><td>-f [url]</td></tr>\n  * <tr><td>g:</td><td>-g [string]</td></tr>\n  * </table>\n- *\n  * <p>\n  * For example, the following allows command line flags of '-v -p string-value -f /dir/file'.\n  * The exclamation mark precede a mandatory option.\n- * </p>\n- * <code>Options options = PatternOptionBuilder.parsePattern(\"vp:!f/\");</code>\n+ *\n+ * <pre>\n+ *     Options options = PatternOptionBuilder.parsePattern(\"vp:!f/\");\n+ * </pre>\n  *\n  * <p>\n- * TODO These need to break out to OptionType and also\n- * to be pluggable.\n- * </p>\n+ * TODO These need to break out to OptionType and also to be pluggable.\n  *\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class PatternOptionBuilder\n {\n--- a/src/main/java/org/apache/commons/cli/PosixParser.java\n+++ b/src/main/java/org/apache/commons/cli/PosixParser.java\n  * The class PosixParser provides an implementation of the\n  * {@link Parser#flatten(Options,String[],boolean) flatten} method.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  * @deprecated since 1.3, use the {@link DefaultParser} instead\n  */\n @Deprecated\n--- a/src/main/java/org/apache/commons/cli/TypeHandler.java\n+++ b/src/main/java/org/apache/commons/cli/TypeHandler.java\n  * of conversion functionalities to ConvertUtils component in Commons\n  * already. BeanUtils I think.\n  *\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class TypeHandler\n {\n--- a/src/main/java/org/apache/commons/cli/UnrecognizedOptionException.java\n+++ b/src/main/java/org/apache/commons/cli/UnrecognizedOptionException.java\n  * Exception thrown during parsing signalling an unrecognized\n  * option was seen.\n  *\n- * @author bob mcwhiter (bob @ werken.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n public class UnrecognizedOptionException extends ParseException\n {\n--- a/src/main/java/org/apache/commons/cli/Util.java\n+++ b/src/main/java/org/apache/commons/cli/Util.java\n /**\n  * Contains useful helper methods for classes within this package.\n  *\n- * @author John Keyes (john at integralsource.com)\n- * @version $Revision$, $Date$\n+ * @version $Id$\n  */\n final class Util\n {\n--- a/src/main/java/org/apache/commons/cli/package-info.java\n+++ b/src/main/java/org/apache/commons/cli/package-info.java\n \n /**\n  * Commons CLI 1.3\n+ * \n+ * @version $Id$\n  */\n package org.apache.commons.cli;", "timestamp": 1360174336, "metainfo": ""}