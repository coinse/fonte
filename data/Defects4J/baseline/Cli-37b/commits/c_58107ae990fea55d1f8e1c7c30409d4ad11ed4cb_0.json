{"sha": "58107ae990fea55d1f8e1c7c30409d4ad11ed4cb", "log": "Unit test created by Andrew Shirley (see CLI-80) added to show that the issue of allowing repeated options does not crop up in the CLI 2 API.   ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/cli2/bug/BugCLI80Test.java\n+/**\n+ * Copyright 2006 The Apache Software Foundation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.cli2.bug;\n+\n+import org.apache.commons.cli2.Argument;\n+import org.apache.commons.cli2.CommandLine;\n+import org.apache.commons.cli2.Group;\n+import org.apache.commons.cli2.Option;\n+import org.apache.commons.cli2.OptionException;\n+import org.apache.commons.cli2.builder.ArgumentBuilder;\n+import org.apache.commons.cli2.builder.DefaultOptionBuilder;\n+import org.apache.commons.cli2.builder.GroupBuilder;\n+import org.apache.commons.cli2.commandline.Parser;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * http://issues.apache.org/jira/browse/CLI-80\n+ */\n+public class BugCLI80Test extends TestCase {\n+\n+    public void testBug() {\n+        final String optName = \"option\";\n+\n+        Argument arg = new ArgumentBuilder().withName(optName)\n+                                            .withMaximum(1)\n+                                            .create();\n+\n+        Option option = new DefaultOptionBuilder().withArgument(arg)\n+                                                  .withDescription(\"singular option\")\n+                                                  .withLongName(optName)\n+                                                  .withShortName(\"o\")\n+                                                  .create();\n+\n+        Group group = new GroupBuilder().withOption(option).create();\n+\n+        Parser p = new Parser();\n+        p.setGroup(group);\n+\n+        CommandLine cl = p.parseAndHelp( new String[] { \"-o\", \"yes\" } );\n+        assertNotNull(\"Couldn't parse valid commandLine\", cl);\n+\n+        assertEquals(\"Couldn't look up value by short name\", \"yes\", cl.getValue(\"-o\") );\n+\n+        try {\n+            cl = p.parse( new String[] { \"-o\", \"yes\", \"-o\", \"jam\" } );\n+            fail(\"Parsed invalid commandLine\");\n+        } catch(OptionException e) {\n+          // ok\n+        }\n+    }\n+\n+}", "timestamp": 1152685318, "metainfo": ""}