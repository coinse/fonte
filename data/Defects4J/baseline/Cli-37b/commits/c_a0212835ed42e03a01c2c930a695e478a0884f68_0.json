{"sha": "a0212835ed42e03a01c2c930a695e478a0884f68", "log": "some fixes for autousage and padding   ", "commit": "\n--- a/src/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli/HelpFormatter.java\n {\n    // --------------------------------------------------------------- Constants\n \n-   public static final int DEFAULT_WIDTH              = 80;\n+   public static final int DEFAULT_WIDTH              = 74;\n    public static final int DEFAULT_LEFT_PAD           = 1;\n    public static final int DEFAULT_DESC_PAD           = 3;\n    public static final String DEFAULT_SYNTAX_PREFIX   = \"usage: \";\n                    buff.append( \"--\" ).append( option.getLongOpt() );\n                }\n \n-               if( option.getValueSeparator() != (char)0 ) {\n-                   buff.append( option.getValueSeparator() );\n-               }\n-               else if( option.hasArg() ){\n+               if( option.hasArg() ){\n                    buff.append( \" \" );\n                }\n \n       List prefixList = new ArrayList();\n       Option option;\n       List optList = options.helpOptions();\n-       Collections.sort( optList, new StringBufferComparator() );\n+      Collections.sort( optList, new StringBufferComparator() );\n       for ( Iterator i = optList.iterator(); i.hasNext(); )\n       {\n          option = (Option) i.next();\n \n          if( option.hasArg() ) {\n              if( option.hasArgName() ) {\n-                 optBuf.append( option.getArgName() );\n+                 optBuf.append(\" <\").append( option.getArgName() ).append( '>' );\n              }\n              else {\n                  optBuf.append(' ');\n \n          prefixList.add(optBuf);\n          max = optBuf.length() > max ? optBuf.length() : max;\n+      }\n+      int x = 0;\n+      for ( Iterator i = optList.iterator(); i.hasNext(); )\n+      {\n+         option = (Option) i.next();\n+         optBuf = new StringBuffer( prefixList.get( x++ ).toString() );\n \n          if ( optBuf.length() < max )\n          {\n-             optBuf.append(createPadding(max-optBuf.length()));\n-         }\n-         optBuf.append(dpad);\n+             optBuf.append(createPadding(max - optBuf.length()));\n+         }\n+         optBuf.append( dpad );\n          \n          int nextLineTabStop = max + descPad;\n          renderWrappedText(sb, width, nextLineTabStop,", "timestamp": 1034377840, "metainfo": ""}