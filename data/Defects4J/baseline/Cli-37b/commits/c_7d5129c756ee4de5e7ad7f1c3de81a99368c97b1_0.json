{"sha": "7d5129c756ee4de5e7ad7f1c3de81a99368c97b1", "log": "JavaDoc tweaks  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/Options.java\n+++ b/src/main/java/org/apache/commons/cli/Options.java\n \n     /**\n      * Add an option that only contains a short name.\n+     * \n+     * <p>\n      * The option does not take an argument.\n+     * </p>\n      *\n      * @param opt Short single-character name of the option.\n      * @param description Self-documenting description\n \n     /**\n      * Add an option that only contains a short-name.\n+     *\n+     * <p>\n      * It may be specified as requiring an argument.\n+     * </p>\n      *\n      * @param opt Short single-character name of the option.\n      * @param hasArg flag signally if an argument is required after this option\n \n     /**\n      * Add an option that contains a short-name and a long-name.\n+     *\n+     * <p>\n      * It may be specified as requiring an argument.\n+     * </p>\n      *\n      * @param opt Short single-character name of the option.\n      * @param longOpt Long multi-character name of the option.\n \n     /**\n      * Add an option that contains a short-name and a long-name.\n-     * This option is set as required.\n-     * It may be specified as requiring an argument.\n+     * \n+     * <p>\n+     * The added option is set as required. It may be specified as requiring an argument. This method is a shortcut for:\n+     * </p>\n+     *\n+     * <pre>\n+     * <code>\n+     * Options option = new Option(opt, longOpt, hasArg, description);\n+     * option.setRequired(true);\n+     * options.add(option);\n+     * </code>\n+     * </pre>\n      *\n      * @param opt Short single-character name of the option.\n      * @param longOpt Long multi-character name of the option.\n \n     /**\n      * Retrieve the {@link Option} matching the long or short name specified.\n+     *\n+     * <p>\n      * The leading hyphens in the name are ignored (up to 2).\n+     * </p>\n      *\n      * @param opt short or long name of the {@link Option}\n      * @return the option represented by opt\n \n     /**\n      * Returns the OptionGroup the <code>opt</code> belongs to.\n+     *\n      * @param opt the option whose OptionGroup is being queried.\n-     *\n-     * @return the OptionGroup if <code>opt</code> is part\n-     * of an OptionGroup, otherwise return null\n+     * @return the OptionGroup if <code>opt</code> is part of an OptionGroup, otherwise return null\n      */\n     public OptionGroup getOptionGroup(Option opt)\n     {", "timestamp": 1469645244, "metainfo": ""}