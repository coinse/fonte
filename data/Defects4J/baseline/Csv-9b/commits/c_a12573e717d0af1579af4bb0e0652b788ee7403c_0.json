{"sha": "a12573e717d0af1579af4bb0e0652b788ee7403c", "log": "Add headings for different topics  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n  * Because CSV appears in many different dialects, the parser supports many formats by allowing the\n  * specification of a {@link CSVFormat}.\n  *\n+ * <h4>Creating instances</h4>\n  * There are several static factory methods that can be used to create instances for various types of resources:\n  * <p>\n  * <ul>\n  * Alternatively parsers can also be created by passing a {@link Reader} directly to the sole constructor.\n  * </p>\n  *\n+ * <h4>Parsing record wise</h4>\n  * <p>\n  * To parse a CSV input with tabs as separators, '\"' (double-quote) as an optional value encapsulator, and comments\n  * starting with '#', you write:\n  *     ...\n  * }\n  * </pre>\n+ *\n+ * <h4>Parsing completely into memory</h4>\n  * <p>\n  * You may also get a List of records:\n  * </p>", "timestamp": 1379064153, "metainfo": ""}