{"sha": "cbcfb72912f41d1fac3f6d26ca27406cca94da9e", "log": "Upgrading to Java 5  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n     /**\n      * A record buffer for getLine(). Grows as necessary and is reused.\n      */\n-    private final List record = new ArrayList();\n+    private final List<String> record = new ArrayList<String>();\n     private final Token reusableToken = new Token();\n     private final CharBuffer wsBuf = new CharBuffer();\n     private final CharBuffer code = new CharBuffer(4);\n      * @throws IOException on parse error or input read-failure\n      */\n     public String[][] getAllValues() throws IOException {\n-        List records = new ArrayList();\n+        List<String[]> records = new ArrayList<String[]>();\n         String[] values;\n         String[][] ret = null;\n         while ((values = getLine()) != null) {\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n      * @param values values to be outputted.\n      */\n     public void println(String[] values) throws IOException {\n-        for (int i = 0; i < values.length; i++) {\n-            print(values[i]);\n+        for (String value : values) {\n+            print(value);\n         }\n         println();\n     }\n--- a/src/main/java/org/apache/commons/csv/writer/CSVConfig.java\n+++ b/src/main/java/org/apache/commons/csv/writer/CSVConfig.java\n  */\n public class CSVConfig {\n \n-    /**\n-     * specifies if it is a fixed width csv file *\n-     */\n+    /** specifies if it is a fixed width csv file */\n     private boolean fixedWidth;\n-    /**\n-     * list of fields *\n-     */\n-    private List fields;\n-\n-    /**\n-     * Do no do any filling *\n-     */\n+    \n+    /** list of fields */\n+    private List<CSVField> fields;\n+\n+    /** Do no do any filling */\n     public static final int FILLNONE = 0;\n-    /**\n-     * Fill content the the left. Mainly usable together with fixedWidth *\n-     */\n+    \n+    /** Fill content the the left. Mainly usable together with fixedWidth */\n     public static final int FILLLEFT = 1;\n-    /**\n-     * Fill content to the right. Mainly usable together with fixedWidth *\n-     */\n+    \n+    /** Fill content to the right. Mainly usable together with fixedWidth */\n     public static final int FILLRIGHT = 2;\n \n-    /**\n-     * The fill pattern\n-     */\n+    /** The fill pattern */\n     private int fill;\n-    /**\n-     * The fill char. Defaults to a space\n-     */\n+    \n+    /** The fill char. Defaults to a space */\n     private char fillChar = ' ';\n-    /**\n-     * The seperator character. Defaults to ,\n-     */\n+    \n+    /** The seperator character. Defaults to ,*/\n     private char delimiter = ',';\n-    /**\n-     * The row separator. Defaults to \\n\n-     */\n+    \n+    /** The row separator. Defaults to \\n */\n     private String rowDelimiter = \"\\n\";\n-    /**\n-     * Should we ignore the delimiter. Defaults to false\n-     */\n+    \n+    /** Should we ignore the delimiter. Defaults to false */\n     private boolean ignoreDelimiter = false;\n-    /**\n-     * the value delimiter. Defaults to \"\n-     */\n+    \n+    /** the value delimiter. Defaults to \" */\n     private char valueDelimiter = '\"';\n-    /**\n-     * Should we ignore the value delimiter. Defaults to true\n-     */\n+    \n+    /** Should we ignore the value delimiter. Defaults to true */\n     private boolean ignoreValueDelimiter = true;\n-    /**\n-     * Specifies if we want to use a field header\n-     */\n+    \n+    /** Specifies if we want to use a field header */\n     private boolean fieldHeader = false;\n-    /**\n-     * Specifies if the end of the line needs to be trimmed\n-     */\n+    \n+    /** Specifies if the end of the line needs to be trimmed */\n     private boolean endTrimmed = false;\n-\n-    /**\n-     *\n-     */\n-    public CSVConfig() {\n-        super();\n-    }\n \n     /**\n      * @return if the CSV file is fixedWidth\n \n     public void addField(CSVField field) {\n         if (fields == null) {\n-            fields = new ArrayList();\n+            fields = new ArrayList<CSVField>();\n         }\n         fields.add(field);\n     }", "timestamp": 1320857912, "metainfo": ""}