{"sha": "2afb75f6bd8896153bc4abe0e3b4640b0a7bcd63", "log": "restore binary compat. w/ 1.2: JXPATH-85; javadoc  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n+++ b/src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java\n  */\n package org.apache.commons.jxpath.ri;\n \n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n \n /**\n- * The reference implementation of JXPathContext.\n+ * Namespace resolver for JXPathContextReferenceImpl.\n  *\n  * @author Dmitri Plotnikov\n  * @version $Revision$ $Date$\n     protected HashMap reverseMap;\n     protected NodePointer pointer;\n     private boolean sealed;\n-        \n+\n+    /**\n+     * Create a new NamespaceResolver.\n+     */\n+    public NamespaceResolver() {\n+        this(null);\n+    }\n+\n+    /**\n+     * Create a new NamespaceResolver.\n+     * @param parent\n+     */\n     public NamespaceResolver(NamespaceResolver parent) {\n         this.parent = parent;\n     }\n     \n     /**\n      * Register a namespace for the expression context.\n+     * @param pointer the Pointer to set.\n      */\n     public void setNamespaceContextPointer(NodePointer pointer) {\n         this.pointer = pointer;\n     }\n-    \n+\n+    /**\n+     * Get the namespace context pointer.\n+     * @return Pointer\n+     */\n     public Pointer getNamespaceContextPointer() {\n         if (pointer == null && parent != null) {\n             return parent.getNamespaceContextPointer();\n         }\n         return uri;\n     }\n-    \n+\n+    /**\n+     * Get the prefix associated with the specifed namespace URI.\n+     * @param namespaceURI the ns URI to check.\n+     * @return String prefix\n+     */\n     public String getPrefix(String namespaceURI) {\n         if (reverseMap == null) {\n             reverseMap = new HashMap();\n         }\n         return prefix;\n     }\n-        \n+\n+    /**\n+     * Learn whether this NamespaceResolver has been sealed.\n+     * @return\n+     */\n     public boolean isSealed() {\n         return sealed;\n     }\n-    \n+\n+    /**\n+     * Seal this {@link NamespaceResolver}.\n+     */\n     public void seal() {\n         sealed = true;\n         if (parent != null) {\n             parent.seal();\n         }\n     }\n-    \n+\n+    /**\n+     * {@inheritDoc}\n+     * @see java.lang.Object#clone()\n+     */\n     public Object clone() {\n         try {\n             return super.clone();", "timestamp": 1180044279, "metainfo": ""}