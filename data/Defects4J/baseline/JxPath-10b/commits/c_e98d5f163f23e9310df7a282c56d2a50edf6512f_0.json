{"sha": "e98d5f163f23e9310df7a282c56d2a50edf6512f", "log": "Added support for indexed properties that don't have a method that returns the whole collection.   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java,v 1.13 2003/03/11 00:59:24 dmitri Exp $\n- * $Revision: 1.13 $\n- * $Date: 2003/03/11 00:59:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java,v 1.14 2003/06/17 01:39:51 dmitri Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2003/06/17 01:39:51 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.jxpath.ri.model.beans;\n \n+import java.beans.IndexedPropertyDescriptor;\n import java.beans.PropertyDescriptor;\n \n import org.apache.commons.jxpath.JXPathBeanInfo;\n  * Pointer pointing to a property of a JavaBean.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2003/03/11 00:59:24 $\n+ * @version $Revision: 1.14 $ $Date: 2003/06/17 01:39:51 $\n  */\n public class BeanPropertyPointer extends PropertyPointer {\n     private String propertyName;\n     private static final Object UNINITIALIZED = new Object();\n     private Object baseValue = UNINITIALIZED;\n     private Object value = UNINITIALIZED;\n+    \n+    private static final int UNKNOWN_LENGTH_MAX_COUNT = 10000;\n \n     public BeanPropertyPointer(NodePointer parent, JXPathBeanInfo beanInfo) {\n         super(parent);\n      */\n     public Object getImmediateNode() {\n         if (value == UNINITIALIZED) {\n-            Object baseValue = getBaseValue();\n             if (index == WHOLE_COLLECTION) {\n-                value = baseValue;\n-            }\n-            else if (value != null && index >= 0 && index < getLength()) {\n-                value = ValueUtils.getValue(baseValue, index);\n+                value = getBaseValue();\n             }\n             else {\n-                value = null;\n+                PropertyDescriptor pd = getPropertyDescriptor();\n+                if (pd == null) {\n+                    value = null;\n+                }\n+                else {\n+                    value = ValueUtils.getValue(getBean(), pd, index);\n+                }\n             }\n         }\n         return value;\n             return false;\n         }\n         \n+        if (pd instanceof IndexedPropertyDescriptor) {\n+            return true;\n+        }\n+        \n         int hint = ValueUtils.getCollectionHint(pd.getPropertyType());\n         if (hint == -1) {\n             return false;\n         PropertyDescriptor pd = getPropertyDescriptor();\n         if (pd == null) {\n             return 1;\n+        }\n+        \n+        if (pd instanceof IndexedPropertyDescriptor) {\n+            return ValueUtils.getIndexedPropertyLength(\n+                getBean(),\n+                (IndexedPropertyDescriptor) pd);\n         }\n         \n         int hint = ValueUtils.getCollectionHint(pd.getPropertyType());\n--- a/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/ValueUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/ValueUtils.java,v 1.15 2003/03/11 00:59:34 dmitri Exp $\n- * $Revision: 1.15 $\n- * $Date: 2003/03/11 00:59:34 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/ValueUtils.java,v 1.16 2003/06/17 01:39:51 dmitri Exp $\n+ * $Revision: 1.16 $\n+ * $Date: 2003/06/17 01:39:51 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import java.beans.IndexedPropertyDescriptor;\n import java.beans.PropertyDescriptor;\n import java.lang.reflect.Array;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n  * Collection and property access utilities.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2003/03/11 00:59:34 $\n+ * @version $Revision: 1.16 $ $Date: 2003/06/17 01:39:51 $\n  */\n public class ValueUtils {\n     private static Map dynamicPropertyHandlerMap = new HashMap();\n+    private static final int UNKNOWN_LENGTH_MAX_COUNT = 16000;\n \n     /**\n      * Returns true if the object is an array or a Collection\n         }\n                 \n         return 0;\n+    }\n+    \n+    /**\n+     * If there is a regular non-indexed read method for this property,\n+     * uses this method to obtain the collection and then returns its\n+     * length.\n+     * Otherwise, attempts to guess the length of the collection by\n+     * calling the indexed get method repeatedly.  The method is supposed\n+     * to throw an exception if the index is out of bounds. \n+     */\n+    public static int getIndexedPropertyLength(\n+        Object object,\n+        IndexedPropertyDescriptor pd) \n+    {\n+        if (pd.getReadMethod() != null) {\n+            return getLength(getValue(object, pd));\n+        }\n+        \n+        Method readMethod = pd.getIndexedReadMethod();\n+        if (readMethod == null) {\n+            throw new JXPathException(\n+                \"No indexed read method for property \" + pd.getName());\n+        }\n+\n+        for (int i = 0; i < UNKNOWN_LENGTH_MAX_COUNT; i++) {\n+            try {\n+                readMethod.invoke(object, new Object[] { new Integer(i)});\n+            }\n+            catch (Throwable t) {\n+                return i;\n+            }\n+        }\n+        \n+        throw new JXPathException(\n+            \"Cannot determine the length of the indexed property \"\n+                + pd.getName());\n     }\n \n     /**\n                         bean,\n                         new Object[] { new Integer(index)});\n                 }\n-            }\n-            catch (Exception ex) {\n+            }            \n+            catch (InvocationTargetException ex) {\n+                Throwable t =\n+                    ((InvocationTargetException) ex).getTargetException();\n+                if (t instanceof ArrayIndexOutOfBoundsException) {\n+                    return null;\n+                }\n+                \n+                throw new JXPathException(\n+                    \"Cannot access property: \" + propertyDescriptor.getName(),\n+                    t);\n+            }\n+            catch (Throwable ex) {\n                 throw new JXPathException(\n                     \"Cannot access property: \" + propertyDescriptor.getName(),\n                     ex);\n                 }\n             }\n             catch (Exception ex) {\n-                ex.printStackTrace();\n                 throw new RuntimeException(\n                     \"Cannot access property: \"\n                         + propertyDescriptor.getName()\n--- a/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java,v 1.4 2003/03/11 00:59:38 dmitri Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/03/11 00:59:38 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/beans/BeanModelTest.java,v 1.5 2003/06/17 01:39:51 dmitri Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2003/06/17 01:39:51 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import junit.framework.TestSuite;\n \n import org.apache.commons.jxpath.AbstractFactory;\n+import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.TestBean;\n import org.apache.commons.jxpath.ri.model.BeanModelTestCase;\n \n  * Tests JXPath with JavaBeans\n *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2003/03/11 00:59:38 $\n+ * @version $Revision: 1.5 $ $Date: 2003/06/17 01:39:51 $\n  */\n \n public class BeanModelTest extends BeanModelTestCase {\n     protected AbstractFactory getAbstractFactory() {\n         return new TestBeanFactory();\n     }\n+    \n+    public void testIndexedProperty() {\n+        JXPathContext context =\n+            JXPathContext.newContext(null, new TestIndexedPropertyBean());\n+            \n+        assertXPathValueAndPointer(\n+            context,\n+            \"indexed[1]\",\n+            new Integer(0),\n+            \"/indexed[1]\");\n+    }\n+\n \n }\n--- /dev/null\n+++ b/src/test/org/apache/commons/jxpath/ri/model/beans/TestIndexedPropertyBean.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/beans/TestIndexedPropertyBean.java,v 1.1 2003/06/17 01:39:51 dmitri Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/06/17 01:39:51 $\n+ *\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation and was\n+ * originally based on software copyright (c) 2001, Plotnix, Inc,\n+ * <http://www.plotnix.com/>.\n+ * For more information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.commons.jxpath.ri.model.beans;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.commons.jxpath.util.ValueUtils;\n+\n+/**\n+ * Test bean for JUnit tests of indexed property handling.\n+ *\n+ * @author Dmitri Plotnikov\n+ * @version $Revision: 1.1 $ $Date: 2003/06/17 01:39:51 $\n+ */\n+public class TestIndexedPropertyBean {\n+\n+    public int getIndexed(int i) {\n+        if (i >= 2) {\n+            throw new ArrayIndexOutOfBoundsException(i);\n+        }\n+        return i;\n+    }\n+}", "timestamp": 1055813991, "metainfo": ""}