{"sha": "71886475c020639aa58be577ab5dc019333ae408", "log": "Better error reporting in createPath()   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java,v 1.26 2003/01/30 23:41:29 dmitri Exp $\n- * $Revision: 1.26 $\n- * $Date: 2003/01/30 23:41:29 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java,v 1.27 2003/02/18 18:11:37 dmitri Exp $\n+ * $Revision: 1.27 $\n+ * $Date: 2003/02/18 18:11:37 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import org.apache.commons.jxpath.Variables;\n import org.apache.commons.jxpath.ri.axes.RootContext;\n import org.apache.commons.jxpath.ri.compiler.Expression;\n+import org.apache.commons.jxpath.ri.compiler.LocationPath;\n import org.apache.commons.jxpath.ri.compiler.TreeCompiler;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n import org.apache.commons.jxpath.ri.model.NodePointerFactory;\n  * The reference implementation of JXPathContext.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.26 $ $Date: 2003/01/30 23:41:29 $\n+ * @version $Revision: 1.27 $ $Date: 2003/02/18 18:11:37 $\n  */\n public class JXPathContextReferenceImpl extends JXPathContext {\n     \n                 pointer = ctx.getSingleNodePointer();\n             }\n             else {\n+                checkSimplePath(expr);\n                 // This should never happen\n-                throw new JXPathException(\"Expression is not a path:\" + xpath);\n+                throw new JXPathException(\"Cannot create path:\" + xpath);\n             }\n             return ((NodePointer) pointer).createPath(this);\n         }\n         catch (Throwable ex) {\n-            ex.printStackTrace();\n             throw new JXPathException(\n                 \"Exception trying to create xpath \" + xpath,\n                 ex);\n             return setValue(xpath, expr, value, true);\n         }\n         catch (Throwable ex) {\n-            ex.printStackTrace();\n             throw new JXPathException(\n                 \"Exception trying to create xpath \" + xpath,\n                 ex);\n             pointer = ctx.getSingleNodePointer();\n         }\n         else {\n+            if (create) {\n+                checkSimplePath(expr);\n+            }\n+            \n             // This should never happen\n             throw new JXPathException(\"Cannot set value for xpath: \" + xpath);\n         }\n             pointer.setValue(value);\n         }\n         return pointer;\n+    }\n+\n+    /**\n+     * Checks if the path follows the JXPath restrictions on the type\n+     * of path that can be passed to create... methods.\n+     */\n+    private void checkSimplePath(Expression expr) {\n+        if (!(expr instanceof LocationPath)\n+            || !((LocationPath) expr).isSimplePath()) {\n+            throw new JXPathException(\n+                \"JXPath can only create a path if it uses exclusively \"\n+                    + \"the child:: and attribute:: axes and has \"\n+                    + \"no context-dependent predicates\");\n+        }\n     }\n \n     /**\n--- a/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,v 1.9 2003/01/25 01:50:37 dmitri Exp $\n- * $Revision: 1.9 $\n- * $Date: 2003/01/25 01:50:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,v 1.10 2003/02/18 18:11:37 dmitri Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2003/02/18 18:11:37 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * Abstract superclass for Bean access with JXPath.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2003/01/25 01:50:37 $\n+ * @version $Revision: 1.10 $ $Date: 2003/02/18 18:11:37 $\n  */\n \n public abstract class BeanModelTestCase extends JXPathTestCase {\n             \"/nestedBean/int\",\n             new Integer(1),\n             \"/nestedBean/int\");\n+\n+        boolean ex = false;\n+        try {\n+            assertXPathCreatePath(\n+                context,\n+                \"/nestedBean/beans[last() + 1]\",\n+                new Integer(1),\n+                \"/nestedBean/beans[last() + 1]\");\n+        }\n+        catch (Exception e){\n+            ex = true;\n+        }\n+        assertTrue(\"Exception thrown on invalid path for creation\", ex);\n+        \n     }\n \n     public void testCreatePathAndSetValue() {", "timestamp": 1045591897, "metainfo": ""}