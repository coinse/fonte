{"sha": "bacfe155a8de2c044b8cfb2daa875623240bfe06", "log": "Fixed dynamic BeanInfo lookup   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathIntrospector.java\n  * JXPathBeanInfo} objects for Java classes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.9 $ $Date: 2004/02/29 14:17:42 $\n+ * @version $Revision: 1.10 $ $Date: 2004/05/08 15:10:05 $\n  */\n public class JXPathIntrospector {\n \n      * interfaces.\n      */\n     private static JXPathBeanInfo findDynamicBeanInfo(Class beanClass) {\n-        JXPathBeanInfo beanInfo;\n+        JXPathBeanInfo beanInfo = null;\n         if (beanClass.isInterface()) {\n             beanInfo = (JXPathBeanInfo) byInterface.get(beanClass);\n-            if (beanInfo != null) {\n+            if (beanInfo != null && beanInfo.isDynamic()) {\n                 return beanInfo;\n             }\n         }\n         if (interfaces != null) {\n             for (int i = 0; i < interfaces.length; i++) {\n                 beanInfo = findDynamicBeanInfo(interfaces[i]);\n-                if (beanInfo != null) {\n+                if (beanInfo != null && beanInfo.isDynamic()) {\n                     return beanInfo;\n                 }\n             }\n \n         Class sup = beanClass.getSuperclass();\n         if (sup != null) {\n-            return findDynamicBeanInfo(sup);\n+            beanInfo = (JXPathBeanInfo) byClass.get(sup);\n+            if (beanInfo != null && beanInfo.isDynamic()) {\n+                return beanInfo;\n+            }\n+            return findDynamicBeanInfo(sup);                \n         }\n         return null;\n     }", "timestamp": 1084029005, "metainfo": ""}