{"sha": "d57be94d908082a1c22abbce37de2a46a9069526", "log": "Made test more readable   ", "commit": "\n--- a/src/test/org/apache/commons/jxpath/JXPathTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/JXPathTestCase.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/JXPathTestCase.java,v 1.10 2002/04/10 03:40:21 dmitri Exp $\n- * $Revision: 1.10 $\n- * $Date: 2002/04/10 03:40:21 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/JXPathTestCase.java,v 1.11 2002/04/11 02:57:41 dmitri Exp $\n+ * $Revision: 1.11 $\n+ * $Date: 2002/04/11 02:57:41 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * </p>\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2002/04/10 03:40:21 $\n+ * @version $Revision: 1.11 $ $Date: 2002/04/11 02:57:41 $\n  */\n \n public class JXPathTestCase extends TestCase\n         System.setProperty(JXPathContextFactory.FACTORY_NAME_PROPERTY,\n                 \"org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl\");\n         try {\n-            XMLDocumentContainer docCtr = new XMLDocumentContainer(getClass().getResource(\"Test.properties\"));\n+            XMLDocumentContainer docCtr = new XMLDocumentContainer(getClass().getResource(\"Vendor.xml\"));\n             Document doc = (Document)docCtr.getValue();\n             JXPathContext ctx = JXPathContextFactory.newInstance().newContext(null, doc);\n             ctx.setLocale(Locale.US);\n     }\n \n     private TestBeanWithDOM createTestBeanWithDOM(){\n-        XMLDocumentContainer docCtr = new XMLDocumentContainer(getClass().getResource(\"Test.properties\"));\n+        XMLDocumentContainer docCtr = new XMLDocumentContainer(getClass().getResource(\"Vendor.xml\"));\n         Document doc = (Document)docCtr.getValue();\n         TestBeanWithDOM tbwdom = new TestBeanWithDOM();\n         tbwdom.setVendor(doc.getDocumentElement());\n     }\n \n     static final XP[] dom_tests = new XP[]{\n-        test(\"vendor/location/address/street\", \"Some street\"),\n-        test(\"vendor/location[2]/address/street\", \"Other street\"),\n-        test(\"//street\", \"Some street\"),\n+        test(\"vendor/location/address/street\", \"Orchard Road\"),\n+        test(\"vendor/location[2]/address/street\", \"Tangerine Drive\"),\n+        test(\"//street\", \"Orchard Road\"),\n         test(\"local-name(//street/..)\", \"address\"),\n         test(\"number(vendor/location/employeeCount)\", new Double(10)),\n         test(\"vendor/location/employeeCount + 1\", new Double(11)),\n         test(\"vendor/location/employeeCount and true()\", Boolean.TRUE),\n-        test(\"vendor/location[.//employeeCount = 10]/following-sibling::location//street\", \"Other street\"),\n+        test(\"vendor/location[.//employeeCount = 10]/following-sibling::location//street\", \"Tangerine Drive\"),\n         testPath(\"vendor/location[.//employeeCount = 10]/following-sibling::location//street\",\n                 \"/vendor[1]/location[2]/address[1]/street[1]\"),\n         testPath(\"//location[2]/preceding-sibling::location//street\",\n         test(\"vendor/location/@id\", \"100\"),\n         testPath(\"vendor/location/@id\", \"/vendor[1]/location[1]/@id\"),\n         testEval(\"vendor/location/@id\", list(\"100\", \"101\")),\n-        test(\"vendor/nsnode/foo:bar\", \"BAR\"),\n-        test(\"namespace-uri(vendor/nsnode/foo:bar)\", \"foonamespace\"),\n-        test(\"local-name(vendor/nsnode/foo:bar)\", \"bar\"),\n-        test(\"name(vendor/nsnode/foo:bar)\", \"foonamespace:bar\"),\n-        test(\"vendor/nsnode/baz\", \"BAZ\"),\n-        test(\"vendor/nsnode/baz/namespace::foo\", \"foonamespace\"),\n-        testPath(\"vendor/nsnode/baz/namespace::foo\", \"/vendor[1]/nsnode[1]/baz[1]/namespace::foo\"),\n-        test(\"count(vendor/nsnode/namespace::*)\", new Double(3)),\n-        test(\"name(vendor/nsnode/baz/namespace::foo)\", \"foonamespace:foo\"),\n-        test(\"local-name(vendor/nsnode/baz/namespace::foo)\", \"foo\"),\n-        test(\"vendor/nsnode/foo:bar/@foo:attr\", \"A\"),\n-        test(\"vendor/nsnode/zoo:bar/@zoo:attr\", \"A\"),\n-        test(\"namespace-uri(vendor/nsnode/foo:bar/@foo:attr)\", \"foonamespace\"),\n-        test(\"local-name(vendor/nsnode/foo:bar/@foo:attr)\", \"attr\"),\n-        test(\"name(vendor/nsnode/foo:bar/@foo:attr)\", \"foonamespace:attr\"),\n-        test(\"vendor/nsnode/foo:bar/@attr\", \"B\"),\n-        test(\"namespace-uri(vendor/nsnode/foo:bar/@attr)\", \"\"),\n-        test(\"local-name(vendor/nsnode/foo:bar/@attr)\", \"attr\"),\n-        test(\"name(vendor/nsnode/foo:bar/@attr)\", \"attr\"),\n-        test(\"vendor/nsnode/foo:x/y/ancestor::foo:x/y\", \"why\"),\n-        test(\"vendor/nsnode/foo:x/ancestor-or-self::foo:x/y\", \"why\"),\n-        test(\"vendor/nsnode/foo:x/y/ancestor::foo:*\" + \"/y\", \"why\"),\n-        test(\"count(vendor/nsnode/foo:*)\", new Double(2)),\n-        test(\"count(vendor/nsnode/zoo:*)\", new Double(2)),\n-        test(\"count(vendor/nsnode/*)\", new Double(1)),\n-        testEval(\"vendor/nsnode/foo:bar/@foo:*\", list(\"A\")),\n-        testEval(\"vendor/nsnode/foo:bar/@*\", list(\"B\")),\n-        test(\"count(//foo:*)\", new Double(2)),\n-        test(\"vendor/nsnode/foo:x/y/parent::foo:*\" + \"/y\", \"why\"),\n-        test(\"//location/following::foo:x/y\", \"why\"),\n-        test(\"//foo:x/self::foo:x/y\", \"why\"),\n-        testLenient(\"//foo:x/self::x/y\", null),\n-\n-        test(\"//nsnode/comment()\", \"z\"),\n-//        test(\"//nsnode/text()\", \"text\"),\n-        testPath(\"//nsnode/text()\", \"/vendor[1]/nsnode[1]/text()[1]\"),\n-        test(\"//nsnode/processing-instruction()\", \"ahead\"),\n-        test(\"//nsnode/processing-instruction('do')\", \"it\"),\n-        testPath(\"//nsnode/processing-instruction('do')\", \"/vendor[1]/nsnode[1]/processing-instruction('do')[1]\"),\n-        test(\"name(//nsnode/processing-instruction()[1])\", \"go\"),\n-\n-        test(\"//nsnode/baz/@xml:lang\", \"fr\"),\n-        test(\"//nsnode/baz[lang('fr')]\", \"BAZ\"),\n-        test(\"//nsnode/foo:x[lang('en')]/y\", \"why\"),\n-        test(\"vendor/location/@blank\", \"\"),\n+        test(\"vendor/product/price:amount\", \"45.95\"),\n+        test(\"namespace-uri(vendor/product/price:amount)\", \"priceNS\"),\n+        test(\"local-name(vendor/product/price:amount)\", \"amount\"),\n+        test(\"name(vendor/product/price:amount)\", \"priceNS:amount\"),\n+        test(\"vendor/product/prix\", \"934.99\"),\n+        test(\"vendor/product/prix/namespace::price\", \"priceNS\"),\n+        testPath(\"vendor/product/prix/namespace::price\", \"/vendor[1]/product[1]/prix[1]/namespace::price\"),\n+        test(\"count(vendor/product/namespace::*)\", new Double(3)),\n+        test(\"name(vendor/product/prix/namespace::price)\", \"priceNS:price\"),\n+        test(\"local-name(vendor/product/prix/namespace::price)\", \"price\"),\n+        test(\"vendor/product/price:amount/@price:discount\", \"10%\"),\n+        test(\"vendor/product/value:amount/@value:discount\", \"10%\"),\n+        test(\"namespace-uri(vendor/product/price:amount/@price:discount)\", \"priceNS\"),\n+        test(\"local-name(vendor/product/price:amount/@price:discount)\", \"discount\"),\n+        test(\"name(vendor/product/price:amount/@price:discount)\", \"priceNS:discount\"),\n+        test(\"vendor/product/price:amount/@discount\", \"20%\"),\n+        test(\"namespace-uri(vendor/product/price:amount/@discount)\", \"\"),\n+        test(\"local-name(vendor/product/price:amount/@discount)\", \"discount\"),\n+        test(\"name(vendor/product/price:amount/@discount)\", \"discount\"),\n+        test(\"vendor/product/price:sale/saleEnds/ancestor::price:sale/saleEnds\", \"never\"),\n+        test(\"vendor/product/price:sale/ancestor-or-self::price:sale/saleEnds\", \"never\"),\n+        test(\"vendor/product/price:sale/saleEnds/ancestor::price:*\" + \"/saleEnds\", \"never\"),\n+        test(\"count(vendor/product/price:*)\", new Double(2)),\n+        test(\"count(vendor/product/value:*)\", new Double(2)),\n+        test(\"count(vendor/product/*)\", new Double(2)),\n+        testEval(\"vendor/product/price:amount/@price:*\", list(\"10%\")),\n+        testEval(\"vendor/product/price:amount/@*\", list(\"20%\")),\n+        test(\"count(//price:*)\", new Double(2)),\n+        test(\"vendor/product/price:sale/saleEnds/parent::price:*\" + \"/saleEnds\", \"never\"),\n+        test(\"//location/following::price:sale/saleEnds\", \"never\"),\n+        test(\"//price:sale/self::price:sale/saleEnds\", \"never\"),\n+        testLenient(\"//price:sale/self::x/saleEnds\", null),\n+\n+        test(\"//product/comment()\", \"We are not buying this product, ever\"),\n+        test(\"//product/text()[. != '']\", \"We love this product.\"),\n+        testPath(\"//product/text()\", \"/vendor[1]/product[1]/text()[1]\"),\n+        test(\"//product/processing-instruction()\", \"do not show anybody\"),\n+        test(\"//product/processing-instruction('report')\", \"average only\"),\n+        testPath(\"//product/processing-instruction('report')\", \"/vendor[1]/product[1]/processing-instruction('report')[1]\"),\n+        test(\"name(//product/processing-instruction()[1])\", \"security\"),\n+\n+        test(\"//product/prix/@xml:lang\", \"fr\"),\n+        test(\"//product/prix[lang('fr')]\", \"934.99\"),\n+        test(\"//product/price:sale[lang('en')]/saleEnds\", \"never\"),\n+        test(\"vendor/location/@manager\", \"\"),\n         testLenient(\"vendor/location/@missing\", null),\n         test(\"count(vendor/location[1]/@*)\", new Double(3)),\n-        test(\"vendor/location[@id='101']//street\", \"Other street\"),\n+        test(\"vendor/location[@id='101']//street\", \"Tangerine Drive\"),\n         test(\"$test/int\", new Integer(1)),\n-        test(\"$test/vendor/location[1]//street\", \"Some street\"),\n+        test(\"$test/vendor/location[1]//street\", \"Orchard Road\"),\n         testPath(\"$test/vendor/location[1]//street\", \"$test/vendor/location[1]/address[1]/street[1]\"),\n-        test(\"$dom/vendor//street\", \"Some street\"),\n-        test(\"$test/object/vendor/location[1]//street\", \"Some street\"),\n+        test(\"$dom/vendor//street\", \"Orchard Road\"),\n+        test(\"$test/object/vendor/location[1]//street\", \"Orchard Road\"),\n         testPath(\"$test/object/vendor/location[1]//street\", \"$test/object/vendor[1]/location[1]/address[1]/street[1]\"),\n-        test(\"$object//street\", \"Some street\"),\n+        test(\"$object//street\", \"Orchard Road\"),\n         testPath(\"$object//street\", \"$object/vendor[1]/location[1]/address[1]/street[1]\"),\n \n         testPath(\"$null\", \"$null\"),", "timestamp": 1018493861, "metainfo": ""}