{"sha": "71a7cbb20a55156056c0015bc89cba6246217501", "log": "Allowed null to be passed as the \"parameters\" argument   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n+++ b/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java,v 1.5 2003/10/09 21:31:42 rdonkin Exp $\n- * $Revision: 1.5 $\n- * $Date: 2003/10/09 21:31:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java,v 1.6 2004/01/17 03:25:51 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2004/01/17 03:25:51 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * as constructors based on a name and list of parameters.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2003/10/09 21:31:42 $\n+ * @version $Revision: 1.6 $ $Date: 2004/01/17 03:25:51 $\n  */\n public class MethodLookupUtils {\n \n         Object[] parameters) \n      {\n         boolean tryExact = true;\n-        int count = parameters.length;\n+        int count = parameters == null ? 0 : parameters.length;\n         Class types[] = new Class[count];\n         for (int i = 0; i < count; i++) {\n             Object param = parameters[i];\n         Object[] parameters) \n     {\n         boolean tryExact = true;\n-        int count = parameters.length;\n+        int count = parameters == null ? 0 : parameters.length;\n         Class types[] = new Class[count];\n         for (int i = 0; i < count; i++) {\n             Object param = parameters[i];\n         String name,\n         Object[] parameters) \n     {\n-        if (parameters.length < 1 || parameters[0] == null) {\n+        if (parameters == null\n+            || parameters.length < 1\n+            || parameters[0] == null) {\n             return null;\n         }\n \n             && ExpressionContext.class.isAssignableFrom(types[0])) {\n             pi++;\n         }\n-        if (types.length != parameters.length + pi) {\n+        int length = parameters == null ? 0 : parameters.length;\n+        if (types.length != length + pi) {\n             return NO_MATCH;\n         }\n         int totalMatch = EXACT_MATCH;\n-        for (int i = 0; i < parameters.length; i++) {\n+        for (int i = 0; i < length; i++) {\n             int match = matchType(types[i + pi], parameters[i]);\n             if (match == NO_MATCH) {\n                 return NO_MATCH;", "timestamp": 1074309951, "metainfo": ""}