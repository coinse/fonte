{"sha": "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06", "log": "Optimized parser by using SKIP instead of SPECIAL_CHARACTER   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java\n+++ b/src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java\n  String nc1, nc2 = null;\n     nc1 = NCName();\n     switch (jj_nt.kind) {\n-    case 75:\n-      jj_consume_token(75);\n+    case 79:\n+      jj_consume_token(79);\n       nc2 = NCName();\n       break;\n     default:\n     String nc1, nc2 = null;\n     if (jj_2_1(2147483647)) {\n       nc1 = NCName();\n-      jj_consume_token(75);\n+      jj_consume_token(79);\n       nc2 = NCName();\n     } else {\n       switch (jj_nt.kind) {\n     case FUNCTION_ROUND:\n     case FUNCTION_FORMAT_NUMBER:\n     case NCName:\n-    case 78:\n-    case 79:\n     case 82:\n-    case 84:\n+    case 83:\n+    case 86:\n+    case 88:\n       ex = RelativeLocationPath();\n       break;\n     case SLASH:\n     case FUNCTION_ROUND:\n     case FUNCTION_FORMAT_NUMBER:\n     case NCName:\n-    case 82:\n-    case 84:\n+    case 86:\n+    case 88:\n       axis = AxisSpecifier();\n       if (jj_2_3(2147483647)) {\n         type = NodeType();\n-        jj_consume_token(76);\n-        jj_consume_token(77);\n+        jj_consume_token(80);\n+        jj_consume_token(81);\n       } else if (jj_2_4(2147483647)) {\n         jj_consume_token(PI);\n-        jj_consume_token(76);\n+        jj_consume_token(80);\n         jj_consume_token(Literal);\n                     instruction = unescape(token.image.substring(1, token.image.length() - 1));\n-        jj_consume_token(77);\n+        jj_consume_token(81);\n       } else {\n         switch (jj_nt.kind) {\n         case OR:\n         case FUNCTION_ROUND:\n         case FUNCTION_FORMAT_NUMBER:\n         case NCName:\n-        case 84:\n+        case 88:\n           name = WildcardName();\n           break;\n         default:\n         }\n       }\n       break;\n-    case 78:\n-      jj_consume_token(78);\n+    case 82:\n+      jj_consume_token(82);\n                     axis = Compiler.AXIS_SELF;\n                     type = Compiler.NODE_TYPE_NODE;\n       break;\n-    case 79:\n-      jj_consume_token(79);\n+    case 83:\n+      jj_consume_token(83);\n                     axis = Compiler.AXIS_PARENT;\n                     type = Compiler.NODE_TYPE_NODE;\n       break;\n     label_3:\n     while (true) {\n       switch (jj_nt.kind) {\n-      case 80:\n+      case 84:\n         ;\n         break;\n       default:\n /* [9] PredicateExpr ::=  Expr  */\n   final public Object Predicate() throws ParseException {\n     Object ex;\n-    jj_consume_token(80);\n+    jj_consume_token(84);\n     ex = Expression();\n-    jj_consume_token(81);\n+    jj_consume_token(85);\n         {if (true) return ex;}\n     throw new Error(\"Missing return statement in function\");\n   }\n   final public int AbbreviatedAxisSpecifier() throws ParseException {\n     int axis = Compiler.AXIS_CHILD;\n     switch (jj_nt.kind) {\n-    case 82:\n-      jj_consume_token(82);\n+    case 86:\n+      jj_consume_token(86);\n            axis = Compiler.AXIS_ATTRIBUTE;\n       break;\n     default:\n     case VARIABLE:\n       ex = VariableReference();\n       break;\n-    case 76:\n-      jj_consume_token(76);\n+    case 80:\n+      jj_consume_token(80);\n       ex = Expression();\n-      jj_consume_token(77);\n+      jj_consume_token(81);\n       break;\n     case Literal:\n       jj_consume_token(Literal);\n   final public ArrayList ArgumentList() throws ParseException {\n     ArrayList args = null;\n     Object arg;\n-    jj_consume_token(76);\n+    jj_consume_token(80);\n     switch (jj_nt.kind) {\n     case SLASH:\n     case SLASHSLASH:\n     case FUNCTION_ROUND:\n     case FUNCTION_FORMAT_NUMBER:\n     case NCName:\n-    case 76:\n-    case 78:\n-    case 79:\n+    case 80:\n     case 82:\n-    case 84:\n+    case 83:\n+    case 86:\n+    case 88:\n       arg = Argument();\n                                 args = new ArrayList(); args.add(arg);\n       label_4:\n       while (true) {\n         switch (jj_nt.kind) {\n-        case 83:\n+        case 87:\n           ;\n           break;\n         default:\n           jj_la1[18] = jj_gen;\n           break label_4;\n         }\n-        jj_consume_token(83);\n+        jj_consume_token(87);\n         arg = Argument();\n                                        args.add(arg);\n       }\n       jj_la1[19] = jj_gen;\n       ;\n     }\n-    jj_consume_token(77);\n+    jj_consume_token(81);\n         {if (true) return args;}\n     throw new Error(\"Missing return statement in function\");\n   }\n       case FUNCTION_ROUND:\n       case FUNCTION_FORMAT_NUMBER:\n       case NCName:\n-      case 78:\n-      case 79:\n       case 82:\n-      case 84:\n+      case 83:\n+      case 86:\n+      case 88:\n         ex = LocationPath();\n         break;\n       default:\n     label_6:\n     while (true) {\n       switch (jj_nt.kind) {\n-      case 80:\n+      case 84:\n         ;\n         break;\n       default:\n       switch (jj_nt.kind) {\n       case MOD:\n       case DIV:\n-      case 84:\n+      case 88:\n         ;\n         break;\n       default:\n         break label_14;\n       }\n       switch (jj_nt.kind) {\n-      case 84:\n-        jj_consume_token(84);\n+      case 88:\n+        jj_consume_token(88);\n         r = UnaryExpr();\n                                     ex = compiler.multiply(ex, r);\n         break;\n     case FUNCTION_ROUND:\n     case FUNCTION_FORMAT_NUMBER:\n     case NCName:\n-    case 76:\n-    case 78:\n-    case 79:\n+    case 80:\n     case 82:\n-    case 84:\n+    case 83:\n+    case 86:\n+    case 88:\n       ex = UnionExpr();\n       break;\n     case MINUS:\n     Object qn;\n     String nc1, nc2 = null;\n     switch (jj_nt.kind) {\n-    case 84:\n-      jj_consume_token(84);\n+    case 88:\n+      jj_consume_token(88);\n       break;\n     case OR:\n     case AND:\n     }\n                            nc1 = token.image;\n     switch (jj_nt.kind) {\n-    case 75:\n-      jj_consume_token(75);\n+    case 79:\n+      jj_consume_token(79);\n       switch (jj_nt.kind) {\n-      case 84:\n-        jj_consume_token(84);\n+      case 88:\n+        jj_consume_token(88);\n         break;\n       case OR:\n       case AND:\n     return retval;\n   }\n \n+  final private boolean jj_3R_65() {\n+    if (jj_scan_token(FUNCTION_ID)) return true;\n+    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n+    return false;\n+  }\n+\n+  final private boolean jj_3R_104() {\n+    if (jj_3R_118()) return true;\n+    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n+    return false;\n+  }\n+\n   final private boolean jj_3R_64() {\n     if (jj_scan_token(FUNCTION_COUNT)) return true;\n-    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_104() {\n-    if (jj_3R_118()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   }\n \n   final private boolean jj_3R_153() {\n-    if (jj_scan_token(82)) return true;\n+    if (jj_scan_token(86)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   }\n \n   final private boolean jj_3R_174() {\n-    if (jj_scan_token(84)) return true;\n+    if (jj_scan_token(88)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_170()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n   }\n \n   final private boolean jj_3R_116() {\n-    if (jj_scan_token(80)) return true;\n+    if (jj_scan_token(84)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_104()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(81)) return true;\n+    if (jj_scan_token(85)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3_3() {\n     if (jj_3R_17()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(76)) return true;\n-    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(77)) return true;\n+    if (jj_scan_token(80)) return true;\n+    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n+    if (jj_scan_token(81)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n \n   final private boolean jj_3R_101() {\n-    if (jj_scan_token(79)) return true;\n+    if (jj_scan_token(83)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n \n   final private boolean jj_3R_100() {\n-    if (jj_scan_token(78)) return true;\n+    if (jj_scan_token(82)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3R_114() {\n     if (jj_scan_token(PI)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(76)) return true;\n+    if (jj_scan_token(80)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_scan_token(Literal)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(77)) return true;\n+    if (jj_scan_token(81)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3R_113() {\n     if (jj_3R_17()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(76)) return true;\n-    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(77)) return true;\n+    if (jj_scan_token(80)) return true;\n+    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n+    if (jj_scan_token(81)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   }\n \n   final private boolean jj_3R_137() {\n-    if (jj_scan_token(83)) return true;\n+    if (jj_scan_token(87)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_136()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n   }\n \n   final private boolean jj_3R_119() {\n-    if (jj_scan_token(76)) return true;\n+    if (jj_scan_token(80)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     Token xsp;\n     xsp = jj_scanpos;\n     if (jj_3R_127()) jj_scanpos = xsp;\n     else if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(77)) return true;\n+    if (jj_scan_token(81)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3_1() {\n     if (jj_3R_15()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(75)) return true;\n+    if (jj_scan_token(79)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3R_138() {\n     if (jj_3R_15()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(75)) return true;\n+    if (jj_scan_token(79)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_15()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n   }\n \n   final private boolean jj_3R_154() {\n-    if (jj_scan_token(84)) return true;\n+    if (jj_scan_token(88)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   }\n \n   final private boolean jj_3R_124() {\n-    if (jj_scan_token(75)) return true;\n+    if (jj_scan_token(79)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_15()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n   }\n \n   final private boolean jj_3R_133() {\n-    if (jj_scan_token(75)) return true;\n+    if (jj_scan_token(79)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     Token xsp;\n     xsp = jj_scanpos;\n   }\n \n   final private boolean jj_3R_131() {\n-    if (jj_scan_token(84)) return true;\n+    if (jj_scan_token(88)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   final private boolean jj_3_5() {\n     if (jj_3R_18()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(76)) return true;\n+    if (jj_scan_token(80)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   }\n \n   final private boolean jj_3R_93() {\n-    if (jj_scan_token(76)) return true;\n+    if (jj_scan_token(80)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     if (jj_3R_104()) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    if (jj_scan_token(77)) return true;\n+    if (jj_scan_token(81)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n \n   final private boolean jj_3R_66() {\n     if (jj_scan_token(FUNCTION_LOCAL_NAME)) return true;\n-    if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n-    return false;\n-  }\n-\n-  final private boolean jj_3R_65() {\n-    if (jj_scan_token(FUNCTION_ID)) return true;\n     if (jj_la == 0 && jj_scanpos == jj_lastpos) return false;\n     return false;\n   }\n   private boolean jj_semLA;\n   private int jj_gen;\n   final private int[] jj_la1 = new int[39];\n-  final private int[] jj_la1_0 = {0x7f800000,0x7800000,0x0,0x0,0x7800000,0xff80000c,0xc,0x4,0xc,0xc,0x7f800000,0xff800000,0x0,0x80000000,0x80000000,0x0,0x16000,0x7f800000,0x0,0xff81604c,0x10,0xff80000c,0x0,0xc,0x800000,0x1000000,0x180,0x180,0x1e00,0x1e00,0x20,0x40,0x6000000,0x6000000,0xff81604c,0x7f800000,0x7f800000,0x0,0x78000000,};\n-  final private int[] jj_la1_1 = {0xfffff000,0x0,0xfffff000,0x0,0x0,0xffffffff,0x0,0x0,0x0,0x0,0xfffff000,0xffffffff,0x0,0xfff,0xfff,0x0,0x0,0xfffff000,0x0,0xffffffff,0x0,0xffffffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffffffff,0xfffff000,0xfffff000,0x0,0x0,};\n-  final private int[] jj_la1_2 = {0x7ff,0x400,0x3ff,0x800,0x400,0x14c7ff,0x0,0x0,0x0,0x0,0x1007ff,0x14c7ff,0x10000,0x0,0x0,0x40000,0x1000,0x7ff,0x80000,0x14d7ff,0x0,0x14c7ff,0x10000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x100000,0x100000,0x14d7ff,0x1007ff,0x1007ff,0x800,0x0,};\n+  final private int[] jj_la1_0 = {0xf8000000,0x78000000,0x0,0x0,0x78000000,0xf80000c0,0xc0,0x40,0xc0,0xc0,0xf8000000,0xf8000000,0x0,0x0,0x0,0x0,0x160000,0xf8000000,0x0,0xf81604c0,0x100,0xf80000c0,0x0,0xc0,0x8000000,0x10000000,0x1800,0x1800,0x1e000,0x1e000,0x200,0x400,0x60000000,0x60000000,0xf81604c0,0xf8000000,0xf8000000,0x0,0x80000000,};\n+  final private int[] jj_la1_1 = {0xffff0007,0x0,0xffff0000,0x0,0x0,0xffffffff,0x0,0x0,0x0,0x0,0xffff0007,0xffffffff,0x0,0xfff8,0xfff8,0x0,0x0,0xffff0007,0x0,0xffffffff,0x0,0xffffffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffffffff,0xffff0007,0xffff0007,0x0,0x7,};\n+  final private int[] jj_la1_2 = {0x7fff,0x4000,0x3fff,0x8000,0x4000,0x14c7fff,0x0,0x0,0x0,0x0,0x1007fff,0x14c7fff,0x100000,0x0,0x0,0x400000,0x10000,0x7fff,0x800000,0x14d7fff,0x0,0x14c7fff,0x100000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1000000,0x1000000,0x14d7fff,0x1007fff,0x1007fff,0x8000,0x0,};\n   final private JJCalls[] jj_2_rtns = new JJCalls[6];\n   private boolean jj_rescan = false;\n   private int jj_gc = 0;\n \n   final public ParseException generateParseException() {\n     jj_expentries.removeAllElements();\n-    boolean[] la1tokens = new boolean[85];\n-    for (int i = 0; i < 85; i++) {\n+    boolean[] la1tokens = new boolean[89];\n+    for (int i = 0; i < 89; i++) {\n       la1tokens[i] = false;\n     }\n     if (jj_kind >= 0) {\n         }\n       }\n     }\n-    for (int i = 0; i < 85; i++) {\n+    for (int i = 0; i < 89; i++) {\n       if (la1tokens[i]) {\n         jj_expentry = new int[1];\n         jj_expentry[0] = i;\n--- a/src/java/org/apache/commons/jxpath/ri/parser/XPathParserConstants.java\n+++ b/src/java/org/apache/commons/jxpath/ri/parser/XPathParserConstants.java\n public interface XPathParserConstants {\n \n   int EOF = 0;\n-  int S = 1;\n-  int SLASH = 2;\n-  int SLASHSLASH = 3;\n-  int UNION = 4;\n-  int PLUS = 5;\n-  int MINUS = 6;\n-  int EQ = 7;\n-  int NEQ = 8;\n-  int LT = 9;\n-  int LTE = 10;\n-  int GT = 11;\n-  int GTE = 12;\n-  int VARIABLE = 13;\n-  int Literal = 14;\n-  int Digit = 15;\n-  int Number = 16;\n-  int Letter = 17;\n-  int BaseChar = 18;\n-  int Ideographic = 19;\n-  int CombiningChar = 20;\n-  int UnicodeDigit = 21;\n-  int Extender = 22;\n-  int OR = 23;\n-  int AND = 24;\n-  int MOD = 25;\n-  int DIV = 26;\n-  int NODE = 27;\n-  int TEXT = 28;\n-  int COMMENT = 29;\n-  int PI = 30;\n-  int AXIS_SELF = 31;\n-  int AXIS_CHILD = 32;\n-  int AXIS_PARENT = 33;\n-  int AXIS_ANCESTOR = 34;\n-  int AXIS_ATTRIBUTE = 35;\n-  int AXIS_NAMESPACE = 36;\n-  int AXIS_PRECEDING = 37;\n-  int AXIS_FOLLOWING = 38;\n-  int AXIS_DESCENDANT = 39;\n-  int AXIS_ANCESTOR_OR_SELF = 40;\n-  int AXIS_FOLLOWING_SIBLING = 41;\n-  int AXIS_PRECEDING_SIBLING = 42;\n-  int AXIS_DESCENDANT_OR_SELF = 43;\n-  int FUNCTION_LAST = 44;\n-  int FUNCTION_POSITION = 45;\n-  int FUNCTION_COUNT = 46;\n-  int FUNCTION_ID = 47;\n-  int FUNCTION_KEY = 48;\n-  int FUNCTION_LOCAL_NAME = 49;\n-  int FUNCTION_NAMESPACE_URI = 50;\n-  int FUNCTION_NAME = 51;\n-  int FUNCTION_STRING = 52;\n-  int FUNCTION_CONCAT = 53;\n-  int FUNCTION_STARTS_WITH = 54;\n-  int FUNCTION_CONTAINS = 55;\n-  int FUNCTION_SUBSTRING_BEFORE = 56;\n-  int FUNCTION_SUBSTRING_AFTER = 57;\n-  int FUNCTION_SUBSTRING = 58;\n-  int FUNCTION_STRING_LENGTH = 59;\n-  int FUNCTION_NORMALIZE_SPACE = 60;\n-  int FUNCTION_TRANSLATE = 61;\n-  int FUNCTION_BOOLEAN = 62;\n-  int FUNCTION_NOT = 63;\n-  int FUNCTION_TRUE = 64;\n-  int FUNCTION_FALSE = 65;\n-  int FUNCTION_NULL = 66;\n-  int FUNCTION_LANG = 67;\n-  int FUNCTION_NUMBER = 68;\n-  int FUNCTION_SUM = 69;\n-  int FUNCTION_FLOOR = 70;\n-  int FUNCTION_CEILING = 71;\n-  int FUNCTION_ROUND = 72;\n-  int FUNCTION_FORMAT_NUMBER = 73;\n-  int NCName = 74;\n+  int SLASH = 6;\n+  int SLASHSLASH = 7;\n+  int UNION = 8;\n+  int PLUS = 9;\n+  int MINUS = 10;\n+  int EQ = 11;\n+  int NEQ = 12;\n+  int LT = 13;\n+  int LTE = 14;\n+  int GT = 15;\n+  int GTE = 16;\n+  int VARIABLE = 17;\n+  int Literal = 18;\n+  int Digit = 19;\n+  int Number = 20;\n+  int Letter = 21;\n+  int BaseChar = 22;\n+  int Ideographic = 23;\n+  int CombiningChar = 24;\n+  int UnicodeDigit = 25;\n+  int Extender = 26;\n+  int OR = 27;\n+  int AND = 28;\n+  int MOD = 29;\n+  int DIV = 30;\n+  int NODE = 31;\n+  int TEXT = 32;\n+  int COMMENT = 33;\n+  int PI = 34;\n+  int AXIS_SELF = 35;\n+  int AXIS_CHILD = 36;\n+  int AXIS_PARENT = 37;\n+  int AXIS_ANCESTOR = 38;\n+  int AXIS_ATTRIBUTE = 39;\n+  int AXIS_NAMESPACE = 40;\n+  int AXIS_PRECEDING = 41;\n+  int AXIS_FOLLOWING = 42;\n+  int AXIS_DESCENDANT = 43;\n+  int AXIS_ANCESTOR_OR_SELF = 44;\n+  int AXIS_FOLLOWING_SIBLING = 45;\n+  int AXIS_PRECEDING_SIBLING = 46;\n+  int AXIS_DESCENDANT_OR_SELF = 47;\n+  int FUNCTION_LAST = 48;\n+  int FUNCTION_POSITION = 49;\n+  int FUNCTION_COUNT = 50;\n+  int FUNCTION_ID = 51;\n+  int FUNCTION_KEY = 52;\n+  int FUNCTION_LOCAL_NAME = 53;\n+  int FUNCTION_NAMESPACE_URI = 54;\n+  int FUNCTION_NAME = 55;\n+  int FUNCTION_STRING = 56;\n+  int FUNCTION_CONCAT = 57;\n+  int FUNCTION_STARTS_WITH = 58;\n+  int FUNCTION_CONTAINS = 59;\n+  int FUNCTION_SUBSTRING_BEFORE = 60;\n+  int FUNCTION_SUBSTRING_AFTER = 61;\n+  int FUNCTION_SUBSTRING = 62;\n+  int FUNCTION_STRING_LENGTH = 63;\n+  int FUNCTION_NORMALIZE_SPACE = 64;\n+  int FUNCTION_TRANSLATE = 65;\n+  int FUNCTION_BOOLEAN = 66;\n+  int FUNCTION_NOT = 67;\n+  int FUNCTION_TRUE = 68;\n+  int FUNCTION_FALSE = 69;\n+  int FUNCTION_NULL = 70;\n+  int FUNCTION_LANG = 71;\n+  int FUNCTION_NUMBER = 72;\n+  int FUNCTION_SUM = 73;\n+  int FUNCTION_FLOOR = 74;\n+  int FUNCTION_CEILING = 75;\n+  int FUNCTION_ROUND = 76;\n+  int FUNCTION_FORMAT_NUMBER = 77;\n+  int NCName = 78;\n \n   int DEFAULT = 0;\n \n   String[] tokenImage = {\n     \"<EOF>\",\n-    \"<S>\",\n+    \"\\\" \\\"\",\n+    \"\\\"\\\\t\\\"\",\n+    \"\\\"\\\\n\\\"\",\n+    \"\\\"\\\\r\\\"\",\n+    \"\\\"\\\\f\\\"\",\n     \"\\\"/\\\"\",\n     \"\\\"//\\\"\",\n     \"\\\"|\\\"\",\n--- a/src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java\n+++ b/src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java\n    switch (pos)\n    {\n       case 0:\n-         if ((active0 & 0xffffffffff800000L) != 0L || (active1 & 0x3ffL) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            return 13;\n-         }\n-         if ((active1 & 0xc000L) != 0L)\n-            return 11;\n+         if ((active1 & 0xc0000L) != 0L)\n+            return 10;\n+         if ((active0 & 0xfffffffff8000000L) != 0L || (active1 & 0x3fffL) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            return 12;\n+         }\n          return -1;\n       case 1:\n-         if ((active0 & 0x800000800000L) != 0L)\n-            return 13;\n-         if ((active0 & 0xffff7fffff000000L) != 0L || (active1 & 0x3ffL) != 0L)\n-         {\n-            jjmatchedKind = 74;\n+         if ((active0 & 0x8000008000000L) != 0L)\n+            return 12;\n+         if ((active0 & 0xfff7fffff0000000L) != 0L || (active1 & 0x3fffL) != 0L)\n+         {\n+            jjmatchedKind = 78;\n             jjmatchedPos = 1;\n-            return 13;\n+            return 12;\n          }\n          return -1;\n       case 2:\n-         if ((active0 & 0x7ffe7ffff8000000L) != 0L || (active1 & 0x3dfL) != 0L)\n-         {\n-            jjmatchedKind = 74;\n+         if ((active0 & 0x10000070000000L) != 0L || (active1 & 0x208L) != 0L)\n+            return 12;\n+         if ((active0 & 0xffe7ffff80000000L) != 0L || (active1 & 0x3df7L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n             jjmatchedPos = 2;\n-            return 13;\n-         }\n-         if ((active0 & 0x8001000007000000L) != 0L || (active1 & 0x20L) != 0L)\n-            return 13;\n+            return 12;\n+         }\n          return -1;\n       case 3:\n-         if ((active0 & 0x7ff26fefe0000000L) != 0L || (active1 & 0x3d2L) != 0L)\n+         if ((active0 & 0xc1010180000000L) != 0L || (active1 & 0xd0L) != 0L)\n+            return 12;\n+         if ((active0 & 0xff26fefe00000000L) != 0L || (active1 & 0x3d27L) != 0L)\n          {\n             if (jjmatchedPos != 3)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 3;\n             }\n-            return 13;\n-         }\n-         if ((active0 & 0xc101018000000L) != 0L || (active1 & 0xdL) != 0L)\n-            return 13;\n+            return 12;\n+         }\n          return -1;\n       case 4:\n-         if ((active0 & 0x80000000L) != 0L)\n+         if ((active0 & 0xff62fff600000000L) != 0L || (active1 & 0x2907L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 4;\n+            return 12;\n+         }\n+         if ((active0 & 0x4000000000000L) != 0L || (active1 & 0x1420L) != 0L)\n+            return 12;\n+         if ((active0 & 0x800000000L) != 0L)\n          {\n             if (jjmatchedPos < 3)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 3;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x400000000000L) != 0L || (active1 & 0x142L) != 0L)\n-            return 13;\n-         if ((active0 & 0x7ff62fff60000000L) != 0L || (active1 & 0x290L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 4;\n-            return 13;\n-         }\n          return -1;\n       case 5:\n-         if ((active0 & 0x77c62ffe60000000L) != 0L || (active1 & 0x280L) != 0L)\n+         if ((active0 & 0x8300000000000000L) != 0L || (active1 & 0x100L) != 0L)\n+            return 12;\n+         if ((active0 & 0x7c62ffe600000000L) != 0L || (active1 & 0x2807L) != 0L)\n          {\n             if (jjmatchedPos != 5)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 5;\n             }\n-            return 13;\n-         }\n-         if ((active0 & 0x100000000L) != 0L)\n+            return 12;\n+         }\n+         if ((active0 & 0x1000000000L) != 0L)\n          {\n             if (jjmatchedPos < 4)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 4;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x80000000L) != 0L)\n+         if ((active0 & 0x800000000L) != 0L)\n          {\n             if (jjmatchedPos < 3)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 3;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x830000000000000L) != 0L || (active1 & 0x10L) != 0L)\n-            return 13;\n          return -1;\n       case 6:\n-         if ((active0 & 0x200000000L) != 0L)\n+         if ((active0 & 0x200000000L) != 0L || (active1 & 0x804L) != 0L)\n+            return 12;\n+         if ((active0 & 0x2000000000L) != 0L)\n          {\n             if (jjmatchedPos < 5)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 5;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x100000000L) != 0L)\n+         if ((active0 & 0x1000000000L) != 0L)\n          {\n             if (jjmatchedPos < 4)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 4;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x3fc62ffc40000000L) != 0L || (active1 & 0x200L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n+         if ((active0 & 0xfc62ffc400000000L) != 0L || (active1 & 0x2003L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n             jjmatchedPos = 6;\n-            return 13;\n-         }\n-         if ((active0 & 0x4000000020000000L) != 0L || (active1 & 0x80L) != 0L)\n-            return 13;\n+            return 12;\n+         }\n          return -1;\n       case 7:\n-         if ((active0 & 0x200000000L) != 0L)\n+         if ((active0 & 0xf460ffc400000000L) != 0L || (active1 & 0x2003L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 7;\n+            return 12;\n+         }\n+         if ((active0 & 0x802000000000000L) != 0L)\n+            return 12;\n+         if ((active0 & 0x2000000000L) != 0L)\n          {\n             if (jjmatchedPos < 5)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 5;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x80200000000000L) != 0L)\n-            return 13;\n-         if ((active0 & 0x3f460ffc40000000L) != 0L || (active1 & 0x200L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 7;\n-            return 13;\n-         }\n          return -1;\n       case 8:\n-         if ((active0 & 0x18460ff840000000L) != 0L || (active1 & 0x200L) != 0L)\n+         if ((active0 & 0x7000000000000000L) != 0L || (active1 & 0x2L) != 0L)\n+            return 12;\n+         if ((active0 & 0x4000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 7)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 7;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0x8460ff8400000000L) != 0L || (active1 & 0x2001L) != 0L)\n          {\n             if (jjmatchedPos != 8)\n             {\n-               jjmatchedKind = 74;\n+               jjmatchedKind = 78;\n                jjmatchedPos = 8;\n             }\n-            return 13;\n-         }\n+            return 12;\n+         }\n+         return -1;\n+      case 9:\n+         if ((active0 & 0x20000000000000L) != 0L)\n+            return 12;\n+         if ((active0 & 0x78000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 8)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 8;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0x4000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 7)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 7;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0xb440f80400000000L) != 0L || (active1 & 0x2001L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 9;\n+            return 12;\n+         }\n+         return -1;\n+      case 10:\n+         if ((active0 & 0x400000000000000L) != 0L)\n+            return 12;\n+         if ((active0 & 0x80000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 9)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 9;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0x78000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 8)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 8;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0xb040f00400000000L) != 0L || (active1 & 0x2001L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 10;\n+            return 12;\n+         }\n+         return -1;\n+      case 11:\n+         if ((active0 & 0xb040f00400000000L) != 0L || (active1 & 0x2001L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 11;\n+            return 12;\n+         }\n+         if ((active0 & 0x80000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 9)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 9;\n+            }\n+            return -1;\n+         }\n+         return -1;\n+      case 12:\n+         if ((active0 & 0x8040000000000000L) != 0L || (active1 & 0x2000L) != 0L)\n+            return 12;\n+         if ((active0 & 0x3000f00400000000L) != 0L || (active1 & 0x1L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 12;\n+            return 12;\n+         }\n+         return -1;\n+      case 13:\n+         if ((active0 & 0x3000f00400000000L) != 0L || (active1 & 0x1L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 13;\n+            return 12;\n+         }\n+         return -1;\n+      case 14:\n+         if ((active0 & 0x2000000000000000L) != 0L || (active1 & 0x1L) != 0L)\n+            return 12;\n+         if ((active0 & 0x1000f00400000000L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 14;\n+            return 12;\n+         }\n+         return -1;\n+      case 15:\n+         if ((active0 & 0x1000000000000000L) != 0L)\n+            return 12;\n+         if ((active0 & 0xf00400000000L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 15;\n+            return 12;\n+         }\n+         return -1;\n+      case 16:\n+         if ((active0 & 0xe00400000000L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 16;\n+            return 12;\n+         }\n+         if ((active0 & 0x100000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 15)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 15;\n+            }\n+            return -1;\n+         }\n+         return -1;\n+      case 17:\n+         if ((active0 & 0x600000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 16)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 16;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0x100000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 15)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 15;\n+            }\n+            return -1;\n+         }\n+         if ((active0 & 0x800400000000L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 17;\n+            return 12;\n+         }\n+         return -1;\n+      case 18:\n          if ((active0 & 0x400000000L) != 0L)\n          {\n-            if (jjmatchedPos < 7)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 7;\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 18;\n+            return 12;\n+         }\n+         if ((active0 & 0x800000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 17)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 17;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x2700000000000000L) != 0L)\n-            return 13;\n-         return -1;\n-      case 9:\n-         if ((active0 & 0x7800000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 8)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 8;\n+         if ((active0 & 0x600000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 16)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 16;\n             }\n             return -1;\n          }\n+         return -1;\n+      case 19:\n          if ((active0 & 0x400000000L) != 0L)\n          {\n-            if (jjmatchedPos < 7)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 7;\n+            jjmatchedKind = 78;\n+            jjmatchedPos = 19;\n+            return 12;\n+         }\n+         if ((active0 & 0x800000000000L) != 0L)\n+         {\n+            if (jjmatchedPos < 17)\n+            {\n+               jjmatchedKind = 78;\n+               jjmatchedPos = 17;\n             }\n             return -1;\n          }\n-         if ((active0 & 0x1b440f8040000000L) != 0L || (active1 & 0x200L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 9;\n-            return 13;\n-         }\n-         if ((active0 & 0x2000000000000L) != 0L)\n-            return 13;\n-         return -1;\n-      case 10:\n-         if ((active0 & 0x8000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 9)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 9;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x7800000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 8)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 8;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x1b040f0040000000L) != 0L || (active1 & 0x200L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 10;\n-            return 13;\n-         }\n-         if ((active0 & 0x40000000000000L) != 0L)\n-            return 13;\n-         return -1;\n-      case 11:\n-         if ((active0 & 0x8000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 9)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 9;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x1b040f0040000000L) != 0L || (active1 & 0x200L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 11;\n-            return 13;\n-         }\n-         return -1;\n-      case 12:\n-         if ((active0 & 0x13000f0040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 12;\n-            return 13;\n-         }\n-         if ((active0 & 0x804000000000000L) != 0L || (active1 & 0x200L) != 0L)\n-            return 13;\n-         return -1;\n-      case 13:\n-         if ((active0 & 0x13000f0040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 13;\n-            return 13;\n-         }\n-         return -1;\n-      case 14:\n-         if ((active0 & 0x1200000000000000L) != 0L)\n-            return 13;\n-         if ((active0 & 0x1000f0040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 14;\n-            return 13;\n-         }\n-         return -1;\n-      case 15:\n-         if ((active0 & 0xf0040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 15;\n-            return 13;\n-         }\n-         if ((active0 & 0x100000000000000L) != 0L)\n-            return 13;\n-         return -1;\n-      case 16:\n-         if ((active0 & 0x10000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 15)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 15;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0xe0040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 16;\n-            return 13;\n-         }\n-         return -1;\n-      case 17:\n-         if ((active0 & 0x60000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 16)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 16;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x10000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 15)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 15;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x80040000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 17;\n-            return 13;\n-         }\n-         return -1;\n-      case 18:\n-         if ((active0 & 0x80000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 17)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 17;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x60000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 16)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 16;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x40000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 18;\n-            return 13;\n-         }\n-         return -1;\n-      case 19:\n-         if ((active0 & 0x80000000000L) != 0L)\n-         {\n-            if (jjmatchedPos < 17)\n-            {\n-               jjmatchedKind = 74;\n-               jjmatchedPos = 17;\n-            }\n-            return -1;\n-         }\n-         if ((active0 & 0x40000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n-            jjmatchedPos = 19;\n-            return 13;\n-         }\n          return -1;\n       case 20:\n-         if ((active0 & 0x40000000L) != 0L)\n-         {\n-            jjmatchedKind = 74;\n+         if ((active0 & 0x400000000L) != 0L)\n+         {\n+            jjmatchedKind = 78;\n             jjmatchedPos = 20;\n-            return 13;\n+            return 12;\n          }\n          return -1;\n       default :\n    switch(curChar)\n    {\n       case 33:\n-         return jjMoveStringLiteralDfa1_0(0x100L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);\n       case 36:\n-         return jjStopAtPos(0, 13);\n+         return jjStopAtPos(0, 17);\n       case 40:\n-         return jjStopAtPos(0, 76);\n+         return jjStopAtPos(0, 80);\n       case 41:\n-         return jjStopAtPos(0, 77);\n+         return jjStopAtPos(0, 81);\n       case 42:\n+         return jjStopAtPos(0, 88);\n+      case 43:\n+         return jjStopAtPos(0, 9);\n+      case 44:\n+         return jjStopAtPos(0, 87);\n+      case 45:\n+         return jjStopAtPos(0, 10);\n+      case 46:\n+         jjmatchedKind = 82;\n+         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000L);\n+      case 47:\n+         jjmatchedKind = 6;\n+         return jjMoveStringLiteralDfa1_0(0x80L, 0x0L);\n+      case 58:\n+         return jjStopAtPos(0, 79);\n+      case 60:\n+         jjmatchedKind = 13;\n+         return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);\n+      case 61:\n+         return jjStopAtPos(0, 11);\n+      case 62:\n+         jjmatchedKind = 15;\n+         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);\n+      case 64:\n+         return jjStopAtPos(0, 86);\n+      case 91:\n          return jjStopAtPos(0, 84);\n-      case 43:\n-         return jjStopAtPos(0, 5);\n-      case 44:\n-         return jjStopAtPos(0, 83);\n-      case 45:\n-         return jjStopAtPos(0, 6);\n-      case 46:\n-         jjmatchedKind = 78;\n-         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000L);\n-      case 47:\n-         jjmatchedKind = 2;\n-         return jjMoveStringLiteralDfa1_0(0x8L, 0x0L);\n-      case 58:\n-         return jjStopAtPos(0, 75);\n-      case 60:\n-         jjmatchedKind = 9;\n-         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);\n-      case 61:\n-         return jjStopAtPos(0, 7);\n-      case 62:\n-         jjmatchedKind = 11;\n-         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);\n-      case 64:\n-         return jjStopAtPos(0, 82);\n-      case 91:\n-         return jjStopAtPos(0, 80);\n       case 93:\n-         return jjStopAtPos(0, 81);\n+         return jjStopAtPos(0, 85);\n       case 97:\n-         return jjMoveStringLiteralDfa1_0(0x10c01000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x10c010000000L, 0x0L);\n       case 98:\n-         return jjMoveStringLiteralDfa1_0(0x4000000000000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x0L, 0x4L);\n       case 99:\n-         return jjMoveStringLiteralDfa1_0(0xa0400120000000L, 0x80L);\n+         return jjMoveStringLiteralDfa1_0(0xa04001200000000L, 0x800L);\n       case 100:\n-         return jjMoveStringLiteralDfa1_0(0x88004000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x880040000000L, 0x0L);\n       case 102:\n-         return jjMoveStringLiteralDfa1_0(0x24000000000L, 0x242L);\n+         return jjMoveStringLiteralDfa1_0(0x240000000000L, 0x2420L);\n       case 105:\n-         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);\n       case 107:\n-         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);\n       case 108:\n-         return jjMoveStringLiteralDfa1_0(0x2100000000000L, 0x8L);\n+         return jjMoveStringLiteralDfa1_0(0x21000000000000L, 0x80L);\n       case 109:\n-         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x20000000L, 0x0L);\n       case 110:\n-         return jjMoveStringLiteralDfa1_0(0x900c001008000000L, 0x14L);\n+         return jjMoveStringLiteralDfa1_0(0xc0010080000000L, 0x149L);\n       case 111:\n-         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L);\n       case 112:\n-         return jjMoveStringLiteralDfa1_0(0x242240000000L, 0x0L);\n+         return jjMoveStringLiteralDfa1_0(0x2422400000000L, 0x0L);\n       case 114:\n-         return jjMoveStringLiteralDfa1_0(0x0L, 0x100L);\n+         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000L);\n       case 115:\n-         return jjMoveStringLiteralDfa1_0(0xf50000080000000L, 0x20L);\n+         return jjMoveStringLiteralDfa1_0(0xf500000800000000L, 0x200L);\n       case 116:\n-         return jjMoveStringLiteralDfa1_0(0x2000000010000000L, 0x1L);\n+         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x12L);\n       case 124:\n-         return jjStopAtPos(0, 4);\n-      default :\n-         return jjMoveNfa_0(1, 0);\n+         return jjStopAtPos(0, 8);\n+      default :\n+         return jjMoveNfa_0(0, 0);\n    }\n }\n private final int jjMoveStringLiteralDfa1_0(long active0, long active1)\n    switch(curChar)\n    {\n       case 46:\n-         if ((active1 & 0x8000L) != 0L)\n-            return jjStopAtPos(1, 79);\n+         if ((active1 & 0x80000L) != 0L)\n+            return jjStopAtPos(1, 83);\n          break;\n       case 47:\n-         if ((active0 & 0x8L) != 0L)\n-            return jjStopAtPos(1, 3);\n+         if ((active0 & 0x80L) != 0L)\n+            return jjStopAtPos(1, 7);\n          break;\n       case 61:\n-         if ((active0 & 0x100L) != 0L)\n-            return jjStopAtPos(1, 8);\n-         else if ((active0 & 0x400L) != 0L)\n-            return jjStopAtPos(1, 10);\n-         else if ((active0 & 0x1000L) != 0L)\n+         if ((active0 & 0x1000L) != 0L)\n             return jjStopAtPos(1, 12);\n+         else if ((active0 & 0x4000L) != 0L)\n+            return jjStopAtPos(1, 14);\n+         else if ((active0 & 0x10000L) != 0L)\n+            return jjStopAtPos(1, 16);\n          break;\n       case 97:\n-         return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n+         return jjMoveStringLiteralDfa2_0(active0, 0xc1012000000000L, active1, 0xa0L);\n       case 100:\n-         if ((active0 & 0x800000000000L) != 0L)\n-            return jjStartNfaWithStates_0(1, 47, 13);\n+         if ((active0 & 0x8000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(1, 51, 12);\n          break;\n       case 101:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x10880900000000L, active1, 0x800L);\n       case 104:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);\n       case 105:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);\n       case 108:\n-         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);\n       case 110:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x104010000000L, active1, 0L);\n       case 111:\n-         return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x300L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0xa262402a0000000L, active1, 0x300dL);\n       case 114:\n-         if ((active0 & 0x800000L) != 0L)\n-            return jjStartNfaWithStates_0(1, 23, 13);\n-         return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n+         if ((active0 & 0x8000000L) != 0L)\n+            return jjStartNfaWithStates_0(1, 27, 12);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x420400000000L, active1, 0x12L);\n       case 116:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x8500008000000000L, active1, 0L);\n       case 117:\n-         return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n+         return jjMoveStringLiteralDfa2_0(active0, 0x7000000000000000L, active1, 0x340L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 97:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x2L);\n       case 98:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x7000000000000000L, active1, 0L);\n       case 99:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x20104000000000L, active1, 0L);\n       case 100:\n-         if ((active0 & 0x1000000L) != 0L)\n-            return jjStartNfaWithStates_0(2, 24, 13);\n-         else if ((active0 & 0x2000000L) != 0L)\n-            return jjStartNfaWithStates_0(2, 25, 13);\n-         return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n+         if ((active0 & 0x10000000L) != 0L)\n+            return jjStartNfaWithStates_0(2, 28, 12);\n+         else if ((active0 & 0x20000000L) != 0L)\n+            return jjStartNfaWithStates_0(2, 29, 12);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x80000000L, active1, 0L);\n       case 101:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x420000000000L, active1, 0L);\n       case 105:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0x800L);\n       case 108:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x240800000000L, active1, 0x60L);\n       case 109:\n-         if ((active1 & 0x20L) != 0L)\n-            return jjStartNfaWithStates_0(2, 69, 13);\n-         return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n+         if ((active1 & 0x200L) != 0L)\n+            return jjStartNfaWithStates_0(2, 73, 12);\n+         return jjMoveStringLiteralDfa3_0(active0, 0xc0010200000000L, active1, 0x100L);\n       case 110:\n-         return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0xa00000000000000L, active1, 0x80L);\n       case 111:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x400000000L, active1, 0x404L);\n       case 114:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x8100002000000000L, active1, 0x2001L);\n       case 115:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x3880000000000L, active1, 0L);\n       case 116:\n-         if ((active0 & 0x8000000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(2, 63, 13);\n-         return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n+         if ((active1 & 0x8L) != 0L)\n+            return jjStartNfaWithStates_0(2, 67, 12);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L, active1, 0L);\n       case 117:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0x1010L);\n       case 118:\n-         if ((active0 & 0x4000000L) != 0L)\n-            return jjStartNfaWithStates_0(2, 26, 13);\n+         if ((active0 & 0x40000000L) != 0L)\n+            return jjStartNfaWithStates_0(2, 30, 12);\n          break;\n       case 120:\n-         return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0L);\n       case 121:\n-         if ((active0 & 0x1000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(2, 48, 13);\n+         if ((active0 & 0x10000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(2, 52, 12);\n          break;\n       default :\n          break;\n    switch(curChar)\n    {\n       case 97:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0L);\n       case 98:\n-         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);\n       case 99:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x200ca040000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x200ca0400000000L, active1, 0L);\n       case 101:\n-         if ((active0 & 0x8000000L) != 0L)\n-            return jjStartNfaWithStates_0(3, 27, 13);\n-         else if ((active0 & 0x8000000000000L) != 0L)\n-         {\n-            jjmatchedKind = 51;\n+         if ((active0 & 0x80000000L) != 0L)\n+            return jjStartNfaWithStates_0(3, 31, 12);\n+         else if ((active0 & 0x80000000000000L) != 0L)\n+         {\n+            jjmatchedKind = 55;\n             jjmatchedPos = 3;\n          }\n-         else if ((active1 & 0x1L) != 0L)\n-            return jjStartNfaWithStates_0(3, 64, 13);\n-         return jjMoveStringLiteralDfa4_0(active0, 0x4011600000000L, active1, 0L);\n+         else if ((active1 & 0x10L) != 0L)\n+            return jjStartNfaWithStates_0(3, 68, 12);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x40116000000000L, active1, 0L);\n       case 102:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x80000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L, active1, 0L);\n       case 103:\n-         if ((active1 & 0x8L) != 0L)\n-            return jjStartNfaWithStates_0(3, 67, 13);\n+         if ((active1 & 0x80L) != 0L)\n+            return jjStartNfaWithStates_0(3, 71, 12);\n          break;\n       case 105:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x810200000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x8102000000000000L, active1, 0L);\n       case 108:\n-         if ((active1 & 0x4L) != 0L)\n-            return jjStartNfaWithStates_0(3, 66, 13);\n-         return jjMoveStringLiteralDfa4_0(active0, 0x4000024100000000L, active1, 0x80L);\n+         if ((active1 & 0x40L) != 0L)\n+            return jjStartNfaWithStates_0(3, 70, 12);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x241000000000L, active1, 0x804L);\n       case 109:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x1000000020000000L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x200000000L, active1, 0x2001L);\n       case 110:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x2000400000000000L, active1, 0x100L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0x1002L);\n       case 111:\n-         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);\n       case 114:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x40000800000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x400008000000000L, active1, 0L);\n       case 115:\n-         return jjMoveStringLiteralDfa4_0(active0, 0x700000000000000L, active1, 0x2L);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x7000000000000000L, active1, 0x20L);\n       case 116:\n-         if ((active0 & 0x10000000L) != 0L)\n-            return jjStartNfaWithStates_0(3, 28, 13);\n-         else if ((active0 & 0x100000000000L) != 0L)\n-            return jjStartNfaWithStates_0(3, 44, 13);\n-         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0L);\n+         if ((active0 & 0x100000000L) != 0L)\n+            return jjStartNfaWithStates_0(3, 32, 12);\n+         else if ((active0 & 0x1000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(3, 48, 12);\n+         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 58:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa5_0(active0, 0x800000000L, active1, 0L);\n       case 97:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x10a0000000000000L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa5_0(active0, 0xa00000000000000L, active1, 0x2001L);\n       case 100:\n+         if ((active1 & 0x1000L) != 0L)\n+            return jjStartNfaWithStates_0(4, 76, 12);\n+         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000L, active1, 0L);\n+      case 101:\n+         if ((active1 & 0x20L) != 0L)\n+            return jjStartNfaWithStates_0(4, 69, 12);\n+         return jjMoveStringLiteralDfa5_0(active0, 0xca0600000000L, active1, 0x104L);\n+      case 105:\n+         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000L, active1, 0x800L);\n+      case 108:\n+         return jjMoveStringLiteralDfa5_0(active0, 0x20000000000000L, active1, 0L);\n+      case 110:\n+         return jjMoveStringLiteralDfa5_0(active0, 0x8100002000000000L, active1, 0L);\n+      case 111:\n+         return jjMoveStringLiteralDfa5_0(active0, 0x240000000000L, active1, 0L);\n+      case 114:\n+         if ((active1 & 0x400L) != 0L)\n+            return jjStartNfaWithStates_0(4, 74, 12);\n+         break;\n+      case 115:\n+         return jjMoveStringLiteralDfa5_0(active0, 0x40114000000000L, active1, 0x2L);\n+      case 116:\n+         if ((active0 & 0x4000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(4, 50, 12);\n+         return jjMoveStringLiteralDfa5_0(active0, 0x7402000000000000L, active1, 0L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(3, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(3, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(4, active0, active1);\n+      return 5;\n+   }\n+   switch(curChar)\n+   {\n+      case 45:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x20000000000000L, active1, 0L);\n+      case 58:\n+         if ((active0 & 0x800000000L) != 0L)\n+            return jjStopAtPos(5, 35);\n+         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000L, active1, 0L);\n+      case 97:\n+         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);\n+      case 98:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000L, active1, 0L);\n+      case 100:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x420000000000L, active1, 0L);\n+      case 103:\n+         if ((active0 & 0x100000000000000L) != 0L)\n+         {\n+            jjmatchedKind = 56;\n+            jjmatchedPos = 5;\n+         }\n+         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000000L, active1, 0L);\n+      case 105:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x802000000000000L, active1, 0L);\n+      case 108:\n+         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x3L);\n+      case 110:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x880200000000L, active1, 0x800L);\n+      case 112:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active1, 0L);\n+      case 114:\n          if ((active1 & 0x100L) != 0L)\n-            return jjStartNfaWithStates_0(4, 72, 13);\n-         return jjMoveStringLiteralDfa5_0(active0, 0x100000000L, active1, 0L);\n+            return jjStartNfaWithStates_0(5, 72, 12);\n+         return jjMoveStringLiteralDfa6_0(active0, 0x7000000000000000L, active1, 0L);\n+      case 115:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x400000400000000L, active1, 0L);\n+      case 116:\n+         if ((active0 & 0x200000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(5, 57, 12);\n+         return jjMoveStringLiteralDfa6_0(active0, 0x106000000000L, active1, 0x2000L);\n+      case 119:\n+         return jjMoveStringLiteralDfa6_0(active0, 0x240000000000L, active1, 0L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(4, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(4, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(5, active0, active1);\n+      return 6;\n+   }\n+   switch(curChar)\n+   {\n+      case 45:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x8400000000000000L, active1, 0x2000L);\n+      case 58:\n+         if ((active0 & 0x1000000000L) != 0L)\n+            return jjStopAtPos(6, 36);\n+         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000L, active1, 0L);\n+      case 97:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x40010000000000L, active1, 0x2L);\n+      case 100:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x880000000000L, active1, 0L);\n+      case 103:\n+         if ((active1 & 0x800L) != 0L)\n+            return jjStartNfaWithStates_0(6, 75, 12);\n+         break;\n+      case 105:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x7000660000000000L, active1, 0x1L);\n+      case 110:\n+         if ((active1 & 0x4L) != 0L)\n+            return jjStartNfaWithStates_0(6, 66, 12);\n+         return jjMoveStringLiteralDfa7_0(active0, 0x820000000000000L, active1, 0L);\n+      case 111:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x2104000000000L, active1, 0L);\n+      case 115:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x400000000L, active1, 0L);\n+      case 116:\n+         if ((active0 & 0x200000000L) != 0L)\n+            return jjStartNfaWithStates_0(6, 33, 12);\n+         break;\n+      case 117:\n+         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000L, active1, 0L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(5, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(5, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(6, active0, active1);\n+      return 7;\n+   }\n+   switch(curChar)\n+   {\n+      case 58:\n+         if ((active0 & 0x2000000000L) != 0L)\n+            return jjStopAtPos(7, 37);\n+         break;\n+      case 97:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x20880000000000L, active1, 0L);\n+      case 99:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x40010000000000L, active1, 0L);\n+      case 105:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x400000000L, active1, 0L);\n+      case 108:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000000L, active1, 0L);\n+      case 110:\n+         if ((active0 & 0x2000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(7, 49, 12);\n+         return jjMoveStringLiteralDfa8_0(active0, 0x7000660000000000L, active1, 0x2000L);\n+      case 114:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x104000000000L, active1, 0L);\n+      case 115:\n+         if ((active0 & 0x800000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(7, 59, 12);\n+         break;\n+      case 116:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000L, active1, 0x2L);\n+      case 119:\n+         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000000L, active1, 0L);\n+      case 122:\n+         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x1L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(6, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(6, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(7, active0, active1);\n+      return 8;\n+   }\n+   switch(curChar)\n+   {\n+      case 45:\n+         return jjMoveStringLiteralDfa9_0(active0, 0x100000000000L, active1, 0L);\n+      case 58:\n+         return jjMoveStringLiteralDfa9_0(active0, 0x4000000000L, active1, 0L);\n       case 101:\n          if ((active1 & 0x2L) != 0L)\n-            return jjStartNfaWithStates_0(4, 65, 13);\n-         return jjMoveStringLiteralDfa5_0(active0, 0x40000ca060000000L, active1, 0x10L);\n+            return jjStartNfaWithStates_0(8, 65, 12);\n+         return jjMoveStringLiteralDfa9_0(active0, 0x8040018000000000L, active1, 0x1L);\n+      case 103:\n+         if ((active0 & 0x4000000000000000L) != 0L)\n+         {\n+            jjmatchedKind = 62;\n+            jjmatchedPos = 8;\n+         }\n+         return jjMoveStringLiteralDfa9_0(active0, 0x3000660000000000L, active1, 0L);\n       case 105:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x800000000L, active1, 0x80L);\n-      case 108:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa9_0(active0, 0x400000000000000L, active1, 0L);\n+      case 109:\n+         return jjMoveStringLiteralDfa9_0(active0, 0x20000000000000L, active1, 0L);\n       case 110:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x810000200000000L, active1, 0L);\n-      case 111:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x24000000000L, active1, 0L);\n-      case 114:\n-         if ((active1 & 0x40L) != 0L)\n-            return jjStartNfaWithStates_0(4, 70, 13);\n-         break;\n-      case 115:\n-         return jjMoveStringLiteralDfa5_0(active0, 0x2004011400000000L, active1, 0L);\n-      case 116:\n-         if ((active0 & 0x400000000000L) != 0L)\n-            return jjStartNfaWithStates_0(4, 46, 13);\n-         return jjMoveStringLiteralDfa5_0(active0, 0x740200000000000L, active1, 0L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(3, active0, active1);\n-}\n-private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)\n-{\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n-      return jjStartNfa_0(3, old0, old1); \n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(4, active0, active1);\n-      return 5;\n-   }\n-   switch(curChar)\n-   {\n-      case 45:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0L);\n-      case 58:\n-         if ((active0 & 0x80000000L) != 0L)\n-            return jjStopAtPos(5, 31);\n-         return jjMoveStringLiteralDfa6_0(active0, 0x100000000L, active1, 0L);\n-      case 97:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x4000000000000000L, active1, 0L);\n-      case 98:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x800000000L, active1, 0L);\n-      case 100:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x42000000000L, active1, 0L);\n-      case 103:\n-         if ((active0 & 0x10000000000000L) != 0L)\n-         {\n-            jjmatchedKind = 52;\n-            jjmatchedPos = 5;\n-         }\n-         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);\n-      case 105:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x80200000000000L, active1, 0L);\n-      case 108:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x3000000000000000L, active1, 0L);\n-      case 110:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x88020000000L, active1, 0x80L);\n-      case 112:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x4001000000000L, active1, 0L);\n-      case 114:\n-         if ((active1 & 0x10L) != 0L)\n-            return jjStartNfaWithStates_0(5, 68, 13);\n-         return jjMoveStringLiteralDfa6_0(active0, 0x700000000000000L, active1, 0L);\n-      case 115:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x40000040000000L, active1, 0L);\n-      case 116:\n-         if ((active0 & 0x20000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(5, 53, 13);\n-         return jjMoveStringLiteralDfa6_0(active0, 0x10600000000L, active1, 0x200L);\n-      case 119:\n-         return jjMoveStringLiteralDfa6_0(active0, 0x24000000000L, active1, 0L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(4, active0, active1);\n-}\n-private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)\n-{\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n-      return jjStartNfa_0(4, old0, old1); \n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(5, active0, active1);\n-      return 6;\n-   }\n-   switch(curChar)\n-   {\n-      case 45:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x840000000000000L, active1, 0x200L);\n-      case 58:\n-         if ((active0 & 0x100000000L) != 0L)\n-            return jjStopAtPos(6, 32);\n-         return jjMoveStringLiteralDfa7_0(active0, 0x200000000L, active1, 0L);\n-      case 97:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x2004001000000000L, active1, 0L);\n-      case 100:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x88000000000L, active1, 0L);\n-      case 103:\n-         if ((active1 & 0x80L) != 0L)\n-            return jjStartNfaWithStates_0(6, 71, 13);\n-         break;\n-      case 105:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x1700066000000000L, active1, 0L);\n-      case 110:\n-         if ((active0 & 0x4000000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(6, 62, 13);\n-         return jjMoveStringLiteralDfa7_0(active0, 0x82000000000000L, active1, 0L);\n-      case 111:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x210400000000L, active1, 0L);\n-      case 115:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x40000000L, active1, 0L);\n-      case 116:\n-         if ((active0 & 0x20000000L) != 0L)\n-            return jjStartNfaWithStates_0(6, 29, 13);\n-         break;\n+         return jjMoveStringLiteralDfa9_0(active0, 0x880400000000L, active1, 0L);\n       case 117:\n-         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L, active1, 0L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(5, active0, active1);\n-}\n-private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)\n-{\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n-      return jjStartNfa_0(5, old0, old1); \n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(6, active0, active1);\n-      return 7;\n-   }\n-   switch(curChar)\n-   {\n-      case 58:\n-         if ((active0 & 0x200000000L) != 0L)\n-            return jjStopAtPos(7, 33);\n-         break;\n-      case 97:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x2088000000000L, active1, 0L);\n-      case 99:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x4001000000000L, active1, 0L);\n-      case 105:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x40000000L, active1, 0L);\n-      case 108:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000000L, active1, 0L);\n-      case 110:\n-         if ((active0 & 0x200000000000L) != 0L)\n-            return jjStartNfaWithStates_0(7, 45, 13);\n-         return jjMoveStringLiteralDfa8_0(active0, 0x700066000000000L, active1, 0x200L);\n-      case 114:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x10400000000L, active1, 0L);\n-      case 115:\n-         if ((active0 & 0x80000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(7, 55, 13);\n-         break;\n-      case 116:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x2000000800000000L, active1, 0L);\n-      case 119:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L, active1, 0L);\n-      case 122:\n-         return jjMoveStringLiteralDfa8_0(active0, 0x1000000000000000L, active1, 0L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(6, active0, active1);\n-}\n-private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)\n-{\n-   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n-      return jjStartNfa_0(6, old0, old1); \n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(7, active0, active1);\n-      return 8;\n-   }\n-   switch(curChar)\n-   {\n-      case 45:\n-         return jjMoveStringLiteralDfa9_0(active0, 0x10000000000L, active1, 0L);\n-      case 58:\n-         return jjMoveStringLiteralDfa9_0(active0, 0x400000000L, active1, 0L);\n-      case 101:\n-         if ((active0 & 0x2000000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(8, 61, 13);\n-         return jjMoveStringLiteralDfa9_0(active0, 0x1804001800000000L, active1, 0L);\n-      case 103:\n-         if ((active0 & 0x400000000000000L) != 0L)\n-         {\n-            jjmatchedKind = 58;\n-            jjmatchedPos = 8;\n-         }\n-         return jjMoveStringLiteralDfa9_0(active0, 0x300066000000000L, active1, 0L);\n-      case 105:\n-         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L, active1, 0L);\n-      case 109:\n-         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000L, active1, 0L);\n-      case 110:\n-         return jjMoveStringLiteralDfa9_0(active0, 0x88040000000L, active1, 0L);\n-      case 117:\n-         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x2000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 45:\n-         return jjMoveStringLiteralDfa10_0(active0, 0x1304060000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x3040600000000000L, active1, 0x1L);\n       case 58:\n-         if ((active0 & 0x400000000L) != 0L)\n-            return jjStopAtPos(9, 34);\n-         return jjMoveStringLiteralDfa10_0(active0, 0x7800000000L, active1, 0L);\n+         if ((active0 & 0x4000000000L) != 0L)\n+            return jjStopAtPos(9, 38);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x78000000000L, active1, 0L);\n       case 101:\n-         if ((active0 & 0x2000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(9, 49, 13);\n+         if ((active0 & 0x20000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(9, 53, 12);\n          break;\n       case 103:\n-         return jjMoveStringLiteralDfa10_0(active0, 0x40000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x400000000L, active1, 0L);\n       case 109:\n-         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x2000L);\n       case 110:\n-         return jjMoveStringLiteralDfa10_0(active0, 0x800000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x8000000000000000L, active1, 0L);\n       case 111:\n-         return jjMoveStringLiteralDfa10_0(active0, 0x10000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x100000000000L, active1, 0L);\n       case 116:\n-         return jjMoveStringLiteralDfa10_0(active0, 0x40088000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa10_0(active0, 0x400880000000000L, active1, 0L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 45:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x80040000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x800400000000L, active1, 0L);\n       case 58:\n-         if ((active0 & 0x800000000L) != 0L)\n-            return jjStopAtPos(10, 35);\n-         else if ((active0 & 0x1000000000L) != 0L)\n-            return jjStopAtPos(10, 36);\n-         else if ((active0 & 0x2000000000L) != 0L)\n-            return jjStopAtPos(10, 37);\n-         else if ((active0 & 0x4000000000L) != 0L)\n-            return jjStopAtPos(10, 38);\n-         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000L, active1, 0L);\n+         if ((active0 & 0x8000000000L) != 0L)\n+            return jjStopAtPos(10, 39);\n+         else if ((active0 & 0x10000000000L) != 0L)\n+            return jjStopAtPos(10, 40);\n+         else if ((active0 & 0x20000000000L) != 0L)\n+            return jjStopAtPos(10, 41);\n+         else if ((active0 & 0x40000000000L) != 0L)\n+            return jjStopAtPos(10, 42);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000L, active1, 0L);\n       case 97:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x200000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x2000000000000000L, active1, 0L);\n       case 98:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x100000000000000L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x1000000000000000L, active1, 0x2000L);\n       case 103:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x800000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000000L, active1, 0L);\n       case 104:\n-         if ((active0 & 0x40000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(10, 54, 13);\n+         if ((active0 & 0x400000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(10, 58, 12);\n          break;\n       case 114:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x10000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x100000000000L, active1, 0L);\n       case 115:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x1000060000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x600000000000L, active1, 0x1L);\n       case 117:\n-         return jjMoveStringLiteralDfa11_0(active0, 0x4000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa11_0(active0, 0x40000000000000L, active1, 0L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 45:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x10000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x100000000000L, active1, 0L);\n       case 58:\n-         if ((active0 & 0x8000000000L) != 0L)\n-            return jjStopAtPos(11, 39);\n+         if ((active0 & 0x80000000000L) != 0L)\n+            return jjStopAtPos(11, 43);\n          break;\n       case 101:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x100000000000000L, active1, 0x200L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x1000000000000000L, active1, 0x2000L);\n       case 102:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x200000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x2000000000000000L, active1, 0L);\n       case 105:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x60040000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x600400000000L, active1, 0L);\n       case 111:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x800000000000L, active1, 0L);\n       case 112:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x1000000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x1L);\n       case 114:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x4000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x40000000000000L, active1, 0L);\n       case 116:\n-         return jjMoveStringLiteralDfa12_0(active0, 0x800000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa12_0(active0, 0x8000000000000000L, active1, 0L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 97:\n+         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x1L);\n+      case 98:\n+         return jjMoveStringLiteralDfa13_0(active0, 0x600000000000L, active1, 0L);\n+      case 102:\n          return jjMoveStringLiteralDfa13_0(active0, 0x1000000000000000L, active1, 0L);\n-      case 98:\n-         return jjMoveStringLiteralDfa13_0(active0, 0x60000000000L, active1, 0L);\n-      case 102:\n-         return jjMoveStringLiteralDfa13_0(active0, 0x100000000000000L, active1, 0L);\n       case 104:\n-         if ((active0 & 0x800000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(12, 59, 13);\n+         if ((active0 & 0x8000000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(12, 63, 12);\n          break;\n       case 105:\n-         if ((active0 & 0x4000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(12, 50, 13);\n+         if ((active0 & 0x40000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(12, 54, 12);\n          break;\n       case 110:\n-         return jjMoveStringLiteralDfa13_0(active0, 0x40000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa13_0(active0, 0x400000000L, active1, 0L);\n       case 114:\n-         if ((active1 & 0x200L) != 0L)\n-            return jjStartNfaWithStates_0(12, 73, 13);\n-         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000L, active1, 0L);\n+         if ((active1 & 0x2000L) != 0L)\n+            return jjStartNfaWithStates_0(12, 77, 12);\n+         return jjMoveStringLiteralDfa13_0(active0, 0x800000000000L, active1, 0L);\n       case 115:\n-         return jjMoveStringLiteralDfa13_0(active0, 0x10000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa13_0(active0, 0x100000000000L, active1, 0L);\n       case 116:\n-         return jjMoveStringLiteralDfa13_0(active0, 0x200000000000000L, active1, 0L);\n+         return jjMoveStringLiteralDfa13_0(active0, 0x2000000000000000L, active1, 0L);\n       default :\n          break;\n    }\n       return jjStartNfa_0(11, old0, old1); \n    try { curChar = input_stream.readChar(); }\n    catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(12, active0, 0L);\n+      jjStopStringLiteralDfa_0(12, active0, active1);\n       return 13;\n    }\n    switch(curChar)\n    {\n       case 45:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0x800000000000L, active1, 0L);\n       case 99:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x1000000000000000L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x1L);\n       case 101:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x200010000000000L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0x2000100000000000L, active1, 0L);\n       case 108:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x60000000000L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0x600000000000L, active1, 0L);\n       case 111:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x100000000000000L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0x1000000000000000L, active1, 0L);\n       case 115:\n-         return jjMoveStringLiteralDfa14_0(active0, 0x40000000L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(12, active0, 0L);\n-}\n-private final int jjMoveStringLiteralDfa14_0(long old0, long active0)\n-{\n-   if (((active0 &= old0)) == 0L)\n-      return jjStartNfa_0(12, old0, 0L);\n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(13, active0, 0L);\n+         return jjMoveStringLiteralDfa14_0(active0, 0x400000000L, active1, 0L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(12, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(12, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(13, active0, active1);\n       return 14;\n+   }\n+   switch(curChar)\n+   {\n+      case 101:\n+         if ((active1 & 0x1L) != 0L)\n+            return jjStartNfaWithStates_0(14, 64, 12);\n+         break;\n+      case 105:\n+         return jjMoveStringLiteralDfa15_0(active0, 0x600000000000L, active1, 0L);\n+      case 108:\n+         return jjMoveStringLiteralDfa15_0(active0, 0x100000000000L, active1, 0L);\n+      case 114:\n+         if ((active0 & 0x2000000000000000L) != 0L)\n+            return jjStartNfaWithStates_0(14, 61, 12);\n+         return jjMoveStringLiteralDfa15_0(active0, 0x1000000000000000L, active1, 0L);\n+      case 115:\n+         return jjMoveStringLiteralDfa15_0(active0, 0x800000000000L, active1, 0L);\n+      case 116:\n+         return jjMoveStringLiteralDfa15_0(active0, 0x400000000L, active1, 0L);\n+      default :\n+         break;\n+   }\n+   return jjStartNfa_0(13, active0, active1);\n+}\n+private final int jjMoveStringLiteralDfa15_0(long old0, long active0, long old1, long active1)\n+{\n+   if (((active0 &= old0) | (active1 &= old1)) == 0L)\n+      return jjStartNfa_0(13, old0, old1); \n+   try { curChar = input_stream.readChar(); }\n+   catch(java.io.IOException e) {\n+      jjStopStringLiteralDfa_0(14, active0, 0L);\n+      return 15;\n    }\n    switch(curChar)\n    {\n       case 101:\n          if ((active0 & 0x1000000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(14, 60, 13);\n-         break;\n-      case 105:\n-         return jjMoveStringLiteralDfa15_0(active0, 0x60000000000L);\n-      case 108:\n-         return jjMoveStringLiteralDfa15_0(active0, 0x10000000000L);\n+            return jjStartNfaWithStates_0(15, 60, 12);\n+         return jjMoveStringLiteralDfa16_0(active0, 0x800000000000L);\n+      case 102:\n+         return jjMoveStringLiteralDfa16_0(active0, 0x100000000000L);\n+      case 110:\n+         return jjMoveStringLiteralDfa16_0(active0, 0x600000000000L);\n       case 114:\n-         if ((active0 & 0x200000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(14, 57, 13);\n-         return jjMoveStringLiteralDfa15_0(active0, 0x100000000000000L);\n-      case 115:\n-         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000L);\n-      case 116:\n-         return jjMoveStringLiteralDfa15_0(active0, 0x40000000L);\n-      default :\n-         break;\n-   }\n-   return jjStartNfa_0(13, active0, 0L);\n-}\n-private final int jjMoveStringLiteralDfa15_0(long old0, long active0)\n-{\n-   if (((active0 &= old0)) == 0L)\n-      return jjStartNfa_0(13, old0, 0L);\n-   try { curChar = input_stream.readChar(); }\n-   catch(java.io.IOException e) {\n-      jjStopStringLiteralDfa_0(14, active0, 0L);\n-      return 15;\n-   }\n-   switch(curChar)\n-   {\n-      case 101:\n-         if ((active0 & 0x100000000000000L) != 0L)\n-            return jjStartNfaWithStates_0(15, 56, 13);\n-         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000L);\n-      case 102:\n-         return jjMoveStringLiteralDfa16_0(active0, 0x10000000000L);\n-      case 110:\n-         return jjMoveStringLiteralDfa16_0(active0, 0x60000000000L);\n-      case 114:\n-         return jjMoveStringLiteralDfa16_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa16_0(active0, 0x400000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 58:\n-         return jjMoveStringLiteralDfa17_0(active0, 0x10000000000L);\n+         return jjMoveStringLiteralDfa17_0(active0, 0x100000000000L);\n       case 103:\n-         return jjMoveStringLiteralDfa17_0(active0, 0x60000000000L);\n+         return jjMoveStringLiteralDfa17_0(active0, 0x600000000000L);\n       case 108:\n-         return jjMoveStringLiteralDfa17_0(active0, 0x80000000000L);\n+         return jjMoveStringLiteralDfa17_0(active0, 0x800000000000L);\n       case 117:\n-         return jjMoveStringLiteralDfa17_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa17_0(active0, 0x400000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 58:\n-         if ((active0 & 0x10000000000L) != 0L)\n-            return jjStopAtPos(17, 40);\n-         return jjMoveStringLiteralDfa18_0(active0, 0x60000000000L);\n+         if ((active0 & 0x100000000000L) != 0L)\n+            return jjStopAtPos(17, 44);\n+         return jjMoveStringLiteralDfa18_0(active0, 0x600000000000L);\n       case 99:\n-         return jjMoveStringLiteralDfa18_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa18_0(active0, 0x400000000L);\n       case 102:\n-         return jjMoveStringLiteralDfa18_0(active0, 0x80000000000L);\n+         return jjMoveStringLiteralDfa18_0(active0, 0x800000000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 58:\n-         if ((active0 & 0x20000000000L) != 0L)\n-            return jjStopAtPos(18, 41);\n-         else if ((active0 & 0x40000000000L) != 0L)\n-            return jjStopAtPos(18, 42);\n-         return jjMoveStringLiteralDfa19_0(active0, 0x80000000000L);\n+         if ((active0 & 0x200000000000L) != 0L)\n+            return jjStopAtPos(18, 45);\n+         else if ((active0 & 0x400000000000L) != 0L)\n+            return jjStopAtPos(18, 46);\n+         return jjMoveStringLiteralDfa19_0(active0, 0x800000000000L);\n       case 116:\n-         return jjMoveStringLiteralDfa19_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa19_0(active0, 0x400000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 58:\n-         if ((active0 & 0x80000000000L) != 0L)\n-            return jjStopAtPos(19, 43);\n+         if ((active0 & 0x800000000000L) != 0L)\n+            return jjStopAtPos(19, 47);\n          break;\n       case 105:\n-         return jjMoveStringLiteralDfa20_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa20_0(active0, 0x400000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 111:\n-         return jjMoveStringLiteralDfa21_0(active0, 0x40000000L);\n+         return jjMoveStringLiteralDfa21_0(active0, 0x400000000L);\n       default :\n          break;\n    }\n    switch(curChar)\n    {\n       case 110:\n-         if ((active0 & 0x40000000L) != 0L)\n-            return jjStartNfaWithStates_0(21, 30, 13);\n+         if ((active0 & 0x400000000L) != 0L)\n+            return jjStartNfaWithStates_0(21, 34, 12);\n          break;\n       default :\n          break;\n {\n    int[] nextStates;\n    int startsAt = 0;\n-   jjnewStateCnt = 14;\n+   jjnewStateCnt = 13;\n    int i = 1;\n    jjstateSet[0] = startState;\n    int j, kind = 0x7fffffff;\n          {\n             switch(jjstateSet[--i])\n             {\n-               case 1:\n+               case 0:\n                   if ((0x3ff000000000000L & l) != 0L)\n                   {\n-                     if (kind > 16)\n-                        kind = 16;\n-                     jjCheckNAddTwoStates(7, 8);\n-                  }\n-                  else if ((0x100002600L & l) != 0L)\n-                  {\n-                     if (kind > 1)\n-                        kind = 1;\n-                     jjCheckNAdd(0);\n+                     if (kind > 20)\n+                        kind = 20;\n+                     jjCheckNAddTwoStates(6, 7);\n                   }\n                   else if (curChar == 46)\n-                     jjCheckNAdd(11);\n+                     jjCheckNAdd(10);\n                   else if (curChar == 39)\n-                     jjCheckNAddTwoStates(5, 6);\n+                     jjCheckNAddTwoStates(4, 5);\n                   else if (curChar == 34)\n-                     jjCheckNAddTwoStates(2, 3);\n+                     jjCheckNAddTwoStates(1, 2);\n                   break;\n-               case 0:\n-                  if ((0x100002600L & l) == 0L)\n-                     break;\n-                  if (kind > 1)\n-                     kind = 1;\n-                  jjCheckNAdd(0);\n+               case 1:\n+                  if ((0xfffffffbffffffffL & l) != 0L)\n+                     jjCheckNAddTwoStates(1, 2);\n                   break;\n                case 2:\n-                  if ((0xfffffffbffffffffL & l) != 0L)\n-                     jjCheckNAddTwoStates(2, 3);\n+                  if (curChar == 34 && kind > 18)\n+                     kind = 18;\n                   break;\n                case 3:\n-                  if (curChar == 34 && kind > 14)\n-                     kind = 14;\n+                  if (curChar == 39)\n+                     jjCheckNAddTwoStates(4, 5);\n                   break;\n                case 4:\n-                  if (curChar == 39)\n-                     jjCheckNAddTwoStates(5, 6);\n+                  if ((0xffffff7fffffffffL & l) != 0L)\n+                     jjCheckNAddTwoStates(4, 5);\n                   break;\n                case 5:\n-                  if ((0xffffff7fffffffffL & l) != 0L)\n-                     jjCheckNAddTwoStates(5, 6);\n+                  if (curChar == 39 && kind > 18)\n+                     kind = 18;\n                   break;\n                case 6:\n-                  if (curChar == 39 && kind > 14)\n-                     kind = 14;\n+                  if ((0x3ff000000000000L & l) == 0L)\n+                     break;\n+                  if (kind > 20)\n+                     kind = 20;\n+                  jjCheckNAddTwoStates(6, 7);\n                   break;\n                case 7:\n+                  if (curChar != 46)\n+                     break;\n+                  if (kind > 20)\n+                     kind = 20;\n+                  jjCheckNAdd(8);\n+                  break;\n+               case 8:\n                   if ((0x3ff000000000000L & l) == 0L)\n                      break;\n-                  if (kind > 16)\n-                     kind = 16;\n-                  jjCheckNAddTwoStates(7, 8);\n-                  break;\n-               case 8:\n-                  if (curChar != 46)\n-                     break;\n-                  if (kind > 16)\n-                     kind = 16;\n-                  jjCheckNAdd(9);\n+                  if (kind > 20)\n+                     kind = 20;\n+                  jjCheckNAdd(8);\n                   break;\n                case 9:\n+                  if (curChar == 46)\n+                     jjCheckNAdd(10);\n+                  break;\n+               case 10:\n                   if ((0x3ff000000000000L & l) == 0L)\n                      break;\n-                  if (kind > 16)\n-                     kind = 16;\n-                  jjCheckNAdd(9);\n+                  if (kind > 20)\n+                     kind = 20;\n+                  jjCheckNAdd(10);\n                   break;\n-               case 10:\n-                  if (curChar == 46)\n-                     jjCheckNAdd(11);\n-                  break;\n-               case 11:\n-                  if ((0x3ff000000000000L & l) == 0L)\n-                     break;\n-                  if (kind > 16)\n-                     kind = 16;\n-                  jjCheckNAdd(11);\n-                  break;\n-               case 13:\n+               case 12:\n                   if ((0x3ff600000000000L & l) == 0L)\n                      break;\n-                  if (kind > 74)\n-                     kind = 74;\n-                  jjstateSet[jjnewStateCnt++] = 13;\n+                  if (kind > 78)\n+                     kind = 78;\n+                  jjstateSet[jjnewStateCnt++] = 12;\n                   break;\n                default : break;\n             }\n          {\n             switch(jjstateSet[--i])\n             {\n-               case 1:\n-               case 13:\n+               case 0:\n+               case 12:\n                   if ((0x7fffffe87fffffeL & l) == 0L)\n                      break;\n-                  if (kind > 74)\n-                     kind = 74;\n-                  jjCheckNAdd(13);\n+                  if (kind > 78)\n+                     kind = 78;\n+                  jjCheckNAdd(12);\n                   break;\n-               case 2:\n+               case 1:\n                   jjAddStates(0, 1);\n                   break;\n-               case 5:\n+               case 4:\n                   jjAddStates(2, 3);\n                   break;\n                default : break;\n          {\n             switch(jjstateSet[--i])\n             {\n-               case 1:\n+               case 0:\n                   if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                      break;\n-                  if (kind > 74)\n-                     kind = 74;\n-                  jjCheckNAdd(13);\n+                  if (kind > 78)\n+                     kind = 78;\n+                  jjCheckNAdd(12);\n                   break;\n-               case 2:\n+               case 1:\n                   if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                      jjAddStates(0, 1);\n                   break;\n-               case 5:\n+               case 4:\n                   if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                      jjAddStates(2, 3);\n                   break;\n-               case 13:\n+               case 12:\n                   if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                      break;\n-                  if (kind > 74)\n-                     kind = 74;\n-                  jjCheckNAdd(13);\n+                  if (kind > 78)\n+                     kind = 78;\n+                  jjCheckNAdd(12);\n                   break;\n                default : break;\n             }\n          kind = 0x7fffffff;\n       }\n       ++curPos;\n-      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))\n+      if ((i = jjnewStateCnt) == (startsAt = 13 - (jjnewStateCnt = startsAt)))\n          return curPos;\n       try { curChar = input_stream.readChar(); }\n       catch(java.io.IOException e) { return curPos; }\n    }\n }\n static final int[] jjnextStates = {\n-   2, 3, 5, 6, \n+   1, 2, 4, 5, \n };\n private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)\n {\n    }\n }\n public static final String[] jjstrLiteralImages = {\n-\"\", null, \"\\57\", \"\\57\\57\", \"\\174\", \"\\53\", \"\\55\", \"\\75\", \"\\41\\75\", \"\\74\", \n-\"\\74\\75\", \"\\76\", \"\\76\\75\", \"\\44\", null, null, null, null, null, null, null, null, null, \n-\"\\157\\162\", \"\\141\\156\\144\", \"\\155\\157\\144\", \"\\144\\151\\166\", \"\\156\\157\\144\\145\", \n-\"\\164\\145\\170\\164\", \"\\143\\157\\155\\155\\145\\156\\164\", \n+\"\", null, null, null, null, null, \"\\57\", \"\\57\\57\", \"\\174\", \"\\53\", \"\\55\", \n+\"\\75\", \"\\41\\75\", \"\\74\", \"\\74\\75\", \"\\76\", \"\\76\\75\", \"\\44\", null, null, null, null, \n+null, null, null, null, null, \"\\157\\162\", \"\\141\\156\\144\", \"\\155\\157\\144\", \n+\"\\144\\151\\166\", \"\\156\\157\\144\\145\", \"\\164\\145\\170\\164\", \"\\143\\157\\155\\155\\145\\156\\164\", \n \"\\160\\162\\157\\143\\145\\163\\163\\151\\156\\147\\55\\151\\156\\163\\164\\162\\165\\143\\164\\151\\157\\156\", \"\\163\\145\\154\\146\\72\\72\", \"\\143\\150\\151\\154\\144\\72\\72\", \n \"\\160\\141\\162\\145\\156\\164\\72\\72\", \"\\141\\156\\143\\145\\163\\164\\157\\162\\72\\72\", \n \"\\141\\164\\164\\162\\151\\142\\165\\164\\145\\72\\72\", \"\\156\\141\\155\\145\\163\\160\\141\\143\\145\\72\\72\", \n    \"DEFAULT\", \n };\n static final long[] jjtoToken = {\n-   0xffffffffff817ffdL, 0x1fffffL, \n+   0xfffffffff817ffc1L, 0x1ffffffL, \n };\n static final long[] jjtoSkip = {\n-   0x2L, 0x0L, \n-};\n-static final long[] jjtoSpecial = {\n-   0x2L, 0x0L, \n+   0x3eL, 0x0L, \n };\n private JavaCharStream input_stream;\n-private final int[] jjrounds = new int[14];\n-private final int[] jjstateSet = new int[28];\n+private final int[] jjrounds = new int[13];\n+private final int[] jjstateSet = new int[26];\n protected char curChar;\n public XPathParserTokenManager(JavaCharStream stream)\n {\n {\n    int i;\n    jjround = 0x80000001;\n-   for (i = 14; i-- > 0;)\n+   for (i = 13; i-- > 0;)\n       jjrounds[i] = 0x80000000;\n }\n public void ReInit(JavaCharStream stream, int lexState)\n    {        \n       jjmatchedKind = 0;\n       matchedToken = jjFillToken();\n-      matchedToken.specialToken = specialToken;\n       return matchedToken;\n    }\n \n+   try { input_stream.backup(0);\n+      while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)\n+         curChar = input_stream.BeginToken();\n+   }\n+   catch (java.io.IOException e1) { continue EOFLoop; }\n    jjmatchedKind = 0x7fffffff;\n    jjmatchedPos = 0;\n    curPos = jjMoveStringLiteralDfa0_0();\n       if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)\n       {\n          matchedToken = jjFillToken();\n-         matchedToken.specialToken = specialToken;\n          return matchedToken;\n       }\n       else\n       {\n-         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)\n-         {\n-            matchedToken = jjFillToken();\n-            if (specialToken == null)\n-               specialToken = matchedToken;\n-            else\n-            {\n-               matchedToken.specialToken = specialToken;\n-               specialToken = (specialToken.next = matchedToken);\n-            }\n-         }\n          continue EOFLoop;\n       }\n    }", "timestamp": 1048559323, "metainfo": ""}