{"sha": "de1521a69afe8ef8ce02fb2431cc008cfd6f17b2", "log": "Added \"undeclareVariable\"   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/BasicVariables.java\n+++ b/src/java/org/apache/commons/jxpath/BasicVariables.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/BasicVariables.java,v 1.2 2002/04/24 03:29:33 dmitri Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/04/24 03:29:33 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/BasicVariables.java,v 1.3 2002/05/08 23:02:42 dmitri Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/05/08 23:02:42 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * A basic implementation of the Variables interface that uses a HashMap.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.2 $ $Date: 2002/04/24 03:29:33 $\n+ * @version $Revision: 1.3 $ $Date: 2002/05/08 23:02:42 $\n  */\n public class BasicVariables implements Variables {\n \n     /**\n      * Returns true if the variable has been defined, even if the\n      * value of the variable is null.\n-     * \n+     *\n      * @param varName is a variable name without the \"$\" sign\n-     * \n+     *\n      * @return true if the variable is declared\n      */\n     public boolean isDeclaredVariable(String varName){\n     /**\n      * Returns the value of the variable if it is defined,\n      * otherwise, throws IllegalArgumentException\n-     * \n+     *\n      * @param varName is a variable name without the \"$\" sign\n-     * \n+     *\n      * @return the value of the variable\n      */\n     public Object getVariable(String varName){\n     /**\n      * Defines a new variable with the specified value or modifies\n      * the value of an existing variable.\n-     * \n+     *\n      * @param varName is a variable name without the \"$\" sign\n      * @param value is the new value for the variable, which can be null\n      */\n         vars.put(varName, value);\n     }\n \n+    /**\n+     * Removes an existing variable. May throw UnsupportedOperationException.\n+     *\n+     * @param varName is a variable name without the \"$\" sign\n+     */\n+    public void undeclareVariable(String varName){\n+        vars.remove(varName);\n+    }\n     public String toString(){\n         return vars.toString();\n     }\n--- a/src/java/org/apache/commons/jxpath/Variables.java\n+++ b/src/java/org/apache/commons/jxpath/Variables.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/Variables.java,v 1.2 2002/04/24 03:30:17 dmitri Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/04/24 03:30:17 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/Variables.java,v 1.3 2002/05/08 23:02:42 dmitri Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/05/08 23:02:42 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n \n /**\n  * Variables provide access to a global set of values accessible via XPath.\n- * XPath can reference variables using the \"$varname\" syntax. To use a custom\n- * implementation of this interface, pass it to a newContext method of\n- * JXPathContext.\n- *\n- * @see JXPathContext#setVariables\n+ * XPath can reference variables using the <code>\"$varname\"</code> syntax.\n+ * To use a custom implementation of this interface, pass it to\n+ * {@link JXPathContext#setVariables JXPathContext.setVariables()}\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.2 $ $Date: 2002/04/24 03:30:17 $\n+ * @version $Revision: 1.3 $ $Date: 2002/05/08 23:02:42 $\n  */\n public interface Variables {\n \n \n     /**\n      * Defines a new variable with the specified value or modifies\n-     * the value of an existing variable. May throw UnsupportedOperationException.\n+     * the value of an existing variable.\n+     * May throw UnsupportedOperationException.\n      */\n     void declareVariable(String varName, Object value);\n+\n+    /**\n+     * Removes an existing variable. May throw UnsupportedOperationException.\n+     *\n+     * @param varName is a variable name without the \"$\" sign\n+     */\n+    void undeclareVariable(String varName);\n }", "timestamp": 1020898962, "metainfo": ""}