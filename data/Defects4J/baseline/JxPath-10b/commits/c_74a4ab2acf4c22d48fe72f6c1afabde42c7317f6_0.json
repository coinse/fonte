{"sha": "74a4ab2acf4c22d48fe72f6c1afabde42c7317f6", "log": "Fixed issues with variables: qualified names and indexing   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java,v 1.11 2003/01/12 01:52:56 dmitri Exp $\n- * $Revision: 1.11 $\n- * $Date: 2003/01/12 01:52:56 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java,v 1.12 2003/01/19 23:58:27 dmitri Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2003/01/19 23:58:27 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import org.apache.commons.jxpath.Variables;\n import org.apache.commons.jxpath.ri.QName;\n import org.apache.commons.jxpath.ri.compiler.NodeTest;\n-import org.apache.commons.jxpath.ri.model.beans.NullPointer;\n import org.apache.commons.jxpath.util.ValueUtils;\n \n /**\n  * Pointer to a context variable.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.11 $ $Date: 2003/01/12 01:52:56 $\n+ * @version $Revision: 1.12 $ $Date: 2003/01/19 23:58:27 $\n  */\n public class VariablePointer extends NodePointer {\n     private Variables variables;\n         if (!actual) {\n             throw new JXPathException(\"Undefined variable: \" + name);\n         }\n-        return variables.getVariable(name.getName());\n+        return variables.getVariable(name.toString());\n     }\n     \n     public boolean isLeaf() {\n         }\n         return value;\n     }\n-    \n+\n     public void setValue(Object value) {\n         if (!actual) {\n             throw new JXPathException(\"Cannot set undefined variable: \" + name);\n             ValueUtils.setValue(collection, index, value);\n         }\n         else {\n-            variables.declareVariable(name.getName(), value);\n+            variables.declareVariable(name.toString(), value);\n         }\n     }\n \n     public boolean isActual() {\n         return actual;\n+    }\n+    \n+    public void setIndex(int index) {\n+        super.setIndex(index);\n+        valuePointer = null;\n     }\n \n     public NodePointer getImmediateValuePointer() {\n             Object value = null;\n             if (actual) {\n                 value = getImmediateNode();\n-                valuePointer =\n-                    NodePointer.newChildNodePointer(this, null, value);\n-            }\n-            else {\n-                return new NullPointer(this, getName()) {\n-                    public Object getImmediateNode() {\n-                        throw new JXPathException(\n-                            \"Undefined variable: \" + name);\n-                    }\n-                };\n-            }\n+            }\n+            valuePointer = NodePointer.newChildNodePointer(this, null, value);\n         }\n         return valuePointer;\n     }", "timestamp": 1043020707, "metainfo": ""}