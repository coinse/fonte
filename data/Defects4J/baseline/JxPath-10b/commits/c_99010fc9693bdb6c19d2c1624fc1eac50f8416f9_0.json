{"sha": "99010fc9693bdb6c19d2c1624fc1eac50f8416f9", "log": "Fixed a bug in DOMNodeIterator.previous(), which caused the function last() to fail.   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java,v 1.8 2003/10/09 21:31:41 rdonkin Exp $\n- * $Revision: 1.8 $\n- * $Date: 2003/10/09 21:31:41 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodeIterator.java,v 1.9 2004/01/17 03:25:14 dmitri Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2004/01/17 03:25:14 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * An iterator of children of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2003/10/09 21:31:41 $\n+ * @version $Revision: 1.9 $ $Date: 2004/01/17 03:25:14 $\n  */\n public class DOMNodeIterator implements NodeIterator {\n     private NodePointer parent;\n     }\n \n     public NodePointer getNodePointer() {\n+        if (position == 0) {\n+            setPosition(1);\n+        }\n         if (child == null) {\n-            if (!setPosition(1)) {\n-                return null;\n-            }\n-            position = 0;\n+            return null;\n         }\n-\n         return new DOMNodePointer(parent, child);\n     }\n \n     private boolean previous() {\n         position--;\n         if (!reverse) {\n-            child = child.getPreviousSibling();\n+            if (position == 0) {\n+                child = null;\n+            }\n+            else if (child == null) {\n+                child = node.getLastChild();\n+            }\n+            else {\n+                child = child.getPreviousSibling();\n+            }\n             while (child != null && !testChild()) {\n                 child = child.getPreviousSibling();\n             }\n--- a/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,v 1.15 2003/10/09 21:31:43 rdonkin Exp $\n- * $Revision: 1.15 $\n- * $Date: 2003/10/09 21:31:43 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,v 1.16 2004/01/17 03:25:14 dmitri Exp $\n+ * $Revision: 1.16 $\n+ * $Date: 2004/01/17 03:25:14 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * Abstract superclass for Bean access with JXPath.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.15 $ $Date: 2003/10/09 21:31:43 $\n+ * @version $Revision: 1.16 $ $Date: 2004/01/17 03:25:14 $\n  */\n \n public abstract class BeanModelTestCase extends JXPathTestCase {\n     }\n \n     public void setUp() {\n-        if (context == null) {\n+//        if (context == null) {\n             context = JXPathContext.newContext(createContextBean());\n             context.setLocale(Locale.US);\n             context.setFactory(getAbstractFactory());\n-        }\n+//        }\n     }\n \n     protected abstract Object createContextBean();\n             \"boolean(integers[position() > 4])\",\n             Boolean.FALSE);\n \n-        assertXPathValue(context, \"sum(integers)\", new Double(10));\n+        assertXPathValue(context, \"sum(integers)\", new Double(10));        \n+\n+        assertXPathValueAndPointer(\n+                context,\n+                \"integers[last()]\",\n+                new Integer(4),\n+                \"/integers[4]\");\n+\n+        assertXPathValueAndPointer(\n+                context,\n+                \"//strings[last()]\",\n+                \"String 3\",\n+                \"/beans[1]/strings[3]\");\n     }\n \n     public void testBooleanPredicate() {\n--- a/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n+++ b/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,v 1.13 2003/10/09 21:31:43 rdonkin Exp $\n- * $Revision: 1.13 $\n- * $Date: 2003/10/09 21:31:43 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/test/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,v 1.14 2004/01/17 03:25:14 dmitri Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2004/01/17 03:25:14 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * DOM, JDOM etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.13 $ $Date: 2003/10/09 21:31:43 $\n+ * @version $Revision: 1.14 $ $Date: 2004/01/17 03:25:14 $\n  */\n \n public abstract class XMLModelTestCase extends JXPathTestCase {\n \n     protected DocumentContainer createDocumentContainer() {\n         return new DocumentContainer(\n-            JXPathTestCase.class.getResource(\"Vendor.xml\"),\n-            getModel());\n-    }\n-\n+                JXPathTestCase.class.getResource(\"Vendor.xml\"),\n+                getModel());\n+    }\n+    \n     protected abstract AbstractFactory getAbstractFactory();\n \n     protected JXPathContext createContext() {\n             \"boolean(vendor//promotion[../@stores = 'some'])\",\n             Boolean.FALSE);\n     }\n+    \n+    public void testFunctionsLastAndPosition() {\n+        assertXPathPointer(\n+                context,\n+                \"vendor//location[last()]\",\n+                \"/vendor[1]/location[2]\");\n+    }\n }", "timestamp": 1074309914, "metainfo": ""}