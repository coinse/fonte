{"sha": "02a36dd41dc1bb80eb567feb39dc86b36afcc0ff", "log": "Test multiple adjacent comments  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n                 + \"a,b\\n\"            // 1)\n                 + \"\\\"\\n\\\",\\\" \\\"\\n\"   // 2)\n                 + \"#,\\\"\\\"\\n\"         // 3)\n+                + \"# Final comment\\n\"// 4)\n                 ;\n         String[][] res = {\n                 {\"a\", \"b\"},\n                 {\"\\n\", \" \"},\n                 {\"#\", \"\"},\n+                {\"# Final comment\"}\n         };\n \n         CSVFormat format = CSVFormat.DEFAULT;\n         List<CSVRecord> records = parser.getRecords();\n         assertTrue(records.size() > 0);\n \n-        assertTrue(CSVPrinterTest.equals(res, records));\n+        assertTrue(\"Failed to parse without comments\", CSVPrinterTest.equals(res, records));\n \n         String[][] res_comments = {\n                 {\"a\", \"b\"},\n         parser = new CSVParser(code, format);\n         records = parser.getRecords();\n         \n-        assertTrue(CSVPrinterTest.equals(res_comments, records));\n+        assertTrue(\"Failed to parse with comments\",CSVPrinterTest.equals(res_comments, records));\n     }\n \n     @Test", "timestamp": 1332979399, "metainfo": ""}