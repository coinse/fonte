{"sha": "4a8f3402399ae092507347a51de5c9f6fa5c5e8b", "log": "Javadoc.", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n      * Creates a CSV parser using the given {@link CSVFormat}.\n      *\n      * <p>\n-     * If you do not read all records from the given {@code reader}, you should\n-     * call {@link #close()} on the parser, unless you close the {@code reader}.\n+     * If you do not read all records from the given {@code reader}, you should call {@link #close()} on the parser,\n+     * unless you close the {@code reader}.\n      * </p>\n      *\n      * @param inputStream\n      *            a Charset.\n      * @param format\n      *            the CSVFormat used for CSV parsing. Must not be null.\n-     * @throws IllegalArgumentException\n-     *             If the parameters of the format are inconsistent or if either\n-     *             reader or format are null.\n-     * @throws IOException\n-     *             If there is a problem reading the header or skipping the\n-     *             first record\n+     * @return a new CSVParser configured with the given reader and format.\n+     * @throws IllegalArgumentException\n+     *             If the parameters of the format are inconsistent or if either reader or format are null.\n+     * @throws IOException\n+     *             If there is a problem reading the header or skipping the first record\n      * @since 1.5\n      */\n     @SuppressWarnings(\"resource\")\n      * Creates a CSV parser using the given {@link CSVFormat}\n      *\n      * <p>\n-     * If you do not read all records from the given {@code reader}, you should\n-     * call {@link #close()} on the parser, unless you close the {@code reader}.\n+     * If you do not read all records from the given {@code reader}, you should call {@link #close()} on the parser,\n+     * unless you close the {@code reader}.\n      * </p>\n      *\n      * @param reader\n      *            a Reader containing CSV-formatted input. Must not be null.\n      * @param format\n      *            the CSVFormat used for CSV parsing. Must not be null.\n-     * @throws IllegalArgumentException\n-     *             If the parameters of the format are inconsistent or if either\n-     *             reader or format are null.\n-     * @throws IOException\n-     *             If there is a problem reading the header or skipping the\n-     *             first record\n+     * @return a new CSVParser configured with the given reader and format.\n+     * @throws IllegalArgumentException\n+     *             If the parameters of the format are inconsistent or if either reader or format are null.\n+     * @throws IOException\n+     *             If there is a problem reading the header or skipping the first record\n      * @since 1.5\n      */\n     public static CSVParser parse(Reader reader, final CSVFormat format) throws IOException {", "timestamp": 1500603970, "metainfo": ""}