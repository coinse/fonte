{"sha": "1023690dc284afaf380b0cf3eb74c411e0663465", "log": "Break up testEscapeBackslash() method into individual tests.", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n  */\n public class CSVPrinterTest {\n \n+    private static final char QUOTE_CH = '\\'';\n     private static final int ITERATIONS_FOR_RANDOM_TEST = 50000;\n \n     private static String printable(final String s) {\n     }\n \n     @Test\n-    public void testEscapeBackslash() throws IOException {\n+    public void testEscapeBackslash1() throws IOException {\n         StringWriter sw = new StringWriter();\n-        final char quoteChar = '\\'';\n-        final String eol = \"\\r\\n\";\n-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {\n+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {\n             printer.print(\"\\\\\");\n         }\n         assertEquals(\"'\\\\'\", sw.toString());\n-\n-        sw = new StringWriter();\n-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {\n+    }\n+\n+    @Test\n+    public void testEscapeBackslash2() throws IOException {\n+        StringWriter sw = new StringWriter();\n+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {\n             printer.print(\"\\\\\\r\");\n         }\n         assertEquals(\"'\\\\\\r'\", sw.toString());\n \n-        sw = new StringWriter();\n-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {\n+    }\n+\n+    @Test\n+    public void testEscapeBackslash3() throws IOException {\n+        StringWriter sw = new StringWriter();\n+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {\n             printer.print(\"X\\\\\\r\");\n         }\n         assertEquals(\"'X\\\\\\r'\", sw.toString());\n-\n-        sw = new StringWriter();\n-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {\n-            printer.printRecord(new Object[] { \"\\\\\\r\" });\n-        }\n-        assertEquals(\"'\\\\\\r'\" + eol, sw.toString());\n-\n-        sw = new StringWriter();\n-        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(quoteChar))) {\n+    }\n+\n+    @Test\n+    public void testEscapeBackslash4() throws IOException {\n+        StringWriter sw = new StringWriter();\n+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {\n+            printer.print(\"\\\\\\\\\");\n+        }\n+        assertEquals(\"'\\\\\\\\'\", sw.toString());\n+    }\n+\n+    @Test\n+    public void testEscapeBackslash5() throws IOException {\n+        StringWriter sw = new StringWriter();\n+        try (final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT.withQuote(QUOTE_CH))) {\n             printer.print(\"\\\\\\\\\");\n         }\n         assertEquals(\"'\\\\\\\\'\", sw.toString());", "timestamp": 1469947371, "metainfo": ""}