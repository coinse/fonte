{"sha": "9e4e3dc37973bc1f46017af0477dc9d414a5203f", "log": "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n+++ b/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n  * A special buffered reader which supports sophisticated read access.\n  * <p>\n  * In particular the reader supports a look-ahead option, which allows you to see the next char returned by\n- * {@link #read()}.\n+ * {@link #read()}. This reader also tracks how many characters have been read with {@link #getPosition()}.\n+ * </p>\n  *\n  * @version $Id$\n  */\n \n     /** The count of EOLs (CR/LF/CRLF) seen so far */\n     private long eolCounter = 0;\n+\n+    /** The position, which is number of characters read so far */\n+    private long position = 0;\n \n     private boolean closed;\n \n             eolCounter++;\n         }\n         lastChar = current;\n+        this.position++;\n         return lastChar;\n     }\n \n             lastChar = END_OF_STREAM;\n         }\n \n+        position += len;\n         return len;\n     }\n \n         return eolCounter + 1; // Allow for counter being incremented only at EOL\n     }\n \n+    /**\n+     * Gets the character position in the reader.\n+     * \n+     * @return the current position in the reader (counting characters, not bytes since this is a Reader)\n+     */\n+    long getPosition() {\n+        return this.position;\n+    }\n+\n     public boolean isClosed() {\n         return closed;\n     }", "timestamp": 1410922666, "metainfo": ""}