{"sha": "bb54feb7cde6445d1e85fb9eb028a38823bbf0a7", "log": "Clearify handling of record separators and remove senseless validation  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n     }\n \n     /**\n-     * Returns the line separator delimiting output records.\n-     *\n-     * @return the line separator\n+     * Returns the record separator delimiting output records.\n+     *\n+     * @return the record separator\n      */\n     public String getRecordSeparator() {\n         return recordSeparator;\n         if (escape == null && quotePolicy == Quote.NONE) {\n             throw new IllegalArgumentException(\"No quotes mode set but no escape character is set\");\n         }\n-\n-        if(recordSeparator != null &&\n-                !(CRLF.equals(recordSeparator) ||\n-                        String.valueOf(CR).equals(recordSeparator) ||\n-                        String.valueOf(LF).equals(recordSeparator))) {\n-            throw new IllegalArgumentException(\"Record separator can only by CR, LF or CRLF\");\n-        }\n     }\n \n     /**\n     /**\n      * Sets the record separator of the format to the specified character.\n      *\n-     * <p><strong>Note:</strong> Currently only CR and LF are supported.</p>\n+     * <p><strong>Note:</strong> This setting is only used during printing and does not affect parsing. Parsing currently\n+     * only works for inputs with '\\n', '\\r' and \"\\r\\n\"</p>\n      *\n      * @param recordSeparator\n      *            the record separator to use for output.\n      *\n      * @return A new CSVFormat that is equal to this but with the the specified output record separator\n-     * @throws IllegalArgumentException\n-     *              if recordSeparator is neither CR nor LF\n      */\n     public CSVFormat withRecordSeparator(final char recordSeparator) {\n         return withRecordSeparator(String.valueOf(recordSeparator));\n     /**\n      * Sets the record separator of the format to the specified String.\n      *\n-     * <p><strong>Note:</strong> Currently only CR, LF and CRLF are supported.</p>\n+     * <p><strong>Note:</strong> This setting is only used during printing and does not affect parsing. Parsing currently\n+     * only works for inputs with '\\n', '\\r' and \"\\r\\n\"</p>\n      *\n      * @param recordSeparator\n      *            the record separator to use for output.\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n         final CSVFormat formatWithRecordSeparator = CSVFormat.DEFAULT.withRecordSeparator(CRLF);\n         assertEquals(CRLF, formatWithRecordSeparator.getRecordSeparator());\n     }\n-\n-    @Test(expected = IllegalArgumentException.class)\n-    public void testWithRecordSeparatorIllegal() throws Exception {\n-        CSVFormat.DEFAULT.withRecordSeparator('!');\n-    }\n }", "timestamp": 1405366237, "metainfo": ""}