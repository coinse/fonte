{"sha": "0ec08e400b334d95313bef33e3da17c4d416ca74", "log": "Add JiraCsv198Test.", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/csv/bugs/JiraCsv198Test.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.csv.bugs;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.UnsupportedEncodingException;\n+\n+import org.apache.commons.csv.CSVFormat;\n+import org.apache.commons.csv.CSVParser;\n+import org.apache.commons.csv.CSVRecord;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class JiraCsv198Test {\n+\n+    private static final CSVFormat CSV_FORMAT = CSVFormat.EXCEL.withDelimiter('^').withFirstRecordAsHeader();\n+    \n+    @Test\n+    public void test() throws UnsupportedEncodingException, IOException {\n+        InputStream pointsOfReference = getClass().getResourceAsStream(\"/CSV-198/optd_por_public.csv\");\n+        Assert.assertNotNull(pointsOfReference);\n+        CSVParser parser = CSV_FORMAT.parse(new InputStreamReader(pointsOfReference, \"UTF-8\"));\n+        for (CSVRecord record : parser) {\n+            String locationType = record.get(\"location_type\");\n+            Assert.assertNotNull(locationType);\n+        }\n+    }\n+\n+}", "timestamp": 1480627502, "metainfo": ""}