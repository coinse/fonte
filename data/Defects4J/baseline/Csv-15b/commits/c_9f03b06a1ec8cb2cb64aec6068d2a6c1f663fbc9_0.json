{"sha": "9f03b06a1ec8cb2cb64aec6068d2a6c1f663fbc9", "log": "[CSV-111] CSVRecord.toMap() fails if row length shorter than header length.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVRecord.java\n+++ b/src/main/java/org/apache/commons/csv/CSVRecord.java\n      */\n     <M extends Map<String, String>> M putIn(final M map) {\n         for (final Entry<String, Integer> entry : mapping.entrySet()) {\n-            map.put(entry.getKey(), values[entry.getValue().intValue()]);\n+            final int col = entry.getValue().intValue();\n+            if (col < values.length) {\n+                map.put(entry.getKey(), values[col]);\n+            }\n         }\n         return map;\n     }\n--- a/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n         this.validateMap(map, true);\n     }\n \n+    @Test\n+    public void testToMapWithShortRecord() throws Exception {\n+       final CSVParser parser =  CSVParser.parse(\"a,b\", CSVFormat.DEFAULT.withHeader(\"A\", \"B\", \"C\"));\n+       final CSVRecord shortRec = parser.iterator().next();\n+       shortRec.toMap();\n+    }\n+    \n     private void validateMap(final Map<String, String> map, final boolean allowsNulls) {\n         assertTrue(map.containsKey(\"first\"));\n         assertTrue(map.containsKey(\"second\"));", "timestamp": 1398198017, "metainfo": ""}