{"sha": "7c770e0b53235e90a216ae3b214048b765cda0c0", "log": "Now that delimiter is a char, simplify API by removing withDelimiter(Character)  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n      * @return true if <code>c</code> is a line break character\n      */\n     private static boolean isLineBreak(final Character c) {\n-        return c != null && (c == LF || c == CR);\n+        return c != null && isLineBreak(c.charValue());\n+    }\n+\n+    /**\n+     * Returns true if the given character is a line break character.\n+     *\n+     * @param c\n+     *            the character to check\n+     *\n+     * @return true if <code>c</code> is a line break character\n+     */\n+    private static boolean isLineBreak(final char c) {\n+        return c == LF || c == CR;\n     }\n \n     /**\n      *             thrown if the specified character is a line break\n      */\n     public CSVFormat withDelimiter(final char delimiter) {\n-        return withDelimiter(Character.valueOf(delimiter));\n-    }\n-\n-    /**\n-     * Returns a copy of this format using the specified delimiter character.\n-     *\n-     * @param delimiter\n-     *            the delimiter character\n-     * @return A copy of this format using the specified delimiter character\n-     * @throws IllegalArgumentException\n-     *             thrown if the specified character is a line break\n-     */\n-    public CSVFormat withDelimiter(final Character delimiter) {\n         if (isLineBreak(delimiter)) {\n             throw new IllegalArgumentException(\"The delimiter cannot be a line break\");\n         }", "timestamp": 1350316389, "metainfo": ""}