{"sha": "51049fd117ae5d0cdfaec7fbf0a6de940502346b", "log": "Fix test  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/JiraCsv167Test.java\n+++ b/src/test/java/org/apache/commons/csv/JiraCsv167Test.java\n  */\n package org.apache.commons.csv;\n \n+import java.io.BufferedReader;\n import java.io.File;\n+import java.io.FileReader;\n import java.io.IOException;\n import java.nio.charset.Charset;\n \n import org.junit.Assert;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n public class JiraCsv167Test {\n \n     @Test\n-    @Ignore(\"Fails\")\n     public void parse() throws IOException {\n         final File csvData = new File(\"src/test/resources/csv-167/sample1.csv\");\n+        BufferedReader br = new BufferedReader(new FileReader(csvData));\n+        String s = null;\n+        int totcomment = 0;\n+        int totrecs = 0;\n+        boolean lastWasComment = false;\n+        while((s=br.readLine()) != null) {\n+            if (s.startsWith(\"#\")) {\n+                if (!lastWasComment) { // comments are merged\n+                    totcomment++;\n+                }\n+                lastWasComment = true;\n+            } else {\n+                totrecs++;\n+                lastWasComment = false;\n+            }\n+        }\n+        br.close();\n         CSVFormat format = CSVFormat.DEFAULT;\n         //\n         format = format.withAllowMissingColumnNames(false);\n         int comments = 0;\n         int records = 0;\n         for (final CSVRecord csvRecord : parser) {\n+//            System.out.println(csvRecord.isComment() + \"[\" + csvRecord.toString() + \"]\");\n+            records++;\n             if (csvRecord.isComment()) {\n                 comments++;\n-            } else {\n-                records++;\n-                // System.out.println(\"[\" + csvRecord.toString() + \"]\");\n             }\n         }\n         // Comment lines are concatenated, in this example 4 lines become 2 comments.\n-        Assert.assertEquals(2, comments);\n-        Assert.assertEquals(3, records);\n+        Assert.assertEquals(totcomment, comments);\n+        Assert.assertEquals(totrecs, records); // records includes the header\n     }\n }", "timestamp": 1454066949, "metainfo": ""}