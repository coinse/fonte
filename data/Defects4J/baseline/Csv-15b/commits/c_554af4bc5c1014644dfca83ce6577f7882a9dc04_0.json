{"sha": "554af4bc5c1014644dfca83ce6577f7882a9dc04", "log": "Access test data using the classloader instead of defining a file handle  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/bugs/JiraCsv167Test.java\n+++ b/src/test/java/org/apache/commons/csv/bugs/JiraCsv167Test.java\n package org.apache.commons.csv.bugs;\n \n import java.io.BufferedReader;\n-import java.io.File;\n-import java.io.FileReader;\n import java.io.IOException;\n-import java.nio.charset.Charset;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n \n import org.apache.commons.csv.CSVFormat;\n import org.apache.commons.csv.CSVParser;\n \n     @Test\n     public void parse() throws IOException {\n-        final File csvData = new File(\"src/test/resources/csv-167/sample1.csv\");\n-        final BufferedReader br = new BufferedReader(new FileReader(csvData));\n+        final BufferedReader br = new BufferedReader(getTestInput());\n         String s = null;\n         int totcomment = 0;\n         int totrecs = 0;\n         format = format.withRecordSeparator('\\n');\n         format = format.withSkipHeaderRecord(false);\n         //\n-        final CSVParser parser = CSVParser.parse(csvData, Charset.defaultCharset(), format);\n+        final CSVParser parser = format.parse(getTestInput());\n         int comments = 0;\n         int records = 0;\n         for (final CSVRecord csvRecord : parser) {\n-//            System.out.println(csvRecord.isComment() + \"[\" + csvRecord.toString() + \"]\");\n             records++;\n             if (csvRecord.hasComment()) {\n                 comments++;\n         Assert.assertEquals(totcomment, comments);\n         Assert.assertEquals(totrecs, records); // records includes the header\n     }\n+\n+    private Reader getTestInput() {\n+        final InputStream is = ClassLoader.getSystemClassLoader().getResourceAsStream(\"csv-167/sample1.csv\");\n+        return new InputStreamReader(is);\n+    }\n }", "timestamp": 1462451157, "metainfo": ""}