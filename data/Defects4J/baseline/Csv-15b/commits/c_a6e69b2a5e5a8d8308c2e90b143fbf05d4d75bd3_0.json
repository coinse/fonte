{"sha": "a6e69b2a5e5a8d8308c2e90b143fbf05d4d75bd3", "log": "Refactor test to better abstract set up of fixture.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n     public void testJdbcPrinter() throws IOException, ClassNotFoundException, SQLException {\n         final StringWriter sw = new StringWriter();\n         final Connection connection = geH2Connection();\n+        setUpTable(connection);\n         try {\n             final Statement stmt = connection.createStatement();\n-            setUpTable(stmt);\n             final CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT);\n             printer.printRecords(stmt.executeQuery(\"select ID, NAME from TEST\"));\n             assertEquals(\"1,r1\" + recordSeparator + \"2,r2\" + recordSeparator, sw.toString());\n         final StringWriter sw = new StringWriter();\n         Class.forName(\"org.h2.Driver\");\n         final Connection connection = geH2Connection();\n+        setUpTable(connection);\n         try {\n             @SuppressWarnings(\"resource\")\n             // Closed when the connection is closed.\n             final Statement stmt = connection.createStatement();\n-            setUpTable(stmt);\n             @SuppressWarnings(\"resource\")\n             // Closed when the connection is closed.\n             final ResultSet resultSet = stmt.executeQuery(\"select ID, NAME from TEST\");\n         final StringWriter sw = new StringWriter();\n         Class.forName(\"org.h2.Driver\");\n         final Connection connection = geH2Connection();\n+        setUpTable(connection);\n         try {\n             @SuppressWarnings(\"resource\")\n             // Closed when the connection is closed.\n             final Statement stmt = connection.createStatement();\n-            setUpTable(stmt);\n             @SuppressWarnings(\"resource\")\n             // Closed when the connection is closed.\n             final ResultSet resultSet = stmt.executeQuery(\"select ID, NAME from TEST\");\n         }\n     }\n \n-    private void setUpTable(final Statement stmt) throws SQLException {\n-        stmt.execute(\"CREATE TABLE TEST(ID INT PRIMARY KEY, NAME VARCHAR(255))\");\n-        stmt.execute(\"insert into TEST values(1, 'r1')\");\n-        stmt.execute(\"insert into TEST values(2, 'r2')\");\n+    private void setUpTable(final Connection connection) throws SQLException {\n+        Statement statement = connection.createStatement();\n+        try {\n+            statement.execute(\"CREATE TABLE TEST(ID INT PRIMARY KEY, NAME VARCHAR(255))\");\n+            statement.execute(\"insert into TEST values(1, 'r1')\");\n+            statement.execute(\"insert into TEST values(2, 'r2')\");\n+        } finally {\n+            statement.close();\n+        }\n     }\n \n     @Test", "timestamp": 1415714734, "metainfo": ""}