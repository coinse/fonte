{"sha": "75e42f5bc5d3405873d2de3f5ebfbe502d1f6005", "log": "move failing test to 'failing' so as to prevent CI failures, github merge warnings", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestCreators421.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;\n+import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+\n+public class TestCreators421 extends BaseMapTest\n+{\n+    static class MultiCtor\n+    {\n+        protected String _a, _b;\n+        \n+        @JsonCreator\n+        static MultiCtor factory(@JsonProperty(\"a\") String a, @JsonProperty(\"b\") String b) {\n+            return new MultiCtor(a, b, Boolean.TRUE);\n+        }\n+\n+        private MultiCtor() { }\n+\n+        private MultiCtor(String a, String b, Boolean c) {\n+            if (c == null) {\n+                throw new RuntimeException(\"Wrong factory!\");\n+            }\n+            _a = a;\n+            _b = b;\n+        }\n+        \n+    }\n+\n+    @SuppressWarnings(\"serial\")\n+    static class MyParamIntrospector extends JacksonAnnotationIntrospector\n+    {\n+        @Override\n+        public String findImplicitPropertyName(AnnotatedMember param) {\n+            if (param instanceof AnnotatedParameter) {\n+                AnnotatedParameter ap = (AnnotatedParameter) param;\n+                switch (ap.getIndex()) {\n+                case 0: return \"a\";\n+                case 1: return \"b\";\n+                case 2: return \"c\";\n+                default:\n+                    return \"param\"+ap.getIndex();\n+                }\n+            }\n+            return super.findImplicitPropertyName(param);\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    // [Issue#421]\n+    public void testMultiCtor421() throws Exception\n+    {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        mapper.setAnnotationIntrospector(new MyParamIntrospector());\n+\n+        MultiCtor bean = mapper.readValue(aposToQuotes(\"{'a':'123','b':'foo'}\"), MultiCtor.class);\n+        assertNotNull(bean);\n+        assertEquals(\"123\", bean._a);\n+        assertEquals(\"foo\", bean._b);\n+    }\n+}", "timestamp": 1409205053, "metainfo": ""}