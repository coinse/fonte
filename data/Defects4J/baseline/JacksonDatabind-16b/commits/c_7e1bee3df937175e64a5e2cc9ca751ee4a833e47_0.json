{"sha": "7e1bee3df937175e64a5e2cc9ca751ee4a833e47", "log": "Add a unit test for [Issue#113]", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestIssueGH113.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestIssueGH113 extends BaseMapTest\n+{\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+    @JsonSubTypes({\n+            @JsonSubTypes.Type(Cat.class),\n+            @JsonSubTypes.Type(Dog.class)\n+    })\n+    public static abstract class Animal {\n+        public final static String ID = \"id\";\n+\n+        private String id;\n+        public Animal() {\n+        }\n+\n+        @JsonCreator\n+        public Animal(@JsonProperty(ID) String id) {\n+            this.id = id;\n+        }\n+\n+        @JsonProperty(ID)\n+        public String getId() {\n+            return id;\n+        }\n+    }\n+\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n+    public static class Cat extends Animal {\n+        public Cat() {\n+            super();\n+        }\n+\n+        @JsonCreator\n+        public Cat(@JsonProperty(ID) String id) {\n+            super(id);\n+        }\n+\n+    }\n+\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n+    public static class Dog extends Animal {\n+        public Dog() {\n+            super();\n+        }\n+\n+        @JsonCreator\n+        public Dog(@JsonProperty(ID) String id) {\n+            super(id);\n+        }\n+    }\n+\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n+    public static class AnimalWrapper {\n+        public static final String ANIMAL = \"animal\";\n+        private Animal animal;\n+\n+        @JsonCreator\n+        public AnimalWrapper(@JsonProperty(ANIMAL) Animal animal) {\n+            this.animal = animal;\n+        }\n+\n+        @JsonProperty(ANIMAL)\n+        public Animal getAnimal() {\n+            return animal;\n+        }\n+    }\n+\n+    public void testSubtypes() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+\n+        String id = \"nice dogy\";\n+        String serializedDog = mapper.writeValueAsString(new AnimalWrapper(new Dog(id)));\n+        AnimalWrapper wrapper = mapper.readValue(serializedDog, AnimalWrapper.class);\n+        assertEquals(id, wrapper.getAnimal().getId());\n+    }\n+}", "timestamp": 1353357185, "metainfo": ""}