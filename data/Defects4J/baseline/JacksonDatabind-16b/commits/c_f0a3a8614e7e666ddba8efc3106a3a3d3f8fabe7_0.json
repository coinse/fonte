{"sha": "f0a3a8614e7e666ddba8efc3106a3a3d3f8fabe7", "log": "Start work on #596 to get in 2.5.0", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n     public PropertyName findWrapperName(Annotated ann) { return null; }\n \n     /**\n+     * Method for finding suggested default value (as simple textual serialization)\n+     * for the property. While core databind does not make any use of it, it is exposed\n+     * for extension modules to use: an expected use is generation of schema representations\n+     * and documentation.\n+     *\n+     * @since 2.5\n+     */\n+    public String findPropertyDefaultValue(Annotated ann) { return null; }\n+\n+    /**\n      * Method used to check whether specified property member (accessor\n      * or mutator) defines human-readable description to use for documentation.\n      * There are no further definitions for contents; for example, whether\n      * @since 2.4\n      */\n     public String findImplicitPropertyName(AnnotatedMember member) { return null; }\n-    \n+\n     /*\n     /**********************************************************\n     /* Serialization: general annotations\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n         }\n         return name;\n     }\n-    \n+\n+    @Override\n+    public String findPropertyDefaultValue(Annotated ann) {\n+        String str = _primary.findPropertyDefaultValue(ann);\n+        return (str == null || str.isEmpty()) ? _secondary.findPropertyDefaultValue(ann) : str;\n+    }\n+\n     @Override\n     public String findPropertyDescription(Annotated ann) {\n         String r = _primary.findPropertyDescription(ann);\n         Integer r = _primary.findPropertyIndex(ann);\n         return (r == null) ? _secondary.findPropertyIndex(ann) : r;\n     }\n-    \n+\n     @Override\n     public String findImplicitPropertyName(AnnotatedMember param) {\n         String r = _primary.findImplicitPropertyName(param);\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n     public JsonFormat.Value findFormat(Annotated ann) {\n         JsonFormat f = _findAnnotation(ann, JsonFormat.class);\n         return (f == null)  ? null : new JsonFormat.Value(f);\n+    }\n+\n+    @Override\n+    public String findPropertyDefaultValue(Annotated ann) {\n+        JsonProperty prop = _findAnnotation(ann, JsonProperty.class);\n+        return (prop == null) ? null : prop.defaultValue();\n     }\n \n     @Override\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestFieldDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestFieldDeserialization.java\n         @JsonProperty(\"x\")\n         protected int myX = 10;\n \n-        @SuppressWarnings(\"hiding\")\n         public int y = 11;\n     }\n     \n--- a/src/test/java/com/fasterxml/jackson/databind/interop/TestJDKProxy.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/interop/TestJDKProxy.java\n \n     public static <T> T getProxy(Class<T> type, Object obj) {\n         class ProxyUtil implements InvocationHandler {\n-            @SuppressWarnings(\"hiding\")\n-            Object obj;\n+            Object _obj;\n             public ProxyUtil(Object o) {\n-                obj = o;\n+                _obj = o;\n             }\n             @Override\n             public Object invoke(Object proxy, Method m, Object[] args) throws Throwable {\n                 Object result = null;\n-                result = m.invoke(obj, args);\n+                result = m.invoke(_obj, args);\n                 return result;\n             }\n         }\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPOJOPropertiesCollector.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPOJOPropertiesCollector.java\n         assertNotNull(beanDesc);\n     }\n \n-    @SuppressWarnings(\"hiding\")\n     public void testJackson703() throws Exception\n     {\n     \t// note: need a separate mapper, need to reconfigure", "timestamp": 1419385778, "metainfo": ""}