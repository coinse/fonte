{"sha": "abbcd0a6d88aae461166117d1331171ae3a41928", "log": "Remove accidental System.err.println()s from unit tests", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/contextual/TestContextAttributeWithDeser.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/contextual/TestContextAttributeWithDeser.java\n \n         // as above, should not carry on state\n         TestPOJO pojo2 = MAPPER.reader(TestPOJO.class)\n-                .withAttribute(KEY, Integer.valueOf(3))\n+                .withAttribute(KEY, Integer.valueOf(5))\n                 .readValue(INPUT);\n-        assertEquals(\"x/3\", pojo2.value);\n+        assertEquals(\"x/5\", pojo2.value);\n     }\n \n     public void testHierarchic() throws Exception\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForObject.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForObject.java\n                 \".hype\");\n         // note: need to wrap, to get declared as Object\n         String json = m.writeValueAsString(new StringBean(\"abc\"));\n-\n-        System.err.println(\"JSON == \"+json);\n         \n         // Ok: serialization seems to work as expected. Now deserialize:\n         Object result = m.readValue(json, Object.class);\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestGenericListSerialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestGenericListSerialization.java\n     public void testSubTypesFor356() throws Exception\n     {\n         ObjectMapper mapper = new ObjectMapper();\n-        /* 06-Sep-2010, tatus: This was not fixed for 1.6; and to keep junit test\n-         *   suite green, let's not run it for versions prior to 1.7...\n-         */\n-        Version v = mapper.version();\n-        if (v.getMajorVersion() == 1 && v.getMinorVersion() == 6) {\n-            System.err.println(\"Note: skipping test for Jackson 1.6\");\n-            return;\n-        }\n         \n         JSONResponse<List<Parent>> input = new JSONResponse<List<Parent>>();\n \n \n         JavaType rootType = TypeFactory.defaultInstance().constructType(new TypeReference<JSONResponse<List<Parent>>>() { });\n         byte[] json = mapper.writerWithType(rootType).writeValueAsBytes(input);\n-//        byte[] json = mapper.writeValueAsBytes(input);\n-\n-//        System.out.println(\"After Serialization: \" + new String(json));\n         \n         JSONResponse<List<Parent>> out = mapper.readValue(json, 0, json.length, rootType);\n \n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestBeanSerializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestBeanSerializer.java\n         public List<BeanPropertyWriter> changeProperties(SerializationConfig config,\n                 BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties)\n         {\n-            System.err.println(\"DEBUG: changeProperties!\");\n             return beanProperties;\n         }\n         \n         @Override\n         public JsonSerializer<?> modifySerializer(SerializationConfig config,\n                 BeanDescription beanDesc, JsonSerializer<?> serializer) {\n-System.err.println(\"DEBUG: modifySer!\");            \n             return new BogusBeanSerializer(42);\n         }\n     }", "timestamp": 1413310622, "metainfo": ""}