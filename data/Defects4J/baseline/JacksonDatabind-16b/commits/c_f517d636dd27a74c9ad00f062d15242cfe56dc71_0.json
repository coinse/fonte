{"sha": "f517d636dd27a74c9ad00f062d15242cfe56dc71", "log": "Merge pull request #766 from agilbert314/2.5  Fix Infinite recursion (StackOverflowError) when serializing a SOAP object.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java\n         String className = rawType.getName();\n         String factoryName;\n         \n-        if (className.startsWith(PACKAGE_PREFIX_JAVAX_XML)\n-                || hasSupertypeStartingWith(rawType, PACKAGE_PREFIX_JAVAX_XML)) {\n+        if (doesImplement(rawType, CLASS_NAME_DOM_NODE)) {\n+            return (JsonSerializer<?>) instantiate(SERIALIZER_FOR_DOM_NODE);\n+        }\n+        if (className.startsWith(PACKAGE_PREFIX_JAVAX_XML) || hasSupertypeStartingWith(rawType, PACKAGE_PREFIX_JAVAX_XML)) {\n             factoryName = SERIALIZERS_FOR_JAVAX_XML;\n-        } else if (doesImplement(rawType, CLASS_NAME_DOM_NODE)) {\n-            return (JsonSerializer<?>) instantiate(SERIALIZER_FOR_DOM_NODE);\n         } else {\n             return null;\n         }\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/ext/TestSOAP.java\n+package com.fasterxml.jackson.databind.ext;\n+\n+import javax.xml.soap.Detail;\n+import javax.xml.soap.SOAPException;\n+import javax.xml.soap.SOAPFactory;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+public class TestSOAP extends com.fasterxml.jackson.databind.BaseMapTest {\n+\n+    public void testSerializeSOAP() throws SOAPException, JsonProcessingException {\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        SOAPFactory fac = SOAPFactory.newInstance();\n+        Detail detailElement = fac.createDetail();\n+        detailElement.setTextContent(\"test\");\n+        String result = objectMapper.writer().writeValueAsString(detailElement);\n+        assertNotNull(result);\n+    }\n+}", "timestamp": 1429737483, "metainfo": ""}