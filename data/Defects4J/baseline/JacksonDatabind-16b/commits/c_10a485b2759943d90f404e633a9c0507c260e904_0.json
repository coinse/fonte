{"sha": "10a485b2759943d90f404e633a9c0507c260e904", "log": "Add notes wrt 2.6 changes for future reference", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n                 handleUnknownVanilla(p, ctxt, bean, propName);\n             }\n         }\n+        \n+        // 13-Dec-2014, tatu: For 2.6, we'll do:\n+        /*\n+        if (p.hasTokenId(JsonTokenId.ID_FIELD_NAME)) {\n+            String propName = p.getCurrentName();\n+            do {\n+                p.nextToken();\n+                if (!_beanProperties.findDeserializeAndSet(p, ctxt, bean, propName)) {\n+                    handleUnknownVanilla(p, ctxt, bean, propName);\n+                }\n+            } while ((propName = p.nextFieldName()) != null);\n+        }\n+        */\n+        \n         return bean;\n     }\n \n                 handleUnknownVanilla(p, ctxt, bean, propName);\n             }\n         }\n+        // 13-Dec-2014, tatu: For 2.6, we'll do:\n+        /*\n+        if (p.hasTokenId(JsonTokenId.ID_FIELD_NAME)) {\n+            String propName = p.getCurrentName();\n+            do {\n+                p.nextToken();\n+                if (!_beanProperties.findDeserializeAndSet(p, ctxt, bean, propName)) {\n+                    handleUnknownVanilla(p, ctxt, bean, propName);\n+                }\n+            } while ((propName = p.nextFieldName()) != null);\n+        }\n+        */\n         return bean;\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java\n     public void deserializeAndSet(JsonParser jp,\n     \t\tDeserializationContext ctxt, Object instance) throws IOException\n     {\n-        \n         Object value = deserialize(jp, ctxt);\n         try {\n             _field.set(instance, value);", "timestamp": 1418531223, "metainfo": ""}