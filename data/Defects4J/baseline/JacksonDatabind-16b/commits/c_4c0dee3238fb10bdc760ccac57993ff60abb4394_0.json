{"sha": "4c0dee3238fb10bdc760ccac57993ff60abb4394", "log": "add a test for key serializers", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestKeySerializers.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestKeySerializers.java\n import java.util.*;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n+\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n \n public class TestKeySerializers extends BaseMapTest\n {\n         public Map<String,Integer> map = new HashMap<String,Integer>();\n         {\n             map.put(\"Not Karl\", 1);\n+        }\n+    }\n+\n+    enum ABC {\n+        A, B, C\n+    }\n+\n+    static class ABCSerializer extends JsonSerializer<ABC> {\n+        @Override\n+        public void serialize(ABC value, JsonGenerator jgen,\n+                SerializerProvider provider) throws IOException {\n+            jgen.writeFieldName(\"xxx\"+value);\n+        }\n+    }\n+\n+    static class ABCMapWrapper {\n+        public Map<ABC,String> stuff = new HashMap<ABC,String>();\n+        public ABCMapWrapper() {\n+            stuff.put(ABC.B, \"bar\");\n         }\n     }\n \n         final String value2 = mapper.writeValueAsString(new KarlBean());\n         assertEquals(\"{\\\"map\\\":{\\\"Karl\\\":1}}\", value2);\n     }\n+\n+    // Test custom key serializer for enum\n+    public void testCustomForEnum() throws IOException\n+    {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        SimpleModule mod = new SimpleModule(\"test\");\n+        mod.addKeySerializer(ABC.class, new ABCSerializer());\n+        mapper.registerModule(mod);\n+\n+        String json = mapper.writeValueAsString(new ABCMapWrapper());\n+        assertEquals(\"{\\\"stuff\\\":{\\\"xxxB\\\":\\\"bar\\\"}}\", json);\n+    }\n }", "timestamp": 1415231719, "metainfo": ""}