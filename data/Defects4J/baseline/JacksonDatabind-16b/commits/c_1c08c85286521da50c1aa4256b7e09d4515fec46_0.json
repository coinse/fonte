{"sha": "1c08c85286521da50c1aa4256b7e09d4515fec46", "log": "Merge pull request #162 from fge/master  JsonNodeFactory: work around an old bug with BigDecimal and zero", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/node/DecimalNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/DecimalNode.java\n public final class DecimalNode\n     extends NumericNode\n {\n+    public static final DecimalNode ZERO = new DecimalNode(BigDecimal.ZERO);\n+\n     private final static BigDecimal MIN_INTEGER = BigDecimal.valueOf(Integer.MIN_VALUE);\n     private final static BigDecimal MAX_INTEGER = BigDecimal.valueOf(Integer.MAX_VALUE);\n     private final static BigDecimal MIN_LONG = BigDecimal.valueOf(Long.MIN_VALUE);\n--- a/src/main/java/com/fasterxml/jackson/databind/node/JsonNodeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/JsonNodeFactory.java\n      */\n     public NumericNode numberNode(BigDecimal v)\n     {\n-        return DecimalNode.valueOf(_cfgBigDecimalExact ? v : v.stripTrailingZeros());\n+        /*\n+         * If the user wants the exact representation of this big decimal,\n+         * return the value directly\n+         */\n+        if (_cfgBigDecimalExact)\n+            return DecimalNode.valueOf(v);\n+\n+        /*\n+         * If the user has asked to strip trailing zeroes, however, there is\n+         * this bug to account for:\n+         *\n+         * http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6480539\n+         *\n+         * In short: zeroes are never stripped out of 0! We therefore _have_\n+         * to compare with BigDecimal.ZERO...\n+         */\n+        return v.compareTo(BigDecimal.ZERO) == 0 ? DecimalNode.ZERO\n+            : DecimalNode.valueOf(v.stripTrailingZeros());\n     }\n \n     /*", "timestamp": 1360350303, "metainfo": ""}