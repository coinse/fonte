{"sha": "cde54a0395eb3917193101a8127bdfca1dd6ba9c", "log": "trying to ensure array handling works even for 'implied' arrays (xml, soon csv)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanAsArrayBuilderDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanAsArrayBuilderDeserializer.java\n         throws IOException, JsonProcessingException\n     {\n         // Let's delegate just in case we got a JSON Object (could error out, alternatively?)\n-        if (jp.getCurrentToken() != JsonToken.START_ARRAY) {\n+        if (!jp.isExpectedStartArrayToken()) {\n             return finishBuild(ctxt, _deserializeFromNonArray(jp, ctxt));\n         }\n         if (!_vanillaProcessing) {\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanAsArrayDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanAsArrayDeserializer.java\n         throws IOException, JsonProcessingException\n     {\n         // Let's delegate just in case we got a JSON Object (could error out, alternatively?)\n-        if (jp.getCurrentToken() != JsonToken.START_ARRAY) {\n+        if (!jp.isExpectedStartArrayToken()) {\n             return _deserializeFromNonArray(jp, ctxt);\n         }\n         if (!_vanillaProcessing) {\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n             }\n             throw ctxt.weirdStringException(text, _valueClass, \"only \\\"true\\\" or \\\"false\\\" recognized\");\n         }\n-        // Issue#381\n+        // [databind#381]\n         if (t == JsonToken.START_ARRAY && ctxt.isEnabled(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS)) {\n             jp.nextToken();\n             final boolean parsed = _parseBooleanPrimitive(jp, ctxt);", "timestamp": 1416548128, "metainfo": ""}