{"sha": "c94ec608e8f0df4b5136ef6f2fc7af34143478fb", "log": "Unit test refactoring: move failing #749 tests under failing; need further work to solve, not an easy fix", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n \n     public EnumSerializer(EnumValues v, Boolean serializeAsIndex)\n     {\n-        super(Enum.class, false);\n+        super(v.getEnumClass(), false);\n         _values = v;\n         _serializeAsIndex = serializeAsIndex;\n     }\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n         String json = mapper.writeValueAsString(new MyBean661(\"abc\"));\n         assertEquals(aposToQuotes(\"{'X-FOO':'abc'}\"), json);\n     }\n-\n-    // [databind#749]\n-\n-    public void testEnumMapSerDefault() throws Exception {\n-        final ObjectMapper mapper = new ObjectMapper();\n-        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n-        m.put(LowerCaseEnum.A, \"value\");\n-        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", mapper.writeValueAsString(m));\n-    }\n-    \n-    public void testEnumMapSerDisableToString() throws Exception {\n-        final ObjectMapper mapper = new ObjectMapper();\n-        ObjectWriter w = mapper.writer().without(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n-        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n-        m.put(LowerCaseEnum.A, \"value\");\n-        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n-    }\n-    \n-    public void testEnumMapSerEnableToString() throws Exception {\n-        final ObjectMapper mapper = new ObjectMapper();\n-        ObjectWriter w = mapper.writer().with(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n-        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n-        m.put(LowerCaseEnum.A, \"value\");\n-        assertEquals(\"{\\\"a\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n-    }\n }\n \n // [JACKSON-757], non-inner enum\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/EnumMap749Test.java\n+package com.fasterxml.jackson.failing;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+/**\n+ * Failing tests for [databind#749]: problems using (or not) of `toString()` for Enum keys\n+ * of EnumMap, EnumSet.\n+ */\n+public class EnumMap749Test\n+    extends BaseMapTest\n+{\n+    protected static enum LC749Enum {\n+        A, B, C;\n+        private LC749Enum() { }\n+        @Override\n+        public String toString() { return name().toLowerCase(); }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Tests\n+    /**********************************************************\n+     */\n+\n+    // [databind#749]\n+\n+    public void testEnumMapSerDefault() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        EnumMap<LC749Enum, String> m = new EnumMap<LC749Enum, String>(LC749Enum.class);\n+        m.put(LC749Enum.A, \"value\");\n+        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", mapper.writeValueAsString(m));\n+    }\n+    \n+    public void testEnumMapSerDisableToString() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        ObjectWriter w = mapper.writer().without(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n+        EnumMap<LC749Enum, String> m = new EnumMap<LC749Enum, String>(LC749Enum.class);\n+        m.put(LC749Enum.A, \"value\");\n+        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n+    }\n+    \n+    public void testEnumMapSerEnableToString() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        ObjectWriter w = mapper.writer().with(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n+        EnumMap<LC749Enum, String> m = new EnumMap<LC749Enum, String>(LC749Enum.class);\n+        m.put(LC749Enum.A, \"value\");\n+        assertEquals(\"{\\\"a\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n+    }\n+}", "timestamp": 1428528124, "metainfo": ""}