{"sha": "8ad49f2edcdf0526dcfb0fb5a7f63b903b36c58f", "log": "prepare for 2.1.0 release", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestArrayDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestArrayDeserialization.java\n             value = v;\n         }\n     }\n+\n+    static class Product { \n+        public String name; \n+        public List<Things> thelist; \n+    }\n+\n+    static class Things {\n+        public String height;\n+        public String width;\n+    }\n     \n     /*\n     /**********************************************************\n         }\n     }\n \n-    // [JACKSON-620]: allow \"\" to mean 'null' for Maps\n+    // [JACKSON-620]: allow \"\" to mean 'null' for Arrays, List and Maps\n     public void testFromEmptyString() throws Exception\n     {\n         ObjectMapper m = new ObjectMapper();\n         assertNull(m.readValue(quote(\"\"), Object[].class));\n         assertNull( m.readValue(quote(\"\"), String[].class));\n         assertNull( m.readValue(quote(\"\"), int[].class));\n+    }\n+\n+    // [JACKSON-620]: allow \"\" to mean 'null' for Arrays, List and Maps\n+    public void testFromEmptyString2() throws Exception\n+    {\n+        ObjectMapper m = new ObjectMapper();\n+        m.configure(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, true);\n+        m.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);\n+        Product p = m.readValue(\"{\\\"thelist\\\":\\\"\\\"}\", Product.class);\n+        assertNotNull(p);\n+        assertNull(p.thelist);\n     }\n     \n     /*", "timestamp": 1349826835, "metainfo": ""}