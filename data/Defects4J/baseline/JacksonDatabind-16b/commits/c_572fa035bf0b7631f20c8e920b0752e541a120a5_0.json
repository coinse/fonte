{"sha": "572fa035bf0b7631f20c8e920b0752e541a120a5", "log": "Minor fix to avoid error if marking nominal serialization type as Object.class", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectWriter.java\n         _serializerProvider = mapper._serializerProvider;\n         _serializerFactory = mapper._serializerFactory;\n         _generatorFactory = mapper._jsonFactory;\n-\n-        if (rootType != null) {\n-            rootType = rootType.withStaticTyping();\n-        }\n-        _rootType = rootType;\n         _prettyPrinter = pp;\n         _schema = null;\n         _characterEscapes = null;\n \n-        _rootSerializer = _prefetchRootSerializer(config, rootType);\n+        // 29-Apr-2014, tatu: There is no \"untyped serializer\", so:\n+        if (rootType == null || rootType.hasRawClass(Object.class)) {\n+            _rootType = null;\n+            _rootSerializer = null;\n+        } else {\n+            _rootType = rootType.withStaticTyping();\n+            _rootSerializer = _prefetchRootSerializer(config, _rootType);\n+        }\n     }\n \n     /**\n      * Note that method does NOT change state of this reader, but\n      * rather construct and returns a newly configured instance.\n      */\n-    public ObjectWriter withType(JavaType rootType) {\n-        // 15-Mar-2013, tatu: Important! Indicate that static typing is needed:\n-        rootType = rootType.withStaticTyping();\n-        JsonSerializer<Object> rootSer = _prefetchRootSerializer(_config, rootType);\n+    public ObjectWriter withType(JavaType rootType)\n+    {\n+        JsonSerializer<Object> rootSer;\n+        if (rootType == null || rootType.hasRawClass(Object.class)) {\n+            rootType = null;\n+            rootSer = null;\n+        } else {\n+            // 15-Mar-2013, tatu: Important! Indicate that static typing is needed:\n+            rootType = rootType.withStaticTyping();\n+            rootSer = _prefetchRootSerializer(_config, rootType);\n+        }\n         return new ObjectWriter(this, _config, rootType, rootSer,\n                 _prettyPrinter, _schema, _characterEscapes);\n     }    \n      * type of the root object itself.\n      */\n     public ObjectWriter withType(Class<?> rootType) {\n+        if (rootType == Object.class) {\n+            return withType((JavaType) null);\n+        }\n         return withType(_config.constructType(rootType));\n     }\n ", "timestamp": 1398825922, "metainfo": ""}