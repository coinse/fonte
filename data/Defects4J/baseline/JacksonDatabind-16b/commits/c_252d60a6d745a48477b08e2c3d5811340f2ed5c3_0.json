{"sha": "252d60a6d745a48477b08e2c3d5811340f2ed5c3", "log": "...", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestCollectionSerialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestCollectionSerialization.java\n         public Iterable<String> getValues() { return values; }\n     }\n \n+    static class IntIterable implements Iterable<Integer>\n+    {\n+        public Iterator<Integer> iterator() {\n+            return new IntIterator(1, 3);\n+        }\n+    }\n+\n+    static class IntIterator implements Iterator<Integer> {\n+        int i;\n+        final int last;\n+\n+        public IntIterator(int first, int last) {\n+            i = first;\n+            this.last = last;\n+        }\n+\n+        public boolean hasNext() {\n+            return i <= last;\n+        }\n+\n+        public Integer next() {\n+            return i++;\n+        }\n+\n+        public void remove() {\n+        }\n+\n+        public int getX() { return 13; }\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Test methods\n         assertEquals(\"{}\", m.writeValueAsString(array));\n     }\n     \n-    // [JACKSON-689]\n+    // [JACKSON-689], [JACKSON-876]\n     public void testWithIterable() throws IOException\n     {\n+        // 689:\n         assertEquals(\"{\\\"values\\\":[\\\"value\\\"]}\",\n                 MAPPER.writeValueAsString(new BeanWithIterable()));\n+        // 876:\n+        assertEquals(\"[1,2,3]\",\n+                MAPPER.writeValueAsString(new IntIterable()));\n     }\n }", "timestamp": 1352411410, "metainfo": ""}