{"sha": "3bde5becd2bbd07fe678314da7ebbd93aedb95c6", "log": "Fixing issue 157", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/util/ArrayBuilders.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/ArrayBuilders.java\n                 // otherwise move things around\n                 T[] result = (T[]) Array.newInstance(array.getClass().getComponentType(), len);\n                 System.arraycopy(array, 0, result, 1, ix);\n-                array[0] = element;\n+                result[0] = element;\n+                ++ix;\n+                int left = len - ix;\n+                if (left > 0) {\n+                \tSystem.arraycopy(array, ix, result, ix, left);\n+                }\n                 return result;\n             }\n         }\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/util/ArrayBuildersTest.java\n+package com.fasterxml.jackson.databind.util;\n+\n+import org.junit.Assert;\n+\n+import com.fasterxml.jackson.databind.BaseMapTest;\n+\n+public class ArrayBuildersTest extends BaseMapTest\n+{\n+\t// Test for [Issue#157]\n+\tpublic void testInsertInListNoDup()\n+\t{\n+        String [] arr = new String[]{\"me\", \"you\", \"him\"};\n+        String [] newarr;\n+        \n+        newarr = ArrayBuilders.insertInListNoDup(arr, \"you\");\n+        Assert.assertArrayEquals(new String[]{\"you\", \"me\", \"him\"}, newarr);\n+\n+        newarr = ArrayBuilders.insertInListNoDup(arr, \"me\");\n+        Assert.assertArrayEquals(new String[]{\"me\", \"you\",\"him\"}, newarr);\n+\n+        newarr = ArrayBuilders.insertInListNoDup(arr, \"him\");\n+        Assert.assertArrayEquals(new String[]{\"him\", \"me\", \"you\"}, newarr);\n+\n+        newarr = ArrayBuilders.insertInListNoDup(arr, \"foobar\");\n+        Assert.assertArrayEquals(new String[]{\"foobar\", \"me\", \"you\", \"him\"}, newarr);\n+\t}\n+}", "timestamp": 1359746944, "metainfo": ""}