{"sha": "4759d530543ba24671bfa100f0ba3bc49722d360", "log": "benchmark improvements", "commit": "\n--- a/src/test/java/perf/ManualReadPerfUntyped.java\n+++ b/src/test/java/perf/ManualReadPerfUntyped.java\n package perf;\n+\n+import java.util.Map;\n \n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.databind.*;\n         f.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, doIntern);\n         \n         ObjectMapper m = new ObjectMapper();\n-        Object input1 = m.readValue(data, Object.class);\n+        \n+        // Either Object or Map\n+        final Class<?> UNTYPED = Map.class;\n+        \n+        Object input1 = m.readValue(data, UNTYPED);\n         JsonNode input2 = m.readTree(data);\n \n         new ManualReadPerfUntyped()\n //            .testFromBytes(\n             .testFromString(\n-                m, \"JSON-as-Object\", input1, Object.class\n-                ,m, \"JSON-as-Object2\", input2, Object.class\n+                m, \"JSON-as-Object\", input1, UNTYPED\n+                ,m, \"JSON-as-Object2\", input2, UNTYPED\n //               ,m, \"JSON-as-Node\", input2, JsonNode.class\n                 );\n     }\n--- a/src/test/java/perf/ObjectReaderBase.java\n+++ b/src/test/java/perf/ObjectReaderBase.java\n \n     private double[] timeMsecs;;\n     \n-    protected <T1, T2> void testFromBytes(ObjectMapper mapper1, String desc1,\n-            T1 inputValue1, Class<T1> inputClass1,\n+    protected void testFromBytes(ObjectMapper mapper1, String desc1,\n+            Object inputValue1, Class<?> inputClass1,\n             ObjectMapper mapper2, String desc2,\n-            T2 inputValue2, Class<T2> inputClass2)\n+            Object inputValue2, Class<?> inputClass2)\n         throws Exception\n     {\n         final byte[] byteInput1 = mapper1.writeValueAsBytes(inputValue1);\n         doTest(mapper1, byteInput1, inputClass1, mapper2, byteInput2, inputClass2);\n     }\n     \n-    protected <T1, T2> void testFromString(ObjectMapper mapper1, String desc1,\n-            T1 inputValue1, Class<T1> inputClass1,\n-            ObjectMapper mapper2, String desc2, T2 inputValue2, Class<T2> inputClass2)\n+    protected void testFromString(ObjectMapper mapper1, String desc1,\n+            Object inputValue1, Class<?> inputClass1,\n+            ObjectMapper mapper2, String desc2,\n+            Object inputValue2, Class<?> inputClass2)\n         throws Exception\n     {\n         final String input1 = mapper1.writeValueAsString(inputValue1);", "timestamp": 1398662167, "metainfo": ""}