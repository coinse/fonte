{"sha": "06cc19bc7bf762836d625c75e63ec336723a2d0b", "log": "Support for custom object id serialization by subclasses. Mainly to support FasterXML/jackson-dataformat-xml#81.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n import com.fasterxml.jackson.annotation.JsonFormat;\n import com.fasterxml.jackson.annotation.ObjectIdGenerator;\n import com.fasterxml.jackson.annotation.ObjectIdGenerators;\n-\n import com.fasterxml.jackson.core.*;\n-\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.introspect.Annotated;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n             w.serializer.serialize(id, jgen, provider);\n             return;\n         }\n+\n+        _serializeObjectId(bean, jgen, provider, typeSer, objectId);\n+    }\n+\n+    protected  void _serializeObjectId(Object bean,\n+            JsonGenerator jgen,SerializerProvider provider,\n+            TypeSerializer typeSer, WritableObjectId objectId)\n+        throws IOException, JsonProcessingException, JsonGenerationException {\n+        final ObjectIdWriter w = _objectIdWriter;\n         String typeStr = (_typeId == null) ? null :_customTypeId(bean);\n         if (typeStr == null) {\n             typeSer.writeTypePrefixForObject(bean, jgen);", "timestamp": 1390921678, "metainfo": ""}