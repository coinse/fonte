{"sha": "227b9994f6545db2e8e18fb7e813079ebb5eeedc", "log": "minor cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n import java.lang.reflect.*;\n \n import com.fasterxml.jackson.core.*;\n-import com.fasterxml.jackson.databind.BeanProperty;\n-import com.fasterxml.jackson.databind.DeserializationContext;\n-import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n-import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;\n \n /**\n  * !!! Note: might make sense to refactor to share some code\n  * with {@link SettableBeanProperty}?\n  */\n-public final class SettableAnyProperty\n+public class SettableAnyProperty\n+    implements java.io.Serializable\n {\n+    private static final long serialVersionUID = 1L;\n+    \n     /**\n      * Method used for setting \"any\" properties, along with annotation\n      * information. Retained to allow contextualization of any properties.\n     \n     /**\n      * Physical JDK object used for assigning properties.\n+     *<p>\n+     * NOTE: must be marked transient since it is not serializable,\n+     * in case these are to be serialized\n      */\n-    final protected Method _setter;\n+    protected final transient Method _setter;\n \n-    final protected JavaType _type;\n+    protected final JavaType _type;\n \n     protected JsonDeserializer<Object> _valueDeserializer;\n \n         set(instance, propName, deserialize(jp, ctxt));\n     }\n \n-    public final Object deserialize(JsonParser jp, DeserializationContext ctxt)\n+    public Object deserialize(JsonParser jp, DeserializationContext ctxt)\n         throws IOException, JsonProcessingException\n     {\n         JsonToken t = jp.getCurrentToken();\n         return _valueDeserializer.deserialize(jp, ctxt);\n     }\n \n-    public final void set(Object instance, String propName, Object value)\n+    public void set(Object instance, String propName, Object value)\n         throws IOException\n     {\n         try {\n     private String getClassName() { return _setter.getDeclaringClass().getName(); }\n \n     @Override public String toString() { return \"[any property on class \"+getClassName()+\"]\"; }\n+\n+    /*\n+    /**********************************************************\n+    /* JDK serialization handling\n+    /**********************************************************\n+     */\n+\n+    // TODO (2.3): handle restoring of reference to any-setter method\n+    \n+/*\n+    Object readResolve() {\n+        return new SettableAnyProperty(this, _annotated.getAnnotated());\n+    }\n+    */\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java\n {\n     private static final long serialVersionUID = 1L;\n \n+    final protected AnnotatedField _annotated;\n+\n     /**\n+     * Actual field to set when deserializing this property.\n      * Transient since there is no need to persist; only needed during\n      * construction of objects.\n      */\n-    protected final AnnotatedField _annotated;\n-\n-    /**\n-     * Actual field to set when deserializing this property.\n-     */\n-    protected final transient Field _field;\n+    final protected transient Field _field;\n     \n     public FieldProperty(BeanPropertyDefinition propDef, JavaType type,\n             TypeDeserializer typeDeser, Annotations contextAnnotations, AnnotatedField field)", "timestamp": 1383281699, "metainfo": ""}