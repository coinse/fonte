{"sha": "6599f9f78fdef6a422021a4370532376c0a263c4", "log": "Change String collections to use JsonParser.nextTextValue()", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java\n         Object[] chunk = buffer.resetAndStart();\n \n         int ix = 0;\n-        JsonToken t;\n \n         try {\n-            while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {\n-                // Ok: no need to convert Strings, but must recognize nulls\n-                String value;\n-                if (t == JsonToken.VALUE_STRING) {\n-                    value = jp.getText();\n-                } else if (t == JsonToken.VALUE_NULL) {\n-                    value = null; // since we have established that '_elementDeserializer == null' earlier\n-                } else {\n-                    value = _parseString(jp, ctxt);\n+            while (true) {\n+                String value = jp.nextTextValue();\n+                if (value == null) {\n+                    JsonToken t = jp.getCurrentToken();\n+                    if (t == JsonToken.END_ARRAY) {\n+                        break;\n+                    }\n+                    if (t != JsonToken.VALUE_NULL) {\n+                        value = _parseString(jp, ctxt);\n+                    }\n                 }\n                 if (ix >= chunk.length) {\n                     chunk = buffer.appendCompletedChunk(chunk);\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java\n         if (_valueDeserializer != null) {\n             return deserializeUsingCustom(jp, ctxt, result, _valueDeserializer);\n         }\n-        JsonToken t;\n-\n         try {\n-            while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {\n-                String value;\n-                if (t == JsonToken.VALUE_STRING) {\n-                    value = jp.getText();\n-                } else if (t == JsonToken.VALUE_NULL) {\n-                    value = null;\n-                } else {\n+            while (true) {\n+                // First the common case:\n+                String value = jp.nextTextValue();\n+                if (value != null) {\n+                    result.add(value);\n+                    continue;\n+                }\n+                JsonToken t = jp.getCurrentToken();\n+                if (t == JsonToken.END_ARRAY) {\n+                    break;\n+                }\n+                if (t != JsonToken.VALUE_NULL) {\n                     value = _parseString(jp, ctxt);\n                 }\n                 result.add(value);", "timestamp": 1419920066, "metainfo": ""}