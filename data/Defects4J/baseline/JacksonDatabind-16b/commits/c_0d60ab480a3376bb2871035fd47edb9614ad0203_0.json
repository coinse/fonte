{"sha": "0d60ab480a3376bb2871035fd47edb9614ad0203", "log": "Add one more unit test for `readValues()`, to ensure it's possible to read POJOs within root-level arrays", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.java\n         super(cls, false);\n     }\n \n+    @Deprecated // since 2.5\n     @Override\n     public boolean isEmpty(T value) {\n+        return isEmpty(null, value);\n+    }\n+\n+    @Override\n+    public boolean isEmpty(SerializerProvider provider, T value) {\n         return (value == null) || (value.size() == 0);\n     }\n     \n--- a/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/seq/ReadValuesTest.java\n         assertEquals(3, set.iterator().next().a);\n     }\n \n+    public void testRootBeansInArray() throws Exception\n+    {\n+        final String JSON = \"[{\\\"a\\\":6}, {\\\"a\\\":-7}]\";\n+\n+        MappingIterator<Bean> it = MAPPER.reader(Bean.class).readValues(JSON);\n+\n+        assertNotNull(it.getCurrentLocation());\n+        assertTrue(it.hasNext());\n+        Bean b = it.next();\n+        assertEquals(6, b.a);\n+        assertTrue(it.hasNext());\n+        b = it.next();\n+        assertEquals(-7, b.a);\n+        assertFalse(it.hasNext());\n+        it.close();\n+\n+        // Also, test 'readAll()'\n+        it = MAPPER.reader(Bean.class).readValues(JSON);\n+        List<Bean> all = it.readAll();\n+        assertEquals(2, all.size());\n+        it.close();\n+\n+        it = MAPPER.reader(Bean.class).readValues(\"[{\\\"a\\\":4},{\\\"a\\\":4}]\");\n+        Set<Bean> set = it.readAll(new HashSet<Bean>());\n+        assertEquals(HashSet.class, set.getClass());\n+        assertEquals(1, set.size());\n+        assertEquals(4, set.iterator().next().a);\n+    }\n+\n     public void testRootMaps() throws Exception\n     {\n         final String JSON = \"{\\\"a\\\":3}{\\\"a\\\":27}  \";\n         assertEquals(3, array[0]);\n         assertFalse(it.hasNext());\n     }\n-    \n+\n     public void testHasNextWithEndArray() throws Exception {\n         final String JSON = \"[1,3]\";\n         JsonParser jp = MAPPER.getFactory().createParser(JSON);\n         assertFalse(it.hasNext());\n         assertFalse(it.hasNext());\n     }\n-    \n+\n     public void testHasNextWithEndArrayManagedParser() throws Exception {\n         final String JSON = \"[1,3]\";\n \n         assertFalse(it.hasNext());\n         assertFalse(it.hasNext());\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Unit tests; non-root arrays", "timestamp": 1419902026, "metainfo": ""}