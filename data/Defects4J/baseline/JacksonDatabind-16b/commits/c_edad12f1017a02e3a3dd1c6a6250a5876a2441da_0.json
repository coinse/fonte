{"sha": "edad12f1017a02e3a3dd1c6a6250a5876a2441da", "log": "MapperFeatures are meant to be static (configure then use) in nature.  I should have followed the pattern from _defaultViewInclusion.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java\n      * Feature is disabled by default.\n      */\n     UNWRAP_ROOT_VALUE(false),\n-    \n-    /**\n-     * Feature that will allow for more forgiving deserialization of incoming JSON.\n-     * If enabled, the bean properties will be matched using their lower-case\n-     * equivalents.\n-     * <p>\n-     * Feature is disabled by default.\n-     */\n-    ACCEPT_CASE_INSENSITIVE_PROPERTIES(false),\n \n     /*\n     /******************************************************\n--- a/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java\n     /* Name-related features\n     /******************************************************\n      */\n-\n+    \n+    /**\n+     * Feature that will allow for more forgiving deserialization of incoming JSON.\n+     * If enabled, the bean properties will be matched using their lower-case\n+     * equivalents.\n+     * <p>\n+     * Feature is disabled by default.\n+     */\n+    ACCEPT_CASE_INSENSITIVE_PROPERTIES(false),\n+    \n     /**\n      * Feature that can be enabled to make property names be\n      * overridden by wrapper name (usually detected with annotations\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java\n     { \n         _beanDesc = beanDesc;\n         _defaultViewInclusion = config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION);\n-        _caseInsensitivePropertyComparison = config.isEnabled(DeserializationFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);\n+        _caseInsensitivePropertyComparison = config.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);\n     }\n \n     /**\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestBeanDeserializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestBeanDeserializer.java\n         \n         // first, verify default settings which do not accept improper case\n         ObjectMapper mapper = new ObjectMapper();\n-        assertFalse(mapper.isEnabled(DeserializationFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES));\n+        assertFalse(mapper.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES));\n         \n         try {\n             mapper.readValue(JSON, Issue476Bean.class);\n \n         // Definitely not OK to enable dynamically - the BeanPropertyMap (which is the consumer of this particular feature) gets cached.\n         mapper = new ObjectMapper();\n-        mapper.configure(DeserializationFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+        mapper.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n         ObjectReader r = mapper.reader(Issue476Bean.class);\n         Issue476Bean result = r.readValue(JSON);\n         assertEquals(result.value1.name, \"fruit\");", "timestamp": 1412102535, "metainfo": ""}