{"sha": "ae2cf4c09d9060c63cb99a6ff8981254b5f732ea", "log": "bit more unit testing", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.introspect.Annotated;\n+import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n \n public class TestPOJOAsArray extends BaseMapTest\n {\n         }\n     }\n \n+    static class ForceArraysIntrospector extends JacksonAnnotationIntrospector\n+    {\n+        public JsonFormat.Value findFormat(Annotated a) {\n+            return new JsonFormat.Value().withShape(JsonFormat.Shape.ARRAY);\n+        }\n+    }\n+\n+    static class A {\n+        public B value = new B();\n+    }\n+    \n+    @JsonPropertyOrder(alphabetic=true)\n+    static class B {\n+        public int x = 1;\n+        public int y = 2;\n+    }\n+    \n     /*\n     /*****************************************************\n     /* Basic tests\n     /*****************************************************\n      */\n \n+    public void testAnnotationOverride() throws Exception\n+    {\n+        // by default, POJOs become JSON Objects;\n+        assertEquals(\"{\\\"value\\\":{\\\"x\\\":1,\\\"y\\\":2}}\", MAPPER.writeValueAsString(new A()));\n+\n+        // but override should change it:\n+        ObjectMapper mapper2 = new ObjectMapper();\n+        mapper2.setAnnotationIntrospector(new ForceArraysIntrospector());\n+        assertEquals(\"[[1,2]]\", mapper2.writeValueAsString(new A()));\n+    }\n }", "timestamp": 1342829778, "metainfo": ""}