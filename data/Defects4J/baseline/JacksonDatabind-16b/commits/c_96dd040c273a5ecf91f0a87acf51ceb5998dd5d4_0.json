{"sha": "96dd040c273a5ecf91f0a87acf51ceb5998dd5d4", "log": "Merge branch 'master' of github.com:FasterXML/jackson-databind", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializationProblemHandler.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializationProblemHandler.java\n      * Content (supposedly) matching the property are accessible via\n      * parser that can be obtained from passed deserialization context.\n      * Handler can also choose to skip the content; if so, it MUST return\n-     * true to indicate it did handle property succesfully.\n+     * true to indicate it did handle property successfully.\n      * Skipping is usually done like so:\n      *<pre>\n-     *  ctxt.getParser().skipChildren();\n+     *  jp.skipChildren();\n      *</pre>\n      *<p>\n      * Note: version 1.2 added new deserialization feature\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n \n     public SettableBeanProperty find(String key)\n     {\n+        if (key == null) {\n+            throw new IllegalArgumentException(\"Can not pass null property name\");\n+        }\n         int index = key.hashCode() & _hashMask;\n         Bucket bucket = _buckets[index];\n         // Let's unroll first lookup since that is null or match in 90+% cases\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n     protected final static SimpleType CORE_TYPE_BOOL = new SimpleType(Boolean.TYPE);\n     protected final static SimpleType CORE_TYPE_INT = new SimpleType(Integer.TYPE);\n     protected final static SimpleType CORE_TYPE_LONG = new SimpleType(Long.TYPE);\n-    \n+\n     /**\n      * Since type resolution can be expensive (specifically when resolving\n      * actual generic types), we will use small cache to avoid repetitive\n--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n         }\n     }\n \n+    @Override\n     protected void _reportUnsupportedOperation() {\n         throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");\n     }", "timestamp": 1386045685, "metainfo": ""}