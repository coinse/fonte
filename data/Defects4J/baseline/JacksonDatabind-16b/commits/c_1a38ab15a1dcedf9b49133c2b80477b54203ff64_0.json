{"sha": "1a38ab15a1dcedf9b49133c2b80477b54203ff64", "log": "starting to work on fixing an unwrapping issue", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java\n         _valueInstantiator = src._valueInstantiator;\n         _delegateDeserializer = src._delegateDeserializer;\n         _propertyBasedCreator = src._propertyBasedCreator;\n-        \n+\n         _backRefs = src._backRefs;\n         _ignorableProps = src._ignorableProps;\n         _ignoreAllUnknown = (unwrapper != null) || src._ignoreAllUnknown;\n         _objectIdReader = src._objectIdReader;\n \n         _nonStandardCreation = src._nonStandardCreation;\n-        _unwrappedPropertyHandler = src._unwrappedPropertyHandler;\n-\n+        UnwrappedPropertyHandler uph = src._unwrappedPropertyHandler;\n+        \n         if (unwrapper != null) {\n             // delegate further unwraps, if any\n-            if (_unwrappedPropertyHandler != null) { // got handler, delegate\n-                _unwrappedPropertyHandler.renameAll(unwrapper);\n+            if (uph != null) { // got handler, delegate\n+                uph = uph.renameAll(unwrapper);\n             }\n             // and handle direct unwrapping as well:\n             _beanProperties = src._beanProperties.renameAll(unwrapper);\n         } else {\n             _beanProperties = src._beanProperties;\n         }\n+        _unwrappedPropertyHandler = uph;\n         _needViewProcesing = src._needViewProcesing;\n         _serializationShape = src._serializationShape;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/UnwrappedPropertyHandler.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/UnwrappedPropertyHandler.java\n         _properties.add(property);\n     }\n \n-    public void renameAll(NameTransformer transformer)\n+    public UnwrappedPropertyHandler renameAll(NameTransformer transformer)\n     {\n         ArrayList<SettableBeanProperty> oldProps = new ArrayList<SettableBeanProperty>(_properties);\n         Iterator<SettableBeanProperty> it = oldProps.iterator();\n         _properties.clear();\n+\n         while (it.hasNext()) {\n             SettableBeanProperty prop = it.next();\n             String newName = transformer.transform(prop.getName());\n             }\n             _properties.add(prop);\n         }\n+        return this;\n     }\n     \n     public Object processUnwrapped(JsonParser originalParser, DeserializationContext ctxt, Object bean,\n--- a/src/test/java/com/fasterxml/jackson/failing/TestUnwrappedWithPrefix.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestUnwrappedWithPrefix.java\n     }\n \n     static class Parent {\n-        @JsonUnwrapped(prefix=\"c1\")\n+        @JsonUnwrapped(prefix=\"c1.\")\n         public Child c1;\n-        @JsonUnwrapped(prefix=\"c2\")\n+        @JsonUnwrapped(prefix=\"c2.\")\n         public Child c2;\n       }\n \n     static class Child {\n-        @JsonUnwrapped(prefix=\"sc2\")\n+        @JsonUnwrapped(prefix=\"sc2.\")\n         public SubChild sc1;\n       }\n \n         input.c2.sc1.value = \"b\";\n \n         String json = MAPPER.writeValueAsString(input);\n-//System.out.println(\"JSON -> \"+json);\n+System.out.println(\"JSON -> \"+json);\n \n         Parent output = MAPPER.readValue(json, Parent.class);\n         assertNotNull(output.c1);", "timestamp": 1369540427, "metainfo": ""}