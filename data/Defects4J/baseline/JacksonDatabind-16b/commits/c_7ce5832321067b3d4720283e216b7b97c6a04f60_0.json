{"sha": "7ce5832321067b3d4720283e216b7b97c6a04f60", "log": "tiny stylistic cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java\n  * \n  * @see http://www.w3.org/TR/NOTE-datetime\n  */\n-public class ISO8601Utils {\n-\n+public class ISO8601Utils\n+{\n     /**\n      * ID to represent the 'GMT' string\n      */\n      */\n     private static final TimeZone TIMEZONE_GMT = TimeZone.getTimeZone(GMT_ID);\n \n-    /* ********************************************************* */\n-    /* Static factories */\n-    /* ********************************************************* */\n+    /*\n+    /**********************************************************\n+    /* Static factories\n+    /**********************************************************\n+     */\n \n     /**\n      * Accessor for static GMT timezone instance.\n         return TIMEZONE_GMT;\n     }\n \n-    /* ********************************************************* */\n-    /* Formatting */\n-    /* ********************************************************* */\n+    /*\n+    /**********************************************************\n+    /* Formatting\n+    /**********************************************************\n+     */\n \n     /**\n      * Format a date into 'yyyy-MM-ddThh:mm:ssZ' (GMT timezone, no milliseconds precision)\n         return formatted.toString();\n     }\n \n-    /* ********************************************************* */\n-    /* Parsing */\n-    /* ********************************************************* */\n+    /*\n+    /**********************************************************\n+    /* Parsing\n+    /**********************************************************\n+     */\n \n     /**\n      * Parse a date from ISO-8601 formatted string. It expects a format\n             // extract timezone\n             String timezoneId;\n             if (date.length() <= offset) {\n-                throw new IndexOutOfBoundsException(\"No time zone indicator \");\n+                throw new IllegalArgumentException(\"No time zone indicator\");\n             }\n             char timezoneIndicator = date.charAt(offset);\n             if (timezoneIndicator == '+' || timezoneIndicator == '-') {\n      * @return true if the expected character exist at the given offset\n      */\n     private static boolean checkOffset(String value, int offset, char expected) {\n-        return value.length() > offset ? (value.charAt(offset) == expected) : false;\n+        return (offset < value.length()) && (value.charAt(offset) == expected);\n     }\n \n     /**", "timestamp": 1411491892, "metainfo": ""}