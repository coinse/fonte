{"sha": "02f5f42e739c5c7b6ac80d3599aa941ba6752b95", "log": "minor improvement to Enum serialization; allow Shape.ARRAY as an alias for 'use number (index)'", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n         if (shape == Shape.STRING) {\n             return Boolean.FALSE;\n         }\n-        if (shape.isNumeric()) {\n+        // 01-Oct-2014, tatu: For convenience, consider \"as-array\" to also mean 'yes, use index')\n+        if (shape.isNumeric() || (shape == Shape.ARRAY)) {\n             return Boolean.TRUE;\n         }\n         throw new IllegalArgumentException(\"Unsupported serialization shape (\"+shape+\") for Enum \"+enumClass.getName()\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n         public OK text = OK.V1;\n     }\n     \n-    @JsonFormat(shape=JsonFormat.Shape.ARRAY) // not supported as of now\n-    static enum BrokenPoNum\n+    @JsonFormat(shape=JsonFormat.Shape.ARRAY) // alias for 'number', as of 2.5\n+    static enum PoAsArray\n     {\n         A, B;\n     }\n     public void testEnumAsIndexViaAnnotations() throws Exception {\n         assertEquals(\"{\\\"text\\\":0}\", mapper.writeValueAsString(new PoNUMContainer()));\n     }\n-    \n+\n+    // As of 2.5, use of Shape.ARRAY is legal alias for \"write as number\"\n     public void testEnumAsObjectBroken() throws Exception\n     {\n-        try {\n-            String json = mapper.writeValueAsString(BrokenPoNum.A);\n-            fail(\"Should not have succeeded, produced: \"+json);\n-        } catch (JsonMappingException e) {\n-            verifyException(e, \"Unsupported serialization shape\");\n-        }\n+        assertEquals(\"0\", mapper.writeValueAsString(PoAsArray.A));\n     }\n     \n     // [Issue#227]", "timestamp": 1412189866, "metainfo": ""}