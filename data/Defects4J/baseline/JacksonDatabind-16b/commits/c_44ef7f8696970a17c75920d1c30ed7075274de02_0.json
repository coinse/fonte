{"sha": "44ef7f8696970a17c75920d1c30ed7075274de02", "log": "some more unit test refactoring", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonSerialize.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonSerialize.java\n     /**********************************************************\n      */\n \n+    final ObjectMapper MAPPER = objectMapper();\n+    \n     @SuppressWarnings(\"unchecked\")\n     public void testSimpleValueDefinition() throws Exception\n     {\n-        ObjectMapper m = new ObjectMapper();\n-        Map<String,Object> result = writeAndMap(m, new WrapperClassForAs());\n+        Map<String,Object> result = writeAndMap(MAPPER, new WrapperClassForAs());\n         assertEquals(1, result.size());\n         Object ob = result.get(\"value\");\n         // Should see only \"x\", not \"y\"\n \n     public void testBrokenAnnotation() throws Exception\n     {\n-        ObjectMapper m = new ObjectMapper();\n         try {\n-            serializeAsString(m, new BrokenClass());\n+            serializeAsString(MAPPER, new BrokenClass());\n         } catch (Exception e) {\n             verifyException(e, \"not a super-type of\");\n         }\n     @SuppressWarnings(\"unchecked\")\n     public void testStaticTypingForClass() throws Exception\n     {\n-        ObjectMapper m = new ObjectMapper();\n-        Map<String,Object> result = writeAndMap(m, new WrapperClassForStaticTyping());\n+        Map<String,Object> result = writeAndMap(MAPPER, new WrapperClassForStaticTyping());\n         assertEquals(1, result.size());\n         Object ob = result.get(\"value\");\n         // Should see only \"x\", not \"y\"\n     @SuppressWarnings(\"unchecked\")\n     public void testMixedTypingForClass() throws Exception\n     {\n-        ObjectMapper m = new ObjectMapper();\n-        Map<String,Object> result = writeAndMap(m, new WrapperClassForStaticTyping2());\n+        Map<String,Object> result = writeAndMap(MAPPER, new WrapperClassForStaticTyping2());\n         assertEquals(2, result.size());\n \n         Object obStatic = result.get(\"staticValue\");\n         assertEquals(\"[{\\\"x\\\":3}]\", serializeAsString(m, array));\n     }\n \n-    public void testProblem294() throws Exception\n+    public void testIssue294() throws Exception\n     {\n         assertEquals(\"{\\\"id\\\":\\\"fooId\\\",\\\"bar\\\":\\\"barId\\\"}\",\n-                new ObjectMapper().writeValueAsString(new Foo294(\"fooId\", \"barId\")));\n-    }\n-    \n+                MAPPER.writeValueAsString(new Foo294(\"fooId\", \"barId\")));\n+    }\n }", "timestamp": 1381891337, "metainfo": ""}