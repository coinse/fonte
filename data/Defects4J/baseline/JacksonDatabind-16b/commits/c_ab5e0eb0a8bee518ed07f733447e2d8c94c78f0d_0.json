{"sha": "ab5e0eb0a8bee518ed07f733447e2d8c94c78f0d", "log": "Fix a problem with unwrapping serialization; was not working for final classes", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanPropertyWriter.java\n {\n     protected final NameTransformer _unwrapper;\n     \n+    /*\n+    /**********************************************************\n+    /* Life-cycle\n+    /**********************************************************\n+     */\n+    \n     public UnwrappingBeanPropertyWriter(BeanPropertyWriter base, NameTransformer unwrapper) {\n         super(base);\n         _unwrapper = unwrapper;\n         }\n         return new UnwrappingBeanPropertyWriter(this, new SerializedString(newName));\n     }\n+\n+    /*\n+    /**********************************************************\n+    /* Overrides\n+    /**********************************************************\n+     */\n     \n     @Override\n     public void serializeAsField(Object bean, JsonGenerator jgen, SerializerProvider prov)\n \n     // need to override as we must get unwrapping instance...\n     @Override\n+    public void assignSerializer(JsonSerializer<Object> ser)\n+    {\n+        super.assignSerializer(ser);\n+        if (_serializer != null) {\n+            _serializer = _serializer.unwrappingSerializer(_unwrapper);\n+        }\n+    }\n+    \n+    // need to override as we must get unwrapping instance...\n+    @Override\n     protected JsonSerializer<Object> _findAndAddDynamic(PropertySerializerMap map,\n             Class<?> type, SerializerProvider provider) throws JsonMappingException\n     {\n         } else {\n             serializer = provider.findValueSerializer(type, this);\n         }\n-        if (!serializer.isUnwrappingSerializer()) {\n-            serializer = serializer.unwrappingSerializer(_unwrapper);\n-        }\n+        serializer = serializer.unwrappingSerializer(_unwrapper);\n         _dynamicSerializers = _dynamicSerializers.newWith(type, serializer);\n         return serializer;\n     }", "timestamp": 1327358570, "metainfo": ""}