{"sha": "43603cc1d5617553697539a8219ed674dee1b9bc", "log": "Merging #409 from 2.3", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n         annotatedSerializer = prov.handlePrimaryContextualization(annotatedSerializer, property);\n         // And how about polymorphic typing? First special to cover JAXB per-field settings:\n         TypeSerializer contentTypeSer = null;\n-        if (ClassUtil.isCollectionMapOrArray(type.getRawClass())) {\n+        // 16-Feb-2014, cgc: contentType serializers for collection-like and map-like types\n+        if (ClassUtil.isCollectionMapOrArray(type.getRawClass()) || type.isCollectionLikeType() || type.isMapLikeType()) {\n             contentTypeSer = findPropertyContentTypeSerializer(type, prov.getConfig(), accessor);\n         }\n         // and if not JAXB collection/array with annotations, maybe regular type info?", "timestamp": 1392660055, "metainfo": ""}