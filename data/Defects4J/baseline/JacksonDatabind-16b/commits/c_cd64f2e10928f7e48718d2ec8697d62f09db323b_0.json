{"sha": "cd64f2e10928f7e48718d2ec8697d62f09db323b", "log": "Test cases showing bug with MappingIterator#hasNext when json is wrapped with an array.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java\n         array = it.next();\n         assertEquals(1, array.length);\n         assertEquals(3, array[0]);\n+        assertFalse(it.hasNext());\n+    }\n+    \n+    public void testHasNextWithEndArray() throws Exception {\n+        final String JSON = \"[1,3]\";\n+        JsonParser jp = MAPPER.getFactory().createJsonParser(JSON);\n+\n+        // NOTE: We must point JsonParser to the first element; if we tried to\n+        // use \"managed\" accessor, it would try to advance past START_ARRAY.\n+        assertToken(JsonToken.START_ARRAY, jp.nextToken());\n+        jp.nextToken();\n+        \n+        Iterator<Integer> it = MAPPER.reader(Integer.class).readValues(jp);\n+        assertTrue(it.hasNext());\n+        int value = it.next();\n+        assertEquals(1, value);\n+        assertTrue(it.hasNext());\n+        value = it.next();\n+        assertEquals(3, value);\n+        assertFalse(it.hasNext());\n+        assertFalse(it.hasNext());\n+    }\n+    \n+    public void testHasNextWithEndArrayManagedParser() throws Exception {\n+        final String JSON = \"[1,3]\";\n+\n+        Iterator<Integer> it = MAPPER.reader(Integer.class).readValues(JSON);\n+        assertTrue(it.hasNext());\n+        int value = it.next();\n+        assertEquals(1, value);\n+        assertTrue(it.hasNext());\n+        value = it.next();\n+        assertEquals(3, value);\n+        assertFalse(it.hasNext());\n         assertFalse(it.hasNext());\n     }\n     ", "timestamp": 1346170639, "metainfo": ""}