{"sha": "6dce67b1e29349440652309068df3aa89f6b97dd", "log": "Minor fix to EnumMapSerializer (deprecated, but might be resurrected)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumMapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumMapSerializer.java\n         Class<?> prevClass = null;\n         EnumValues keyEnums = _keyEnums;\n         final boolean skipNulls = !provider.isEnabled(SerializationFeature.WRITE_NULL_MAP_VALUES);\n+        final boolean useToString = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n         final TypeSerializer vts = _valueTypeSerializer;\n \n         for (Map.Entry<? extends Enum<?>,?> entry : value.entrySet()) {\n                 continue;\n             }\n             // First, serialize key\n-            Enum<?> key = entry.getKey();\n-            if (keyEnums == null) {\n-                /* 15-Oct-2009, tatu: This is clumsy, but still the simplest efficient\n-                 * way to do it currently, as Serializers get cached. (it does assume we'll always use\n-                 * default serializer tho -- so ideally code should be rewritten)\n-                 */\n-                // ... and lovely two-step casting process too...\n-                StdSerializer<?> ser = (StdSerializer<?>) provider.findValueSerializer(\n-                        key.getDeclaringClass(), _property);\n-                keyEnums = ((EnumSerializer) ser).getEnumValues();\n-            }\n-            jgen.writeFieldName(keyEnums.serializedValueFor(key));\n+            final Enum<?> key = entry.getKey();\n+            if (useToString) {\n+                jgen.writeFieldName(key.toString());\n+            } else {\n+                if (keyEnums == null) {\n+                    /* 15-Oct-2009, tatu: This is clumsy, but still the simplest efficient\n+                     * way to do it currently, as Serializers get cached. (it does assume we'll always use\n+                     * default serializer tho -- so ideally code should be rewritten)\n+                     */\n+                    // ... and lovely two-step casting process too...\n+                    StdSerializer<?> ser = (StdSerializer<?>) provider.findValueSerializer(\n+                            key.getDeclaringClass(), _property);\n+                    keyEnums = ((EnumSerializer) ser).getEnumValues();\n+                }\n+                jgen.writeFieldName(keyEnums.serializedValueFor(key));\n+            }\n             if (valueElem == null) {\n                 provider.defaultSerializeNull(jgen);\n                 continue;\n     {\n         EnumValues keyEnums = _keyEnums;\n         final boolean skipNulls = !provider.isEnabled(SerializationFeature.WRITE_NULL_MAP_VALUES);\n+        final boolean useToString = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n         final TypeSerializer vts = _valueTypeSerializer;\n         \n         for (Map.Entry<? extends Enum<?>,?> entry : value.entrySet()) {\n                 continue;\n             }\n             Enum<?> key = entry.getKey();\n-            if (keyEnums == null) {\n-                // clumsy, but has to do for now:\n-                StdSerializer<?> ser = (StdSerializer<?>) provider.findValueSerializer(key.getDeclaringClass(),\n-                        _property);\n-                keyEnums = ((EnumSerializer) ser).getEnumValues();\n-            }\n-            jgen.writeFieldName(keyEnums.serializedValueFor(key));\n+            if (useToString) {\n+                jgen.writeFieldName(key.toString());\n+            } else {\n+                if (keyEnums == null) {\n+                    // clumsy, but has to do for now:\n+                    StdSerializer<?> ser = (StdSerializer<?>) provider.findValueSerializer(key.getDeclaringClass(),\n+                            _property);\n+                    keyEnums = ((EnumSerializer) ser).getEnumValues();\n+                }\n+                jgen.writeFieldName(keyEnums.serializedValueFor(key));\n+            }\n             if (valueElem == null) {\n                 provider.defaultSerializeNull(jgen);\n                 continue;", "timestamp": 1428527510, "metainfo": ""}