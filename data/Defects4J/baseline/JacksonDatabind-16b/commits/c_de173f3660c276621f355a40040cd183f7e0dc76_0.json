{"sha": "de173f3660c276621f355a40040cd183f7e0dc76", "log": "Partial fix for #251", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/node/DecimalNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/DecimalNode.java\n import java.math.BigInteger;\n \n import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n import com.fasterxml.jackson.databind.SerializerProvider;\n+import com.fasterxml.jackson.databind.util.TokenBuffer;\n \n \n /**\n     }\n \n     @Override\n-    public final void serialize(JsonGenerator jg, SerializerProvider provider)\n+    public final void serialize(JsonGenerator jgen, SerializerProvider provider)\n         throws IOException, JsonProcessingException\n     {\n-        jg.writeNumber(_value);\n+        if (provider.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n+            if (!(jgen instanceof TokenBuffer)) { // [Issue#232]\n+                jgen.writeNumber(((BigDecimal) _value).toPlainString());\n+                return;\n+            }\n+        }\n+        jgen.writeNumber(_value);\n     }\n \n     @Override\n--- a/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n         ObjectMapper mapper = new ObjectMapper()\n                 .enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS)\n                 .enable(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN);\n-        final String JSON = \"{\\\"x\\\":1e2}\";\n-        final JsonNode node = mapper.readTree(JSON);\n+        final String INPUT = \"{\\\"x\\\":1e2}\";\n+        final JsonNode node = mapper.readTree(INPUT);\n         String result = mapper.writeValueAsString(node);\n         assertEquals(\"{\\\"x\\\":100}\", result);\n     }", "timestamp": 1373089145, "metainfo": ""}