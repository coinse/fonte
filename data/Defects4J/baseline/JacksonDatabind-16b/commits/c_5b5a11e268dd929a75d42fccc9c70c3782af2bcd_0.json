{"sha": "5b5a11e268dd929a75d42fccc9c70c3782af2bcd", "log": "small tinkering with ObjectNode, to allow more flexible creation of underlying Map", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/node/ObjectNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/node/ObjectNode.java\n     extends ContainerNode<ObjectNode>\n {\n     // Note: LinkedHashMap for backwards compatibility\n-    private final Map<String, JsonNode> _children\n-        = new LinkedHashMap<String, JsonNode>();\n-\n-    public ObjectNode(JsonNodeFactory nc) { super(nc); }\n-\n+    protected final Map<String, JsonNode> _children;\n+\n+    public ObjectNode(JsonNodeFactory nc) {\n+        super(nc);\n+        _children = new LinkedHashMap<String, JsonNode>();\n+    }\n+\n+    /**\n+     * @since 2.4\n+     */\n+    public ObjectNode(JsonNodeFactory nc, Map<String, JsonNode> kids) {\n+        super(nc);\n+        _children = kids;\n+    }\n+    \n     @Override\n     protected JsonNode _at(JsonPointer ptr) {\n         return get(ptr.getMatchingProperty());\n      */\n \n     @Override\n-    public JsonNodeType getNodeType()\n-    {\n+    public JsonNodeType getNodeType() {\n         return JsonNodeType.OBJECT;\n     }\n \n     }\n \n     @Override\n-    public Iterator<JsonNode> elements()\n-    {\n+    public Iterator<JsonNode> elements() {\n         return _children.values().iterator();\n     }\n \n     public JsonNode get(int index) { return null; }\n \n     @Override\n-    public JsonNode get(String fieldName)\n-    {\n+    public JsonNode get(String fieldName) {\n         return _children.get(fieldName);\n     }\n \n     @Override\n-    public Iterator<String> fieldNames()\n-    {\n+    public Iterator<String> fieldNames() {\n         return _children.keySet().iterator();\n     }\n \n     @Override\n-    public JsonNode path(int index)\n-    {\n+    public JsonNode path(int index) {\n         return MissingNode.getInstance();\n     }\n \n      * and values) of this JSON Object.\n      */\n     @Override\n-    public Iterator<Map.Entry<String, JsonNode>> fields()\n-    {\n+    public Iterator<Map.Entry<String, JsonNode>> fields() {\n         return _children.entrySet().iterator();\n     }\n \n     @Override\n-    public ObjectNode with(String propertyName)\n-    {\n+    public ObjectNode with(String propertyName) {\n         JsonNode n = _children.get(propertyName);\n         if (n != null) {\n             if (n instanceof ObjectNode) {", "timestamp": 1397924645, "metainfo": ""}