{"sha": "e2f78f2ef08962196299ea79fb0332af1606e471", "log": "Unit test refactoring fixes", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/TestParserUsingMapper.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestParserUsingMapper.java\n import com.fasterxml.jackson.core.io.SerializedString;\n import com.fasterxml.jackson.databind.ObjectMapper;\n \n-public class TestParserUsingMapper  extends com.fasterxml.jackson.core.BaseTest\n+public class TestParserUsingMapper  extends BaseMapTest\n {\n     final static int TWO_BYTE_ESCAPED = 0x111;\n     final static int THREE_BYTE_ESCAPED = 0x1111;\n--- a/src/test/java/com/fasterxml/jackson/databind/TestVersions.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestVersions.java\n  * Tests to ensure that we get proper Version information via\n  * things defined as Versioned.\n  */\n-public class TestVersions extends com.fasterxml.jackson.core.BaseTest\n+public class TestVersions extends BaseMapTest\n {\n     public void testMapperVersions()\n     {\n--- a/src/test/java/com/fasterxml/jackson/databind/interop/TestCglibUsage.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/interop/TestCglibUsage.java\n import net.sf.cglib.proxy.MethodInterceptor;\n import net.sf.cglib.proxy.MethodProxy;\n \n-import com.fasterxml.jackson.core.BaseTest;\n import com.fasterxml.jackson.databind.*;\n \n /**\n  * Unit test for checking that we can serialize CGLib generated proxies.\n  */\n-public class TestCglibUsage\n-    extends BaseTest\n+public class TestCglibUsage extends BaseMapTest\n {\n-    /*\n-    /**********************************************************\n-    /* Helper classes\n-    /**********************************************************\n-     */\n-\n     interface BeanInterface {\n         public int getX();\n     }\n         assertEquals(1, result.size());\n         assertEquals(Integer.valueOf(13), result.get(\"x\"));\n     }\n-\n-    /*\n-    /**********************************************************\n-    /* Helper methods\n-    /**********************************************************\n-     */\n-\n-    @SuppressWarnings(\"unchecked\")\n-\tprivate Map<String,Object> writeAndMap(ObjectMapper m, Object value)\n-        throws IOException\n-    {\n-        StringWriter sw = new StringWriter();\n-        m.writeValue(sw, value);\n-        return (Map<String,Object>) m.readValue(sw.toString(), Object.class);\n-    }\n }\n \n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestAnnotationInheritance.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestAnnotationInheritance.java\n package com.fasterxml.jackson.databind.ser;\n \n-import java.io.*;\n import java.util.*;\n \n import com.fasterxml.jackson.annotation.*;\n  * bean serialization.\n  */\n public class TestAnnotationInheritance\n-    extends com.fasterxml.jackson.core.BaseTest\n+    extends BaseMapTest\n {\n     /*\n     /**********************************************************\n         assertEquals(Integer.valueOf(1), result.get(\"width\"));\n         assertEquals(Integer.valueOf(2), result.get(\"length\"));\n     }\n-\n-    /*\n-    //////////////////////////////////////////////\n-    // Helper methods\n-    //////////////////////////////////////////////\n-     */\n-\n-    @SuppressWarnings(\"unchecked\")\n-\tprivate Map<String,Object> writeAndMap(ObjectMapper m, Object value)\n-        throws IOException\n-    {\n-        StringWriter sw = new StringWriter();\n-        m.writeValue(sw, value);\n-        return (Map<String,Object>) m.readValue(sw.toString(), Object.class);\n-    }\n }\n--- a/src/test/java/com/fasterxml/jackson/databind/type/TestJavaType.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/type/TestJavaType.java\n \n import java.util.*;\n \n+import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.JavaType;\n \n /**\n  * some degree\n  */\n public class TestJavaType\n-    extends com.fasterxml.jackson.core.BaseTest\n+    extends BaseMapTest\n {\n     static class BaseType { }\n \n--- a/src/test/java/com/fasterxml/jackson/databind/type/TestTypeBindings.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/type/TestTypeBindings.java\n \n import java.util.*;\n \n+import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.JavaType;\n \n /**\n  * implemented by {@link TypeBindings} class.\n  */\n public class TestTypeBindings\n-    extends com.fasterxml.jackson.core.BaseTest\n+    extends BaseMapTest\n {    \n     static class AbstractType<A,B> { }\n     \n--- a/src/test/java/com/fasterxml/jackson/databind/type/TestTypeResolution.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/type/TestTypeResolution.java\n import java.util.*;\n \n import com.fasterxml.jackson.core.type.TypeReference;\n-\n+import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.type.CollectionType;\n import com.fasterxml.jackson.databind.type.MapType;\n import com.fasterxml.jackson.databind.type.TypeFactory;\n \n @SuppressWarnings(\"serial\")\n-public class TestTypeResolution extends com.fasterxml.jackson.core.BaseTest\n+public class TestTypeResolution extends BaseMapTest\n {\n     public static class LongValuedMap<K> extends HashMap<K, Long> { }\n \n--- a/src/test/java/com/fasterxml/jackson/databind/util/TestTokenBuffer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/util/TestTokenBuffer.java\n \n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.core.util.JsonParserSequence;\n+import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.ObjectMapper;\n \n-public class TestTokenBuffer extends com.fasterxml.jackson.core.BaseTest\n+public class TestTokenBuffer extends BaseMapTest\n {\n     /*\n     /**********************************************************\n--- a/src/test/java/com/fasterxml/jackson/failing/TestJavaType76.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestJavaType76.java\n \n import java.util.*;\n \n+import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.type.TypeFactory;\n \n /**\n  * Failing test related to [Issue#76]\n  */\n-public class TestJavaType76\n-    extends com.fasterxml.jackson.core.BaseTest\n+public class TestJavaType76 extends BaseMapTest\n {\n     @SuppressWarnings(\"serial\")\n     static class HashTree<K, V> extends HashMap<K, HashTree<K, V>> { }", "timestamp": 1411677616, "metainfo": ""}