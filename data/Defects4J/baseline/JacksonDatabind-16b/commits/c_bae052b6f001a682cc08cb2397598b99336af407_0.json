{"sha": "bae052b6f001a682cc08cb2397598b99336af407", "log": "Merge branch 'master' of github.com:FasterXML/jackson-databind", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n  * and as keys for deserializers.\n  *<p>\n  * Instances can (only) be constructed by\n- * <code>com.fasterxml.jackson.databind.TypeFactory</code>.\n+ * <code>com.fasterxml.jackson.databind.type.TypeFactory</code>.\n  *<p>\n  * Since 2.2 this implements {@link java.lang.reflect.Type} to allow\n  * it to be pushed through interfaces that only expose that type.\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n      * Note: whether {@link java.util.Map} keys are serialized as Strings\n      * or not is controlled using {@link #WRITE_DATE_KEYS_AS_TIMESTAMPS}.\n      *<p>\n-     * Feature is enabled by default.\n+     * Feature is enabled by default, so that date/time are by default\n+     * serialized as timestamps.\n      */\n     WRITE_DATES_AS_TIMESTAMPS(true),\n \n      * Note: whether {@link java.util.Map} keys are serialized as Strings\n      * or not is controlled using {@link #WRITE_DATE_KEYS_AS_TIMESTAMPS}.\n      *<p>\n-     * Feature is enabled by default.\n+     * Feature is enabled by default, so that period/duration are by default\n+     * serialized as timestamps.\n      * \n      * @since 2.5\n      */\n     WRITE_DURATIONS_AS_TIMESTAMPS(true),\n-    \n+\n     /**\n      * Feature that determines whether {@link java.util.Date}s\n      * (and sub-types) used as {@link java.util.Map} keys are serialized\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n         final SerializationConfig config = prov.getConfig();\n         BeanSerializerBuilder builder = constructBeanSerializerBuilder(beanDesc);\n         builder.setConfig(config);\n-        \n+\n         // First: any detectable (auto-detect, annotations) properties to serialize?\n         List<BeanPropertyWriter> props = findBeanProperties(prov, beanDesc, builder);\n         if (props == null) {\n                 props = mod.changeProperties(config, beanDesc, props);\n             }\n         }\n-        \n+\n         // Any properties to suppress?\n         props = filterBeanProperties(config, beanDesc, props);\n-        \n+\n         // [JACKSON-440] Need to allow reordering of properties to serialize\n         if (_factoryConfig.hasSerializerModifiers()) {\n             for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {", "timestamp": 1416372696, "metainfo": ""}