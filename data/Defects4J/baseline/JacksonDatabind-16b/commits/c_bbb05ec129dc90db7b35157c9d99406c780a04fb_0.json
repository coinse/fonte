{"sha": "bbb05ec129dc90db7b35157c9d99406c780a04fb", "log": "Merge pull request #379 from cpilsworth/paranamer-naming-strategy  Fixes jackson-module-paranamer issue 5 problem with paranamer + PropertyNamingStrategy", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n                 } else {\n                     old.addAll(prop);\n                 }\n-\n                 // replace the creatorProperty too, if there is one\n-                if (_creatorProperties != null) {\n-                    for (int i = 0; i < _creatorProperties.size(); ++i) {\n-                        if (_creatorProperties.get(i).getInternalName().equals(prop.getInternalName())) {\n-                            _creatorProperties.set(i, prop);\n-                            break;\n-                        }\n-                    }\n-                }\n+                updateCreatorProperty(prop);\n             }\n         }\n     }\n             } else {\n                 old.addAll(prop);\n             }\n+\n+            updateCreatorProperty(prop);\n         }\n     }\n \n         return (PropertyNamingStrategy) ClassUtil.createInstance(namingClass,\n                     _config.canOverrideAccessModifiers());\n     }\n+\n+    private void updateCreatorProperty(POJOPropertyBuilder prop) {\n+        if (_creatorProperties != null) {\n+            for (int i = 0; i < _creatorProperties.size(); ++i) {\n+                if (_creatorProperties.get(i).getInternalName().equals(prop.getInternalName())) {\n+                    _creatorProperties.set(i, prop);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n         // 23-Nov-2010, tatu: Custom deserializer?\n         JsonDeserializer<?> custom = _findCustomEnumDeserializer(enumClass, config, beanDesc);\n         if (custom != null) {\n-            return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, des);\n+            return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, custom);\n         }\n \n         EnumResolver<?> enumRes = constructEnumResolver(enumClass, config, beanDesc.findJsonValueMethod());", "timestamp": 1389043631, "metainfo": ""}