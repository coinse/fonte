{"sha": "c89a8b7838f362ebbd315f096b1ff0c419a22d00", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n                 return StringDeserializer.instance;\n             }\n             // Primitives/wrappers, other Numbers:\n-            JsonDeserializer<?> deser = NumberDeserializers.find(rawType);\n+            JsonDeserializer<?> deser = NumberDeserializers.find(rawType, clsName);\n             if (deser == null) {\n-                deser = DateDeserializers.find(rawType);\n+                deser = DateDeserializers.find(rawType, clsName);\n                 if (deser == null) {\n-                    deser = JdkDeserializers.find(rawType);\n+                    deser = JdkDeserializers.find(rawType, clsName);\n                 }\n             }\n             return deser;\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/DateDeserializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/DateDeserializers.java\n         };\n     }\n \n-    public static JsonDeserializer<?> find(Class<?> rawType)\n-    {\n-        if (!_classNames.contains(rawType.getName())) {\n+    public static JsonDeserializer<?> find(Class<?> rawType, String clsName)\n+    {\n+        if (!_classNames.contains(clsName)) {\n             return null;\n         }\n         // Start with most common types; int, boolean, long, double\n             return CalendarDeserializer.gregorianInstance;\n         }\n         // should never occur\n-        throw new IllegalArgumentException(\"Internal error: can't find deserializer for \"+rawType.getName());\n+        throw new IllegalArgumentException(\"Internal error: can't find deserializer for \"+clsName);\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java\n         };\n     }\n \n-    public static JsonDeserializer<?> find(Class<?> rawType)\n-    {\n-        if (!_classNames.contains(rawType.getName())) {\n+    public static JsonDeserializer<?> find(Class<?> rawType, String clsName)\n+    {\n+        if (!_classNames.contains(clsName)) {\n             return null;\n         }\n         /* Ok: following ones would work via String-arg detection too;\n             return AtomicBooleanDeserializer.instance;\n         }\n         // should never occur\n-        throw new IllegalArgumentException(\"Internal error: can't find deserializer for \"+rawType.getName());\n+        throw new IllegalArgumentException(\"Internal error: can't find deserializer for \"+clsName);\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java\n         };\n     }\n     \n-    public static JsonDeserializer<?> find(Class<?> rawType)\n+    public static JsonDeserializer<?> find(Class<?> rawType, String clsName)\n     {\n         if (rawType.isPrimitive()) {\n             if (rawType == Integer.TYPE) {\n             if (rawType == Float.TYPE) {\n                 return FloatDeserializer.primitiveInstance;\n             }\n-        } else if (_classNames.contains(rawType.getName())) {\n+        } else if (_classNames.contains(clsName)) {\n             // Start with most common types; int, boolean, long, double\n             if (rawType == Integer.class) {\n                 return IntegerDeserializer.wrapperInstance;", "timestamp": 1361336353, "metainfo": ""}