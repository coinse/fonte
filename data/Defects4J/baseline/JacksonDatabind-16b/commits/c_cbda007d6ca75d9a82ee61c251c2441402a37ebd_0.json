{"sha": "cbda007d6ca75d9a82ee61c251c2441402a37ebd", "log": "Add unit tests for #749; failure to dynamically use WRITE_ENUMS_USING_TO_STRING", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java\n         @JsonValue public String toString();\n     }\n \n-    protected enum SerializableEnum implements JsonSerializable\n+    protected static enum SerializableEnum implements JsonSerializable\n     {\n         A, B, C;\n \n         }\n     }\n \n-    protected enum LowerCaseEnum {\n+    protected static enum LowerCaseEnum {\n         A, B, C;\n         private LowerCaseEnum() { }\n         @Override\n         ObjectMapper m = new ObjectMapper();\n         m.configure(SerializationFeature.WRITE_ENUMS_USING_TO_STRING, true);\n         assertEquals(\"\\\"b\\\"\", m.writeValueAsString(LowerCaseEnum.B));\n+\n+        // [databind#749] but should also be able to dynamically disable\n+        assertEquals(\"\\\"B\\\"\",\n+                m.writer().without(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)\n+                    .writeValueAsString(LowerCaseEnum.B));\n     }\n \n     // [JACKSON-212]\n     public void testCustomEnumMapKeySerializer() throws Exception {\n         String json = mapper.writeValueAsString(new MyBean661(\"abc\"));\n         assertEquals(aposToQuotes(\"{'X-FOO':'abc'}\"), json);\n+    }\n+\n+    // [databind#749]\n+\n+    public void testEnumMapSerDefault() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n+        m.put(LowerCaseEnum.A, \"value\");\n+        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", mapper.writeValueAsString(m));\n+    }\n+    \n+    public void testEnumMapSerDisableToString() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        ObjectWriter w = mapper.writer().without(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n+        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n+        m.put(LowerCaseEnum.A, \"value\");\n+        assertEquals(\"{\\\"A\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n+    }\n+    \n+    public void testEnumMapSerEnableToString() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        ObjectWriter w = mapper.writer().with(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n+        EnumMap<LowerCaseEnum, String> m = new EnumMap<LowerCaseEnum, String>(LowerCaseEnum.class);\n+        m.put(LowerCaseEnum.A, \"value\");\n+        assertEquals(\"{\\\"a\\\":\\\"value\\\"}\", w.writeValueAsString(m));\n     }\n }\n ", "timestamp": 1428523030, "metainfo": ""}