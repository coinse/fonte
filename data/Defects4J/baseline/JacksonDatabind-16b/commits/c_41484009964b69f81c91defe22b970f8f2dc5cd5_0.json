{"sha": "41484009964b69f81c91defe22b970f8f2dc5cd5", "log": "Minor fixes to parameter name discovery/introspection", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n                     name = ctorPropNames[i];\n                 }\n                 if (name == null) {\n-                    name = (param == null) ? null : intr.findNameForDeserialization(param);\n+                    name = _findParamName(param, intr);\n                 }\n                 Object injectId = intr.findInjectableValueId(param);\n                 if (name != null && name.hasSimpleName()) {\n         // note: if we do have parameter name, it'll be \"property constructor\":\n         AnnotatedParameter param = ctor.getParameter(0);\n         if (name == null) {\n-            name = (param == null) ? null : intr.findNameForDeserialization(param);\n+            name = _findParamName(param, intr);\n         }\n         Object injectId = intr.findInjectableValueId(param);\n     \n             // some single-arg factory methods (String, number) are auto-detected\n             if (argCount == 1) {\n                 AnnotatedParameter param = factory.getParameter(0);\n-                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n+                PropertyName pn = _findParamName(param, intr);\n                 String name = (pn == null) ? null : pn.getSimpleName();\n                 Object injectId = intr.findInjectableValueId(param);\n \n             int injectCount = 0;            \n             for (int i = 0; i < argCount; ++i) {\n                 AnnotatedParameter param = factory.getParameter(i);\n-                PropertyName name = (param == null) ? null : intr.findNameForDeserialization(param);\n+                PropertyName name = _findParamName(param, intr);\n                 Object injectId = intr.findInjectableValueId(param);\n                 if (name != null && name.hasSimpleName()) {\n                     ++namedCount;\n             prop = prop.withValueDeserializer(deser);\n         }\n         return prop;\n+    }\n+\n+    protected PropertyName _findParamName(AnnotatedParameter param, AnnotationIntrospector intr)\n+    {\n+        if (param != null && intr != null) {\n+            PropertyName name = intr.findNameForDeserialization(param);\n+            if (name != null) {\n+                return name;\n+            }\n+            /* 14-Apr-2014, tatu: Need to also consider possible implicit name\n+            *   (for JDK8, or via paranamer)\n+            */\n+            String str = intr.findParameterSourceName(param);\n+            if (str != null && !str.isEmpty()) {\n+                return new PropertyName(str);\n+            }\n+        }\n+        return null;\n     }\n     \n     /*", "timestamp": 1397539186, "metainfo": ""}