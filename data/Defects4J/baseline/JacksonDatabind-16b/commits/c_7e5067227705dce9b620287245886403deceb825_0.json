{"sha": "7e5067227705dce9b620287245886403deceb825", "log": "Added javatype reference to all factories, organized imports  - All jsonformat visitors now accept the javatype of the translated java type in their factory constructor call  - organized imports to remove references to jsonnodes and such", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ext/DOMSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ext/DOMSerializer.java\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-        visitor.anyFormat();\n+        visitor.anyFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/NullSchemaFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/NullSchemaFactory.java\n package com.fasterxml.jackson.databind.jsonschema.factories;\n \n+import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.types.NullSchema;\n-import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonNullFormatVisitor;\n \n public class NullSchemaFactory extends SchemaFactory implements\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/ObjectSchemaFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/ObjectSchemaFactory.java\n import com.fasterxml.jackson.databind.JsonMappingException;\n import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.jsonschema.JsonFormatVisitorAware;\n+import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.types.ObjectSchema;\n-import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.types.SchemaType;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonObjectFormatVisitor;\n import com.fasterxml.jackson.databind.ser.BeanPropertyWriter;\n \t\tif (ser != null && ser instanceof JsonFormatVisitorAware) {\n \t\t\t((JsonFormatVisitorAware)ser).acceptJsonFormatVisitor(visitor, writer.getType());\n \t\t} else {\n-\t\t\tvisitor.anyFormat();\n+\t\t\tvisitor.anyFormat(writer.getType());\n \t\t}\n \t\treturn visitor.finalSchema();\n \t}\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/SchemaFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/SchemaFactory.java\n \tpublic SchemaFactory() {\n \t}\n \n-\tpublic JsonAnyFormatVisitor anyFormat() {\n+\tpublic JsonAnyFormatVisitor anyFormat(JavaType convertedType) {\n \t\tdelegate = new AnySchemaFactory(this);\n \t\treturn (JsonAnyFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonArrayFormatVisitor arrayFormat(JavaType elementType) {\n+\tpublic JsonArrayFormatVisitor arrayFormat(JavaType convertedType) {\n \t\tdelegate = new ArraySchemaFactory(this);\n \t\treturn (JsonArrayFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonBooleanFormatVisitor booleanFormat() {\n+\tpublic JsonBooleanFormatVisitor booleanFormat(JavaType convertedType) {\n \t\tdelegate = new BooleanSchemaFactory(this);\n \t\treturn (JsonBooleanFormatVisitor) delegate;\n \t}\n \t\treturn provider;\n \t}\n \n-\tpublic JsonIntegerFormatVisitor integerFormat() {\n+\tpublic JsonIntegerFormatVisitor integerFormat(JavaType convertedType) {\n \t\tdelegate = new IntegerSchemaFactory(this);\n \t\treturn (JsonIntegerFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonNullFormatVisitor nullFormat() {\n+\tpublic JsonNullFormatVisitor nullFormat(JavaType convertedType) {\n \t\tdelegate = new NullSchemaFactory(this);\n \t\treturn (JsonNullFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonNumberFormatVisitor numberFormat() {\n+\tpublic JsonNumberFormatVisitor numberFormat(JavaType convertedType) {\n \t\tdelegate = new NumberSchemaFactory(this);\n \t\treturn (JsonNumberFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonObjectFormatVisitor objectFormat(JavaType type) {\n+\tpublic JsonObjectFormatVisitor objectFormat(JavaType convertedType) {\n \t\t// BasicClassIntrospector.instance.\n \t\tdelegate = new ObjectSchemaFactory(this);\n \t\treturn (JsonObjectFormatVisitor) delegate;\n \t}\n \n-\tpublic JsonStringFormatVisitor stringFormat() {\n+\tpublic JsonStringFormatVisitor stringFormat(JavaType convertedType) {\n \t\tdelegate = new StringSchemaFactory(this);\n \t\treturn (JsonStringFormatVisitor) delegate;\n \t}\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/ValueTypeSchemaFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/factories/ValueTypeSchemaFactory.java\n \n import java.util.Set;\n \n+import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.types.JsonValueFormat;\n-import com.fasterxml.jackson.databind.jsonschema.types.JsonSchema;\n import com.fasterxml.jackson.databind.jsonschema.types.ValueTypeSchema;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonValueFormatVisitor;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/types/ArraySchema.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/types/ArraySchema.java\n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonUnwrapped;\n import com.fasterxml.jackson.annotation.JsonValue;\n-import com.fasterxml.jackson.databind.jsonschema.factories.SchemaFactory;\n \n /*\n  * This attribute defines the allowed items in an instance array, and\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/types/JsonSchema.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/types/JsonSchema.java\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;\n-import com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase;\n import com.fasterxml.jackson.databind.type.TypeFactory;\n \n /**\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/visitors/JsonFormatVisitor.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/visitors/JsonFormatVisitor.java\n \n public interface JsonFormatVisitor {\n \n-\tpublic JsonObjectFormatVisitor objectFormat(JavaType type);\n-\tpublic JsonArrayFormatVisitor arrayFormat(JavaType elementType);\n-\tpublic JsonStringFormatVisitor stringFormat();\n-\tpublic JsonNumberFormatVisitor numberFormat();\n-\tpublic JsonIntegerFormatVisitor integerFormat();\n-\tpublic JsonBooleanFormatVisitor booleanFormat();\n-\tpublic JsonNullFormatVisitor nullFormat();\n-\tpublic JsonAnyFormatVisitor anyFormat();\n+\tpublic JsonObjectFormatVisitor objectFormat(JavaType convertedType);\n+\tpublic JsonArrayFormatVisitor arrayFormat(JavaType convertedType);\n+\tpublic JsonStringFormatVisitor stringFormat(JavaType convertedType);\n+\tpublic JsonNumberFormatVisitor numberFormat(JavaType convertedType);\n+\tpublic JsonIntegerFormatVisitor integerFormat(JavaType convertedType);\n+\tpublic JsonBooleanFormatVisitor booleanFormat(JavaType convertedType);\n+\tpublic JsonNullFormatVisitor nullFormat(JavaType convertedType);\n+\tpublic JsonAnyFormatVisitor anyFormat(JavaType convertedType);\n \t\n \tpublic SerializerProvider getProvider();\n \tpublic abstract void setProvider(SerializerProvider provider);\n--- a/src/main/java/com/fasterxml/jackson/databind/jsonschema/visitors/JsonNumberFormatVisitor.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsonschema/visitors/JsonNumberFormatVisitor.java\n package com.fasterxml.jackson.databind.jsonschema.visitors;\n \n-import com.fasterxml.jackson.databind.jsonschema.types.JsonValueFormat;\n \n public interface JsonNumberFormatVisitor extends JsonValueFormatVisitor{\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n         if (ser instanceof JsonFormatVisitorAware) {\n         \t((JsonFormatVisitorAware) ser).acceptJsonFormatVisitor(visitor, constructType(type));\n         } else {\n-        \tvisitor.anyFormat();\n+        \tvisitor.anyFormat(constructType(type));\n         }\n     }\n     /**\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.java\n     \n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint) { \n-    \tvisitor.anyFormat();\n+    \tvisitor.anyFormat(typeHint);\n     }\n \n     protected void failForEmpty(Object value) throws JsonMappingException\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/ArraySerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/ArraySerializerBase.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n-import com.fasterxml.jackson.databind.ser.*;\n+import com.fasterxml.jackson.databind.ser.ContainerSerializer;\n \n /**\n  * Intermediate base class for serializers used for various\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase.java\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonArrayFormatVisitor;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n package com.fasterxml.jackson.databind.ser.std;\n \n import java.io.IOException;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n \n import com.fasterxml.jackson.annotation.JsonFormat;\n import com.fasterxml.jackson.annotation.ObjectIdGenerator;\n import com.fasterxml.jackson.annotation.ObjectIdGenerators;\n-import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.io.SerializedString;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.AnnotationIntrospector;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.introspect.Annotated;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonObjectFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.fasterxml.jackson.databind.ser.*;\n+import com.fasterxml.jackson.databind.ser.AnyGetterWriter;\n+import com.fasterxml.jackson.databind.ser.BeanPropertyFilter;\n+import com.fasterxml.jackson.databind.ser.BeanPropertyWriter;\n+import com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;\n+import com.fasterxml.jackson.databind.ser.ContainerSerializer;\n+import com.fasterxml.jackson.databind.ser.ContextualSerializer;\n+import com.fasterxml.jackson.databind.ser.FilterProvider;\n+import com.fasterxml.jackson.databind.ser.ResolvableSerializer;\n import com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;\n import com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;\n import com.fasterxml.jackson.databind.ser.impl.WritableObjectId;\n-import com.fasterxml.jackson.databind.type.TypeFactory;\n import com.fasterxml.jackson.databind.util.ArrayBuilders;\n import com.fasterxml.jackson.databind.util.NameTransformer;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java\n \n import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.core.JsonGenerator;\n-\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-        visitor.booleanFormat();\n+        visitor.booleanFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java\n import java.text.DateFormat;\n import java.util.Calendar;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/CollectionSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/CollectionSerializer.java\n import java.util.Collection;\n import java.util.Iterator;\n \n-import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.BeanProperty;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonSerializer;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateSerializer.java\n \n import java.io.IOException;\n import java.text.DateFormat;\n-import java.util.*;\n+import java.util.Date;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n \n /**\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n import com.fasterxml.jackson.annotation.JsonFormat;\n import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.core.JsonGenerator;\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.introspect.Annotated;\n import com.fasterxml.jackson.databind.jsonschema.types.JsonValueFormat;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n             }\n         }\n         if (asNumber) {\n-        \tvisitor.numberFormat().format(JsonValueFormat.UTC_MILLISEC);\n+        \tvisitor.numberFormat(typeHint).format(JsonValueFormat.UTC_MILLISEC);\n         } else {\n-        \tvisitor.stringFormat().format(JsonValueFormat.DATE_TIME);\n+        \tvisitor.stringFormat(typeHint).format(JsonValueFormat.DATE_TIME);\n         }\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumMapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumMapSerializer.java\n import java.io.IOException;\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n-import java.util.*;\n-\n-import com.fasterxml.jackson.core.*;\n-\n-\n-import com.fasterxml.jackson.databind.*;\n+import java.util.EnumMap;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.JsonFormatVisitorAware;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java\n import java.util.HashSet;\n import java.util.Set;\n \n-import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.io.SerializedString;\n-\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.AnnotationIntrospector;\n+import com.fasterxml.jackson.databind.BeanDescription;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.SerializationConfig;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n-import com.fasterxml.jackson.databind.jsonschema.visitors.JsonObjectFormatVisitor;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonStringFormatVisitor;\n-import com.fasterxml.jackson.databind.node.ArrayNode;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.fasterxml.jackson.databind.util.EnumValues;\n \n /**\n     {\n         // [JACKSON-684]: serialize as index?\n     \tif (visitor.getProvider().isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {\n-    \t\tvisitor.integerFormat();\n+    \t\tvisitor.integerFormat(typeHint);\n     \t} else {\n-    \t\tJsonStringFormatVisitor stringVisitor = visitor.stringFormat();\n+    \t\tJsonStringFormatVisitor stringVisitor = visitor.stringFormat(typeHint);\n     \t\tif (typeHint != null) {\n     \t\t\tif (typeHint.isEnumType()) {\n     \t\t\t\tSet<String> enums = new HashSet<String>();\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSetSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSetSerializer.java\n import java.io.IOException;\n import java.util.EnumSet;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n \n public class EnumSetSerializer\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/InetAddressSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/InetAddressSerializer.java\n import java.io.IOException;\n import java.net.InetAddress;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/IterableSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/IterableSerializer.java\n import java.io.IOException;\n import java.util.Iterator;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.BeanProperty;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonSerializer;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/JsonValueSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/JsonValueSerializer.java\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.JsonFormatVisitorAware;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n     \tif (_valueSerializer instanceof JsonFormatVisitorAware) {\n     \t\t((JsonFormatVisitorAware) _valueSerializer).acceptJsonFormatVisitor(visitor, null); \n     \t} else {\n-    \t\tvisitor.anyFormat();\n+    \t\tvisitor.anyFormat(typeHint);\n     \t}\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n package com.fasterxml.jackson.databind.ser.std;\n \n import java.io.IOException;\n-import java.util.*;\n-\n-import com.fasterxml.jackson.core.*;\n-\n-\n-import com.fasterxml.jackson.databind.*;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.SortedMap;\n+import java.util.TreeMap;\n+\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.AnnotationIntrospector;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.fasterxml.jackson.databind.ser.ContainerSerializer;\n import com.fasterxml.jackson.databind.ser.ContextualSerializer;\n import com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NonTypedScalarSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NonTypedScalarSerializerBase.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NullSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NullSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n \n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.nullFormat();\n+    \tvisitor.nullFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java\n import java.math.BigInteger;\n import java.util.Map;\n \n-import com.fasterxml.jackson.core.*;\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.integerFormat();\n+        \tvisitor.integerFormat(typeHint);\n         }\n     }\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.integerFormat();\n+        \tvisitor.integerFormat(typeHint);\n         }\n     }\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.numberFormat();\n+        \tvisitor.numberFormat(typeHint);\n         }\n     }\n     \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.numberFormat();\n+        \tvisitor.numberFormat(typeHint);\n         }\n     }\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.numberFormat();\n+        \tvisitor.numberFormat(typeHint);\n         }\n     }\n     \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.numberFormat();\n+        \tvisitor.numberFormat(typeHint);\n         }\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/ObjectArraySerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/ObjectArraySerializer.java\n import java.io.IOException;\n import java.lang.reflect.InvocationTargetException;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/RawSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/RawSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-        visitor.stringFormat();\n+        visitor.stringFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/SerializableSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/SerializableSerializer.java\n import java.io.IOException;\n import java.util.concurrent.atomic.AtomicReference;\n \n-import com.fasterxml.jackson.core.*;\n-\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonSerializable;\n import com.fasterxml.jackson.databind.ObjectMapper;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.anyFormat();\n+    \tvisitor.anyFormat(typeHint);\n     }\n     }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/SqlDateSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/SqlDateSerializer.java\n \n import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.core.JsonGenerator;\n-\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.types.JsonValueFormat;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.stringFormat().format(JsonValueFormat.DATE_TIME);\n+    \tvisitor.stringFormat(typeHint).format(JsonValueFormat.DATE_TIME);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/SqlTimeSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/SqlTimeSerializer.java\n \n import com.fasterxml.jackson.core.JsonGenerationException;\n import com.fasterxml.jackson.core.JsonGenerator;\n-\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.types.JsonValueFormat;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.stringFormat().format(JsonValueFormat.DATE_TIME);\n+    \tvisitor.stringFormat(typeHint).format(JsonValueFormat.DATE_TIME);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.java\n package com.fasterxml.jackson.databind.ser.std;\n \n-import java.util.*;\n+import java.util.Collection;\n \n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.SerializerProvider;\n-import com.fasterxml.jackson.databind.jsonschema.JsonFormatVisitorAware;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonArrayFormatVisitor;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n \n /**\n  * Intermediate base class for Lists, Collections and Arrays\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdArraySerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdArraySerializers.java\n import java.io.IOException;\n import java.util.HashMap;\n \n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.types.SchemaType;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.fasterxml.jackson.databind.ser.ContainerSerializer;\n import com.fasterxml.jackson.databind.type.TypeFactory;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdContainerSerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdContainerSerializers.java\n package com.fasterxml.jackson.databind.ser.std;\n \n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n import com.fasterxml.jackson.databind.ser.ContainerSerializer;\n import com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;\n import com.fasterxml.jackson.databind.ser.impl.IteratorSerializer;\n-import com.fasterxml.jackson.databind.ser.std.CollectionSerializer;\n \n /**\n  * Dummy container class to group standard container serializers: serializers\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java\n package com.fasterxml.jackson.databind.ser.std;\n \n-import java.io.*;\n-import java.util.*;\n-import java.util.concurrent.atomic.*;\n-\n-import com.fasterxml.jackson.core.*;\n-\n-import com.fasterxml.jackson.databind.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Currency;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.ser.BasicSerializerFactory;\n import com.fasterxml.jackson.databind.util.Provider;\n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.booleanFormat();\n+        \tvisitor.booleanFormat(typeHint);\n         }\n     }\n     \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.integerFormat();\n+        \tvisitor.integerFormat(typeHint);\n         }\n     }\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.integerFormat();\n+        \tvisitor.integerFormat(typeHint);\n         }\n     }\n     \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.anyFormat();\n+        \tvisitor.anyFormat(typeHint);\n         }\n     }\n     \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.stringFormat();\n+        \tvisitor.stringFormat(typeHint);\n         }\n     }\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n         {\n-        \tvisitor.stringFormat();\n+        \tvisitor.stringFormat(typeHint);\n         }\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n import java.io.IOException;\n import java.util.Date;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n-import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n \n /**\n  * Specialized serializer that can be used as the generic key\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.stringFormat();\n+    \tvisitor.stringFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n import java.util.Calendar;\n import java.util.Date;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonSerializer;\n import com.fasterxml.jackson.databind.SerializerProvider;\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonMappingException;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-        visitor.anyFormat();\n+        visitor.anyFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java\n import java.io.IOException;\n import java.lang.reflect.InvocationTargetException;\n \n-import com.fasterxml.jackson.core.*;\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.JsonFormatVisitorAware;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n-import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n \n /**\n  * Base class used by all standard serializers, and can also\n      */\n //  @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint) { \n-    \tvisitor.anyFormat();\n+    \tvisitor.anyFormat(typeHint);\n     }\n             \n     /*\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StringSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StringSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.stringFormat();\n+    \tvisitor.stringFormat(typeHint);\n     }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.java\n import java.io.IOException;\n import java.util.TimeZone;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/ToStringSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/ToStringSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonMappingException;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n     @Override\n     public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint)\n     {\n-    \tvisitor.stringFormat();\n+    \tvisitor.stringFormat(typeHint);\n     }\n     \n }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/TokenBufferSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/TokenBufferSerializer.java\n \n import java.io.IOException;\n \n-import com.fasterxml.jackson.core.*;\n-\n+import com.fasterxml.jackson.core.JsonGenerationException;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.databind.JavaType;\n-import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n import com.fasterxml.jackson.databind.jsonschema.visitors.JsonFormatVisitor;\n          *   type is basically not known. This seems closest\n          *   approximation\n          */\n-    \tvisitor.anyFormat();\n+    \tvisitor.anyFormat(typeHint);\n     }\n }    \n--- a/src/test/java/com/fasterxml/jackson/databind/module/TestSimpleModule.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/module/TestSimpleModule.java\n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint) {\n-            visitor.anyFormat();\n+            visitor.anyFormat(typeHint);\n         }\n     }\n     \n \n         @Override\n         public void acceptJsonFormatVisitor(JsonFormatVisitor visitor, JavaType typeHint) {\n-            visitor.anyFormat();\n+            visitor.anyFormat(typeHint);\n         }\n     }\n ", "timestamp": 1344362091, "metainfo": ""}