{"sha": "46e1e9780049f855ca60f2c32c594062358a3330", "log": "Doc tidy.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n     }\n     \n     /**\n-     * Test if this element is a block-level element (e.g. {@code <div>} or an inline element (e.g.\n-     * {@code <p>}).\n+     * Test if this element is a block-level element. (E.g. {@code <div> == true} or an inline element\n+     * {@code <p> == false}).\n      * \n      * @return true if block, false if not (and thus inline)\n      */\n     }\n \n     /**\n-     * Adds the supplied Element to this element's children.\n+     * Adds an element to this element's children.\n      * @param child the Element to add. It should be a new element, without an existing parent.\n      * @return this element, so that you can add more children.\n      */\n     }\n \n     /**\n-     * Adds the Node to this element. \n-     * @param child the Node to add. Must not already have a parent.\n+     * Adds a node to this element. \n+     * @param child the node to add. Must not already have a parent.\n      * @return this element, so that you can add more child nodes or elements.\n      */\n     public Element appendChild(Node child) {\n     }\n     \n     /**\n-     * Create a new Element by tag name, and add it to this element.\n+     * Create a new element by tag name, and add it to this element.\n      * \n      * @param tagName the name of the tag (e.g. {@code div}).\n      * @return the new element, to allow you to add content to it, e.g.:\n \n     /**\n      * Gets the literal value of this element's \"class\" attribute, which may include multiple class names, space\n-     * separated (e.g. <code>&lt;div class=\"header gray\"></code> returns \"<code>header gray</code>\")\n+     * separated. (E.g. on <code>&lt;div class=\"header gray\"></code> returns, \"<code>header gray</code>\")\n      * @return The literal class attribute, or <b>empty string</b> if no class attribute set.\n      */\n     public String className() {\n     }\n \n     /**\n-     * Get the set of the element's class names. E.g. on element {@code <div class=\"header gray\"}>},\n+     * Get all of the element's class names. E.g. on element {@code <div class=\"header gray\"}>},\n      * returns a set of two elements {@code \"header\", \"gray\"}.\n      * @return set of classnames, empty if no class attribute\n      */", "timestamp": 1309605105, "metainfo": ""}