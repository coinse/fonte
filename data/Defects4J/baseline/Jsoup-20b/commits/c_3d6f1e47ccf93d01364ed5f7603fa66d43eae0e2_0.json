{"sha": "3d6f1e47ccf93d01364ed5f7603fa66d43eae0e2", "log": "Fixed issue where a single 0 character was lexed incorrectly as a null character.  Fixes #107", "commit": "\n--- a/src/main/java/org/jsoup/parser/TreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/TreeBuilderState.java\n         }\n     };\n \n-    private static String nullString = String.valueOf(0x0000);\n+    private static String nullString = String.valueOf('\\u0000');\n \n     abstract boolean process(Token t, TreeBuilder tb);\n \n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         Document doc = Jsoup.parse(\"<script><!-- one <script>Blah</script> --></script>\");\n         assertEquals(\"<!-- one <script>Blah</script> -->\", doc.select(\"script\").first().data());\n     }\n+\n+    @Test public void handles0CharacterAsText() {\n+        Document doc = Jsoup.parse(\"0<p>0</p>\");\n+        assertEquals(\"0\\n<p>0</p>\", doc.body().html());\n+    }\n+\n+    @Test public void handlesNullInData() {\n+        Document doc = Jsoup.parse(\"<p id=\\u0000>Blah \\u0000</p>\");\n+        assertEquals(\"<p id=\\\"\\uFFFD\\\">Blah \\u0000</p>\", doc.body().html()); // replaced in attr, NOT replaced in data\n+    }\n }", "timestamp": 1309605131, "metainfo": ""}