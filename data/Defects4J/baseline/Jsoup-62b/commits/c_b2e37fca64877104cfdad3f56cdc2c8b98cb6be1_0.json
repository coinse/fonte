{"sha": "b2e37fca64877104cfdad3f56cdc2c8b98cb6be1", "log": "Fixed an issue when moving moving nodes using Element.insert(index, children)  Fixes #689", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n \n     protected void addChildren(int index, Node... children) {\n         Validate.noNullElements(children);\n+        ensureChildNodes();\n         for (int i = children.length - 1; i >= 0; i--) {\n             Node in = children[i];\n             reparentChild(in);\n-            ensureChildNodes();\n             childNodes.add(index, in);\n-        }\n-        reindexChildren(index);\n+            reindexChildren(index);\n+        }\n     }\n \n     protected void ensureChildNodes() {\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n \n import org.jsoup.Jsoup;\n import org.jsoup.TextUtil;\n-import org.jsoup.helper.StringUtil;\n import org.jsoup.parser.Tag;\n import org.jsoup.select.Elements;\n import org.junit.Test;\n \n+import java.util.*;\n+\n import static org.junit.Assert.*;\n-\n-import java.util.ArrayList;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.Map;\n \n /**\n  * Tests for Element (DOM stuff mostly).\n         assertEquals(\"http://example2.com/four/\", els.get(3).absUrl(\"href\"));\n         assertEquals(\"https://example2.com/five/\", els.get(4).absUrl(\"href\"));\n     }\n+\n+    @Test\n+    public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {\n+        Document doc = new Document(\"\");\n+        Element body = doc.appendElement(\"body\");\n+        body.appendElement(\"div1\");\n+        body.appendElement(\"div2\");\n+        final Element div3 = body.appendElement(\"div3\");\n+        div3.text(\"Check\");\n+        final Element div4 = body.appendElement(\"div4\");\n+\n+        ArrayList<Element> toMove = new ArrayList<Element>();\n+        toMove.add(div3);\n+        toMove.add(div4);\n+\n+        body.insertChildren(0, toMove);\n+\n+        String result = doc.toString().replaceAll(\"\\\\s+\", \"\");\n+        assertEquals(\"<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>\", result);\n+\n+    }\n }", "timestamp": 1459739953, "metainfo": ""}