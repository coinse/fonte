{"sha": "3ba88d8c2ab500c07f9e2ddbc07a4bd01fadbd78", "log": "Fixed &nbsp; for XHTML in Shift_JS  Fixes #523", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Entities.java\n+++ b/src/main/java/org/jsoup/nodes/Entities.java\n                         if (escapeMode != EscapeMode.xhtml)\n                             accum.append(\"&nbsp;\");\n                         else\n-                            accum.append(c);\n+                            accum.append(\"&#xa0;\");\n                         break;\n                     case '<':\n                         if (!inAttribute)\n--- a/src/test/java/org/jsoup/nodes/DocumentTest.java\n+++ b/src/test/java/org/jsoup/nodes/DocumentTest.java\n package org.jsoup.nodes;\n \n+import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.nio.charset.Charset;\n import org.jsoup.Jsoup;\n import org.jsoup.TextUtil;\n         \n         return doc;\n     }\n+\n+    @Test\n+    public void testShiftJisRoundtrip() throws Exception {\n+        String input =\n+                \"<html>\"\n+                        +   \"<head>\"\n+                        +     \"<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=Shift_JIS\\\" />\"\n+                        +   \"</head>\"\n+                        +   \"<body>\"\n+                        +     \"before&nbsp;after\"\n+                        +   \"</body>\"\n+                        + \"</html>\";\n+        InputStream is = new ByteArrayInputStream(input.getBytes(Charset.forName(\"ASCII\")));\n+\n+        Document doc = Jsoup.parse(is, null, \"http://example.com\");\n+        doc.outputSettings().escapeMode(Entities.EscapeMode.xhtml);\n+\n+        String output = new String(doc.html().getBytes(doc.outputSettings().charset()), doc.outputSettings().charset());\n+\n+        assertFalse(\"Should not have contained a '?'.\", output.contains(\"?\"));\n+        assertTrue(\"Should have contained a '&#xa0;' or a '&nbsp;'.\",\n+                output.contains(\"&#xa0;\") || output.contains(\"&nbsp;\"));\n+    }\n }", "timestamp": 1436165123, "metainfo": ""}