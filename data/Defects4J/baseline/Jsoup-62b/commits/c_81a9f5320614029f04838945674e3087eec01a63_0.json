{"sha": "81a9f5320614029f04838945674e3087eec01a63", "log": "Attempt fix for #77. Add support for # 'protocol'.", "commit": "\n--- a/src/main/java/org/jsoup/safety/Whitelist.java\n+++ b/src/main/java/org/jsoup/safety/Whitelist.java\n             attr.setValue(value);\n         \n         for (Protocol protocol : protocols) {\n-            String prot = protocol.toString() + \":\";\n+            String prot = protocol.toString();\n+\n+            if (prot.equals(\"#\")) {\n+                if (isValidAnchor(value)) {\n+                    return true;\n+                } else {\n+                    continue;\n+                }\n+            }\n+\n+            prot += \":\";\n+\n             if (value.toLowerCase().startsWith(prot)) {\n                 return true;\n             }\n         }\n         return false;\n+    }\n+\n+    private boolean isValidAnchor(String value) {\n+        return value.startsWith(\"#\") && !value.matches(\".*\\\\s.*\");\n     }\n \n     Attributes getEnforcedAttributes(String tagName) {\n--- a/src/test/java/org/jsoup/safety/CleanerTest.java\n+++ b/src/test/java/org/jsoup/safety/CleanerTest.java\n         String h = \"<A HREF=\\\"javascript:document.location='http://www.google.com/'\\\">XSS</A>\";\n         String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n         assertEquals(\"<a>XSS</a>\", cleanHtml);\n+    }\n+\n+    @Test public void testCleanAnchorProtocol() {\n+        String validAnchor = \"<a href=\\\"#valid\\\">Valid anchor</a>\";\n+        String invalidAnchor = \"<a href=\\\"#anchor with spaces\\\">Invalid anchor</a>\";\n+\n+        // A Whitelist that does not allow anchors will strip them out.\n+        String cleanHtml = Jsoup.clean(validAnchor, Whitelist.relaxed());\n+        assertEquals(\"<a>Valid anchor</a>\", cleanHtml);\n+\n+        cleanHtml = Jsoup.clean(invalidAnchor, Whitelist.relaxed());\n+        assertEquals(\"<a>Invalid anchor</a>\", cleanHtml);\n+\n+        // A Whitelist that allows them will keep them.\n+        Whitelist relaxedWithAnchor = Whitelist.relaxed().addProtocols(\"a\", \"href\", \"#\");\n+\n+        cleanHtml = Jsoup.clean(validAnchor, relaxedWithAnchor);\n+        assertEquals(validAnchor, cleanHtml);\n+\n+        // An invalid anchor is never valid.\n+        cleanHtml = Jsoup.clean(invalidAnchor, relaxedWithAnchor);\n+        assertEquals(\"<a>Invalid anchor</a>\", cleanHtml);\n     }\n \n     @Test public void testDropsUnknownTags() {", "timestamp": 1406144638, "metainfo": ""}