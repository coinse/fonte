{"sha": "00c8d2b7623259246c4eb5df63494c6b42c08f85", "log": "Enable charset override  Fixes #743.", "commit": "\n--- a/src/main/java/org/jsoup/Connection.java\n+++ b/src/main/java/org/jsoup/Connection.java\n         String statusMessage();\n \n         /**\n-         * Get the character set name of the response.\n+         * Get the character set name of the response, derived from the content-type header.\n          * @return character set name\n          */\n         String charset();\n+\n+        /**\n+         * Set / override the response character set. When the document body is parsed it will be with this charset.\n+         * @param charset to decode body as\n+         * @return this Response, for chaining\n+         */\n+        Response charset(String charset);\n \n         /**\n          * Get the response content type (e.g. \"text/html\");\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n \n         public String charset() {\n             return charset;\n+        }\n+\n+        public Response charset(String charset) {\n+            this.charset = charset;\n+            return this;\n         }\n \n         public String contentType() {\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n         Connection con = Jsoup.connect(\"http://direct.infohound.net/tools/307.pl\"); // http://jsoup.org\n         Document doc = con.get();\n         assertTrue(doc.title().contains(\"jsoup\"));\n-        assertEquals(\"https://jsoup.org\", con.response().url().toString());\n+        assertEquals(\"https://jsoup.org/\", con.response().url().toString());\n     }\n \n     @Test\n                 .data(\"Argument\", \"Riposte\")\n                 .method(Connection.Method.POST);\n         Connection.Response res = con.execute();\n-        assertEquals(\"https://jsoup.org\", res.url().toExternalForm());\n+        assertEquals(\"https://jsoup.org/\", res.url().toExternalForm());\n         assertEquals(Connection.Method.GET, res.method());\n     }\n \n         Connection con = Jsoup.connect(\"http://direct.infohound.net/tools/302.pl\").followRedirects(false);\n         Connection.Response res = con.execute();\n         assertEquals(302, res.statusCode());\n-        assertEquals(\"https://jsoup.org\", res.header(\"Location\"));\n+        assertEquals(\"http://jsoup.org\", res.header(\"Location\"));\n     }\n \n     @Test\n     @Test\n     public void handles201Created() throws IOException {\n         Document doc = Jsoup.connect(\"http://direct.infohound.net/tools/201.pl\").get(); // 201, location=jsoup\n-        assertEquals(\"https://jsoup.org\", doc.location());\n+        assertEquals(\"https://jsoup.org/\", doc.location());\n     }\n \n     @Test\n         }\n         assertTrue(caught);\n     }\n+\n+    @Test\n+    public void canSpecifyResponseCharset() throws IOException {\n+        // both these docs have <80> in there as euro/control char depending on charset\n+        String noCharsetUrl = \"http://direct.infohound.net/tools/Windows-1252-nocharset.html\";\n+        String charsetUrl = \"http://direct.infohound.net/tools/Windows-1252-charset.html\";\n+\n+        // included in meta\n+        Connection.Response res1 = Jsoup.connect(charsetUrl).execute();\n+        assertEquals(null, res1.charset()); // not set in headers\n+        final Document doc1 = res1.parse();\n+        assertEquals(\"windows-1252\", doc1.charset().displayName()); // but determined at parse time\n+        assertEquals(\"Cost is \u20ac100\", doc1.select(\"p\").text());\n+        assertTrue(res1.body().contains(\"\u20ac\"));\n+\n+        // no meta, no override\n+        Connection.Response res2 = Jsoup.connect(noCharsetUrl).execute();\n+        assertEquals(null, res2.charset()); // not set in headers\n+        final Document doc2 = res2.parse();\n+        assertEquals(\"UTF-8\", doc2.charset().displayName()); // so defaults to utf-8\n+        assertEquals(\"Cost is \ufffd100\", doc2.select(\"p\").text());\n+        assertTrue(res2.body().contains(\"\ufffd\"));\n+\n+        // no meta, let's override\n+        Connection.Response res3 = Jsoup.connect(noCharsetUrl).execute();\n+        assertEquals(null, res3.charset()); // not set in headers\n+        res3.charset(\"windows-1252\");\n+        assertEquals(\"windows-1252\", res3.charset()); // read back\n+        final Document doc3 = res3.parse();\n+        assertEquals(\"windows-1252\", doc3.charset().displayName()); // from override\n+        assertEquals(\"Cost is \u20ac100\", doc3.select(\"p\").text());\n+        assertTrue(res3.body().contains(\"\u20ac\"));\n+    }\n }", "timestamp": 1471204318, "metainfo": ""}