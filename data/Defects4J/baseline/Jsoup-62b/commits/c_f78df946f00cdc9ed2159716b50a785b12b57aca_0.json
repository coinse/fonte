{"sha": "f78df946f00cdc9ed2159716b50a785b12b57aca", "log": "Node.root()", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n      * @return if this element matches\n      */\n     public boolean is(Evaluator evaluator) {\n-        return evaluator.matches(this.ownerDocument(), this);\n+        return evaluator.matches((Element)this.root(), this);\n     }\n     \n     /**\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n     public final Node parentNode() {\n         return parentNode;\n     }\n+\n+    /**\n+     * Get this node's root node; that is, its topmost ancestor. If this node is the top ancestor, returns {@code this}.\n+     * @return topmost ancestor.\n+     */\n+    public Node root() {\n+        Node node = this;\n+        while (node.parentNode != null)\n+            node = node.parentNode;\n+        return node;\n+    }\n     \n     /**\n      * Gets the Document associated with this Node. \n      * @return the Document associated with this Node, or null if there is no such Document.\n      */\n     public Document ownerDocument() {\n-        Node node = this;\n-        while (true) {\n-            if (node instanceof Document)\n-                return (Document) node;\n-            else if (node.parentNode == null)\n-                return null;\n-            else\n-                node = node.parentNode;\n-        }\n+        Node root = root();\n+        return (root instanceof Document) ? (Document) root : null;\n     }\n     \n     /**\n \n     // if this node has no document (or parent), retrieve the default output settings\n     Document.OutputSettings getOutputSettings() {\n-        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();\n+        Document owner = ownerDocument();\n+        return owner != null ? owner.outputSettings() : (new Document(\"\")).outputSettings();\n     }\n \n     /**\n--- a/src/test/java/org/jsoup/nodes/NodeTest.java\n+++ b/src/test/java/org/jsoup/nodes/NodeTest.java\n         assertTrue(p.ownerDocument() == doc);\n         assertTrue(doc.ownerDocument() == doc);\n         assertNull(doc.parent());\n+    }\n+\n+    @Test public void root() {\n+        Document doc = Jsoup.parse(\"<div><p>Hello\");\n+        Element p = doc.select(\"p\").first();\n+        Node root = p.root();\n+        assertTrue(doc == root);\n+        assertNull(root.parent());\n+        assertTrue(doc.root() == doc);\n+        assertTrue(doc.root() == doc.ownerDocument());\n+\n+        Element standAlone = new Element(Tag.valueOf(\"p\"), \"\");\n+        assertTrue(standAlone.parent() == null);\n+        assertTrue(standAlone.root() == standAlone);\n+        assertTrue(standAlone.ownerDocument() == null);\n     }\n \n     @Test public void before() {", "timestamp": 1477787156, "metainfo": ""}