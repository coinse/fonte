{"sha": "7aa1d0f6aa144d04389eab2faab603c853b23909", "log": "Reusing the JsonNull instance everywhere instead of recreating it. This is a minor optimization, which is possible because JsonNull is a stateless object.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonNull.java\n+++ b/gson/src/main/java/com/google/gson/JsonNull.java\n  */\n public final class JsonNull extends JsonElement {\n \n+  static final JsonNull INSTANCE = new JsonNull();\n+  \n   @Override\n   protected void toString(StringBuilder sb) {\n     sb.append(\"null\");\n--- a/gson/src/main/java/com/google/gson/JsonParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonParser.java\n   }\n \n   final private JsonNull JsonNull() throws ParseException {\n-  JsonNull json = new JsonNull();\n+  JsonNull json = JsonNull.INSTANCE;\n     jj_consume_token(22);\n     {if (true) return json;}\n     throw new Error(\"Missing return statement in function\");\n--- a/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n   public void visitArrayField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.INSTANCE);\n       }\n     } else {\n       Object array = getFieldValue(f, obj);\n   public void visitCollectionField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.INSTANCE);\n       }\n     } else {\n       if (typeOfF == null) {\n   public void visitObjectField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.INSTANCE);\n       }\n     } else {\n       Object fieldValue = getFieldValue(f, obj);\n   public void visitPrimitiveField(Field f, Type typeOfF, Object obj) {    \n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n-        addChildAsElement(f, new JsonNull());\n+        addChildAsElement(f, JsonNull.INSTANCE);\n       }      \n     } else {\n       TypeInfo typeInfo = new TypeInfo(typeOfF);", "timestamp": 1224880522, "metainfo": ""}