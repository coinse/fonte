{"sha": "59edfc1caf2bb30e30f523f8502f23e8f8edc38e", "log": "Add boxed boolean value() overload.  When calling value() with a Boolean overload resolution would choose value(boolean) which would throw an NPE on null. The other boxed types are all numbers which would resolve to value(Number) and behave correctly.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java\n     return this;\n   }\n \n+  @Override public JsonWriter value(Boolean value) throws IOException {\n+    if (value == null) {\n+      return nullValue();\n+    }\n+    put(new JsonPrimitive(value));\n+    return this;\n+  }\n+\n   @Override public JsonWriter value(double value) throws IOException {\n     if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {\n       throw new IllegalArgumentException(\"JSON forbids NaN and infinities: \" + value);\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n     }\n     @Override\n     public void write(JsonWriter out, Boolean value) throws IOException {\n-      if (value == null) {\n-        out.nullValue();\n-        return;\n-      }\n       out.value(value);\n     }\n   };\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n   /**\n    * Encodes {@code value}.\n    *\n+   * @return this writer.\n+   */\n+  public JsonWriter value(Boolean value) throws IOException {\n+    if (value == null) {\n+      return nullValue();\n+    }\n+    writeDeferredName();\n+    beforeValue();\n+    out.write(value ? \"true\" : \"false\");\n+    return this;\n+  }\n+\n+  /**\n+   * Encodes {@code value}.\n+   *\n    * @param value a finite value. May not be {@link Double#isNaN() NaNs} or\n    *     {@link Double#isInfinite() infinities}.\n    * @return this writer.\n--- a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n     jsonWriter.value(false);\n     jsonWriter.endArray();\n     assertEquals(\"[true,false]\", stringWriter.toString());\n+  }\n+\n+  public void testBoxedBooleans() throws IOException {\n+    StringWriter stringWriter = new StringWriter();\n+    JsonWriter jsonWriter = new JsonWriter(stringWriter);\n+    jsonWriter.beginArray();\n+    jsonWriter.value((Boolean) true);\n+    jsonWriter.value((Boolean) false);\n+    jsonWriter.value((Boolean) null);\n+    jsonWriter.endArray();\n+    assertEquals(\"[true,false,null]\", stringWriter.toString());\n   }\n \n   public void testNulls() throws IOException {", "timestamp": 1461369158, "metainfo": ""}