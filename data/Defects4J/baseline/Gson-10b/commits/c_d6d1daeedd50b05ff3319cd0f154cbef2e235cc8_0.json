{"sha": "d6d1daeedd50b05ff3319cd0f154cbef2e235cc8", "log": "Submitting @Expose tests with interfaces.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java\n \n package com.google.gson.functional;\n \n+import java.lang.reflect.Type;\n+\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n+import com.google.gson.InstanceCreator;\n import com.google.gson.annotations.Expose;\n \n import junit.framework.TestCase;\n   @Override\n   protected void setUp() throws Exception {\n     super.setUp();\n-    gson = new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create();\n+    gson = new GsonBuilder()\n+        .excludeFieldsWithoutExposeAnnotation()\n+        .registerTypeAdapter(SomeInterface.class, new SomeInterfaceInstanceCreator())\n+        .create();\n   }\n \n   public void testNullExposeFieldSerialization() throws Exception {\n     assertEquals(0, obj.a);\n     assertEquals(1, obj.b);\n   }\n+  \n+  public void testExposedInterfaceFieldSerialization() throws Exception {\n+    String expected = \"{\\\"interfaceField\\\":{}}\";\n+    ClassWithInterfaceField target = new ClassWithInterfaceField(new SomeObject());\n+    String actual = gson.toJson(target);\n+    \n+    assertEquals(expected, actual);\n+  }\n+  \n+  public void testExposedInterfaceFieldDeserialization() throws Exception {\n+    String json = \"{\\\"interfaceField\\\":{}}\";\n+    ClassWithInterfaceField obj = gson.fromJson(json, ClassWithInterfaceField.class);\n+\n+    assertNotNull(obj.interfaceField);\n+  }\n \n   private static class ClassWithExposedFields {\n     @Expose private final Integer a;\n     }\n   }\n \n-  private static class  ClassWithNoExposedFields {\n+  private static class ClassWithNoExposedFields {\n     private final int a = 0;\n     private final int b = 1;\n   }\n+  \n+  private static interface SomeInterface {\n+    // Empty interface\n+  }\n+  \n+  private static class SomeObject implements SomeInterface {\n+    // Do nothing\n+  }\n+  \n+  private static class SomeInterfaceInstanceCreator implements InstanceCreator<SomeInterface> {\n+    public SomeInterface createInstance(Type type) {\n+      return new SomeObject();\n+    }\n+  }\n+  \n+  private static class ClassWithInterfaceField {\n+    @Expose\n+    private final SomeInterface interfaceField;\n+    \n+    public ClassWithInterfaceField() {\n+      this(null);\n+    }\n+\n+    public ClassWithInterfaceField(SomeInterface interfaceField) {\n+      this.interfaceField = interfaceField;\n+    }\n+  }\n }", "timestamp": 1227736015, "metainfo": ""}