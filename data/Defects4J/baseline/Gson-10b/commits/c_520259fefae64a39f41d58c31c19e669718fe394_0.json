{"sha": "520259fefae64a39f41d58c31c19e669718fe394", "log": "removed eclipse warnings.", "commit": "\n--- a/gson/src/main/java/com/google/gson/FieldAttributes.java\n+++ b/gson/src/main/java/com/google/gson/FieldAttributes.java\n   /**\n    * This is exposed internally only for the removing synthetic fields from the JSON output.\n    *\n-   * @return true if the field is synthetic; otherwise false\n    * @throws IllegalAccessException\n    * @throws IllegalArgumentException\n    */\n--- a/wsclient/src/main/java/com/google/gson/rest/client/ResourceDepotClient.java\n+++ b/wsclient/src/main/java/com/google/gson/rest/client/ResourceDepotClient.java\n     return new RestCallSpec.Builder(callPath, resourceType).build();\n   }\n \n+  @Override\n   public R get(I resourceId) {\n     HeaderMap requestHeaders =\n       new HeaderMap.Builder(callSpec.getRequestSpec().getHeadersSpec()).build();\n     return response.getBody();\n   }\n \n+  @Override\n   public R post(R resource) {\n     HeaderMap requestHeaders =\n       new HeaderMap.Builder(callSpec.getRequestSpec().getHeadersSpec()).build();\n     return response.getBody();\n   }\n \n+  @Override\n   public R put(R resource) {\n     HeaderMap requestHeaders =\n       new HeaderMap.Builder(callSpec.getRequestSpec().getHeadersSpec()).build();\n     return response.getBody();\n   }\n \n+  @Override\n   public void delete(I resourceId) {\n     HeaderMap requestHeaders =\n       new HeaderMap.Builder(callSpec.getRequestSpec().getHeadersSpec()).build();\n--- a/wsexample/server/src/main/java/com/google/gson/wsexample/server/RestDispatcher.java\n+++ b/wsexample/server/src/main/java/com/google/gson/wsexample/server/RestDispatcher.java\n     return requestReceiver.receive(request, idFactory.createId(callPath.getResourceId()));\n   }\n \n+  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n   public void service(HttpServletRequest req, HttpServletResponse res, CallPath callPath) {\n     RestCallSpec callSpec = resourceMap.get(callPath).createCopy(callPath);\n     @SuppressWarnings(\"rawtypes\")\n--- a/wsf/src/main/java/com/google/gson/rest/server/IdMap.java\n+++ b/wsf/src/main/java/com/google/gson/rest/server/IdMap.java\n   private final IDFactory<I> idFactory;\n \n   /**\n-   * Use {@link #create(Type)} instead of constructor\n+   * Use create(Type) instead of constructor\n    */\n   protected IdMap(Class<? super I> classOfI, Type typeOfId) {\n     map = new ConcurrentHashMap<I, T>();\n--- a/wsf/src/main/java/com/google/gson/rest/server/ResponseBuilderMap.java\n+++ b/wsf/src/main/java/com/google/gson/rest/server/ResponseBuilderMap.java\n   }\n   \n   public RestResponseBuilder<?, ?> get(Type resourceType) {\n-    return (RestResponseBuilder<?, ?>)map.get(resourceType);\n+    return map.get(resourceType);\n   }\n }", "timestamp": 1289589676, "metainfo": ""}