{"sha": "6f0a6a4662c2cc692faddacd3f59fc3addc01a68", "log": "made inner classes static and final", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java\n+++ b/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java\n    * comparisons. Using this class to create a tree of size <i>S</i> is\n    * {@code O(S)}.\n    */\n-  static class AvlBuilder<K, V> {\n+  final static class AvlBuilder<K, V> {\n     /** This stack is a singly linked list, linked by the 'parent' field. */\n     private Node<K, V> stack;\n     private int leavesToSkip;\n--- a/gson/src/main/java/com/google/gson/internal/Streams.java\n+++ b/gson/src/main/java/com/google/gson/internal/Streams.java\n    * Adapts an {@link Appendable} so it can be passed anywhere a {@link Writer}\n    * is used.\n    */\n-  private static class AppendableWriter extends Writer {\n+  private static final class AppendableWriter extends Writer {\n     private final Appendable appendable;\n     private final CurrentWrite currentWrite = new CurrentWrite();\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java\n     abstract void read(JsonReader reader, Object value) throws IOException, IllegalAccessException;\n   }\n \n-  public final class Adapter<T> extends TypeAdapter<T> {\n+  public static final class Adapter<T> extends TypeAdapter<T> {\n     private final ObjectConstructor<T> constructor;\n     private final Map<String, BoundField> boundFields;\n ", "timestamp": 1365798053, "metainfo": ""}