{"sha": "6825477d75b45e724c6f91bb9f11d2cc5df1ff20", "log": "Added a method to retrieve a Rest Response with a provided HTTP URL Connection.", "commit": "\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/RestClient.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/RestClient.java\n         logger.log(logLevel, \"Opening connection to \" + webServiceUrl);\n       }\n       conn = (HttpURLConnection) webServiceUrl.openConnection();\n+      return getResponse(callSpec, request, gson, conn);\n+    } catch (IOException e) {\n+      throw new WebServiceSystemException(e);\n+    } finally {\n+      closeIgnoringErrors(conn);\n+    }\n+  }\n+\n+  /**\n+   * Use this method if you want to mange the HTTP Connection yourself. This is useful when you\n+   * want to use HTTP pipelining.\n+   */\n+  public <R> RestResponse<R> getResponse(\n+      RestCallSpec<R> callSpec, RestRequest<R> request, Gson gson, HttpURLConnection conn) {\n+    try {\n+      if (logger != null) {\n+        URL webServiceUrl = getWebServiceUrl(callSpec);\n+        logger.log(logLevel, \"Opening connection to \" + webServiceUrl);\n+      }\n       RestRequestSender requestSender = new RestRequestSender(gson, logLevel);\n       requestSender.send(conn, request);\n       RestResponseReceiver<R> responseReceiver =\n         new RestResponseReceiver<R>(gson, callSpec.getResponseSpec(), logLevel);\n       return responseReceiver.receive(conn);\n-    } catch (IOException e) {\n-      throw new WebServiceSystemException(e);\n     } catch (IllegalArgumentException e) {\n       throw new WebServiceSystemException(e);\n-    } finally {\n-      closeIgnoringErrors(conn);\n     }\n   }\n   ", "timestamp": 1285850706, "metainfo": ""}