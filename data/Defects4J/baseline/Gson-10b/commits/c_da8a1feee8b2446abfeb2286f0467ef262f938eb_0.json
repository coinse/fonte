{"sha": "da8a1feee8b2446abfeb2286f0467ef262f938eb", "log": "Added tests for the bugreport http://code.google.com/p/google-gson/issues/detail?id=99", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n \n package com.google.gson.functional;\n \n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.InstanceCreator;\n+import com.google.gson.reflect.TypeToken;\n+\n+import junit.framework.TestCase;\n+\n import java.lang.reflect.Type;\n import java.util.Collection;\n import java.util.LinkedHashMap;\n import java.util.Map;\n-\n-import junit.framework.TestCase;\n-\n-import com.google.gson.Gson;\n-import com.google.gson.GsonBuilder;\n-import com.google.gson.InstanceCreator;\n-import com.google.gson.reflect.TypeToken;\n+import java.util.TreeMap;\n \n /**\n  * Functional test for Json serialization and deserialization for Maps\n     assertEquals(\"2\", map.get(\"b\")); \n   }\n   \n+  /**\n+   * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99\n+   */\n+  private static class ClassWithAMap {\n+    Map<String, String> map = new TreeMap<String, String>();\n+  }\n+  \n+  /**\n+   * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99\n+   */\n+  public void testMapSerializationWithNullValues() {\n+    ClassWithAMap target = new ClassWithAMap();\n+    target.map.put(\"name1\", null);\n+    target.map.put(\"name2\", \"value2\");\n+    String json = gson.toJson(target);\n+    assertFalse(json.contains(\"name1\"));\n+    assertTrue(json.contains(\"name2\"));\n+  }\n+  \n+  /**\n+   * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99\n+   */\n+  public void testMapSerializationWithNullValuesSerialized() {\n+    Gson gson = new GsonBuilder().serializeNulls().create();\n+    ClassWithAMap target = new ClassWithAMap();\n+    target.map.put(\"name1\", null);\n+    target.map.put(\"name2\", \"value2\");\n+    String json = gson.toJson(target);\n+    assertTrue(json.contains(\"name1\"));\n+    assertTrue(json.contains(\"name2\"));\n+  }\n+  \n   public void testMapSerializationWithWildcardValues() {\n     Map<String, ? extends Collection<? extends Integer>> map =\n         new LinkedHashMap<String, Collection<Integer>>();", "timestamp": 1236114547, "metainfo": ""}