{"sha": "6fa09b5ef6177cf899c96c839af936af69650efe", "log": "Removed specialized handling of Enum types with the EnumTypeAdapter", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java\n   protected abstract T constructTarget();\n \n   @SuppressWarnings(\"unchecked\")\n-  public final void visitEnum(Object obj, Type objType) {\n-    JsonDeserializer<T> deserializer = (JsonDeserializer<T>) deserializers.getHandlerFor(objType);\n-    if (deserializer == null) {\n-      deserializer =  (JsonDeserializer<T>) deserializers.getHandlerFor(Enum.class);\n-    }\n-    if (deserializer == null) {\n-      throw new RuntimeException(\"Register a JsonDeserializer for Enum or \"\n-          + obj.getClass().getName());\n-    }\n-    target = deserializer.deserialize(json, objType, context);\n-  }\n-\n-  @SuppressWarnings(\"unchecked\")\n   public final boolean visitUsingCustomHandler(Object obj, Type objType) {\n     JsonDeserializer deserializer = deserializers.getHandlerFor(objType);\n     if (deserializer != null) {\n--- a/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n     }\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n-  public void visitEnum(Object obj, Type objType) {\n-    JsonSerializer serializer = serializers.getHandlerFor(objType);\n-    if (serializer == null) {\n-      serializer = serializers.getHandlerFor(Enum.class);\n-    }\n-    if (serializer == null) {\n-      throw new RuntimeException(\"Register a JsonSerializer for Enum or \"\n-          + obj.getClass().getName());\n-    }\n-    assignToRoot(serializer.serialize(obj, objType, context));\n-  }\n-\n   public void visitObjectField(Field f, Type typeOfF, Object obj) {\n     if (isFieldNull(f, obj)) {\n       if (serializeNulls) {\n--- a/gson/src/main/java/com/google/gson/ObjectNavigator.java\n+++ b/gson/src/main/java/com/google/gson/ObjectNavigator.java\n     void visitPrimitiveField(Field f, Type typeOfF, Object obj);\n \n     /**\n-     * This is called to visit an enum object\n-     */\n-    public void visitEnum(Object obj, Type objType);\n-\n-    /**\n      * This is called to visit an object using a custom handler\n      * @return true if a custom handler exists, false otherwise\n      */\n       if (!visitedWithCustomHandler) {\n         if (objTypeInfo.isArray()) {\n           visitor.visitArray(obj, objType);\n-        } else if (objTypeInfo.isEnum()) {\n-          visitor.visitEnum(obj, objType);\n         } else if (objTypeInfo.isPrimitiveOrStringAndNotAnArray()) {\n           visitor.visitPrimitiveValue(obj);\n         } else {\n--- a/gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java\n+++ b/gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java\n           handler = map.get(Map.class);\n         } else if (Collection.class.isAssignableFrom(rawClass)) {\n           handler = map.get(Collection.class);\n+        } else if (Enum.class.isAssignableFrom(rawClass)) {\n+          handler = map.get(Enum.class);\n         }\n       }\n     }", "timestamp": 1226630279, "metainfo": ""}