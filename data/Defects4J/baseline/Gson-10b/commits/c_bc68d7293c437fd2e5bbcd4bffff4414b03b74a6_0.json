{"sha": "bc68d7293c437fd2e5bbcd4bffff4414b03b74a6", "log": "Comment clean up.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n \n     ConstructorConstructor constructorConstructor = new ConstructorConstructor();\n     List<TypeAdapter.Factory> factories = new ArrayList<TypeAdapter.Factory>();\n+\n+    // built-in type adapters that cannot be overridden\n     factories.add(TypeAdapters.STRING_FACTORY);\n     factories.add(TypeAdapters.INTEGER_FACTORY);\n     factories.add(TypeAdapters.BOOLEAN_FACTORY);\n     factories.add(TypeAdapters.JSON_ELEMENT_FACTORY);\n     factories.add(ObjectTypeAdapter.FACTORY);\n \n-    for (TypeAdapter.Factory factory : typeAdapterFactories) {\n-      factories.add(factory);\n-    }\n-\n+    // user's type adapters\n+    factories.addAll(typeAdapterFactories);\n+\n+    // built-in type adapters that can be overridden\n     factories.add(new CollectionTypeAdapterFactory(constructorConstructor));\n     factories.add(TypeAdapters.URL_FACTORY);\n     factories.add(TypeAdapters.URI_FACTORY);\n       }\n       @Override public void write(JsonWriter writer, Number value) throws IOException {\n         if (value == null) {\n-          writer.nullValue(); // TODO: better policy here?\n+          writer.nullValue();\n           return;\n         }\n         double doubleValue = value.doubleValue();\n       }\n       @Override public void write(JsonWriter writer, Number value) throws IOException {\n         if (value == null) {\n-          writer.nullValue(); // TODO: better policy here?\n+          writer.nullValue();\n           return;\n         }\n         float floatValue = value.floatValue();\n       }\n       @Override public void write(JsonWriter writer, Number value) throws IOException {\n         if (value == null) {\n-          writer.nullValue(); // TODO: better policy here?\n+          writer.nullValue();\n           return;\n         }\n         writer.value(value.toString());\n   \tStringBuilder sb = new StringBuilder(\"{\")\n   \t    .append(\"serializeNulls:\").append(serializeNulls)\n   \t    .append(\"factories:\").append(factories)\n-      \t// using the name instanceCreator instead of ObjectConstructor since the users of Gson are\n-      \t// more familiar with the concept of Instance Creators. Moreover, the objectConstructor is\n-      \t// just a utility class around instance creators, and its toString() only displays them.\n         .append(\",instanceCreators:\").append(constructorConstructor)\n         .append(\"}\");\n   \treturn sb.toString();", "timestamp": 1322055546, "metainfo": ""}