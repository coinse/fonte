{"sha": "1ab73ffd21d8c08bbe734154921a936e4a8cb091", "log": "incorporated code review feedback by eliminating the stringified type adapter.", "commit": "\n--- a/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java\n+++ b/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java\n  */\n package com.google.gson.regression;\n \n-import java.io.IOException;\n-import java.util.Objects;\n-\n import com.google.gson.Gson;\n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonParser;\n-import com.google.gson.JsonPrimitive;\n-import com.google.gson.JsonSyntaxException;\n import com.google.gson.TypeAdapter;\n import com.google.gson.TypeAdapterFactory;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.reflect.TypeToken;\n-import com.google.gson.stream.JsonReader;\n-import com.google.gson.stream.JsonWriter;\n \n import junit.framework.TestCase;\n \n public class JsonAdapterNullSafeTest extends TestCase {\n-  // The recursiveCall in {@link Device.JsonAdapterFactory} is the source of this bug\n-  // because it returns a null type adapter.\n-\n   private final Gson gson = new Gson();\n \n   public void testNullSafeBugSerialize() throws Exception {\n-    Device device = new Device(\"ec57803e\", 2);\n+    Device device = new Device(\"ec57803e\");\n     gson.toJson(device);\n   }\n \n   public void testNullSafeBugDeserialize() throws Exception {\n-    String json = \"\\\"{\\\\\\\"id\\\\\\\":\\\\\\\"ec57803e2\\\\\\\",\\\\\\\"category\\\\\\\":2}\\\"\";\n-    Device device = gson.fromJson(json, Device.class);\n+    Device device = gson.fromJson(\"{'id':'ec57803e2'}\", Device.class);\n     assertEquals(\"ec57803e2\", device.id);\n-    assertEquals(2, device.category);\n   }\n \n   @JsonAdapter(Device.JsonAdapterFactory.class)\n   private static final class Device {\n     String id;\n-    int category;\n-    Device(String id, int category) {\n+    Device(String id) {\n       this.id = id;\n-      this.category = category;\n     }\n \n-    /**\n-     * Write the value as a String, not JSON.\n-     */\n     static final class JsonAdapterFactory implements TypeAdapterFactory {\n+      // The recursiveCall in {@link Device.JsonAdapterFactory} is the source of this bug\n+      // because we use it to return a null type adapter on a recursive call.\n       private static final ThreadLocal<Boolean> recursiveCall = new ThreadLocal<Boolean>();\n \n       @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n           return null;\n         }\n         recursiveCall.set(Boolean.TRUE);\n-        final TypeAdapter<Device> delegate = (TypeAdapter) gson.getDelegateAdapter(this, type);\n-        return (TypeAdapter) new TypeAdapter<Device>() {\n-          @Override public void write(JsonWriter out, Device value) throws IOException {\n-            delegate.write(out, value);\n-          }\n-          @Override public Device read(JsonReader in) throws IOException {\n-            String json = in.nextString();\n-            JsonParser parser = new JsonParser();\n-            JsonElement root = parseString(parser, json, null);\n-            return root == null ? null : delegate.fromJsonTree(root);\n-          }\n-          private JsonElement parseString(JsonParser parser, String json, String prevJson)\n-              throws IOException { // called recursively\n-            JsonElement root = parser.parse(json);\n-            if (root instanceof JsonPrimitive) {\n-              prevJson = json;\n-              json = root.getAsString();\n-              if (Objects.equals(json, prevJson)) {\n-                throw new JsonSyntaxException(\"Unexpected Json: \" + json);\n-              }\n-              return parseString(parser, json, prevJson);\n-            }\n-            return root;\n-          }\n-        };\n+        return (TypeAdapter) gson.getDelegateAdapter(this, type);\n       }\n     }\n   }", "timestamp": 1456507523, "metainfo": ""}