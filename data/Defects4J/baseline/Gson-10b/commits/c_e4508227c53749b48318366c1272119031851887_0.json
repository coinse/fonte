{"sha": "e4508227c53749b48318366c1272119031851887", "log": "Added test to use BigDecimal to parse number when requesting it as a long.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n+++ b/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java\n       try {\n         return (int) Long.parseLong(value);\n       } catch (NumberFormatException nfe) {\n-        return new BigInteger(value).intValue(); \n+        return new BigDecimal(value).intValue();\n       }\n     }\n   }\n     try {\n       return Long.parseLong(value);\n     } catch (NumberFormatException e) {\n-      return new BigInteger(value).longValue(); \n+      return new BigDecimal(value).longValue();\n     }\n   }\n \n--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n     expected = new Long(json);\n     actual = gson.fromJson(json, Number.class);\n     assertEquals(expected.longValue(), actual.longValue());\n+\n+    json = \"1.0\";\n+    actual = gson.fromJson(json, Number.class);\n+    assertEquals(1L, actual.longValue());\n   }\n \n   public void testPrimitiveDoubleAutoboxedSerialization() {", "timestamp": 1368477453, "metainfo": ""}