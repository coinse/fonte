{"sha": "a7e9ac36123ad66ec4ac9a7dff3197276b55d5d1", "log": "Don't support oversized values like 30-character integers", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n \n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n-import com.google.gson.JsonParseException;\n import com.google.gson.JsonPrimitive;\n import com.google.gson.JsonSyntaxException;\n import com.google.gson.LongSerializationPolicy;\n-import com.google.gson.common.TestTypes.CrazyLongTypeAdapter;\n-\n-import junit.framework.TestCase;\n-\n import java.io.Serializable;\n import java.io.StringReader;\n import java.math.BigDecimal;\n import java.math.BigInteger;\n+import junit.framework.TestCase;\n \n /**\n  * Functional tests for Json primitive values: integers, and floating point numbers.\n   }\n \n   public void testDeserializingBigIntegerAsInteger() {\n-    String bigIntegerValue = \"12121211243123245845384534687435634558945453489543985435\";\n-    int actual = gson.fromJson(bigIntegerValue, Integer.class);\n-    int expected = new BigInteger(bigIntegerValue).and(MAX_INT_VALUE).intValue();\n-    assertEquals(expected, actual);\n+    try {\n+      gson.fromJson(\"12121211243123245845384534687435634558945453489543985435\", Integer.class);\n+      fail();\n+    } catch (JsonSyntaxException expected) {\n+    }\n   }\n \n   public void testDeserializingBigIntegerAsLong() {\n-    String bigIntegerValue = \"12121211243123245845384534687435634558945453489543985435\";\n-    long actual = gson.fromJson(bigIntegerValue, long.class);\n-    long expected = new BigInteger(bigIntegerValue).and(MAX_LONG_VALUE).longValue();\n-    assertEquals(expected, actual);\n+    try {\n+      gson.fromJson(\"12121211243123245845384534687435634558945453489543985435\", Long.class);\n+      fail();\n+    } catch (JsonSyntaxException expected) {\n+    }\n   }\n \n   public void testDeserializingBigDecimalAsLongFails() {", "timestamp": 1315545119, "metainfo": ""}