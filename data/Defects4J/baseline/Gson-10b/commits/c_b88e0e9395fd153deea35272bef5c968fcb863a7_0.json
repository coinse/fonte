{"sha": "b88e0e9395fd153deea35272bef5c968fcb863a7", "log": "Test to expose edge doubling and rehashing bug in LinkedHashTreeMap.", "commit": "\n--- a/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java\n import com.google.gson.internal.LinkedHashTreeMap.AvlBuilder;\n import com.google.gson.internal.LinkedHashTreeMap.AvlIterator;\n import com.google.gson.internal.LinkedHashTreeMap.Node;\n+\n import junit.framework.TestCase;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.Random;\n \n public final class LinkedHashTreeMapTest extends TestCase {\n   public void testIterationOrder() {\n     assertFalse(map.containsKey(new Object()));\n   }\n \n-  public void testContainsNullKeyFails() {\n+  public void testContainsNullKeyIsAlwaysFalse() {\n     LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();\n     map.put(\"a\", \"android\");\n     assertFalse(map.containsKey(null));\n+  }\n+\n+  public void testPutOverrides() throws Exception {\n+    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();\n+    assertNull(map.put(\"d\", \"donut\"));\n+    assertNull(map.put(\"e\", \"eclair\"));\n+    assertNull(map.put(\"f\", \"froyo\"));\n+    assertEquals(3, map.size());\n+\n+    assertEquals(\"donut\", map.get(\"d\"));\n+    assertEquals(\"donut\", map.put(\"d\", \"done\"));\n+    assertEquals(3, map.size());\n+  }\n+\n+  public void testEmptyStringValues() {\n+    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();\n+    map.put(\"a\", \"\");\n+    assertTrue(map.containsKey(\"a\"));\n+    assertEquals(\"\", map.get(\"a\"));\n+  }\n+\n+  // NOTE that this does not happen every time, but given the below predictable random,\n+  // this test will consistently fail (assuming the initial size is 16 and rehashing\n+  // size remains at 3/4)\n+  public void testForceDoublingAndRehash() throws Exception {\n+    Random random = new Random(1367593214724L);\n+    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();\n+    String[] keys = new String[1000];\n+    for (int i = 0; i < keys.length; i++) {\n+      keys[i] = Integer.toString(Math.abs(random.nextInt()), 36) + \"-\" + i;\n+      map.put(keys[i], \"\" + i);\n+    }\n+\n+    for (int i = 0; i < keys.length; i++) {\n+      String key = keys[i];\n+      assertTrue(map.containsKey(key));\n+      assertEquals(\"\" + i, map.get(key));\n+    }\n   }\n \n   public void testClear() {", "timestamp": 1367594010, "metainfo": ""}