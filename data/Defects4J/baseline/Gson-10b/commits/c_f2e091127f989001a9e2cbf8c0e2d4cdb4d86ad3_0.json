{"sha": "f2e091127f989001a9e2cbf8c0e2d4cdb4d86ad3", "log": "An initial sketch to support queries for REST resources", "commit": "\n--- a/wsclient/src/main/java/com/google/gson/rest/client/ResourceDepotClient.java\n+++ b/wsclient/src/main/java/com/google/gson/rest/client/ResourceDepotClient.java\n  *\n  * @author Inderjeet Singh\n  */\n-public class ResourceDepotClient<I extends ID, R extends RestResource<I, R>> implements ResourceDepot<I, R> {\n+public class ResourceDepotClient<I extends ID, R extends RestResource<I, R>>\n+    implements ResourceDepot<I, R> {\n   private final RestClientStub stub;\n   private final RestCallSpec callSpec;\n   private final Type resourceType;\n--- /dev/null\n+++ b/wsclient/src/main/java/com/google/gson/rest/query/client/ResourceQueryClient.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.rest.query.client;\n+\n+import java.util.List;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.rest.definition.ID;\n+import com.google.gson.rest.definition.RestResource;\n+import com.google.gson.rest.query.ResourceQuery;\n+import com.google.gson.rest.query.TypedKeysQuery;\n+import com.google.gson.webservice.client.WebServiceClient;\n+import com.google.gson.webservice.definition.CallPath;\n+import com.google.gson.webservice.definition.HeaderMap;\n+import com.google.gson.webservice.definition.HttpMethod;\n+import com.google.gson.webservice.definition.procedural.RequestBody;\n+import com.google.gson.webservice.definition.procedural.ResponseBody;\n+import com.google.gson.webservice.definition.procedural.WebServiceCallSpec;\n+import com.google.gson.webservice.definition.procedural.WebServiceRequest;\n+import com.google.gson.webservice.definition.procedural.WebServiceResponse;\n+\n+/**\n+ * A client to invoke {@link ResourceQuery}s associated with a REST resource\n+ * \n+ * @author Inderjeet Singh\n+ *\n+ * @param <I> ID type of the REST resource\n+ * @param <R> type of the REST resource\n+ * @param <Q> Query parameters\n+ */\n+public class ResourceQueryClient<I extends ID, R extends RestResource<I, R>, Q>\n+    implements ResourceQuery<I, R, Q> {\n+\n+  private final WebServiceClient stub;\n+  private final WebServiceCallSpec callSpec;\n+  private final Gson gson;\n+\n+  /**\n+   * @param stub stub containing server info to access the rest client\n+   * @param callPath relative path to the resource\n+   */\n+  public ResourceQueryClient(WebServiceClient stub, CallPath callPath, Gson gson) {\n+    this(stub, generateCallSpec(callPath), gson);\n+  }\n+\n+  protected ResourceQueryClient(WebServiceClient stub, WebServiceCallSpec callSpec, Gson gson) {\n+    this.stub = stub;\n+    this.callSpec = callSpec;\n+    this.gson = gson;\n+  }\n+\n+  private static <T> WebServiceCallSpec generateCallSpec(CallPath callPath) {\n+    return new WebServiceCallSpec.Builder(callPath).supportsHttpMethod(HttpMethod.GET).build();\n+  }\n+\n+  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+  @Override\n+  public List<R> query(Q query) {\n+    HeaderMap requestHeaders =\n+      new HeaderMap.Builder(callSpec.getRequestSpec().getHeadersSpec()).build();\n+    RequestBody requestBody =\n+      new RequestBody.Builder(callSpec.getRequestSpec().getBodySpec())\n+      .build();\n+    WebServiceRequest request = new WebServiceRequest(HttpMethod.GET, requestHeaders, requestBody);\n+    WebServiceResponse response = stub.getResponse(callSpec, request, gson);\n+    ResponseBody body = response.getBody();\n+    List list = body.get(TypedKeysQuery.RESOURCE_LIST);\n+    return list;\n+  }\n+}\n--- /dev/null\n+++ b/wsdef/src/main/java/com/google/gson/rest/query/ResourceQuery.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.rest.query;\n+\n+import java.util.List;\n+\n+import com.google.gson.rest.definition.ID;\n+import com.google.gson.rest.definition.RestResource;\n+\n+/**\n+ * A query for a list of rest resources.\n+ * \n+ * @author Inderjeet Singh\n+ */\n+public interface ResourceQuery<I extends ID, R extends RestResource<I, R>, QUERY> {\n+  /**\n+   * Returns a list of resources matching the query\n+   */\n+  public List<R> query(QUERY query);\n+}\n--- /dev/null\n+++ b/wsdef/src/main/java/com/google/gson/rest/query/TypedKeysQuery.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.rest.query;\n+\n+import java.util.List;\n+\n+import com.google.gson.rest.definition.ID;\n+import com.google.gson.rest.definition.RestResource;\n+import com.google.gson.webservice.definition.TypedKey;\n+\n+/**\n+ * List of {@link TypedKey}s associated with REST queries\n+ *\n+ * @author Inderjeet Singh\n+ *\n+ * @param <I> ID type of the REST resource\n+ * @param <R> The type of the REST resource\n+ */\n+@SuppressWarnings(\"rawtypes\")\n+public class TypedKeysQuery<I extends ID, R extends RestResource<I, R>> {\n+\n+  // TODO(inder): This should really be TypedKey<List<R>> \n+  public static TypedKey<List> RESOURCE_LIST = new TypedKey<List>(\"resourceList\", List.class);\n+}", "timestamp": 1289400826, "metainfo": ""}