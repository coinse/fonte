{"sha": "21ddfc9b122312ee0e599730cd7672ecdbd6d084", "log": "Show default serialization and deserialization works with subclasses of an enum type.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/EnumTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/EnumTest.java\n \n package com.google.gson.functional;\n \n-import java.lang.reflect.Type;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.EnumSet;\n-import java.util.Set;\n-\n-import junit.framework.TestCase;\n-\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.JsonDeserializationContext;\n import com.google.gson.JsonSerializer;\n import com.google.gson.common.MoreAsserts;\n import com.google.gson.reflect.TypeToken;\n+\n+import junit.framework.TestCase;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Set;\n \n /**\n  * Functional tests for Java 5.0 enums.\n         gson.fromJson(\"[\\\"123ROCK\\\",\\\"123PAPER\\\",\\\"123SCISSORS\\\"]\", new TypeToken<Set<Roshambo>>() {}.getType()));\n   }\n \n+  public void testEnumSubclassAsParameterizedType() {\n+    Collection<Roshambo> list = new ArrayList<Roshambo>();\n+    list.add(Roshambo.ROCK);\n+    list.add(Roshambo.PAPER);\n+\n+    String json = gson.toJson(list);\n+    assertEquals(\"[\\\"ROCK\\\",\\\"PAPER\\\"]\", json);\n+\n+    Type collectionType = new TypeToken<Collection<Roshambo>>() {}.getType();\n+    Collection<Roshambo> actualJsonList = gson.fromJson(json, collectionType);\n+    MoreAsserts.assertContains(actualJsonList, Roshambo.ROCK);\n+    MoreAsserts.assertContains(actualJsonList, Roshambo.PAPER);\n+  }\n+\n   public enum Roshambo {\n     ROCK {\n       @Override Roshambo defeats() {", "timestamp": 1301944786, "metainfo": ""}