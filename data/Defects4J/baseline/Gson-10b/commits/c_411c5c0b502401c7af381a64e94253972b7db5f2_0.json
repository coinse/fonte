{"sha": "411c5c0b502401c7af381a64e94253972b7db5f2", "log": "Follow up on r1197 and make deepCopy package-private. We don't want to use protected because some of the classes are non-final and protected shows up in the Javadocs.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonArray.java\n+++ b/gson/src/main/java/com/google/gson/JsonArray.java\n   }\n \n   @Override\n-  protected JsonArray deepCopy() {\n+  JsonArray deepCopy() {\n     JsonArray result = new JsonArray();\n     for (JsonElement element : elements) {\n       result.add(element.deepCopy());\n--- a/gson/src/main/java/com/google/gson/JsonElement.java\n+++ b/gson/src/main/java/com/google/gson/JsonElement.java\n    * Returns a deep copy of this element. Immutable elements like primitives\n    * and nulls are not copied.\n    */\n-  protected abstract JsonElement deepCopy();\n+  abstract JsonElement deepCopy();\n \n   /**\n    * provides check for verifying if this element is an array or not.\n--- a/gson/src/main/java/com/google/gson/JsonNull.java\n+++ b/gson/src/main/java/com/google/gson/JsonNull.java\n   }\n \n   @Override\n-  protected JsonNull deepCopy() {\n+  JsonNull deepCopy() {\n     return INSTANCE;\n   }\n \n--- a/gson/src/main/java/com/google/gson/JsonObject.java\n+++ b/gson/src/main/java/com/google/gson/JsonObject.java\n   }\n \n   @Override\n-  protected JsonObject deepCopy() {\n+  JsonObject deepCopy() {\n     JsonObject result = new JsonObject();\n     for (Map.Entry<String, JsonElement> entry : members.entrySet()) {\n       result.add(entry.getKey(), entry.getValue().deepCopy());\n--- a/gson/src/main/java/com/google/gson/JsonPrimitive.java\n+++ b/gson/src/main/java/com/google/gson/JsonPrimitive.java\n   }\n \n   @Override\n-  protected JsonPrimitive deepCopy() {\n+  JsonPrimitive deepCopy() {\n     return this;\n   }\n ", "timestamp": 1346715027, "metainfo": ""}