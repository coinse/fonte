{"sha": "83539c534c3cade5a05e633944420615b0b478ed", "log": "removed compiler warnings. Added default serial version id for MalformedJsonException.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n    * @throws JsonParseException if json is not a valid representation for an object of type\n    * classOfT\n    */\n-  @SuppressWarnings(\"unchecked\")\n   public <T> T fromJson(String json, Class<T> classOfT) throws JsonParseException {\n     Object object = fromJson(json, (Type) classOfT);\n     return Primitives.wrap(classOfT).cast(object);\n--- a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n+++ b/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n  * ignored by calling {@link JsonReader#setLenient(boolean)}.\n  */\n public final class MalformedJsonException extends IOException {\n+  private static final long serialVersionUID = 1L;\n+\n   public MalformedJsonException(String s) {\n     super(s);\n   }\n--- a/gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java\n  * @author Joel Leitch\n  */\n public class PrettyPrintingTest extends TestCase {\n-  private static int PRINT_MARGIN = 80;\n-  private static int RIGHT_MARGIN = 4;\n \n   private static final boolean DEBUG = false;\n \n--- a/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java\n       this.someTField = tValue;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n     public boolean equals(Object o) {\n       if (!(o instanceof Foo)) {\n         return false;\n-      } else {\n-        Foo<S, T> realFoo = (Foo<S, T>) o;\n-        return someTField.equals(realFoo.someTField)\n-          && someSField.equals(realFoo.someSField)\n-          && map.equals(realFoo.map);\n       }\n+      Foo<S, T> realFoo = (Foo<S, T>) o;\n+      return someTField.equals(realFoo.someTField)\n+        && someSField.equals(realFoo.someSField)\n+        && map.equals(realFoo.map);\n     }\n   }\n ", "timestamp": 1288790889, "metainfo": ""}