{"sha": "809e3b5e2103a6eb1dacefa32d7917c2dcc3592a", "log": "Fixed bug 106 by adding custom serialization support for Gregorian Calendar.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n import java.text.DateFormat;\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n import java.util.Collection;\n import java.util.Date;\n+import java.util.GregorianCalendar;\n import java.util.LinkedHashMap;\n import java.util.LinkedList;\n import java.util.List;\n \n   private static final PropertiesCreator PROPERTIES_CREATOR = new PropertiesCreator();\n   private static final TreeSetCreator TREE_SET_CREATOR = new TreeSetCreator();\n+  private static final GregorianCalendarTypeAdapter GREGORIAN_CALENDAR_TYPE_ADAPTER = \n+    new GregorianCalendarTypeAdapter();\n \n   // The constants DEFAULT_SERIALIZERS, DEFAULT_DESERIALIZERS, and DEFAULT_INSTANCE_CREATORS\n   // must be defined after the constants for the type adapters. Otherwise, the type adapter\n     map.register(Collection.class, COLLECTION_TYPE_ADAPTER);\n     map.register(Map.class, MAP_TYPE_ADAPTER);\n     map.register(Date.class, DATE_TYPE_ADAPTER);\n+    map.register(Calendar.class, GREGORIAN_CALENDAR_TYPE_ADAPTER);\n+    map.register(GregorianCalendar.class, GREGORIAN_CALENDAR_TYPE_ADAPTER);\n     map.register(BigDecimal.class, BIG_DECIMAL_TYPE_ADAPTER);\n     map.register(BigInteger.class, BIG_INTEGER_TYPE_ADAPTER);\n     \n     map.register(Collection.class, wrapDeserializer(COLLECTION_TYPE_ADAPTER));\n     map.register(Map.class, wrapDeserializer(MAP_TYPE_ADAPTER));\n     map.register(Date.class, wrapDeserializer(DATE_TYPE_ADAPTER));\n+    map.register(Calendar.class, GREGORIAN_CALENDAR_TYPE_ADAPTER);\n+    map.register(GregorianCalendar.class, GREGORIAN_CALENDAR_TYPE_ADAPTER);\n     map.register(BigDecimal.class, wrapDeserializer(BIG_DECIMAL_TYPE_ADAPTER));\n     map.register(BigInteger.class, wrapDeserializer(BIG_INTEGER_TYPE_ADAPTER));\n     \n     }\n   }\n \n+  private static class GregorianCalendarTypeAdapter implements JsonSerializer<GregorianCalendar>, \n+      JsonDeserializer<GregorianCalendar> {\n+\n+    private static final String YEAR = \"year\";\n+    private static final String MONTH = \"month\";\n+    private static final String DAY_OF_MONTH = \"dayOfMonth\";\n+    private static final String HOUR_OF_DAY = \"hourOfDay\";\n+    private static final String MINUTE = \"minute\";\n+    private static final String SECOND = \"second\";\n+    public JsonElement serialize(GregorianCalendar src, Type typeOfSrc,\n+        JsonSerializationContext context) {\n+      JsonObject obj = new JsonObject();\n+      obj.addProperty(YEAR, src.get(Calendar.YEAR));\n+      obj.addProperty(MONTH, src.get(Calendar.MONTH));\n+      obj.addProperty(DAY_OF_MONTH, src.get(Calendar.DAY_OF_MONTH));\n+      obj.addProperty(HOUR_OF_DAY, src.get(Calendar.HOUR_OF_DAY));\n+      obj.addProperty(MINUTE, src.get(Calendar.MINUTE));      \n+      obj.addProperty(SECOND, src.get(Calendar.SECOND));      \n+      return obj;\n+    }\n+    \n+    public GregorianCalendar deserialize(JsonElement json, Type typeOfT,\n+        JsonDeserializationContext context) throws JsonParseException {\n+      JsonObject obj = json.getAsJsonObject();\n+      int year = obj.get(YEAR).getAsInt();\n+      int month = obj.get(MONTH).getAsInt();\n+      int dayOfMonth = obj.get(DAY_OF_MONTH).getAsInt();\n+      int hourOfDay = obj.get(HOUR_OF_DAY).getAsInt();\n+      int minute = obj.get(MINUTE).getAsInt();      \n+      int second = obj.get(SECOND).getAsInt();      \n+      return new GregorianCalendar(year, month, dayOfMonth, hourOfDay, minute, second);\n+    }    \n+  }\n+  \n   @SuppressWarnings(\"unchecked\")\n   private static class EnumTypeAdapter<T extends Enum<T>>\n       implements JsonSerializer<T>, JsonDeserializer<T> {\n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n import java.net.URL;\n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n import java.util.Date;\n+import java.util.GregorianCalendar;\n import java.util.HashSet;\n import java.util.Locale;\n import java.util.Properties;\n     assertEquals(now.toString(), extracted.toString());    \n   }\n \n+  public void testDefaultCalendarSerialization() throws Exception {\n+    Gson gson = new GsonBuilder().create();\n+    String json = gson.toJson(Calendar.getInstance());\n+    assertTrue(json.contains(\"year\"));\n+    assertTrue(json.contains(\"month\"));\n+    assertTrue(json.contains(\"dayOfMonth\"));\n+    assertTrue(json.contains(\"hourOfDay\"));\n+    assertTrue(json.contains(\"minute\"));\n+    assertTrue(json.contains(\"second\"));\n+  }\n+  \n+  public void testDefaultCalendarDeserialization() throws Exception {\n+    Gson gson = new GsonBuilder().create();\n+    String json = \"{year:2009,month:2,dayOfMonth:11,hourOfDay:14,minute:29,second:23}\";\n+    Calendar cal = gson.fromJson(json, Calendar.class);\n+    assertEquals(2009, cal.get(Calendar.YEAR));\n+    assertEquals(2, cal.get(Calendar.MONTH));\n+    assertEquals(11, cal.get(Calendar.DAY_OF_MONTH));\n+    assertEquals(14, cal.get(Calendar.HOUR_OF_DAY));\n+    assertEquals(29, cal.get(Calendar.MINUTE));\n+    assertEquals(23, cal.get(Calendar.SECOND));\n+  }\n+\n+  public void testDefaultGregorianCalendarSerialization() throws Exception {\n+    Gson gson = new GsonBuilder().create();\n+    GregorianCalendar cal = new GregorianCalendar();\n+    String json = gson.toJson(cal);\n+    assertTrue(json.contains(\"year\"));\n+    assertTrue(json.contains(\"month\"));\n+    assertTrue(json.contains(\"dayOfMonth\"));\n+    assertTrue(json.contains(\"hourOfDay\"));\n+    assertTrue(json.contains(\"minute\"));\n+    assertTrue(json.contains(\"second\"));\n+  }\n+  \n+  public void testDefaultGregorianCalendarDeserialization() throws Exception {\n+    Gson gson = new GsonBuilder().create();\n+    String json = \"{year:2009,month:2,dayOfMonth:11,hourOfDay:14,minute:29,second:23}\";\n+    GregorianCalendar cal = gson.fromJson(json, GregorianCalendar.class);\n+    assertEquals(2009, cal.get(Calendar.YEAR));\n+    assertEquals(2, cal.get(Calendar.MONTH));\n+    assertEquals(11, cal.get(Calendar.DAY_OF_MONTH));\n+    assertEquals(14, cal.get(Calendar.HOUR_OF_DAY));\n+    assertEquals(29, cal.get(Calendar.MINUTE));\n+    assertEquals(23, cal.get(Calendar.SECOND));\n+  }\n+  \n   public void testDateSerializationWithPattern() throws Exception {\n     String pattern = \"yyyy-MM-dd\";\n     DateFormat formatter = new SimpleDateFormat(pattern);", "timestamp": 1236808018, "metainfo": ""}