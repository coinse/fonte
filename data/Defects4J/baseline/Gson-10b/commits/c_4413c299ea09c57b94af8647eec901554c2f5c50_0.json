{"sha": "4413c299ea09c57b94af8647eec901554c2f5c50", "log": "Fixing compiler warnings", "commit": "\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/TaskExecutor.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/TaskExecutor.java\n \n /**\n  * An {@link Executor} with an additional method for shutdown. We could have just used\n- * {@link java.util.concurent.ExecutorService}, however, that requires too many methods to be\n+ * {@link java.util.concurrent.ExecutorService}, however, that requires too many methods to be\n  * implemented.\n  *  \n  * @author inder\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/ContentBodySpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/ContentBodySpec.java\n     this.paramsSpec = Collections.unmodifiableMap(paramsSpec);\n   }\n   \n+  @Override\n   public Type getTypeFor(String paramName) {\n     return paramsSpec.get(paramName);\n   }\n   \n+  @Override\n   public boolean checkIfCompatible(String paramName, Type type) {\n     return type.equals(getTypeFor(paramName));\n   }\n   \n+  @Override\n   public boolean checkIfCompatible(String paramName, Object object) {\n     return checkIfCompatible(paramName, object.getClass());\n   }\n   \n+  @Override\n   public Set<Map.Entry<String, Type>> entrySet() {\n     return paramsSpec.entrySet();\n   }\n   \n+  @Override\n   public int size() {\n     return paramsSpec.size();\n   }\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMapSpec.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/HeaderMapSpec.java\n     this.map = map;\n   }  \n   \n+  @Override\n   public Type getTypeFor(String headerName) {\n     return map.get(headerName);\n   }\n   \n+  @Override\n   public Set<Map.Entry<String, Type>> entrySet() {\n     return map.entrySet();\n   }\n     return rawClassOfHeader.isAssignableFrom(rawClassOfTargetType);\n   }\n \n+  @Override\n   public boolean checkIfCompatible(String headerName, Object headerValue) {\n     return checkIfCompatible(headerName, headerValue.getClass());\n   }\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/rest/HasId.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/rest/HasId.java\n  *\n  * @author inder\n  *\n- * @param <T> type of object\n+ * @param <R> type of object\n  */\n public interface HasId<R> {\n   public Id<R> getId();\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/rest/MetaData.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/rest/MetaData.java\n   }\n \n   public String getString(String key) {\n-    return (String) map.get(key);\n+    return map.get(key);\n   }\n \n   public void putString(String key, String value) {\n   }\n \n   public Object getFromTransient(Object key) {\n-    return (String) mapTransient.get(key);\n+    return mapTransient.get(key);\n   }\n \n   public void putInTransient(Object key, Object value) {\n--- a/wsdef/src/main/java/com/google/gson/webservice/definition/rest/ResourceMap.java\n+++ b/wsdef/src/main/java/com/google/gson/webservice/definition/rest/ResourceMap.java\n   }\n \n   public RestCallSpec get(CallPath callPath) {\n-    return (RestCallSpec)resources.get(callPath);\n+    return resources.get(callPath);\n   }\n }\n--- a/wsf/src/main/java/com/google/gson/wsf/server/rest/IdMap.java\n+++ b/wsf/src/main/java/com/google/gson/wsf/server/rest/IdMap.java\n   private final Type typeOfId;\n \n   /**\n-   * Use {@link #create(Class)} instead of constructor\n+   * Use {@link #create(Type)} instead of constructor\n    */\n   protected IdMap(Type typeOfId) {\n     this.typeOfId = typeOfId;", "timestamp": 1288656828, "metainfo": ""}