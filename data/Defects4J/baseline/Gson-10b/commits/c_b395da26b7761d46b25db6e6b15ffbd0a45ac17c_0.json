{"sha": "b395da26b7761d46b25db6e6b15ffbd0a45ac17c", "log": "Better javadoc", "commit": "\n--- a/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java\n+++ b/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java\n  * You can specify which case representation is used for the proto fields when writing/reading the\n  * JSON payload by calling {@link Builder#setFieldNameSerializationFormat(CaseFormat, CaseFormat)}.\n  * <p>\n- * An example of default serialization/deserialization using custom proto field names is show below:\n+ * An example of default serialization/deserialization using custom proto field names is shown\n+ * below:\n  *\n  * <pre>\n  * message MyMessage {\n \n     /**\n      * Adds a field proto annotation that, when set, overrides the default field name\n-     * serialization/deserialization. For example, if you add the ' {@code serialized_name}'\n+     * serialization/deserialization. For example, if you add the '{@code serialized_name}'\n      * annotation and you define a field in your proto like the one below:\n      *\n      * <pre>\n-     * string client_app_id = 1[(serialized_name) = \"appId\"];\n+     * string client_app_id = 1 [(serialized_name) = \"appId\"];\n      * </pre>\n      *\n      * ...the adapter will serialize the field using '{@code appId}' instead of the default '\n-     * {@code clientAppId}'. This lets you customize the name serialization of any field of your\n-     * proto.\n+     * {@code clientAppId}'. This lets you customize the name serialization of any proto field.\n      */\n     public Builder addSerializedNameExtension(\n         Extension<FieldOptions, String> serializedNameExtension) {\n     }\n \n     /**\n-     * Adds an enum proto annotation that, when set, overrides the default <b>enum</b> value\n-     * serialization/deerialization of this adapter. For example, if you add the '\n+     * Adds an enum value proto annotation that, when set, overrides the default <b>enum</b> value\n+     * serialization/deserialization of this adapter. For example, if you add the '\n      * {@code serialized_value}' annotation and you define an enum in your proto like the one below:\n      *\n      * <pre>\n         return (GeneratedMessage) protoBuilder.build();\n       } catch (SecurityException e) {\n         throw new JsonParseException(e);\n-      } catch (NoSuchMethodException  e) {\n+      } catch (NoSuchMethodException e) {\n         throw new JsonParseException(e);\n       } catch (IllegalArgumentException e) {\n         throw new JsonParseException(e);", "timestamp": 1444175833, "metainfo": ""}