{"sha": "bf2a0e4e0be34a6b308ef422c6381faed03769cd", "log": "Adding tests to ensure the adapter from the old to new naming strategy is working properly.", "commit": "\n--- /dev/null\n+++ b/gson/src/test/java/com/google/gson/FieldNamingStrategy2AdapterTest.java\n+/*\n+ * Copyright (C) 2010 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.gson;\n+\n+import java.lang.reflect.Field;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Unit test for the {@link FieldNamingStrategy2Adapter} class.\n+ *\n+ * @author Inderjeet Singh\n+ * @author Joel Leitch\n+ */\n+public class FieldNamingStrategy2AdapterTest extends TestCase {\n+\n+  public void testSimpleAdapter() throws Exception {\n+    Field field = String.class.getFields()[0];\n+    String expectedFieldName = field.getName().toUpperCase();\n+    FieldNamingStrategy2 adapter =\n+        new FieldNamingStrategy2Adapter(new UpperCaseNamingStrategy());\n+    assertEquals(expectedFieldName, adapter.translateName(\n+        new FieldAttributes(String.class, field)));\n+  }\n+  \n+  private static class UpperCaseNamingStrategy implements FieldNamingStrategy {\n+    public String translateName(Field f) {\n+      return f.getName().toUpperCase();\n+    }\n+  }\n+}\n--- a/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n  */\n package com.google.gson.functional;\n \n+import java.lang.reflect.Field;\n+\n import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.FieldNamingStrategy;\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.annotations.SerializedName;\n     actual = gson.toJson(target);\n     assertEquals(\"{\\\"a\\\":3.0}\", actual);\n   }\n+  \n+  public void testDeprecatedNamingStrategy() throws Exception {\n+    Gson gson = builder.setFieldNamingStrategy(new UpperCaseNamingStrategy()).create();\n+    ClassWithDuplicateFields target = new ClassWithDuplicateFields(10);\n+    String actual = gson.toJson(target);\n+    assertEquals(\"{\\\"A\\\":10}\", actual);\n+  }\n+\n+  private static class UpperCaseNamingStrategy implements FieldNamingStrategy {\n+    public String translateName(Field f) {\n+      return f.getName().toUpperCase();\n+    }\n+  }\n \n   @SuppressWarnings(\"unused\")\n   private static class ClassWithDuplicateFields {", "timestamp": 1263094079, "metainfo": ""}