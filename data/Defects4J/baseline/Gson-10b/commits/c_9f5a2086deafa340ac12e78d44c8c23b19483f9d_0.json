{"sha": "9f5a2086deafa340ac12e78d44c8c23b19483f9d", "log": "updated Gson version to 1.2.2 Added a test to ensure that CustomTypeAdapters are not applied automatically for SubClasses.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n     assertEquals(7, target.getBag().getIntValue());\n   }\n   \n-  public void testCustomTypeAdapterAppliesToSubClasses() {\n+  public void testCustomTypeAdapterDoesNotAppliesToSubClasses() {\n+    Gson gson = new GsonBuilder().registerTypeAdapter(Base.class, new JsonSerializer<Base> () {\n+      public JsonElement serialize(Base src, Type typeOfSrc, JsonSerializationContext context) {\n+        JsonObject json = new JsonObject();\n+        json.addProperty(\"value\", src.baseValue);\n+        return json;\n+      }          \n+    }).create();\n+    Base b = new Base();\n+    String json = gson.toJson(b);\n+    assertTrue(json.contains(\"value\"));    \n+    b = new Derived();\n+    json = gson.toJson(b);\n+    assertTrue(json.contains(\"derivedValue\"));    \n+  }\n+  \n+  public void testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass() {\n     Gson gson = new GsonBuilder().registerTypeAdapter(Base.class, new JsonSerializer<Base> () {\n       public JsonElement serialize(Base src, Type typeOfSrc, JsonSerializationContext context) {\n         JsonObject json = new JsonObject();", "timestamp": 1224013053, "metainfo": ""}