{"sha": "7c42ef3e5d736ae1a74c88f0dc5fc1207c55c8af", "log": "Update incomplete comment.", "commit": "\n--- a/gson/src/main/java/com/google/gson/ExclusionStrategy.java\n+++ b/gson/src/main/java/com/google/gson/ExclusionStrategy.java\n  *     .setExclusionStrategies(excludeStrings)\n  *     .create();\n  * </pre>\n- * \n+ *\n  * <p>For certain model classes, you may only want to serialize a field, but exclude it for\n  * deserialization. To do that, you can write an {@code ExclusionStrategy} as per normal;\n- * however, you would register it with the \n+ * however, you would register it with the\n+ * {@link GsonBuilder#addDeserializationExclusionStrategies(ExclusionStrategy...)} method.\n+ * For example:\n+ * <pre class=\"code\">\n+ * ExclusionStrategy excludeStrings = new UserDefinedExclusionStrategy(String.class);\n+ * Gson gson = new GsonBuilder()\n+ *     .addDeserializationExclusionStrategies(excludeStrings)\n+ *     .create();\n+ * </pre>\n  *\n  * @author Inderjeet Singh\n  * @author Joel Leitch", "timestamp": 1301959004, "metainfo": ""}