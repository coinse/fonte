{"sha": "97d00f49309dec6cc92b248a7f08408bd6aeb3e1", "log": "Add test to verify issue 309.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.InstanceCreator;\n+import com.google.gson.JsonArray;\n import com.google.gson.JsonElement;\n+import com.google.gson.JsonPrimitive;\n import com.google.gson.JsonSerializationContext;\n import com.google.gson.JsonSerializer;\n import com.google.gson.common.TestTypes;\n+import com.google.gson.internal.$Gson$Types;\n import com.google.gson.reflect.TypeToken;\n \n import junit.framework.TestCase;\n     assertEquals(\"2\", map.get(\"b\"));\n   }\n \n+  public void testCustomSerializerForSpecificMapType() {\n+    Type type = $Gson$Types.newParameterizedTypeWithOwner(\n+        null, Map.class, String.class, Long.class);\n+    Gson gson = new GsonBuilder()\n+        .registerTypeAdapter(type, new JsonSerializer<Map<String, Long>>() {\n+          public JsonElement serialize(Map<String, Long> src, Type typeOfSrc,\n+              JsonSerializationContext context) {\n+            JsonArray array = new JsonArray();\n+            for (long value : src.values()) {\n+              array.add(new JsonPrimitive(value));\n+            }\n+            return array;\n+          }\n+        }).create();\n+\n+    Map<String, Long> src = new LinkedHashMap<String, Long>();\n+    src.put(\"one\", 1L);\n+    src.put(\"two\", 2L);\n+    src.put(\"three\", 3L);\n+\n+    assertEquals(\"[1,2,3]\", gson.toJson(src, type));\n+  }\n+\n   /**\n    * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99\n    */", "timestamp": 1302711294, "metainfo": ""}