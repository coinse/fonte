{"sha": "912db55ba670e8ed0187aac131e102387ec0556d", "log": "Added test for hasNext on JsonStreamParser.", "commit": "\n--- a/gson/src/test/java/com/google/gson/JsonStreamParserTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonStreamParserTest.java\n \n /**\n  * Unit tests for {@link JsonStreamParser}\n- *\n+ * \n  * @author Inderjeet Singh\n  */\n public class JsonStreamParserTest extends TestCase {\n+  private JsonStreamParser parser;\n   \n+  @Override\n+  protected void setUp() throws Exception {\n+    super.setUp();\n+    parser = new JsonStreamParser(\"'one' 'two'\");\n+  }\n+\n   public void testParseTwoStrings() {\n-    JsonStreamParser parser = new JsonStreamParser(\"'one' 'two'\");\n     String actualOne = parser.next().getAsString();\n     assertEquals(\"one\", actualOne);\n     String actualTwo = parser.next().getAsString();\n     assertEquals(\"two\", actualTwo);\n   }\n-  \n+\n   public void testIterator() {\n-    Iterator<JsonElement> parser = new JsonStreamParser(\"'one' 'two'\");\n     assertTrue(parser.hasNext());\n     assertEquals(\"one\", parser.next().getAsString());\n     assertTrue(parser.hasNext());\n     assertEquals(\"two\", parser.next().getAsString());\n     assertFalse(parser.hasNext());\n   }\n-  \n+\n+  public void testNoSideEffectForHasNext() throws Exception {\n+    assertTrue(parser.hasNext());\n+    assertTrue(parser.hasNext());\n+    assertTrue(parser.hasNext());\n+    assertEquals(\"one\", parser.next().getAsString());\n+    \n+    assertTrue(parser.hasNext());\n+    assertTrue(parser.hasNext());\n+    assertEquals(\"two\", parser.next().getAsString());\n+    \n+    assertFalse(parser.hasNext());\n+    assertFalse(parser.hasNext());\n+  }\n+\n   public void testCallingNextBeyondAvailableInput() {\n-    Iterator<JsonElement> parser = new JsonStreamParser(\"'one' 'two'\");\n     parser.next();\n     parser.next();\n     try {", "timestamp": 1254512349, "metainfo": ""}