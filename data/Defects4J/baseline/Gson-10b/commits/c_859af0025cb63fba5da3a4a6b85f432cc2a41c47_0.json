{"sha": "859af0025cb63fba5da3a4a6b85f432cc2a41c47", "log": "Implement suggestions from self review of r350.", "commit": "\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n   /**\n    * Configures Gson to include or exclude inner classes\n    *\n-   * @param modifiers the field modifiers. You must use the modifiers specified in the\n-   * {@link java.lang.reflect.Modifier} class. For example,\n-   * {@link java.lang.reflect.Modifier#TRANSIENT},\n-   * {@link java.lang.reflect.Modifier#STATIC}.\n+   * @param value the boolean value on whether or not {@code Gson} should serialize inner classes\n    * @return a reference to this {@code GsonBuilder} object to fulfill the \"Builder\" pattern\n    */\n   public GsonBuilder serializeInnerClasses(boolean value) {\n--- a/gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java\n+++ b/gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java\n  *\n  * @author Joel Leitch\n  */\n-public class InnerClassExclusionStrategy implements ExclusionStrategy {\n+class InnerClassExclusionStrategy implements ExclusionStrategy {\n \n   public boolean shouldSkipField(Field f) {\n     return isInnerClass(f.getType());", "timestamp": 1230429940, "metainfo": ""}