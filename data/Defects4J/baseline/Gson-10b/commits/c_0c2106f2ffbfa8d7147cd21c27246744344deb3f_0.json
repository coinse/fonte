{"sha": "0c2106f2ffbfa8d7147cd21c27246744344deb3f", "log": "Adding test for new field naming policies from r456 code review.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n     assertEquals(target.someConstantStringInstanceField,\n         deserializedObject.someConstantStringInstanceField);\n   }\n+  \n+  public void testGsonWithLowerCaseDashPolicySerialization() {\n+    Gson gson = builder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_DASHES).create();\n+    StringWrapper target = new StringWrapper(\"blah\");\n+    assertEquals(\"{\\\"some-constant-string-instance-field\\\":\\\"\"\n+        + target.someConstantStringInstanceField + \"\\\"}\", gson.toJson(target));\n+  }\n+\n+  public void testGsonWithLowerCaseDashPolicyDeserialiation() {\n+    Gson gson = builder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_DASHES).create();\n+    StringWrapper target = new StringWrapper(\"SomeValue\");\n+    String jsonRepresentation = gson.toJson(target);\n+    StringWrapper deserializedObject = gson.fromJson(jsonRepresentation, StringWrapper.class);\n+    assertEquals(target.someConstantStringInstanceField,\n+        deserializedObject.someConstantStringInstanceField);\n+  }\n+  \n+  public void testGsonWithLowerCaseUnderscorePolicySerialization() {\n+    Gson gson = builder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)\n+        .create();\n+    StringWrapper target = new StringWrapper(\"blah\");\n+    assertEquals(\"{\\\"some_constant_string_instance_field\\\":\\\"\"\n+        + target.someConstantStringInstanceField + \"\\\"}\", gson.toJson(target));\n+  }\n+\n+  public void testGsonWithLowerCaseUnderscorePolicyDeserialiation() {\n+    Gson gson = builder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)\n+        .create();\n+    StringWrapper target = new StringWrapper(\"SomeValue\");\n+    String jsonRepresentation = gson.toJson(target);\n+    StringWrapper deserializedObject = gson.fromJson(jsonRepresentation, StringWrapper.class);\n+    assertEquals(target.someConstantStringInstanceField,\n+        deserializedObject.someConstantStringInstanceField);\n+  }\n \n   public void testGsonWithSerializedNameFieldNamingPolicySerialization() {\n     Gson gson = builder.create();", "timestamp": 1254510735, "metainfo": ""}