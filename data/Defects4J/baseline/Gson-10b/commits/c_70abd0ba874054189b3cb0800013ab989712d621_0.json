{"sha": "70abd0ba874054189b3cb0800013ab989712d621", "log": "Finishing touches on JsonElementWriter", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java\n     super(UNWRITABLE_WRITER);\n   }\n \n+  /**\n+   * Returns the top level object produced by this writer.\n+   */\n   public JsonElement get() {\n     if (!stack.isEmpty()) {\n       throw new IllegalStateException(\"Expected one JSON element but was \" + stack);\n--- a/gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java\n import junit.framework.TestCase;\n \n public final class JsonElementWriterTest extends TestCase {\n-\n-  // TODO: figure out what should be returned by an empty writer\n-\n   public void testArray() throws IOException {\n     JsonElementWriter writer = new JsonElementWriter();\n     writer.beginArray();", "timestamp": 1317429748, "metainfo": ""}