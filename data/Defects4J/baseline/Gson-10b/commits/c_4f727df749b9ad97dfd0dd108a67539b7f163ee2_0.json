{"sha": "4f727df749b9ad97dfd0dd108a67539b7f163ee2", "log": "Throwing JsonParseException when the user expected class doesn't match the JSON input during deserialization.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java\n \n     TypeInfo typeInfo = new TypeInfo(targetType);\n \n+    if (!json.isJsonArray()) {\n+      throw new JsonParseException(\"Expecting array found: \" + json); \n+    }\n     JsonArray jsonArray = json.getAsJsonArray();\n     if (typeInfo.isArray()) {\n       TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray(targetType);\n   }\n \n   public void visitArray(Object array, Type arrayType) {\n+    if (!json.isJsonArray()) {\n+      throw new JsonParseException(\"Expecting array found: \" + json); \n+    }\n     JsonArray jsonArray = json.getAsJsonArray();\n     TypeInfoArray arrayTypeInfo = TypeInfoFactory.getTypeInfoForArray(arrayType);\n     for (int i = 0; i < jsonArray.size(); i++) {\n   // instead.\n \n   public void startVisitingObject(Object node) {\n-    throw new UnsupportedOperationException();\n+    throw new JsonParseException(\"Expecting array but found object: \" + node);\n   }\n \n   public void visitArrayField(Field f, Type typeOfF, Object obj) {\n-    throw new UnsupportedOperationException();\n+    throw new JsonParseException(\"Expecting array but found array field \" + f.getName() + \": \"\n+        + obj);\n   }\n \n   public void visitObjectField(Field f, Type typeOfF, Object obj) {\n-    throw new UnsupportedOperationException();\n+    throw new JsonParseException(\"Expecting array but found object field \" + f.getName() + \": \" \n+        + obj);\n   }\n \n   public boolean visitFieldUsingCustomHandler(Field f, Type actualTypeOfField, Object parent) {\n-    throw new UnsupportedOperationException();\n+    throw new JsonParseException(\"Expecting array but found field \" + f.getName() + \": \" \n+        + parent);\n   }\n }\n--- a/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n \n   public void visitArray(Object array, Type componentType) {\n     // should not be called since this case should invoke JsonArrayDeserializationVisitor\n-    throw new IllegalStateException();\n+    throw new JsonParseException(\"Expecting object but found array: \" + array);\n   }\n \n   public void visitObjectField(Field f, Type typeOfF, Object obj) {\n     try {\n+      if (!json.isJsonObject()) {\n+        throw new JsonParseException(\"Expecting object found: \" + json); \n+      }\n       JsonObject jsonObject = json.getAsJsonObject();\n       String fName = getFieldName(f);\n       JsonElement jsonChild = jsonObject.get(fName);\n \n   public void visitArrayField(Field f, Type typeOfF, Object obj) {\n     try {\n+      if (!json.isJsonObject()) {\n+        throw new JsonParseException(\"Expecting object found: \" + json); \n+      }\n       JsonObject jsonObject = json.getAsJsonObject();\n       String fName = getFieldName(f);\n       JsonArray jsonChild = (JsonArray) jsonObject.get(fName);\n   public boolean visitFieldUsingCustomHandler(Field f, Type actualTypeOfField, Object parent) {\n     try {\n       String fName = getFieldName(f);\n+      if (!json.isJsonObject()) {\n+        throw new JsonParseException(\"Expecting object found: \" + json); \n+      }\n       JsonElement child = json.getAsJsonObject().get(fName);\n       if (child == null) {\n         return true;\n--- a/gson/src/test/java/com/google/gson/functional/JsonParserTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/JsonParserTest.java\n     try {\n       gson.fromJson(array, BagOfPrimitives.class);\n       fail(\"BagOfPrimitives is not an array\");\n-    } catch (UnsupportedOperationException expected) { }\n+    } catch (JsonParseException expected) { }\n   }\n   \n   public void testBadFieldTypeForCustomDeserializerCustomTree() {\n     try {\n       gson.fromJson(obj, Nested.class);\n       fail(\"Nested has field BagOfPrimitives which is not an array\");\n-    } catch (IllegalStateException expected) { }\n+    } catch (JsonParseException expected) { }\n   }\n \n   public void testChangingCustomTreeAndDeserializing() {", "timestamp": 1238195866, "metainfo": ""}