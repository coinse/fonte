{"sha": "baf9591d3b0eea51434f1e2ef726c29bd35c85d5", "log": "Made constructors package private for package private classes.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java\n+++ b/gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java\n final class DisjunctionExclusionStrategy implements ExclusionStrategy {\n   private final Collection<ExclusionStrategy> strategies;\n \n-  public DisjunctionExclusionStrategy(Collection<ExclusionStrategy> strategies) {\n+  DisjunctionExclusionStrategy(Collection<ExclusionStrategy> strategies) {\n     Preconditions.checkNotNull(strategies);\n     this.strategies = strategies;\n   }\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n    */\n   public GsonBuilder registerTypeHierarchyAdapter(Class<?> baseType, Object typeAdapter) {\n     Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>\n-    || typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);\n+      || typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);\n     if (typeAdapter instanceof InstanceCreator<?>) {\n       registerInstanceCreatorForTypeHierarchy(baseType, (InstanceCreator<?>) typeAdapter);\n     }\n--- a/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java\n+++ b/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java\n    * @param modifier the type of modification that should be performed\n    * @throws IllegalArgumentException if {@code modifier} is null\n    */\n-  public ModifyFirstLetterNamingPolicy(LetterModifier modifier) {\n+  ModifyFirstLetterNamingPolicy(LetterModifier modifier) {\n     Preconditions.checkNotNull(modifier);\n     this.letterModifier = modifier;\n   }\n--- a/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java\n+++ b/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java\n final class VersionExclusionStrategy implements ExclusionStrategy {\n   private final double version;\n \n-  public VersionExclusionStrategy(double version) {\n+  VersionExclusionStrategy(double version) {\n     Preconditions.checkArgument(version >= 0.0D);\n     this.version = version;\n   }", "timestamp": 1299801316, "metainfo": ""}