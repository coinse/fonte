{"sha": "0b5f3dc8255a4811df48817dc9b899d67e8725fa", "log": "Added UUID as a default type supported by Gson.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n import java.util.SortedSet;\n import java.util.StringTokenizer;\n import java.util.TreeSet;\n+import java.util.UUID;\n \n /**\n  * List of all the default type adapters ({@link JsonSerializer}s, {@link JsonDeserializer}s,\n   private static final EnumTypeAdapter ENUM_TYPE_ADAPTER = new EnumTypeAdapter();\n   private static final UrlTypeAdapter URL_TYPE_ADAPTER = new UrlTypeAdapter();\n   private static final UriTypeAdapter URI_TYPE_ADAPTER = new UriTypeAdapter();\n+  private static final UuidTypeAdapter UUUID_TYPE_ADAPTER = new UuidTypeAdapter();\n   private static final LocaleTypeAdapter LOCALE_TYPE_ADAPTER = new LocaleTypeAdapter();\n   private static final CollectionTypeAdapter COLLECTION_TYPE_ADAPTER = new CollectionTypeAdapter();\n   private static final MapTypeAdapter MAP_TYPE_ADAPTER = new MapTypeAdapter();\n     map.register(Enum.class, ENUM_TYPE_ADAPTER);\n     map.register(URL.class, URL_TYPE_ADAPTER);\n     map.register(URI.class, URI_TYPE_ADAPTER);\n+    map.register(UUID.class, UUUID_TYPE_ADAPTER);\n     map.register(Locale.class, LOCALE_TYPE_ADAPTER);\n     map.register(Collection.class, COLLECTION_TYPE_ADAPTER);\n     map.register(Map.class, MAP_TYPE_ADAPTER);\n     map.register(Enum.class, wrapDeserializer(ENUM_TYPE_ADAPTER));\n     map.register(URL.class, wrapDeserializer(URL_TYPE_ADAPTER));\n     map.register(URI.class, wrapDeserializer(URI_TYPE_ADAPTER));\n+    map.register(UUID.class, UUUID_TYPE_ADAPTER);\n     map.register(Locale.class, wrapDeserializer(LOCALE_TYPE_ADAPTER));\n     map.register(Collection.class, wrapDeserializer(COLLECTION_TYPE_ADAPTER));\n     map.register(Map.class, wrapDeserializer(MAP_TYPE_ADAPTER));\n       return UriTypeAdapter.class.getSimpleName();\n     }\n   }\n+  \n+  private static class UuidTypeAdapter implements JsonSerializer<UUID>, JsonDeserializer<UUID> {\n+    public JsonElement serialize(UUID src, Type typeOfSrc, JsonSerializationContext context) {\n+      return new JsonPrimitive(src.toString());\n+    }\n+\n+    public UUID deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) \n+        throws JsonParseException {     \n+      return UUID.fromString(json.getAsString());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return UuidTypeAdapter.class.getSimpleName();\n+    }\n+  }\n \n   private static class LocaleTypeAdapter implements JsonSerializer<Locale>,\n       JsonDeserializer<Locale>, InstanceCreator<Locale> {\n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n import java.util.HashSet;\n import java.util.Locale;\n import java.util.Set;\n+import java.util.UUID;\n \n import junit.framework.TestCase;\n \n     String json = '\"' + uriValue + '\"';\n     URI target = gson.fromJson(json, URI.class);\n     assertEquals(uriValue, target.toASCIIString());\n+  }\n+  \n+  public void testUuidSerialization() throws Exception {\n+    String uuidValue = \"c237bec1-19ef-4858-a98e-521cf0aad4c0\";\n+    UUID uuid = UUID.fromString(uuidValue);\n+    assertEquals('\"' + uuidValue + '\"', gson.toJson(uuid));\n+  }\n+\n+  public void testUuidDeserialization() {\n+    String uuidValue = \"c237bec1-19ef-4858-a98e-521cf0aad4c0\";\n+    String json = '\"' + uuidValue + '\"';\n+    UUID target = gson.fromJson(json, UUID.class);\n+    assertEquals(uuidValue, target.toString());\n   }\n \n   public void testLocaleSerializationWithLanguage() {", "timestamp": 1229200951, "metainfo": ""}