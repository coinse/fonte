{"sha": "a7e3971fddc7512fb1bd00aa2ea4388664656b2b", "log": "Added setting of content-length in requests even if the body is non existent. Fixed logs for requests. Ensured that streams are not inadvertently closed while copying output.", "commit": "\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/Preconditions.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/Preconditions.java\n   private static byte[] readInByteArray(InputStream src) {\n     ByteArrayOutputStream dst = new ByteArrayOutputStream();\n     try {\n-      Streams.copy(src, dst);\n+      Streams.copy(src, dst, true, true);\n     } catch (IOException e) {\n       // ignore\n     }\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/RequestSender.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/RequestSender.java\n   public RequestSender(Gson gson) {\n     this(gson, null);\n   }\n-    public RequestSender(Gson gson, Level logLevel) {\n+\n+  public RequestSender(Gson gson, Level logLevel) {\n     this.gson = gson;\n     logger = logLevel == null ? null : Logger.getLogger(RequestSender.class.getName());\n     this.logLevel = logLevel;\n       // before sending any data on the connection.\n       conn.setDoInput(true);\n       \n+      RequestBody requestBody = request.getBody();\n+      String requestBodyContents = \"\";\n+      // Android Java VM ignore Content-Length if setDoOutput is not set\n+      conn.setDoOutput(true);    \n+      if (requestBody.getSpec().size() > 0) {\n+        requestBodyContents = gson.toJson(requestBody);\n+      }\n+      String contentLength = String.valueOf(requestBodyContents.length());\n+      setHeader(conn, \"Content-Length\", contentLength, true);\n       addRequestParams(conn, request.getHeaders());\n-      RequestBody requestBody = request.getBody();\n-      String contentLength = \"0\";\n-      String requestBodyContents = null;\n-      if (requestBody.getSpec().size() > 0) {\n-        conn.setDoOutput(true);    \n-        requestBodyContents = gson.toJson(requestBody);\n-        contentLength = String.valueOf(requestBodyContents.length());\n-      }\n-      setHeader(conn, \"Content-Length\", contentLength, true);\n-      if (requestBody.getSpec().size() > 0) {\n-        Streams.copy(requestBodyContents, conn.getOutputStream());\n+      if (requestBodyContents != null) {\n+        Streams.copy(requestBodyContents, conn.getOutputStream(), false);\n       }\n       \n       // Initiate the sending of the request.\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/Streams.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/Streams.java\n \n final class Streams {\n \n-  static void copy(String str, OutputStream dst) throws IOException {\n+  static void copy(String str, OutputStream dst, boolean closeOutput) throws IOException {\n     byte[] bytes = str.getBytes(\"UTF-8\");\n-    copy(new ByteArrayInputStream(bytes), dst);    \n+    copy(new ByteArrayInputStream(bytes), dst, true, closeOutput);    \n   }\n   /**\n    * Copy contents of src to dst. Exhausts src completely, and closes both streams.\n    */\n-  static void copy(InputStream src, OutputStream dst) throws IOException {\n+  static void copy(InputStream src, OutputStream dst, boolean closeInput, boolean closeOutput) throws IOException {\n     try {\n       final byte[] buf = new byte[2048];\n       int count;\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/WebServiceClient.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/WebServiceClient.java\n         .registerTypeAdapter(ResponseBody.class,\n             new ResponseBodyGsonConverter(callSpec.getResponseSpec().getBodySpec()))\n         .create();\n-      RequestSender requestSender = new RequestSender(gson);\n+      RequestSender requestSender = new RequestSender(gson, logLevel);\n       requestSender.send(conn, request);\n       ResponseReceiver responseReceiver =\n         new ResponseReceiver(gson, callSpec.getResponseSpec(), logLevel);", "timestamp": 1264515499, "metainfo": ""}