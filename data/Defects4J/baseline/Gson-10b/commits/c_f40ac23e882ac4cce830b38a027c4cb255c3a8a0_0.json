{"sha": "f40ac23e882ac4cce830b38a027c4cb255c3a8a0", "log": "Write a test recommended by missing code coverage on TypeAdapter", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java\n \n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonPrimitive;\n import com.google.gson.JsonSyntaxException;\n import com.google.gson.TypeAdapter;\n import com.google.gson.reflect.TypeToken;\n         + \"'right':{'label':'right','left':null,'right':null}}\",\n         toJson(nodeAdapter, root).replace('\"', '\\''));\n   }\n+  \n+  public void testFromJsonTree() {\n+    JsonObject truckObject = new JsonObject();\n+    truckObject.add(\"horsePower\", new JsonPrimitive(300));\n+    JsonArray passengersArray = new JsonArray();\n+    JsonObject jesseObject = new JsonObject();\n+    jesseObject.add(\"age\", new JsonPrimitive(30));\n+    jesseObject.add(\"name\", new JsonPrimitive(\"Jesse\"));\n+    passengersArray.add(jesseObject);\n+    truckObject.add(\"passengers\", passengersArray);\n+\n+    Truck truck = truckAdapter.fromJsonTree(truckObject);\n+    assertEquals(300.0, truck.horsePower);\n+    assertEquals(Arrays.asList(new Person(\"Jesse\", 30)), truck.passengers);\n+  }\n \n   static class Truck {\n     double horsePower;", "timestamp": 1328991365, "metainfo": ""}