{"sha": "2cec661ff0ae9cc88a1908e71247de86d22f4145", "log": "Removing some unnecessary code.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n \n package com.google.gson;\n \n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n import java.math.BigDecimal;\n   private static ParameterizedTypeHandlerMap<InstanceCreator<?>> createDefaultInstanceCreators() {\n     ParameterizedTypeHandlerMap<InstanceCreator<?>> map =\n         new ParameterizedTypeHandlerMap<InstanceCreator<?>>();\n-    map.register(Enum.class, ENUM_TYPE_ADAPTER);\n     map.register(Map.class, MAP_TYPE_ADAPTER);\n \n     // Add Collection type instance creators\n   }\n \n   @SuppressWarnings(\"unchecked\")\n-  private static class EnumTypeAdapter<T extends Enum<T>> implements JsonSerializer<T>,\n-      JsonDeserializer<T>, InstanceCreator<Enum<?>> {\n+  private static class EnumTypeAdapter<T extends Enum<T>>\n+      implements JsonSerializer<T>, JsonDeserializer<T> {\n     public JsonElement serialize(T src, Type typeOfSrc, JsonSerializationContext context) {\n       return new JsonPrimitive(src.name());\n     }\n     public T deserialize(JsonElement json, Type classOfT, JsonDeserializationContext context)\n         throws JsonParseException {\n       return (T) Enum.valueOf((Class<T>) classOfT, json.getAsString());\n-    }\n-\n-    public Enum<?> createInstance(Type type) {\n-      Class<Enum<?>> enumClass = (Class<Enum<?>>) type;\n-      try {\n-        Method valuesMethod = enumClass.getMethod(\"values\");\n-        Enum<?>[] enums = (Enum<?>[]) valuesMethod.invoke(null);\n-        return enums[0];\n-      } catch (NoSuchMethodException e) {\n-        throw new RuntimeException(e);\n-      } catch (IllegalAccessException e) {\n-        throw new RuntimeException(e);\n-      } catch (InvocationTargetException e) {\n-        throw new RuntimeException(e);\n-      }\n     }\n \n     @Override\n--- a/gson/src/main/java/com/google/gson/MappedObjectConstructor.java\n+++ b/gson/src/main/java/com/google/gson/MappedObjectConstructor.java\n   public <T> T construct(Type typeOfT) {\n     if (instanceCreatorMap.hasAnyHandlerFor(typeOfT)) {\n       InstanceCreator<T> creator = (InstanceCreator<T>) instanceCreatorMap.getHandlerFor(typeOfT);\n-      return creator.createInstance(typeOfT);\n-    }\n-    TypeInfo typeInfo = new TypeInfo(typeOfT);\n-    if (typeInfo.isEnum()) {\n-      InstanceCreator<T> creator =\n-          (InstanceCreator<T>) instanceCreatorMap.getHandlerFor(Enum.class);\n       return creator.createInstance(typeOfT);\n     }\n     return (T) constructWithNoArgConstructor(typeOfT);", "timestamp": 1232413259, "metainfo": ""}