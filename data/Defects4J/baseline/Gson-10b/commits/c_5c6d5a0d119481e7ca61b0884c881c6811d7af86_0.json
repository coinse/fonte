{"sha": "5c6d5a0d119481e7ca61b0884c881c6811d7af86", "log": "Remove unneeded exception handling in Gson class.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n    */\n   @SuppressWarnings(\"unchecked\")\n   public <T> T fromJson(Reader json, Type typeOfT) throws JsonParseException {\n-    try {\n-      JsonElement root = new JsonParser().parse(json);\n-      JsonDeserializationContext context = new JsonDeserializationContextDefault(\n-          createDefaultObjectNavigatorFactory(), deserializers, objectConstructor);\n-      T target = (T) context.deserialize(root, typeOfT);\n-      return target;\n-    } catch (StackOverflowError e) {\n-      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n-    } catch (OutOfMemoryError e) {\n-      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n-    }\n+    JsonElement root = new JsonParser().parse(json);\n+    JsonDeserializationContext context = new JsonDeserializationContextDefault(\n+        createDefaultObjectNavigatorFactory(), deserializers, objectConstructor);\n+    T target = (T) context.deserialize(root, typeOfT);\n+    return target;\n   }\n \n   /**", "timestamp": 1238613970, "metainfo": ""}