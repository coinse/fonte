{"sha": "94e21eca211c9af260a6a37c24a6052afc139001", "log": "renamed JsonArray.contains() to has() to be consistent with JsonObject.has()", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonArray.java\n+++ b/gson/src/main/java/com/google/gson/JsonArray.java\n    * If the array does not contain the element, it is unchanged.\n    * @param element element to be removed from this array, if present\n    * @return true if this array contained the specified element, false otherwise\n+   * @since 2.3\n    */\n   public boolean remove(JsonElement element) {\n     return elements.remove(element);\n    * @param index index the index of the element to be removed\n    * @return the element previously at the specified position\n    * @throws IndexOutOfBoundsException if the specified index is outside the array bounds\n+   * @since 2.3\n    */\n   public JsonElement remove(int index) {\n     return elements.remove(index);\n    * Returns true if this array contains the specified element.\n    * @return true if this array contains the specified element.\n    * @param element whose presence in this array is to be tested\n-   */\n-  public boolean contains(JsonElement element) {\n+   * @since 2.3\n+   */\n+  public boolean has(JsonElement element) {\n     return elements.contains(element);\n   }\n \n--- a/gson/src/test/java/com/google/gson/JsonArrayTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonArrayTest.java\n     JsonPrimitive a = new JsonPrimitive(\"a\");\n     array.add(a);\n     assertTrue(array.remove(a));\n-    assertFalse(array.contains(a));\n+    assertFalse(array.has(a));\n     array.add(a);\n     array.add(new JsonPrimitive(\"b\"));\n     assertEquals(\"b\", array.remove(1).getAsString());\n     assertEquals(1, array.size());\n-    assertTrue(array.contains(a));\n+    assertTrue(array.has(a));\n   }\n \n   public void testSet() {", "timestamp": 1404408667, "metainfo": ""}