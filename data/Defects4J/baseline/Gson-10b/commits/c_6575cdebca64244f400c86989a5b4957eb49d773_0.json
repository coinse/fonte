{"sha": "6575cdebca64244f400c86989a5b4957eb49d773", "log": "When EOF is encountered prematurely, Streams.parse() (and JsonParser) now throw JsonSyntaxException.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/Streams.java\n+++ b/gson/src/main/java/com/google/gson/internal/Streams.java\n       if (isEmpty) {\n         return JsonNull.INSTANCE;\n       }\n-      // We could possibly throw JsonSyntaxException since the stream prematurely ended.\n-      // However, it seems safe to throw JsonIOException since the source is an IOException.\n-      // Another reason is to maintain backward compatibility.\n-      throw new JsonIOException(e);\n+      // The stream ended prematurely so it is likely a syntax error.\n+      throw new JsonSyntaxException(e);\n     } catch (MalformedJsonException e) {\n       throw new JsonSyntaxException(e);\n     } catch (IOException e) {\n--- a/gson/src/test/java/com/google/gson/JsonParserTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonParserTest.java\n \n package com.google.gson;\n \n+import java.io.CharArrayReader;\n+import java.io.CharArrayWriter;\n+import java.io.StringReader;\n+\n+import junit.framework.TestCase;\n+\n import com.google.gson.common.TestTypes.BagOfPrimitives;\n import com.google.gson.internal.Streams;\n import com.google.gson.stream.JsonReader;\n-import java.io.CharArrayReader;\n-import java.io.CharArrayWriter;\n-import java.io.StringReader;\n-import junit.framework.TestCase;\n \n /**\n  * Unit test for {@link JsonParser}\n     try {\n       parser.parse(\"[[]\");\n       fail();\n-    } catch (JsonParseException expected) { }\n+    } catch (JsonSyntaxException expected) { }\n   }\n \n   public void testParseUnquotedStringArrayFails() {", "timestamp": 1341254214, "metainfo": ""}