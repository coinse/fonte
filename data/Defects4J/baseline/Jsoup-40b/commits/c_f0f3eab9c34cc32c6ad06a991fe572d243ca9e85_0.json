{"sha": "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85", "log": "TextNode performance tweaks", "commit": "\n--- a/src/main/java/org/jsoup/nodes/TextNode.java\n+++ b/src/main/java/org/jsoup/nodes/TextNode.java\n package org.jsoup.nodes;\n+\n+import java.util.regex.Pattern;\n \n import org.apache.commons.lang.StringEscapeUtils;\n import org.apache.commons.lang.Validate;\n  @author Jonathan Hedley, jonathan@hedley.net */\n public class TextNode extends Node {\n     private static final String TEXT_KEY = \"text\";\n+    private static final Pattern spaceNormaliser = Pattern.compile(\"\\\\s{2,}|(\\\\r\\\\n|\\\\r|\\\\n)\");\n \n     /**\n      Create a new TextNode representing the supplied (unencoded) text).\n             html = normaliseWhitespace(html);\n         }\n \n-        if (!isBlank() && parentNode instanceof Element && ((Element) parentNode).tag().canContainBlock()  && siblingIndex() == 0)\n+        if (siblingIndex() == 0 && parentNode instanceof Element && ((Element) parentNode).tag().canContainBlock() && !isBlank())\n             indent(accum);\n         accum.append(html);\n     }\n     }\n \n     static String normaliseWhitespace(String text) {\n-        text = text.replaceAll(\"\\\\s{2,}|(\\\\r\\\\n|\\\\r|\\\\n)\", \" \"); // more than one space, and newlines to \" \"\n+        text = spaceNormaliser.matcher(text).replaceAll(\" \"); // more than one space, and newlines to \" \"\n         return text;\n     }\n ", "timestamp": 1309605114, "metainfo": ""}