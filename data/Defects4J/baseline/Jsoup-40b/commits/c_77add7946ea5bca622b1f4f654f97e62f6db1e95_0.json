{"sha": "77add7946ea5bca622b1f4f654f97e62f6db1e95", "log": "Fixed test package", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/jsoup/safety/CleanerTest.java\n+package org.jsoup.safety;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.TextUtil;\n+import org.jsoup.safety.Whitelist;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+\n+/**\n+ Tests for the cleaner.\n+\n+ @author Jonathan Hedley, jonathan@hedley.net */\n+public class CleanerTest {\n+    @Test public void simpleBehaviourTest() {\n+        String h = \"<div><p class=foo><a href='http://evil.com'>Hello <b id=bar>there</b>!</a></div>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.simpleText());\n+\n+        assertEquals(\"Hello <b>there</b>!\", TextUtil.stripNewlines(cleanHtml));\n+    }\n+    \n+    @Test public void simpleBehaviourTest2() {\n+        String h = \"Hello <b>there</b>!\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.simpleText());\n+\n+        assertEquals(\"Hello <b>there</b>!\", TextUtil.stripNewlines(cleanHtml));\n+    }\n+\n+    @Test public void basicBehaviourTest() {\n+        String h = \"<div><p><a href='javascript:sendAllMoney()'>Dodgy</a> <A HREF='HTTP://nice.com'>Nice</p><blockquote>Hello</blockquote>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.basic());\n+\n+        assertEquals(\"<p><a rel=\\\"nofollow\\\">Dodgy</a> <a href=\\\"http://nice.com\\\" rel=\\\"nofollow\\\">Nice</a></p><blockquote>Hello</blockquote>\",\n+                TextUtil.stripNewlines(cleanHtml));\n+    }\n+    \n+    @Test public void basicWithImagesTest() {\n+        String h = \"<div><p><img src='http://example.com/' alt=Image></p><p><img src='ftp://ftp.example.com'></p></div>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.basicWithImages());\n+        assertEquals(\"<p><img src=\\\"http://example.com/\\\" alt=\\\"Image\\\" /></p><p><img /></p>\", TextUtil.stripNewlines(cleanHtml));\n+    }\n+    \n+    @Test public void testRelaxed() {\n+        String h = \"<h1>Head</h1><td>One<td>Two</td>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<h1>Head</h1><table><tr><td>One</td><td>Two</td></tr></table>\", TextUtil.stripNewlines(cleanHtml));\n+    }\n+    \n+    @Test public void testDropComments() {\n+        String h = \"<p>Hello<!-- no --></p>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<p>Hello</p>\", cleanHtml);\n+    }\n+    \n+    @Test public void testDropXmlProc() {\n+        String h = \"<?import namespace=\\\"xss\\\"><p>Hello</p>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<p>Hello</p>\", cleanHtml);\n+    }\n+    \n+    @Test public void testDropScript() {\n+        String h = \"<SCRIPT SRC=//ha.ckers.org/.j><SCRIPT>alert(/XSS/.source)</SCRIPT>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"\", cleanHtml);\n+    }\n+    \n+    @Test public void testDropImageScript() {\n+        String h = \"<IMG SRC=\\\"javascript:alert('XSS')\\\">\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<img />\", cleanHtml);\n+    }\n+    \n+    @Test public void testCleanJavascriptHref() {\n+        String h = \"<A HREF=\\\"javascript:document.location='http://www.google.com/'\\\">XSS</A>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<a>XSS</a>\", cleanHtml);\n+    }\n+\n+    @Test public void testDropsUnknownTags() {\n+        String h = \"<p><custom foo=true>Test</custom></p>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());\n+        assertEquals(\"<p>Test</p>\", cleanHtml);\n+    }\n+    \n+    @Test public void testHandlesEmptyAttributes() {\n+        String h = \"<img alt=\\\"\\\" src= unknown=''>\";\n+        String cleanHtml = Jsoup.clean(h, Whitelist.basicWithImages());\n+        assertEquals(\"<img alt=\\\"\\\" />\", cleanHtml);\n+    }\n+\n+    @Test public void testIsValid() {\n+        String ok = \"<p>Test <b><a href='http://example.com/'>OK</a></b></p>\";\n+        String nok1 = \"<p><script></script>Not <b>OK</b></p>\";\n+        String nok2 = \"<p align=right>Test Not <b>OK</b></p>\";\n+        assertTrue(Jsoup.isValid(ok, Whitelist.basic()));\n+        assertFalse(Jsoup.isValid(nok1, Whitelist.basic()));\n+        assertFalse(Jsoup.isValid(nok2, Whitelist.basic()));\n+    }\n+    \n+    @Test public void resolvesRelativeLinks() {\n+        String html = \"<a href='/foo'>Link</a>\";\n+        String clean = Jsoup.clean(html, \"http://example.com/\", Whitelist.basic());\n+        assertEquals(\"<a href=\\\"http://example.com/foo\\\" rel=\\\"nofollow\\\">Link</a>\", clean);\n+    }\n+    \n+    @Test public void dropsUnresolvableRelativeLinks() {\n+        String html = \"<a href='/foo'>Link</a>\";\n+        String clean = Jsoup.clean(html, Whitelist.basic());\n+        assertEquals(\"<a rel=\\\"nofollow\\\">Link</a>\", clean);\n+    }\n+}", "timestamp": 1309605112, "metainfo": ""}