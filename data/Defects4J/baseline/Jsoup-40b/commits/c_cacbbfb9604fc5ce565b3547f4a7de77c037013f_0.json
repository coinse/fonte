{"sha": "cacbbfb9604fc5ce565b3547f4a7de77c037013f", "log": "Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted charset declaration.", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n  *\n  */\n public class DataUtil {\n-    private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=([^\\\\s;]*)\");\n+    private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=\\\\s*\\\"?([^\\\\s;\\\"]*)\");\n     static final String defaultCharset = \"UTF-8\"; // used if not found in header or meta charset\n     private static final int bufferSize = 0x20000; // ~130K.\n \n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n  * @see org.jsoup.Jsoup#connect(String) \n  */\n public class HttpConnection implements Connection {\n-    private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=([^\\\\s;]*)\");\n-\n     public static Connection connect(String url) {\n         Connection con = new HttpConnection();\n         con.url(url);\n                         new BufferedInputStream(new GZIPInputStream(conn.getInputStream())) :\n                         new BufferedInputStream(conn.getInputStream());\n                 res.byteData = DataUtil.readToByteBuffer(inStream);\n-                res.charset = getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it\n+                res.charset = DataUtil.getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it\n             } finally {\n                 if (inStream != null) inStream.close();\n             }\n             return key + \"=\" + value;\n         }      \n     }\n-\n-    /**\n-     * Parse out a charset from a content type header.\n-     *\n-     * @param contentType e.g. \"text/html; charset=EUC-JP\"\n-     * @return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n-     */\n-    private static String getCharsetFromContentType(String contentType) {\n-        if (contentType == null) return null;\n-\n-        Matcher m = charsetPattern.matcher(contentType);\n-        if (m.find()) {\n-            return m.group(1).trim().toUpperCase();\n-        }\n-        return null;\n-    }\n }\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n         assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html\"));\n         assertEquals(null, DataUtil.getCharsetFromContentType(null));\n     }\n+\n+    @Test public void testQuotedCharset() {\n+        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"utf-8\\\"\"));\n+        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=\\\"utf-8\\\"\"));\n+        assertEquals(\"ISO-8859-1\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"ISO-8859-1\\\"\"));\n+    }\n }", "timestamp": 1309605121, "metainfo": ""}