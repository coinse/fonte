{"sha": "f317c04acf821d61601f5d986252db40505153bc", "log": "Force strict entity matching (must be &xxx; and not &xxx) in element attributes.  Fixes #71", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Attribute.java\n+++ b/src/main/java/org/jsoup/nodes/Attribute.java\n      * @return attribute\n      */\n     public static Attribute createFromEncoded(String unencodedKey, String encodedValue) {\n-        String value = Entities.unescape(encodedValue);\n+        String value = Entities.unescape(encodedValue, true);\n         return new Attribute(unencodedKey, value);\n     }\n \n--- a/src/main/java/org/jsoup/nodes/Entities.java\n+++ b/src/main/java/org/jsoup/nodes/Entities.java\n     private static final Map<Character, String> baseByVal;\n     private static final Map<Character, String> fullByVal;\n     private static final Pattern unescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);?\");\n+    private static final Pattern strictUnescapePattern = Pattern.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\\\d*);\");\n \n     static String escape(String string, Document.OutputSettings out) {\n         return escape(string, out.encoder(), out.escapeMode());\n     }\n \n     static String unescape(String string) {\n+        return unescape(string, false);\n+    }\n+\n+    /**\n+     * Unescape the input string.\n+     * @param string\n+     * @param strict if \"strict\" (that is, requires trailing ';' char, otherwise that's optional)\n+     * @return\n+     */\n+    static String unescape(String string, boolean strict) {\n         if (!string.contains(\"&\"))\n             return string;\n \n-        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]\\\\d*);?\n+        Matcher m = strict? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]\\\\d*);?\n         StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs\n         // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required\n \n--- a/src/test/java/org/jsoup/nodes/EntitiesTest.java\n+++ b/src/test/java/org/jsoup/nodes/EntitiesTest.java\n \n         assertEquals(\"&0987654321; &unknown\", Entities.unescape(\"&0987654321; &unknown\"));\n     }\n+\n+    @Test public void strictUnescape() { // for attributes, enforce strict unescaping (must look like &xxx; , not just &xxx)\n+        String text = \"Hello &mid &amp;\";\n+        assertEquals(\"Hello &mid &\", Entities.unescape(text, true));\n+        assertEquals(\"Hello \u2223 &\", Entities.unescape(text));\n+        assertEquals(\"Hello \u2223 &\", Entities.unescape(text, false));\n+    }\n+\n     \n     @Test public void caseSensitive() {\n         String unescaped = \"\u00dc \u00fc & &\";\n--- a/src/test/java/org/jsoup/parser/AttributeParseTest.java\n+++ b/src/test/java/org/jsoup/parser/AttributeParseTest.java\n import org.jsoup.Jsoup;\n import org.jsoup.nodes.Attributes;\n import org.jsoup.nodes.Element;\n+import org.jsoup.select.Elements;\n import org.junit.Test;\n \n import static org.junit.Assert.*;\n         Attributes attr = el.attributes();\n         assertEquals(0, attr.size());\n     }\n+\n+    @Test public void strictAttributeUnescapes() {\n+        String html = \"<a id=1 href='?foo=bar&mid&lt=true'>One</a> <a id=2 href='?foo=bar&lt;qux&lg=1'>Two</a>\";\n+        Elements els = Jsoup.parse(html).select(\"a\");\n+        assertEquals(\"?foo=bar&mid&lt=true\", els.first().attr(\"href\"));\n+        assertEquals(\"?foo=bar<qux&lg=1\", els.last().attr(\"href\"));\n+    }\n }", "timestamp": 1309605126, "metainfo": ""}