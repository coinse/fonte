{"sha": "58e491f4b40ed75fcaba6b0630a507c22a8814e9", "log": "fix various javadoc warnings   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CommonsLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CommonsLinkedList.java\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/CommonsLinkedList.java,v 1.3 2003/01/10 20:21:22 rwaldhoff Exp $\n+ * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2003 The Apache Software Foundation.  All rights\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n package org.apache.commons.collections;\n \n import java.util.NoSuchElementException;\n \n /**\n- * An implementation of {@link java.util.List} which duplicates the behaviour\n- * of {@link java.util.LinkedList}, but which provides a more open interface for\n+ * An implementation of {@link List} which duplicates the behaviour\n+ * of {@link LinkedList}, but which provides a more open interface for\n  * subclasses to extend.\n  * \n- * @since 2.2\n+ * @since Commons Collections 2.2\n  * @author <a href=\"mailto:rich@rd.gen.nz\">Rich Dougherty</a>\n- * @version $Revision: 1.2 $ $Date: 2003/01/07 23:40:55 $\n+ * @version $Revision: 1.3 $ $Date: 2003/01/10 20:21:22 $\n  */\n class CommonsLinkedList extends LinkedList\n         implements List, Serializable {\n         /**\n          * Checks if a value is equal to this node's element.\n          *\n-         * @return True if the elements are both null or both equal according\n-         * to {@link Object#equals()}.\n+         * @return <code>true</code> iff the elements are both <code>null</code>\n+         *         or {@link Object#equals equal}.\n          */\n         public boolean elementEquals(Object otherElement) {\n             if (element == null) {\n \n     /**\n      * The equivalent of a default constructor, broken out so it can be called\n-     * by any constructor and by {@link #readObject(ObjectInputStream)}.\n+     * by any constructor and by <code>readObject</code>.\n      * Subclasses which override this method should make sure they call it so\n      * the list is initialised properly.\n      */\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.7 2002/12/13 12:01:58 scolebourne Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/12/13 12:01:58 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.8 2003/01/10 20:21:23 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n /**\n  * Provides static utility methods and decorators for {@link Iterator} \n  * instances. The implementations are provided in the \n- * <code>org.apache.commons.collections.iterators</code> subpackage.\n+ * {@link org.apache.commons.collections.iterators} subpackage.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorUtils.java,v 1.7 2002/12/13 12:01:58 scolebourne Exp $\n- * @since 2.1\n+ * @version $Revision: 1.8 $ $Date: 2003/01/10 20:21:23 $\n+ * @since Commons Collections 2.1\n  */\n public class IteratorUtils {\n     // validation is done in this class in certain cases because the\n     \n     /**\n      * Gets an immutable version of an {@link Iterator}. The returned object\n-     * will always throw an {@link java.lang.UnsupportedOperationException} for\n-     * the {@link Iterator#remove()} method.\n+     * will always throw an {@link UnsupportedOperationException} for\n+     * the {@link Iterator#remove} method.\n      *\n      * @param iterator The iterator to make immutable.\n      * @return An immutable version of the iterator.\n     }\n     \n     /**\n-     * Gets an immutable version of a {@link ListIterator}.The returned object\n-     * will always throw an {@link java.lang.UnsupportedOperationException} for\n-     * the {@link Iterator#remove()}, {@link ListIterator#add()} and\n-     * {@link ListIterator#set(Object)} methods.\n+     * Gets an immutable version of a {@link ListIterator}. The returned object\n+     * will always throw an {@link UnsupportedOperationException} for\n+     * the {@link Iterator#remove}, {@link ListIterator#add} and\n+     * {@link ListIterator#set} methods.\n      *\n      * @param listIterator The iterator to make immutable.\n      * @return An immutable version of the iterator.\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.12 2002/12/15 13:05:03 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2002/12/15 13:05:03 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.13 2003/01/10 20:21:23 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Iterator;\n import java.util.List;\n import java.util.ListIterator;\n+\n /**\n  * Contains static utility methods and decorators for {@link List} \n  * instances.\n  *\n- * @since 1.0\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.13 $ $Date: 2003/01/10 20:21:23 $\n+ * \n  * @author  <a href=\"mailto:fede@apache.org\">Federico Barbieri</a>\n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  * @author Paul Jack\n \n     /**\n      * An empty unmodifiable list.\n-     * This uses the {@link #java.util.Collections Collections} implementation \n+     * This uses the {@link Collections Collections} implementation \n      * and is provided for completeness.\n      */\n     public static final List EMPTY_LIST = Collections.EMPTY_LIST;\n--- a/src/java/org/apache/commons/collections/NodeCachingLinkedList.java\n+++ b/src/java/org/apache/commons/collections/NodeCachingLinkedList.java\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/NodeCachingLinkedList.java,v 1.4 2003/01/10 20:21:23 rwaldhoff Exp $\n+ * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n package org.apache.commons.collections;\n \n  * unnecessary object creates and deletion. This should result in a performance\n  * improvement.\n  * \n- * @since 2.2\n+ * @since Commons Collections 2.2\n  * @author Jeff Varszegi\n  * @author <a href=\"mailto:rich@rd.gen.nz\">Rich Dougherty</a>\n- * @version $Revision: 1.3 $ $Date: 2003/01/07 23:40:57 $\n+ * @version $Revision: 1.4 $ $Date: 2003/01/10 20:21:23 $\n  */\n public class NodeCachingLinkedList extends CommonsLinkedList {\n \n \n     /**\n      * Calls the superclass' implementation then calls\n-     * {@link #addNodeToCache(Node)} on the node which has been removed.\n-     * \n-     * @see org.apache.commons.collections.CommonsLinkedList#removeNode(Node)\n+     * <code>addNodeToCache</code> on the node which has \n+     * been removed.\n+     * \n+     * @see CommonsLinkedList#removeNode\n      */\n     protected void removeNode(Node node) {\n         super.removeNode(node);\n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.8 2002/12/15 13:05:03 scolebourne Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/12/15 13:05:03 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.9 2003/01/10 20:21:23 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Set;\n import java.util.SortedSet;\n import java.util.TreeSet;\n+\n /**\n  * Provides static utility methods and decorators for {@link Set} \n  * and {@link SortedSet} instances.\n  *\n+ * @version $Revision: 1.9 $ $Date: 2003/01/10 20:21:23 $\n+ * @since Commons Collection 2.1\n+ * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Id: SetUtils.java,v 1.8 2002/12/15 13:05:03 scolebourne Exp $\n- * @since 2.1\n  */\n public class SetUtils {\n \n     /**\n      * An empty unmodifiable set.\n-     * This uses the {@link #java.util.Collections Collections} implementation \n+     * This uses the {@link Collections Collections} implementation \n      * and is provided for completeness.\n      */\n     public static final Set EMPTY_SET = Collections.EMPTY_SET;\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n-/* \n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.1 2003/01/10 00:21:08 rwaldhoff Exp $\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.2 2003/01/10 20:21:23 rwaldhoff Exp $\n  * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2003 The Apache Software Foundation.  All rights\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n package org.apache.commons.collections.comparators;\n \n  * \n  * @since Commons Collections 2.2\n  * \n- * @version $Revision: 1.1 $ $Date: 2003/01/10 00:21:08 $\n+ * @version $Revision: 1.2 $ $Date: 2003/01/10 20:21:23 $\n  * \n  * @author Rodney Waldhoff\n  */\n      * that sorts <code>false</code> values before \n      * <code>true</code> values.\n      * \n-     * Equivalent to {@link BooleanComparator(boolean) BooleanComparator(false)}.\n+     * Equivalent to {@link #BooleanComparator(boolean) BooleanComparator(false)}.\n      */\n     public BooleanComparator() {\n         this(false);\n--- a/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n \n import java.io.Serializable;\n  * for enforcing the natural order in custom implementations\n  * of SortedSet and SortedMap.\n  *\n- * @since 2.0\n+ * @since Commons Collections 2.0\n  * @author bayard@generationjava.com\n- * @version $Revision: 1.7 $ $Date: 2003/01/07 18:49:01 $\n+ * @version $Revision: 1.8 $ $Date: 2003/01/10 20:21:23 $\n  */\n public class ComparableComparator implements Comparator,Serializable {\n \n      * This implementation returns <code>true</code>\n      * iff <code><i>that</i>.{@link Object#getClass getClass()}</code>\n      * equals <code>this.getClass()</code>.  Subclasses may want to override\n-     * this behavior to remain consistent with the {@link Comparator.equals}\n+     * this behavior to remain consistent with the {@link Comparator#equals}\n      * contract.\n      * @since Collections 2.2\n      */\n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.8 2003/01/07 23:26:47 rwaldhoff Exp $\n- * $Revision: 1.8 $\n- * $Date: 2003/01/07 23:26:47 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.9 2003/01/10 20:21:25 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * it <i>is</i> thread-safe to perform multiple comparisons\n  * after all the setup operations are complete.</p>\n  * \n- * @since 2.0\n+ * @since Commons Collections 2.0\n  * @author Morgan Delagrange\n- * @version $Revision: 1.8 $ $Date: 2003/01/07 23:26:47 $\n+ * @version $Revision: 1.9 $ $Date: 2003/01/10 20:21:25 $\n  */\n public class ComparatorChain implements Comparator,Serializable {\n \n      * equals <code>this.getClass()</code>, and the underlying \n      * comparators and order bits are equal.  Subclasses may want \n      * to override this behavior to remain consistent with the \n-     * {@link Comparator.equals} contract.\n+     * {@link Comparator#equals} contract.\n      * \n      * @since Collections 2.2\n      */\n--- a/src/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/NullComparator.java\n-package org.apache.commons.collections.comparators;\n-\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/NullComparator.java,v 1.6 2003/01/10 20:21:25 rwaldhoff Exp $\n+ * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2001 The Apache Software Foundation.  All rights\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n+package org.apache.commons.collections.comparators;\n \n import java.io.Serializable;\n import java.util.Comparator;\n  *  A Comparator that will compare nulls to be either lower or higher than\n  *  other objects.\n  *\n+ *  @since Commons Collections 2.0\n+ *  @version $Revision: 1.6 $ $Date: 2003/01/10 20:21:25 $ \n+ *\n  *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- *  @version $Revision: 1.5 $ $Date: 2003/01/07 18:20:07 $ \n  **/\n public class NullComparator implements Comparator, Serializable {\n \n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n-package org.apache.commons.collections.comparators;\n-\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ReverseComparator.java,v 1.11 2003/01/10 20:21:25 rwaldhoff Exp $\n+ * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgment may appear in the software itself,\n  *    if and wherever such third-party acknowledgments normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n+package org.apache.commons.collections.comparators;\n \n import java.io.Serializable;\n import java.util.Comparator;\n \n /**\n- * Reverses the order of another comparator.\n+ * Reverses the order of another comparator by \n+ * reversing the arguments to its {@link #compare} \n+ * method.\n  * \n- * @since 2.0\n+ * @since Commons Collections 2.0\n+ * @version $Revision: 1.11 $ $Date: 2003/01/10 20:21:25 $\n+ *\n  * @author bayard@generationjava.com\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- * @version $Id: ReverseComparator.java,v 1.10 2003/01/07 23:26:47 rwaldhoff Exp $\n  */\n public class ReverseComparator implements Comparator,Serializable {\n \n      * equals <code>this.getClass()</code>, and the underlying \n      * comparators are equal.  Subclasses may want to override\n      * this behavior to remain consistent with the \n-     * {@link Comparator.equals} contract.\n+     * {@link Comparator#equals} contract.\n      * \n      * @since Collections 2.2\n      */\n--- a/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.1 2002/11/21 23:09:01 scolebourne Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/11/21 23:09:01 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.2 2003/01/10 20:21:25 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n+\n /**\n- * <code>LoopingIterator</code> provides an Iterator that restarts when it\n- * reaches the end.\n+ * An Iterator that restarts when it reaches the end.\n  * <p>\n  * The iterator will loop continuously around the provided elements, unless \n  * there are no elements in the collection to begin with, or all the elements\n- * are removed using the {@link remove} method.\n+ * have been {@link #remove removed}.\n  * <p>\n  * Concurrent modifications are not directly supported, and for most collection\n  * implementations will throw a ConcurrentModificationException. \n  *\n- * @since 2.2\n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.2 $ $Date: 2003/01/10 20:21:25 $\n+ *\n  * @author <a href=\"mailto:joncrlsn@users.sf.net\">Jonathan Carlson</a>\n  * @author Stephen Colebourne\n- * @version $Revision: 1.1 $\n  */\n public class LoopingIterator implements Iterator {\n     /** The collection to base the iterator on */\n      * Has the iterator any more elements.\n      * <p>\n      * Returns false only if the collection originally had zero elements, or\n-     * all the elements have been removed using {@link #remove}.\n+     * all the elements have been {@link #remove removed}.\n      * \n      * @return <code>true</code> if there are more elements\n      */\n      * Removes the previously retrieved item from the underlying collection.\n      * <p>\n      * This feature is only supported if the underlying collection's \n-     * {@link #iterator} method returns an implementation that supports it.\n+     * {@link Collection#iterator iterator} method returns an implementation \n+     * that supports it.\n      * <p>\n      * This method can only be called after at least one {@link #next} method call.\n      * After a removal, the remove method may not be called again until another\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.1 2002/12/13 12:01:35 scolebourne Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/12/13 12:01:35 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.2 2003/01/10 20:21:25 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n \n import java.util.Iterator;\n import java.util.NoSuchElementException;\n+\n /** \n- * Implements an {@link java.util.Iterator Iterator} over an array of objects.\n+ * An {@link Iterator Iterator} over an array of objects.\n  * <p>\n  * This iterator does not support {@link #remove}, as the object array cannot be\n- * changed in size.\n+ * structurally modified.\n  * <p>\n  * The iterator implements a {@link #reset} method, allowing the reset of the iterator\n  * back to the start if required.\n  *\n- * @since 2.2\n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.2 $ $Date: 2003/01/10 20:21:25 $\n+ * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author Mauricio S. Moura\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n  * @author <a href=\"mailto:neilotoole@users.sourceforge.net\">Neil O'Toole</a>\n  * @author Stephen Colebourne\n- * @version $Revision: 1.1 $\n  */\n public class ObjectArrayIterator implements Iterator {\n \n      * Constructor for use with <code>setArray</code>.\n      * <p>\n      * Using this constructor, the iterator is equivalent to an empty iterator\n-     * until {@link #setArray(Object)} is  called to establish the array to iterate over.\n+     * until {@link #setArray} is  called to establish the array to iterate over.\n      */\n     public ObjectArrayIterator() {\n         super();\n      * Gets the array that this iterator is iterating over. \n      *\n      * @return the array this iterator iterates over, or <code>null</code> if\n-     * the no-arg constructor was used and {@link #setArray(Object)} has never\n+     * the no-arg constructor was used and {@link #setArray} has never\n      * been called with a valid array.\n      */\n     public Object[] getArray() {\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.1 2002/12/13 12:01:35 scolebourne Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/12/13 12:01:35 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.2 2003/01/10 20:21:25 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n \n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n+\n /**\n- * Implements a {@link java.util.ListIterator ListIterator} over an array of objects.\n+ * Implements a {@link ListIterator ListIterator} over an array of objects.\n  * <p>\n- * This iterator does not support {@link #add(Object)} or {@link #remove()}, as the object array \n- * cannot be changed in size. The {@link #set(Object)} method is supported however.\n+ * This iterator does not support {@link #add} or {@link #remove}, as the object array \n+ * cannot be structurally modified. The {@link #set} method is supported however.\n  * <p>\n- * The iterator implements a {@link #reset()} method, allowing the reset of the iterator\n+ * The iterator implements a {@link #reset} method, allowing the reset of the iterator\n  * back to the start if required.\n  *\n  * @see org.apache.commons.collections.iterators.ObjectArrayIterator\n  * @see java.util.Iterator\n  * @see java.util.ListIterator\n  *\n- * @since 2.2\n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.2 $ $Date: 2003/01/10 20:21:25 $\n+ * \n  * @author <a href=\"mailto:neilotoole@users.sourceforge.net\">Neil O'Toole</a>\n  * @author Stephen Colebourne\n- * @version $Revision: 1.1 $\n  */\n public class ObjectArrayListIterator extends ObjectArrayIterator implements ListIterator {\n \n      * Constructor for use with <code>setArray</code>.\n      * <p>\n      * Using this constructor, the iterator is equivalent to an empty iterator\n-     * until {@link #setArray(Object)} is  called to establish the array to iterate over.\n+     * until {@link #setArray} is  called to establish the array to iterate over.\n      */\n     public ObjectArrayListIterator() {\n         super();", "timestamp": 1042230085, "metainfo": ""}