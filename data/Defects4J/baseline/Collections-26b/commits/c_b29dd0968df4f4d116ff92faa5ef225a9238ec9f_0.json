{"sha": "b29dd0968df4f4d116ff92faa5ef225a9238ec9f", "log": "Rename private variables to prevent hiding Don't assign to null twice  ", "commit": "\n--- a/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n      * @return the specified node\n      */\n     private Node<K, V> nextGreater(final Node<K, V> node, final DataElement dataElement) {\n-        Node<K, V> rval = null;\n+        Node<K, V> rval;\n         if (node == null) {\n             rval = null;\n         } else if (node.getRight(dataElement) != null) {\n      * @return the specified node\n      */\n     private Node<K, V> nextSmaller(final Node<K, V> node, final DataElement dataElement) {\n-        Node<K, V> rval = null;\n+        Node<K, V> rval;\n         if (node == null) {\n             rval = null;\n         } else if (node.getLeft(dataElement) != null) {\n     class Inverse implements OrderedBidiMap<V, K> {\n \n         /** Store the keySet once created. */\n-        private Set<V> keySet;\n+        private Set<V> inverseKeySet;\n         /** Store the valuesSet once created. */\n-        private Set<K> valuesSet;\n+        private Set<K> inverseValuesSet;\n         /** Store the entrySet once created. */\n-        private Set<Map.Entry<V, K>> entrySet;\n+        private Set<Map.Entry<V, K>> inverseEntrySet;\n \n         public int size() {\n             return TreeBidiMap.this.size();\n         }\n \n         public Set<V> keySet() {\n-            if (keySet == null) {\n-                keySet = new ValueView(VALUE);\n-            }\n-            return keySet;\n+            if (inverseKeySet == null) {\n+                inverseKeySet = new ValueView(VALUE);\n+            }\n+            return inverseKeySet;\n         }\n \n         public Collection<K> values() {\n-            if (valuesSet == null) {\n-                valuesSet = new KeyView(VALUE);\n-            }\n-            return valuesSet;\n+            if (inverseValuesSet == null) {\n+                inverseValuesSet = new KeyView(VALUE);\n+            }\n+            return inverseValuesSet;\n         }\n \n         public Set<Map.Entry<V, K>> entrySet() {\n-            if (entrySet == null) {\n-                entrySet = new InverseEntryView();\n-            }\n-            return entrySet;\n+            if (inverseEntrySet == null) {\n+                inverseEntrySet = new InverseEntryView();\n+            }\n+            return inverseEntrySet;\n         }\n \n         public OrderedMapIterator<V, K> mapIterator() {", "timestamp": 1287423363, "metainfo": ""}