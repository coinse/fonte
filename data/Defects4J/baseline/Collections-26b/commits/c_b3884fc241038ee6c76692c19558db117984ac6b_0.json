{"sha": "b3884fc241038ee6c76692c19558db117984ac6b", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r656324 | ebourg | 2008-05-14 09:05:43 -0700 (Wed, 14 May 2008) | 1 line          Modified the javadoc in ExtendedProperties to redirect users to Commons Configuration for advanced needs     ------------------------------------------------------------------------     r468687 | scolebourne | 2006-10-28 05:53:28 -0700 (Sat, 28 Oct 2006) | 1 line          COLLECTIONS-229 - Remove deprecated classes and code     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n      * This is the name of the property that can point to other\n      * properties file for including other properties files.\n      */\n-    private String includePropertyName = null;\n-\n-    /**\n-     * This is the default name of the property that can point to other\n-     * properties file for including other properties files.\n-     * \n-     * @deprecated Use getInclude() and setInclude() methods which operate\n-     * on an instance variable from v3.3. Due to be removed in v4.0.\n-     */\n-    protected static String include = \"include\";\n+    private String includePropertyName = \"include\";\n \n     /**\n      * These are the keys in the order they listed\n     /**\n      * Gets the property value for including other properties files.\n      * By default it is \"include\".\n-     * <p>\n-     * NOTE: Prior to v3.3 this method accessed a static variable.\n-     * It now accesses an instance variable. For compatability, if the\n-     * instance variable has not been set then the previous static\n-     * variable is then accessed. However, the protected static variable\n-     * can now only be set by subclasses.\n-     * In v4.0, the static variable will be removed.\n      *\n      * @return the property name which includes another property\n      */\n     public String getInclude() {\n-        if (includePropertyName == null) {\n-            return include;  // backwards compatability\n-        }\n-        if (\"\".equals(includePropertyName)) {\n-            return null;  // hack to allow backwards compatability\n-        }\n         return includePropertyName;\n     }\n \n     /**\n      * Sets the property value for including other properties files.\n      * By default it is \"include\".\n-     * <p>\n-     * NOTE: Prior to v3.3 this method set a static variable and affected all\n-     * users of the class. It now sets an instance variable.\n-     * An empty string is also now converted to null internally.\n-     * In v4.0, the static variable will be removed.\n      *\n      * @param inc  the property name which includes another property, empty converted to null\n      */\n     public void setInclude(String inc) {\n-        if (inc == null) {\n-            inc = \"\";  // hack to allow backwards compatability\n-        }\n         includePropertyName = inc;\n     }\n ", "timestamp": 1252994231, "metainfo": ""}