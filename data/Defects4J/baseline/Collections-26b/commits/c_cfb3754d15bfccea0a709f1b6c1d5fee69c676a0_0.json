{"sha": "cfb3754d15bfccea0a709f1b6c1d5fee69c676a0", "log": "Enable LRUMap testing by adding isGetStructuralModify()   ", "commit": "\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java,v 1.8 2003/12/02 21:56:34 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java,v 1.9 2003/12/07 01:21:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2003/12/02 21:56:34 $\n+ * @version $Revision: 1.9 $ $Date: 2003/12/07 01:21:51 $\n  * \n  * @author Stephen Colebourne\n  */\n         return true;\n     }\n \n+    /**\n+     * Whether the get operation on the map structurally modifies the map,\n+     * such as with LRUMap. Default is false.\n+     * \n+     * @return true if the get method structurally modifies the map\n+     */\n+    public boolean isGetStructuralModify() {\n+        return false;\n+    }\n+    \n     /**\n      * The values to be used in the add and set tests.\n      * Default is two strings.\n             \n             // getValue\n             Object value = it.getValue();\n-            assertSame(\"Value must be mapped to key\", map.get(key), value);\n+            if (isGetStructuralModify() == false) {\n+                assertSame(\"Value must be mapped to key\", map.get(key), value);\n+            }\n             assertTrue(\"Value must be in map\",  map.containsValue(value));\n-            assertSame(\"Value must be mapped to key\", map.get(key), value);\n \n             verify();\n         }\n             } catch (UnsupportedOperationException ex) {}\n             return;\n         }\n-        \n         Object old = it.setValue(newValue);\n         confirmed.put(key, newValue);\n         assertSame(\"Key must not change after setValue\", key, it.getKey());\n         assertSame(\"Value must be changed after setValue\", newValue, it.getValue());\n         assertSame(\"setValue must return old value\", value, old);\n         assertEquals(\"Map must contain key\", true, map.containsKey(key));\n-        assertEquals(\"Map must not contain old value\", false, map.containsValue(old));\n+        // test against confirmed, as map may contain value twice\n+        assertEquals(\"Map must not contain old value\", \n+            confirmed.containsValue(old), map.containsValue(old));\n         assertEquals(\"Map must contain new value\", true, map.containsValue(newValue));\n         verify();\n         \n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java,v 1.4 2003/12/03 19:03:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java,v 1.5 2003/12/07 01:21:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/03 19:03:21 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/07 01:21:51 $\n  * \n  * @author Stephen Colebourne\n  */\n             \n             // getValue\n             Object value = it.getValue();\n-            assertSame(\"Value must be mapped to key\", map.get(key), value);\n+            if (isGetStructuralModify() == false) {\n+                assertSame(\"Value must be mapped to key\", map.get(key), value);\n+            }\n             assertTrue(\"Value must be in map\",  map.containsValue(value));\n-            assertSame(\"Value must be mapped to key\", map.get(key), value);\n \n             assertEquals(true, it.hasPrevious());\n             \n--- a/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java,v 1.1 2003/12/02 23:51:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java,v 1.2 2003/12/07 01:21:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Abstract test class for {@link IterableMap} methods and contracts.\n  *\n- * @version $Revision: 1.1 $ $Date: 2003/12/02 23:51:49 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/07 01:21:51 $\n  * \n  * @author Stephen Colebourne\n  */\n         public boolean supportsRemove() {\n             return AbstractTestIterableMap.this.isRemoveSupported();\n         }\n+        \n+        public boolean isGetStructuralModify() {\n+            return AbstractTestIterableMap.this.isGetStructuralModify();\n+        }\n \n         public boolean supportsSetValue() {\n             return AbstractTestIterableMap.this.isSetValueSupported();\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestMap.java,v 1.2 2003/11/18 22:37:17 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestMap.java,v 1.3 2003/12/07 01:21:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * <li> {@link #isPutChangeSupported()}\n  * <li> {@link #isSetValueSupported()}\n  * <li> {@link #isRemoveSupported()}\n+ * <li> {@link #isGetStructuralModify()}\n  * <li> {@link #isAllowDuplicateValues()}\n  * <li> {@link #isAllowNullKey()}\n  * <li> {@link #isAllowNullValue()}\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.2 $ $Date: 2003/11/18 22:37:17 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/07 01:21:51 $\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n \n      */\n     public boolean isRemoveSupported() {\n         return true;\n+    }\n+\n+    /**\n+     * Returns true if the maps produced by \n+     * {@link #makeEmptyMap()} and {@link #makeFullMap()}\n+     * can cause structural modification on a get(). The example is LRUMap.\n+     * <p>\n+     * Default implementation returns false.\n+     * Override if your map class structurally modifies on get.\n+     */\n+    public boolean isGetStructuralModify() {\n+        return false;\n     }\n \n     /**\n             // Entry set should only support remove if map does\n             return AbstractTestMap.this.isRemoveSupported();\n         }\n+        public boolean isGetStructuralModify() {\n+            return AbstractTestMap.this.isGetStructuralModify();\n+        }\n         public boolean supportsEmptyCollections() {\n             return AbstractTestMap.this.supportsEmptyCollections();\n         }\n                 Map.Entry entry = (Map.Entry) it.next();\n                 assertEquals(true, AbstractTestMap.this.map.containsKey(entry.getKey()));\n                 assertEquals(true, AbstractTestMap.this.map.containsValue(entry.getValue()));\n-                assertEquals(AbstractTestMap.this.map.get(entry.getKey()), entry.getValue());\n+                if (isGetStructuralModify() == false) {\n+                    assertEquals(AbstractTestMap.this.map.get(entry.getKey()), entry.getValue());\n+                }\n                 count++;\n             }\n             assertEquals(collection.size(), count);\n--- a/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java,v 1.4 2003/12/02 23:51:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java,v 1.5 2003/12/07 01:21:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Abstract test class for {@link OrderedMap} methods and contracts.\n  *\n- * @version $Revision: 1.4 $ $Date: 2003/12/02 23:51:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/07 01:21:51 $\n  * \n  * @author Stephen Colebourne\n  */\n             return AbstractTestOrderedMap.this.isRemoveSupported();\n         }\n \n+        public boolean isGetStructuralModify() {\n+            return AbstractTestOrderedMap.this.isGetStructuralModify();\n+        }\n+        \n         public boolean supportsSetValue() {\n             return AbstractTestOrderedMap.this.isSetValueSupported();\n         }", "timestamp": 1070760111, "metainfo": ""}