{"sha": "86df16092ee8c24cb65af518b509aee5492d37cc", "log": "Fix to avoid javadoc generation warnings   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestList.java\n+++ b/src/test/org/apache/commons/collections/TestList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.12 2002/10/12 22:36:22 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2002/10/12 22:36:22 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.13 2002/10/13 13:55:35 scolebourne Exp $\n+ * $Revision: 1.13 $\n+ * $Date: 2002/10/13 13:55:35 $\n  *\n  * ====================================================================\n  *\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n- * @version $Id: TestList.java,v 1.12 2002/10/12 22:36:22 scolebourne Exp $\n+ * @version $Id: TestList.java,v 1.13 2002/10/13 13:55:35 scolebourne Exp $\n  */\n public abstract class TestList extends TestCollection {\n \n \n \n    /**\n-    *  Tests that a sublist raises a {@link ConcurrentModificationException}\n+    *  Tests that a sublist raises a {@link java.util.ConcurrentModificationException ConcurrentModificationException}\n     *  if elements are added to the original list.\n     */\n    public void testListSubListFailFastOnAdd() {\n \n \n    /**\n-    *  Tests that a sublist raises a {@link ConcurrentModificationException}\n+    *  Tests that a sublist raises a {@link java.util.ConcurrentModificationException ConcurrentModificationException}\n     *  if elements are removed from the original list.\n     */\n    public void testListSubListFailFastOnRemove() {\n \n    /**\n     *  Invokes all the methods on the given sublist to make sure they raise\n-    *  a {@link ConcurrentModificationException}.\n+    *  a {@link java.util.ConcurrentModificationException ConcurrentModificationException}.\n     */\n    protected void failFastAll(List list) {\n        Method[] methods = List.class.getMethods();\n \n    /**\n     *  Invokes the given method on the given sublist to make sure it raises\n-    *  a {@link ConcurrentModificationException}.\n+    *  a {@link java.util.ConcurrentModificationException ConcurrentModificationException}.\n     *\n     *  Unless the method happens to be the equals() method, in which case\n     *  the test is skipped.  There seems to be a bug in\n--- a/src/test/org/apache/commons/collections/TestMap.java\n+++ b/src/test/org/apache/commons/collections/TestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.19 2002/10/12 22:36:22 scolebourne Exp $\n- * $Revision: 1.19 $\n- * $Date: 2002/10/12 22:36:22 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.20 2002/10/13 13:55:35 scolebourne Exp $\n+ * $Revision: 1.20 $\n+ * $Date: 2002/10/13 13:55:35 $\n  *\n  * ====================================================================\n  *\n  * @author Michael Smith\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n- * @version $Id: TestMap.java,v 1.19 2002/10/12 22:36:22 scolebourne Exp $\n+ * @version $Id: TestMap.java,v 1.20 2002/10/13 13:55:35 scolebourne Exp $\n  */\n public abstract class TestMap extends TestObject {\n \n \n     /**\n      *  Return a new, populated map.  The mappings in the map should match the\n-     *  keys and values returned from {@linke #getSampleKeys()} and {@link\n+     *  keys and values returned from {@link #getSampleKeys()} and {@link\n      *  #getSampleValues()}.  The default implementation uses makeEmptyMap()\n      *  and calls {@link #addSampleMappings()} to add all the mappings to the\n      *  map.\n--- a/src/test/org/apache/commons/collections/TestObject.java\n+++ b/src/test/org/apache/commons/collections/TestObject.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.12 2002/10/12 22:36:22 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2002/10/12 22:36:22 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.13 2002/10/13 13:55:35 scolebourne Exp $\n+ * $Revision: 1.13 $\n+ * $Date: 2002/10/13 13:55:35 $\n  *\n  * ====================================================================\n  *\n import java.io.Serializable;\n \n /**\n- * Tests base {@link java.util.Object} methods and contracts.\n+ * Tests base {@link java.lang.Object} methods and contracts.\n  * <p>\n  * To use, simply extend this class, and implement\n  * the {@link #makeObject()} method.\n  * test case (method) your {@link Object} fails.\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: TestObject.java,v 1.12 2002/10/12 22:36:22 scolebourne Exp $\n+ * @version $Id: TestObject.java,v 1.13 2002/10/13 13:55:35 scolebourne Exp $\n  */\n public abstract class TestObject extends BulkTest {\n     public TestObject(String testName) {", "timestamp": 1034517335, "metainfo": ""}