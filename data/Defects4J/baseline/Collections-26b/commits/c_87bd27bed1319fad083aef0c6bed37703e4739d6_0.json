{"sha": "87bd27bed1319fad083aef0c6bed37703e4739d6", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r471180 | scolebourne | 2006-11-04 05:27:44 -0800 (Sat, 04 Nov 2006) | 1 line          Abstract*Decorator - Generify and use covariant return types     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n  *\n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractSortedBidiMapDecorator\n-        extends AbstractOrderedBidiMapDecorator implements SortedBidiMap {\n-    \n+public abstract class AbstractSortedBidiMapDecorator<K, V> extends\n+        AbstractOrderedBidiMapDecorator<K, V> implements SortedBidiMap<K, V> {\n+\n     /**\n      * Constructor that wraps (not copies).\n      *\n      * @param map  the map to decorate, must not be null\n      * @throws IllegalArgumentException if the collection is null\n      */\n-    public AbstractSortedBidiMapDecorator(SortedBidiMap map) {\n+    public AbstractSortedBidiMapDecorator(SortedBidiMap<K, V> map) {\n         super(map);\n     }\n \n      * \n      * @return the decorated map\n      */\n-    protected SortedBidiMap getSortedBidiMap() {\n-        return (SortedBidiMap) map;\n+    protected SortedBidiMap<K, V> decorated() {\n+        return (SortedBidiMap<K, V>) super.decorated();\n     }\n \n     //-----------------------------------------------------------------------\n-    public SortedBidiMap inverseSortedBidiMap() {\n-        return getSortedBidiMap().inverseSortedBidiMap();\n+    @Override\n+    public SortedBidiMap<V, K> inverseBidiMap() {\n+        return decorated().inverseBidiMap();\n     }\n \n-    public Comparator comparator() {\n-        return getSortedBidiMap().comparator();\n+    public Comparator<? super K> comparator() {\n+        return decorated().comparator();\n     }\n \n-    public SortedMap subMap(Object fromKey, Object toKey) {\n-        return getSortedBidiMap().subMap(fromKey, toKey);\n+    public Comparator<? super V> valueComparator() {\n+        return decorated().valueComparator();\n     }\n \n-    public SortedMap headMap(Object toKey) {\n-        return getSortedBidiMap().headMap(toKey);\n+    public SortedMap<K, V> subMap(K fromKey, K toKey) {\n+        return decorated().subMap(fromKey, toKey);\n     }\n \n-    public SortedMap tailMap(Object fromKey) {\n-        return getSortedBidiMap().tailMap(fromKey);\n+    public SortedMap<K, V> headMap(K toKey) {\n+        return decorated().headMap(toKey);\n+    }\n+\n+    public SortedMap<K, V> tailMap(K fromKey) {\n+        return decorated().tailMap(fromKey);\n     }\n \n }", "timestamp": 1252994059, "metainfo": ""}