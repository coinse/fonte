{"sha": "7cad661cf1a13da80a6deabfbf956a3906572739", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n  * @see DualHashBidiMap\n  * @see DualTreeBidiMap\n  * @since Commons Collections 3.0\n- * @version $Id: AbstractDualBidiMap.java,v 1.11 2004/04/01 22:18:12 scolebourne Exp $\n+ * @version $Id: AbstractDualBidiMap.java,v 1.12 2004/05/15 12:13:03 scolebourne Exp $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n         /** Whether remove is allowed at present */\n         protected boolean canRemove = false;\n         \n+        /**\n+         * Constructor.\n+         * @param iterator  the iterator to decorate\n+         * @param parent  the parent map\n+         */\n         protected KeySetIterator(Iterator iterator, AbstractDualBidiMap parent) {\n             super(iterator);\n             this.parent = parent;\n         /** Whether remove is allowed at present */\n         protected boolean canRemove = false;\n         \n+        /**\n+         * Constructor.\n+         * @param iterator  the iterator to decorate\n+         * @param parent  the parent map\n+         */\n         protected ValuesIterator(Iterator iterator, AbstractDualBidiMap parent) {\n             super(iterator);\n             this.parent = parent;\n         /** Whether remove is allowed at present */\n         protected boolean canRemove = false;\n         \n+        /**\n+         * Constructor.\n+         * @param iterator  the iterator to decorate\n+         * @param parent  the parent map\n+         */\n         protected EntrySetIterator(Iterator iterator, AbstractDualBidiMap parent) {\n             super(iterator);\n             this.parent = parent;\n         /** The parent map */        \n         protected final AbstractDualBidiMap parent;\n         \n+        /**\n+         * Constructor.\n+         * @param entry  the entry to decorate\n+         * @param parent  the parent map\n+         */\n         protected MapEntry(Map.Entry entry, AbstractDualBidiMap parent) {\n             super(entry);\n             this.parent = parent;\n         /** Whether remove is allowed at present */\n         protected boolean canRemove = false;\n         \n+        /**\n+         * Constructor.\n+         * @param parent  the parent map\n+         */\n         protected BidiMapIterator(AbstractDualBidiMap parent) {\n             super();\n             this.parent = parent;\n--- a/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n  * not store each object twice, which can save on memory use.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: DualTreeBidiMap.java,v 1.12 2004/02/18 00:57:39 scolebourne Exp $\n+ * @version $Id: DualTreeBidiMap.java,v 1.13 2004/05/15 12:13:03 scolebourne Exp $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n      * <p>\n      * This implementation copies the elements to an ArrayList in order to\n      * provide the forward/backward behaviour.\n+     * \n+     * @return a new ordered map iterator\n      */\n     public OrderedMapIterator orderedMapIterator() {\n         return new BidiOrderedMapIterator(this);\n      * Internal sorted map view.\n      */\n     protected static class ViewMap extends AbstractSortedMapDecorator {\n+        /** The parent bidi map. */\n         final DualTreeBidiMap bidi;\n         \n+        /**\n+         * Constructor.\n+         * @param bidi  the parent bidi map\n+         * @param sm  the subMap sorted map\n+         */\n         protected ViewMap(DualTreeBidiMap bidi, SortedMap sm) {\n             // the implementation is not great here...\n             // use the maps[0] as the filtered map, but maps[1] as the full map\n         /** The last returned entry */\n         private Map.Entry last = null;\n         \n+        /**\n+         * Constructor.\n+         * @param parent  the parent map\n+         */\n         protected BidiOrderedMapIterator(AbstractDualBidiMap parent) {\n             super();\n             this.parent = parent;\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n  * Decorates another <code>BidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n  * \n  * @author Stephen Colebourne\n  */\n \n     /**\n      * Factory method to create an unmodifiable map.\n+     * <p>\n+     * If the map passed in is already unmodifiable, it is returned.\n      * \n      * @param map  the map to decorate, must not be null\n+     * @return an unmodifiable BidiMap\n      * @throws IllegalArgumentException if map is null\n      */\n     public static BidiMap decorate(BidiMap map) {\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n  * Decorates another <code>OrderedBidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n  * \n  * @author Stephen Colebourne\n  */\n \n     /**\n      * Factory method to create an unmodifiable map.\n+     * <p>\n+     * If the map passed in is already unmodifiable, it is returned.\n      * \n      * @param map  the map to decorate, must not be null\n+     * @return an unmodifiable OrderedBidiMap\n      * @throws IllegalArgumentException if map is null\n      */\n     public static OrderedBidiMap decorate(OrderedBidiMap map) {\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n  * Decorates another <code>SortedBidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n  * \n  * @author Stephen Colebourne\n  */\n \n     /**\n      * Factory method to create an unmodifiable map.\n+     * <p>\n+     * If the map passed in is already unmodifiable, it is returned.\n      * \n      * @param map  the map to decorate, must not be null\n+     * @return an unmodifiable SortedBidiMap\n      * @throws IllegalArgumentException if map is null\n      */\n     public static SortedBidiMap decorate(SortedBidiMap map) {", "timestamp": 1084623183, "metainfo": ""}