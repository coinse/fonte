{"sha": "2e1a8cb3f2b5e891c2d6157489262c2ea25db333", "log": "Update licence and version   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/TestHashBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestHashBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestHashBag.java,v 1.6 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Extension of {@link TestBag} for exercising the {@link HashBag}\n  * implementation.\n+ * \n+ * @version $Revision: 1.6 $ $Date: 2003/10/05 21:17:40 $\n  *\n  * @author Chuck Burdick\n- * @version $Id: TestHashBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n  */\n public class TestHashBag extends AbstractTestBag {\n     \n--- a/src/test/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/org/apache/commons/collections/TestIteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestIteratorUtils.java,v 1.6 2003/09/29 03:56:12 psteitz Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestIteratorUtils.java,v 1.7 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n \n import org.apache.commons.collections.iterators.ResetableIterator;\n import org.apache.commons.collections.iterators.ResetableListIterator;\n+\n /**\n- *  Tests for IteratorUtils.\n+ * Tests for IteratorUtils.\n+ * \n+ * @version $Revision: 1.7 $ $Date: 2003/10/05 21:17:40 $\n+ * \n+ * @author Unknown\n  */\n public class TestIteratorUtils extends BulkTest {\n \n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.24 2003/08/31 17:28:43 scolebourne Exp $\n- * $Revision: 1.24 $\n- * $Date: 2003/08/31 17:28:43 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.25 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * <http://www.apache.org/>.\n  *\n  */\n-\n package org.apache.commons.collections;\n \n import java.util.ArrayList;\n import junit.framework.Test;\n \n /**\n+ * Tests LRUMap.\n  * \n- * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n- * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n- * @version $Id: TestLRUMap.java,v 1.24 2003/08/31 17:28:43 scolebourne Exp $\n+ * @version $Revision: 1.25 $ $Date: 2003/10/05 21:17:40 $\n+ * \n+ * @author James Strachan\n+ * @author Morgan Delagrange\n  */\n-public class TestLRUMap extends TestSequencedHashMap\n-{\n+public class TestLRUMap extends TestSequencedHashMap {\n+    \n     public TestLRUMap(String testName) {\n         super(testName);\n     }\n--- a/src/test/org/apache/commons/collections/TestLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLinkedList.java,v 1.4 2003/10/02 22:14:29 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/10/02 22:14:29 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLinkedList.java,v 1.5 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * <http://www.apache.org/>.\n  *\n  */\n-\n package org.apache.commons.collections;\n \n import java.util.Arrays;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.NoSuchElementException;\n-\n \n /**\n  * Tests base {@link java.util.LinkedList} methods and contracts.\n  * If your {@link LinkedList} fails one of these tests by design,\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n- *\n- * @author <a href=\"mailto:rich@rd.gen.nz\">Rich Dougherty</a>\n- * @version $Id: TestLinkedList.java,v 1.4 2003/10/02 22:14:29 scolebourne Exp $\n+ * \n+ * @version $Revision: 1.5 $ $Date: 2003/10/05 21:17:40 $\n+ *\n+ * @author Rich Dougherty\n  */\n public abstract class TestLinkedList extends AbstractTestList {\n \n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.13 2003/10/02 22:14:29 scolebourne Exp $\n- * $Revision: 1.13 $\n- * $Date: 2003/10/02 22:14:29 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.14 2003/10/05 21:17:39 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n \n /**\n  * Tests for ListUtils.\n+ * \n+ * @version $Revision: 1.14 $ $Date: 2003/10/05 21:17:39 $\n  * \n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/test/org/apache/commons/collections/TestMapUtils.java\n+++ b/src/test/org/apache/commons/collections/TestMapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMapUtils.java,v 1.16 2003/10/02 23:01:09 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMapUtils.java,v 1.17 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n /**\n  * Tests for MapUtils.\n  * \n- * @version $Revision: 1.16 $ $Date: 2003/10/02 23:01:09 $\n+ * @version $Revision: 1.17 $ $Date: 2003/10/05 21:17:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Arun Mammen Thomas\n--- a/src/test/org/apache/commons/collections/TestMultiHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestMultiHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMultiHashMap.java,v 1.12 2003/10/02 23:01:10 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2003/10/02 23:01:10 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMultiHashMap.java,v 1.13 2003/10/05 21:17:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * <http://www.apache.org/>.\n  *\n  */\n-\n package org.apache.commons.collections;\n \n import java.util.Collection;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n-\n /**\n  * Unit Tests for <code>MultiHashMap</code>.\n- *\n+ * \n+ * @version $Revision: 1.13 $ $Date: 2003/10/05 21:17:40 $\n+ *\n+ * @author Unknown\n  */\n-public class TestMultiHashMap extends AbstractTestMap\n-{\n-    public TestMultiHashMap(String testName)\n-    {\n+public class TestMultiHashMap extends AbstractTestMap {\n+\n+    public TestMultiHashMap(String testName) {\n         super(testName);\n     }\n \n-    public static Test suite()\n-    {\n+    public static Test suite() {\n         return new TestSuite(TestMultiHashMap.class);\n     }\n \n-    public static void main(String args[])\n-    {\n-        String[] testCaseName = { TestMultiHashMap.class.getName() };\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestMultiHashMap.class.getName()};\n         junit.textui.TestRunner.main(testCaseName);\n     }\n \n     //----------------------------\n     //          Tests\n     //----------------------------\n-    public void testPutNGet()\n-    {\n+    public void testPutNGet() {\n         MultiHashMap map = new MultiHashMap();\n-        loadMap( map );\n-        checkMap( map );\n-        \n-        assertTrue( map.get(new Integer(99)) == null );\n-        \n+        loadMap(map);\n+        checkMap(map);\n+\n+        assertTrue(map.get(new Integer(99)) == null);\n+\n         map.clear();\n-        assertTrue( map.size() == 0 );\n-    }\n-    \n-    public void testContainsValue()\n-    {\n+        assertTrue(map.size() == 0);\n+    }\n+\n+    public void testContainsValue() {\n         MultiHashMap map = new MultiHashMap();\n-        loadMap( map );\n-        \n-        assertTrue( map.containsValue( \"uno\" ) );\n-        assertTrue( map.containsValue( \"quatro\" ) );\n-        assertTrue( map.containsValue( \"two\" ) );\n-        \n-        assertTrue( ! map.containsValue( \"uggaBugga\" ) );\n-        \n+        loadMap(map);\n+\n+        assertTrue(map.containsValue(\"uno\"));\n+        assertTrue(map.containsValue(\"quatro\"));\n+        assertTrue(map.containsValue(\"two\"));\n+\n+        assertTrue(!map.containsValue(\"uggaBugga\"));\n+\n         map.clear();\n     }\n     \n-    public void testValues()\n-    {\n+    public void testValues() {\n         MultiHashMap map = new MultiHashMap();\n-        loadMap( map );\n-        \n+        loadMap(map);\n+\n         Collection vals = map.values();\n-        assertTrue( vals.size() == getFullSize() );\n-        \n+        assertTrue(vals.size() == getFullSize());\n+\n         map.clear();\n     }\n \n-    \n-    static private class MapPair\n-    {\n-        MapPair( int key, String val )\n-        {\n-            mKey = new Integer( key );\n+    static private class MapPair {\n+        MapPair(int key, String val) {\n+            mKey = new Integer(key);\n             mValue = val;\n         }\n-        \n+\n         Integer mKey = null;\n         String mValue = null;\n     }\n         {new MapPair(4,\"four\"), new MapPair(4,\"quatro\")}\n     };\n     \n-    private void loadMap( MultiHashMap map )\n-    {\n+    private void loadMap(MultiHashMap map) {\n         // Set up so that we load the keys \"randomly\"\n         // (i.e. we don't want to load int row-order, so that all like keys\n         // load together. We want to mix it up...)\n-        \n+\n         int numRows = sMapPairs.length;\n         int maxCols = 0;\n-        for( int ii=0; ii < sMapPairs.length; ii++ ){\n-            if ( sMapPairs[ii].length > maxCols )\n+        for (int ii = 0; ii < sMapPairs.length; ii++) {\n+            if (sMapPairs[ii].length > maxCols) {\n                 maxCols = sMapPairs[ii].length;\n-        }\n-        for( int ii=0; ii < maxCols; ii++ ){\n-            for( int jj=0; jj < numRows; jj++ ){\n-                if ( ii < sMapPairs[jj].length ) {\n-                    map.put( sMapPairs[jj][ii].mKey, sMapPairs[jj][ii].mValue);\n+            }\n+        }\n+        for (int ii = 0; ii < maxCols; ii++) {\n+            for (int jj = 0; jj < numRows; jj++) {\n+                if (ii < sMapPairs[jj].length) {\n+                    map.put(sMapPairs[jj][ii].mKey, sMapPairs[jj][ii].mValue);\n                     //---------------------------------------------------------\n                 }\n             }\n         }\n-        assertTrue( map.size() == sMapPairs.length );\n-    }\n-    \n-    private void checkMap( MultiHashMap map )\n-    {\n-        for( int ii=0; ii < sMapPairs.length; ii++ ){\n-            checkKeyList( map, ii );\n-        }\n-    }\n-    \n-    private void checkKeyList( MultiHashMap map, int index )\n-    {\n-        assertTrue( index < sMapPairs.length );\n-        Integer key = sMapPairs[index][0].mKey ;\n-        \n-        Object obj = map.get( key );\n+        assertTrue(map.size() == sMapPairs.length);\n+    }\n+    \n+    private void checkMap(MultiHashMap map) {\n+        for (int ii = 0; ii < sMapPairs.length; ii++) {\n+            checkKeyList(map, ii);\n+        }\n+    }\n+\n+    private void checkKeyList(MultiHashMap map, int index) {\n+        assertTrue(index < sMapPairs.length);\n+        Integer key = sMapPairs[index][0].mKey;\n+\n+        Object obj = map.get(key);\n         //--------------------------\n-        \n-        assertTrue( obj != null );\n-        assertTrue( obj instanceof Collection );\n-        Collection keyList = (Collection)obj;\n-        \n-        assertTrue( keyList.size()  == sMapPairs[index].length );\n+\n+        assertTrue(obj != null);\n+        assertTrue(obj instanceof Collection);\n+        Collection keyList = (Collection) obj;\n+\n+        assertTrue(keyList.size() == sMapPairs[index].length);\n         Iterator iter = keyList.iterator();\n-        while ( iter.hasNext() ) {\n+        while (iter.hasNext()) {\n             Object oval = iter.next();\n-            assertTrue( oval != null );\n-            assertTrue( oval instanceof String );\n-            String val = (String)oval;\n+            assertTrue(oval != null);\n+            assertTrue(oval instanceof String);\n+            String val = (String) oval;\n             boolean foundIt = false;\n-            for( int ii=0; ii < sMapPairs[index].length; ii++ ){\n-                if( val.equals( sMapPairs[index][ii].mValue ) )\n+            for (int ii = 0; ii < sMapPairs[index].length; ii++) {\n+                if (val.equals(sMapPairs[index][ii].mValue)) {\n                     foundIt = true;\n+                }\n             }\n-            assertTrue( foundIt );\n-        }\n-    }\n-    \n-    public int getFullSize()\n-    {\n+            assertTrue(foundIt);\n+        }\n+    }\n+    \n+    public int getFullSize() {\n         int len = 0;\n-        for( int ii=0; ii < sMapPairs.length; ii++ ){\n+        for (int ii = 0; ii < sMapPairs.length; ii++) {\n             len += sMapPairs[ii].length;\n         }\n         return len;\n--- a/src/test/org/apache/commons/collections/TestMultiKey.java\n+++ b/src/test/org/apache/commons/collections/TestMultiKey.java\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMultiKey.java,v 1.3 2003/10/05 21:17:40 scolebourne Exp $\n+ * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Turbine\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n package org.apache.commons.collections;\n \n import junit.framework.TestSuite;\n \n /**\n- * Unit tests \n- * {@link org.apache.commons.collections.MultiKey}.\n+ * Unit tests for {@link org.apache.commons.collections.MultiKey}.\n+ * \n+ * @version $Revision: 1.3 $ $Date: 2003/10/05 21:17:40 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1065388660, "metainfo": ""}