{"sha": "07d54f167694d14cd28db703ee2eac99aa74d2ed", "log": "[COLLECTIONS-502] remove generic parameters from static INSTANCE fields.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/comparators/ComparableComparator.java\n+++ b/src/main/java/org/apache/commons/collections4/comparators/ComparableComparator.java\n \n     /** The singleton instance. */\n     @SuppressWarnings(\"rawtypes\")\n-    public static final ComparableComparator<?> INSTANCE = new ComparableComparator();\n+    public static final ComparableComparator INSTANCE = new ComparableComparator();\n \n     //-----------------------------------------------------------------------\n     /**\n--- a/src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java\n     private static final long serialVersionUID = -8188742709499652567L;\n \n     /** Singleton predicate instance */\n-    public static final Transformer<Object, Object> INSTANCE = new CloneTransformer<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the singleton instance works for all types\n+    public static final Transformer INSTANCE = new CloneTransformer<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/ConstantFactory.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ConstantFactory.java\n     private static final long serialVersionUID = -3520677225766901240L;\n \n     /** Returns null each time */\n-    public static final Factory<Object> NULL_INSTANCE = new ConstantFactory<Object>(null);\n+    @SuppressWarnings(\"rawtypes\") // The null factory works for all object types\n+    public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);\n \n     /** The closures to call in turn */\n     private final T iConstant;\n--- a/src/main/java/org/apache/commons/collections4/functors/ConstantTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ConstantTransformer.java\n     private static final long serialVersionUID = 6374440726369055124L;\n \n     /** Returns null each time */\n-    public static final Transformer<Object, Object> NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);\n \n     /** The closures to call in turn */\n     private final O iConstant;\n--- a/src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java\n     private static final long serialVersionUID = 825802648423525485L;\n \n     /** Static instance */\n-    public static final DefaultEquator<Object> INSTANCE = new DefaultEquator<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();\n \n     /**\n      * Hashcode used for <code>null</code> objects.\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionClosure.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionClosure.java\n     private static final long serialVersionUID = 7179106032121985545L;\n \n     /** Singleton predicate instance */\n-    public static final Closure<Object> INSTANCE = new ExceptionClosure<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final Closure INSTANCE = new ExceptionClosure<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionFactory.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionFactory.java\n     private static final long serialVersionUID = 7179106032121985545L;\n \n     /** Singleton predicate instance */\n-    public static final Factory<Object> INSTANCE = new ExceptionFactory<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final Factory INSTANCE = new ExceptionFactory<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionPredicate.java\n     private static final long serialVersionUID = 7179106032121985545L;\n \n     /** Singleton predicate instance */\n-    public static final Predicate<Object> INSTANCE = new ExceptionPredicate<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final Predicate INSTANCE = new ExceptionPredicate<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionTransformer.java\n     private static final long serialVersionUID = 7179106032121985545L;\n \n     /** Singleton predicate instance */\n-    public static final Transformer<Object, Object> INSTANCE = new ExceptionTransformer<Object, Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/FalsePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/FalsePredicate.java\n     private static final long serialVersionUID = 7533784454832764388L;\n \n     /** Singleton predicate instance */\n-    public static final Predicate<Object> INSTANCE = new FalsePredicate<Object>();\n+    @SuppressWarnings(\"rawtypes\") // the static instance works for all types\n+    public static final Predicate INSTANCE = new FalsePredicate<Object>();\n \n     /**\n      * Get a typed instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/IfClosure.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/IfClosure.java\n      * @since 3.2\n      */\n     public IfClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure) {\n-        this(predicate, trueClosure, NOPClosure.INSTANCE);\n+        this(predicate, trueClosure, NOPClosure.nopClosure());\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java\n     private static final long serialVersionUID = 3786388740793356347L;\n \n     /** Singleton instance that uses the no arg constructor */\n-    public static final Transformer<Class<?>, ?> NO_ARG_INSTANCE = new InstantiateTransformer<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    private static final Transformer NO_ARG_INSTANCE = new InstantiateTransformer<Object>();\n \n     /** The constructor parameter types */\n     private final Class<?>[] iParamTypes;\n      * @param <T>  the type of the objects to be created\n      * @return Transformer<Class<? extends T>, T>\n      */\n+    @SuppressWarnings(\"unchecked\")\n     public static <T> Transformer<Class<? extends T>, T> instantiateTransformer() {\n-        return new InstantiateTransformer<T>();\n+        return (Transformer<Class<? extends T>, T>) NO_ARG_INSTANCE;\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/collections4/functors/NOPClosure.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NOPClosure.java\n     private static final long serialVersionUID = 3518477308466486130L;\n \n     /** Singleton predicate instance */\n-    public static final Closure<Object> INSTANCE = new NOPClosure<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Closure INSTANCE = new NOPClosure<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/NOPTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NOPTransformer.java\n     private static final long serialVersionUID = 2133891748318574490L;\n \n     /** Singleton predicate instance */\n-    public static final Transformer<Object, Object> INSTANCE = new NOPTransformer<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Transformer INSTANCE = new NOPTransformer<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/NotNullPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NotNullPredicate.java\n     private static final long serialVersionUID = 7533784454832764388L;\n \n     /** Singleton predicate instance */\n-    public static final Predicate<Object> INSTANCE = new NotNullPredicate<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Predicate INSTANCE = new NotNullPredicate<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/NullPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NullPredicate.java\n     private static final long serialVersionUID = 7533784454832764388L;\n \n     /** Singleton predicate instance */\n-    public static final Predicate<?> INSTANCE = new NullPredicate<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Predicate INSTANCE = new NullPredicate<Object>();\n \n     /**\n      * Factory returning the singleton instance.\n--- a/src/main/java/org/apache/commons/collections4/functors/TruePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/TruePredicate.java\n     private static final long serialVersionUID = 3374767158756189740L;\n \n     /** Singleton predicate instance */\n-    public static final Predicate<?> INSTANCE = new TruePredicate<Object>();\n+    @SuppressWarnings(\"rawtypes\")\n+    public static final Predicate INSTANCE = new TruePredicate<Object>();\n \n     /**\n      * Factory returning the singleton instance.", "timestamp": 1384982015, "metainfo": ""}