{"sha": "a10c6b01425a9c21cf687294bac43a63de0a0d3c", "log": "Added Daniel Rall's patch to support remove() from the EnuemerationIterator   ", "commit": "\n--- a/src/java/org/apache/commons/collections/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/EnumerationIterator.java\n-/*\n- * Copyright (C) The Apache Software Foundation. All rights reserved.\n- *\n- * This software is published under the terms of the Apache Software License\n- * version 1.1, a copy of which has been included with this distribution in\n- * the LICENSE file.\n- */\n-package org.apache.commons.collections;\n-\n-import java.util.Enumeration;\n-import java.util.Iterator;\n-\n-/** Adapter to make {@link Enumeration Enumeration} instances appear to be {@link Iterator Iterator} instances\n-  *\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  */\n-\n-public class EnumerationIterator implements Iterator {\n-    \n-    private Enumeration enumeration;\n-\n-    \n-    public EnumerationIterator() {\n-    }\n-    \n-    public EnumerationIterator( Enumeration enumeration ) {\n-        this.enumeration = enumeration;\n-    }\n-\n-    // Iterator interface\n-    //-------------------------------------------------------------------------\n-    public boolean hasNext() {\n-        return enumeration.hasMoreElements();\n-    }\n-\n-    public Object next() {\n-        return enumeration.nextElement();\n-    }\n-\n-    public void remove() {\n-        throw new UnsupportedOperationException( \"remove() method is not supported\" );\n-    }\n-\n-    // Properties\n-    //-------------------------------------------------------------------------\n-    public Enumeration getEnumeration() {\n-        return enumeration;\n-    }\n-    \n-    public void setEnumeration( Enumeration enumeration ) {\n-        this.enumeration = enumeration;\n-    }\n-}\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included with this distribution in\n+ * the LICENSE file.\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Collection;\n+import java.util.Enumeration;\n+import java.util.Iterator;\n+\n+/** Adapter to make {@link Enumeration Enumeration} instances appear\n+  * to be {@link Iterator Iterator} instances.\n+  *\n+  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n+  */\n+public class EnumerationIterator implements Iterator {\n+    \n+    private Collection collection;\n+\n+    private Enumeration enumeration;\n+\n+    private Object last;\n+    \n+    public EnumerationIterator() {\n+        this(null, null);\n+    }\n+    \n+    public EnumerationIterator( Enumeration enumeration ) {\n+        this(enumeration, null);\n+    }\n+\n+    public EnumerationIterator( Enumeration enum, Collection collection ) {\n+        this.enumeration = enum;\n+        this.collection = collection;\n+        this.last = null;\n+    }\n+\n+    // Iterator interface\n+    //-------------------------------------------------------------------------\n+    public boolean hasNext() {\n+        return enumeration.hasMoreElements();\n+    }\n+\n+    public Object next() {\n+        last = enumeration.nextElement();\n+        return last;\n+    }\n+\n+    /**\n+     * Functions if an associated <code>Collection</code> is known.\n+     *\n+     * @exception IllegalStateException <code>next()</code> not called.\n+     * @exception UnsupportedOperationException No associated\n+     * <code>Collection</code>.\n+     */\n+    public void remove() {\n+        if (collection != null) {\n+            if (last != null) {\n+                collection.remove(last);\n+            }\n+            else {\n+                throw new IllegalStateException\n+                    (\"next() must have been called for remove() to function\");\n+            }\n+        }\n+        else {\n+            throw new UnsupportedOperationException\n+                (\"No Collection associated with this Iterator\");\n+        }\n+    }\n+\n+    // Properties\n+    //-------------------------------------------------------------------------\n+    public Enumeration getEnumeration() {\n+        return enumeration;\n+    }\n+    \n+    public void setEnumeration( Enumeration enumeration ) {\n+        this.enumeration = enumeration;\n+    }\n+}", "timestamp": 999100122, "metainfo": ""}