{"sha": "ed1d755babdeba49bf3912d2e3788d777293bea2", "log": "Add emptyIfNull method, simplification.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/FluentIterable.java\n+++ b/src/main/java/org/apache/commons/collections4/FluentIterable.java\n         if (collection == null) {\n             throw new NullPointerException(\"Collection must not be null\");\n         }\n-\n-        for (final E element : iterable) {\n-            collection.add(element);\n-        }\n+        CollectionUtils.addAll(collection, iterable);\n     }\n \n     /**\n     }\n \n     /**\n-     * Returns a list containing all elements of this iterable by\n-     * traversing its iterator.\n+     * Returns a mutable list containing all elements of this iterable\n+     * by traversing its iterator.\n      * <p>\n      * The returned list is guaranteed to be mutable.\n      *\n--- a/src/main/java/org/apache/commons/collections4/IterableUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/IterableUtils.java\n import org.apache.commons.collections4.iterators.LazyIteratorChain;\n import org.apache.commons.collections4.iterators.ReverseListIterator;\n import org.apache.commons.collections4.iterators.UniqueFilterIterator;\n-import org.apache.commons.collections4.iterators.ZippingIterator;\n \n /**\n  * Provides utility methods and decorators for {@link Iterable} instances.\n         if (iterable instanceof UnmodifiableIterable<?>) {\n             return iterable;\n         }\n-        @SuppressWarnings(\"unchecked\") // safe\n-        final Iterable<E> it = iterable != null ? iterable : EMPTY_ITERABLE;\n-        return new UnmodifiableIterable<E>(it);\n+        return new UnmodifiableIterable<E>(emptyIfNull(iterable));\n     }\n \n     /**\n                 for (int i = 0; i < iterables.length; i++) {\n                     iterators[i] = emptyIteratorIfNull(iterables[i]);\n                 }\n-                return new ZippingIterator<E>(iterators);\n+                return IteratorUtils.zippingIterator(iterators);\n             }\n         };\n     }\n \n     // Utility methods\n     // ----------------------------------------------------------------------\n+\n+    /**\n+     * Returns an immutable empty iterable if the argument is null,\n+     * or the argument itself otherwise.\n+     *\n+     * @param <E> the element type\n+     * @param iterable  the iterable, may be null\n+     * @return an empty iterable if the argument is null\n+     */\n+    public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable) {\n+        return iterable == null ? IterableUtils.<E>emptyIterable() : iterable;\n+    }\n \n     /**\n      * Returns an empty iterator if the argument is <code>null</code>,", "timestamp": 1433592971, "metainfo": ""}