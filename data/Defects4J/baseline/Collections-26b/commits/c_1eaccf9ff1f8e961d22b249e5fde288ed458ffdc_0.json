{"sha": "1eaccf9ff1f8e961d22b249e5fde288ed458ffdc", "log": "Generifying in preparation for merge from collections_jdk5_brancH  ", "commit": "\n--- a/src/test/org/apache/commons/collections/set/EmptySetMutator.java\n+++ b/src/test/org/apache/commons/collections/set/EmptySetMutator.java\n package org.apache.commons.collections.set;\n \n import java.util.Collection;\n+import java.util.List;\n import java.util.Set;\n \n import org.apache.commons.collections.collection.CompositeCollection;\n  * the class has to be separate of TestCompositeSet, else the test \n  * class also has to be serialized. \n  */\n-class EmptySetMutator implements CompositeSet.SetMutator {\n+class EmptySetMutator<E> implements CompositeSet.SetMutator<E> {\n     private Set contained;\n \n     public EmptySetMutator(Set set) {\n         this.contained = set;\n     }\n \n-    public void resolveCollision(CompositeSet comp, Set existing, \n-        Set added, Collection intersects) {\n+    public void resolveCollision(CompositeSet<E> comp, Set<E> existing, Set<E> added, Collection<E> intersects) {\n         throw new IllegalArgumentException();\n     }\n     \n-    public boolean add(CompositeCollection composite, \n-        Collection[] collections, Object obj) {\n+    public boolean add(CompositeCollection<E> composite, List<Collection<E>> collections, E obj) {\n         return contained.add(obj);\n     }\n     \n-    public boolean addAll(CompositeCollection composite, \n-        Collection[] collections, Collection coll) {\n+    public boolean addAll(CompositeCollection<E> composite, List<Collection<E>> collections, Collection<? extends E> coll) {\n         return contained.addAll(coll);\n     }\n     \n-    public boolean remove(CompositeCollection composite, \n-        Collection[] collections, Object obj) {\n+    public boolean remove(CompositeCollection<E> composite, List<Collection<E>> collections, Object obj) {\n         return contained.remove(obj);\n     }\n }", "timestamp": 1252992272, "metainfo": ""}