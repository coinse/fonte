{"sha": "284b6f5477838fce398036497e1acc206b1eaaeb", "log": "Added Mauricio S. Moura's patch to ArrayIterator such that next() calls move the iterator along rather than calls to hasNext(). I've also added a JUnit test case to demonstrate it in action and validate that it works correctly.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/ArrayIterator.java\n-/*\n- * Copyright (C) The Apache Software Foundation. All rights reserved.\n- *\n- * This software is published under the terms of the Apache Software License\n- * version 1.1, a copy of which has been included with this distribution in\n- * the LICENSE file.\n- */\n-package org.apache.commons.collections;\n-\n-import java.util.Iterator;\n-\n-/** Implements {@link Iterator} over an array of objects\n-  *\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  * @version $Revision: 1.1 $\n-  */\n-public class ArrayIterator implements Iterator {\n-    \n-    private Object[] array;\n-    private int index = -1;\n-\n-    \n-    public ArrayIterator() {\n-    }\n-    \n-    public ArrayIterator(Object[] array) {\n-        this.array = array;\n-    }\n-\n-    // Iterator interface\n-    //-------------------------------------------------------------------------\n-    public boolean hasNext() {\n-        return ++index >= 0 && index < array.length;\n-    }\n-\n-    public Object next() {\n-        return array[ index ];\n-    }\n-\n-    public void remove() {\n-        throw new UnsupportedOperationException( \"remove() method is not supported\" );\n-    }\n-\n-    // Properties\n-    //-------------------------------------------------------------------------\n-    public Object[] getArray() {\n-        return array;\n-    }\n-    \n-    public void setArray( Object[] array ) {\n-        this.array = array;\n-        this.index = -1;\n-    }\n-}\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included with this distribution in\n+ * the LICENSE file.\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Iterator;\n+\n+/** Implements {@link Iterator} over an array of objects\n+  *\n+  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+  * @\n+  * @version $Revision: 1.2 $\n+  */\n+public class ArrayIterator implements Iterator {\n+    \n+    private Object[] array;\n+    private int index = 0;\n+  \n+    \n+    public ArrayIterator() {\n+    }\n+    \n+    public ArrayIterator(Object[] array) {\n+        this.array = array;\n+    }\n+\n+    // Iterator interface\n+    //-------------------------------------------------------------------------\n+    public boolean hasNext() {\n+        return  (index < array.length);\n+    }\n+\n+    public Object next() {\n+        return array[ index++ ];\n+    }\n+\n+    public void remove() {\n+        throw new UnsupportedOperationException( \"remove() method is not supported\" );\n+    }\n+\n+    // Properties\n+    //-------------------------------------------------------------------------\n+    public Object[] getArray() {\n+        return array;\n+    }\n+    \n+    public void setArray( Object[] array ) {\n+        this.array = array;\n+        this.index = -1;\n+    }\n+}\n--- a/src/test/org/apache/commons/collections/TestAll.java\n+++ b/src/test/org/apache/commons/collections/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestAll.java,v 1.7 2001/05/04 02:23:44 geirm Exp $\n- * $Revision: 1.7 $\n- * $Date: 2001/05/04 02:23:44 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestAll.java,v 1.8 2001/05/14 10:42:51 jstrachan Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2001/05/14 10:42:51 $\n  *\n  * ====================================================================\n  *\n /**\n  * Entry point for all Collections tests.\n  * @author Rodney Waldhoff\n- * @version $Id: TestAll.java,v 1.7 2001/05/04 02:23:44 geirm Exp $\n+ * @version $Id: TestAll.java,v 1.8 2001/05/14 10:42:51 jstrachan Exp $\n  */\n public class TestAll extends TestCase {\n     public TestAll(String testName) {\n \n     public static Test suite() {\n         TestSuite suite = new TestSuite();\n+        suite.addTest(TestArrayIterator.suite());\n         suite.addTest(TestArrayList.suite());\n         suite.addTest(TestArrayStack.suite());\n         suite.addTest(TestCursorableLinkedList.suite());\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/TestArrayIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestArrayIterator.java,v 1.1 2001/05/14 10:42:53 jstrachan Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2001/05/14 10:42:53 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections;\n+\n+import junit.framework.*;\n+import java.util.Iterator;\n+\n+/**\n+ * Tests the ArrayIterator to ensure that the next() method will actually\n+ * perform the iteration rather than the hasNext() method.\n+ * The code of this test was supplied by Mauricio S. Moura\n+ *\n+ * @author James Strachan\n+ * @author Mauricio S. Moura\n+ * @version $Id: TestArrayIterator.java,v 1.1 2001/05/14 10:42:53 jstrachan Exp $\n+ */\n+public class TestArrayIterator extends TestObject {\n+    \n+    protected String[] testArray = {\n+        \"One\", \"Two\", \"Three\"\n+    };\n+    \n+    public static Test suite() {\n+        return new TestSuite(TestArrayIterator.class);\n+    }\n+    \n+    public TestArrayIterator(String testName) {\n+        super(testName);\n+    }\n+    \n+    /**\n+     * Return a new, empty {@link Object} to used for testing.\n+     */\n+    public Object makeObject() {\n+        return new ArrayIterator(testArray);\n+    }\n+    \n+    public void testIterator() {\n+        Iterator iter = (Iterator) makeObject();\n+        for ( int i = 0; i < testArray.length; i++ ) {\n+            Object testValue = testArray[i];            \n+            Object iterValue = iter.next();\n+            \n+            assertEquals( \"Iteration value is correct\", testValue, iterValue );\n+        }\n+        \n+        assert(\"Iterator should now be empty\", ! iter.hasNext() );\n+    }\n+}", "timestamp": 989836973, "metainfo": ""}