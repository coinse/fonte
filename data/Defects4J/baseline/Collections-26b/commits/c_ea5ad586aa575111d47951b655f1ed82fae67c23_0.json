{"sha": "ea5ad586aa575111d47951b655f1ed82fae67c23", "log": "Improve test to not assume iterator order. bug 23201   ", "commit": "\n--- a/src/test/org/apache/commons/collections/observed/ObservedTestHelper.java\n+++ b/src/test/org/apache/commons/collections/observed/ObservedTestHelper.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/ObservedTestHelper.java,v 1.6 2003/09/07 16:50:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/ObservedTestHelper.java,v 1.7 2003/09/20 12:13:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * {@link ObservedCollection} implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2003/09/07 16:50:59 $\n+ * @version $Revision: 1.7 $ $Date: 2003/09/20 12:13:59 $\n  * \n  * @author Stephen Colebourne\n  */\n         Assert.assertEquals(2, coll.size());\n         Iterator it = coll.iterator();\n         it.next();\n-        it.next();\n+        Object removed = it.next();  // store remove as iterator order may vary\n         it.remove();\n         Assert.assertEquals(1, coll.size());\n         // pre\n         Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n         Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.preEvent.getType());\n         Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n+        Assert.assertSame(removed, LISTENER.preEvent.getChangeObject());\n         Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getPrevious());\n+        Assert.assertSame(removed, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        Assert.assertSame(removed, LISTENER.preEvent.getPrevious());\n         Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n         // post\n         Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n         Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n         Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n         Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        Assert.assertSame(removed, LISTENER.postEvent.getChangeObject());\n         Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        Assert.assertSame(removed, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        Assert.assertSame(removed, LISTENER.postEvent.getPrevious());\n         Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n         Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n         Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n         Assert.assertEquals(1, coll.size());\n-        coll.remove(SEVEN);  // already removed\n+        coll.remove(removed);  // already removed\n         Assert.assertEquals(1, coll.size());\n         Assert.assertTrue(LISTENER.preEvent != null);\n         Assert.assertTrue(LISTENER.postEvent == null);", "timestamp": 1064060039, "metainfo": ""}