{"sha": "0ec653ec42dd2e81de51614753c5cbfad0d814b8", "log": "Update unit test after method changes.  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections4/MultiMapUtilsTest.java\n+++ b/src/test/java/org/apache/commons/collections4/MultiMapUtilsTest.java\n     }\n \n     @Test\n-    public void testGetList() {\n-        assertNull(MultiMapUtils.getList(null, \"key1\"));\n+    public void testGetValuesAsList() {\n+        assertNull(MultiMapUtils.getValuesAsList(null, \"key1\"));\n \n         String values[] = { \"v1\", \"v2\", \"v3\" };\n         final MultiValuedMap<String, String> map = new MultiValuedHashMap<String, String>();\n             map.put(\"key1\", val);\n         }\n \n-        List<String> list = MultiMapUtils.getList(map, \"key1\");\n+        List<String> list = MultiMapUtils.getValuesAsList(map, \"key1\");\n         int i = 0;\n         for (String val : list) {\n             assertTrue(val.equals(values[i++]));\n     }\n \n     @Test\n-    public void testGetSet() {\n-        assertNull(MultiMapUtils.getList(null, \"key1\"));\n+    public void testGetValuesAsSet() {\n+        assertNull(MultiMapUtils.getValuesAsList(null, \"key1\"));\n \n         String values[] = { \"v1\", \"v2\", \"v3\" };\n         final MultiValuedMap<String, String> map = new MultiValuedHashMap<String, String>();\n             map.put(\"key1\", val);\n         }\n \n-        Set<String> set = MultiMapUtils.getSet(map, \"key1\");\n+        Set<String> set = MultiMapUtils.getValuesAsSet(map, \"key1\");\n         assertEquals(3, set.size());\n         for (String val : values) {\n             assertTrue(set.contains(val));\n     }\n \n     @Test\n-    public void testGetBag() {\n-        assertNull(MultiMapUtils.getBag(null, \"key1\"));\n+    public void testGetValuesAsBag() {\n+        assertNull(MultiMapUtils.getValuesAsBag(null, \"key1\"));\n \n         String values[] = { \"v1\", \"v2\", \"v3\" };\n         final MultiValuedMap<String, String> map = new MultiValuedHashMap<String, String>();\n             map.put(\"key1\", val);\n         }\n \n-        Bag<String> bag = MultiMapUtils.getBag(map, \"key1\");\n+        Bag<String> bag = MultiMapUtils.getValuesAsBag(map, \"key1\");\n         assertEquals(6, bag.size());\n         for (String val : values) {\n             assertTrue(bag.contains(val));", "timestamp": 1433197723, "metainfo": ""}