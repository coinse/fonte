{"sha": "b7327a42da0a48e223dd7ce014439a36f1850929", "log": "[COLLECTIONS-239] Use of generic Equator in EqualPredicate.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java\n     private static final long serialVersionUID = 5633766978029907089L;\n \n     /** The value to compare to */\n-    private final Object iValue;\n+    private final T iValue;\n+    \n+    /** The equator to use for comparison */\n+    private final Equator<T> equator;\n \n     /**\n-     * Factory to create the identity predicate.\n+     * Factory to create the predicate.\n      * \n+     * @param <T> the type that the predicate queries\n      * @param object  the object to compare to\n      * @return the predicate\n      * @throws IllegalArgumentException if the predicate is null\n     }\n \n     /**\n+     * Factory to create the identity predicate.\n+     * \n+     * @param <T> the type that the predicate queries\n+     * @param object  the object to compare to\n+     * @param equator  the equator to use for comparison\n+     * @return the predicate\n+     * @throws IllegalArgumentException if the predicate is null\n+     * @since 4.0\n+     */\n+    public static <T> Predicate<T> equalPredicate(T object, Equator<T> equator) {\n+        if (object == null) {\n+            return nullPredicate();\n+        }\n+        return new EqualPredicate<T>(object, equator);\n+    }\n+\n+    /**\n      * Constructor that performs no validation.\n      * Use <code>getInstance</code> if you want that.\n      * \n      * @param object  the object to compare to\n      */\n-    public EqualPredicate(Object object) {\n+    public EqualPredicate(T object) {\n+        this(object, new DefaultEquator<T>());\n+    }\n+\n+    /**\n+     * Constructor that performs no validation.\n+     * Use <code>getInstance</code> if you want that.\n+     * \n+     * @param object  the object to compare to\n+     * @param equator  the equator to use for comparison\n+     * @since 4.0\n+     */\n+    public EqualPredicate(T object, Equator<T> equator) {\n         super();\n         iValue = object;\n+        this.equator = equator;\n     }\n \n     /**\n      * @param object  the input object\n      * @return true if input object equals stored value\n      */\n-    public boolean evaluate(Object object) {\n-        return (iValue.equals(object));\n+    public boolean evaluate(T object) {\n+        return equator.equate(iValue, object);\n     }\n \n     /**", "timestamp": 1343331992, "metainfo": ""}