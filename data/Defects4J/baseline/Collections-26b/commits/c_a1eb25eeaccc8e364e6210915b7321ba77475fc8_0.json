{"sha": "a1eb25eeaccc8e364e6210915b7321ba77475fc8", "log": "Update file layout for consistency   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractBagDecorator extends AbstractCollectionDecorator implements Bag {\n+public abstract class AbstractBagDecorator\n+        extends AbstractCollectionDecorator implements Bag {\n \n     /**\n      * Constructor that wraps (not copies).\n--- a/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractSortedBagDecorator extends AbstractBagDecorator implements SortedBag {\n+public abstract class AbstractSortedBagDecorator\n+        extends AbstractBagDecorator implements SortedBag {\n \n     /**\n      * Constructor that wraps (not copies).\n--- a/src/java/org/apache/commons/collections/bag/HashBag.java\n+++ b/src/java/org/apache/commons/collections/bag/HashBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/HashBag.java,v 1.4 2003/12/28 16:36:48 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/HashBag.java,v 1.5 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * <code>Collection</code> interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision: 1.4 $ $Date: 2003/12/28 16:36:48 $\n+ * @version $Revision: 1.5 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n-public class HashBag extends AbstractMapBag implements Bag, Serializable {\n+public class HashBag\n+        extends AbstractMapBag implements Bag, Serializable {\n \n     /** Serial version lock */\n     static final long serialVersionUID = -6561115435802554013L;\n--- a/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/PredicatedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/PredicatedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class PredicatedBag extends PredicatedCollection implements Bag {\n+public class PredicatedBag\n+        extends PredicatedCollection implements Bag {\n \n     /**\n      * Factory method to create a predicated (validating) bag.\n--- a/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class PredicatedSortedBag extends PredicatedBag implements SortedBag {\n+public class PredicatedSortedBag\n+        extends PredicatedBag implements SortedBag {\n \n     /**\n      * Factory method to create a predicated (validating) bag.\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/SynchronizedBag.java,v 1.2 2003/12/28 14:55:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/SynchronizedBag.java,v 1.3 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Iterators must be separately synchronized around the loop.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/28 14:55:46 $\n+ * @version $Revision: 1.3 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class SynchronizedBag extends SynchronizedCollection implements Bag {\n+public class SynchronizedBag\n+        extends SynchronizedCollection implements Bag {\n \n     /**\n      * Factory method to create a synchronized bag.\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java,v 1.2 2003/12/28 14:55:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java,v 1.3 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Iterators must be separately synchronized around the loop.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/28 14:55:46 $\n+ * @version $Revision: 1.3 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class SynchronizedSortedBag extends SynchronizedBag implements SortedBag {\n+public class SynchronizedSortedBag\n+        extends SynchronizedBag implements SortedBag {\n \n     /**\n      * Factory method to create a synchronized sorted bag.\n--- a/src/java/org/apache/commons/collections/bag/TransformedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TransformedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TransformedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * use the Integer form to remove objects.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TransformedBag extends TransformedCollection implements Bag {\n+public class TransformedBag\n+        extends TransformedCollection implements Bag {\n \n     /**\n      * Factory method to create a transforming bag.\n--- a/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * use the Integer form to remove objects.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TransformedSortedBag extends TransformedBag implements SortedBag {\n+public class TransformedSortedBag\n+        extends TransformedBag implements SortedBag {\n \n     /**\n      * Factory method to create a transforming sorted bag.\n--- a/src/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TreeBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TreeBag.java,v 1.5 2003/12/28 17:58:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TreeBag.java,v 1.6 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * <code>Collection</code> interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision: 1.5 $ $Date: 2003/12/28 17:58:53 $\n+ * @version $Revision: 1.6 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n-public class TreeBag extends AbstractMapBag implements SortedBag, Serializable {\n+public class TreeBag\n+        extends AbstractMapBag implements SortedBag, Serializable {\n \n     /** Serial version lock */\n     static final long serialVersionUID = -7740146511091606676L;\n--- a/src/java/org/apache/commons/collections/bag/TypedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TypedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TypedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n     public static Bag decorate(Bag bag, Class type) {\n         return new PredicatedBag(bag, PredicateUtils.instanceofPredicate(type));\n     }\n-    \n+\n     /**\n      * Restrictive constructor.\n      */\n--- a/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TypedSortedBag.java,v 1.1 2003/11/16 00:05:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/TypedSortedBag.java,v 1.2 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:43 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n     public static SortedBag decorate(SortedBag bag, Class type) {\n         return new PredicatedSortedBag(bag, PredicateUtils.instanceofPredicate(type));\n     }\n-    \n+\n     /**\n      * Restrictive constructor.\n      */\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java,v 1.3 2003/12/03 12:27:37 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java,v 1.4 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates another <code>Bag</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/03 12:27:37 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableBag extends AbstractBagDecorator implements Unmodifiable {\n+public final class UnmodifiableBag\n+        extends AbstractBagDecorator implements Unmodifiable {\n \n     /**\n      * Factory method to create an unmodifiable bag.\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java,v 1.3 2003/12/03 12:27:37 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java,v 1.4 2004/01/05 21:54:06 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates another <code>SortedBag</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/03 12:27:37 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 21:54:06 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableSortedBag extends AbstractSortedBagDecorator implements Unmodifiable {\n+public final class UnmodifiableSortedBag\n+        extends AbstractSortedBagDecorator implements Unmodifiable {\n \n     /**\n      * Factory method to create an unmodifiable bag.", "timestamp": 1073339646, "metainfo": ""}