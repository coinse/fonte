{"sha": "fcc3dec6f090126953af189ba6753921a02d0990", "log": "* fix gump's javadoc warnings * fix spelling of \"acknowledgment\" * remove duplicate @author entry   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Id: CollectionUtils.java,v 1.24 2002/12/15 13:05:03 scolebourne Exp $\n- * $Revision: 1.24 $\n- * $Date: 2002/12/15 13:05:03 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.25 2003/01/11 01:07:13 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n \n import org.apache.commons.collections.iterators.ArrayIterator;\n import org.apache.commons.collections.iterators.EnumerationIterator;\n+\n /**\n  * A set of {@link Collection} related utility methods.\n  *\n- * @since 1.0\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.25 $ $Date: 2003/01/11 01:07:13 $\n+ * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  * @author Steve Downey\n  * @author <a href=\"herve.quiroz@esil.univ-mrs.fr\">Herve Quiroz</a>\n  * @author BluePhelix@web.de (Peter)\n- * @author Stephen Colebourne\n- * @version $Revision: 1.24 $ $Date: 2002/12/15 13:05:03 $\n  */\n public class CollectionUtils {\n \n     \n     /**\n      * Selects all elements from inputCollection which don't match the given predicate\n-     * into an output collection\n+     * into an output collection.\n      * <p>\n      * A <code>null</code> predicate matches no elements.\n      * \n     \n     /** \n      * Selects all elements from inputCollection which don't match the given predicate\n-     * and adds them to outputCollection\n+     * and adds them to outputCollection.\n      * \n      * @param inputCollection  the collection to get the input from, may be null\n      * @param predicate  the predicate to use, may be null\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.2 2003/01/10 20:21:23 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.3 2003/01/11 01:07:13 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * \n  * @since Commons Collections 2.2\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/01/10 20:21:23 $\n+ * @version $Revision: 1.3 $ $Date: 2003/01/11 01:07:13 $\n  * \n  * @author Rodney Waldhoff\n  */\n     /**\n      * Creates a <code>BooleanComparator</code>\n      * that sorts <code><i>trueFirst</i></code> values before \n-     * <code>!<i>trueFirst</i></code> values.\n+     * <code>&#x21;<i>trueFirst</i></code> values.\n      * \n      * @param trueFirst when <code>true</code>, sort \n      *        <code>true</code> {@link Boolean}s before\n     /**\n      * Returns a BooleanComparator instance that sorts \n      * <code><i>trueFirst</i></code> values before \n-     * <code>!<i>trueFirst</i></code> values.\n+     * <code>&#x21;<i>trueFirst</i></code> values.\n      * <p />\n      * Clients are encouraged to use the value returned from \n      * this method instead of constructing a new instance ", "timestamp": 1042247233, "metainfo": ""}