{"sha": "e3edcb934930f79aa7992bf5d4d4073b92a6ad89", "log": "Fix javadoc problem.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/map/LRUMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/LRUMap.java\n      * load factor.\n      *\n      * @param maxSize  the maximum size of the map\n-     * @param initialSize  the initial size of the map\n      * @param loadFactor  the load factor\n      * @throws IllegalArgumentException if the maximum size is less than one\n      * @throws IllegalArgumentException if the load factor is less than zero\n      * load factor.\n      *\n      * @param maxSize  the maximum size of the map\n+     * @param initialSize  the initial size of the map\n      * @param loadFactor  the load factor\n      * @throws IllegalArgumentException if the maximum size is less than one\n      * @throws IllegalArgumentException if the initial size is negative or larger than the maximum size\n      * @throws IllegalArgumentException if the load factor is less than zero\n      * @since 4.1\n      */\n-    public LRUMap(final int maxSize, final int initialSize, final float loadFactor, final boolean scanUntilRemovable) {\n+    public LRUMap(final int maxSize,\n+                  final int initialSize,\n+                  final float loadFactor,\n+                  final boolean scanUntilRemovable) {\n+\n         super(initialSize, loadFactor);\n         if (maxSize < 1) {\n             throw new IllegalArgumentException(\"LRUMap max size must be greater than 0\");", "timestamp": 1433198456, "metainfo": ""}