{"sha": "a1ef86771ca97c5752cabbea192d6458049543dd", "log": "Javadoc how to use Predicated classes bug 29018   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n  * Decorates another <code>Bag</code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the list, an IllegalArgumentException\n- * is thrown.\n+ * This bag exists to provide validation for the decorated bag.\n+ * It is normally created to decorate an empty bag.\n+ * If an object cannot be added to the bag, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the bag.\n+ * <pre>Bag bag = PredicatedBag.decorate(new HashBag(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:27:04 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/21 21:38:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n  * Decorates another <code>SortedBag</code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the list, an IllegalArgumentException\n- * is thrown.\n+ * This bag exists to provide validation for the decorated bag.\n+ * It is normally created to decorate an empty bag.\n+ * If an object cannot be added to the bag, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the bag.\n+ * <pre>SortedBag bag = PredicatedSortedBag.decorate(new TreeBag(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:27:04 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/21 21:38:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n  * Decorates another <code>Buffer</code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the collection, an IllegalArgumentException\n- * is thrown.\n+ * This buffer exists to provide validation for the decorated buffer.\n+ * It is normally created to decorate an empty buffer.\n+ * If an object cannot be added to the buffer, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the buffer.\n+ * <pre>Buffer buffer = PredicatedBuffer.decorate(new UnboundedFifoBuffer(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/15 12:33:23 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/21 21:38:48 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n  * Decorates another <code>Collection</code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the collection, an IllegalArgumentException\n- * is thrown.\n+ * This collection exists to provide validation for the decorated collection.\n+ * It is normally created to decorate an empty collection.\n+ * If an object cannot be added to the collection, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the collection.\n+ * <pre>Collection coll = PredicatedCollection.decorate(new ArrayList(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/15 12:39:13 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/21 21:38:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/list/PredicatedList.java\n+++ b/src/java/org/apache/commons/collections/list/PredicatedList.java\n  * Decorates another <code>List</code> to validate that all additions\n  * match a specified predicate.\n  * <p>\n+ * This list exists to provide validation for the decorated list.\n+ * It is normally created to decorate an empty list.\n  * If an object cannot be added to the list, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the list.\n+ * <pre>List list = PredicatedList.decorate(new ArrayList(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:12:26 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/21 21:38:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/PredicatedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedMap.java\n  * Decorates another <code>Map</code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the map, an IllegalArgumentException\n- * is thrown.\n+ * This map exists to provide validation for the decorated map.\n+ * It is normally created to decorate an empty map.\n+ * If an object cannot be added to the map, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null keys are added to the map.\n+ * <pre>Map map = PredicatedSet.decorate(new HashMap(), NotNullPredicate.INSTANCE, null);</pre>\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2004/05/07 23:11:04 $\n+ * @version $Revision: 1.12 $ $Date: 2004/05/21 21:38:49 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n  * Decorates another <code>SortedMap </code> to validate that additions\n  * match a specified predicate.\n  * <p>\n- * If an object cannot be added to the map, an IllegalArgumentException\n- * is thrown.\n+ * This map exists to provide validation for the decorated map.\n+ * It is normally created to decorate an empty map.\n+ * If an object cannot be added to the map, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null keys are added to the map.\n+ * <pre>SortedMap map = PredicatedSortedSet.decorate(new TreeMap(), NotNullPredicate.INSTANCE, null);</pre>\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 10:36:01 $\n+ * @version $Revision: 1.7 $ $Date: 2004/05/21 21:38:49 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/set/PredicatedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSet.java\n  * Decorates another <code>Set</code> to validate that all additions\n  * match a specified predicate.\n  * <p>\n+ * This set exists to provide validation for the decorated set.\n+ * It is normally created to decorate an empty set.\n  * If an object cannot be added to the set, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the set.\n+ * <pre>Set set = PredicatedSet.decorate(new HashSet(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:14:27 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/21 21:38:42 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n  * Decorates another <code>SortedSet</code> to validate that all additions\n  * match a specified predicate.\n  * <p>\n+ * This set exists to provide validation for the decorated set.\n+ * It is normally created to decorate an empty set.\n  * If an object cannot be added to the set, an IllegalArgumentException is thrown.\n+ * <p>\n+ * One usage would be to ensure that no null entries are added to the set.\n+ * <pre>SortedSet set = PredicatedSortedSet.decorate(new TreeSet(), NotNullPredicate.INSTANCE);</pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:14:27 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/21 21:38:42 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack", "timestamp": 1085175610, "metainfo": ""}