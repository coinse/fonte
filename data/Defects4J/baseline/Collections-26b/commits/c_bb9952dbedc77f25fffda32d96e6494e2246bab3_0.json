{"sha": "bb9952dbedc77f25fffda32d96e6494e2246bab3", "log": "[COLLECTIONS-444] SetUniqueList.set now works correctly when the object to be inserted is already at the same place. Thanks to Thomas Vahrst.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/list/SetUniqueList.java\n+++ b/src/main/java/org/apache/commons/collections/list/SetUniqueList.java\n             // the object is already in the uniq list\n             // (and it hasn't been swapped with itself)\n             super.remove(pos); // remove the duplicate by index\n-        }\n-\n-        set.add(object); // add the new item to the unique set\n-        set.remove(removed); // remove the item deleted by the set\n-\n+            set.remove(removed); // remove the item deleted by the set\n+        } else if (pos == -1) {\n+            set.add(object); // add the new item to the unique set\n+            set.remove(removed); // remove the item deleted by the set\n+        }\n+        \n         return removed; // return the item deleted by the set\n     }\n \n--- a/src/test/java/org/apache/commons/collections/list/SetUniqueListTest.java\n+++ b/src/test/java/org/apache/commons/collections/list/SetUniqueListTest.java\n         assertTrue(stop - start < 5000);\n     }\n     \n+    public void testSetCollections444() {\n+        final SetUniqueList<Integer> lset = new SetUniqueList<Integer>(new ArrayList<Integer>(), new HashSet<Integer>());\n+\n+        // Duplicate element\n+        final Integer obj1 = new Integer(1);\n+        final Integer obj2 = new Integer(2);\n+\n+        lset.add(obj1);\n+        lset.add(obj2);\n+        lset.set(0, obj1);\n+        assertEquals(2, lset.size());\n+        assertSame(obj1, lset.get(0));\n+        assertSame(obj2, lset.get(1));\n+\n+        assertTrue(lset.contains(obj1));\n+        assertTrue(lset.contains(obj2));\n+    }\n+\n     @SuppressWarnings(\"serial\")\n     class SetUniqueList307 extends SetUniqueList<E> {\n         public SetUniqueList307(final List<E> list, final Set<E> set) {", "timestamp": 1361828868, "metainfo": ""}