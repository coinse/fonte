{"sha": "9ba0768cf5f073aa54a5e53c996b4ccffa9679e1", "log": "Fix unused imports and javadoc links (patch from Steve Downey)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/ArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayIterator.java,v 1.16 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.16 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayIterator.java,v 1.17 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.17 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.lang.reflect.Array;\n-import java.util.Iterator;\n-import java.util.NoSuchElementException;\n \n-/** Implements an {@link Iterator} over an array of objects.\n+/** Implements an {@link java.util.Iterator} over an array of objects.\n   *\n   * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author Mauricio S. Moura\n   * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n-  * @version $Revision: 1.16 $\n+  * @version $Revision: 1.17 $\n   * @deprecated this class has been moved to the iterators subpackage\n   */\n public class ArrayIterator \n--- a/src/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.8 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.9 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n \n import java.util.ArrayList;\n import java.util.EmptyStackException;\n-import java.util.Stack; // only used in javadoc comments, javadoc won't find it otherwise\n \n /**\n  * An implementation of the {@link java.util.Stack} API that is based on an\n  *\n  * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.8 $ $Date: 2002/08/15 20:04:31 $\n+ * @version $Revision: 1.9 $ $Date: 2002/10/12 22:15:19 $\n  * @see java.util.Stack\n  */\n \n--- a/src/java/org/apache/commons/collections/BagUtils.java\n+++ b/src/java/org/apache/commons/collections/BagUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BagUtils.java,v 1.5 2002/08/18 20:11:37 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/18 20:11:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BagUtils.java,v 1.6 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n \n-import java.util.Collection;\n import java.util.Comparator;\n import java.util.Set;\n \n  *  and {@link SortedBag} instances.<P>\n  *\n  *  @author Paul Jack\n- *  @version $Id: BagUtils.java,v 1.5 2002/08/18 20:11:37 pjack Exp $\n+ *  @version $Id: BagUtils.java,v 1.6 2002/10/12 22:15:18 scolebourne Exp $\n  *  @since 2.1\n  */\n public class BagUtils {\n--- a/src/java/org/apache/commons/collections/BeanMap.java\n+++ b/src/java/org/apache/commons/collections/BeanMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.13 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.13 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.14 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Iterator;\n-import java.util.Map;\n import java.util.Set;\n \n \n--- a/src/java/org/apache/commons/collections/BufferUtils.java\n+++ b/src/java/org/apache/commons/collections/BufferUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BufferUtils.java,v 1.7 2002/08/18 20:11:37 pjack Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/08/18 20:11:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BufferUtils.java,v 1.8 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n \n \n import java.util.Collection;\n-import java.util.Iterator;\n \n \n /**\n  *  Contains static utility methods for operating on {@link Buffer} objects.\n  *\n  *  @author Paul Jack\n- *  @version $Id: BufferUtils.java,v 1.7 2002/08/18 20:11:37 pjack Exp $\n+ *  @version $Id: BufferUtils.java,v 1.8 2002/10/12 22:15:18 scolebourne Exp $\n  *  @since 2.1\n  */\n public class BufferUtils {\n--- a/src/java/org/apache/commons/collections/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.9 2002/06/21 03:26:15 mas Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/06/21 03:26:15 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.10 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectOutputStream;\n import java.io.IOException;\n import java.lang.reflect.Array;\n-import java.util.LinkedList; // only used in javadoc comments, javadoc won't find it otherwise\n-import java.lang.UnsupportedOperationException; // stops a javadoc warning\n \n /**\n  * A doubly-linked list implementation of the {@link List} interface,\n  *\n  * @since 1.0\n  * @author Rodney Waldhoff\n- * @version $Id: CursorableLinkedList.java,v 1.9 2002/06/21 03:26:15 mas Exp $\n+ * @version $Id: CursorableLinkedList.java,v 1.10 2002/10/12 22:15:19 scolebourne Exp $\n  * @see java.util.LinkedList\n  */\n public class CursorableLinkedList implements List, Serializable {\n--- a/src/java/org/apache/commons/collections/DefaultMapBag.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapBag.java,v 1.5 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapBag.java,v 1.6 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.NoSuchElementException;\n import java.util.Set;\n \n /**\n--- a/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DoubleOrderedMap.java,v 1.2 2002/06/12 03:59:15 mas Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/06/12 03:59:15 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DoubleOrderedMap.java,v 1.3 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n \n \n \n-import java.lang.reflect.Array;\n-\n-import java.util.*;\n+import java.util.AbstractCollection;\n+import java.util.AbstractMap;\n+import java.util.AbstractSet;\n+import java.util.Collection;\n+import java.util.ConcurrentModificationException;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Set;\n \n \n /**\n--- a/src/java/org/apache/commons/collections/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/EnumerationIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/EnumerationIterator.java,v 1.6 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/EnumerationIterator.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n \n import java.util.Collection;\n import java.util.Enumeration;\n-import java.util.Iterator;\n \n /** Adapter to make {@link Enumeration Enumeration} instances appear\n-  * to be {@link Iterator Iterator} instances.\n+  * to be {@link java.util.Iterator Iterator} instances.\n   *\n   * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n--- a/src/java/org/apache/commons/collections/Factory.java\n+++ b/src/java/org/apache/commons/collections/Factory.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.2 2002/08/15 20:09:37 pjack Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/15 20:09:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.3 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/10/12 22:15:19 $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections;\n \n-import java.util.*;\n-import java.lang.reflect.*;\n+\n \n /**\n  * Factory\n  * to create an object.\n  *\n  * @author Arron Bates\n- * @version $Revision: 1.2 $\n+ * @version $Revision: 1.3 $\n  * @since 2.1\n  */\n public interface Factory {\n--- a/src/java/org/apache/commons/collections/FastArrayList.java\n+++ b/src/java/org/apache/commons/collections/FastArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastArrayList.java,v 1.8 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastArrayList.java,v 1.9 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.ConcurrentModificationException;\n  *\n  * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.8 $ $Date: 2002/08/15 20:04:31 $\n+ * @version $Revision: 1.9 $ $Date: 2002/10/12 22:15:18 $\n  */\n \n public class FastArrayList extends ArrayList {\n--- a/src/java/org/apache/commons/collections/FastHashMap.java\n+++ b/src/java/org/apache/commons/collections/FastHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastHashMap.java,v 1.9 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastHashMap.java,v 1.10 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n \n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.ConcurrentModificationException;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.Map.Entry;\n import java.util.Set;\n \n \n  *\n  * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.9 $ $Date: 2002/08/15 20:04:31 $\n+ * @version $Revision: 1.10 $ $Date: 2002/10/12 22:15:18 $\n  */\n \n public class FastHashMap extends HashMap {\n--- a/src/java/org/apache/commons/collections/FastTreeMap.java\n+++ b/src/java/org/apache/commons/collections/FastTreeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastTreeMap.java,v 1.9 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastTreeMap.java,v 1.10 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n \n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Comparator;\n import java.util.ConcurrentModificationException;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.Map.Entry;\n import java.util.Set;\n import java.util.SortedMap;\n import java.util.TreeMap;\n  *\n  * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.9 $ $Date: 2002/08/15 20:04:31 $\n+ * @version $Revision: 1.10 $ $Date: 2002/10/12 22:15:18 $\n  */\n \n public class FastTreeMap extends TreeMap {\n--- a/src/java/org/apache/commons/collections/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/FilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterIterator.java,v 1.7 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterIterator.java,v 1.8 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n import java.util.Iterator;\n-import java.util.NoSuchElementException;\n \n /** A Proxy {@link Iterator Iterator} which takes a {@link Predicate Predicate} instance to filter\n   * out objects from an underlying {@link Iterator Iterator} instance.\n--- a/src/java/org/apache/commons/collections/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/FilterListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterListIterator.java,v 1.6 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterListIterator.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n import java.util.ListIterator;\n-import java.util.NoSuchElementException;\n \n /** \n   * A proxy {@link ListIterator ListIterator} which \n   * returned by the iterator.\n   * \n   * @since 2.0\n-  * @version $Revision: 1.6 $ $Date: 2002/08/15 23:13:51 $\n+  * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:18 $\n   * @author Rodney Waldhoff\n   * @deprecated this class has been moved to the iterators subpackage\n   */\n--- a/src/java/org/apache/commons/collections/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/IteratorEnumeration.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorEnumeration.java,v 1.6 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorEnumeration.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.util.Enumeration;\n import java.util.Iterator;\n \n-/** Adapter to make an {@link Iterator Iterator} instance appear to be an {@link Enumeration Enumeration} instances\n+/** Adapter to make an {@link Iterator Iterator} instance appear to be an {@link java.util.Enumeration Enumeration} instances\n   *\n   * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.3 2002/08/19 21:56:18 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/19 21:56:18 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Comparator;\n import java.util.Dictionary;\n import java.util.Enumeration;\n  * <code>org.apache.commons.collections.iterators</code> subpackage.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorUtils.java,v 1.3 2002/08/19 21:56:18 pjack Exp $\n+ * @version $Id: IteratorUtils.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n  * @since 2.1\n  */\n public class IteratorUtils {\n--- a/src/java/org/apache/commons/collections/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/LRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.16 2002/06/12 03:59:15 mas Exp $\n- * $Revision: 1.16 $\n- * $Date: 2002/06/12 03:59:15 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.17 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.17 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.io.Externalizable;\n import java.io.IOException;\n import java.io.ObjectInput;\n-import java.io.ObjectInputStream;\n import java.io.ObjectOutput;\n-import java.io.ObjectOutputStream;\n import java.util.Iterator;\n \n /**\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.5 2002/10/12 22:04:59 scolebourne Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/10/12 22:04:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.6 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.util.*;\n-import java.io.*;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n /** \n  * <code>MultiHashMap</code> is the default implementation of the \n- * {@link MultiMap} interface. A <code>MultiMap</code> is a Map\n- * with slightly different semantics.\n+ * {@link org.apache.commons.collections.MultiMap MultiMap} interface.\n+ * A <code>MultiMap</code> is a Map with slightly different semantics.\n  * Instead of returning an Object, it returns a Collection.\n  * So for example, you can put( key, new Integer(1) ); \n  * and then a Object get( key ); will return you a Collection \n--- a/src/java/org/apache/commons/collections/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/ReferenceMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ReferenceMap.java,v 1.6 2002/08/19 19:44:59 pjack Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/08/19 19:44:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ReferenceMap.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.lang.ref.Reference;\n import java.lang.ref.ReferenceQueue;\n import java.lang.ref.SoftReference;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.ConcurrentModificationException;\n import java.util.Iterator;\n import java.util.Map;\n  *  provide synchronized access to a <Code>ReferenceMap</Code>.\n  *\n  *  @author Paul Jack \n- *  @version $Id: ReferenceMap.java,v 1.6 2002/08/19 19:44:59 pjack Exp $\n+ *  @version $Id: ReferenceMap.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n  *  @since 2.1\n  *  @see java.lang.ref.Reference\n  */\n--- a/src/java/org/apache/commons/collections/SequencedHashMap.java\n+++ b/src/java/org/apache/commons/collections/SequencedHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.13 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.13 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.14 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.AbstractCollection;\n-import java.util.AbstractMap;\n import java.util.AbstractSet;\n import java.util.ArrayList;\n import java.util.List;\n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.5 2002/08/18 20:11:37 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/18 20:11:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.6 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n \n-import java.util.Collection;\n import java.util.Comparator;\n-import java.util.Iterator;\n import java.util.Set;\n import java.util.SortedSet;\n \n  *  and {@link SortedSet} instances.\n  *\n  *  @author Paul Jack\n- *  @version $Id: SetUtils.java,v 1.5 2002/08/18 20:11:37 pjack Exp $\n+ *  @version $Id: SetUtils.java,v 1.6 2002/10/12 22:15:19 scolebourne Exp $\n  *  @since 2.1\n  */\n public class SetUtils {\n--- a/src/java/org/apache/commons/collections/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/SingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SingletonIterator.java,v 1.7 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SingletonIterator.java,v 1.8 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.util.Iterator;\n-import java.util.NoSuchElementException;\n \n-/** <p><code>SingletonIterator</code> is an {@link Iterator} over a single \n+\n+/** <p><code>SingletonIterator</code> is an {@link java.util.Iterator Iterator} over a single \n   * object instance.</p>\n   *\n   * @since 2.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  * @version $Revision: 1.7 $\n+  * @version $Revision: 1.8 $\n   * @deprecated this class has been moved to the iterators subpackage\n   */\n public class SingletonIterator \n--- a/src/java/org/apache/commons/collections/SoftRefHashMap.java\n+++ b/src/java/org/apache/commons/collections/SoftRefHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SoftRefHashMap.java,v 1.5 2002/08/12 18:24:33 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/12 18:24:33 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SoftRefHashMap.java,v 1.6 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.lang.ref.*;\n-import java.lang.reflect.*;\n-import java.util.*;\n+import java.lang.ref.Reference;\n+import java.lang.ref.SoftReference;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n \n /** <p>\n   * HashMap with SoftReference links to values which allows the values of the Map\n--- a/src/java/org/apache/commons/collections/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/StaticBucketMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/StaticBucketMap.java,v 1.4 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/StaticBucketMap.java,v 1.5 2002/10/12 22:15:19 scolebourne Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/10/12 22:15:19 $\n  *\n  * ====================================================================\n  *\n import java.util.AbstractCollection;\n import java.util.AbstractSet;\n import java.util.Collection;\n-import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Set;\n  * @author  <a href=\"mailto:g-froehlich@gmx.de\">Gerhard Froehlich</a>\n  * @author  <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n  * @author  Paul Jack\n- * @version CVS $Revision: 1.4 $ $Date: 2002/08/15 20:04:31 $\n+ * @version CVS $Revision: 1.5 $ $Date: 2002/10/12 22:15:19 $\n  * @since Avalon 4.0\n  */\n public final class StaticBucketMap implements Map\n--- a/src/java/org/apache/commons/collections/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/TransformIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/TransformIterator.java,v 1.6 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/TransformIterator.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections;\n \n-import java.util.Enumeration;\n import java.util.Iterator;\n \n /** A Proxy {@link Iterator Iterator} which uses a {@link Transformer Transformer} instance to \n--- a/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java,v 1.3 2002/07/03 02:16:48 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/07/03 02:16:48 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n \n \n import java.util.AbstractCollection;\n-import java.util.Collection;\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n  * @author  <a href=\"fede@apache.org\">Federico Barbieri</a>\n  * @author  <a href=\"bloritsch@apache.org\">Berin Loritsch</a>\n  * @author Paul Jack\n- * @version CVS $Revision: 1.3 $ $Date: 2002/07/03 02:16:48 $\n+ * @version CVS $Revision: 1.4 $ $Date: 2002/10/12 22:15:18 $\n  * @since Avalon 4.0\n  */\n public final class UnboundedFifoBuffer extends AbstractCollection implements Buffer\n--- a/src/java/org/apache/commons/collections/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/UniqueFilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/UniqueFilterIterator.java,v 1.3 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/UniqueFilterIterator.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:18 $\n  *\n  * ====================================================================\n  *\n \n import java.util.HashSet;\n import java.util.Iterator;\n-import java.util.NoSuchElementException;\n \n /** A FilterIterator which only returns \"unique\" Objects.  Internally,\n   * the Iterator maintains a Set of objects it has already encountered,\n   * and duplicate Objects are skipped.\n   *\n   * @author Morgan Delagrange\n-  * @version $Id: UniqueFilterIterator.java,v 1.3 2002/08/15 20:04:31 pjack Exp $\n+  * @version $Id: UniqueFilterIterator.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n   * @since 2.1\n   */\n \n--- a/src/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/NullComparator.java\n  */\n \n import java.io.Serializable;\n-import java.lang.Comparable;\n import java.util.Comparator;\n \n /**\n  *  other objects.\n  *\n  *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- *  @version $Id: NullComparator.java,v 1.3 2002/06/11 02:41:47 mas Exp $ \n+ *  @version $Id: NullComparator.java,v 1.4 2002/10/12 22:15:21 scolebourne Exp $ \n  **/\n public class NullComparator implements Comparator, Serializable {\n \n--- a/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/10/12 22:15:21 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections.iterators;\n \n-import java.util.Enumeration;\n import java.util.Iterator;\n import org.apache.commons.collections.Transformer;\n \n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/10/12 22:15:21 $\n  *\n  * ====================================================================\n  *\n \n import java.util.HashSet;\n import java.util.Iterator;\n-import java.util.NoSuchElementException;\n import org.apache.commons.collections.Predicate;\n \n /** A FilterIterator which only returns \"unique\" Objects.  Internally,\n   * and duplicate Objects are skipped.\n   *\n   * @author Morgan Delagrange\n-  * @version $Id: UniqueFilterIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n+  * @version $Id: UniqueFilterIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n   * @since 2.1\n   */\n \n--- a/src/java/org/apache/commons/collections/primitives/AbstractIntArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractIntArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntArrayList.java,v 1.5 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntArrayList.java,v 1.6 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n+\n \n /**\n  * Abstract base class for lists of primitive <Code>int</Code> elements\n  * primitive values will be stored in an underlying primitive array, and\n  * provides methods for manipulating the capacity of that array.<P>\n  *\n- * @version $Revision: 1.5 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.6 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractIntArrayList extends AbstractIntList {\n--- a/src/java/org/apache/commons/collections/primitives/AbstractIntList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractIntList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntList.java,v 1.3 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntList.java,v 1.4 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * Abstract base class for lists of primitive <Code>int</Code> elements.<P>\n  *\n- * The {@link List} methods are all implemented, but they forward to \n+ * The {@link java.util.List List} methods are all implemented, but they forward to \n  * abstract methods that operate on <Code>int</Code> elements.  For \n  * instance, the {@link #get(int)} method simply forwards to \n  * {@link #getInt(int)}.  The primitive <Code>int</Code> that is \n  * {@link #removeIntAt(int)} and {@link #clear()} methods.  You may want \n  * to override the other methods to increase performance.<P>\n  *\n- * @version $Revision: 1.3 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.4 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractIntList extends AbstractList {\n--- a/src/java/org/apache/commons/collections/primitives/AbstractLongArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractLongArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractLongArrayList.java,v 1.5 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractLongArrayList.java,v 1.6 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n+\n \n /**\n  * Abstract base class for lists of primitive <Code>long</Code> elements\n  * primitive values will be stored in an underlying primitive array, and\n  * provides methods for manipulating the capacity of that array.<P>\n  *\n- * @version $Revision: 1.5 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.6 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractLongArrayList extends AbstractLongList {\n--- a/src/java/org/apache/commons/collections/primitives/AbstractLongList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractLongList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractLongList.java,v 1.3 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractLongList.java,v 1.4 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * Abstract base class for lists of primitive <Code>long</Code> elements.<P>\n  *\n- * The {@link List} methods are all implemented, but they forward to \n+ * The {@link java.util.List List} methods are all implemented, but they forward to \n  * abstract methods that operate on <Code>long</Code> elements.  For \n  * instance, the {@link #get(int)} method simply forwards to \n  * {@link #getLong(int)}.  The primitive <Code>long</Code> that is \n  * {@link #removeLongAt(int)} and {@link #clear()} methods.  You may want \n  * to override the other methods to increase performance.<P>\n  *\n- * @version $Revision: 1.3 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.4 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractLongList extends AbstractList {\n--- a/src/java/org/apache/commons/collections/primitives/AbstractShortArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractShortArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractShortArrayList.java,v 1.5 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractShortArrayList.java,v 1.6 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n+\n \n /**\n  * Abstract base class for lists of primitive <Code>short</Code> elements\n  * primitive values will be stored in an underlying primitive array, and\n  * provides methods for manipulating the capacity of that array.<P>\n  *\n- * @version $Revision: 1.5 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.6 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractShortArrayList extends AbstractShortList {\n--- a/src/java/org/apache/commons/collections/primitives/AbstractShortList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractShortList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractShortList.java,v 1.3 2002/08/22 01:50:54 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/22 01:50:54 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractShortList.java,v 1.4 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n \n package org.apache.commons.collections.primitives;\n \n-import java.io.Serializable;\n import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * Abstract base class for lists of primitive <Code>short</Code> elements.<P>\n  *\n- * The {@link List} methods are all implemented, but they forward to \n+ * The {@link java.util.List List} methods are all implemented, but they forward to \n  * abstract methods that operate on <Code>short</Code> elements.  For \n  * instance, the {@link #get(int)} method simply forwards to \n  * {@link #getShort(int)}.  The primitive <Code>short</Code> that is \n  * {@link #removeShortAt(int)} and {@link #clear()} methods.  You may want \n  * to override the other methods to increase performance.<P>\n  *\n- * @version $Revision: 1.3 $ $Date: 2002/08/22 01:50:54 $\n+ * @version $Revision: 1.4 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public abstract class AbstractShortList extends AbstractList {\n--- a/src/java/org/apache/commons/collections/primitives/FloatArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/FloatArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/FloatArrayList.java,v 1.5 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/FloatArrayList.java,v 1.6 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of <Code>float</Code> elements backed by a <Code>float</Code> array.\n  * {@link java.util.ArrayList} of {@link Float} values and allows for\n  * better compile-time type checking.<P>\n  *\n- * @version $Revision: 1.5 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.6 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class FloatArrayList extends AbstractList implements List, Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/IntArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/IntArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of <Code>int</Code> elements backed by an <Code>int</Code> array.\n- * This class implements the {@link List} interface for an array of \n+ * This class implements the {@link java.util.List List} interface for an array of \n  * <Code>int</Code> values.  This class uses less memory than an\n  * {@link java.util.ArrayList} of {@link Integer} values and allows for\n  * better compile-time type checking.<P>\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class IntArrayList extends AbstractIntArrayList implements Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/LongArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/LongArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/LongArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/LongArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of <Code>long</Code> elements backed by a <Code>long</Code> array.\n- * This class implements the {@link List} interface for an array of \n+ * This class implements the {@link java.util.List List} interface for an array of \n  * <Code>long</Code> values.  This class uses less memory than an\n  * {@link java.util.ArrayList} of {@link Long} values and allows for\n  * better compile-time type checking.<P>\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class LongArrayList extends AbstractLongArrayList implements Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/ShortArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/ShortArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/ShortArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/ShortArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of <Code>short</Code> elements backed by an <Code>short</Code> array.\n- * This class implements the {@link List} interface for an array of \n+ * This class implements the {@link java.util.List List} interface for an array of \n  * <Code>short</Code> values.  This class uses less memory than an\n  * {@link java.util.ArrayList} of {@link Short} values and allows for\n  * better compile-time type checking.<P>\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class ShortArrayList extends AbstractShortArrayList implements Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/UnsignedByteArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/UnsignedByteArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedByteArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedByteArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of unsigned 8-bit values backed by a <Code>byte</Code> array.\n  * than a {@link java.util.ArrayList} and offers better compile-time type\n  * checking.\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class UnsignedByteArrayList extends AbstractShortArrayList implements Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/UnsignedIntArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/UnsignedIntArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedIntArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedIntArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of unsigned 32-bit values backed by an <Code>int</Code> array.\n  * than a {@link java.util.ArrayList} and offers better compile-time type\n  * checking.\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class UnsignedIntArrayList extends AbstractLongArrayList implements Serializable {\n--- a/src/java/org/apache/commons/collections/primitives/UnsignedShortArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/UnsignedShortArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedShortArrayList.java,v 1.6 2002/09/07 20:33:32 rwaldhoff Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/09/07 20:33:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedShortArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/10/12 22:15:20 $\n  *\n  * ====================================================================\n  *\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n-import java.util.AbstractList;\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.ListIterator;\n \n /**\n  * A list of unsigned 16-bit values backed by a <Code>short</Code> array.\n  * than a {@link java.util.ArrayList} and offers better compile-time type\n  * checking.\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/09/07 20:33:32 $\n+ * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n  * @author Rodney Waldhoff \n  */\n public class UnsignedShortArrayList extends AbstractIntArrayList implements Serializable {", "timestamp": 1034460921, "metainfo": ""}