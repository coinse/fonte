{"sha": "d3bc97b77e11819a925e32ef625fe591cf204684", "log": "added base class for testing iterators   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestArrayIterator.java\n+++ b/src/test/org/apache/commons/collections/TestArrayIterator.java\n-/*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestArrayIterator.java,v 1.4 2001/08/23 10:50:01 jstrachan Exp $\n- * $Revision: 1.4 $\n- * $Date: 2001/08/23 10:50:01 $\n- *\n- * ====================================================================\n- *\n- * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n- *       \"This product includes software developed by the\n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n- *\n- * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written\n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\"\n- *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n- */\n-\n-package org.apache.commons.collections;\n-\n-import junit.framework.*;\n-import java.util.Iterator;\n-import java.util.NoSuchElementException;\n-\n-/**\n- * Tests the ArrayIterator to ensure that the next() method will actually\n- * perform the iteration rather than the hasNext() method.\n- * The code of this test was supplied by Mauricio S. Moura\n- *\n- * @author James Strachan\n- * @author Mauricio S. Moura\n- * @version $Id: TestArrayIterator.java,v 1.4 2001/08/23 10:50:01 jstrachan Exp $\n- */\n-public class TestArrayIterator extends TestObject {\n-    \n-    protected String[] testArray = {\n-        \"One\", \"Two\", \"Three\"\n-    };\n-    \n-    public static Test suite() {\n-        return new TestSuite(TestArrayIterator.class);\n-    }\n-    \n-    public TestArrayIterator(String testName) {\n-        super(testName);\n-    }\n-    \n-    /**\n-     * Return a new, empty {@link Object} to used for testing.\n-     */\n-    public Object makeObject() {\n-        return new ArrayIterator( (Object[]) testArray );\n-    }\n-    \n-    public void testIterator() {\n-        Iterator iter = (Iterator) makeObject();\n-        for ( int i = 0; i < testArray.length; i++ ) {\n-            Object testValue = testArray[i];            \n-            Object iterValue = iter.next();\n-            \n-            assertEquals( \"Iteration value is correct\", testValue, iterValue );\n-        }\n-        \n-        assertTrue(\"Iterator should now be empty\", ! iter.hasNext() );\n-\n-\ttry {\n-\t    Object testValue = iter.next();\n-\t} catch (Exception e) {\n-\t  assertTrue(\"NoSuchElementException must be thrown\", \n-\t\t e.getClass().equals((new NoSuchElementException()).getClass()));\n-\t}\n-    }\n-}\n-\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestArrayIterator.java,v 1.5 2002/02/25 22:43:04 morgand Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/02/25 22:43:04 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections;\n+\n+import junit.framework.*;\n+import java.util.Iterator;\n+import java.util.NoSuchElementException;\n+\n+/**\n+ * Tests the ArrayIterator to ensure that the next() method will actually\n+ * perform the iteration rather than the hasNext() method.\n+ * The code of this test was supplied by Mauricio S. Moura\n+ *\n+ * @author James Strachan\n+ * @author Mauricio S. Moura\n+ * @version $Id: TestArrayIterator.java,v 1.5 2002/02/25 22:43:04 morgand Exp $\n+ */\n+public class TestArrayIterator extends TestIterator {\n+    \n+    protected String[] testArray = {\n+        \"One\", \"Two\", \"Three\"\n+    };\n+    \n+    public static Test suite() {\n+        return new TestSuite(TestArrayIterator.class);\n+    }\n+    \n+    public TestArrayIterator(String testName) {\n+        super(testName);\n+    }\n+\n+    public Iterator makeEmptyIterator() {\n+        return new ArrayIterator(new Object[0]);\n+    }\n+\n+    public Iterator makeFullIterator() {\n+        return new ArrayIterator(testArray);\n+    }\n+    \n+    /**\n+     * Return a new, empty {@link Object} to used for testing.\n+     */\n+    public Object makeObject() {\n+        return makeFullIterator();\n+    }\n+    \n+    public void testIterator() {\n+        Iterator iter = (Iterator) makeFullIterator();\n+        for ( int i = 0; i < testArray.length; i++ ) {\n+            Object testValue = testArray[i];            \n+            Object iterValue = iter.next();\n+            \n+            assertEquals( \"Iteration value is correct\", testValue, iterValue );\n+        }\n+        \n+        assertTrue(\"Iterator should now be empty\", ! iter.hasNext() );\n+\n+\ttry {\n+\t    Object testValue = iter.next();\n+\t} catch (Exception e) {\n+\t  assertTrue(\"NoSuchElementException must be thrown\", \n+\t\t e.getClass().equals((new NoSuchElementException()).getClass()));\n+\t}\n+    }\n+}\n+\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/TestIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestIterator.java,v 1.1 2002/02/25 22:43:04 morgand Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2002/02/25 22:43:04 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+     \n+package org.apache.commons.collections;\n+\n+import java.util.Iterator;\n+import java.util.NoSuchElementException;\n+\n+public abstract class TestIterator extends TestObject {\n+\n+    public TestIterator(String testName) {\n+        super(testName);\n+    }\n+\n+    public abstract Iterator makeEmptyIterator();\n+\n+    public abstract Iterator makeFullIterator();\n+\n+\n+    /**\n+     * Should throw a NoSuchElementException.\n+     */\n+    public void testEmptyIterator() {\n+        Iterator iter = makeEmptyIterator();\n+        try {\n+\t    iter.next();\n+            fail(\"NoSuchElementException must be thrown when Iterator is exhausted\");\n+\t} catch (NoSuchElementException e) {\n+\t}\n+    }\n+\n+    /**\n+     * NoSuchElementException (or any other exception)\n+     * should not be thrown for the first element.  \n+     * NoSuchElementException must be thrown when\n+     * hasNext() returns false\n+     */\n+    public void testFullIterator() {\n+        Iterator iter = makeFullIterator();\n+        try {\n+\t    iter.next();\n+\t} catch (NoSuchElementException e) {\n+            fail(\"Full iterators must have at least one element\");\n+\t}\n+\n+        while (iter.hasNext()) {\n+            iter.next();\n+        }\n+\n+        try {\n+\t    iter.next();\n+            fail(\"NoSuchElementException must be thrown when Iterator is exhausted\");\n+\t} catch (NoSuchElementException e) {\n+\t}\n+    }\n+\n+}", "timestamp": 1014676984, "metainfo": ""}