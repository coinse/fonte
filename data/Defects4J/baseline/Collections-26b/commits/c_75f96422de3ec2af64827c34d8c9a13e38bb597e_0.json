{"sha": "75f96422de3ec2af64827c34d8c9a13e38bb597e", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/decorators/ObservedCollection.java\n+++ b/src/java/org/apache/commons/collections/decorators/ObservedCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedCollection.java,v 1.5 2003/09/03 00:11:28 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedCollection.java,v 1.6 2003/09/03 22:29:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.event.StandardModificationHandler;\n \n /**\n- * <code>ObservedCollection</code> decorates a <code>Collection</code>\n- * implementation to observe changes in the collection.\n+ * Decorates a <code>Collection</code> implementation to observe modifications.\n  * <p>\n  * Each modifying method call made on this <code>Collection</code> is forwarded to a\n  * {@link ModificationHandler}.\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2003/09/03 00:11:28 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/03 22:29:51 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/ObservedList.java\n+++ b/src/java/org/apache/commons/collections/decorators/ObservedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedList.java,v 1.4 2003/09/03 00:11:28 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedList.java,v 1.5 2003/09/03 22:29:51 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.event.ModificationHandlerFactory;\n \n /**\n- * <code>ObservedList</code> decorates a <code>List</code>\n- * implementation to observe changes.\n+ * Decorates a <code>List</code> implementation to observe modifications.\n  * <p>\n  * Each modifying method call made on this <code>List</code> is forwarded to a\n  * {@link ModificationHandler}.\n  * The handler manages the event, notifying listeners and optionally vetoing changes.\n  * The default handler is {@link StandardModificationHandler}.\n  * See this class for details of configuration available.\n- * <p>\n- * For convenience, add, remove and get listener methods are made available on\n- * this class. They accept a generic listener type, whereas handlers generally\n- * require a specific type. Thus a ClassCastException may be thrown from these\n- * methods. They may also throw UnsupportedOperationException if the handler\n- * uses a technique other than listeners to communicate events.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/09/03 00:11:28 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/03 22:29:51 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/ObservedSet.java\n+++ b/src/java/org/apache/commons/collections/decorators/ObservedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedSet.java,v 1.4 2003/09/03 00:11:28 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/ObservedSet.java,v 1.5 2003/09/03 22:29:50 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.event.ModificationHandlerFactory;\n \n /**\n- * <code>ObservedSet</code> decorates a <code>Set</code>\n- * implementation to observe changes.\n+ * Decorates a <code>Set</code> implementation to observe modifications.\n  * <p>\n  * Each modifying method call made on this <code>Set</code> is forwarded to a\n  * {@link ModificationHandler}.\n  * The handler manages the event, notifying listeners and optionally vetoing changes.\n  * The default handler is {@link StandardModificationHandler}.\n  * See this class for details of configuration available.\n- * <p>\n- * For convenience, add, remove and get listener methods are made available on\n- * this class. They accept a generic listener type, whereas handlers generally\n- * require a specific type. Thus a ClassCastException may be thrown from these\n- * methods. They may also throw UnsupportedOperationException if the handler\n- * uses a technique other than listeners to communicate events.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/09/03 00:11:28 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/03 22:29:50 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1062628191, "metainfo": ""}