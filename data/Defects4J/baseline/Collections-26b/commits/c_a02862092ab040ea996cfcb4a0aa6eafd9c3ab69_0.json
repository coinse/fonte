{"sha": "a02862092ab040ea996cfcb4a0aa6eafd9c3ab69", "log": "Consistent coding standards wrt package   ", "commit": "\n--- a/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n  * another <code>Predicate</code>.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/03/13 16:34:46 $\n+ * @version $Revision: 1.2 $ $Date: 2004/03/13 17:15:17 $\n  * @author Alban Peignier\n  * @author Stephen Colebourne\n  */\n     static final long serialVersionUID = -5596090919668315834L;\n     \n     /** The transformer to call */\n-    private final Transformer transformer;\n+    private final Transformer iTransformer;\n     /** The predicate to call */\n-    private final Predicate predicate;\n+    private final Predicate iPredicate;\n \n     /**\n      * Factory to create the predicate.\n      * Use <code>getInstance</code> if you want that.\n      */\n     public TransformedPredicate(Transformer transformer, Predicate predicate) {\n-        this.transformer = transformer;\n-        this.predicate = predicate;\n+        iTransformer = transformer;\n+        iPredicate = predicate;\n     }\n     \n     /**\n      * Return the predicate result.\n      */\n     public boolean evaluate(Object object) {\n-        Object result = transformer.transform(object);\n-        return predicate.evaluate(result);\n+        Object result = iTransformer.transform(object);\n+        return iPredicate.evaluate(result);\n     }\n \n     /**\n      * @return the predicate\n      */\n     public Predicate getPredicate() {\n-        return predicate;\n+        return iPredicate;\n     }\n \n     /**\n      * @return the transformer\n      */\n     public Transformer getTransformer() {\n-        return transformer;\n+        return iTransformer;\n     }\n \n }", "timestamp": 1079198117, "metainfo": ""}