{"sha": "ea2aa40945005e09a9ced13e41cdfbc670f9dcb9", "log": "Enable support to work around bug in TreeMap sub map deserialization   ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n  */\n package org.apache.commons.collections.map;\n \n-import java.io.IOException;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.9 $ $Date: 2004/04/01 22:18:12 $\n+ * @version $Revision: 1.10 $ $Date: 2004/04/09 09:38:31 $\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n \n      * Compare the current serialized form of the Map\n      * against the canonical version in CVS.\n      */\n-    public void testEmptyMapCompatibility() throws IOException, ClassNotFoundException {\n+    public void testEmptyMapCompatibility() throws Exception {\n         /**\n          * Create canonical objects with this code\n         Map map = makeEmptyMap();\n      * Compare the current serialized form of the Map\n      * against the canonical version in CVS.\n      */\n-    public void testFullMapCompatibility() throws IOException, ClassNotFoundException {\n+    public void testFullMapCompatibility() throws Exception {\n         /**\n          * Create canonical objects with this code\n         Map map = makeFullMap();\n--- a/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n /**\n  * Abstract test class for {@link java.util.SortedMap} methods and contracts.\n  *\n- * @version $Revision: 1.5 $ $Date: 2004/04/02 23:09:09 $\n+ * @version $Revision: 1.6 $ $Date: 2004/04/09 09:38:31 $\n  * \n  * @author Stephen Colebourne\n  */\n     \n     //-----------------------------------------------------------------------\n     /**\n+     * Returns whether the sub map views are serializable.\n+     * If the class being tested is based around a TreeMap then you should\n+     * override and return false as TreeMap has a bug in deserialization.\n+     * \n+     * @return false\n+     */\n+    public boolean isSubMapViewsSerializable() {\n+        return true;\n+    }\n+    \n+    /**\n      * Can't sort null keys.\n      * \n      * @return false\n         }\n         public boolean supportsFullCollections() {\n             return false;\n+        }\n+        public void testSerializeDeserializeThenCompare() throws Exception {\n+            if (((AbstractTestSortedMap) main).isSubMapViewsSerializable() == false) return;\n+            super.testSerializeDeserializeThenCompare();\n+        }\n+        public void testEmptyMapCompatibility() throws Exception {\n+            if (((AbstractTestSortedMap) main).isSubMapViewsSerializable() == false) return;\n+            super.testEmptyMapCompatibility();\n+        }\n+        public void testFullMapCompatibility() throws Exception {\n+            if (((AbstractTestSortedMap) main).isSubMapViewsSerializable() == false) return;\n+            super.testFullMapCompatibility();\n         }\n     }\n     \n //            Map map = makeEmptyMap();\n //            writeExternalFormToDisk(\n //                (java.io.Serializable) map,\n-//                \"D:/dev/collections/data/test/FixedSizeSortedMap.emptyCollection.version3.1.SubMapView.obj\");\n+//                \"D:/dev/collections/data/test/TransformedSortedMap.emptyCollection.version3.1.SubMapView.obj\");\n //            map = makeFullMap();\n //            writeExternalFormToDisk(\n //                (java.io.Serializable) map,\n-//                \"D:/dev/collections/data/test/FixedSizeSortedMap.fullCollection.version3.1.SubMapView.obj\");\n+//                \"D:/dev/collections/data/test/TransformedSortedMap.fullCollection.version3.1.SubMapView.obj\");\n //        }\n     }\n     ", "timestamp": 1081503511, "metainfo": ""}