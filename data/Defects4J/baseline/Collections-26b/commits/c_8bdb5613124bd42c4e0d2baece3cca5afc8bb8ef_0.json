{"sha": "8bdb5613124bd42c4e0d2baece3cca5afc8bb8ef", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r471180 | scolebourne | 2006-11-04 05:27:44 -0800 (Sat, 04 Nov 2006) | 1 line          Abstract*Decorator - Generify and use covariant return types     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n  *\n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractBidiMapDecorator\n-        extends AbstractMapDecorator implements BidiMap {\n-    \n+public abstract class AbstractBidiMapDecorator<K, V> extends AbstractMapDecorator<K, V> implements\n+        BidiMap<K, V> {\n+\n     /**\n      * Constructor that wraps (not copies).\n      *\n      * @param map  the map to decorate, must not be null\n      * @throws IllegalArgumentException if the collection is null\n      */\n-    protected AbstractBidiMapDecorator(BidiMap map) {\n+    protected AbstractBidiMapDecorator(BidiMap<K, V> map) {\n         super(map);\n     }\n \n      * \n      * @return the decorated map\n      */\n-    protected BidiMap getBidiMap() {\n-        return (BidiMap) map;\n+    protected BidiMap<K, V> decorated() {\n+        return (BidiMap<K, V>) super.decorated();\n     }\n \n     //-----------------------------------------------------------------------\n-    public MapIterator mapIterator() {\n-        return getBidiMap().mapIterator();\n+    public MapIterator<K, V> mapIterator() {\n+        return decorated().mapIterator();\n     }\n \n-    public Object getKey(Object value) {\n-        return getBidiMap().getKey(value);\n+    public K getKey(Object value) {\n+        return decorated().getKey(value);\n     }\n \n-    public Object removeValue(Object value) {\n-        return getBidiMap().removeValue(value);\n+    public K removeValue(Object value) {\n+        return decorated().removeValue(value);\n     }\n \n-    public BidiMap inverseBidiMap() {\n-        return getBidiMap().inverseBidiMap();\n+    public BidiMap<V, K> inverseBidiMap() {\n+        return decorated().inverseBidiMap();\n     }\n \n }", "timestamp": 1252994054, "metainfo": ""}