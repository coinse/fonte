{"sha": "48a8545611fed091e1cac00b4be7ac7e0d7e767f", "log": "Add binary incompatability warnings on problem methods   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n  * instances. The implementations are provided in the iterators subpackage.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.24 $ $Date: 2004/04/09 22:53:27 $\n+ * @version $Revision: 1.25 $ $Date: 2004/05/21 22:43:10 $\n  * \n  * @author Stephen Colebourne\n  * @author Phil Steitz\n     // public classes allow invalid states\n \n     /**\n-     * An iterator over no elements\n+     * An iterator over no elements.\n+     * <p>\n+     * WARNING: This constant is binary incompatible with Commons Collections 2.1.\n      */    \n     public static final ResettableIterator EMPTY_ITERATOR = new EmptyIterator();\n     /**\n-     * A list iterator over no elements\n+     * A list iterator over no elements.\n+     * <p>\n+     * WARNING: This constant is binary incompatible with Commons Collections 2.1.\n      */    \n     public static final ResettableListIterator EMPTY_LIST_ITERATOR = new EmptyListIterator();\n     /**\n-     * An ordered iterator over no elements\n+     * An ordered iterator over no elements.\n      */    \n     public static final OrderedIterator EMPTY_ORDERED_ITERATOR = new EmptyOrderedIterator();\n     /**\n-     * A map iterator over no elements\n+     * A map iterator over no elements.\n      */    \n     public static final MapIterator EMPTY_MAP_ITERATOR = new EmptyMapIterator();\n     /**\n-     * An ordered map iterator over no elements\n+     * An ordered map iterator over no elements.\n      */    \n     public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = new EmptyOrderedMapIterator();\n \n      * <p>\n      * This iterator is a valid iterator object that will iterate over\n      * nothing.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n      *\n      * @return  an iterator over nothing\n      */\n      * <p>\n      * This iterator is a valid list iterator object that will iterate \n      * over nothing.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n      *\n      * @return  a list iterator over nothing\n      */\n      * <p>\n      * This iterator is a valid iterator object that will iterate over\n      * the specified object.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * Use <code>new SingletonIterator(object)</code> for compatability.\n      *\n      * @param object  the single object over which to iterate\n      * @return  a singleton iterator over the object\n     //-----------------------------------------------------------------------\n     /**\n      * Gets an iterator over an object array.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * Use <code>new ArrayIterator(array)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n      * @return  an iterator over the array\n \n     /**\n      * Gets an iterator over the end part of an object array.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * Use <code>new ArrayIterator(array,start)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n      * @param start  the index to start iterating at\n \n     /**\n      * Gets an iterator over part of an object array.\n+     * <p>\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * Use <code>new ArrayIterator(array,start,end)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n      * @param start  the index to start iterating at", "timestamp": 1085179390, "metainfo": ""}