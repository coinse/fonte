{"sha": "86bd2c4931c3014b727c6700ebdb951c1adb486a", "log": "test to make sure that gets promote keys to the Most Recently Used position   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.17 2002/02/22 22:26:01 morgand Exp $\n- * $Revision: 1.17 $\n- * $Date: 2002/02/22 22:26:01 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.18 2002/05/08 16:07:05 morgand Exp $\n+ * $Revision: 1.18 $\n+ * $Date: 2002/05/08 16:07:05 $\n  *\n  * ====================================================================\n  *\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import java.util.ArrayList;\n+import java.util.Iterator;\n import java.util.Map;\n import java.util.HashMap;\n \n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n- * @version $Id: TestLRUMap.java,v 1.17 2002/02/22 22:26:01 morgand Exp $\n+ * @version $Id: TestLRUMap.java,v 1.18 2002/05/08 16:07:05 morgand Exp $\n  */\n public class TestLRUMap extends TestSequencedHashMap\n {\n \n         assertTrue(\"map should have size = 3, but actually = \" + map.size(), \n                    map.size() == 3);\n+    }\n+\n+    public void testGetPromotion() {\n+        LRUMap map = new LRUMap(3);\n+        map.put(\"1\",\"1\");\n+        map.put(\"2\",\"2\");\n+        map.put(\"3\",\"3\");\n+        // LRU is now 1 (then 2 then 3)\n+\n+        // promote 1 to top\n+        // eviction order is now 2,3,1\n+        map.get(\"1\");\n+\n+        // add another value, forcing a remove\n+        // 2 should be evicted (then 3,1,4)\n+        map.put(\"4\",\"4\");\n+\n+        Iterator keyIterator = map.keySet().iterator();\n+        Object[] keys = new Object[3];\n+        for (int i = 0; keyIterator.hasNext() ; ++i) {\n+            keys[i] = keyIterator.next();\n+        }\n+\n+        assertTrue(\"first evicted should be 3, was \" + keys[0], keys[0].equals(\"3\"));\n+        assertTrue(\"second evicted should be 1, was \" + keys[1], keys[1].equals(\"1\"));\n+        assertTrue(\"third evicted should be 4, was \" + keys[2], keys[2].equals(\"4\"));\n     }\n \n     /**", "timestamp": 1020874025, "metainfo": ""}