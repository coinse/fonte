{"sha": "41deb399a2036859780037caa2e994b531d2785c", "log": "Update javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/Buffer.java\n+++ b/src/java/org/apache/commons/collections/Buffer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Buffer.java,v 1.6 2003/09/06 20:41:12 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Buffer.java,v 1.7 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Collection;\n \n /**\n- * A Buffer is a collection that allows objects to be removed in some\n- * well-defined order.  The removal order can be based on insertion order\n- * (eg, a FIFO queue or a LIFO stack), on access order (eg, an LRU cache), \n- * on some arbitrary comparator (eg, a priority queue) or on any other \n- * well-defined ordering.\n+ * Defines a collection that allows objects to be removed in some well-defined order.\n+ * <p>\n+ * The removal order can be based on insertion order (eg, a FIFO queue or a\n+ * LIFO stack), on access order (eg, an LRU cache), on some arbitrary comparator\n+ * (eg, a priority queue) or on any other well-defined ordering.\n  * <p>\n  * Note that the removal order is not necessarily the same as the iteration\n  * order.  A <code>Buffer</code> implementation may have equivalent removal\n  * {@link Bag}.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.6 $ $Date: 2003/09/06 20:41:12 $\n+ * @version $Revision: 1.7 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/java/org/apache/commons/collections/Closure.java\n+++ b/src/java/org/apache/commons/collections/Closure.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Closure.java,v 1.7 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Closure.java,v 1.8 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections;\n \n /**\n- * <code>Closure</code> defines an interface implemented by classes that\n- * do something.\n+ * Defines a functor interface implemented by classes that do something.\n  * <p>\n  * A Closure represents a block of code which is executed from inside some\n  * block, function or iteration. It operates an input object.\n  *  \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.7 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.8 $ $Date: 2003/12/13 23:51:28 $\n  *\n  * @author James Strachan\n  * @author Nicola Ken Barozzi\n--- a/src/java/org/apache/commons/collections/Factory.java\n+++ b/src/java/org/apache/commons/collections/Factory.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.5 2003/08/31 17:26:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.6 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections;\n \n /**\n- * <code>Factory</code> defines an interface implemented by classes that\n- * create objects.\n+ * Defines a functor interface implemented by classes that create objects.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:26:43 $\n+ * @version $Revision: 1.6 $ $Date: 2003/12/13 23:51:28 $\n  *\n  * @author Arron Bates\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/MultiMap.java\n+++ b/src/java/org/apache/commons/collections/MultiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiMap.java,v 1.8 2003/10/09 20:58:52 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiMap.java,v 1.9 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Map;\n \n /** \n- * This is simply a Map with slightly different semantics.\n+ * Defines a map that holds a collection of values against each key.\n  * <p>\n  * A <code>MultiMap</code> is a Map with slightly different semantics.\n  * Putting a value into the map will add the value to a Collection at that\n  * <code>coll</code> will be a list containing \"A\", \"B\", \"C\".\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.8 $ $Date: 2003/10/09 20:58:52 $\n+ * @version $Revision: 1.9 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author Christopher Berry\n  * @author James Strachan\n--- a/src/java/org/apache/commons/collections/Predicate.java\n+++ b/src/java/org/apache/commons/collections/Predicate.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Predicate.java,v 1.7 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Predicate.java,v 1.8 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections;\n \n /**\n- * <code>Predicate</code> defines an interface implemented by classes that\n+ * Defines a functor interface implemented by classes that\n  * perform a predicate test on an object. Predicate instances can be used\n  * to implement queries or to do filtering. \n  * \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.7 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.8 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/PriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/PriorityQueue.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/PriorityQueue.java,v 1.7 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/PriorityQueue.java,v 1.8 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n \n /**\n- * Interface for priority queues.\n+ * Defines a collection for priority queues, which can insert, peek and pop.\n+ * <p>\n  * This interface does not dictate whether it is min or max heap.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.7 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.8 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  */\n--- a/src/java/org/apache/commons/collections/ResettableIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableIterator.java,v 1.2 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Iterator;\n \n /** \n- * Interface implemented by those iterators that can be reset back to an \n- * initial state.\n+ * Defines an iterator that can be reset back to an initial state.\n+ * <p>\n+ * This interface allows an iterator to be repeatedly reused.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/ResettableListIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableListIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableListIterator.java,v 1.2 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n \n /** \n- * Interface implemented by those list iterators that can be reset back \n- * to an initial state.\n+ * Defines a list iterator that can be reset back to an initial state.\n+ * <p>\n+ * This interface allows an iterator to be repeatedly reused.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/SortedBag.java\n+++ b/src/java/org/apache/commons/collections/SortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SortedBag.java,v 1.6 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SortedBag.java,v 1.7 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Comparator;\n \n /**\n- * A type of {@link Bag} that maintains order among its unique\n- * representative members.\n+ * Defines a type of <code>Bag</code> that maintains a sorted order among\n+ * its unique representative members.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.6 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.7 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author Chuck Burdick\n  */\n--- a/src/java/org/apache/commons/collections/Transformer.java\n+++ b/src/java/org/apache/commons/collections/Transformer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Transformer.java,v 1.6 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Transformer.java,v 1.7 2003/12/13 23:51:28 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections;\n \n /**\n- * <code>Transformer</code> defines an interface implemented by classes that\n+ * Defines a functor interface implemented by classes that\n  * transform one object into another. The original object is left unchanged.\n  * Transformers are typically used for type conversions, or extracting data\n  * from an object.\n  * \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.6 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.7 $ $Date: 2003/12/13 23:51:28 $\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne", "timestamp": 1071359488, "metainfo": ""}