{"sha": "d10b146e18ccca360c1aba293275ab74fe895c93", "log": "make ArrayIntList serializable add additional tests   ", "commit": "\n--- a/src/java/org/apache/commons/collections/primitives/ArrayIntList.java\n+++ b/src/java/org/apache/commons/collections/primitives/ArrayIntList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/ArrayIntList.java,v 1.5 2003/01/13 21:52:28 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/ArrayIntList.java,v 1.6 2003/02/26 15:45:19 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n \n package org.apache.commons.collections.primitives;\n \n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+\n /**\n  * An {@link IntList} backed by an array of <code>int</code>s.\n  * This implementation supports all optional methods.\n  * \n  * @since Commons Collections 2.2\n- * @version $Revision: 1.5 $ $Date: 2003/01/13 21:52:28 $\n+ * @version $Revision: 1.6 $ $Date: 2003/02/26 15:45:19 $\n  * \n  * @author Rodney Waldhoff \n  */\n-public class ArrayIntList extends AbstractRandomAccessIntList implements IntList {\n+public class ArrayIntList extends AbstractRandomAccessIntList implements IntList, Serializable {\n \n     // constructors\n     //-------------------------------------------------------------------------\n     // private methods\n     //-------------------------------------------------------------------------\n     \n+    private void writeObject(ObjectOutputStream out) throws IOException{\n+        out.defaultWriteObject();\n+        out.writeInt(_data.length);\n+        for(int i=0;i<_size;i++) {\n+            out.writeInt(_data[i]);\n+        }\n+    }\n+\n+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n+        in.defaultReadObject();\n+        _data = new int[in.readInt()];\n+        for(int i=0;i<_size;i++) {\n+            _data[i] = in.readInt();\n+        }\n+    }\n+    \n     private final void checkRange(int index) {\n         if(index < 0 || index >= _size) {\n             throw new IndexOutOfBoundsException(\"Should be at least 0 and less than \" + _size + \", found \" + index);\n--- a/src/test/org/apache/commons/collections/primitives/TestArrayIntList.java\n+++ b/src/test/org/apache/commons/collections/primitives/TestArrayIntList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestArrayIntList.java,v 1.6 2003/01/12 15:23:20 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestArrayIntList.java,v 1.7 2003/02/26 15:45:19 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import org.apache.commons.collections.BulkTest;\n \n /**\n- * @version $Revision: 1.6 $ $Date: 2003/01/12 15:23:20 $\n+ * @version $Revision: 1.7 $ $Date: 2003/02/26 15:45:19 $\n  * @author Rodney Waldhoff\n  */\n public class TestArrayIntList extends TestIntList {\n     public void testZeroInitialCapacityIsValid() {\n         ArrayIntList list = new ArrayIntList(0);\n     }\n+\n+    public void testNegativeInitialCapacityIsInvalid() {\n+        try {\n+            ArrayIntList list = new ArrayIntList(-1);\n+            fail(\"Expected IllegalArgumentException\");\n+        } catch(IllegalArgumentException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testCopyConstructor() {\n+        ArrayIntList expected = new ArrayIntList();\n+        for(int i=0;i<10;i++) {\n+            expected.add(i);\n+        }\n+        ArrayIntList list = new ArrayIntList(expected);\n+        assertEquals(10,list.size());\n+        assertEquals(expected,list);\n+    }\n+\n+    public void testCopyConstructorWithNull() {\n+        try {\n+            ArrayIntList list = new ArrayIntList(null);\n+            fail(\"Expected NullPointerException\");\n+        } catch(NullPointerException e) {\n+            // expected\n+        }\n+    }\n+\n+\n+    public void testTrimToSize() {\n+        ArrayIntList list = new ArrayIntList();\n+        for(int j=0;j<3;j++) {\n+            assertTrue(list.isEmpty());\n+    \n+            list.trimToSize();\n+    \n+            assertTrue(list.isEmpty());\n+            \n+            for(int i=0;i<10;i++) {\n+                list.add(i);\n+            }\n+            \n+            for(int i=0;i<10;i++) {\n+                assertEquals(i,list.get(i));\n+            }\n+            \n+            list.trimToSize();\n+    \n+            for(int i=0;i<10;i++) {\n+                assertEquals(i,list.get(i));\n+            }\n+    \n+            for(int i=0;i<10;i+=2) {\n+                list.removeElement(i);\n+            }\n+            \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+    \n+            list.trimToSize();\n+                    \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+\n+            list.trimToSize();\n+                    \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+    \n+            list.clear();\n+        }\n+    }\n+\n }\n--- a/src/test/org/apache/commons/collections/primitives/TestArrayUnsignedShortList.java\n+++ b/src/test/org/apache/commons/collections/primitives/TestArrayUnsignedShortList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestArrayUnsignedShortList.java,v 1.6 2003/01/13 21:52:28 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestArrayUnsignedShortList.java,v 1.7 2003/02/26 15:45:19 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import org.apache.commons.collections.BulkTest;\n \n /**\n- * @version $Revision: 1.6 $ $Date: 2003/01/13 21:52:28 $\n+ * @version $Revision: 1.7 $ $Date: 2003/02/26 15:45:19 $\n  * @author Rodney Waldhoff\n  */\n public class TestArrayUnsignedShortList extends TestIntList {\n         }\n     }\n \n+    public void testNegativeInitialCapacityIsInvalid() {\n+        try {\n+            ArrayUnsignedShortList list = new ArrayUnsignedShortList(-1);\n+            fail(\"Expected IllegalArgumentException\");\n+        } catch(IllegalArgumentException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testCopyConstructor() {\n+        ArrayUnsignedShortList expected = new ArrayUnsignedShortList();\n+        for(int i=0;i<10;i++) {\n+            expected.add(i);\n+        }\n+        ArrayUnsignedShortList list = new ArrayUnsignedShortList(expected);\n+        assertEquals(10,list.size());\n+        assertEquals(expected,list);\n+    }\n+\n+    public void testCopyConstructorWithNull() {\n+        try {\n+            ArrayUnsignedShortList list = new ArrayUnsignedShortList(null);\n+            fail(\"Expected NullPointerException\");\n+        } catch(NullPointerException e) {\n+            // expected\n+        }\n+    }\n+\n+\n+    public void testTrimToSize() {\n+        ArrayUnsignedShortList list = new ArrayUnsignedShortList();\n+        for(int j=0;j<3;j++) {\n+            assertTrue(list.isEmpty());\n+    \n+            list.trimToSize();\n+    \n+            assertTrue(list.isEmpty());\n+            \n+            for(int i=0;i<10;i++) {\n+                list.add(i);\n+            }\n+            \n+            for(int i=0;i<10;i++) {\n+                assertEquals(i,list.get(i));\n+            }\n+            \n+            list.trimToSize();\n+    \n+            for(int i=0;i<10;i++) {\n+                assertEquals(i,list.get(i));\n+            }\n+    \n+            for(int i=0;i<10;i+=2) {\n+                list.removeElement(i);\n+            }\n+            \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+    \n+            list.trimToSize();\n+                    \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+    \n+            list.trimToSize();\n+                    \n+            for(int i=0;i<5;i++) {\n+                assertEquals((2*i)+1,list.get(i));\n+            }\n+\n+            list.clear();\n+        }\n+    }\n+\n }\n--- a/src/test/org/apache/commons/collections/primitives/TestIntList.java\n+++ b/src/test/org/apache/commons/collections/primitives/TestIntList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestIntList.java,v 1.3 2003/01/12 15:23:20 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestIntList.java,v 1.4 2003/02/26 15:45:19 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n \n package org.apache.commons.collections.primitives;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n \n import org.apache.commons.collections.primitives.adapters.ListIntList;\n \n /**\n- * @version $Revision: 1.3 $ $Date: 2003/01/12 15:23:20 $\n+ * @version $Revision: 1.4 $ $Date: 2003/02/26 15:45:19 $\n  * @author Rodney Waldhoff\n  */\n public abstract class TestIntList extends TestList {\n         }\n     }\n \n+    public void testIsSerializable() throws Exception {\n+        IntList list = makeFullIntList();\n+        assertTrue(list instanceof Serializable);\n+        byte[] ser = writeExternalFormToBytes((Serializable)list);\n+        IntList deser = (IntList)(readExternalFormFromBytes(ser));\n+        assertEquals(list,deser);\n+        assertEquals(deser,list);\n+    }\n+\n+\n }", "timestamp": 1046274319, "metainfo": ""}