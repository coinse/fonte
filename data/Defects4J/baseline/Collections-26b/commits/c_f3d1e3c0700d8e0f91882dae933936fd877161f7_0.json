{"sha": "f3d1e3c0700d8e0f91882dae933936fd877161f7", "log": "Add Bag collection decorators   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/AbstractBagDecorator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/AbstractBagDecorator.java,v 1.1 2003/05/07 13:19:18 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+import org.apache.commons.collections.Bag;\n+\n+/**\n+ * <code>AbstractBagDecorator</code> decorates another <code>Bag</code>.\n+ * <p>\n+ * Methods are forwarded directly to the decorated bag.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:18 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractBagDecorator extends AbstractCollectionDecorator implements Bag {\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if list is null\n+     */\n+    protected AbstractBagDecorator(Bag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Gets the bag being decorated.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected Bag getBag() {\n+        return (Bag) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public int getCount(Object object) {\n+        return getBag().getCount(object);\n+    }\n+\n+    public boolean add(Object object, int count) {\n+        return getBag().add(object, count);\n+    }\n+\n+    public boolean remove(Object object, int count) {\n+        return getBag().remove(object, count);\n+    }\n+\n+    public Set uniqueSet() {\n+        return getBag().uniqueSet();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/AbstractSortedBagDecorator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/AbstractSortedBagDecorator.java,v 1.1 2003/05/07 13:19:18 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+\n+import org.apache.commons.collections.SortedBag;\n+\n+/**\n+ * <code>AbstractSortedBagDecorator</code> decorates another <code>SortedBag</code>.\n+ * <p>\n+ * Methods are forwarded directly to the decorated bag.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:18 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractSortedBagDecorator extends AbstractBagDecorator implements SortedBag {\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if list is null\n+     */\n+    protected AbstractSortedBagDecorator(SortedBag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Gets the bag being decorated.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected SortedBag getSortedBag() {\n+        return (SortedBag) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public Object first() {\n+        return getSortedBag().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedBag().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedBag().comparator();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/PredicatedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/PredicatedBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+import org.apache.commons.collections.Bag;\n+import org.apache.commons.collections.Predicate;\n+\n+/**\n+ * <code>PredicatedBag</code> decorates another <code>Bag</code>\n+ * to validate additions match a specified predicate.\n+ * <p>\n+ * If an object cannot be addded to the list, an IllegalArgumentException\n+ * is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Paul Jack\n+ */\n+public class PredicatedBag extends PredicatedCollection implements Bag {\n+\n+    /**\n+     * Factory method to create a predicated (validating) bag.\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if bag or predicate is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    public static Bag decorate(Bag bag, Predicate predicate) {\n+        return new PredicatedBag(bag, predicate);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if bag or predicate is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    protected PredicatedBag(Bag bag, Predicate predicate) {\n+        super(bag, predicate);\n+    }\n+\n+    /**\n+     * Gets the decorated bag.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected Bag getBag() {\n+        return (Bag) getCollection();\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public boolean add(Object object, int count) {\n+        validate(object);\n+        return getBag().add(object, count);\n+    }\n+\n+    public boolean remove(Object object, int count) {\n+        return getBag().remove(object, count);\n+    }\n+\n+    public Set uniqueSet() {\n+        return getBag().uniqueSet();\n+    }\n+\n+    public int getCount(Object object) {\n+        return getBag().getCount(object);\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/PredicatedSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/PredicatedSortedBag.java,v 1.1 2003/05/07 13:19:18 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+\n+import org.apache.commons.collections.Predicate;\n+import org.apache.commons.collections.SortedBag;\n+\n+/**\n+ * <code>PredicatedSortedBag</code> decorates another <code>SortedBag</code>\n+ * to validate additions match a specified predicate.\n+ * <p>\n+ * If an object cannot be addded to the list, an IllegalArgumentException\n+ * is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:18 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Paul Jack\n+ */\n+public class PredicatedSortedBag extends PredicatedBag implements SortedBag {\n+\n+    /**\n+     * Factory method to create a predicated (validating) bag.\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if bag or predicate is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    public static SortedBag decorate(SortedBag bag, Predicate predicate) {\n+        return new PredicatedSortedBag(bag, predicate);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if bag or predicate is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    protected PredicatedSortedBag(SortedBag bag, Predicate predicate) {\n+        super(bag, predicate);\n+    }\n+\n+    /**\n+     * Gets the decorated sorted bag.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected SortedBag getSortedBag() {\n+        return (SortedBag) getCollection();\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public Object first() {\n+        return getSortedBag().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedBag().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedBag().comparator();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+import org.apache.commons.collections.Bag;\n+\n+/**\n+ * <code>SynchronizedBag</code> decorates another <code>Bag</code>\n+ * to synchronize its behaviour for a multi-threaded environment.\n+ * <p>\n+ * Methods are synchronized, then forwarded to the decorated bag.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class SynchronizedBag extends SynchronizedCollection implements Bag {\n+\n+    /**\n+     * Factory method to create a synchronized bag.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    public static Bag decorate(Bag bag) {\n+        return new SynchronizedBag(bag);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected SynchronizedBag(Bag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param lock  the lock to use, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected SynchronizedBag(Bag bag, Object lock) {\n+        super(bag, lock);\n+    }\n+\n+    protected Bag getBag() {\n+        return (Bag) collection;\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public boolean add(Object object, int count) {\n+        synchronized (lock) {\n+            return getBag().add(object, count);\n+        }\n+    }\n+\n+    public boolean remove(Object object, int count) {\n+        synchronized (lock) {\n+            return getBag().remove(object, count);\n+        }\n+    }\n+\n+    public Set uniqueSet() {\n+        synchronized (lock) {\n+            Set set = getBag().uniqueSet();\n+            return new SynchronizedSet(set, lock);\n+        }\n+    }\n+\n+    public int getCount(Object object) {\n+        synchronized (lock) {\n+            return getBag().getCount(object);\n+        }\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSortedBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+\n+import org.apache.commons.collections.Bag;\n+import org.apache.commons.collections.SortedBag;\n+\n+/**\n+ * <code>SynchronizedSortedBag</code> decorates another <code>SortedBag</code>\n+ * to synchronize its behaviour for a multi-threaded environment.\n+ * <p>\n+ * Methods are synchronized, then forwarded to the decorated bag.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class SynchronizedSortedBag extends SynchronizedBag implements SortedBag {\n+\n+    /**\n+     * Factory method to create a synchronized sorted bag.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    public static SortedBag decorate(SortedBag bag) {\n+        return new SynchronizedSortedBag(bag);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected SynchronizedSortedBag(SortedBag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param lock  the lock to use, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected SynchronizedSortedBag(Bag bag, Object lock) {\n+        super(bag, lock);\n+    }\n+\n+    protected SortedBag getSortedBag() {\n+        return (SortedBag) collection;\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public synchronized Object first() {\n+        synchronized (lock) {\n+            return getSortedBag().first();\n+        }\n+    }\n+\n+    public synchronized Object last() {\n+        synchronized (lock) {\n+            return getSortedBag().last();\n+        }\n+    }\n+\n+    public synchronized Comparator comparator() {\n+        synchronized (lock) {\n+            return getSortedBag().comparator();\n+        }\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/TypedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/TypedBag.java,v 1.1 2003/05/07 13:19:18 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import org.apache.commons.collections.Bag;\n+\n+/**\n+ * <code>TypedBag</code> decorates another <code>Bag</code>\n+ * to validate that elements added are of a specific type.\n+ * <p>\n+ * The validation of additions is performed via an instanceof test against \n+ * a specified <code>Class</code>. If an object cannot be addded to the\n+ * collection, an IllegalArgumentException is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:18 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Matthew Hawthorne\n+ */\n+public class TypedBag extends PredicatedBag {\n+\n+    /**\n+     * Factory method to create a typed bag.\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param type  the type to allow into the bag, must not be null\n+     * @throws IllegalArgumentException if bag or type is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    public static Bag decorate(Bag bag, Class type) {\n+        return new TypedBag(bag, type);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param type  the type to allow into the bag, must not be null\n+     * @throws IllegalArgumentException if bag or type is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    protected TypedBag(Bag bag, Class type) {\n+        super(bag, TypedCollection.getPredicate(type));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/TypedSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/TypedSortedBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import org.apache.commons.collections.SortedBag;\n+\n+/**\n+ * <code>TypedSortedBag</code> decorates another <code>SortedBag</code>\n+ * to validate that elements added are of a specific type.\n+ * <p>\n+ * The validation of additions is performed via an instanceof test against \n+ * a specified <code>Class</code>. If an object cannot be addded to the\n+ * collection, an IllegalArgumentException is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Matthew Hawthorne\n+ */\n+public class TypedSortedBag extends PredicatedSortedBag {\n+\n+    /**\n+     * Factory method to create a typed sorted bag.\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param type  the type to allow into the bag, must not be null\n+     * @throws IllegalArgumentException if bag or type is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    public static SortedBag decorate(SortedBag bag, Class type) {\n+        return new TypedSortedBag(bag, type);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the bag being decorated, they\n+     * are validated.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @param type  the type to allow into the bag, must not be null\n+     * @throws IllegalArgumentException if bag or type is null\n+     * @throws IllegalArgumentException if the bag contains invalid elements\n+     */\n+    protected TypedSortedBag(SortedBag bag, Class type) {\n+        super(bag, TypedCollection.getPredicate(type));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/UnmodifiableBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+import org.apache.commons.collections.Bag;\n+\n+/**\n+ * <code>UnmodifiableBag</code> decorates another <code>Bag</code>\n+ * to ensure it can't be altered.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class UnmodifiableBag extends UnmodifiableCollection implements Bag {\n+\n+    /**\n+     * Factory method to create an unmodifiable bag.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    public static Bag decorate(Bag bag) {\n+        return new UnmodifiableBag(bag);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected UnmodifiableBag(Bag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Gets the bag being decorated.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected Bag getBag() {\n+        return (Bag) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public boolean add(Object o, int count) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public boolean remove(Object o, int count) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public Set uniqueSet() {\n+        Set set = getBag().uniqueSet();\n+        return new UnmodifiableSet(set);\n+    }\n+\n+    public int getCount(Object o) {\n+        return getBag().getCount(o);\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/UnmodifiableSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableSortedBag.java,v 1.1 2003/05/07 13:19:17 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+\n+import org.apache.commons.collections.SortedBag;\n+\n+/**\n+ * <code>UnmodifiableSortedBag</code> decorates another <code>SortedBag</code>\n+ * to ensure it can't be altered.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 13:19:17 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class UnmodifiableSortedBag extends UnmodifiableBag implements SortedBag {\n+\n+    /**\n+     * Factory method to create an unmodifiable bag.\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    public static SortedBag decorate(SortedBag bag) {\n+        return new UnmodifiableSortedBag(bag);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param bag  the bag to decorate, must not be null\n+     * @throws IllegalArgumentException if bag is null\n+     */\n+    protected UnmodifiableSortedBag(SortedBag bag) {\n+        super(bag);\n+    }\n+\n+    /**\n+     * Gets the bag being decorated.\n+     * \n+     * @return the decorated bag\n+     */\n+    protected SortedBag getSortedBag() {\n+        return (SortedBag) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public Object first() {\n+        return getSortedBag().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedBag().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedBag().comparator();\n+    }\n+\n+}", "timestamp": 1052313558, "metainfo": ""}