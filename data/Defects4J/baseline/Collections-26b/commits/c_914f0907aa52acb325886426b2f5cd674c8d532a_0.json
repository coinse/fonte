{"sha": "914f0907aa52acb325886426b2f5cd674c8d532a", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r471575 | scolebourne | 2006-11-05 15:58:08 -0800 (Sun, 05 Nov 2006) | 1 line          Generify and remove AbstractSerializableCollectionDecorator     ------------------------------------------------------------------------     r471202 | scolebourne | 2006-11-04 06:21:44 -0800 (Sat, 04 Nov 2006) | 1 line          Remove getCollection() - use covariant decorated()     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n  * <p>\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n+ * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableCollection\n-        extends AbstractSerializableCollectionDecorator\n+public final class UnmodifiableCollection<E>\n+        extends AbstractCollectionDecorator<E>\n         implements Unmodifiable {\n \n     /** Serialization version */\n      * <p>\n      * If the collection passed in is already unmodifiable, it is returned.\n      * \n+     * @param <T> the type of the elements in the collection\n      * @param coll  the collection to decorate, must not be null\n      * @return an unmodifiable collection\n      * @throws IllegalArgumentException if collection is null\n      */\n-    public static Collection decorate(Collection coll) {\n+    public static <T> Collection<T> decorate(Collection<T> coll) {\n         if (coll instanceof Unmodifiable) {\n             return coll;\n         }\n-        return new UnmodifiableCollection(coll);\n+        return new UnmodifiableCollection<T>(coll);\n     }\n-    \n+\n     //-----------------------------------------------------------------------\n     /**\n      * Constructor that wraps (not copies).\n      * @param coll  the collection to decorate, must not be null\n      * @throws IllegalArgumentException if collection is null\n      */\n-    private UnmodifiableCollection(Collection coll) {\n+    private UnmodifiableCollection(Collection<E> coll) {\n         super(coll);\n     }\n \n     //-----------------------------------------------------------------------\n-    public Iterator iterator() {\n-        return UnmodifiableIterator.decorate(getCollection().iterator());\n+    public Iterator<E> iterator() {\n+        return UnmodifiableIterator.decorate(decorated().iterator());\n     }\n \n-    public boolean add(Object object) {\n+    public boolean add(E object) {\n         throw new UnsupportedOperationException();\n     }\n \n-    public boolean addAll(Collection coll) {\n+    public boolean addAll(Collection<? extends E> coll) {\n         throw new UnsupportedOperationException();\n     }\n \n         throw new UnsupportedOperationException();\n     }\n \n-    public boolean removeAll(Collection coll) {\n+    public boolean removeAll(Collection<?> coll) {\n         throw new UnsupportedOperationException();\n     }\n \n-    public boolean retainAll(Collection coll) {\n+    public boolean retainAll(Collection<?> coll) {\n         throw new UnsupportedOperationException();\n     }\n ", "timestamp": 1252994093, "metainfo": ""}