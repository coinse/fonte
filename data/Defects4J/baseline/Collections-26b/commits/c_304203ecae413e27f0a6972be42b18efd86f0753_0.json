{"sha": "304203ecae413e27f0a6972be42b18efd86f0753", "log": "Code cleanup per COLLECTIONS-312  ", "commit": "\n--- a/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n         // this requires more than one shuffle.\n \n         boolean isInNewOrder = false;\n+        Random rand = new Random();\n         while (keys.length > 1 && isInNewOrder == false) {\n-            shuffle: {\n-                Random rand = new Random();\n-                for (int i = keys.length-1; i > 0; i--) {\n-                        String swap = keys[i];\n-                        int j = rand.nextInt(i+1);\n-                        keys[i] = keys[j];\n-                        keys[j] = swap;\n-                    }\n+            // shuffle:\n+            for (int i = keys.length-1; i > 0; i--) {\n+                String swap = keys[i];\n+                int j = rand.nextInt(i+1);\n+                keys[i] = keys[j];\n+                keys[j] = swap;\n             }\n \n-            testShuffle: {\n-                for (int i = 0; i < keys.length && !isInNewOrder; i++) {\n-                    if( !orderedObjects[i].equals(keys[i])) {\n-                        isInNewOrder = true;\n-                    }\n+            // testShuffle\n+            for (int i = 0; i < keys.length && !isInNewOrder; i++) {\n+                if( !orderedObjects[i].equals(keys[i])) {\n+                    isInNewOrder = true;\n                 }\n             }\n         }", "timestamp": 1276977317, "metainfo": ""}