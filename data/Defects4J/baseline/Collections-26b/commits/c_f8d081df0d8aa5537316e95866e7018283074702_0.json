{"sha": "f8d081df0d8aa5537316e95866e7018283074702", "log": "added backward compatibility tests for Serialization   ", "commit": "\n--- a/src/test/org/apache/commons/collections/comparators/TestComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparator.java\n package org.apache.commons.collections.comparators;\n \n+import java.io.IOException;\n import java.io.Serializable;\n import java.util.Collections;\n import java.util.Comparator;\n \n     public Object makeObject() {\n         return makeComparator();\n+    }\n+\n+    /**\n+     * There were no Comparators in version 1.x.\n+     * \n+     * @return 2\n+     */\n+    public int getCompatibilityVersion() {\n+        return 2;\n     }\n \n     public void reverseObjects(List list) {\n                    comparator instanceof Serializable);\n     }\n \n+    public String getCanonicalComparatorName(Object object) {\n+        StringBuffer retval = new StringBuffer();\n+        retval.append(\"data/test/\");\n+        String colName = object.getClass().getName();\n+        colName = colName.substring(colName.lastIndexOf(\".\")+1,colName.length());\n+        retval.append(colName);\n+        retval.append(\".version\");\n+        retval.append(getCompatibilityVersion());\n+        retval.append(\".obj\");\n+        return retval.toString();\n+    }\n+\n+    /**\n+     * Compare the current serialized form of the Comparator\n+     * against the canonical version in CVS.\n+     */\n+    public void testComparatorCompatibility() throws IOException, ClassNotFoundException {\n+        Comparator comparator = null;\n+        /*\n+         * Create canonical objects with this code\n+        comparator = makeComparator();\n+        \n+        writeExternalFormToDisk((Serializable) comparator, \n+                                getCanonicalComparatorName(comparator));\n+        */\n+\n+        // test to make sure the canonical form has been preserved\n+        comparator = \n+            (Comparator) readExternalFormFromDisk(getCanonicalComparatorName(makeComparator()));\n+        \n+        // make sure the canonical form produces the ordering we currently\n+        // expect\n+        List randomList = getComparableObjectsOrdered();\n+        reverseObjects(randomList);\n+        sortObjects(randomList,comparator);\n+\n+        List orderedList = getComparableObjectsOrdered();\n+\n+        assertTrue(\"Comparator did not reorder the List correctly\",\n+                   orderedList.equals(randomList));\n+    }\n+\n }", "timestamp": 1015011762, "metainfo": ""}