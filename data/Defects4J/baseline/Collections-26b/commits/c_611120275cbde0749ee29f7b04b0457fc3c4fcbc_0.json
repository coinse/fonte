{"sha": "611120275cbde0749ee29f7b04b0457fc3c4fcbc", "log": "Add transformed decorators tests   ", "commit": "\n--- a/src/test/org/apache/commons/collections/decorators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestAll.java,v 1.2 2003/05/10 15:50:14 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestAll.java,v 1.3 2003/05/11 13:18:27 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Entry point for all collections decorators tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/05/10 15:50:14 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.3 $ $Date: 2003/05/11 13:18:27 $\n  * \n  * @author Stephen Colebourne\n  */\n         suite.addTest(TestFixedSizeMap.suite());\n         suite.addTest(TestFixedSizeSortedMap.suite());\n         suite.addTest(TestSequencedSet.suite());\n+        suite.addTest(TestTransformedBag.suite());\n+        suite.addTest(TestTransformedBuffer.suite());\n+        suite.addTest(TestTransformedCollection.suite());\n+        suite.addTest(TestTransformedList.suite());\n+        suite.addTest(TestTransformedSet.suite());\n+        suite.addTest(TestTransformedSortedBag.suite());\n+        suite.addTest(TestTransformedSortedSet.suite());\n         return suite;\n     }\n         \n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedBag.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.Bag;\n+import org.apache.commons.collections.HashBag;\n+import org.apache.commons.collections.TestBag;\n+\n+/**\n+ * Extension of {@link TestBag} for exercising the {@link TransformedBag}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedBag extends TestBag {\n+    \n+    public TestTransformedBag(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedBag.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedBag.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Bag makeBag() {\n+        return TransformedBag.decorate(new HashBag(), TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+\n+    public void testTransformedBag() {\n+        Bag bag = TransformedBag.decorate(new HashBag(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, bag.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            bag.add(els[i]);\n+            assertEquals(i + 1, bag.size());\n+            assertEquals(true, bag.contains(new Integer((String) els[i])));\n+            assertEquals(false, bag.contains(els[i]));\n+        }\n+        \n+        assertEquals(false, bag.remove(els[0]));\n+        assertEquals(true, bag.remove(new Integer((String) els[0])));\n+        \n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedBuffer.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedBuffer.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.ArrayStack;\n+import org.apache.commons.collections.Buffer;\n+\n+/**\n+ * Extension of {@link TestBuffer} for exercising the {@link TransformedBuffer}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedBuffer extends TestCase {\n+    \n+    public TestTransformedBuffer(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedBuffer.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedBuffer.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public void testTransformedBuffer() {\n+        Buffer buffer = TransformedBuffer.decorate(new ArrayStack(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, buffer.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            buffer.add(els[i]);\n+            assertEquals(i + 1, buffer.size());\n+            assertEquals(true, buffer.contains(new Integer((String) els[i])));\n+            assertEquals(false, buffer.contains(els[i]));\n+        }\n+        \n+        assertEquals(false, buffer.remove(els[0]));\n+        assertEquals(true, buffer.remove(new Integer((String) els[0])));\n+        \n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedCollection.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedCollection.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.TestCollection;\n+import org.apache.commons.collections.Transformer;\n+\n+/**\n+ * Extension of {@link TestCollection} for exercising the {@link TransformedCollection}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedCollection extends TestCollection {\n+    \n+    private static class Noop implements Transformer, Serializable {\n+        public Object transform(Object input) {\n+            return input;\n+        }\n+    }\n+    \n+    private static class StringToInteger implements Transformer, Serializable {\n+        public Object transform(Object input) {\n+            return new Integer((String) input);\n+        }\n+    }\n+    \n+    static final Transformer NOOP_TRANSFORMER = new Noop();\n+    static final Transformer STRING_TO_INTEGER_TRANSFORMER = new StringToInteger();\n+\n+    public TestTransformedCollection(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedCollection.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedCollection.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Collection makeConfirmedCollection() {\n+        return new ArrayList();\n+    }\n+\n+    protected Collection makeConfirmedFullCollection() {\n+        List list = new ArrayList();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return list;\n+    }\n+    \n+    public Collection makeCollection() {\n+        return TransformedCollection.decorate(new ArrayList(), NOOP_TRANSFORMER);\n+    }\n+\n+    protected Collection makeFullCollection() {\n+        List list = new ArrayList();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return TransformedCollection.decorate(list, NOOP_TRANSFORMER);\n+    }\n+    \n+    protected Object[] getFullElements() {\n+        return new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+    }\n+\n+    protected Object[] getOtherElements() {\n+        return new Object[] {\"9\", \"88\", \"678\", \"87\", \"98\", \"78\", \"99\"};\n+    }\n+\n+    public void testTransformedCollection() {\n+        Collection coll = TransformedCollection.decorate(new ArrayList(), STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, coll.size());\n+        Object[] els = getFullElements();\n+        for (int i = 0; i < els.length; i++) {\n+            coll.add(els[i]);\n+            assertEquals(i + 1, coll.size());\n+            assertEquals(true, coll.contains(new Integer((String) els[i])));\n+            assertEquals(false, coll.contains(els[i]));\n+        }\n+        \n+        assertEquals(true, coll.remove(new Integer((String) els[0])));\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedList.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.ListIterator;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.TestList;\n+\n+/**\n+ * Extension of {@link TestList} for exercising the {@link TransformedList}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedList extends TestList {\n+    \n+    public TestTransformedList(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedList.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedList.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Collection makeConfirmedCollection() {\n+        return new ArrayList();\n+    }\n+\n+    protected Collection makeConfirmedFullCollection() {\n+        List list = new ArrayList();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return list;\n+    }\n+    \n+    public List makeEmptyList() {\n+        return TransformedList.decorate(new ArrayList(), TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+\n+    protected List makeFullList() {\n+        List list = new ArrayList();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return TransformedList.decorate(list, TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+    \n+    public void testTransformedList() {\n+        List list = TransformedList.decorate(new ArrayList(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, list.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            list.add(els[i]);\n+            assertEquals(i + 1, list.size());\n+            assertEquals(true, list.contains(new Integer((String) els[i])));\n+            assertEquals(false, list.contains(els[i]));\n+        }\n+        \n+        assertEquals(false, list.remove(els[0]));\n+        assertEquals(true, list.remove(new Integer((String) els[0])));\n+        \n+        list.clear();\n+        for (int i = 0; i < els.length; i++) {\n+            list.add(0, els[i]);\n+            assertEquals(i + 1, list.size());\n+            assertEquals(new Integer((String) els[i]), list.get(0));\n+        }\n+        \n+        list.set(0, \"22\");\n+        assertEquals(new Integer(22), list.get(0));\n+        \n+        ListIterator it = list.listIterator();\n+        it.next();\n+        it.set(\"33\");\n+        assertEquals(new Integer(33), list.get(0));\n+        it.add(\"44\");\n+        assertEquals(new Integer(44), list.get(1));\n+        \n+        List adds = new ArrayList();\n+        adds.add(\"1\");\n+        adds.add(\"2\");\n+        list.clear();\n+        list.addAll(adds);\n+        assertEquals(new Integer(1), list.get(0));\n+        assertEquals(new Integer(2), list.get(1));\n+        \n+        adds.clear();\n+        adds.add(\"3\");\n+        list.addAll(1, adds);\n+        assertEquals(new Integer(1), list.get(0));\n+        assertEquals(new Integer(3), list.get(1));\n+        assertEquals(new Integer(2), list.get(2));\n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedSet.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.TestSet;\n+\n+/**\n+ * Extension of {@link TestSet} for exercising the {@link TransformedSet}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedSet extends TestSet {\n+    \n+    public TestTransformedSet(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedSet.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedSet.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Collection makeConfirmedCollection() {\n+        return new HashSet();\n+    }\n+\n+    protected Collection makeConfirmedFullCollection() {\n+        Set set = new HashSet();\n+        set.addAll(Arrays.asList(getFullElements()));\n+        return set;\n+    }\n+    \n+    public Set makeEmptySet() {\n+        return TransformedSet.decorate(new HashSet(), TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+\n+    protected Set makeFullSet() {\n+        Set list = new HashSet();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return TransformedSet.decorate(list, TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+    \n+    public void testTransformedSet() {\n+        Set set = TransformedSet.decorate(new HashSet(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, set.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            set.add(els[i]);\n+            assertEquals(i + 1, set.size());\n+            assertEquals(true, set.contains(new Integer((String) els[i])));\n+            assertEquals(false, set.contains(els[i]));\n+        }\n+        \n+        assertEquals(false, set.remove(els[0]));\n+        assertEquals(true, set.remove(new Integer((String) els[0])));\n+        \n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedSortedBag.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.Bag;\n+import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.TreeBag;\n+\n+/**\n+ * Extension of {@link TestSortedBag} for exercising the {@link TransformedSortedBag}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedSortedBag extends TestBag {\n+    \n+    public TestTransformedSortedBag(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedSortedBag.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedSortedBag.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Bag makeBag() {\n+        return TransformedSortedBag.decorate(new TreeBag(), TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+\n+    public void testTransformedBag() {\n+        Bag bag = TransformedSortedBag.decorate(new TreeBag(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, bag.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            bag.add(els[i]);\n+            assertEquals(i + 1, bag.size());\n+            assertEquals(true, bag.contains(new Integer((String) els[i])));\n+        }\n+        \n+        assertEquals(true, bag.remove(new Integer((String) els[0])));\n+        \n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedSortedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedSortedSet.java,v 1.1 2003/05/11 13:18:27 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.TreeSet;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.TestSortedSet;\n+\n+/**\n+ * Extension of {@link TestSortedSet} for exercising the {@link TransformedSortedSet}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/11 13:18:27 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestTransformedSortedSet extends TestSortedSet {\n+    \n+    public TestTransformedSortedSet(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestTransformedSortedSet.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestTransformedSortedSet.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Collection makeConfirmedCollection() {\n+        return new TreeSet();\n+    }\n+\n+    protected Collection makeConfirmedFullCollection() {\n+        Set set = new TreeSet();\n+        set.addAll(Arrays.asList(getFullElements()));\n+        return set;\n+    }\n+    \n+    public Set makeEmptySet() {\n+        return TransformedSortedSet.decorate(new HashSet(), TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+\n+    protected Set makeFullSet() {\n+        Set list = new TreeSet();\n+        list.addAll(Arrays.asList(getFullElements()));\n+        return TransformedSortedSet.decorate(list, TestTransformedCollection.NOOP_TRANSFORMER);\n+    }\n+    \n+    public void testTransformedSet() {\n+        Set set = TransformedSortedSet.decorate(new HashSet(), TestTransformedCollection.STRING_TO_INTEGER_TRANSFORMER);\n+        assertEquals(0, set.size());\n+        Object[] els = new Object[] {\"1\", \"3\", \"5\", \"7\", \"2\", \"4\", \"6\"};\n+        for (int i = 0; i < els.length; i++) {\n+            set.add(els[i]);\n+            assertEquals(i + 1, set.size());\n+            assertEquals(true, set.contains(new Integer((String) els[i])));\n+            assertEquals(false, set.contains(els[i]));\n+        }\n+        \n+        assertEquals(false, set.remove(els[0]));\n+        assertEquals(true, set.remove(new Integer((String) els[0])));\n+        \n+    }\n+}", "timestamp": 1052659107, "metainfo": ""}