{"sha": "c531834764c31d56332b0918d404c3dbbf02ccac", "log": "[COLLECTIONS-406] Improved ListUtils.subtract to O(n) performance. Thanks to Adrian Nistor for reporting and providing a patch.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/main/java/org/apache/commons/collections/ListUtils.java\n import java.util.Iterator;\n import java.util.List;\n \n+import org.apache.commons.collections.bag.HashBag;\n import org.apache.commons.collections.list.FixedSizeList;\n import org.apache.commons.collections.list.LazyList;\n import org.apache.commons.collections.list.PredicatedList;\n      * @throws NullPointerException if either list is null\n      */\n     public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2) {\n-        final ArrayList<E> result = new ArrayList<E>(list1);\n-        for (E e : list2) {\n-            result.remove(e);\n+        final ArrayList<E> result = new ArrayList<E>();\n+        final HashBag<E> bag = new HashBag<E>(list2);\n+        for (final E e : list1) {\n+            if (!bag.remove(e, 1)) {\n+                result.add(e);\n+            }\n         }\n         return result;\n     }\n--- a/src/test/java/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestListUtils.java\n         } catch(NullPointerException npe) {} // this is what we want\n     }\n \n+    public void testSubtract() {\n+        List<String> list = new ArrayList<String>();\n+        list.add(a);\n+        list.add(b);\n+        list.add(a);\n+        list.add(x);\n+\n+        List<String> sub = new ArrayList<String>();\n+        sub.add(a);\n+\n+        List<String> result = ListUtils.subtract(list, sub);\n+        assertTrue(result.size() == 3);\n+        \n+        List<String> expected = new ArrayList<String>();\n+        expected.add(b);\n+        expected.add(a);\n+        expected.add(x);\n+\n+        assertEquals(expected, result);\n+        \n+        try {\n+            ListUtils.subtract(list, null);\n+            fail(\"expecting NullPointerException\");\n+        } catch(NullPointerException npe) {} // this is what we want\n+    }\n+\n+    public void testSubtractNullElement() {\n+        List<String> list = new ArrayList<String>();\n+        list.add(a);\n+        list.add(null);\n+        list.add(null);\n+        list.add(x);\n+\n+        List<String> sub = new ArrayList<String>();\n+        sub.add(null);\n+\n+        List<String> result = ListUtils.subtract(list, sub);\n+        assertTrue(result.size() == 3);\n+        \n+        List<String> expected = new ArrayList<String>();\n+        expected.add(a);\n+        expected.add(null);\n+        expected.add(x);\n+\n+        assertEquals(expected, result);\n+    }\n+\n     /**\n      * Tests the <code>indexOf</code> method in <code>ListUtils</code> class..\n      */", "timestamp": 1338718924, "metainfo": ""}