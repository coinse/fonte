{"sha": "1da9c06f4dbcbeb69f01ca24d9a87094312701e7", "log": "Optimise the remove implementation for performance of common case   ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.10 $ $Date: 2005/01/15 22:47:40 $\n+ * @version $Revision: 1.11 $ $Date: 2005/01/22 00:48:22 $\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n                     return;\n                 }\n \n-                // Other elements require us to shift the subsequent elements\n-                int i = lastReturnedIndex + 1;\n-                while (i != end) {\n-                    if (i >= maxElements) {\n-                        elements[i - 1] = elements[0];\n-                        i = 0;\n-                    } else {\n-                        elements[decrement(i)] = elements[i];\n-                        i = increment(i);\n+                int pos = lastReturnedIndex + 1;\n+                if (start < lastReturnedIndex && pos < end) {\n+                    // shift in one part\n+                    System.arraycopy(elements, pos, elements,\n+                            lastReturnedIndex, end - pos);\n+                } else {\n+                    // Other elements require us to shift the subsequent elements\n+                    while (pos != end) {\n+                        if (pos >= maxElements) {\n+                            elements[pos - 1] = elements[0];\n+                            pos = 0;\n+                        } else {\n+                            elements[decrement(pos)] = elements[pos];\n+                            pos = increment(pos);\n+                        }\n                     }\n                 }\n ", "timestamp": 1106354902, "metainfo": ""}