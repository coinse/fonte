{"sha": "c1be92fbfb6c0492edaeccbbdac2639363cb362e", "log": "Oops - fix up 3 instances where distint Integer instances are required  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java\n+++ b/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java\n     @Test\n     public void intersectionUsesMethodEquals() {\n         // Let elta and eltb be objects...\n-        final Integer elta = Integer.valueOf(17);\n-        final Integer eltb = Integer.valueOf(17);\n+        final Integer elta = new Integer(17); // Cannot use valueOf here\n+        final Integer eltb = new Integer(17);\n \n         // ...which are equal...\n         assertEquals(elta, eltb);\n--- a/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java\n+++ b/src/test/java/org/apache/commons/collections4/PredicateUtilsTest.java\n         assertEquals(false, PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(null));\n         assertEquals(false, PredicateUtils.<Object>identityPredicate(Integer.valueOf(6)).evaluate(cObject));\n         assertEquals(false, PredicateUtils.<Object>identityPredicate(Integer.valueOf(6)).evaluate(cString));\n-        assertEquals(false, PredicateUtils.identityPredicate(Integer.valueOf(6)).evaluate(cInteger));\n+        assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger)); // Cannot use valueOf here\n         assertEquals(true, PredicateUtils.identityPredicate(cInteger).evaluate(cInteger));\n     }\n \n--- a/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java\n+++ b/src/test/java/org/apache/commons/collections4/map/ReferenceIdentityMapTest.java\n  */\n public class ReferenceIdentityMapTest<K, V> extends AbstractIterableMapTest<K, V> {\n \n-    private static final Integer I1A = Integer.valueOf(1);\n-    private static final Integer I1B = Integer.valueOf(1);\n-    private static final Integer I2A = Integer.valueOf(2);\n-    private static final Integer I2B = Integer.valueOf(2);\n+    private static final Integer I1A = new Integer(1); // Cannot use valueOf here\n+    private static final Integer I1B = new Integer(1);\n+    private static final Integer I2A = new Integer(2);\n+    private static final Integer I2B = new Integer(2);\n \n     public ReferenceIdentityMapTest(final String testName) {\n         super(testName);", "timestamp": 1367192038, "metainfo": ""}