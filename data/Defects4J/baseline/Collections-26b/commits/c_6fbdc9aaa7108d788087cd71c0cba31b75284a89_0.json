{"sha": "6fbdc9aaa7108d788087cd71c0cba31b75284a89", "log": "Javadoc improvements bug 22964, from Janek Bogucki   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.36 2003/09/05 02:16:33 psteitz Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.37 2003/09/07 08:45:16 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * A set of {@link Collection} related utility methods.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.36 $ $Date: 2003/09/05 02:16:33 $\n+ * @version $Revision: 1.37 $ $Date: 2003/09/07 08:45:16 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  * @author Steve Downey\n- * @author <a href=\"herve.quiroz@esil.univ-mrs.fr\">Herve Quiroz</a>\n+ * @author Herve Quiroz\n  * @author Peter KoBek\n  * @author Matthew Hawthorne\n+ * @author Janek Bogucki\n  */\n public class CollectionUtils {\n \n      * @param inputCollection  the collection to get the input from, may be null\n      * @param predicate  the predicate to use, may be null\n      * @param outputCollection  the collection to output into, may not be null\n-     * @return the outputCollection with the the elements matching the predicate added\n-     * @throws NullPointerException if the input collection is null\n      */\n     public static void select(Collection inputCollection, Predicate predicate, Collection outputCollection) {\n         if (inputCollection != null && predicate != null) {\n      * Selects all elements from inputCollection which don't match the given predicate\n      * into an output collection.\n      * <p>\n-     * A <code>null</code> predicate matches no elements.\n+     * If the input predicate is <code>null</code>, the result is an empty list.\n      * \n      * @param inputCollection  the collection to get the input from, may not be null\n      * @param predicate  the predicate to use, may be null\n     /** \n      * Selects all elements from inputCollection which don't match the given predicate\n      * and adds them to outputCollection.\n+     * <p>\n+     * If the input predicate is <code>null</code>, no elements are added to <code>outputCollection</code>.\n      * \n      * @param inputCollection  the collection to get the input from, may be null\n      * @param predicate  the predicate to use, may be null\n      * @param outputCollection  the collection to output into, may not be null\n-     * @return the outputCollection with the the elements <b>not</b> matching the predicate added\n-     * @throws NullPointerException if the input collection is null\n      */\n     public static void selectRejected(Collection inputCollection, Predicate predicate, Collection outputCollection) {\n         if (inputCollection != null && predicate != null) {", "timestamp": 1062924316, "metainfo": ""}