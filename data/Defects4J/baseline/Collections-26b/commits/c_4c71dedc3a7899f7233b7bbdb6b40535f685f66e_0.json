{"sha": "4c71dedc3a7899f7233b7bbdb6b40535f685f66e", "log": "cosmetic changes only (convert tabs to spaces, add braces one line blocks)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/NullComparator.java\n  *  other objects.\n  *\n  *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- *  @version $Id: NullComparator.java,v 1.4 2002/10/12 22:15:21 scolebourne Exp $ \n+ *  @version $Revision: 1.5 $ $Date: 2003/01/07 18:20:07 $ \n  **/\n public class NullComparator implements Comparator, Serializable {\n \n      *  used.\n      **/\n     public NullComparator() {\n-\tthis(ComparableComparator.getInstance(), true);\n+        this(ComparableComparator.getInstance(), true);\n     }\n \n     /**\n      *  <code>null</code>\n      **/\n     public NullComparator(Comparator nonNullComparator) {\n-\tthis(nonNullComparator, true);\n+        this(nonNullComparator, true);\n     }\n \n     /**\n      *  non-<code>null</code> object.\n      **/\n     public NullComparator(boolean nullsAreHigh) {\n-\tthis(ComparableComparator.getInstance(), nullsAreHigh);\n+        this(ComparableComparator.getInstance(), nullsAreHigh);\n     }\n     \n     /**\n      *  <code>null</code>\n      **/\n     public NullComparator(Comparator nonNullComparator, boolean nullsAreHigh) {\n-\tthis.nonNullComparator = nonNullComparator;\n-\tthis.nullsAreHigh = nullsAreHigh;\n-\n-\tif(nonNullComparator == null) {\n-\t    throw new NullPointerException(\"null nonNullComparator\");\n-\t}\n+        this.nonNullComparator = nonNullComparator;\n+        this.nullsAreHigh = nullsAreHigh;\n+        \n+        if(nonNullComparator == null) {\n+            throw new NullPointerException(\"null nonNullComparator\");\n+        }\n     }\n \n     /**\n      *  <code>0</code> if <code>o1</code> and <code>o2</code> are equal.\n      **/\n     public int compare(Object o1, Object o2) {\n-\tif(o1 == o2) return 0;\n-\tif(o1 == null) return (this.nullsAreHigh ? 1 : -1);\n-\tif(o2 == null) return (this.nullsAreHigh ? -1 : 1);\n-\treturn this.nonNullComparator.compare(o1, o2);\n+        if(o1 == o2) { return 0; }\n+        if(o1 == null) { return (this.nullsAreHigh ? 1 : -1); }\n+        if(o2 == null) { return (this.nullsAreHigh ? -1 : 1); }\n+        return this.nonNullComparator.compare(o1, o2);\n     }\n \n     /**\n      *  @return a hash code for this comparator.\n      **/\n     public int hashCode() {\n-\treturn (nullsAreHigh ? -1 : 1) * nonNullComparator.hashCode();\n+        return (nullsAreHigh ? -1 : 1) * nonNullComparator.hashCode();\n     }\n \n     /**\n      *  non-<code>null</code> object comparators.\n      **/\n     public boolean equals(Object obj) {\n-\tif(obj == null) return false;\n-\tif(obj == this) return true;\n-\tif(!obj.getClass().equals(this.getClass())) return false;\n-\n-\tNullComparator other = (NullComparator)obj;\n+        if(obj == null) { return false; }\n+        if(obj == this) { return true; }\n+        if(!obj.getClass().equals(this.getClass())) { return false; }\n+\n+        NullComparator other = (NullComparator)obj;\n \t\n-\treturn ((this.nullsAreHigh == other.nullsAreHigh) &&\n-\t\t(this.nonNullComparator.equals(other.nonNullComparator)));\n+        return ((this.nullsAreHigh == other.nullsAreHigh) &&\n+                (this.nonNullComparator.equals(other.nonNullComparator)));\n     }\n \n     private static final long serialVersionUID = -5820772575483504339L;", "timestamp": 1041963607, "metainfo": ""}