{"sha": "51a2b9eae0ebc9bdd22f7483ff8bbb59c29df4af", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r471189 | scolebourne | 2006-11-04 05:57:57 -0800 (Sat, 04 Nov 2006) | 1 line          Remove getMap(), getOrderedMap() and getSortedMap() - use decorated()     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n import java.util.Map;\n import java.util.Set;\n \n-import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n import org.apache.commons.collections.OrderedMapIterator;\n import org.apache.commons.collections.Unmodifiable;\n import org.apache.commons.collections.collection.UnmodifiableCollection;\n-import org.apache.commons.collections.iterators.UnmodifiableMapIterator;\n import org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator;\n import org.apache.commons.collections.set.UnmodifiableSet;\n \n  *\n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableOrderedMap\n-        extends AbstractOrderedMapDecorator\n-        implements Unmodifiable, Serializable {\n+public final class UnmodifiableOrderedMap<K, V> extends AbstractOrderedMapDecorator<K, V> implements\n+        Unmodifiable, Serializable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 8136428161720526266L;\n      * @param map  the map to decorate, must not be null\n      * @throws IllegalArgumentException if map is null\n      */\n-    public static OrderedMap decorate(OrderedMap map) {\n+    public static <K, V> OrderedMap<K, V> decorate(OrderedMap<K, V> map) {\n         if (map instanceof Unmodifiable) {\n             return map;\n         }\n-        return new UnmodifiableOrderedMap(map);\n+        return new UnmodifiableOrderedMap<K, V>(map);\n     }\n \n     //-----------------------------------------------------------------------\n      * @param map  the map to decorate, must not be null\n      * @throws IllegalArgumentException if map is null\n      */\n-    private UnmodifiableOrderedMap(OrderedMap map) {\n+    private UnmodifiableOrderedMap(OrderedMap<K, V> map) {\n         super(map);\n     }\n \n      * @throws ClassNotFoundException\n      * @since Commons Collections 3.1\n      */\n+    @SuppressWarnings(\"unchecked\")\n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n         map = (Map) in.readObject();\n     }\n \n     //-----------------------------------------------------------------------\n-    public MapIterator mapIterator() {\n-        MapIterator it = getOrderedMap().mapIterator();\n-        return UnmodifiableMapIterator.decorate(it);\n-    }\n-\n-    public OrderedMapIterator orderedMapIterator() {\n-        OrderedMapIterator it = getOrderedMap().orderedMapIterator();\n+    public OrderedMapIterator<K, V> mapIterator() {\n+        OrderedMapIterator<K, V> it = decorated().mapIterator();\n         return UnmodifiableOrderedMapIterator.decorate(it);\n     }\n \n         throw new UnsupportedOperationException();\n     }\n \n-    public Object put(Object key, Object value) {\n+    public V put(K key, V value) {\n         throw new UnsupportedOperationException();\n     }\n \n-    public void putAll(Map mapToCopy) {\n+    public void putAll(Map<? extends K, ? extends V> mapToCopy) {\n         throw new UnsupportedOperationException();\n     }\n \n-    public Object remove(Object key) {\n+    public V remove(Object key) {\n         throw new UnsupportedOperationException();\n     }\n \n-    public Set entrySet() {\n-        Set set = super.entrySet();\n+    public Set<Map.Entry<K, V>> entrySet() {\n+        Set<Map.Entry<K, V>> set = super.entrySet();\n         return UnmodifiableEntrySet.decorate(set);\n     }\n \n-    public Set keySet() {\n-        Set set = super.keySet();\n+    public Set<K> keySet() {\n+        Set<K> set = super.keySet();\n         return UnmodifiableSet.decorate(set);\n     }\n \n-    public Collection values() {\n-        Collection coll = super.values();\n+    public Collection<V> values() {\n+        Collection<V> coll = super.values();\n         return UnmodifiableCollection.decorate(coll);\n     }\n ", "timestamp": 1252994180, "metainfo": ""}