{"sha": "2a069edb7e7c46ef3c1f56e8fb6cadb779ed2e42", "log": "importing classes referenced in javadoc comments (javadoc won't find them otherwise)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.2 2001/04/16 22:39:21 geirm Exp $\n- * $Revision: 1.2 $\n- * $Date: 2001/04/16 22:39:21 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.3 2001/05/04 16:33:18 rwaldhoff Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2001/05/04 16:33:18 $\n  *\n  * ====================================================================\n  *\n \n import java.util.ArrayList;\n import java.util.EmptyStackException;\n-\n+import java.util.Stack; // only used in javadoc comments, javadoc won't find it otherwise\n \n /**\n  * An implementation of the {@link java.util.Stack} API that is based on an\n  * worry about multiple thread contention.\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.2 $ $Date: 2001/04/16 22:39:21 $\n+ * @version $Revision: 1.3 $ $Date: 2001/05/04 16:33:18 $\n  * @see java.util.Stack\n  */\n \n      *  stack to satisfy this request\n      */\n     public Object peek(int n) throws EmptyStackException {\n-        \n+\n         int m = (size() - n) - 1;\n         if (m < 0)\n             throw new EmptyStackException();\n         else\n             return (get(m));\n-        \n+\n     }\n-    \n+\n \n     /**\n      * Pop the top item off of this stack and return it.\n--- a/src/java/org/apache/commons/collections/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.2 2001/04/26 00:05:47 rwaldhoff Exp $\n- * $Revision: 1.2 $\n- * $Date: 2001/04/26 00:05:47 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.3 2001/05/04 16:33:13 rwaldhoff Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2001/05/04 16:33:13 $\n  *\n- * ====================================================================\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n  *\n- * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n- *       \"This product includes software developed by the\n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n- *\n- * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written\n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\"\n- *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included with this distribution in\n+ * the LICENSE file.\n  */\n \n // to do: use weak references to cursors in case they aren't closed directly\n import java.io.ObjectOutputStream;\n import java.io.IOException;\n import java.lang.reflect.Array;\n+import java.util.LinkedList; // only used in javadoc comments, javadoc won't find it otherwise\n+import java.lang.UnsupportedOperationException; // stops a javadoc warning\n \n /**\n  * A doubly-linked list implementation of the {@link List} interface,\n  * <b>Note that this implementation is not synchronized.</b>\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: CursorableLinkedList.java,v 1.2 2001/04/26 00:05:47 rwaldhoff Exp $\n+ * @version $Id: CursorableLinkedList.java,v 1.3 2001/05/04 16:33:13 rwaldhoff Exp $\n  * @see java.util.LinkedList\n  */\n public class CursorableLinkedList implements List, Serializable {", "timestamp": 988993998, "metainfo": ""}