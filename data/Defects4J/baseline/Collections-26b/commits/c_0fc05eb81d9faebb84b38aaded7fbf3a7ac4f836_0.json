{"sha": "0fc05eb81d9faebb84b38aaded7fbf3a7ac4f836", "log": "Add missing since tags.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/DefaultedMap.java\n      * @param defaultValue  the default value to return when the key is not found\n      * @return a new defaulting map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue) {\n         return new DefaultedMap<K, V>(map, ConstantTransformer.constantTransformer(defaultValue));\n      * @param factory  the factory to use to create entries, must not be null\n      * @return a new defaulting map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory) {\n         if (factory == null) {\n      * @param transformer  the transformer to use as a factory to create entries, must not be null\n      * @return a new defaulting map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map,\n                                                 final Transformer<? super K, ? extends V> transformer) {\n--- a/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new fixed size map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map) {\n         return new FixedSizeMap<K, V>(map);\n--- a/src/main/java/org/apache/commons/collections4/map/FixedSizeSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/FixedSizeSortedMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new fixed size sorted map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map) {\n         return new FixedSizeSortedMap<K, V>(map);\n--- a/src/main/java/org/apache/commons/collections4/map/LazyMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/LazyMap.java\n      * @param factory  the factory to use, must not be null\n      * @return a new lazy map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory< ? extends V> factory) {\n         return new LazyMap<K,V>(map, factory);\n      * @param factory  the factory to use, must not be null\n      * @return a new lazy map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory) {\n         return new LazyMap<K,V>(map, factory);\n--- a/src/main/java/org/apache/commons/collections4/map/LazySortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/LazySortedMap.java\n      * @param factory  the factory to use, must not be null\n      * @return a new lazy sorted map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map,\n                                                            final Factory<? extends V> factory) {\n      * @param factory  the factory to use, must not be null\n      * @return a new lazy sorted map\n      * @throws IllegalArgumentException if map or factory is null\n+     * @since 4.0\n      */\n     public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map,\n                                                            final Transformer<? super K, ? extends V> factory) {\n--- a/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new list ordered map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map) {\n         return new ListOrderedMap<K, V>(map);\n--- a/src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java\n      * @param map  the map to decorate, not null\n      * @return a new multi key map\n      * @throws IllegalArgumentException if the map is null or not empty\n+     * @since 4.0\n      */\n     public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map) {\n         if (map == null) {\n--- a/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java\n      * @param <V>  the value type\n      * @param map  the map to wrap\n      * @return a new multi-value map\n+     * @since 4.0\n      */\n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) {\n      * @param map  the map to wrap\n      * @param collectionClass  the type of the collection class\n      * @return a new multi-value map\n+     * @since 4.0\n      */\n     public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n                                                                                     final Class<C> collectionClass) {\n      * @param map  the map to decorate\n      * @param collectionFactory  the collection factory (must return a Collection object).\n      * @return a new multi-value map\n+     * @since 4.0\n      */\n     public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map,\n             final Factory<C> collectionFactory) {\n--- a/src/main/java/org/apache/commons/collections4/map/PredicatedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/PredicatedMap.java\n      * @param valuePredicate  the predicate to validate to values, null means no check\n      * @return a new predicated map\n      * @throws IllegalArgumentException if the map is null\n+     * @since 4.0\n      */\n     public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map,\n                                                            final Predicate<? super K> keyPredicate,\n--- a/src/main/java/org/apache/commons/collections4/map/PredicatedSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/PredicatedSortedMap.java\n      * @param valuePredicate  the predicate to validate to values, null means no check\n      * @return a new predicated sorted map\n      * @throws IllegalArgumentException if the map is null\n+     * @since 4.0\n      */\n     public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map,\n             final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate) {\n--- a/src/main/java/org/apache/commons/collections4/map/TransformedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/TransformedMap.java\n      * @param valueTransformer  the transformer to use for value conversion, null means no transformation\n      * @return a new transformed map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map,\n             final Transformer<? super K, ? extends K> keyTransformer,\n      * @param valueTransformer  the transformer to use for value conversion, null means no transformation\n      * @return a new transformed map\n      * @throws IllegalArgumentException if map is null\n-     * @since 3.2\n+     * @since 4.0\n      */\n     public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map,\n             final Transformer<? super K, ? extends K> keyTransformer,\n--- a/src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java\n      * @param valueTransformer  the predicate to validate to values, null means no transformation\n      * @return a new transformed sorted map\n      * @throws IllegalArgumentException if the map is null\n+     * @since 4.0\n      */\n     public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map,\n             final Transformer<? super K, ? extends K> keyTransformer,\n      * @param valueTransformer  the transformer to use for value conversion, null means no transformation\n      * @return a new transformed sorted map\n      * @throws IllegalArgumentException if map is null\n-     * @since 3.2\n+     * @since 4.0\n      */\n     public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map,\n             final Transformer<? super K, ? extends K> keyTransformer,\n--- a/src/main/java/org/apache/commons/collections4/map/UnmodifiableEntrySet.java\n+++ b/src/main/java/org/apache/commons/collections4/map/UnmodifiableEntrySet.java\n      * @param set  the set to decorate, must not be null\n      * @return a new unmodifiable entry set\n      * @throws IllegalArgumentException if set is null\n+     * @since 4.0\n      */\n     public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set) {\n         if (set instanceof Unmodifiable) {\n--- a/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new unmodifiable map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> Map<K, V> unmodifiableMap(final Map<K, V> map) {\n         if (map instanceof Unmodifiable) {\n--- a/src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new ordered map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<K, V> map) {\n         if (map instanceof Unmodifiable) {\n--- a/src/main/java/org/apache/commons/collections4/map/UnmodifiableSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/UnmodifiableSortedMap.java\n      * @param map  the map to decorate, must not be null\n      * @return a new unmodifiable sorted map\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, V> map) {\n         if (map instanceof Unmodifiable) {", "timestamp": 1367791673, "metainfo": ""}