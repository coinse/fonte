{"sha": "d25ba061659968fd0da9d1b4d58f9d3a2e6ed99c", "log": "Update file layout for consistency   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractHashedMap.java,v 1.7 2004/01/05 21:32:10 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractHashedMap.java,v 1.8 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * need for unusual subclasses is here.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/01/05 21:32:10 $\n+ * @version $Revision: 1.8 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n     protected AbstractHashedMap(int initialCapacity) {\n         this(initialCapacity, DEFAULT_LOAD_FACTOR);\n     }\n-    \n+\n     /**\n      * Constructs a new, empty map with the specified initial capacity and\n      * load factor. \n--- a/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java,v 1.5 2003/12/29 00:38:08 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java,v 1.6 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * methods exposed.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2003/12/29 00:38:08 $\n+ * @version $Revision: 1.6 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author java util LinkedHashMap\n  * @author Stephen Colebourne\n     protected AbstractLinkedMap(int initialCapacity, float loadFactor, int threshhold) {\n         super(initialCapacity, loadFactor, threshhold);\n     }\n-    \n+\n     /**\n      * Constructs a new, empty map with the specified initial capacity. \n      *\n--- a/src/java/org/apache/commons/collections/map/CompositeMap.java\n+++ b/src/java/org/apache/commons/collections/map/CompositeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/CompositeMap.java,v 1.3 2003/12/29 15:26:39 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/CompositeMap.java,v 1.4 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * strategy is provided then add and remove are unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/29 15:26:39 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author Brian McCallister\n  */\n public class CompositeMap implements Map {\n-    \n+\n     /** Array of all maps in the composite */\n     private Map[] composite;\n-    \n+\n     /** Handle mutation operations */\n     private MapMutator mutator;\n-    \n+\n     /**\n      * Create a new, empty, CompositeMap.\n      */\n     public CompositeMap() {\n         this(new Map[]{}, null);\n     }\n-    \n+\n     /**\n      * Create a new CompositeMap with two composited Map instances.\n      * \n     public CompositeMap(Map one, Map two) {\n         this(new Map[]{one, two}, null);\n     }\n-    \n+\n     /**\n      * Create a new CompositeMap with two composited Map instances.\n      * \n     public CompositeMap(Map one, Map two, MapMutator mutator) {\n         this(new Map[]{one, two}, mutator);\n     }\n-    \n+\n     /**\n      * Create a new CompositeMap which composites all of the Map instances in the\n      * argument. It copies the argument array, it does not use it directly.\n     public CompositeMap(Map[] composite) {\n         this(composite, null);\n     }\n-    \n+\n     /**\n      * Create a new CompositeMap which composites all of the Map instances in the\n      * argument. It copies the argument array, it does not use it directly.\n             this.addComposited(composite[i]);\n         }\n     }\n-    \n+\n     //-----------------------------------------------------------------------\n     /**\n      * Specify the MapMutator to be used by mutation operations.\n--- a/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeMap.java,v 1.2 2003/12/11 22:55:25 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeMap.java,v 1.3 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is not always unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/11 22:55:25 $\n+ * @version $Revision: 1.3 $ $Date: 2004/01/05 22:04:19 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeMap extends AbstractMapDecorator\n-        implements Map, BoundedMap {\n+public class FixedSizeMap\n+        extends AbstractMapDecorator implements Map, BoundedMap {\n \n     /**\n      * Factory method to create a fixed size map.\n--- a/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java,v 1.2 2003/12/11 22:55:25 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java,v 1.3 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is not always unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/11 22:55:25 $\n+ * @version $Revision: 1.3 $ $Date: 2004/01/05 22:04:19 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeSortedMap extends AbstractSortedMapDecorator\n-        implements SortedMap, BoundedMap {\n+public class FixedSizeSortedMap\n+        extends AbstractSortedMapDecorator implements SortedMap, BoundedMap {\n \n     /**\n      * Factory method to create a fixed size sorted map.\n--- a/src/java/org/apache/commons/collections/map/Flat3Map.java\n+++ b/src/java/org/apache/commons/collections/map/Flat3Map.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/Flat3Map.java,v 1.9 2003/12/29 00:38:32 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/Flat3Map.java,v 1.10 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Do not use <code>Flat3Map</code> if the size is likely to grow beyond 3.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2003/12/29 00:38:32 $\n+ * @version $Revision: 1.10 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author Stephen Colebourne\n  */\n public class Flat3Map implements IterableMap {\n-    \n+\n     /** The size of the map, used while in flat mode */\n     private int size;\n     /** Hash, used while in flat mode */\n--- a/src/java/org/apache/commons/collections/map/HashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/HashedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/HashedMap.java,v 1.11 2003/12/28 17:58:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/HashedMap.java,v 1.12 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * functionality and many methods for subclassing.\n  * <p>\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2003/12/28 17:58:53 $\n+ * @version $Revision: 1.12 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author Stephen Colebourne\n  */\n-public class HashedMap extends AbstractHashedMap implements Serializable, Cloneable {\n-    \n+public class HashedMap\n+        extends AbstractHashedMap implements Serializable, Cloneable {\n+\n     /** Serialisation version */\n     private static final long serialVersionUID = -1788199231038721040L;\n     \n--- a/src/java/org/apache/commons/collections/map/IdentityMap.java\n+++ b/src/java/org/apache/commons/collections/map/IdentityMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/IdentityMap.java,v 1.2 2003/12/07 23:59:13 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/IdentityMap.java,v 1.3 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * As a general rule, don't compare this map to other maps.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/07 23:59:13 $\n+ * @version $Revision: 1.3 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n  */\n-public class IdentityMap extends AbstractHashedMap implements Serializable, Cloneable {\n-    \n+public class IdentityMap\n+        extends AbstractHashedMap implements Serializable, Cloneable {\n+\n     /** Serialisation version */\n     private static final long serialVersionUID = 2028493495224302329L;\n \n--- a/src/java/org/apache/commons/collections/map/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/map/LRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LRUMap.java,v 1.6 2004/01/05 21:32:47 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LRUMap.java,v 1.7 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * All the available iterators can be reset back to the start by casting to\n  * <code>ResettableIterator</code> and calling <code>reset()</code>.\n  * \n- * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/01/05 21:32:47 $\n+ * @since Commons Collections 3.0 (previously in main package v1.0)\n+ * @version $Revision: 1.7 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author James Strachan\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n  */\n-public class LRUMap extends AbstractLinkedMap\n-        implements BoundedMap, Serializable, Cloneable {\n+public class LRUMap\n+        extends AbstractLinkedMap implements BoundedMap, Serializable, Cloneable {\n     \n     /** Serialisation version */\n     static final long serialVersionUID = -612114643488955218L;\n--- a/src/java/org/apache/commons/collections/map/LazyMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazyMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LazyMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LazyMap.java,v 1.2 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * instance is mapped to the \"NOW\" key in the map.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:04:19 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class LazyMap extends AbstractMapDecorator implements Map {\n+public class LazyMap\n+        extends AbstractMapDecorator implements Map {\n \n     /** The factory to use to construct elements */\n     protected final Transformer factory;\n--- a/src/java/org/apache/commons/collections/map/LazySortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazySortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LazySortedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LazySortedMap.java,v 1.2 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * instance is mapped to the \"NOW\" key in the map.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:04:19 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class LazySortedMap extends LazyMap implements SortedMap {\n+public class LazySortedMap\n+        extends LazyMap implements SortedMap {\n \n     /**\n      * Factory method to create a lazily instantiated sorted map.\n--- a/src/java/org/apache/commons/collections/map/LinkedMap.java\n+++ b/src/java/org/apache/commons/collections/map/LinkedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LinkedMap.java,v 1.6 2003/12/28 22:45:47 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LinkedMap.java,v 1.7 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * methods exposed.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2003/12/28 22:45:47 $\n+ * @version $Revision: 1.7 $ $Date: 2004/01/05 22:04:19 $\n  *\n  * @author Stephen Colebourne\n  */\n-public class LinkedMap extends AbstractLinkedMap implements Serializable, Cloneable {\n-    \n+public class LinkedMap\n+        extends AbstractLinkedMap implements Serializable, Cloneable {\n+\n     /** Serialisation version */\n     private static final long serialVersionUID = 9077234323521161066L;\n     \n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ListOrderedMap.java,v 1.9 2003/12/28 22:45:47 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ListOrderedMap.java,v 1.10 2004/01/05 22:04:19 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * original position in the iteration.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2003/12/28 22:45:47 $\n+ * @version $Revision: 1.10 $ $Date: 2004/01/05 22:04:19 $\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n  */\n-public class ListOrderedMap extends AbstractMapDecorator implements OrderedMap {\n+public class ListOrderedMap\n+        extends AbstractMapDecorator implements OrderedMap {\n \n     /** Internal list to hold the sequence of objects */\n     protected final List insertOrder = new ArrayList();", "timestamp": 1073340259, "metainfo": ""}