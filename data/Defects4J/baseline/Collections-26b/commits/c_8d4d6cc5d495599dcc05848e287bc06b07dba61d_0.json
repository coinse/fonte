{"sha": "8d4d6cc5d495599dcc05848e287bc06b07dba61d", "log": "Make indexOf generic like the other methods  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n      * @param predicate  the predicate to use, may be null\n      * @return the first index of an Object in the List which matches the predicate or -1 if none could be found\n      */\n-    public static int indexOf(List list, Predicate predicate) {\n+    public static <E> int indexOf(List<E> list, Predicate<E> predicate) {\n         if (list != null && predicate != null) {\n             for (int i = 0; i < list.size(); i++) {\n-                Object item = list.get(i);\n+                E item = list.get(i);\n                 if (predicate.evaluate(item)) {\n                     return i;\n                 }", "timestamp": 1287415299, "metainfo": ""}