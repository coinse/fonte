{"sha": "d8b1a452bdb1cd007f2e9d9d5be2db31d05f23b3", "log": "Fix test class to remove time dependency for reliable test   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestFactoryUtils.java\n+++ b/src/test/org/apache/commons/collections/TestFactoryUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestFactoryUtils.java,v 1.2 2003/05/16 15:11:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestFactoryUtils.java,v 1.3 2003/05/21 22:22:24 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Tests the org.apache.commons.collections.FactoryUtils class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/05/16 15:11:54 $\n+ * @version $Revision: 1.3 $ $Date: 2003/05/21 22:22:24 $\n  *\n  * @author Stephen Colebourne\n  */\n         }\n     }\n     \n+    public static class Mock3 {\n+        private static int cCounter = 0;\n+        private final int iVal;\n+        public Mock3() {\n+            iVal = cCounter++;\n+        }\n+        public int getValue() {\n+            return iVal;\n+        }\n+    }\n+    \n     // reflectionFactory\n     //------------------------------------------------------------------\n     \n     }\n \n     public void testReflectionFactorySimple() {\n-        Factory factory = FactoryUtils.reflectionFactory(Date.class);\n-        assertNotNull(factory);\n-        Object created = factory.create();\n-        assertTrue(created instanceof Date);\n-        assertEquals((double) System.currentTimeMillis(), (double) ((Date) created).getTime(), 0.05d);\n+        Factory factory = FactoryUtils.reflectionFactory(Mock3.class);\n+        assertNotNull(factory);\n+        Object created = factory.create();\n+        assertEquals(0, ((Mock3) created).getValue());\n+        created = factory.create();\n+        assertEquals(1, ((Mock3) created).getValue());\n     }\n \n     public void testReflectionFactoryMismatch() {\n \n     public void testReflectionFactoryComplex() {\n         TimeZone.setDefault(TimeZone.getTimeZone(\"GMT\"));\n+        // 2nd Jan 1970\n         Factory factory = FactoryUtils.reflectionFactory(Date.class,\n             new Class[] {Integer.TYPE, Integer.TYPE, Integer.TYPE},\n             new Object[] {new Integer(70), new Integer(0), new Integer(2)});\n         assertNotNull(factory);\n         Object created = factory.create();\n         assertTrue(created instanceof Date);\n+        // long time of 1 day (== 2nd Jan 1970)\n         assertEquals(new Date(1000 * 60 * 60 * 24), created);\n     }\n ", "timestamp": 1053555744, "metainfo": ""}