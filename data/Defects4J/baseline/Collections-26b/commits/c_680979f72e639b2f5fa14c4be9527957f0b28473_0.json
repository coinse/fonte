{"sha": "680979f72e639b2f5fa14c4be9527957f0b28473", "log": "Document unchecked suppression.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n      *   a supertype of the runtime type of the elements in this list\n      * @throws NullPointerException if the specified array is null\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public <T> T[] toArray(T[] array) {\n         final int size = size();\n         if (array.length < size) {\n-            array = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n+            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n+            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n+            array = unchecked;\n         }\n \n         int i = 0;\n         while (it.hasNext()) {\n             final E current = it.next();\n             for (int index = getCount(current); index > 0; index--) {\n-                array[i++] = (T) current;\n+                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n+                @SuppressWarnings(\"unchecked\") \n+                final T unchecked = (T) current;\n+                array[i++] = unchecked;\n             }\n         }\n         while (i < array.length) {", "timestamp": 1361912677, "metainfo": ""}