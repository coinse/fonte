{"sha": "8106e483345dc343067d22d33a2e6bbacc141c47", "log": "Fix TODO by documenting the possible exceptions, similar to e.g. java.util.ArrayList.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n      * @param <T> the type of the array elements\n      * @param array the array to populate\n      * @return an array of all of this bag's elements\n-     */\n+     * @throws ArrayStoreException if the runtime type of the specified array is not\n+     *   a supertype of the runtime type of the elements in this list\n+     * @throws NullPointerException if the specified array is null\n+     */\n+    @SuppressWarnings(\"unchecked\")\n     public <T> T[] toArray(T[] array) {\n         final int size = size();\n         if (array.length < size) {\n-            // This is safe, both are type T\n             array = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n         }\n \n         while (it.hasNext()) {\n             final E current = it.next();\n             for (int index = getCount(current); index > 0; index--) {\n-                // TODO this is unsafe\n                 array[i++] = (T) current;\n             }\n         }", "timestamp": 1361830702, "metainfo": ""}