{"sha": "e1c5f7fb49894fd2c839f54289436bbf90fd975d", "log": "Fix UnboundedFifoBuffer iterator remove bug causing ArrayIndexOutOfBounds bug 35733, from Andreas Schlosser  ", "commit": "\n--- a/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n  * @author Berin Loritsch\n  * @author Paul Jack\n  * @author Stephen Colebourne\n+ * @author Andreas Schlosser\n  */\n public class UnboundedFifoBuffer extends AbstractCollection implements Buffer {\n     \n                 }\n \n                 // Other elements require us to shift the subsequent elements\n-                int i = lastReturnedIndex + 1;\n+                int i = increment(lastReturnedIndex);\n                 while (i != m_tail) {\n-                    if (i >= m_buffer.length) {\n-                        m_buffer[i - 1] = m_buffer[0];\n-                        i = 0;\n-                    } else {\n-                        m_buffer[i - 1] = m_buffer[i];\n-                        i++;\n-                    }\n+                    m_buffer[decrement(i)] = m_buffer[i];\n+                    i = increment(i);\n                 }\n \n                 lastReturnedIndex = -1;\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n                 }\n \n                 // Other elements require us to shift the subsequent elements\n-                int i = lastReturnedIndex + 1;\n+                int i = increment(lastReturnedIndex);\n                 while (i != tail) {\n-                    if (i >= buffer.length) {\n-                        buffer[i - 1] = buffer[0];\n-                        i = 0;\n-                    } else {\n-                        buffer[i - 1] = buffer[i];\n-                        i++;\n-                    }\n+                    buffer[decrement(i)] = buffer[i];\n+                    i = increment(i);\n                 }\n \n                 lastReturnedIndex = -1;\n--- a/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n         }\n         fail();\n     }\n+\n+    //-----------------------------------------------------------------------\n+    public void testInternalStateAdd() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(2);\n+        assertEquals(3, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        test.add(\"A\");\n+        assertEquals(3, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(1, test.m_tail);\n+        test.add(\"B\");\n+        assertEquals(3, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(2, test.m_tail);\n+        test.add(\"C\");  // forces m_buffer increase\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        test.add(\"D\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(4, test.m_tail);\n+    }\n+\n+    public void testInternalStateAddWithWrap() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        test.add(\"A\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(1, test.m_tail);\n+        test.add(\"B\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(2, test.m_tail);\n+        test.add(\"C\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        test.remove(\"A\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        test.remove(\"B\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        test.add(\"D\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        test.add(\"E\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(1, test.m_tail);\n+    }\n+\n+    public void testInternalStateRemove1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        \n+        test.remove(\"A\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(4, test.m_tail);\n+    }\n+\n+    public void testInternalStateRemove2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        \n+        test.remove(\"B\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(2, test.m_tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemove1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        it.next();\n+        it.remove();\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(3, test.m_tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(4, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemove2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        \n+        Iterator it = test.iterator();\n+        it.next();\n+        it.next();\n+        it.remove();\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(2, test.m_tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.m_buffer.length);\n+        assertEquals(0, test.m_head);\n+        assertEquals(3, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(0, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        assertEquals(\"C\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(3, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd3() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(0, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(1, test.m_head);\n+        assertEquals(3, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(1, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(3, test.m_head);\n+        assertEquals(1, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(1, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(0, test.m_tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap3() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(1, test.m_tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        assertEquals(\"E\", it.next());\n+        it.remove();\n+        assertEquals(4, test.m_buffer.length);\n+        assertEquals(2, test.m_head);\n+        assertEquals(0, test.m_tail);\n+    }\n+\n }\n-\n--- a/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n         fail();\n     }\n \n+    //-----------------------------------------------------------------------\n+    public void testInternalStateAdd() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(2);\n+        assertEquals(3, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(0, test.tail);\n+        test.add(\"A\");\n+        assertEquals(3, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(1, test.tail);\n+        test.add(\"B\");\n+        assertEquals(3, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(2, test.tail);\n+        test.add(\"C\");  // forces buffer increase\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+        test.add(\"D\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(4, test.tail);\n+    }\n+\n+    public void testInternalStateAddWithWrap() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(0, test.tail);\n+        test.add(\"A\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(1, test.tail);\n+        test.add(\"B\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(2, test.tail);\n+        test.add(\"C\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+        test.remove(\"A\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(3, test.tail);\n+        test.remove(\"B\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(3, test.tail);\n+        test.add(\"D\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(0, test.tail);\n+        test.add(\"E\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(1, test.tail);\n+    }\n+\n+    public void testInternalStateRemove1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+        \n+        test.remove(\"A\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(3, test.tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(4, test.tail);\n+    }\n+\n+    public void testInternalStateRemove2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+        \n+        test.remove(\"B\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(2, test.tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemove1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        it.next();\n+        it.remove();\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(3, test.tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(4, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemove2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(4);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        \n+        Iterator it = test.iterator();\n+        it.next();\n+        it.next();\n+        it.remove();\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(2, test.tail);\n+        \n+        test.add(\"D\");\n+        assertEquals(5, test.buffer.length);\n+        assertEquals(0, test.head);\n+        assertEquals(3, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(0, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(0, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(0, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        assertEquals(\"C\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(3, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithTailAtEnd3() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.add(\"D\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(0, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"B\", it.next());\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(1, test.head);\n+        assertEquals(3, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap1() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(1, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(3, test.head);\n+        assertEquals(1, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap2() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(1, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(0, test.tail);\n+    }\n+\n+    public void testInternalStateIteratorRemoveWithWrap3() {\n+        UnboundedFifoBuffer test = new UnboundedFifoBuffer(3);\n+        test.add(\"A\");\n+        test.add(\"B\");\n+        test.add(\"C\");\n+        test.remove(\"A\");\n+        test.remove(\"B\");\n+        test.add(\"D\");\n+        test.add(\"E\");\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(1, test.tail);\n+        \n+        Iterator it = test.iterator();\n+        assertEquals(\"C\", it.next());\n+        assertEquals(\"D\", it.next());\n+        assertEquals(\"E\", it.next());\n+        it.remove();\n+        assertEquals(4, test.buffer.length);\n+        assertEquals(2, test.head);\n+        assertEquals(0, test.tail);\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public String getCompatibilityVersion() {\n         return \"3.1\";\n     }", "timestamp": 1121512622, "metainfo": ""}