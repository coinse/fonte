{"sha": "57a6f158f4f804a6fa37b892761062f2c58fa9b0", "log": "Add test case for DualTreeBidiMap sort order bug 29519, from Jonas Van Poucke   ", "commit": "\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n import java.util.TreeMap;\n \n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/06/11 23:29:07 $\n+ * @version $Revision: 1.2 $ $Date: 2004/06/21 22:30:05 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n+ * @author Jonas Van Poucke\n  */\n public class TestDualTreeBidiMap2 extends AbstractTestSortedBidiMap {\n \n         }\n     }\n \n+    public void testSortOrder() throws Exception {\n+        SortedBidiMap sm = (SortedBidiMap) makeFullMap();\n+\n+        // Sort by the comparator used in the makeEmptyBidiMap() method\n+        List newSortedKeys = Arrays.asList(getSampleKeys());\n+        Collections.sort(newSortedKeys, new ReverseComparator(ComparableComparator.getInstance()));\n+        newSortedKeys = Collections.unmodifiableList(newSortedKeys);\n+\n+        Iterator mapIter = sm.keySet().iterator();\n+        Iterator expectedIter = newSortedKeys.iterator();\n+        while (expectedIter.hasNext()) {\n+            Object expectedKey = expectedIter.next();\n+            Object mapKey = mapIter.next();\n+            assertNotNull(\"key in sorted list may not be null\", expectedKey);\n+            assertNotNull(\"key in map may not be null\", mapKey);\n+            assertEquals(\"key from sorted list and map must be equal\", expectedKey, mapKey);\n+        }\n+    }\n+\n     public String getCompatibilityVersion() {\n         return \"3.Test2\";\n     }", "timestamp": 1087857005, "metainfo": ""}