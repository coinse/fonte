{"sha": "a3b3b74ec6325cd19169fdbaea26f27a96a72fea", "log": "[COLLECTIONS-426] Revert performance improvement and add clarifying javadoc wrt runtime complexity.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n         return result;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     * <p>\n+     * This implementation iterates over the elements of this set, checking\n+     * each element in turn to see if it's contained in <code>coll</code>.\n+     * If it's not contained, it's removed from this set. As a consequence,\n+     * it is advised to use a collection type for <code>coll</code> that provides\n+     * a fast (e.g. O(1)) implementation of {@link Collection#contains(Object)}.\n+     */\n     @Override\n     public boolean retainAll(final Collection<?> coll) {\n-        final Set<Object> collectionRetainAll = new HashSet<Object>();\n-        for (final Object next : coll) {\n-            if (decorated().contains(next)) {\n-                collectionRetainAll.add(next);\n-            }\n-        }\n-        if (collectionRetainAll.size() == decorated().size()) {\n+        boolean result = decorated().retainAll(coll);\n+        if (result == false) {\n             return false;\n         }\n-        if (collectionRetainAll.size() == 0) {\n-            clear();\n+        if (decorated().size() == 0) {\n+            setOrder.clear();\n         } else {\n-            for (final Iterator<E> it = iterator(); it.hasNext();) {\n-                if (!collectionRetainAll.contains(it.next())) {\n+            for (Iterator<E> it = setOrder.iterator(); it.hasNext();) {\n+                if (!decorated().contains(it.next())) {\n                     it.remove();\n                 }\n             }\n         }\n-        return true;\n+        return result;\n     }\n \n     @Override\n--- a/src/test/java/org/apache/commons/collections4/set/ListOrderedSetTest.java\n+++ b/src/test/java/org/apache/commons/collections4/set/ListOrderedSetTest.java\n         assertEquals(Integer.valueOf(0), orderedSet.get(4));\n     }\n \n-    /*\n-     * test case for https://issues.apache.org/jira/browse/COLLECTIONS-426\n-     */\n-    @SuppressWarnings(\"boxing\") // OK in test code\n-    public void testRetainAllCollections426() {\n-        final int size = 100000;\n-        final ListOrderedSet<Integer> set = new ListOrderedSet<Integer>();\n-        for (int i = 0; i < size; i++) {\n-            set.add(i);\n-        }\n-        final ArrayList<Integer> list = new ArrayList<Integer>();\n-        for (int i = size; i < 2 * size; i++) {\n-            list.add(i);\n-        }\n-\n-        final long start = System.currentTimeMillis();\n-        set.retainAll(list);\n-        final long stop = System.currentTimeMillis();\n-\n-        // make sure retainAll completes under 5 seconds\n-        // TODO if test is migrated to JUnit 4, add a Timeout rule.\n-        // http://kentbeck.github.com/junit/javadoc/latest/org/junit/rules/Timeout.html\n-        assertTrue(stop - start < 5000);\n-    }\n-\n     @SuppressWarnings(\"unchecked\")\n     public void testDuplicates() {\n         final List<E> list = new ArrayList<E>(10);", "timestamp": 1422371002, "metainfo": ""}