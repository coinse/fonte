{"sha": "004d5e672e9b2734a4c27f0e20504fc615da3476", "log": "Add an unsynchronized implementation of the Stack API (extends ArrayList instead of Vector) for faster stack processing in single threaded environments.  TODO:  Finish the unit tests (coming soon).   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.1 2001/04/14 19:32:37 craigmcc Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2001/04/14 19:32:37 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+\n+package org.apache.commons.collections;\n+\n+\n+import java.util.ArrayList;\n+import java.util.EmptyStackException;\n+\n+\n+/**\n+ * An implementation of the {@link java.util.Stack} API that is based on an\n+ * <code>ArrayList</code> instead of a <code>Vector</code>, so it is not\n+ * synchronized to protect against multi-threaded access.  The implementation\n+ * is therefore operates faster in environments where you do not need to\n+ * worry about multiple thread contention.\n+ *\n+ * @author Craig R. McClanahan\n+ * @version $Revision: 1.1 $ $Date: 2001/04/14 19:32:37 $\n+ * @see java.util.Stack\n+ */\n+\n+public class ArrayStack extends ArrayList {\n+\n+\n+    // --------------------------------------------------------- Public Methods\n+\n+\n+    /**\n+     * Return <code>true</code> if this stack is currently empty.\n+     */\n+    public boolean empty() {\n+\n+        return (size() == 0);\n+\n+    }\n+\n+\n+    /**\n+     * Return the top item off of this stack without removing it.\n+     *\n+     * @exception EmptyStackExceptino if the stack is empty\n+     */\n+    public Object peek() throws EmptyStackException {\n+\n+        int n = size();\n+        if (n <= 0)\n+            throw new EmptyStackException();\n+        else\n+            return (get(n - 1));\n+\n+    }\n+\n+\n+    /**\n+     * Pop the top item off of this stack and return it.\n+     *\n+     * @exception EmptyStackException if the stack is empty\n+     */\n+    public Object pop() throws EmptyStackException {\n+\n+        int n = size();\n+        if (n <= 0)\n+            throw new EmptyStackException();\n+        else\n+            return (remove(n - 1));\n+\n+    }\n+\n+\n+    /**\n+     * Push a new item onto the top of this stack.  The pushed item is also\n+     * returned.\n+     *\n+     * @param item Item to be added\n+     */\n+    public Object push(Object item) {\n+\n+        if (item == null)\n+            throw new NullPointerException();\n+        add(item);\n+        return (item);\n+\n+    }\n+\n+\n+    /**\n+     * Return the one-based position of the distance from the top that the\n+     * specified object exists on this stack, where the top-most element is\n+     * considered to be at distance <code>1</code>.  If the object is not\n+     * present on the stack, return <code>-1</code> instead.  The\n+     * <code>equals()</code> method is used to compare to the items\n+     * in this stack.\n+     *\n+     * @param o Object to be searched for\n+     */\n+    public int search(Object o) {\n+\n+        int i = size() - 1;        // Current index\n+        int n = 1;                 // Current distance\n+        while (i >= 0) {\n+            if (o.equals(get(i)))\n+                return (n);\n+            i--;\n+            n++;\n+        }\n+        return (-1);\n+\n+    }\n+\n+\n+}\n--- a/src/test/org/apache/commons/collections/TestAll.java\n+++ b/src/test/org/apache/commons/collections/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestAll.java,v 1.1 2001/04/14 15:39:25 rwaldhoff Exp $\n- * $Revision: 1.1 $\n- * $Date: 2001/04/14 15:39:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestAll.java,v 1.2 2001/04/14 19:32:38 craigmcc Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2001/04/14 19:32:38 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Rodney Waldhoff\n- * @version $Id: TestAll.java,v 1.1 2001/04/14 15:39:25 rwaldhoff Exp $\n+ * @version $Id: TestAll.java,v 1.2 2001/04/14 19:32:38 craigmcc Exp $\n  */\n public class TestAll extends TestCase {\n     public TestAll(String testName) {\n \n     public static Test suite() {\n         TestSuite suite = new TestSuite();\n+        suite.addTest(TestArrayStack.suite());\n         suite.addTest(TestCursorableLinkedList.suite());\n         return suite;\n     }\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/TestArrayStack.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestArrayStack.java,v 1.1 2001/04/14 19:32:38 craigmcc Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2001/04/14 19:32:38 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections;\n+\n+import junit.framework.*;\n+import java.util.*;\n+\n+/**\n+ * @author Craig McClanahan\n+ * @version $Id: TestArrayStack.java,v 1.1 2001/04/14 19:32:38 craigmcc Exp $\n+ */\n+\n+public class TestArrayStack extends TestList {\n+\n+    public TestArrayStack(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestArrayStack.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestArrayStack.class.getName() };\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    private ArrayStack stack = null;\n+\n+    public void setUp() {\n+        stack = new ArrayStack();\n+        setList(stack);\n+    }\n+\n+\n+    public void testNew() {\n+        assert(stack.empty());\n+    }\n+\n+\n+}", "timestamp": 987276758, "metainfo": ""}