{"sha": "fc502e2479c05a1be53bf510bc9fb331a52e3862", "log": "Add missing since tags.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n      * @return a new ordered set\n      * @throws IllegalArgumentException if set or list is null\n      * @throws IllegalArgumentException if either the set or list is not empty\n-     * @since 3.1\n+     * @since 4.0\n      */\n     public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list) {\n         if (set == null) {\n      * @param set the set to decorate, must not be null\n      * @return a new ordered set\n      * @throws IllegalArgumentException if set is null\n+     * @since 4.0\n      */\n     public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set) {\n         return new ListOrderedSet<E>(set);\n      * @param list the list to decorate, must not be null\n      * @return a new ordered set\n      * @throws IllegalArgumentException if list is null\n+     * @since 4.0\n      */\n     public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list) {\n         if (list == null) {\n--- a/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/MapBackedSet.java\n      * @param map  the map to decorate, must not be null\n      * @return a new map backed set\n      * @throws IllegalArgumentException if set is null\n+     * @since 4.0\n      */\n     public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map) {\n         return mapBackedSet(map, null);\n      * @param dummyValue  the dummy value to use\n      * @return a new map backed set\n      * @throws IllegalArgumentException if map is null\n+     * @since 4.0\n      */\n     public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue) {\n         if (map == null) {\n--- a/src/main/java/org/apache/commons/collections4/set/PredicatedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/PredicatedSet.java\n      * @return a decorated set\n      * @throws IllegalArgumentException if set or predicate is null\n      * @throws IllegalArgumentException if the set contains invalid elements\n+     * @since 4.0\n      */\n     public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate) {\n         return new PredicatedSet<E>(set, predicate);\n--- a/src/main/java/org/apache/commons/collections4/set/PredicatedSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/PredicatedSortedSet.java\n      * @return a new predicated sorted set.\n      * @throws IllegalArgumentException if set or predicate is null\n      * @throws IllegalArgumentException if the set contains invalid elements\n+     * @since 4.0\n      */\n     public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set,\n                                                                  final Predicate<? super E> predicate) {\n--- a/src/main/java/org/apache/commons/collections4/set/TransformedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/TransformedSet.java\n      * @param transformer  the transformer to use for conversion, must not be null\n      * @return a new transformed set\n      * @throws IllegalArgumentException if set or transformer is null\n+     * @since 4.0\n      */\n     public static <E> TransformedSet<E> transformingSet(final Set<E> set,\n             final Transformer<? super E, ? extends E> transformer) {\n--- a/src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java\n      * @param transformer  the transformer to use for conversion, must not be null\n      * @return a new transformed {@link SortedSet}\n      * @throws IllegalArgumentException if set or transformer is null\n+     * @since 4.0\n      */\n     public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set,\n             final Transformer<? super E, ? extends E> transformer) {\n--- a/src/main/java/org/apache/commons/collections4/set/UnmodifiableSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/UnmodifiableSet.java\n      * @param set  the set to decorate, must not be null\n      * @return a new unmodifiable set\n      * @throws IllegalArgumentException if set is null\n+     * @since 4.0\n      */\n     public static <E> Set<E> unmodifiableSet(final Set<E> set) {\n         if (set instanceof Unmodifiable) {\n--- a/src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java\n      * @param set  the set to decorate, must not be null\n      * @return a new unmodifiable {@link SortedSet}\n      * @throws IllegalArgumentException if set is null\n+     * @since 4.0\n      */\n     public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set) {\n         if (set instanceof Unmodifiable) {", "timestamp": 1367791321, "metainfo": ""}