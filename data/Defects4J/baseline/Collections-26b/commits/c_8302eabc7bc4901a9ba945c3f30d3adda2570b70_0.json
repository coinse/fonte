{"sha": "8302eabc7bc4901a9ba945c3f30d3adda2570b70", "log": "add IntCollection, IntList, IntIterator, IntListIterator deprecate various AbstractIntList implementations as a warning of impending change (note that nothing in primitives.* has yet been released)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/primitives/AbstractIntArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractIntArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntArrayList.java,v 1.6 2002/10/12 22:15:20 scolebourne Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/10/12 22:15:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntArrayList.java,v 1.7 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2003/01/04 15:00:57 $\n  *\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * primitive values will be stored in an underlying primitive array, and\n  * provides methods for manipulating the capacity of that array.<P>\n  *\n- * @version $Revision: 1.6 $ $Date: 2002/10/12 22:15:20 $\n+ * @version $Revision: 1.7 $ $Date: 2003/01/04 15:00:57 $\n  * @author Rodney Waldhoff \n+ * \n+ * @deprecated This class will soon change to implement \n+ *             {@link IntList} and not {@link List}. Adapters\n+ *             between {@link List} and {@link IntList} will be\n+ *             provided.\n  */\n public abstract class AbstractIntArrayList extends AbstractIntList {\n \n--- a/src/java/org/apache/commons/collections/primitives/AbstractIntList.java\n+++ b/src/java/org/apache/commons/collections/primitives/AbstractIntList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntList.java,v 1.4 2002/10/12 22:15:20 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/10/12 22:15:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/AbstractIntList.java,v 1.5 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2003/01/04 15:00:57 $\n  *\n  * ====================================================================\n  *\n  * {@link #removeIntAt(int)} and {@link #clear()} methods.  You may want \n  * to override the other methods to increase performance.<P>\n  *\n- * @version $Revision: 1.4 $ $Date: 2002/10/12 22:15:20 $\n+ * @version $Revision: 1.5 $ $Date: 2003/01/04 15:00:57 $\n  * @author Rodney Waldhoff \n+ * @deprecated To be replaced by {@link IntList}.  If useful, an adapter to this interface could be provided.\n  */\n public abstract class AbstractIntList extends AbstractList {\n \n--- a/src/java/org/apache/commons/collections/primitives/IntArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/IntArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/10/12 22:15:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntArrayList.java,v 1.8 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2003/01/04 15:00:57 $\n  *\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * {@link java.util.ArrayList} of {@link Integer} values and allows for\n  * better compile-time type checking.<P>\n  *\n- * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n+ * @version $Revision: 1.8 $ $Date: 2003/01/04 15:00:57 $\n  * @author Rodney Waldhoff \n+ * @deprecated This class will soon change to implement \n+ *             {@link IntList} and not {@link List}. Adapters\n+ *             between {@link List} and {@link IntList} will be\n+ *             provided.\n  */\n public class IntArrayList extends AbstractIntArrayList implements Serializable {\n \n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/IntCollection.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntCollection.java,v 1.1 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/01/04 15:00:57 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+/**\n+ * A {@link java.util.Collection collection} of int values.\n+ *\n+ * @version $Revision: 1.1 $ $Date: 2003/01/04 15:00:57 $\n+ * @author Rodney Waldhoff \n+ */\n+public interface IntCollection {\n+          \n+    /** \n+     * Ensures that I contain the specified element \n+     * (optional operation).\n+     */\n+    boolean add(int element);\n+\n+    /** \n+     * {@link #add Adds} all of the elements in the \n+     * specified collection to me \n+     * (optional operation). \n+     */ \n+    boolean addAll(IntCollection c);\n+    \n+    /** \n+     * Removes all my elements \n+     * (optional operation). \n+     */\n+    void clear();\n+\n+    /** \n+     * Returns <code>true</code> iff I contain \n+     * the specified element. \n+     */\n+    boolean contains(int element);\n+    \n+    /** \n+     * Returns <code>true</code> iff I contain \n+     * all of the elements in the given collection. \n+     */\n+    boolean containsAll(IntCollection c);\n+    \n+    /** \n+     * Compares the specified object with me for \n+     * equality. \n+     */\n+    boolean equals(Object o);\n+    \n+    /** \n+     * Returns my hash code value. \n+     */\n+    int hashCode();\n+    \n+    /** \n+     * Returns true iff I contains no elements. \n+     */\n+    boolean isEmpty();\n+    \n+    /** \n+     * Returns an iterator over all my elements.\n+     */\n+    IntIterator iterator();\n+     \n+    /** \n+     * Removes the first occurrence of the \n+     * specified element (optional operation). \n+     */\n+    boolean removeElement(int element);\n+    \n+    /** \n+     * Removes from all the elements that are \n+     * contained in the specified collection \n+     * (optional operation). \n+     */\n+    boolean removeAll(IntCollection c);\n+    \n+    /** \n+     * Retains only the elements that are \n+     * contained in the specified collection \n+     * (optional operation). \n+     */\n+    boolean retainAll(IntCollection c);\n+    \n+    /** \n+     * Returns the number of elements I contain. \n+     */\n+    int size();\n+    \n+    /** \n+     * Returns an array containing all my elements.\n+     */\n+    int[] toArray();\n+    \n+    /** \n+     * Returns an array containing all of the elements \n+     * in me, using the given array if it is large enough.\n+     */\n+    int[] toArray(int[] a);\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/IntIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntIterator.java,v 1.1 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/01/04 15:00:57 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+/**\n+ * A {@link java.util.Iterator iterator} over int values.\n+ *\n+ * @version $Revision: 1.1 $ $Date: 2003/01/04 15:00:57 $\n+ * @author Rodney Waldhoff \n+ */\n+public interface IntIterator {\n+    /** \n+     * Returns <code>true</code> iff \n+     * I have more elements. \n+     */\n+    boolean hasNext();\n+    \n+    /** \n+     * Returns the next element in me.\n+     * @throws NoSuchElementException if there is no next element\n+     */          \n+    int next();\n+    \n+    /** \n+     * Removes from my underlying collection the last \n+     * element {@link #next returned} by me \n+     * (optional operation). \n+     * @throws UnsupportedOperationException if remove is not supported\n+     * @throws IllegalStateException if {@link #next} has not yet been \n+     *         called, or {@link #remove} has already been called after \n+     *         the last call to {@link #next}.\n+     */          \n+    void remove();\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/IntList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntList.java,v 1.1 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/01/04 15:00:57 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+/**\n+ * An ordered collection (a {@link java.util.List}) of int values.\n+ *\n+ * @version $Revision: 1.1 $ $Date: 2003/01/04 15:00:57 $\n+ * @author Rodney Waldhoff \n+ */\n+public interface IntList {\n+    /** \n+     * Inserts the specified element at the specified position \n+     * within me (optional operation). \n+     */\n+    void add(int index, int element);\n+          \n+    /** \n+     * Returns the element at the specified position within \n+     * me. \n+     */\n+    Object get(int index);\n+    \n+    /** \n+     * Returns the index of the first occurrence \n+     * of the specified element within me, \n+     * or <code>-1</code> if I do not contain \n+     * the this element. \n+     */\n+    int indexOf(int element);\n+     \n+    /** \n+     * Returns the index of the last occurrence \n+     * of the specified element within me, \n+     * or -1 if I do not contain this element. \n+     */\n+    int lastIndexOf(int element);\n+    \n+    /** \n+     * Returns a list iterator over all my elements.\n+     */\n+    IntListIterator listIterator();\n+    \n+    /** \n+     * Returns a list iterator over my elements,\n+     * starting at the specified position. The \n+     * specified index indicates the first element \n+     * that would be returned by an initial call \n+     * to the next method. An initial call to the \n+     * previous method would return the element \n+     * with the specified index minus one.\n+     */\n+    IntListIterator listIterator(int index);\n+    \n+    /** \n+     * Removes the element at the specified position in \n+     * me (optional operation). \n+     */\n+    int removeElementAt(int index);\n+   \n+    /** \n+     * Replaces the element at the specified \n+     * position in me with the specified element\n+     * (optional operation). \n+     */\n+    int set(int index, int element);\n+    \n+    /** \n+     * Returns a view of the elements within me \n+     * between the specified fromIndex, inclusive, and \n+     * toIndex, exclusive. \n+     */\n+    IntList subList(int fromIndex, int toIndex);\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/IntListIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntListIterator.java,v 1.1 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/01/04 15:00:57 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+/**\n+ * A {@link java.util.ListIterator list iterator} over int values.\n+ *\n+ * @version $Revision: 1.1 $ $Date: 2003/01/04 15:00:57 $\n+ * @author Rodney Waldhoff \n+ */\n+public interface IntListIterator extends IntIterator {\n+    void add(int element);\n+    boolean hasNext();\n+    boolean hasPrevious();\n+    int next();\n+    int nextIndex();\n+    int previous();\n+    int previousIndex();\n+    void remove();\n+    void set(int element);\n+}\n--- a/src/java/org/apache/commons/collections/primitives/UnsignedShortArrayList.java\n+++ b/src/java/org/apache/commons/collections/primitives/UnsignedShortArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedShortArrayList.java,v 1.7 2002/10/12 22:15:20 scolebourne Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/10/12 22:15:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/UnsignedShortArrayList.java,v 1.8 2003/01/04 15:00:57 rwaldhoff Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2003/01/04 15:00:57 $\n  *\n  * ====================================================================\n  *\n  * than a {@link java.util.ArrayList} and offers better compile-time type\n  * checking.\n  *\n- * @version $Revision: 1.7 $ $Date: 2002/10/12 22:15:20 $\n+ * @version $Revision: 1.8 $ $Date: 2003/01/04 15:00:57 $\n  * @author Rodney Waldhoff \n+ *\n+ * @deprecated This class will soon change to implement \n+ *             {@link IntList} and not {@link List}. Adapters\n+ *             between {@link List} and {@link IntList} will be\n+ *             provided.\n+ * \n  */\n public class UnsignedShortArrayList extends AbstractIntArrayList implements Serializable {\n ", "timestamp": 1041692457, "metainfo": ""}