{"sha": "c9ac0e22a3098de9e11de753b0a8f30b5226a7cd", "log": "Avoid some null-based tests in JDK1.2   ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.6 $ $Date: 2004/01/14 21:34:34 $\n+ * @version $Revision: 1.7 $ $Date: 2004/01/24 21:48:27 $\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n+\n+    /**\n+     * JDK1.2 has bugs in null handling of Maps, especially HashMap.Entry.toString\n+     * This avoids nulls for JDK1.2\n+     */\n+    private static final boolean JDK12;\n+    static {\n+        String str = System.getProperty(\"java.version\");\n+        JDK12 = str.startsWith(\"1.2\");\n+    }\n \n     // These instance variables are initialized with the reset method.\n     // Tests for map methods that alter the map (put, putAll, remove) \n             \"hello\", \"goodbye\", \"we'll\", \"see\", \"you\", \"all\", \"again\",\n             \"key\",\n             \"key2\",\n-            (isAllowNullKey()) ? null : \"nonnullkey\"\n+            (isAllowNullKey() && !JDK12) ? null : \"nonnullkey\"\n         };\n         return result;\n     }\n         Object[] result = new Object[] {\n             \"blahv\", \"foov\", \"barv\", \"bazv\", \"tmpv\", \"goshv\", \"gollyv\", \"geev\",\n             \"hellov\", \"goodbyev\", \"we'llv\", \"seev\", \"youv\", \"allv\", \"againv\",\n-            (isAllowNullValue()) ? null : \"nonnullvalue\",\n+            (isAllowNullValue() && !JDK12) ? null : \"nonnullvalue\",\n             \"value\",\n             (isAllowDuplicateValues()) ? \"value\" : \"value2\",\n         };\n      */\n     public Object[] getNewSampleValues() {\n         Object[] result = new Object[] {\n-            (isAllowNullValue() && isAllowDuplicateValues()) ? null : \"newnonnullvalue\",\n+            (isAllowNullValue() && !JDK12 && isAllowDuplicateValues()) ? null : \"newnonnullvalue\",\n             \"newvalue\",\n             (isAllowDuplicateValues()) ? \"newvalue\" : \"newvalue2\",\n             \"newblahv\", \"newfoov\", \"newbarv\", \"newbazv\", \"newtmpv\", \"newgoshv\", ", "timestamp": 1074980907, "metainfo": ""}