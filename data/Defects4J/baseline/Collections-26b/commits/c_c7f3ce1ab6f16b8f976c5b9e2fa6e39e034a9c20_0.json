{"sha": "c7f3ce1ab6f16b8f976c5b9e2fa6e39e034a9c20", "log": "Fields can be private  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java\n public class ObjectGraphIterator<E> implements Iterator<E> {\n \n     /** The stack of iterators */\n-    protected final ArrayStack<Iterator<? extends E>> stack = new ArrayStack<Iterator<? extends E>>(8);\n+    private final ArrayStack<Iterator<? extends E>> stack = new ArrayStack<Iterator<? extends E>>(8);\n     /** The root object in the tree */\n-    protected E root;\n+    private E root;\n     /** The transformer to use */\n-    protected final Transformer<? super E, ? extends E> transformer;\n+    private final Transformer<? super E, ? extends E> transformer;\n \n     /** Whether there is another element in the iteration */\n-    protected boolean hasNext = false;\n+    private boolean hasNext = false;\n     /** The current iterator */\n-    protected Iterator<? extends E> currentIterator;\n+    private Iterator<? extends E> currentIterator;\n     /** The current value */\n-    protected E currentValue;\n+    private E currentValue;\n     /** The last used iterator, needed for remove() */\n-    protected Iterator<? extends E> lastUsedIterator;\n+    private Iterator<? extends E> lastUsedIterator;\n \n     //-----------------------------------------------------------------------\n     /**", "timestamp": 1367327488, "metainfo": ""}