{"sha": "640d3a7b30c9a214fdd896352cf70b6392865f4c", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n  * @see #getBooleanComparator\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 00:59:06 $\n+ * @version $Revision: 1.12 $ $Date: 2004/04/27 22:57:00 $\n  * \n  * @author Rodney Waldhoff\n  */\n public final class BooleanComparator implements Comparator, Serializable {\n \n     /**\n-     * Creates a <code>BooleanComparator</code>\n-     * that sorts <code>false</code> values before \n-     * <code>true</code> values.\n-     * \n+     * Creates a <code>BooleanComparator</code> that sorts\n+     * <code>false</code> values before <code>true</code> values.\n+     * <p>\n      * Equivalent to {@link #BooleanComparator(boolean) BooleanComparator(false)}.\n+     * <p>\n+     * Please use the static factory instead whenever possible.\n      */\n     public BooleanComparator() {\n         this(false);\n     }\n \n     /**\n-     * Creates a <code>BooleanComparator</code>\n-     * that sorts <code><i>trueFirst</i></code> values before \n+     * Creates a <code>BooleanComparator</code> that sorts\n+     * <code><i>trueFirst</i></code> values before \n      * <code>&#x21;<i>trueFirst</i></code> values.\n+     * <p>\n+     * Please use the static factories instead whenever possible.\n      * \n      * @param trueFirst when <code>true</code>, sort \n-     *        <code>true</code> {@link Boolean}s before\n-     *        <code>false</code> {@link Boolean}s.\n+     *  <code>true</code> boolean values before <code>false</code>\n      */\n     public BooleanComparator(boolean trueFirst) {\n         this.trueFirst = trueFirst;\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n-     * Compares two arbitrary Objects. When both arguments\n-     * are {@link Boolean}, this method is equivalent to \n+     * Compares two arbitrary Objects.\n+     * When both arguments are <code>Boolean</code>, this method is equivalent to \n      * {@link #compare(Boolean,Boolean) compare((Boolean)<i>o1</i>,(Boolean)<i>o2</i>)}.\n-     * When either argument is not a {@link Boolean}, this methods throws\n+     * When either argument is not a <code>Boolean</code>, this methods throws\n      * a {@link ClassCastException}.\n      * \n-     * @throws ClassCastException when either argument is not \n-     *         a {@link Boolean}\n+     * @throws ClassCastException when either argument is not <code>Boolean</code>\n      */\n     public int compare(Object o1, Object o2) {\n         return compare((Boolean)o1,(Boolean)o2);\n     }\n     \n     /**\n-     * Compares two non-<code>null</code> {@link Boolean}s\n+     * Compares two non-<code>null</code> <code>Boolean</code> objects\n      * according to the value of {@link #sortsTrueFirst}.\n      * \n      * @throws NullPointerException when either argument <code>null</code>\n         return trueFirst;\n     }\n     \n+    //-----------------------------------------------------------------------\n     /**\n      * Returns a BooleanComparator instance that sorts \n      * <code>true</code> values before <code>false</code> values.\n      * virtual machine.\n      * \n      * @param trueFirst when <code>true</code>, sort \n-     *        <code>true</code> {@link Boolean}s before\n-     *        <code>false</code> {@link Boolean}s.\n+     * <code>true</code> <code>Boolean</code>s before <code>false</code>\n      * @return a cached BooleanComparator instance\n      */\n     public static BooleanComparator getBooleanComparator(boolean trueFirst) {", "timestamp": 1083106620, "metainfo": ""}