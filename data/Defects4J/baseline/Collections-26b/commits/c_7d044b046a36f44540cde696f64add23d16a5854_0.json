{"sha": "7d044b046a36f44540cde696f64add23d16a5854", "log": "Change to UniquePredicate to avoid indirect references via PredicateUtils   ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n \n import java.util.Iterator;\n \n-import org.apache.commons.collections.PredicateUtils;\n+import org.apache.commons.collections.functors.UniquePredicate;\n \n /** \n  * A FilterIterator which only returns \"unique\" Objects.  Internally,\n  * and duplicate Objects are skipped.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision: 1.9 $ $Date: 2004/05/07 23:29:02 $\n  * \n  * @author Morgan Delagrange\n  */\n      *  @param iterator  the iterator to use\n      */\n     public UniqueFilterIterator( Iterator iterator ) {\n-        super(iterator, PredicateUtils.uniquePredicate());\n+        super(iterator, UniquePredicate.getInstance());\n     }\n \n }", "timestamp": 1083972542, "metainfo": ""}