{"sha": "aa959e46cf7f24967641ba57a1927449b21f5e0a", "log": "add generic TestMap test for http://issues.apache.org/bugzilla/show_bug.cgi?id=9573 (values isn't backed by map), but override the test in TestMultiHashMap for now   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestMap.java\n+++ b/src/test/org/apache/commons/collections/TestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.21 2002/11/01 19:07:53 rwaldhoff Exp $\n- * $Revision: 1.21 $\n- * $Date: 2002/11/01 19:07:53 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.22 2002/11/01 19:36:54 rwaldhoff Exp $\n+ * $Revision: 1.22 $\n+ * $Date: 2002/11/01 19:36:54 $\n  *\n  * ====================================================================\n  *\n  * @author Michael Smith\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n- * @version $Revision: 1.21 $ $Date: 2002/11/01 19:07:53 $\n+ * @version $Revision: 1.22 $ $Date: 2002/11/01 19:36:54 $\n  */\n public abstract class TestMap extends TestObject {\n \n         verify();\n     }\n \n+    /**\n+     * Tests that the {@link Map#values} collection is backed by\n+     * the underlying map by removing from the values collection\n+     * and testing if the value was removed from the map.\n+     * <p/>\n+     * We should really test the \"vice versa\" case--that values removed\n+     * from the map are removed from the values collection--also,\n+     * but that's a more difficult test to construct (lacking a\n+     * \"removeValue\" method.)\n+     * \n+     * @see http://issues.apache.org/bugzilla/show_bug.cgi?id=9573\n+     */\n+    public void testValuesRemovedFromValuesCollectionAreRemovedFromMap() {\n+        resetFull();\n+        Object[] sampleValues = getSampleValues();\n+        Collection values = map.values();\n+        for(int i=0;i<sampleValues.length;i++) {\n+            if(map.containsValue(sampleValues[i])) {\n+                while(values.contains(sampleValues[i])) {\n+                    try {\n+                        values.remove(sampleValues[i]);\n+                    } catch(UnsupportedOperationException e) {\n+                        // if values.remove is unsupported, just skip this test\n+                        return;\n+                    }\n+                }\n+                assertTrue(\"Value should have been removed from the underlying map.\",!map.containsValue(sampleValues[i]));\n+            }\n+        }\n+    }\n \n     /**\n      *  Utility methods to create an array of Map.Entry objects\n--- a/src/test/org/apache/commons/collections/TestMultiHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestMultiHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMultiHashMap.java,v 1.6 2002/10/12 22:36:22 scolebourne Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/10/12 22:36:22 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMultiHashMap.java,v 1.7 2002/11/01 19:36:54 rwaldhoff Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/11/01 19:36:54 $\n  *\n  * ====================================================================\n  *\n     public void testMapHashCode() {\n     }\n \n+    // since the MultiHashMap.values Collection isn't currently\n+    // backed by the map, we need to skip this test for now\n+    // fix bug 9573 <http://issues.apache.org/bugzilla/show_bug.cgi?id=9573>\n+    // and enable this test\n+    public void testValuesRemovedFromValuesCollectionAreRemovedFromMap() {\n+        // TODO: fix bug 9573 <http://issues.apache.org/bugzilla/show_bug.cgi?id=9573>\n+        // and enable this test\n+    }\n+\n     // The verification for the map and its entry set must also be overridden\n     // because the values are not going to be the same as the values in the\n     // confirmed map (they're going to be collections of values instead).", "timestamp": 1036179414, "metainfo": ""}