{"sha": "9979f0c49396693386b6a943409f77849d04623e", "log": "Casts away  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections/iterators/TestCollatingIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestCollatingIterator.java\n        CollatingIterator<Integer> collatingIterator2 = new CollatingIterator<Integer>(null, l1.iterator(), l2.iterator());\n        collatingIterator2.setComparator(new ComparableComparator<Integer>());\n        for ( ; collatingIterator2.hasNext(); i++ ) {\n-          Integer n = (Integer)collatingIterator2.next();\n+          Integer n = collatingIterator2.next();\n           assertEquals(\"wrong order\", (int)n, i + 1);\n        }\n        assertEquals(\"wrong size\", i, l1.size() + l2.size());\n--- a/src/test/java/org/apache/commons/collections/map/TestListOrderedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestListOrderedMap.java\n \n     @Override\n     public ListOrderedMap<K, V> makeObject() {\n-        return (ListOrderedMap<K, V>) ListOrderedMap.listOrderedMap(new HashMap<K, V>());\n+        return ListOrderedMap.listOrderedMap(new HashMap<K, V>());\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/collections/set/TestPredicatedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestPredicatedSet.java\n     protected Predicate<E> truePredicate = TruePredicate.<E>truePredicate();\n \n     protected PredicatedSet<E> decorateSet(Set<E> set, Predicate<? super E> predicate) {\n-        return (PredicatedSet<E>) PredicatedSet.predicatedSet(set, predicate);\n+        return PredicatedSet.predicatedSet(set, predicate);\n     }\n \n     @Override\n--- a/src/test/java/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n         };\n \n     protected PredicatedSortedSet<E> makeTestSet() {\n-        return (PredicatedSortedSet<E>) PredicatedSortedSet.predicatedSortedSet(new TreeSet<E>(), testPredicate);\n+        return PredicatedSortedSet.predicatedSortedSet(new TreeSet<E>(), testPredicate);\n     }\n \n     public void testGetSet() {", "timestamp": 1340501242, "metainfo": ""}