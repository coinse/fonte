{"sha": "775f3598fdd02c7c1589f18d8869036990082942", "log": "Improved javadoc of purge method. from Eduardo Francos, bug fix #14889   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/ReferenceMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ReferenceMap.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/10/12 22:15:18 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ReferenceMap.java,v 1.8 2003/01/25 12:33:02 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  *\n  */\n package org.apache.commons.collections;\n-\n \n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n-\n /**\n  *  Hashtable-based {@link Map} implementation that allows\n  *  mappings to be removed by the garbage collector.<P>\n  *  can use {@link java.util.Collections#synchronizedMap} to \n  *  provide synchronized access to a <Code>ReferenceMap</Code>.\n  *\n- *  @author Paul Jack \n- *  @version $Id: ReferenceMap.java,v 1.7 2002/10/12 22:15:18 scolebourne Exp $\n- *  @since 2.1\n- *  @see java.lang.ref.Reference\n+ * @see java.lang.ref.Reference\n+ * \n+ * @since Commons Collections 2.1\n+ * @version $Revision: 1.8 $ $Date: 2003/01/25 12:33:02 $\n+ * \n+ * @author Paul Jack\n  */\n public class ReferenceMap extends AbstractMap {\n \n \n \n     /**\n-     *  Purges stale mappings from this map.<P>\n-     *\n-     *  Ordinarily, stale mappings are only removed during\n-     *  a write operation; typically a write operation will    \n-     *  occur often enough that you'll never need to manually\n-     *  invoke this method.<P>\n-     *\n-     *  Note that this method is not synchronized!  Special\n-     *  care must be taken if, for instance, you want stale\n-     *  mappings to be removed on a periodic basis by some\n-     *  background thread.\n+     * Purges stale mappings from this map.\n+     * <p>\n+     * Ordinarily, stale mappings are only removed during\n+     * a write operation, although this method is called for both\n+     * read and write operations to maintain a consistent state.\n+     * <p>\n+     * Note that this method is not synchronized!  Special\n+     * care must be taken if, for instance, you want stale\n+     * mappings to be removed on a periodic basis by some\n+     * background thread.\n      */\n     private void purge() {\n         Reference ref = queue.poll();", "timestamp": 1043497982, "metainfo": ""}