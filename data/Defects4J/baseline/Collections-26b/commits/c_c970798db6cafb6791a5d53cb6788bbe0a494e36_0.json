{"sha": "c970798db6cafb6791a5d53cb6788bbe0a494e36", "log": "BoundedFifoBuffer/CircularFifoBuffer - Fix serialization to work in case where buffer serialized when full bug 31433, from Kalle Gustafsson   ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.8 $ $Date: 2004/06/02 23:12:44 $\n+ * @version $Revision: 1.9 $ $Date: 2004/10/16 22:23:40 $\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n             elements[i] = in.readObject();\n         }\n         start = 0;\n-        end = size;\n         full = (size == maxElements);\n+        if (full) {\n+            end = 0;\n+        } else {\n+            end = size;\n+        }\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n  */\n package org.apache.commons.collections.buffer;\n \n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Iterator;\n /**\n  * Test cases for CircularFifoBuffer.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/06/02 23:12:45 $\n+ * @version $Revision: 1.5 $ $Date: 2004/10/16 22:23:41 $\n  * \n  * @author Stephen Colebourne\n  */\n         }\n         fail();\n     }\n+    \n+    public void testRepeatedSerialization() throws Exception {\n+        // bug 31433\n+        CircularFifoBuffer b = new CircularFifoBuffer(2);\n+        b.add(\"a\");\n+        assertEquals(1, b.size());\n+        assertEquals(true, b.contains(\"a\"));\n+        \n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        new ObjectOutputStream(bos).writeObject(b);\n+        \n+        CircularFifoBuffer b2 = (CircularFifoBuffer) new ObjectInputStream(\n+            new ByteArrayInputStream(bos.toByteArray())).readObject();\n+        \n+        assertEquals(1, b2.size());\n+        assertEquals(true, b2.contains(\"a\"));\n+        b2.add(\"b\");\n+        assertEquals(2, b2.size());\n+        assertEquals(true, b2.contains(\"a\"));\n+        assertEquals(true, b2.contains(\"b\"));\n+        \n+        bos = new ByteArrayOutputStream();\n+        new ObjectOutputStream(bos).writeObject(b2);\n+        \n+        CircularFifoBuffer b3 = (CircularFifoBuffer) new ObjectInputStream(\n+            new ByteArrayInputStream(bos.toByteArray())).readObject();\n+        \n+        assertEquals(2, b3.size());\n+        assertEquals(true, b3.contains(\"a\"));\n+        assertEquals(true, b3.contains(\"b\"));\n+        b3.add(\"c\");\n+        assertEquals(2, b3.size());\n+        assertEquals(true, b3.contains(\"b\"));\n+        assertEquals(true, b3.contains(\"c\"));\n+    }\n \n     public String getCompatibilityVersion() {\n         return \"3.1\";", "timestamp": 1097965421, "metainfo": ""}