{"sha": "df79bf3af4b8304694b67944e9e090dce92d8af2", "log": "PR:10168 Submitted by:Maarten Coene (MacBelgium at toughguy dot net)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.8 2002/06/12 03:59:15 mas Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/06/12 03:59:15 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.9 2002/08/10 00:36:34 pjack Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/08/10 00:36:34 $\n  *\n  * ====================================================================\n  *\n  * @author Rodney Waldhoff\n  *\n  * @since 1.0\n- * @version $Id: CollectionUtils.java,v 1.8 2002/06/12 03:59:15 mas Exp $\n+ * @version $Id: CollectionUtils.java,v 1.9 2002/08/10 00:36:34 pjack Exp $\n  */\n public class CollectionUtils {\n \n         else if(obj instanceof Map) {\n             Map map = (Map)obj;\n             Iterator iterator = map.keySet().iterator();\n-            while(iterator.hasNext()) {\n-                idx--;\n-                if(idx == -1) {\n-                    return iterator.next();\n-                } else {\n-                    iterator.next();\n-                }\n-            }\n+            return index(iterator, idx);\n         } \n         else if(obj instanceof List) {\n             return ((List)obj).get(idx);\n             }\n         } \n         else if(obj instanceof Iterator) {\n-            Iterator iterator = (Iterator)obj;\n-            while(iterator.hasNext()) {\n-                idx--;\n-                if(idx == -1) {\n-                    return iterator.next();\n-                } else {\n-                    iterator.next();\n-                }\n-            }\n+            return index((Iterator)obj, idx);\n+        }\n+        else if(obj instanceof Collection) {\n+            Iterator iterator = ((Collection)obj).iterator();\n+            return index(iterator, idx);\n         }\n         return obj;\n+    }\n+\n+    private static Object index(Iterator iterator, int idx) {\n+        while(iterator.hasNext()) {\n+            idx--;\n+            if(idx == -1) {\n+                return iterator.next();\n+            } else {\n+                iterator.next();\n+            }\n+        }\n+        return iterator;\n     }\n \n     /** Returns an Iterator for the given object. Currently this method can handle\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCollectionUtils.java,v 1.2 2001/07/14 23:33:27 craigmcc Exp $\n- * $Revision: 1.2 $\n- * $Date: 2001/07/14 23:33:27 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCollectionUtils.java,v 1.3 2002/08/10 00:36:34 pjack Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/08/10 00:36:34 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Rodney Waldhoff\n- * @version $Id: TestCollectionUtils.java,v 1.2 2001/07/14 23:33:27 craigmcc Exp $\n+ * @version $Id: TestCollectionUtils.java,v 1.3 2002/08/10 00:36:34 pjack Exp $\n  */\n public class TestCollectionUtils extends TestCase {\n     public TestCollectionUtils(String testName) {\n         assertTrue(CollectionUtils.isEqualCollection(a,b));\n         assertTrue(CollectionUtils.isEqualCollection(b,a));\n     }\n+\n+\n+    public void testIndex() {\n+        Map map = new HashMap();\n+        map.put(new Integer(0), \"element\");\n+        Object test = CollectionUtils.index(map, 0);\n+        assertTrue(test.equals(\"element\"));\n+\n+        List list = new ArrayList();\n+        list.add(\"element\");\n+        test = CollectionUtils.index(list, 0);\n+        assertTrue(test.equals(\"element\"));\n+\n+        Bag bag = new HashBag();\n+        bag.add(\"element\", 1);\n+        test = CollectionUtils.index(bag, 0);\n+        assertTrue(test.equals(\"element\"));\n+    }\n }", "timestamp": 1028939794, "metainfo": ""}