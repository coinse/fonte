{"sha": "8dbaeed44c26d3fc856a4e4d73fc020e06cbf34a", "log": "convert \"assertTrue(a.equals(b))\" to the equivalent but better reported \"assertEquals(a,b)\"   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCollectionUtils.java,v 1.25 2003/10/05 21:03:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCollectionUtils.java,v 1.26 2003/10/09 10:39:16 rwaldhoff Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n  * \n- * @version $Revision: 1.25 $ $Date: 2003/10/05 21:03:44 $\n+ * @version $Revision: 1.26 $ $Date: 2003/10/09 10:39:16 $\n  */\n public class TestCollectionUtils extends TestCase {\n     \n         Map map = new HashMap();\n         map.put(\"zeroKey\", \"zero\");\n         map.put(\"oneKey\", \"one\");\n+\n         Object test = CollectionUtils.get(map, 0);\n-        assertTrue(((Map.Entry) test).getKey().equals(\"zeroKey\"));\n-        assertTrue(((Map.Entry) test).getValue().equals(\"zero\"));\n+        assertEquals(\"zeroKey\",((Map.Entry) test).getKey());\n+        assertEquals(\"zero\",((Map.Entry) test).getValue());\n         test = CollectionUtils.get(map, 1);\n-        assertTrue(((Map.Entry) test).getKey().equals(\"oneKey\"));\n-        assertTrue(((Map.Entry) test).getValue().equals(\"one\"));\n+        assertEquals(\"oneKey\",((Map.Entry) test).getKey());\n+        assertEquals(\"one\",((Map.Entry) test).getValue());\n         \n         // Map index out of range\n         try {\n         map2.put(\"zeroKey\", \"zero\");\n         map2.put(\"oneKey\", \"one\");\n         test = CollectionUtils.get(map2, 1);\n-        assertTrue(((Map.Entry) test).getKey().equals(\"zeroKey\"));\n-        assertTrue(((Map.Entry) test).getValue().equals(\"zero\"));\n+        assertEquals(\"zeroKey\",((Map.Entry) test).getKey());\n+        assertEquals(\"zero\",((Map.Entry) test).getValue());\n         test = CollectionUtils.get(map2, 0);\n-        assertTrue(((Map.Entry) test).getKey().equals(\"oneKey\"));\n-        assertTrue(((Map.Entry) test).getValue().equals(\"one\"));\n+        assertEquals(\"oneKey\",((Map.Entry) test).getKey());\n+        assertEquals(\"one\",((Map.Entry) test).getValue());\n                 \n         // List, entry exists\n         List list = new ArrayList();\n         list.add(\"zero\");\n         list.add(\"one\");\n         test = CollectionUtils.get(list, 0);\n-        assertTrue(test.equals(\"zero\"));\n+        assertEquals(\"zero\",test);\n         test = CollectionUtils.get(list, 1);\n-        assertTrue(test.equals(\"one\"));\n+        assertEquals(\"one\",test);\n         \n         // list, non-existent entry -- IndexOutOfBoundsException\n         try {\n         // Iterator, entry exists\n         Iterator iterator = list.iterator();\n         test = CollectionUtils.get(iterator,0);\n-        assertTrue(test.equals(\"zero\"));\n+        assertEquals(\"zero\",test);\n         iterator = list.iterator();\n         test = CollectionUtils.get(iterator,1);\n-        assertTrue(test.equals(\"one\"));\n+        assertEquals(\"one\",test);\n         \n         // Iterator, non-existent entry \n         try {\n         Vector vector = new Vector(list);\n         Enumeration enum = vector.elements();\n         test = CollectionUtils.get(enum,0);\n-        assertTrue(test.equals(\"zero\"));\n+        assertEquals(\"zero\",test);\n         enum = vector.elements();\n         test = CollectionUtils.get(enum,1);\n-        assertTrue(test.equals(\"one\"));\n+        assertEquals(\"one\",test);\n         \n         // Enumerator, non-existent entry \n         try {\n         Bag bag = new HashBag();\n         bag.add(\"element\", 1);\n         test = CollectionUtils.get(bag, 0);\n-        assertTrue(test.equals(\"element\"));\n+        assertEquals(\"element\",test);\n         \n         // Collection, non-existent entry\n         try {\n         objArray[0] = \"zero\";\n         objArray[1] = \"one\";\n         test = CollectionUtils.get(objArray,0);\n-        assertTrue(test.equals(\"zero\"));\n+        assertEquals(\"zero\",test);\n         test = CollectionUtils.get(objArray,1);\n-        assertTrue(test.equals(\"one\"));\n+        assertEquals(\"one\",test);\n         \n         // Object array, non-existent entry -- ArrayIndexOutOfBoundsException\n         try {", "timestamp": 1065695956, "metainfo": ""}