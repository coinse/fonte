{"sha": "a249eba720ca2b9430aa23d7091724659dcbbc0b", "log": "Add special cases for Set and Bag to CollectionUtils cardinality() bug 28629, from Jon Schewe   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n  * Provides utility methods and decorators for {@link Collection} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.60 $ $Date: 2004/04/01 22:43:13 $\n+ * @version $Revision: 1.61 $ $Date: 2004/04/27 20:00:18 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Janek Bogucki\n  * @author Phil Steitz\n  * @author Steven Melzer\n+ * @author Jon Schewe\n  */\n public class CollectionUtils {\n \n     }\n \n     /**\n-     * Returns the number of occurrences of <i>obj</i>\n-     * in <i>col</i>.\n+     * Returns the number of occurrences of <i>obj</i> in <i>coll</i>.\n      *\n      * @param obj  the object to find the cardinality of\n-     * @param col  the collection to search\n-     * @return the the number of occurrences of obj in col\n-     */\n-    public static int cardinality(Object obj, final Collection col) {\n+     * @param coll  the collection to search\n+     * @return the the number of occurrences of obj in coll\n+     */\n+    public static int cardinality(Object obj, final Collection coll) {\n+        if (coll instanceof Set) {\n+            return (coll.contains(obj) ? 1 : 0);\n+        }\n+        if (coll instanceof Bag) {\n+            return ((Bag) coll).getCount(obj);\n+        }\n         int count = 0;\n-        if(null == obj) {\n-            for(Iterator it = col.iterator();it.hasNext();) {\n-                if(null == it.next()) {\n+        if (obj == null) {\n+            for (Iterator it = coll.iterator();it.hasNext();) {\n+                if (it.next() == null) {\n                     count++;\n                 }\n             }\n         } else {\n-            for(Iterator it = col.iterator();it.hasNext();) {\n-                if(obj.equals(it.next())) {\n+            for (Iterator it = coll.iterator();it.hasNext();) {\n+                if (obj.equals(it.next())) {\n                     count++;\n                 }\n             }\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n  * @author Phil Steitz\n  * @author Steven Melzer\n  * \n- * @version $Revision: 1.37 $ $Date: 2004/04/01 22:43:12 $\n+ * @version $Revision: 1.38 $ $Date: 2004/04/27 20:00:18 $\n  */\n public class TestCollectionUtils extends TestCase {\n     \n     }\n \n     public void testCardinality() {\n-        assertEquals(1,CollectionUtils.cardinality(\"a\",collectionA));\n-        assertEquals(2,CollectionUtils.cardinality(\"b\",collectionA));\n-        assertEquals(3,CollectionUtils.cardinality(\"c\",collectionA));\n-        assertEquals(4,CollectionUtils.cardinality(\"d\",collectionA));\n-        assertEquals(0,CollectionUtils.cardinality(\"e\",collectionA));\n-\n-        assertEquals(0,CollectionUtils.cardinality(\"a\",collectionB));\n-        assertEquals(4,CollectionUtils.cardinality(\"b\",collectionB));\n-        assertEquals(3,CollectionUtils.cardinality(\"c\",collectionB));\n-        assertEquals(2,CollectionUtils.cardinality(\"d\",collectionB));\n-        assertEquals(1,CollectionUtils.cardinality(\"e\",collectionB));\n+        assertEquals(1, CollectionUtils.cardinality(\"a\", collectionA));\n+        assertEquals(2, CollectionUtils.cardinality(\"b\", collectionA));\n+        assertEquals(3, CollectionUtils.cardinality(\"c\", collectionA));\n+        assertEquals(4, CollectionUtils.cardinality(\"d\", collectionA));\n+        assertEquals(0, CollectionUtils.cardinality(\"e\", collectionA));\n+\n+        assertEquals(0, CollectionUtils.cardinality(\"a\", collectionB));\n+        assertEquals(4, CollectionUtils.cardinality(\"b\", collectionB));\n+        assertEquals(3, CollectionUtils.cardinality(\"c\", collectionB));\n+        assertEquals(2, CollectionUtils.cardinality(\"d\", collectionB));\n+        assertEquals(1, CollectionUtils.cardinality(\"e\", collectionB));\n+\n+        Set set = new HashSet();\n+        set.add(\"A\");\n+        set.add(\"C\");\n+        set.add(\"E\");\n+        set.add(\"E\");\n+        assertEquals(1, CollectionUtils.cardinality(\"A\", set));\n+        assertEquals(0, CollectionUtils.cardinality(\"B\", set));\n+        assertEquals(1, CollectionUtils.cardinality(\"C\", set));\n+        assertEquals(0, CollectionUtils.cardinality(\"D\", set));\n+        assertEquals(1, CollectionUtils.cardinality(\"E\", set));\n+\n+        Bag bag = new HashBag();\n+        bag.add(\"A\", 3);\n+        bag.add(\"C\");\n+        bag.add(\"E\");\n+        bag.add(\"E\");\n+        assertEquals(3, CollectionUtils.cardinality(\"A\", bag));\n+        assertEquals(0, CollectionUtils.cardinality(\"B\", bag));\n+        assertEquals(1, CollectionUtils.cardinality(\"C\", bag));\n+        assertEquals(0, CollectionUtils.cardinality(\"D\", bag));\n+        assertEquals(2, CollectionUtils.cardinality(\"E\", bag));\n     }\n     \n     public void testCardinalityOfNull() {", "timestamp": 1083096018, "metainfo": ""}