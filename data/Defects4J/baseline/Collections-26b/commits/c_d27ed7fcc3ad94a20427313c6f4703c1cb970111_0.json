{"sha": "d27ed7fcc3ad94a20427313c6f4703c1cb970111", "log": "added unit test to insure backward compatibility of externalized LRUMaps   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.6 2002/02/14 20:57:59 morgand Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/02/14 20:57:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.7 2002/02/14 22:42:45 morgand Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/02/14 22:42:45 $\n  *\n  * ====================================================================\n  *\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.util.Map;\n import java.util.HashMap;\n \n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n- * @version $Id: TestLRUMap.java,v 1.6 2002/02/14 20:57:59 morgand Exp $\n+ * @version $Id: TestLRUMap.java,v 1.7 2002/02/14 22:42:45 morgand Exp $\n  */\n public class TestLRUMap extends TestHashMap\n {\n                    map2.size() == 3);\n         assertTrue(\"map should contain the Integer(4) object\",\n                    map2.containsKey(new Integer(4)));\n+    }\n+\n+    public void testExternalizable() throws IOException, ClassNotFoundException {\n+        /*\n+         * Test object created with this code\n+         * Object created from CVS version 1.3 of this class\n+         *\n+        LRUMap map2 = new LRUMap(3);\n+        map2.put(new Integer(1),\"foo\");\n+        map2.put(new Integer(4),\"bar\");\n+        map2.put(new Integer(6),\"yeah\");\n+        map2.writeExternal(new ObjectOutputStream(new FileOutputStream(\"data/test/LRUMapVersion1.obj\")));\n+         */\n+\n+        // purposely start me out with a smaller capacity\n+        LRUMap map2 = new LRUMap(1);\n+        map2.readExternal(new ObjectInputStream(new FileInputStream(\"data/test/LRUMapVersion1.obj\")));\n+        assertTrue(\"Integer(1) equals foo\",map2.get(new Integer(1)).equals(\"foo\"));\n+        assertTrue(\"Integer(4) equals bar\",map2.get(new Integer(4)).equals(\"bar\"));\n+        assertTrue(\"Integer(6) equals yeah\",map2.get(new Integer(6)).equals(\"yeah\"));\n     }\n \n     /**", "timestamp": 1013726565, "metainfo": ""}