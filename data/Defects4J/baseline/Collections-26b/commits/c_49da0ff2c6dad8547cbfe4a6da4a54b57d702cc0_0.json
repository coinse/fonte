{"sha": "49da0ff2c6dad8547cbfe4a6da4a54b57d702cc0", "log": "svn:keywords correction  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n  *\n  * @see java.util.Stack\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.17 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Craig R. McClanahan\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/Bag.java\n+++ b/src/java/org/apache/commons/collections/Bag.java\n  * it has been decided to maintain backwards compatibility instead.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.18 $ $Date: 2004/05/03 15:12:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/BagUtils.java\n+++ b/src/java/org/apache/commons/collections/BagUtils.java\n  * {@link Bag} and {@link SortedBag} instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.20 $ $Date: 2004/04/01 20:12:00 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/BeanMap.java\n+++ b/src/java/org/apache/commons/collections/BeanMap.java\n  * property is considered non existent in the Map\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.29 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/BidiMap.java\n+++ b/src/java/org/apache/commons/collections/BidiMap.java\n  * duplicate keys. See the {@link #put} method description for more information.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.16 $ $Date: 2004/05/10 20:37:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/BinaryHeap.java\n+++ b/src/java/org/apache/commons/collections/BinaryHeap.java\n  * @deprecated Replaced by PriorityBuffer in buffer subpackage.\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.24 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Peter Donald\n  * @author Ram Chidambaram\n--- a/src/java/org/apache/commons/collections/BoundedCollection.java\n+++ b/src/java/org/apache/commons/collections/BoundedCollection.java\n  * @see CollectionUtils#maxSize\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2004/04/14 20:13:11 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Herve Quiroz\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/BoundedFifoBuffer.java\n  *\n  * @deprecated Moved to buffer subpackage. Due to be removed in v4.0.\n  * @since 2.1\n- * @version $Revision: 1.16 $ $Date: 2004/02/18 01:15:43 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/java/org/apache/commons/collections/BoundedMap.java\n+++ b/src/java/org/apache/commons/collections/BoundedMap.java\n  * associated with the maximum number of elements.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/Buffer.java\n+++ b/src/java/org/apache/commons/collections/Buffer.java\n  * {@link Bag}.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/java/org/apache/commons/collections/BufferOverflowException.java\n+++ b/src/java/org/apache/commons/collections/BufferOverflowException.java\n  * exceeded.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Avalon\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n--- a/src/java/org/apache/commons/collections/BufferUnderflowException.java\n+++ b/src/java/org/apache/commons/collections/BufferUnderflowException.java\n  * NOTE: From version 3.0, this exception extends NoSuchElementException.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/java/org/apache/commons/collections/BufferUtils.java\n+++ b/src/java/org/apache/commons/collections/BufferUtils.java\n  * Provides utility methods and decorators for {@link Buffer} instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.20 $ $Date: 2004/04/01 20:12:00 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/Closure.java\n+++ b/src/java/org/apache/commons/collections/Closure.java\n  * {@link ClosureUtils}. These include method invokation and for/while loops.\n  *  \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.11 $ $Date: 2004/04/14 20:08:56 $\n+ * @version $Revision$ $Date$\n  *\n  * @author James Strachan\n  * @author Nicola Ken Barozzi\n--- a/src/java/org/apache/commons/collections/ClosureUtils.java\n+++ b/src/java/org/apache/commons/collections/ClosureUtils.java\n  * All the supplied closures are Serializable.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/05/26 21:50:52 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n  * Provides utility methods and decorators for {@link Collection} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.65 $ $Date: 2004/12/24 11:03:45 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/ComparatorUtils.java\n+++ b/src/java/org/apache/commons/collections/ComparatorUtils.java\n  * in the <code>comparators</code> subpackage.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: $ $Date: $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CursorableLinkedList.java\n  *  and now returns the cursor from the listIterator method. Will be removed in v4.0\n  * @see java.util.LinkedList\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.23 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Janek Bogucki\n--- a/src/java/org/apache/commons/collections/DefaultMapBag.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapBag.java\n  *\n  * @deprecated Moved to bag subpackage as AbstractMapBag. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.17 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/DefaultMapEntry.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapEntry.java\n  *\n  * @deprecated Use the version in the keyvalue subpackage. Will be removed in v4.0\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.21 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n  * @see org.apache.commons.collections.bidimap.DualTreeBidiMap\n  * @see org.apache.commons.collections.bidimap.DualHashBidiMap\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.14 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Marc Johnson\n  */\n--- a/src/java/org/apache/commons/collections/EnumerationUtils.java\n+++ b/src/java/org/apache/commons/collections/EnumerationUtils.java\n  * Provides utility methods for {@link Enumeration} instances.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: EnumerationUtils.java,v 1.5 2004/02/18 01:15:42 scolebourne Exp $\n+ * @version $Id$\n  * \n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  */\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n  * it, go ahead and tune it up!\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.24 $ $Date: 2004/09/22 23:35:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n  * @author <a href=\"mailto:jon@latchkey.com\">Jon S. Stevens</a>\n--- a/src/java/org/apache/commons/collections/Factory.java\n+++ b/src/java/org/apache/commons/collections/Factory.java\n  * a copy of a prototype or a new instance.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.9 $ $Date: 2004/04/14 20:08:57 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Arron Bates\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/FactoryUtils.java\n+++ b/src/java/org/apache/commons/collections/FactoryUtils.java\n  * All the supplied factories are Serializable.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.14 $ $Date: 2004/04/14 21:47:47 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/FastArrayList.java\n+++ b/src/java/org/apache/commons/collections/FastArrayList.java\n  * Double-Checked Locking Idiom Is Broken Declaration</a>.</p>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.16 $ $Date: 2004/06/23 21:41:49 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/FastHashMap.java\n+++ b/src/java/org/apache/commons/collections/FastHashMap.java\n  * Double-Checked Locking Idiom Is Broken Declaration</a>.</p>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.17 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/FastTreeMap.java\n+++ b/src/java/org/apache/commons/collections/FastTreeMap.java\n  * Double-Checked Locking Idiom Is Broken Declaration</a>.</p>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.16 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/FunctorException.java\n+++ b/src/java/org/apache/commons/collections/FunctorException.java\n  * If required, a root cause error can be wrapped within this one.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/HashBag.java\n+++ b/src/java/org/apache/commons/collections/HashBag.java\n  *\n  * @deprecated Moved to bag subpackage and rewritten internally. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  */\n--- a/src/java/org/apache/commons/collections/IterableMap.java\n+++ b/src/java/org/apache/commons/collections/IterableMap.java\n  * </pre>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:43 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n  * against versions 2.1.1 and 3.1.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.28 $ $Date: 2004/07/17 21:08:05 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Phil Steitz\n--- a/src/java/org/apache/commons/collections/KeyValue.java\n+++ b/src/java/org/apache/commons/collections/KeyValue.java\n  * two get methods.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/LRUMap.java\n  * \n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.23 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n  * Provides utility methods and decorators for {@link List} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.31 $ $Date: 2004/12/24 11:03:45 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Federico Barbieri\n  * @author Peter Donald\n--- a/src/java/org/apache/commons/collections/MapIterator.java\n+++ b/src/java/org/apache/commons/collections/MapIterator.java\n  * </pre>\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n  *  </ul>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.52 $ $Date: 2004/12/24 11:03:44 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n  * <code>list</code> will be a list containing \"A\", \"B\", \"C\".\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.21 $ $Date: 2005/01/04 00:13:25 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Christopher Berry\n  * @author James Strachan\n--- a/src/java/org/apache/commons/collections/MultiMap.java\n+++ b/src/java/org/apache/commons/collections/MultiMap.java\n  * as they were defined in the superinterface <code>Map</code> anyway.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.12 $ $Date: 2004/03/14 15:33:57 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Christopher Berry\n  * @author James Strachan\n--- a/src/java/org/apache/commons/collections/OrderedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/OrderedBidiMap.java\n  * a key to be looked up from a value with equal performance.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/OrderedIterator.java\n+++ b/src/java/org/apache/commons/collections/OrderedIterator.java\n  * This iterator allows both forward and reverse iteration through the collection.\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/09/22 23:16:48 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/OrderedMap.java\n+++ b/src/java/org/apache/commons/collections/OrderedMap.java\n  * iteration through that order.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/OrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/OrderedMapIterator.java\n  * This iterator allows both forward and reverse iteration through the map.\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/Predicate.java\n+++ b/src/java/org/apache/commons/collections/Predicate.java\n  * or, not, method invokation and null testing.\n  * \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.11 $ $Date: 2004/04/14 20:08:57 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/PredicateUtils.java\n+++ b/src/java/org/apache/commons/collections/PredicateUtils.java\n  * All the supplied predicates are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.19 $ $Date: 2004/05/26 21:50:52 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Ola Berg\n--- a/src/java/org/apache/commons/collections/PriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/PriorityQueue.java\n  * @deprecated Replaced by the Buffer interface and implementations in buffer subpackage.\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.14 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Peter Donald\n  */\n--- a/src/java/org/apache/commons/collections/ProxyMap.java\n+++ b/src/java/org/apache/commons/collections/ProxyMap.java\n  *\n  * @deprecated Moved to map subpackage as AbstractMapDecorator. It will be removed in v4.0.\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.15 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Daniel Rall\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/ReferenceMap.java\n  * \n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.22 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/ResettableIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableIterator.java\n  * This interface allows an iterator to be repeatedly reused.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/ResettableListIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableListIterator.java\n  * This interface allows an iterator to be repeatedly reused.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/SequencedHashMap.java\n+++ b/src/java/org/apache/commons/collections/SequencedHashMap.java\n  * @see org.apache.commons.collections.map.LinkedMap\n  * @see org.apache.commons.collections.map.ListOrderedMap\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.28 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  * @author Daniel Rall\n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n  * {@link Set} and {@link SortedSet} instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.26 $ $Date: 2004/04/01 20:12:00 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/SortedBag.java\n+++ b/src/java/org/apache/commons/collections/SortedBag.java\n  * its unique representative members.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  */\n--- a/src/java/org/apache/commons/collections/SortedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/SortedBidiMap.java\n  * a key to be looked up from a value with equal performance.\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/StaticBucketMap.java\n  *\n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.18 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n  * @author <a href=\"mailto:g-froehlich@gmx.de\">Gerhard Froehlich</a>\n--- a/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n  * @deprecated PriorityQueue is replaced by the Buffer interface, see buffer subpackage.\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Ram Chidambaram\n  */\n--- a/src/java/org/apache/commons/collections/Transformer.java\n+++ b/src/java/org/apache/commons/collections/Transformer.java\n  * cloning and returning the string value.\n  * \n  * @since Commons Collections 1.0\n- * @version $Revision: 1.10 $ $Date: 2004/04/14 20:08:57 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/TransformerUtils.java\n+++ b/src/java/org/apache/commons/collections/TransformerUtils.java\n  * All the supplied transformers are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.13 $ $Date: 2004/05/26 21:50:52 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author James Carman\n--- a/src/java/org/apache/commons/collections/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/TreeBag.java\n  *\n  * @deprecated Moved to bag subpackage and rewritten internally. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  */\n--- a/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n  * \n  * @deprecated Moved to buffer subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.15 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Avalon\n  * @author Federico Barbieri\n--- a/src/java/org/apache/commons/collections/Unmodifiable.java\n+++ b/src/java/org/apache/commons/collections/Unmodifiable.java\n  * then the interface won't be there.\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:15:42 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/02 21:53:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n  * the number of occurrences of that element in the bag.\n  *\n  * @since Commons Collections 3.0 (previously DefaultMapBag v2.0)\n- * @version $Revision: 1.15 $ $Date: 2004/05/15 12:27:04 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/02 21:53:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/HashBag.java\n+++ b/src/java/org/apache/commons/collections/bag/HashBag.java\n  * <code>Collection</code> interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 00:56:25 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/TransformedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TreeBag.java\n  * <code>Collection</code> interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 00:56:25 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bag/TypedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedBag.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/15 12:27:04 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/15 12:27:04 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/02 21:56:19 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/06/02 21:56:19 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n  * @see DualHashBidiMap\n  * @see DualTreeBidiMap\n  * @since Commons Collections 3.0\n- * @version $Id: AbstractDualBidiMap.java,v 1.14 2004/06/22 21:54:35 scolebourne Exp $\n+ * @version $Id$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:57:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/DualHashBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualHashBidiMap.java\n  * and the flawed <code>createMap</code> method is ignored.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: DualHashBidiMap.java,v 1.7 2004/06/11 23:27:37 scolebourne Exp $\n+ * @version $Id$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n  * and the flawed <code>createMap</code> method is ignored.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: DualTreeBidiMap.java,v 1.14 2004/06/11 23:27:37 scolebourne Exp $\n+ * @version $Id$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n  * UnsupportedOperationException on attempts to call that method.\n  *\n  * @since Commons Collections 3.0 (previously DoubleOrderedMap v2.0)\n- * @version $Revision: 1.16 $ $Date: 2005/01/03 23:52:49 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Marc Johnson\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n  * Decorates another <code>BidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n  * Decorates another <code>OrderedBidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n  * Decorates another <code>SortedBidiMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:13:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n+++ b/src/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n  * Methods are forwarded directly to the decorated buffer.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 21:53:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Janek Bogucki\n--- a/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.11 $ $Date: 2005/01/22 00:48:22 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stefano Fornari\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n  * </pre>\n  *\n  * @since Commons Collections 3.0 (previously BinaryHeap v1.0)\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:33:23 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Peter Donald\n  * @author Ram Chidambaram\n--- a/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:33:23 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  * \n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.9 $ $Date: 2004/06/01 22:57:18 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Avalon\n  * @author Federico Barbieri\n--- a/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 21:57:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n+++ b/src/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n  * to write an unmodifiable implementation it might provide a loophole.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 21:53:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/collection/CompositeCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/CompositeCollection.java\n  * strategy is provided then add and remove are unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/26 21:58:02 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Brian McCallister\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/collection/TypedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/TypedCollection.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/15 12:39:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n  * @see #getBooleanComparator(boolean)\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.15 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n  * {@link #compare(Object, Object) compare} for details.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.15 $ $Date: 2004/05/15 13:24:11 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Henri Yandell\n  *\n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n  * \n  * @since Commons Collections 2.0\n  * @author Morgan Delagrange\n- * @version $Revision: 1.18 $ $Date: 2004/05/16 11:48:49 $\n+ * @version $Revision$ $Date$\n  */\n public class ComparatorChain implements Comparator, Serializable {\n \n--- a/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n  * multiple comparisons  after all the setup operations are complete.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/05/15 13:24:11 $\n+ * @version $Revision$ $Date$\n  *\n  * @author David Leppik\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/NullComparator.java\n  * other objects.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.13 $ $Date: 2004/05/15 13:24:11 $ \n+ * @version $Revision$ $Date$ \n  *\n  * @author Michael A. Smith\n  */\n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n  * to its {@link #compare(Object, Object) compare} method.\n  * \n  * @since Commons Collections 2.0\n- * @version $Revision: 1.20 $ $Date: 2004/05/16 11:49:24 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Henri Yandell\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/functors/AllPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AllPredicate.java\n  * Predicate implementation that returns true if all the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/AndPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AndPredicate.java\n  * Predicate implementation that returns true if both the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/AnyPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AnyPredicate.java\n  * Predicate implementation that returns true if any of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ChainedClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ChainedClosure.java\n  * Closure implementation that chains the specified closures together.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/03/13 17:17:03 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ChainedTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ChainedTransformer.java\n  * is passed to the second transformer and so on.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/CloneTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/CloneTransformer.java\n  * Clone is performed using <code>PrototypeFactory.getInstance(input).create()</code>.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ClosureTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ClosureTransformer.java\n  * and then returns the input.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ConstantFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/ConstantFactory.java\n  * use the prototype factory.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ConstantTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ConstantTransformer.java\n  * use the prototype factory.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/EqualPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/EqualPredicate.java\n  * as the one stored in this predicate by equals.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ExceptionClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionClosure.java\n  * Closure implementation that always throws an exception.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ExceptionFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionFactory.java\n  * Factory implementation that always throws an exception.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n  * Predicate implementation that always throws an exception.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n  * Transformer implementation that always throws an exception.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/FactoryTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/FactoryTransformer.java\n  * Transformer implementation that calls a Factory and returns the result.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/FalsePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/FalsePredicate.java\n  * Predicate implementation that always returns false.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/ForClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ForClosure.java\n  * Closure implementation that calls another closure n times, like a for loop.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n+++ b/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n  * Internal utilities for functors.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/IdentityPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/IdentityPredicate.java\n  * as the one stored in this predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/IfClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/IfClosure.java\n  * based on a predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n  * the type stored in this predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/InstantiateFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/InstantiateFactory.java\n  * Factory implementation that creates a new object instance by reflection.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n  * Transformer implementation that creates a new object instance by reflection.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n  * Transformer implementation that creates a new object instance by reflection.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/26 21:44:05 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/MapTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/MapTransformer.java\n  * using the input parameter as a key.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NOPClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/NOPClosure.java\n  * Closure implementation that does nothing.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NOPTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/NOPTransformer.java\n  * Transformer implementation that does nothing.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NonePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NonePredicate.java\n  * Predicate implementation that returns true if none of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NotNullPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NotNullPredicate.java\n  * Predicate implementation that returns true if the input is not null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NotPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NotPredicate.java\n  * Predicate implementation that returns the opposite of the decorated predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n  * Predicate implementation that throws an exception if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n  * Predicate implementation that returns false if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n  * Predicate implementation that returns true if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/NullPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullPredicate.java\n  * Predicate implementation that returns true if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/OnePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/OnePredicate.java\n  * Predicate implementation that returns true if only one of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/OrPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/OrPredicate.java\n  * Predicate implementation that returns true if either of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/PredicateDecorator.java\n+++ b/src/java/org/apache/commons/collections/functors/PredicateDecorator.java\n  * This interface enables tools to access the decorated predicates.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/PredicateTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/PredicateTransformer.java\n  * and then returns the input.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/PrototypeFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/PrototypeFactory.java\n  * Factory implementation that creates a new instance each time based on a prototype.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/StringValueTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/StringValueTransformer.java\n  * Transformer implementation that returns the <code>String.valueOf</code>.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/SwitchClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/SwitchClosure.java\n  * like a switch statement.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/SwitchTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/SwitchTransformer.java\n  * like a switch statement.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n  * another <code>Predicate</code>.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.4 $ $Date: 2004/05/31 16:43:17 $\n+ * @version $Revision$ $Date$\n  * @author Alban Peignier\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/TransformerClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformerClosure.java\n  * and ignore the result.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/TransformerPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformerPredicate.java\n  * Predicate implementation that returns the result of a transformer.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/TruePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TruePredicate.java\n  * Predicate implementation that always returns true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/UniquePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/UniquePredicate.java\n  * passed into the predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/functors/WhileClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/WhileClosure.java\n  * like a do-while or while loop.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:47:38 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n  * Provides an implementation of an empty iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/05/26 20:57:43 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n  * All methods are forwarded to the decorated iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n  * All methods are forwarded to the decorated list iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayIterator.java\n  * the iterator back to the start if required.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.12 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n  * <code>A.next()</code> and <code>B.next()</code>.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/EmptyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyIterator.java\n  * 2.1.1 and 3.1 due to issues with <code>IteratorUtils</code>.\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/05/22 09:46:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n  * 2.1.1 and 3.1 due to issues with <code>IteratorUtils</code>.\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/05/26 21:53:18 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n  * Provides an implementation of an empty map iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/05/22 09:46:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n  * Provides an implementation of an empty ordered iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/05/26 21:52:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n  * Provides an implementation of an empty ordered map iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/05/22 09:46:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n  * </pre>\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n  * to be {@link Iterator Iterator} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.8 $ $Date: 2004/04/21 20:34:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n--- a/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n  * are returned.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Jan Sorensen\n--- a/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n  * returned by the iterator.\n  * \n  * @since Commons Collections 2.0\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n  * iterators. In this case the class will function as an empty iterator.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.13 $ $Date: 2004/05/26 21:58:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n  * an {@link Enumeration Enumeration} instance.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.9 $ $Date: 2004/05/03 10:23:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n+++ b/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n  * operations of ListIterator.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n  * implementations will throw a ConcurrentModificationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  *\n  * @author <a href=\"mailto:joncrlsn@users.sf.net\">Jonathan Carlson</a>\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n  * ConcurrentModificationException.\n  *\n  * @since Commons Collections 3.2\n- * @version $Revision: 1.1 $ $Date: 2004/07/17 21:02:47 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Eric Crampton <ccesc@eonomine.com>\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n  * back to the start if required.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.12 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n  * more efficient (and convenient) than using nested for loops to extract a list.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.3 $ $Date: 2004/05/03 11:50:30 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n  *\n  * @deprecated Use AbstractIteratorDecorator. Will be removed in v4.0\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.10 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n  *\n  * @deprecated Use AbstractListIteratorDecorator. Will be removed in v4.0\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n  * object instance.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.14 $ $Date: 2004/04/09 22:52:48 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n  * object instance.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.13 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n--- a/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n  * Decorates an iterator such that each element returned is transformed.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n  * and duplicate Objects are skipped.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.9 $ $Date: 2004/05/07 23:29:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n  * Decorates an iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n  * Decorates a list iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n  * Decorates a map iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n  * Decorates an ordered map iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 00:59:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n  * Abstract pair class to assist with creating KeyValue and MapEntry implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n  * Abstract Pair class to assist with creating correct Map Entry implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n  * to a Map Entry.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n  * itself as a key or value.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n  * the MapEntry contract from being broken.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/keyvalue/MultiKey.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/MultiKey.java\n  * </pre>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/03/13 12:43:43 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Howard Lewis Ship\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n  * map, however this will probably mess up any iterators.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/04/09 14:35:10 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n  * when <code>setValue</code> is called.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:00:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n  * is here.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/04/20 23:33:54 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Rich Dougherty\n  * @author Phil Steitz\n--- a/src/java/org/apache/commons/collections/list/AbstractListDecorator.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractListDecorator.java\n  * Methods are forwarded directly to the decorated list.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 21:53:02 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/list/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/CursorableLinkedList.java\n  *\n  * @see java.util.LinkedList\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:12:26 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Janek Bogucki\n--- a/src/java/org/apache/commons/collections/list/FixedSizeList.java\n+++ b/src/java/org/apache/commons/collections/list/FixedSizeList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/list/LazyList.java\n+++ b/src/java/org/apache/commons/collections/list/LazyList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Arron Bates\n--- a/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n  * <b>Note that this implementation is not synchronized.</b>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/20 23:46:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jeff Varszegi\n  * @author Rich Dougherty\n--- a/src/java/org/apache/commons/collections/list/PredicatedList.java\n+++ b/src/java/org/apache/commons/collections/list/PredicatedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/list/SetUniqueList.java\n+++ b/src/java/org/apache/commons/collections/list/SetUniqueList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date$\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/list/SynchronizedList.java\n+++ b/src/java/org/apache/commons/collections/list/SynchronizedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/list/TransformedList.java\n+++ b/src/java/org/apache/commons/collections/list/TransformedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/list/TreeList.java\n+++ b/src/java/org/apache/commons/collections/list/TreeList.java\n  * does use sligtly more memory.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.4 $ $Date: 2005/01/03 23:52:49 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Joerg Schmuecker\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/list/TypedList.java\n+++ b/src/java/org/apache/commons/collections/list/TypedList.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/07 23:28:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/list/UnmodifiableList.java\n+++ b/src/java/org/apache/commons/collections/list/UnmodifiableList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n  * This extends clause will be removed in v4.0.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.20 $ $Date: 2004/06/22 21:42:12 $\n+ * @version $Revision$ $Date$\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n  * versions of Commons Collections.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.3 $ $Date: 2005/01/03 23:52:49 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n  * methods exposed.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.12 $ $Date: 2004/05/26 21:56:05 $\n+ * @version $Revision$ $Date$\n  *\n  * @author java util LinkedHashMap\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/04/02 21:02:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Daniel Rall\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/02 21:17:48 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n  *\n  * @see java.lang.ref.Reference\n  * @since Commons Collections 3.1 (extracted from ReferenceMap in 3.0)\n- * @version $Revision: 1.3 $ $Date: 2004/06/07 22:14:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/04/02 21:16:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n+++ b/src/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n  * equals <code>{\"one\", \"two\", null}.</code>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Commons-Collections team\n  */\n--- a/src/java/org/apache/commons/collections/map/CompositeMap.java\n+++ b/src/java/org/apache/commons/collections/map/CompositeMap.java\n  * strategy is provided then add and remove are unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/05/07 23:58:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/03 22:26:52 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/Flat3Map.java\n+++ b/src/java/org/apache/commons/collections/map/Flat3Map.java\n  * Do not use <code>Flat3Map</code> if the size is likely to grow beyond 3.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.18 $ $Date: 2004/05/26 21:56:05 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/HashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/HashedMap.java\n  * functionality and many methods for subclassing.\n  * <p>\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.15 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/IdentityMap.java\n+++ b/src/java/org/apache/commons/collections/map/IdentityMap.java\n  * As a general rule, don't compare this map to other maps.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/map/LRUMap.java\n  * <code>ResettableIterator</code> and calling <code>reset()</code>.\n  * \n  * @since Commons Collections 3.0 (previously in main package v1.0)\n- * @version $Revision: 1.15 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  *\n  * @author James Strachan\n  * @author Morgan Delagrange\n--- a/src/java/org/apache/commons/collections/map/LazyMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazyMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/07 23:30:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/LazySortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazySortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 10:36:01 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/LinkedMap.java\n+++ b/src/java/org/apache/commons/collections/map/LinkedMap.java\n  * methods exposed.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.16 $ $Date: 2004/06/07 21:51:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/MultiKeyMap.java\n+++ b/src/java/org/apache/commons/collections/map/MultiKeyMap.java\n  * </pre>\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.4 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/PredicatedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.14 $ $Date: 2004/06/07 22:14:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/05/21 21:38:49 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n+++ b/src/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n  * @see java.lang.ref.Reference\n  * \n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.2 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/map/ReferenceMap.java\n  * @see java.lang.ref.Reference\n  * \n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.14 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/SingletonMap.java\n+++ b/src/java/org/apache/commons/collections/map/SingletonMap.java\n  * </ul>\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/10/16 21:26:14 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n  * operations will affect the map.<p>\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Berin Loritsch\n  * @author Gerhard Froehlich\n--- a/src/java/org/apache/commons/collections/map/TransformedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2004/06/07 22:14:42 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 10:36:01 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/TypedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedMap.java\n  * The returned implementation is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/07 23:17:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n  * The returned implementation is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/07 23:18:26 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n  * Decorates a map entry <code>Set</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:13:19 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/04/09 10:32:25 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/04/09 10:46:32 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/09 10:46:32 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n+++ b/src/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n  * Methods are forwarded directly to the decorated set.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 21:53:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n+++ b/src/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n  * Methods are forwarded directly to the decorated set.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 21:53:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/CompositeSet.java\n+++ b/src/java/org/apache/commons/collections/set/CompositeSet.java\n  * If no strategy is provided then add is unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/09/22 23:39:46 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/java/org/apache/commons/collections/set/ListOrderedSet.java\n+++ b/src/java/org/apache/commons/collections/set/ListOrderedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2005/01/04 00:01:31 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Henning P. Schmiedehausen\n--- a/src/java/org/apache/commons/collections/set/MapBackedSet.java\n+++ b/src/java/org/apache/commons/collections/set/MapBackedSet.java\n  * Exceptions include <code>BidiMap</code> implementations, as they require unique values.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/06/02 22:00:47 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/PredicatedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/set/SynchronizedSet.java\n+++ b/src/java/org/apache/commons/collections/set/SynchronizedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/TransformedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TransformedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/TransformedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TransformedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/TypedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TypedSet.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/07 23:28:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/set/TypedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TypedSortedSet.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/07 23:28:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n--- a/src/java/org/apache/commons/collections/set/UnmodifiableSet.java\n+++ b/src/java/org/apache/commons/collections/set/UnmodifiableSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/03 22:02:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:02:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/AbstractTestObject.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestObject.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Object} fails.\n  *\n- * @version $Revision: 1.7 $ $Date: 2004/06/01 22:55:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/BulkTest.java\n+++ b/src/test/org/apache/commons/collections/BulkTest.java\n  *  interpret bulk test methods.\n  *\n  *  @author Paul Jack\n- *  @version $Id: BulkTest.java,v 1.10 2004/02/18 01:20:35 scolebourne Exp $\n+ *  @version $Id$\n  */\n public class BulkTest extends TestCase implements Cloneable {\n \n--- a/src/test/org/apache/commons/collections/LocalTestNode.java\n+++ b/src/test/org/apache/commons/collections/LocalTestNode.java\n /**\n  * Class LocalTestNode, a helper class for TestDoubleOrderedMap\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Marc Johnson (marcj at users dot sourceforge dot net)\n  */\n--- a/src/test/org/apache/commons/collections/TestAll.java\n+++ b/src/test/org/apache/commons/collections/TestAll.java\n /**\n  * Entry point for all Collections package tests.\n  * \n- * @version $Revision: 1.57 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/TestAllPackages.java\n+++ b/src/test/org/apache/commons/collections/TestAllPackages.java\n /**\n  * Entry point for all Collections project tests.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestArrayList.java\n+++ b/src/test/org/apache/commons/collections/TestArrayList.java\n /**\n  * Abstract test class for ArrayList.\n  * \n- * @version $Revision: 1.12 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestArrayStack.java\n+++ b/src/test/org/apache/commons/collections/TestArrayStack.java\n /**\n  * Tests ArrayStack.\n  * \n- * @version $Revision: 1.12 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Craig McClanahan\n  */\n--- a/src/test/org/apache/commons/collections/TestBagUtils.java\n+++ b/src/test/org/apache/commons/collections/TestBagUtils.java\n /**\n  * Tests for BagUtils factory methods.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/TestBeanMap.java\n+++ b/src/test/org/apache/commons/collections/TestBeanMap.java\n /**\n  * Test cases for BeanMap\n  * \n- * @version $Revision: 1.18 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/TestBinaryHeap.java\n+++ b/src/test/org/apache/commons/collections/TestBinaryHeap.java\n /**\n  * Tests the BinaryHeap.\n  * \n- * @version $Revision: 1.16 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  */\n--- a/src/test/org/apache/commons/collections/TestBoundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/TestBoundedFifoBuffer.java\n /**\n  * Test cases for BoundedFifoBuffer.\n  * \n- * @version $Revision: 1.13 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  */\n--- a/src/test/org/apache/commons/collections/TestBoundedFifoBuffer2.java\n+++ b/src/test/org/apache/commons/collections/TestBoundedFifoBuffer2.java\n  * Runs tests against a full BoundedFifoBuffer, since many of the algorithms\n  * differ depending on whether the fifo is full or not.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/TestBufferUtils.java\n+++ b/src/test/org/apache/commons/collections/TestBufferUtils.java\n /**\n  * Tests for BufferUtils.\n  * \n- * @version $Revision: 1.13 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/TestClosureUtils.java\n+++ b/src/test/org/apache/commons/collections/TestClosureUtils.java\n  * Tests the org.apache.commons.collections.ClosureUtils class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n  * @author Steven Melzer\n  * @author Neil O'Toole\n  * \n- * @version $Revision: 1.44 $ $Date: 2004/12/24 11:03:45 $\n+ * @version $Revision$ $Date$\n  */\n public class TestCollectionUtils extends TestCase {\n     \n--- a/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n /**\n  * Test class.\n  * \n- * @version $Revision: 1.18 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n--- a/src/test/org/apache/commons/collections/TestDoubleOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/TestDoubleOrderedMap.java\n  * Map that does not support duplicate keys, duplicate \n  * values, or null values.\n  * \n- * @version $Revision: 1.15 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Marc Johnson\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/TestEnumerationUtils.java\n+++ b/src/test/org/apache/commons/collections/TestEnumerationUtils.java\n  * Tests EnumerationUtils.\n  * \n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: TestEnumerationUtils.java,v 1.4 2004/02/18 01:20:35 scolebourne Exp $\n+ * @version $Id$\n  */\n public class TestEnumerationUtils extends BulkTest {\n \n--- a/src/test/org/apache/commons/collections/TestExtendedProperties.java\n+++ b/src/test/org/apache/commons/collections/TestExtendedProperties.java\n /**\n  * Tests some basic functions of the ExtendedProperties class.\n  * \n- * @version $Revision: 1.13 $ $Date: 2004/06/21 23:39:25 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Geir Magnusson Jr.\n  * @author Mohan Kishore\n--- a/src/test/org/apache/commons/collections/TestFactoryUtils.java\n+++ b/src/test/org/apache/commons/collections/TestFactoryUtils.java\n  * Tests the org.apache.commons.collections.FactoryUtils class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestFastArrayList.java\n+++ b/src/test/org/apache/commons/collections/TestFastArrayList.java\n /**\n  * Test FastArrayList.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestFastArrayList1.java\n+++ b/src/test/org/apache/commons/collections/TestFastArrayList1.java\n /**\n  * Test FastArrayList implementation in <strong>fast</strong> mode.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/06/23 21:41:49 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestFastHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestFastHashMap.java\n /**\n  * Tests FastHashMap.\n  * \n- * @version $Revision: 1.16 $ $Date: 2004/04/12 12:01:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestFastHashMap1.java\n+++ b/src/test/org/apache/commons/collections/TestFastHashMap1.java\n /**\n  * Test FastHashMap in <strong>fast</strong> mode.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestFastTreeMap.java\n+++ b/src/test/org/apache/commons/collections/TestFastTreeMap.java\n /**\n  * Tests FastTreeMap.\n  * \n- * @version $Revision: 1.15 $ $Date: 2004/04/12 12:01:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestFastTreeMap1.java\n+++ b/src/test/org/apache/commons/collections/TestFastTreeMap1.java\n /**\n  * Test FastTreeMap in <strong>fast</strong> mode.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author <a href=\"mailto:jvanzyl@apache.org\">Jason van Zyl</a>\n  */\n--- a/src/test/org/apache/commons/collections/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/TestHashBag.java\n  * Extension of {@link TestBag} for exercising the {@link HashBag}\n  * implementation.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/org/apache/commons/collections/TestIteratorUtils.java\n /**\n  * Tests for IteratorUtils.\n  * \n- * @version $Revision: 1.16 $ $Date: 2004/05/26 21:56:45 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n /**\n  * Tests LRUMap.\n  * \n- * @version $Revision: 1.29 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Morgan Delagrange\n--- a/src/test/org/apache/commons/collections/TestLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestLinkedList.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Rich Dougherty\n  */\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n /**\n  * Tests for ListUtils.\n  * \n- * @version $Revision: 1.22 $ $Date: 2004/12/24 11:03:45 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/test/org/apache/commons/collections/TestMapUtils.java\n+++ b/src/test/org/apache/commons/collections/TestMapUtils.java\n /**\n  * Tests for MapUtils.\n  * \n- * @version $Revision: 1.27 $ $Date: 2004/12/24 11:03:45 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Arun Mammen Thomas\n--- a/src/test/org/apache/commons/collections/TestMultiHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestMultiHashMap.java\n /**\n  * Unit Tests for <code>MultiHashMap</code>.\n  * \n- * @version $Revision: 1.21 $ $Date: 2005/01/04 00:13:25 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/TestPredicateUtils.java\n+++ b/src/test/org/apache/commons/collections/TestPredicateUtils.java\n  * Tests the org.apache.commons.collections.PredicateUtils class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/03/13 16:34:46 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestReferenceMap.java\n+++ b/src/test/org/apache/commons/collections/TestReferenceMap.java\n /**\n  * Tests for ReferenceMap. \n  * \n- * @version $Revision: 1.19 $ $Date: 2004/05/03 22:03:06 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Paul Jack\n  */\n--- a/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n  * Be sure to use the \"labRat\" instance whenever possible,\n  * so that subclasses will be tested correctly.\n  * \n- * @version $Revision: 1.26 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author Daniel Rall\n--- a/src/test/org/apache/commons/collections/TestSetUtils.java\n+++ b/src/test/org/apache/commons/collections/TestSetUtils.java\n /**\n  * Tests for SetUtils.\n  * \n- * @version $Revision: 1.16 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n  * Unit tests \n  * {@link org.apache.commons.collections.StaticBucketMap}.\n  * \n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  */\n--- a/src/test/org/apache/commons/collections/TestTransformerUtils.java\n+++ b/src/test/org/apache/commons/collections/TestTransformerUtils.java\n  * Tests the org.apache.commons.collections.TransformerUtils class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  * @author James Carman\n--- a/src/test/org/apache/commons/collections/TestTreeBag.java\n+++ b/src/test/org/apache/commons/collections/TestTreeBag.java\n  * Extension of {@link TestBag} for exercising the {@link TreeBag}\n  * implementation.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/org/apache/commons/collections/TestTreeMap.java\n+++ b/src/test/org/apache/commons/collections/TestTreeMap.java\n /**\n  * Tests TreeMap.\n  * \n- * @version $Revision: 1.13 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jason van Zyl\n  */\n--- a/src/test/org/apache/commons/collections/TestTypedCollection.java\n+++ b/src/test/org/apache/commons/collections/TestTypedCollection.java\n /**\n  * Tests TypedCollection.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n /**\n  * Test cases for UnboundedFifoBuffer.\n  * \n- * @version $Revision: 1.12 $ $Date: 2004/02/18 01:20:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your bag fails.\n  *\n- * @version $Revision: 1.9 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n  * methods and contracts.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestAll.java\n+++ b/src/test/org/apache/commons/collections/bag/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestHashBag.java\n  * Extension of {@link TestBag} for exercising the {@link HashBag}\n  * implementation.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestPredicatedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestPredicatedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestTransformedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTransformedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestTreeBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTreeBag.java\n  * Extension of {@link TestBag} for exercising the {@link TreeBag}\n  * implementation.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestTypedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTypedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/02 22:05:03 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n /**\n  * Abstract test class for {@link OrderedBidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n /**\n  * Abstract test class for {@link SortedBidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.8 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n /**\n  * Test class for AbstractOrderedBidiMapDecorator.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  */\n public class TestAbstractOrderedBidiMapDecorator\n         extends AbstractTestOrderedBidiMap {\n--- a/src/test/org/apache/commons/collections/bidimap/TestAll.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/11 23:29:07 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2004/06/21 22:30:05 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/04/09 15:15:18 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestAll.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:05:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestBlockingBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBlockingBuffer.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $\n+ * @version $Revision$\n  * \n  * @author Janek Bogucki\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n /**\n  * Test cases for BoundedFifoBuffer.\n  * \n- * @version $Revision: 1.5 $ $Date: 2005/01/15 22:47:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n  * Runs tests against a full BoundedFifoBuffer, since many of the algorithms\n  * differ depending on whether the fifo is full or not.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:37 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n /**\n  * Test cases for CircularFifoBuffer.\n  * \n- * @version $Revision: 1.6 $ $Date: 2005/01/22 00:47:49 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n  * {@link PredicatedBuffer} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 22:05:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n /**\n  * Tests the PriorityBuffer.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:37 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n  * {@link SynchronizedBuffer} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/02 22:05:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:37 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n /**\n  * Test cases for UnboundedFifoBuffer.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/06/01 22:55:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n  * {@link UnmodifiableBuffer} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/02 22:05:54 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/collection/AbstractTestCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/AbstractTestCollection.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Collection} fails.\n  *\n- * @version $Revision: 1.8 $ $Date: 2004/06/01 22:55:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/test/org/apache/commons/collections/collection/TestAll.java\n+++ b/src/test/org/apache/commons/collections/collection/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/01 23:07:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/collection/TestCompositeCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestCompositeCollection.java\n  * {@link CompositeCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Brian McCallister\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/collection/TestPredicatedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestPredicatedCollection.java\n  * {@link PredicatedCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:06:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n  * {@link SynchronizedCollection} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/01 23:07:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/collection/TestTransformedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestTransformedCollection.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:06:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n  * {@link UnmodifiableCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 22:06:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/comparators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestAll.java\n /**\n  * Entry point for all Comparator Collections tests.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n /**\n  * Tests for {@link BooleanComparator}.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n /**\n  * Tests for ComparableComparator.\n  * \n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n /**\n  * Tests for ComparatorChain.\n  * \n- * @version $Revision: 1.10 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n /**\n  * Test class for FixedOrderComparator.\n  * \n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author David Leppik \n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n /**\n  * Test the NullComparator.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n /**\n  * Tests for ReverseComparator.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.12 $ $Date: 2004/04/09 14:38:13 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestAll.java\n /**\n  * Entry point for all iterator tests.\n  * \n- * @version $Revision: 1.16 $ $Date: 2004/07/17 21:02:47 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayIterator.java\n  * perform the iteration rather than the hasNext() method.\n  * The code of this test was supplied by Mauricio S. Moura.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayIterator2.java\n /**\n  * Tests the ArrayIterator with primitive type arrays.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  * @author James Strachan\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayListIterator.java\n /**\n  * Test the ArrayListIterator class.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * @author Neil O'Toole\n  */\n public class TestArrayListIterator extends TestArrayIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n /**\n  * Test the ArrayListIterator class with primitives.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * @author Neil O'Toole\n  */\n public class TestArrayListIterator2 extends TestArrayIterator2 {\n--- a/src/test/org/apache/commons/collections/iterators/TestCollatingIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestCollatingIterator.java\n /**\n  * Unit test suite for {@link CollatingIterator}.\n  * \n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * @author Rodney Waldhoff\n  */\n public class TestCollatingIterator extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n /**\n  * Test the filter iterator.\n  *\n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author  Jan Sorensen\n  * @author Ralph Wagner\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n /**\n  * Tests the FilterListIterator class.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n /**\n  * Tests the IteratorChain class.\n  * \n- * @version $Revision: 1.9 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n  * Tests the ListIteratorWrapper to insure that it simulates\n  * a ListIterator correctly.\n  *\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Morgan Delagrange\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestLoopingIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestLoopingIterator.java\n /**\n  * Tests the LoopingIterator class.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jonathan Carlson\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/iterators/TestLoopingListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestLoopingListIterator.java\n /**\n  * Tests the LoopingListIterator class.\n  *\n- * @version $Revision: 1.1 $ $Date: 2004/07/17 21:02:47 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Eric Crampton <ccesc@eonomine.com>\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n /**\n  * Tests the ObjectArrayIterator.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n /**\n  * Tests the ObjectArrayListIterator class.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n /**\n  * Tests the ObjectArrayListIterator class.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n /**\n  * Testcase.\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/03/20 00:21:08 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n  * Tests the SingletonIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  *\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n  * Tests the SingletonIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  *\n- * @version $Revision: 1.1 $ $Date: 2004/04/09 14:38:47 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n /**\n  * Tests the SingletonListIterator.\n  *\n- * @version $Revision: 1.11 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n /**\n  * Tests the UniqueFilterIterator class.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n /**\n  * Tests the UnmodifiableIterator.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n /**\n  * Tests the UnmodifiableListIterator.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n /**\n  * Tests the UnmodifiableMapIterator.\n  * \n- * @version $Revision: 1.8 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n /**\n  * Tests the UnmodifiableOrderedMapIterator.\n  * \n- * @version $Revision: 1.5 $ $Date: 2004/02/18 01:20:33 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n  * type being tested.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestAll.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestAll.java\n  * Entry point for key-value test cases.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n  * Test the DefaultKeyValue class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n  * Test the DefaultMapEntry class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestMultiKey.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestMultiKey.java\n /**\n  * Unit tests for {@link org.apache.commons.collections.MultiKey}.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/03/13 12:43:43 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n  * Test the TiedMapEntry class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n  * Test the UnmodifiableMapEntry class.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:40 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/list/AbstractTestList.java\n+++ b/src/test/org/apache/commons/collections/list/AbstractTestList.java\n  * test case (method) your {@link List} fails or override one of the\n  * protected methods from AbstractTestCollection.\n  *\n- * @version $Revision: 1.10 $ $Date: 2004/07/29 22:28:57 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/test/org/apache/commons/collections/list/TestAbstractLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestAbstractLinkedList.java\n /**\n  * Test case for {@link AbstractLinkedList}.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rich Dougherty\n  * @author David Hay\n--- a/src/test/org/apache/commons/collections/list/TestAll.java\n+++ b/src/test/org/apache/commons/collections/list/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/list/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestCursorableLinkedList.java\n /**\n  * Test class.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n--- a/src/test/org/apache/commons/collections/list/TestFixedSizeList.java\n+++ b/src/test/org/apache/commons/collections/list/TestFixedSizeList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n /**\n  * Test class for NodeCachingLinkedList, a performance optimised LinkedList.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:34 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Jeff Varszegi\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/list/TestPredicatedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestPredicatedList.java\n  * {@link PredicatedList} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n+++ b/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n  * JUnit tests.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date$\n+ * @version $Revision$ $Date$\n  * \n  * @author Matthew Hawthorne\n  * @author Tom Dunham\n--- a/src/test/org/apache/commons/collections/list/TestSynchronizedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestSynchronizedList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/01 23:08:04 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/list/TestTransformedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTransformedList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/list/TestTreeList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTreeList.java\n  * JUnit tests\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/05/12 23:24:44 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Joerg Schmuecker\n  */\n--- a/src/test/org/apache/commons/collections/list/TestTypedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTypedList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/list/TestUnmodifiableList.java\n+++ b/src/test/org/apache/commons/collections/list/TestUnmodifiableList.java\n  * {@link UnmodifiableList} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:07:53 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n /**\n  * Abstract test class for {@link IterableMap} methods and contracts.\n  *\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 01:20:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.16 $ $Date: 2004/06/07 23:14:40 $\n+ * @version $Revision$ $Date$\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n \n--- a/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n /**\n  * Abstract test class for {@link OrderedMap} methods and contracts.\n  *\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 01:20:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n /**\n  * Abstract test class for {@link java.util.SortedMap} methods and contracts.\n  *\n- * @version $Revision: 1.9 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestAll.java\n+++ b/src/test/org/apache/commons/collections/map/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.19 $ $Date: 2004/06/07 21:51:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n /**\n  * Tests for the {@link CaseInsensitiveMap} implementation.\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/02/27 00:25:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Commons-Collections team\n  */\n--- a/src/test/org/apache/commons/collections/map/TestCompositeMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestCompositeMap.java\n  * {@link CompositeMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:37 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/test/org/apache/commons/collections/map/TestFixedSizeMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestFixedSizeMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/02 21:15:05 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/09 09:40:15 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n+++ b/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/03/31 23:18:56 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestHashedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestHashedMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/27 00:25:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.7 $ $Date: 2004/02/27 00:25:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLRUMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.8 $ $Date: 2004/05/12 19:51:28 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestLazyMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLazyMap.java\n  * {@link LazyMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/09 09:39:16 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/TestLazySortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLazySortedMap.java\n  * {@link LazySortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 09:39:47 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.8 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestListOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestListOrderedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/map/TestListOrderedMap2.java\n+++ b/src/test/org/apache/commons/collections/map/TestListOrderedMap2.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/07 21:51:39 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/map/TestMultiKeyMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestMultiKeyMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2004/04/30 23:51:36 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestPredicatedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestPredicatedMap.java\n  * {@link PredicatedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 09:43:09 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n  * {@link PredicatedSortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/04/09 09:43:09 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/TestReferenceIdentityMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestReferenceIdentityMap.java\n /**\n  * Tests for ReferenceIdentityMap. \n  * \n- * @version $Revision: 1.3 $\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/map/TestReferenceMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestReferenceMap.java\n /**\n  * Tests for ReferenceMap. \n  * \n- * @version $Revision: 1.8 $ $Date: 2004/05/03 22:03:06 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Paul Jack\n  */\n--- a/src/test/org/apache/commons/collections/map/TestSingletonMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestSingletonMap.java\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/04/09 14:46:35 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n  * Unit tests \n  * {@link org.apache.commons.collections.StaticBucketMap}.\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:38 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Michael A. Smith\n  */\n--- a/src/test/org/apache/commons/collections/map/TestTransformedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestTransformedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/04/10 22:22:56 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestTransformedSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestTransformedSortedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/10 22:22:57 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableMap.java\n  * {@link UnmodifiableMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2004/04/09 10:46:32 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n  * {@link UnmodifiableOrderedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/04/09 10:46:32 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n  * {@link UnmodifiableSortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/04/09 10:46:32 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/AbstractTestSet.java\n+++ b/src/test/org/apache/commons/collections/set/AbstractTestSet.java\n  * elements may be added; see {@link AbstractTestCollection} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/31 19:09:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Paul Jack\n  */\n--- a/src/test/org/apache/commons/collections/set/AbstractTestSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/AbstractTestSortedSet.java\n  * elements may be added; see {@link AbstractTestCollection} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  * @author Dieter Wimberger\n--- a/src/test/org/apache/commons/collections/set/TestAll.java\n+++ b/src/test/org/apache/commons/collections/set/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2004/06/07 21:42:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestCompositeSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestCompositeSet.java\n  * {@link CompositeSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 01:20:39 $\n+ * @version $Revision$ $Date$\n  *\n  * @author Brian McCallister\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/set/TestListOrderedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestListOrderedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/07 21:42:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/set/TestListOrderedSet2.java\n+++ b/src/test/org/apache/commons/collections/set/TestListOrderedSet2.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/07 21:42:12 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/set/TestMapBackedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestMapBackedSet.java\n  * JUnit test.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestMapBackedSet2.java\n+++ b/src/test/org/apache/commons/collections/set/TestMapBackedSet2.java\n  * JUnit test.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.2 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestPredicatedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestPredicatedSet.java\n  * {@link PredicatedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n  * {@link PredicatedSortedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/set/TestSynchronizedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestSynchronizedSet.java\n  * {@link SynchronizedSet} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/01 23:08:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n  * {@link SynchronizedSortedSet} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/01 23:08:50 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestTransformedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTransformedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestTransformedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTransformedSortedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestTypedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTypedSet.java\n  * {@link TypedSet} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision: 1.1 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/set/TestTypedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTypedSortedSet.java\n  * {@link TypedSortedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/set/TestUnmodifiableSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestUnmodifiableSet.java\n  * {@link UnmodifiableSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n  * {@link UnmodifiableSortedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2004/06/02 22:12:14 $\n+ * @version $Revision$ $Date$\n  * \n  * @author Phil Steitz\n  */", "timestamp": 1109422526, "metainfo": ""}