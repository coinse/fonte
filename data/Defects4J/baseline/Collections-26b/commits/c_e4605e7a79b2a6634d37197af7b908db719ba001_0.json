{"sha": "e4605e7a79b2a6634d37197af7b908db719ba001", "log": "removed testExternalizable(), redundant with test in TestMap class   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.16 2002/02/22 22:00:44 morgand Exp $\n- * $Revision: 1.16 $\n- * $Date: 2002/02/22 22:00:44 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestLRUMap.java,v 1.17 2002/02/22 22:26:01 morgand Exp $\n+ * $Revision: 1.17 $\n+ * $Date: 2002/02/22 22:26:01 $\n  *\n  * ====================================================================\n  *\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.Map;\n import java.util.HashMap;\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n- * @version $Id: TestLRUMap.java,v 1.16 2002/02/22 22:00:44 morgand Exp $\n+ * @version $Id: TestLRUMap.java,v 1.17 2002/02/22 22:26:01 morgand Exp $\n  */\n public class TestLRUMap extends TestSequencedHashMap\n {\n \n         assertTrue(\"map should have size = 3, but actually = \" + map.size(), \n                    map.size() == 3);\n-    }\n-\n-\n-    public void testExternalizable() throws IOException, ClassNotFoundException {\n-        /*\n-         * Test object created with this code\n-         * Object created from CVS version 1.3 of the LRUMap class\n-         *\n-        LRUMap map2 = new LRUMap(3);\n-        map2.put(new Integer(1),\"foo\");\n-        map2.put(new Integer(4),\"bar\");\n-        map2.put(new Integer(6),\"yeah\");\n-        map2.writeExternal(new ObjectOutputStream(new FileOutputStream(\"data/test/LRUMapVersion1.obj\")));\n-         */\n-\n-        // purposely start me out with a smaller capacity\n-        LRUMap map2 = new LRUMap(1);\n-        map2.readExternal(new ObjectInputStream(new FileInputStream(\"data/test/LRUMapVersion1.obj\")));\n-        assertTrue(\"Integer(1) equals foo\",map2.get(new Integer(1)).equals(\"foo\"));\n-        assertTrue(\"Integer(4) equals bar\",map2.get(new Integer(4)).equals(\"bar\"));\n-        assertTrue(\"Integer(6) equals yeah\",map2.get(new Integer(6)).equals(\"yeah\"));\n     }\n \n     /**", "timestamp": 1014416761, "metainfo": ""}