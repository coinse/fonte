{"sha": "0d948ddefd4ae96d5b55109bd4bcc0f9e2370490", "log": "Applying a unit test and a fix for COLLECTIONS-238 - allowing ExtendedProperties to support empty property values  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n                     String key = line.substring(0, equalSign).trim();\n                     String value = line.substring(equalSign + 1).trim();\n \n+                    /* COLLECTIONS-238 allows empty properties to exist by commenting this out\n                     // Configure produces lines like this ... just ignore them\n                     if (\"\".equals(value)) {\n                         continue;\n                     }\n+                    */\n \n                     if (includeProperty != null && key.equalsIgnoreCase(includeProperty)) {\n                         // Recursively load properties files.\n--- a/src/test/org/apache/commons/collections/TestExtendedProperties.java\n+++ b/src/test/org/apache/commons/collections/TestExtendedProperties.java\n         assertEquals( \"\\\\\\\\192.168.1.91\\\\test\", props2.getProperty(\"test\") );\n     }\n \n+    public void testCollections238() throws IOException {\n+        ExtendedProperties props = new ExtendedProperties();\n+        String txt = \"x=1\\ny=\\nz=3\";\n+        byte[] bytes = txt.getBytes();\n+        ByteArrayInputStream in = new ByteArrayInputStream(bytes);\n+        props.load(in);\n+        assertEquals(\"1\", props.getProperty(\"x\"));\n+        assertEquals(\"3\", props.getProperty(\"z\"));\n+        assertEquals(\"\", props.getProperty(\"y\"));\n+        assertEquals(3, props.size());\n+    }\n+\n }", "timestamp": 1206508725, "metainfo": ""}