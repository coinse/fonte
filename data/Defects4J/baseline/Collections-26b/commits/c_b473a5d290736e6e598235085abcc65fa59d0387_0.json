{"sha": "b473a5d290736e6e598235085abcc65fa59d0387", "log": "Move iterator interfaces to main package   ", "commit": "\n--- a/src/java/org/apache/commons/collections/AMap.java\n+++ b/src/java/org/apache/commons/collections/AMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/AMap.java,v 1.1 2003/12/01 22:34:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/AMap.java,v 1.2 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import java.util.Map;\n \n-import org.apache.commons.collections.iterators.MapIterator;\n-\n /**\n  * Defines a map that can be iterated directly without needing to create an entry set.\n  * <p>\n  * </pre>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:34:55 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/BidiMap.java\n+++ b/src/java/org/apache/commons/collections/BidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BidiMap.java,v 1.8 2003/12/01 22:34:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BidiMap.java,v 1.9 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections;\n \n-import java.util.Map;\n-\n-import org.apache.commons.collections.iterators.MapIterator;\n-\n /**\n  * Defines a map that allows bidirectional lookup between key and values.\n  * <p>\n  * a key to be looked up from a value with equal performance.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.8 $ $Date: 2003/12/01 22:34:55 $\n+ * @version $Revision: 1.9 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author Stephen Colebourne\n  */\n-public interface BidiMap extends Map {\n+public interface BidiMap extends AMap {\n     \n     /**\n      * Obtains a <code>MapIterator</code> over the map.\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.17 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.18 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.iterators.IteratorEnumeration;\n import org.apache.commons.collections.iterators.ListIteratorWrapper;\n import org.apache.commons.collections.iterators.LoopingIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n import org.apache.commons.collections.iterators.ObjectArrayIterator;\n import org.apache.commons.collections.iterators.ObjectArrayListIterator;\n-import org.apache.commons.collections.iterators.OrderedIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n-import org.apache.commons.collections.iterators.ResettableListIterator;\n import org.apache.commons.collections.iterators.SingletonIterator;\n import org.apache.commons.collections.iterators.SingletonListIterator;\n import org.apache.commons.collections.iterators.TransformIterator;\n  * {@link org.apache.commons.collections.iterators} subpackage.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.17 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.18 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  * @author Phil Steitz\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/MapIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapIterator.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Iterator;\n+\n+/**\n+ * Defines an iterator that operates over a <code>Map</code>.\n+ * <p>\n+ * This iterator is a special version designed for maps. It is much more\n+ * efficient to use this rather than an entry set iterator where the option\n+ * is available.\n+ * <p>\n+ * A map that provides this interface may not hold the data internally using\n+ * Map Entry objects, thus this interface can avoid lots of object creation.\n+ * <p>\n+ * In use, this iterator iterates through the keys in the map. After each call\n+ * to <code>next()</code>, the <code>getValue()</code> method provides direct\n+ * access to the value. The value can also be set using <code>setValue()</code>.\n+ * <pre>\n+ * MapIterator it = map.mapIterator();\n+ * while (it.hasNext()) {\n+ *   Object key = it.next();\n+ *   Object value = it.getValue();\n+ *   it.setValue(newValue);\n+ * }\n+ * </pre>\n+ *  \n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n+ *\n+ * @author Stephen Colebourne\n+ */\n+public interface MapIterator extends Iterator {\n+    \n+    /**\n+     * Checks to see if there are more entries still to be iterated.\n+     *\n+     * @return <code>true</code> if the iterator has more elements\n+     */\n+    boolean hasNext();\n+\n+    /**\n+     * Gets the next <em>key</em> from the <code>Map</code>.\n+     *\n+     * @return the next key in the iteration\n+     * @throws NoSuchElementException if the iteration is finished\n+     */\n+    Object next();\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the current key, which is the key returned by the last call\n+     * to <code>next()</code>.\n+     *\n+     * @return the current key\n+     * @throws IllegalStateException if <code>next()</code> has not yet been called\n+     */\n+    Object getKey();\n+\n+    /**\n+     * Gets the current value, which is the value associated with the last key\n+     * returned by <code>next()</code>.\n+     *\n+     * @return the current value\n+     * @throws IllegalStateException if <code>next()</code> has not yet been called\n+     */\n+    Object getValue();\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Removes the last returned key from the underlying <code>Map</code> (optional operation).\n+     * <p>\n+     * This method can be called once per call to <code>next()</code>.\n+     *\n+     * @throws UnsupportedOperationException if remove is not supported by the map\n+     * @throws IllegalStateException if <code>next()</code> has not yet been called\n+     * @throws IllegalStateException if <code>remove()</code> has already been called\n+     *  since the last call to <code>next()</code>\n+     */\n+    void remove();\n+    \n+    /**\n+     * Sets the value associated with the current key (optional operation).\n+     *\n+     * @param value  the new value\n+     * @return the previous value\n+     * @throws UnsupportedOperationException if setValue is not supported by the map\n+     * @throws IllegalStateException if <code>next()</code> has not yet been called\n+     * @throws IllegalStateException if <code>remove()</code> has been called since the\n+     *  last call to <code>next()</code>\n+     */\n+    Object setValue(Object value);\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/OrderedIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/OrderedIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Iterator;\n+\n+/**\n+ * Defines an iterator that operates over a ordered collections.\n+ * <p>\n+ * This iterator allows both forward and reverse iteration through the collection.\n+ *  \n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ *\n+ * @author Stephen Colebourne\n+ */\n+public interface OrderedIterator extends Iterator {\n+    \n+    /**\n+     * Checks to see if there is a previous entry that can be iterated to.\n+     *\n+     * @return <code>true</code> if the iterator has a previous element\n+     */\n+    boolean hasPrevious();\n+\n+    /**\n+     * Gets the previous element from the collection.\n+     *\n+     * @return the previous key in the iteration\n+     * @throws NoSuchElementException if the iteration is finished\n+     */\n+    Object previous();\n+\n+}\n--- a/src/java/org/apache/commons/collections/OrderedMap.java\n+++ b/src/java/org/apache/commons/collections/OrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/OrderedMap.java,v 1.1 2003/12/01 22:34:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/OrderedMap.java,v 1.2 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections;\n \n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n-\n /**\n  * Defines a map that maintains order and allows both forward and backward\n  * iteration through that order.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:34:55 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author Stephen Colebourne\n  */\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/OrderedMapIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/OrderedMapIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+/**\n+ * Defines an iterator that operates over an ordered <code>Map</code>.\n+ * <p>\n+ * This iterator allows both forward and reverse iteration through the map.\n+ *  \n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ *\n+ * @author Stephen Colebourne\n+ */\n+public interface OrderedMapIterator extends MapIterator, OrderedIterator {\n+    \n+    /**\n+     * Checks to see if there is a previous entry that can be iterated to.\n+     *\n+     * @return <code>true</code> if the iterator has a previous element\n+     */\n+    boolean hasPrevious();\n+\n+    /**\n+     * Gets the previous <em>key</em> from the <code>Map</code>.\n+     *\n+     * @return the previous key in the iteration\n+     * @throws NoSuchElementException if the iteration is finished\n+     */\n+    Object previous();\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/ResettableIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Iterator;\n+\n+/** \n+ * Interface implemented by those iterators that can be reset back to an \n+ * initial state.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public interface ResettableIterator extends Iterator {\n+\n+    /**\n+     * Resets the iterator back to the position at which the iterator\n+     * was created.\n+     */\n+    public void reset();\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/ResettableListIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ResettableListIterator.java,v 1.1 2003/12/01 22:48:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.ListIterator;\n+\n+/** \n+ * Interface implemented by those list iterators that can be reset back \n+ * to an initial state.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/01 22:48:59 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public interface ResettableListIterator extends ListIterator, ResettableIterator {\n+\n+    /**\n+     * Resets the iterator back to the position at which the iterator\n+     * was created.\n+     */\n+    public void reset();\n+\n+}\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java,v 1.2 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java,v 1.3 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Set;\n \n import org.apache.commons.collections.BidiMap;\n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.ResettableIterator;\n import org.apache.commons.collections.collection.AbstractCollectionDecorator;\n import org.apache.commons.collections.iterators.AbstractIteratorDecorator;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n import org.apache.commons.collections.pairs.AbstractMapEntryDecorator;\n \n /**\n  * <code>createMap</code> method.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: AbstractDualBidiMap.java,v 1.2 2003/12/01 22:34:54 scolebourne Exp $\n+ * @version $Id: AbstractDualBidiMap.java,v 1.3 2003/12/01 22:49:00 scolebourne Exp $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java,v 1.4 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java,v 1.5 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.BidiMap;\n import org.apache.commons.collections.OrderedBidiMap;\n import org.apache.commons.collections.OrderedMap;\n+import org.apache.commons.collections.OrderedMapIterator;\n+import org.apache.commons.collections.ResettableIterator;\n import org.apache.commons.collections.SortedBidiMap;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n import org.apache.commons.collections.map.AbstractSortedMapDecorator;\n \n /**\n  * not store each object twice, which can save on memory use.\n  * \n  * @since Commons Collections 3.0\n- * @version $Id: DualTreeBidiMap.java,v 1.4 2003/12/01 22:34:54 scolebourne Exp $\n+ * @version $Id: DualTreeBidiMap.java,v 1.5 2003/12/01 22:49:00 scolebourne Exp $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java,v 1.3 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java,v 1.4 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.BidiMap;\n import org.apache.commons.collections.IteratorUtils;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedBidiMap;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.OrderedIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n+import org.apache.commons.collections.OrderedIterator;\n+import org.apache.commons.collections.OrderedMapIterator;\n import org.apache.commons.collections.pairs.UnmodifiableMapEntry;\n \n /**\n  * UnsupportedOperationException on attempts to call that method.\n  *\n  * @since Commons Collections 3.0 (previously DoubleOrderedMap v2.0)\n- * @version $Revision: 1.3 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Marc Johnson\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/decorators/OrderedMap.java\n+++ b/src/java/org/apache/commons/collections/decorators/OrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/OrderedMap.java,v 1.7 2003/11/16 00:39:37 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/OrderedMap.java,v 1.8 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Map;\n import java.util.Set;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.iterators.EntrySetMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n import org.apache.commons.collections.pairs.AbstractMapEntry;\n \n /**\n  * original position in the iteration.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2003/11/16 00:39:37 $\n+ * @version $Revision: 1.8 $ $Date: 2003/12/01 22:48:59 $\n  * @deprecated TO BE REMOVED BEFORE v3.0\n  * \n  * @author Henri Yandell\n--- a/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java,v 1.3 2003/11/15 23:50:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java,v 1.4 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import org.apache.commons.collections.MapIterator;\n+\n /**\n  * Provides basic behaviour for decorating a map iterator with extra functionality.\n  * <p>\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/11/15 23:50:46 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java,v 1.1 2003/11/20 21:53:58 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java,v 1.2 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import org.apache.commons.collections.OrderedMapIterator;\n+\n /**\n  * Provides basic behaviour for decorating an ordered map iterator with extra functionality.\n  * <p>\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/20 21:53:58 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayIterator.java,v 1.7 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayIterator.java,v 1.8 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.lang.reflect.Array;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableIterator;\n+\n /** \n  * Implements an {@link java.util.Iterator Iterator} over any array.\n  * <p>\n  * the iterator back to the start if required.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.7 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.8 $ $Date: 2003/12/01 22:49:00 $\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java,v 1.9 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java,v 1.10 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableListIterator;\n+\n /**\n  * Implements a {@link ListIterator} over an array. \n  * <p>\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.10 $ $Date: 2003/12/01 22:49:00 $\n  *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java,v 1.3 2003/11/19 23:58:11 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java,v 1.4 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Iterator;\n import java.util.Map;\n \n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.ResettableIterator;\n+\n /**\n  * Implements a <code>MapIterator</code> using a Map entrySet.\n  * Reverse iteration is not supported.\n  * </pre>\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/11/19 23:58:11 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.6 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.7 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableIterator;\n+\n /**\n  * An Iterator that restarts when it reaches the end.\n  * <p>\n  * implementations will throw a ConcurrentModificationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.7 $ $Date: 2003/12/01 22:49:00 $\n  *\n  * @author <a href=\"mailto:joncrlsn@users.sf.net\">Jonathan Carlson</a>\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.9 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.10 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableIterator;\n+\n /** \n  * An {@link Iterator} over an array of objects.\n  * <p>\n  * back to the start if required.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.10 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.10 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.11 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableListIterator;\n+\n /**\n  * Implements a {@link ListIterator} over an array of objects.\n  * <p>\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.10 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.11 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.9 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.10 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableIterator;\n+\n /** \n  * <code>SingletonIterator</code> is an {@link Iterator} over a single \n  * object instance.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.9 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.10 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.10 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.11 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.collections.ResettableListIterator;\n+\n /**\n  * <code>SingletonIterator</code> is an {@link ListIterator} over a single \n  * object instance.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.10 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.11 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java,v 1.2 2003/11/08 18:43:13 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java,v 1.3 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.Unmodifiable;\n \n /** \n  * Decorates a map iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/11/08 18:43:13 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java,v 1.1 2003/11/20 21:45:35 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java,v 1.2 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import org.apache.commons.collections.OrderedMapIterator;\n import org.apache.commons.collections.Unmodifiable;\n \n /** \n  * Decorates an ordered map iterator such that it cannot be modified.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/20 21:45:35 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java,v 1.2 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.map;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n+import org.apache.commons.collections.OrderedMapIterator;\n \n /** \n  * Provides a base decorator that enables additional functionality to be added\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/Flat3Map.java\n+++ b/src/java/org/apache/commons/collections/map/Flat3Map.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/Flat3Map.java,v 1.3 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/Flat3Map.java,v 1.4 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.AMap;\n import org.apache.commons.collections.IteratorUtils;\n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.ResettableIterator;\n import org.apache.commons.collections.iterators.EntrySetMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n \n /**\n  * A <code>Map</code> implementation that stores data in simple fields until\n  * Do not use <code>Flat3Map</code> if the size is likely to grow beyond 3.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/HashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/HashedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/HashedMap.java,v 1.1 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/HashedMap.java,v 1.2 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.AMap;\n import org.apache.commons.collections.IteratorUtils;\n-import org.apache.commons.collections.iterators.MapIterator;\n+import org.apache.commons.collections.MapIterator;\n \n /**\n  * A <code>Map</code> implementation that is a general purpose replacement\n  * methods exposed.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:48:59 $\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ListOrderedMap.java,v 1.4 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ListOrderedMap.java,v 1.5 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n+import org.apache.commons.collections.OrderedMapIterator;\n+import org.apache.commons.collections.ResettableIterator;\n import org.apache.commons.collections.iterators.AbstractIteratorDecorator;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n import org.apache.commons.collections.pairs.AbstractMapEntry;\n \n /**\n  * original position in the iteration.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableMap.java,v 1.3 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableMap.java,v 1.4 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Set;\n \n import org.apache.commons.collections.AMap;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.Unmodifiable;\n import org.apache.commons.collections.collection.UnmodifiableCollection;\n import org.apache.commons.collections.iterators.AbstractIteratorDecorator;\n import org.apache.commons.collections.iterators.EntrySetMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n import org.apache.commons.collections.iterators.UnmodifiableMapIterator;\n import org.apache.commons.collections.pairs.AbstractMapEntryDecorator;\n import org.apache.commons.collections.set.UnmodifiableSet;\n  * Decorates another <code>Map</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java,v 1.2 2003/12/01 22:34:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Map;\n import java.util.Set;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n+import org.apache.commons.collections.OrderedMapIterator;\n import org.apache.commons.collections.Unmodifiable;\n import org.apache.commons.collections.collection.UnmodifiableCollection;\n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n import org.apache.commons.collections.iterators.UnmodifiableMapIterator;\n import org.apache.commons.collections.iterators.UnmodifiableOrderedMapIterator;\n import org.apache.commons.collections.map.UnmodifiableMap.UnmodifiableEntrySet;\n  * Decorates another <code>OrderedMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/01 22:34:53 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/org/apache/commons/collections/TestIteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestIteratorUtils.java,v 1.11 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestIteratorUtils.java,v 1.12 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import junit.framework.Test;\n \n-import org.apache.commons.collections.iterators.MapIterator;\n-import org.apache.commons.collections.iterators.OrderedIterator;\n-import org.apache.commons.collections.iterators.OrderedMapIterator;\n-import org.apache.commons.collections.iterators.ResettableIterator;\n-import org.apache.commons.collections.iterators.ResettableListIterator;\n \n /**\n  * Tests for IteratorUtils.\n  * \n- * @version $Revision: 1.11 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.12 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Unknown\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java,v 1.4 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java,v 1.5 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.BidiMap;\n import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.iterators.AbstractTestMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n import org.apache.commons.collections.map.AbstractTestMap;\n \n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.4 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java,v 1.3 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java,v 1.4 2003/12/01 22:49:00 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n \n import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedBidiMap;\n import org.apache.commons.collections.iterators.AbstractTestMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n \n /**\n  * Abstract test class for {@link OrderedBidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.3 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/01 22:49:00 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java,v 1.6 2003/11/20 00:31:42 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java,v 1.7 2003/12/01 22:48:58 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n+import org.apache.commons.collections.MapIterator;\n+\n /**\n  * Abstract class for testing the MapIterator interface.\n  * <p>\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2003/11/20 00:31:42 $\n+ * @version $Revision: 1.7 $ $Date: 2003/12/01 22:48:58 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java,v 1.2 2003/11/20 21:44:58 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java,v 1.3 2003/12/01 22:48:58 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n+import org.apache.commons.collections.OrderedMapIterator;\n+\n /**\n  * Abstract class for testing the OrderedMapIterator interface.\n  * <p>\n  * overriding the supportsXxx() methods if necessary.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/11/20 21:44:58 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:58 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java,v 1.8 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java,v 1.9 2003/12/01 22:48:58 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n+import org.apache.commons.collections.ResettableIterator;\n+\n /**\n  * Tests the SingletonIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  *\n- * @version $Revision: 1.8 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.9 $ $Date: 2003/12/01 22:48:58 $\n  * \n  * @author James Strachan\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java,v 1.8 2003/11/14 22:58:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java,v 1.9 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n+import org.apache.commons.collections.ResettableListIterator;\n+\n /**\n  * Tests the SingletonListIterator.\n  *\n- * @version $Revision: 1.8 $ $Date: 2003/11/14 22:58:27 $\n+ * @version $Revision: 1.9 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java,v 1.5 2003/12/01 22:34:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java,v 1.6 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.TestSuite;\n \n import org.apache.commons.collections.BidiMap;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.Unmodifiable;\n import org.apache.commons.collections.bidimap.DualHashBidiMap;\n \n /**\n  * Tests the UnmodifiableMapIterator.\n  * \n- * @version $Revision: 1.5 $ $Date: 2003/12/01 22:34:55 $\n+ * @version $Revision: 1.6 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java,v 1.2 2003/12/01 22:34:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java,v 1.3 2003/12/01 22:48:58 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n+import org.apache.commons.collections.OrderedMapIterator;\n import org.apache.commons.collections.Unmodifiable;\n import org.apache.commons.collections.map.ListOrderedMap;\n \n /**\n  * Tests the UnmodifiableOrderedMapIterator.\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/12/01 22:34:55 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:58 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/AbstractTestAMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestAMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/Attic/AbstractTestAMap.java,v 1.1 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/Attic/AbstractTestAMap.java,v 1.2 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.AMap;\n import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.iterators.AbstractTestMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n \n /**\n  * Abstract test class for {@link AMap} methods and contracts.\n  *\n- * @version $Revision: 1.1 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java,v 1.2 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.TreeMap;\n \n import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.OrderedMap;\n import org.apache.commons.collections.comparators.NullComparator;\n import org.apache.commons.collections.iterators.AbstractTestOrderedMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n \n /**\n  * Abstract test class for {@link OrderedMap} methods and contracts.\n  *\n- * @version $Revision: 1.2 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n+++ b/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestFlat3Map.java,v 1.2 2003/12/01 22:34:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestFlat3Map.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.textui.TestRunner;\n \n import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n import org.apache.commons.collections.iterators.AbstractTestMapIterator;\n-import org.apache.commons.collections.iterators.MapIterator;\n \n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/12/01 22:34:54 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1070318940, "metainfo": ""}