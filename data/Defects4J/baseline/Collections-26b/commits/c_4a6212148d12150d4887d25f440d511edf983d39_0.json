{"sha": "4a6212148d12150d4887d25f440d511edf983d39", "log": "Fix ExtendedProperties.convertProperties to pickup any default parent configuration bug 32204, from Shinobu Kawai  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n /*\n- *  Copyright 2001-2004 The Apache Software Foundation\n+ *  Copyright 2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  * @author Janek Bogucki\n  * @author Mohan Kishore\n  * @author Stephen Colebourne\n+ * @author Shinobu Kawai\n  */\n public class ExtendedProperties extends Hashtable {\n     \n \n     /**\n      * Convert a standard properties class into a configuration class.\n+     * <p>\n+     * NOTE: From Commons Collections 3.2 this method will pick up\n+     * any default parent Properties of the specified input object.\n      *\n      * @param props  the properties object to convert\n      * @return new ExtendedProperties created from props\n     public static ExtendedProperties convertProperties(Properties props) {\n         ExtendedProperties c = new ExtendedProperties();\n \n-        for (Enumeration e = props.keys(); e.hasMoreElements();) {\n+        for (Enumeration e = props.propertyNames(); e.hasMoreElements();) {\n             String s = (String) e.nextElement();\n             c.setProperty(s, props.getProperty(s));\n         }\n \n         return c;\n     }\n-    \n+\n }\n--- a/src/test/org/apache/commons/collections/TestExtendedProperties.java\n+++ b/src/test/org/apache/commons/collections/TestExtendedProperties.java\n /*\n- *  Copyright 2001-2004 The Apache Software Foundation\n+ *  Copyright 2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.util.Properties;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n  * @author Geir Magnusson Jr.\n  * @author Mohan Kishore\n  * @author Stephen Colebourne\n+ * @author Shinobu Kawai\n  */\n public class TestExtendedProperties extends TestCase {\n     \n         assertEquals(\"c\", ep1.getVector(\"one\").get(2));\n         assertEquals(\"d\", ep1.getVector(\"one\").get(3));\n     }\n-    \n+\n+    public void testInheritDefaultProperties() {\n+        Properties defaults = new Properties();\n+        defaults.setProperty(\"resource.loader\", \"class\");\n+\n+        Properties properties = new Properties(defaults);\n+        properties.setProperty(\"test\", \"foo\");\n+\n+        ExtendedProperties extended = ExtendedProperties.convertProperties(properties);\n+\n+        assertEquals(\"foo\", extended.getString(\"test\"));\n+        assertEquals(\"class\", extended.getString(\"resource.loader\"));\n+    }\n+\n }", "timestamp": 1116803084, "metainfo": ""}