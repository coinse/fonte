{"sha": "3a5194a37a91ba9f1d65913d2ca33e0e215eecaa", "log": "more cleaning up, removing negative comments :)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/decorators/OrderedMap.java\n+++ b/src/java/org/apache/commons/collections/decorators/OrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/OrderedMap.java,v 1.2 2003/10/03 06:25:03 bayard Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/OrderedMap.java,v 1.3 2003/10/03 06:31:03 bayard Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * The order can be observed via the iterator or toArray methods.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/03 06:25:03 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/03 06:31:03 $\n  * \n  * @author Henri Yandell\n  */\n         return result;\n     }\n \n-    //// From here on down, this becomes hell.\n-\n     public Set keySet() {\n-        // TODO: calling remove on the Set needs to remove from this Map\n-        // Iterator.remove, Set.remove, removeAll retainAll, and clear \n-\n         return new KeyView( this, this.insertOrder );\n-\n-        /* OLD\n-        Set set = new java.util.HashSet( insertOrder.size() );\n-        set = OrderedSet.decorate( set );\n-        for (Iterator it = insertOrder.iterator(); it.hasNext();) {\n-            set.add( it.next() );\n-        }\n-        return set;\n-        */\n     }\n \n     public Collection values() {\n-        // TODO: calling remove on the Collection needs to remove from this Map\n-        // Iterator.remove, Collection.remove, removeAll, retainAll and clear\n         return new ValuesView( this, this.insertOrder );\n     }\n \n     // QUERY: Should a change of value change insertion order?\n     public Set entrySet() {\n-        // TODO: calling remove on the Set needs to remove from this Map\n-        // Iterator.remove, Set.remove, removeAll, retainAll and clear\n         return new EntrySetView( this, this.insertOrder );\n     }\n ", "timestamp": 1065162663, "metainfo": ""}