{"sha": "4f699c8628035436b233929f77fa30bae150ff96", "log": "Additional testing of new maps   ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/TestHashedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestHashedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestHashedMap.java,v 1.2 2003/12/02 23:51:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestHashedMap.java,v 1.3 2003/12/07 01:22:50 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/12/02 23:51:49 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/07 01:22:50 $\n  * \n  * @author Stephen Colebourne\n  */\n         return \"3\";\n     }\n \n+//    public void testCreate() throws Exception {\n+//        resetEmpty();\n+//        writeExternalFormToDisk((Serializable) map, \"D:/dev/collections/data/test/HashedMap.emptyCollection.version3.obj\");\n+//        resetFull();\n+//        writeExternalFormToDisk((Serializable) map, \"D:/dev/collections/data/test/HashedMap.fullCollection.version3.obj\");\n+//    }\n }\n--- a/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestIdentityMap.java,v 1.2 2003/12/02 23:51:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestIdentityMap.java,v 1.3 2003/12/07 01:22:50 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n \n+import org.apache.commons.collections.AbstractTestObject;\n import org.apache.commons.collections.IterableMap;\n-import org.apache.commons.collections.AbstractTestObject;\n \n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.2 $ $Date: 2003/12/02 23:51:49 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/07 01:22:50 $\n  * \n  * @author Stephen Colebourne\n  */\n         assertEquals(false, entry1.equals(entry3));\n     }\n     \n+//    public void testCreate() throws Exception {\n+//        Map map = new IdentityMap();\n+//        writeExternalFormToDisk((Serializable) map, \"D:/dev/collections/data/test/IdentityMap.emptyCollection.version3.obj\");\n+//        map = new IdentityMap();\n+//        map.put(I1A, I2A);\n+//        map.put(I1B, I2A);\n+//        map.put(I2A, I2B);\n+//        writeExternalFormToDisk((Serializable) map, \"D:/dev/collections/data/test/IdentityMap.fullCollection.version3.obj\");\n+//    }\n }\n--- a/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestLinkedMap.java,v 1.1 2003/12/03 19:04:41 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/map/TestLinkedMap.java,v 1.2 2003/12/07 01:22:50 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections.map;\n \n import java.util.ArrayList;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n /**\n  * JUnit tests.\n  * \n- * @version $Revision: 1.1 $ $Date: 2003/12/03 19:04:41 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/07 01:22:50 $\n  * \n  * @author Stephen Colebourne\n  */\n         assertSame(list.get(0), it.next());\n     }\n     \n+    //-----------------------------------------------------------------------\n+    public void testInsertionOrder() {\n+        if (isPutAddSupported() == false || isPutChangeSupported() == false) return;\n+        Object[] keys = getSampleKeys();\n+        Object[] values = getSampleValues();\n+        Iterator it = null;\n+        \n+        resetEmpty();\n+        map.put(keys[0], values[0]);\n+        map.put(keys[1], values[1]);\n+        it = map.keySet().iterator();\n+        assertSame(keys[0], it.next());\n+        assertSame(keys[1], it.next());\n+        it = map.values().iterator();\n+        assertSame(values[0], it.next());\n+        assertSame(values[1], it.next());\n+\n+        // no change to order\n+        map.put(keys[1], values[1]);\n+        it = map.keySet().iterator();\n+        assertSame(keys[0], it.next());\n+        assertSame(keys[1], it.next());\n+        it = map.values().iterator();\n+        assertSame(values[0], it.next());\n+        assertSame(values[1], it.next());\n+\n+        // no change to order\n+        map.put(keys[1], values[2]);\n+        it = map.keySet().iterator();\n+        assertSame(keys[0], it.next());\n+        assertSame(keys[1], it.next());\n+        it = map.values().iterator();\n+        assertSame(values[0], it.next());\n+        assertSame(values[2], it.next());\n+\n+        // no change to order\n+        map.put(keys[0], values[3]);\n+        it = map.keySet().iterator();\n+        assertSame(keys[0], it.next());\n+        assertSame(keys[1], it.next());\n+        it = map.values().iterator();\n+        assertSame(values[3], it.next());\n+        assertSame(values[2], it.next());\n+    }\n+    \n //    public void testCreate() throws Exception {\n //        resetEmpty();\n //        writeExternalFormToDisk((Serializable) map, \"D:/dev/collections/data/test/LinkedMap.emptyCollection.version3.obj\");", "timestamp": 1070760170, "metainfo": ""}