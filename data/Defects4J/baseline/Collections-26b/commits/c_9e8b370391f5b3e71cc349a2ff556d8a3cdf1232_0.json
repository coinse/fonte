{"sha": "9e8b370391f5b3e71cc349a2ff556d8a3cdf1232", "log": "Add unit test for TrieUtils.  ", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/collections4/TrieUtilsTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.collections4;\n+\n+import junit.framework.Test;\n+\n+import org.apache.commons.collections4.trie.PatriciaTrie;\n+import org.apache.commons.collections4.trie.UnmodifiableTrie;\n+\n+/**\n+ * Tests for TrieUtils factory methods.\n+ *\n+ * @version $Id$\n+ */\n+public class TrieUtilsTest extends BulkTest {\n+\n+    public TrieUtilsTest(final String name) {\n+        super(name);\n+    }\n+\n+\n+    public static Test suite() {\n+        return BulkTest.makeSuite(TrieUtilsTest.class);\n+    }\n+\n+    //----------------------------------------------------------------------\n+\n+    public void testUnmodifiableTrie() {\n+        Trie<String, Object> trie = TrieUtils.unmodifiableTrie(new PatriciaTrie<Object>());\n+        assertTrue(\"Returned object should be an UnmodifiableTrie.\",\n+            trie instanceof UnmodifiableTrie);\n+        try {\n+            TrieUtils.unmodifiableTrie(null);\n+            fail(\"Expecting IllegalArgumentException for null trie.\");\n+        } catch (final IllegalArgumentException ex) {\n+            // expected\n+        }\n+    }\n+\n+}\n+\n+", "timestamp": 1384160982, "metainfo": ""}