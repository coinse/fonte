{"sha": "b5f981ff98513fb91bcfa34d7ddff830137e5cfb", "log": "override equals and hashCode to match Comparator contract   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.7 2002/06/12 03:59:17 mas Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/06/12 03:59:17 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.8 2003/01/07 23:26:47 rwaldhoff Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2003/01/07 23:26:47 $\n  *\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * \n  * @since 2.0\n  * @author Morgan Delagrange\n+ * @version $Revision: 1.8 $ $Date: 2003/01/07 23:26:47 $\n  */\n public class ComparatorChain implements Comparator,Serializable {\n \n         return 0;\n     }\n \n+    /**\n+     * Implement a hash code for this comparator that is consistent with\n+     * {@link #equals}.\n+     * \n+     * @since Collections 2.2\n+     */\n+    public int hashCode() {\n+        int hash = 0;\n+        if(null != comparatorChain) {\n+            hash ^= comparatorChain.hashCode();\n+        }\n+        if(null != orderingBits) {\n+            hash ^= orderingBits.hashCode();\n+        }\n+        return hash;\n+    }\n+\n+    /**\n+     * Returns <code>true</code> iff <i>that</i> Object is \n+     * is a {@link Comparator} whose ordering is known to be \n+     * equivalent to mine.\n+     * <p>\n+     * This implementation returns <code>true</code>\n+     * iff <code><i>that</i>.{@link Object#getClass getClass()}</code>\n+     * equals <code>this.getClass()</code>, and the underlying \n+     * comparators and order bits are equal.  Subclasses may want \n+     * to override this behavior to remain consistent with the \n+     * {@link Comparator.equals} contract.\n+     * \n+     * @since Collections 2.2\n+     */\n+    public boolean equals(Object that) {\n+        if(this == that) {\n+            return true;\n+        } else if(null == that) {\n+            return false;\n+        } else if(that.getClass().equals(this.getClass())) {\n+            ComparatorChain chain = (ComparatorChain)that;\n+            return ( (null == orderingBits ? null == chain.orderingBits : orderingBits.equals(chain.orderingBits))\n+                   && (null == comparatorChain ? null == chain.comparatorChain : comparatorChain.equals(chain.comparatorChain)) );\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    // use serialVersionUID from Collections 2.0 for interoperability\n+    private static final long serialVersionUID = -721644942746081630L;\n }\n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * @since 2.0\n  * @author bayard@generationjava.com\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- * @version $Id: ReverseComparator.java,v 1.9 2003/01/07 23:05:33 rwaldhoff Exp $\n+ * @version $Id: ReverseComparator.java,v 1.10 2003/01/07 23:26:47 rwaldhoff Exp $\n  */\n public class ReverseComparator implements Comparator,Serializable {\n ", "timestamp": 1041982007, "metainfo": ""}