{"sha": "36d6f4b3b3a7e9926607c11bd047f49fe4bae749", "log": "Refactor tests   ", "commit": "\n--- a/src/test/org/apache/commons/collections/observed/ObservedTestHelper.java\n+++ b/src/test/org/apache/commons/collections/observed/ObservedTestHelper.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/ObservedTestHelper.java,v 1.9 2003/09/21 20:01:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/ObservedTestHelper.java,v 1.10 2003/09/24 08:24:46 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections.observed;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n import java.util.ListIterator;\n  * {@link ObservedCollection} implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.9 $ $Date: 2003/09/21 20:01:53 $\n+ * @version $Revision: 1.10 $ $Date: 2003/09/24 08:24:46 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class ObservedTestHelper {\n-    \n+public class ObservedTestHelper extends Assert {\n+    \n+    public static Integer FIVE = new Integer(5);\n     public static Integer SIX = new Integer(6);\n     public static Integer SEVEN = new Integer(7);\n     public static Integer EIGHT = new Integer(8);\n+    public static Integer NINE = new Integer(9);\n     public static List SIX_SEVEN_LIST = new ArrayList();\n     static {\n         SIX_SEVEN_LIST.add(SIX);\n     }\n     \n     public static void bulkTestObservedSet(ObservedFactory factory) {\n-        Assert.assertTrue(factory.createObservedCollection() instanceof ObservableSet);\n-        Assert.assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableSet);\n-        Assert.assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableSet);\n+        assertTrue(factory.createObservedCollection() instanceof ObservableSet);\n+        assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableSet);\n+        assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableSet);\n         \n         bulkTestObservedCollection(factory);\n     }\n     \n     public static void bulkTestObservedSortedSet(ObservedFactory factory) {\n-        Assert.assertTrue(factory.createObservedCollection() instanceof ObservableSortedSet);\n-        Assert.assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableSortedSet);\n-        Assert.assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableSortedSet);\n+        assertTrue(factory.createObservedCollection() instanceof ObservableSortedSet);\n+        assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableSortedSet);\n+        assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableSortedSet);\n         \n         bulkTestObservedCollection(factory);\n-        // TODO: subSet...\n+        doTestSubSet(factory);\n+        doTestHeadSet(factory);\n+        doTestTailSet(factory);\n     }\n     \n     public static void bulkTestObservedList(ObservedFactory factory) {\n-        Assert.assertTrue(factory.createObservedCollection() instanceof ObservableList);\n-        Assert.assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableList);\n-        Assert.assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableList);\n+        assertTrue(factory.createObservedCollection() instanceof ObservableList);\n+        assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableList);\n+        assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableList);\n         \n         bulkTestObservedCollection(factory);\n         doTestAddIndexed(factory);\n     }\n     \n     public static void bulkTestObservedBag(ObservedFactory factory) {\n-        Assert.assertTrue(factory.createObservedCollection() instanceof ObservableBag);\n-        Assert.assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableBag);\n-        Assert.assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableBag);\n+        assertTrue(factory.createObservedCollection() instanceof ObservableBag);\n+        assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableBag);\n+        assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableBag);\n         \n         bulkTestObservedCollection(factory);\n         doTestAddNCopies(factory);\n     }\n     \n     public static void bulkTestObservedBuffer(ObservedFactory factory) {\n-        Assert.assertTrue(factory.createObservedCollection() instanceof ObservableBuffer);\n-        Assert.assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableBuffer);\n-        Assert.assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableBuffer);\n+        assertTrue(factory.createObservedCollection() instanceof ObservableBuffer);\n+        assertTrue(factory.createObservedCollection(LISTENER) instanceof ObservableBuffer);\n+        assertTrue(factory.createObservedCollection(new StandardModificationHandler()) instanceof ObservableBuffer);\n         \n         bulkTestObservedCollection(factory);\n         doTestRemoveNext(factory);\n     public static void doTestFactoryPlain(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection();\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertNotNull(coll.getHandler());\n+        assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n     }\n     \n     public static void doTestFactoryWithPreListener(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection(PRE_LISTENER);\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n-        Assert.assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(PRE_LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n+        assertNotNull(coll.getHandler());\n+        assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n+        assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(PRE_LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n         \n         PRE_LISTENER.preEvent = null;\n         coll.add(SIX);\n-        Assert.assertTrue(PRE_LISTENER.preEvent != null);\n+        assertTrue(PRE_LISTENER.preEvent != null);\n     }\n     \n     public static void doTestFactoryWithPostListener(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection(POST_LISTENER);\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(POST_LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n+        assertNotNull(coll.getHandler());\n+        assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(POST_LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n         \n         POST_LISTENER.postEvent = null;\n         coll.add(SIX);\n-        Assert.assertTrue(POST_LISTENER.postEvent != null);\n+        assertTrue(POST_LISTENER.postEvent != null);\n     }\n     \n     public static void doTestFactoryWithListener(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection(LISTENER);\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n-        Assert.assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n+        assertNotNull(coll.getHandler());\n+        assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n+        assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n+        assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n         \n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n         coll.add(SIX);\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent != null);\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent != null);\n     }\n     \n     public static void doTestFactoryWithHandler(ObservedFactory factory) {\n         StandardModificationHandler handler = new StandardModificationHandler();\n         ObservableCollection coll = factory.createObservedCollection(handler);\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertSame(handler, coll.getHandler());\n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertNotNull(coll.getHandler());\n+        assertSame(handler, coll.getHandler());\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n     }\n     \n     public static void doTestFactoryWithObject(ObservedFactory factory) {\n         try {\n             factory.createObservedCollection(new Object());\n-            Assert.fail();\n+            fail();\n         } catch (IllegalArgumentException ex) {}\n     }\n     \n     public static void doTestFactoryWithNull(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection(null);\n         \n-        Assert.assertNotNull(coll.getHandler());\n-        Assert.assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertNotNull(coll.getHandler());\n+        assertEquals(StandardModificationHandler.class, coll.getHandler().getClass());\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n     }\n     \n     //-----------------------------------------------------------------------\n     public static void doTestAddRemoveGetPreListeners(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection();\n         \n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n         coll.getHandler().addPreModificationListener(LISTENER);\n-        Assert.assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n+        assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n         \n         coll.getHandler().addPreModificationListener(LISTENER2);\n-        Assert.assertEquals(2, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[1]);\n+        assertEquals(2, coll.getHandler().getPreModificationListeners().length);\n+        assertSame(LISTENER, coll.getHandler().getPreModificationListeners()[0]);\n+        assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[1]);\n         \n         coll.getHandler().removePreModificationListener(LISTENER);\n-        Assert.assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n+        assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[0]);\n         \n         coll.getHandler().removePreModificationListener(LISTENER);  // check no error if not present\n-        Assert.assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPreModificationListeners().length);\n+        assertSame(LISTENER2, coll.getHandler().getPreModificationListeners()[0]);\n         \n         coll.getHandler().removePreModificationListener(LISTENER2);\n-        Assert.assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPreModificationListeners().length);\n         \n         try {\n             coll.getHandler().addPreModificationListener(new Object());\n-            Assert.fail();\n+            fail();\n         } catch (ClassCastException ex) {\n         }\n     }\n     public static void doTestAddRemoveGetPostListeners(ObservedFactory factory) {\n         ObservableCollection coll = factory.createObservedCollection();\n         \n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n         coll.getHandler().addPostModificationListener(LISTENER);\n-        Assert.assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n         \n         coll.getHandler().addPostModificationListener(LISTENER2);\n-        Assert.assertEquals(2, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[1]);\n+        assertEquals(2, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(LISTENER, coll.getHandler().getPostModificationListeners()[0]);\n+        assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[1]);\n         \n         coll.getHandler().removePostModificationListener(LISTENER);\n-        Assert.assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[0]);\n         \n         coll.getHandler().removePostModificationListener(LISTENER);  // check no error if not present\n-        Assert.assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n-        Assert.assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[0]);\n+        assertEquals(1, coll.getHandler().getPostModificationListeners().length);\n+        assertSame(LISTENER2, coll.getHandler().getPostModificationListeners()[0]);\n         \n         coll.getHandler().removePostModificationListener(LISTENER2);\n-        Assert.assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n+        assertEquals(0, coll.getHandler().getPostModificationListeners().length);\n         \n         try {\n             coll.getHandler().addPostModificationListener(new Object());\n-            Assert.fail();\n+            fail();\n         } catch (ClassCastException ex) {\n         }\n     }\n         \n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(0, coll.size());\n+        assertEquals(0, coll.size());\n         coll.add(SIX);\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SIX, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SIX, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(0, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SIX, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SIX, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(0, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-        \n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SIX, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(SIX, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(0, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SIX, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SIX, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(0, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+        \n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n         \n         // this isn't a full test, but...\n-        Assert.assertEquals(false, LISTENER.postEvent.getBaseCollection() instanceof ObservableCollection);\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(1, coll.size());\n+        assertEquals(false, LISTENER.postEvent.getBaseCollection() instanceof ObservableCollection);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, coll.size());\n         coll.add(SEVEN);\n-        Assert.assertEquals(2, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(1, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+        assertEquals(2, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(1, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(1, LISTENER.postEvent.getPreSize());\n+        assertEquals(2, LISTENER.postEvent.getPostSize());\n+        assertEquals(1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n         \n         if (coll instanceof SortedSet == false) {\n             LISTENER.preEvent = null;\n             LISTENER.postEvent = null;\n-            Assert.assertEquals(2, coll.size());\n+            assertEquals(2, coll.size());\n             coll.add(SIX_SEVEN_LIST);\n-            Assert.assertEquals(3, coll.size());\n+            assertEquals(3, coll.size());\n             // pre\n-            Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-            Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-            Assert.assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n-            Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-            Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n-            Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-            Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection().iterator().next());\n-            Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-            Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-            Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n+            assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+            assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+            assertEquals(ModificationEventType.ADD, LISTENER.preEvent.getType());\n+            assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+            assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n+            assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+            assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection().iterator().next());\n+            assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+            assertSame(null, LISTENER.preEvent.getPrevious());\n+            assertEquals(2, LISTENER.preEvent.getPreSize());\n             // post\n-            Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-            Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-            Assert.assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n-            Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-            Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n-            Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-            Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection().iterator().next());\n-            Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-            Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-            Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-            Assert.assertEquals(3, LISTENER.postEvent.getPostSize());\n-            Assert.assertEquals(1, LISTENER.postEvent.getSizeChange());\n-            Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+            assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+            assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+            assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n+            assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+            assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n+            assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+            assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection().iterator().next());\n+            assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+            assertSame(null, LISTENER.postEvent.getPrevious());\n+            assertEquals(2, LISTENER.postEvent.getPreSize());\n+            assertEquals(3, LISTENER.postEvent.getPostSize());\n+            assertEquals(1, LISTENER.postEvent.getSizeChange());\n+            assertEquals(true, LISTENER.postEvent.isSizeChanged());\n         }\n     }\n \n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.add(1, EIGHT);\n-        Assert.assertEquals(3, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_INDEXED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(3, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(3, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_INDEXED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_INDEXED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(3, LISTENER.postEvent.getPostSize());\n+        assertEquals(1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.add(EIGHT, 3);\n-        Assert.assertEquals(5, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_NCOPIES, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(3, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_NCOPIES, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(3, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(5, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(3, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(5, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_NCOPIES, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(3, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_NCOPIES, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(3, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(5, LISTENER.postEvent.getPostSize());\n+        assertEquals(3, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n         ListIterator it = coll.listIterator();\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         it.next();\n         it.add(EIGHT);\n-        Assert.assertEquals(3, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ITERATED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(3, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(3, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ITERATED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ITERATED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(3, LISTENER.postEvent.getPostSize());\n+        assertEquals(1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         \n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(0, coll.size());\n-        coll.addAll(SIX_SEVEN_LIST);\n-        Assert.assertEquals(2, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ALL, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(0, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ALL, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(0, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(0, coll.size());\n+        coll.addAll(SIX_SEVEN_LIST);\n+        assertEquals(2, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ALL, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(0, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ALL, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(0, LISTENER.postEvent.getPreSize());\n+        assertEquals(2, LISTENER.postEvent.getPostSize());\n+        assertEquals(2, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(true, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.addAll(1, SIX_SEVEN_LIST);\n-        Assert.assertEquals(4, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ALL_INDEXED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_ALL_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(4, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(4, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ALL_INDEXED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.ADD_ALL_INDEXED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(4, LISTENER.postEvent.getPostSize());\n+        assertEquals(2, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(true, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(true, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.clear();\n-        Assert.assertEquals(0, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.CLEAR, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.CLEAR, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(0, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(0, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-2, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(0, coll.size());\n+        assertEquals(0, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.CLEAR, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(null, LISTENER.preEvent.getChangeObject());\n+        assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.CLEAR, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(null, LISTENER.postEvent.getChangeObject());\n+        assertEquals(0, LISTENER.postEvent.getChangeCollection().size());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(0, LISTENER.postEvent.getPostSize());\n+        assertEquals(-2, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(true, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(0, coll.size());\n         coll.clear();  // already done this\n-        Assert.assertEquals(0, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(0, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.remove(SEVEN);\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(1, coll.size());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, coll.size());\n         coll.remove(SEVEN);  // already removed\n-        Assert.assertEquals(1, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(1, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.remove(0);\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_INDEXED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(0, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(0, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(0, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SIX, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_INDEXED, LISTENER.preEvent.getType());\n+        assertEquals(0, LISTENER.preEvent.getChangeIndex());\n+        assertSame(null, LISTENER.preEvent.getChangeObject());\n+        assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_INDEXED, LISTENER.postEvent.getType());\n+        assertEquals(0, LISTENER.postEvent.getChangeIndex());\n+        assertSame(null, LISTENER.postEvent.getChangeObject());\n+        assertEquals(0, LISTENER.postEvent.getChangeCollection().size());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SIX, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.add(SEVEN, 7);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(13, coll.size());\n+        assertEquals(13, coll.size());\n         coll.remove(SEVEN, 3);\n-        Assert.assertEquals(10, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_NCOPIES, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(3, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(13, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_NCOPIES, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(3, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(13, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(10, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-3, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(10, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_NCOPIES, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(3, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(13, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_NCOPIES, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(3, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        assertEquals(13, LISTENER.postEvent.getPreSize());\n+        assertEquals(10, LISTENER.postEvent.getPostSize());\n+        assertEquals(-3, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.add(SEVEN);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.remove();\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_NEXT, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_NEXT, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_NEXT, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(null, LISTENER.preEvent.getChangeObject());\n+        assertEquals(0, LISTENER.preEvent.getChangeCollection().size());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_NEXT, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         Iterator it = coll.iterator();\n         it.next();\n         Object removed = it.next();  // store remove as iterator order may vary\n         it.remove();\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(removed, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(removed, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(removed, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(removed, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(removed, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(removed, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(1, coll.size());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(removed, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(removed, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(removed, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(removed, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(removed, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(removed, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, coll.size());\n         coll.remove(removed);  // already removed\n-        Assert.assertEquals(1, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(1, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     public static void doTestRemoveListIterated(ObservedFactory factory) {\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         ListIterator it = coll.listIterator();\n         it.next();\n         it.next();\n         it.remove();\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(1, coll.size());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(SEVEN, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, coll.size());\n         coll.remove(SEVEN);  // already removed\n-        Assert.assertEquals(1, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(1, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(3, coll.size());\n+        assertEquals(3, coll.size());\n         coll.removeAll(SIX_SEVEN_LIST);\n-        Assert.assertEquals(1, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ALL, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(3, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ALL, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(3, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(1, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-2, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(1, coll.size());\n+        assertEquals(1, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ALL, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(3, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.REMOVE_ALL, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(3, LISTENER.postEvent.getPreSize());\n+        assertEquals(1, LISTENER.postEvent.getPostSize());\n+        assertEquals(-2, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(true, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, coll.size());\n         coll.removeAll(SIX_SEVEN_LIST);  // already done this\n-        Assert.assertEquals(1, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(1, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(3, coll.size());\n+        assertEquals(3, coll.size());\n         coll.retainAll(SIX_SEVEN_LIST);\n-        Assert.assertEquals(2, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.RETAIN_ALL, LISTENER.preEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(3, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.RETAIN_ALL, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(3, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeBulk());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.RETAIN_ALL, LISTENER.preEvent.getType());\n+        assertEquals(-1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.preEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(3, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.RETAIN_ALL, LISTENER.postEvent.getType());\n+        assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeObject());\n+        assertSame(SIX_SEVEN_LIST, LISTENER.postEvent.getChangeCollection());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.postEvent.getPrevious());\n+        assertEquals(3, LISTENER.postEvent.getPreSize());\n+        assertEquals(2, LISTENER.postEvent.getPostSize());\n+        assertEquals(-1, LISTENER.postEvent.getSizeChange());\n+        assertEquals(true, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(true, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(false, LISTENER.postEvent.isTypeChange());\n+        assertEquals(true, LISTENER.postEvent.isTypeBulk());\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, coll.size());\n         coll.retainAll(SIX_SEVEN_LIST);  // already done this\n-        Assert.assertEquals(2, coll.size());\n-        Assert.assertTrue(LISTENER.preEvent != null);\n-        Assert.assertTrue(LISTENER.postEvent == null);\n+        assertEquals(2, coll.size());\n+        assertTrue(LISTENER.preEvent != null);\n+        assertTrue(LISTENER.postEvent == null);\n     }\n \n     //-----------------------------------------------------------------------\n         coll.addAll(SIX_SEVEN_LIST);\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         coll.set(0, EIGHT);\n-        Assert.assertEquals(2, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_INDEXED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(0, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(null, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(0, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SIX, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(0, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(2, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.SET_INDEXED, LISTENER.preEvent.getType());\n+        assertEquals(0, LISTENER.preEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(null, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.SET_INDEXED, LISTENER.postEvent.getType());\n+        assertEquals(0, LISTENER.postEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SIX, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(2, LISTENER.postEvent.getPostSize());\n+        assertEquals(0, LISTENER.postEvent.getSizeChange());\n+        assertEquals(false, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(true, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n         ListIterator it = coll.listIterator();\n-        Assert.assertEquals(2, coll.size());\n+        assertEquals(2, coll.size());\n         it.next();\n         it.next();\n         it.set(EIGHT);\n-        Assert.assertEquals(2, coll.size());\n-        // pre\n-        Assert.assertSame(coll, LISTENER.preEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_ITERATED, LISTENER.preEvent.getType());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.preEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.preEvent.getPreSize());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(0, LISTENER.postEvent.getSizeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isSizeChanged());\n-\n-        Assert.assertEquals(false, LISTENER.postEvent.isView());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertEquals(null, LISTENER.postEvent.getView());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeAdd());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeReduce());\n-        Assert.assertEquals(true, LISTENER.postEvent.isTypeChange());\n-        Assert.assertEquals(false, LISTENER.postEvent.isTypeBulk());\n+        assertEquals(2, coll.size());\n+        // pre\n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(ModificationEventType.SET_ITERATED, LISTENER.preEvent.getType());\n+        assertEquals(1, LISTENER.preEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeObject());\n+        assertEquals(1, LISTENER.preEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.preEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.preEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.preEvent.getPrevious());\n+        assertEquals(2, LISTENER.preEvent.getPreSize());\n+        // post\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(ModificationEventType.SET_ITERATED, LISTENER.postEvent.getType());\n+        assertEquals(1, LISTENER.postEvent.getChangeIndex());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n+        assertEquals(1, LISTENER.postEvent.getChangeCollection().size());\n+        assertSame(EIGHT, LISTENER.postEvent.getChangeCollection().iterator().next());\n+        assertEquals(1, LISTENER.postEvent.getChangeRepeat());\n+        assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n+        assertEquals(2, LISTENER.postEvent.getPreSize());\n+        assertEquals(2, LISTENER.postEvent.getPostSize());\n+        assertEquals(0, LISTENER.postEvent.getSizeChange());\n+        assertEquals(false, LISTENER.postEvent.isSizeChanged());\n+\n+        assertEquals(false, LISTENER.postEvent.isView());\n+        assertEquals(-1, LISTENER.postEvent.getViewOffset());\n+        assertEquals(null, LISTENER.postEvent.getView());\n+        assertEquals(false, LISTENER.postEvent.isTypeAdd());\n+        assertEquals(false, LISTENER.postEvent.isTypeReduce());\n+        assertEquals(true, LISTENER.postEvent.isTypeChange());\n+        assertEquals(false, LISTENER.postEvent.isTypeBulk());\n     }\n \n     //-----------------------------------------------------------------------\n         \n         LISTENER.preEvent = null;\n         LISTENER.postEvent = null;\n-        Assert.assertEquals(3, subList.size());\n+        assertEquals(3, subList.size());\n         subList.add(EIGHT);\n-        Assert.assertEquals(4, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(5, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(4, subList.size());\n+        assertEquals(4, subList.size());\n+        checkPrePost(coll, ModificationEventType.ADD, -1, EIGHT, null, 5, 6, subList, 1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(4, subList.size());\n         subList.add(1, EIGHT);\n-        Assert.assertEquals(5, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.ADD_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(2, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(7, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(5, subList.size());\n+        assertEquals(5, subList.size());\n+        checkPrePost(coll, ModificationEventType.ADD_INDEXED, 2, EIGHT, null, 6, 7, subList, 1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(5, subList.size());\n         subList.set(3, SEVEN);\n-        Assert.assertEquals(5, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_INDEXED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(4, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SIX, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(7, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(7, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(5, subList.size());\n+        assertEquals(5, subList.size());\n+        checkPrePost(coll, ModificationEventType.SET_INDEXED, 4, SEVEN, SIX, 7, 7, subList, 1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(5, subList.size());\n         ListIterator it = subList.listIterator();\n         it.next();\n         it.remove();\n-        Assert.assertEquals(4, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.REMOVE_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(7, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(4, subList.size());\n+        assertEquals(4, subList.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE_ITERATED, 1, SEVEN, SEVEN, 7, 6, subList, 1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(4, subList.size());\n         it = subList.listIterator();\n         it.next();\n         it.next();\n         it.next();\n         it.set(EIGHT);\n-        Assert.assertEquals(4, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.SET_ITERATED, LISTENER.postEvent.getType());\n-        Assert.assertEquals(3, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(EIGHT, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(SEVEN, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n-        \n-        LISTENER.preEvent = null;\n-        LISTENER.postEvent = null;\n-        Assert.assertEquals(4, subList.size());\n+        assertEquals(4, subList.size());\n+        checkPrePost(coll, ModificationEventType.SET_ITERATED, 3, EIGHT, SEVEN, 6, 6, subList, 1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(4, subList.size());\n         subList.clear();\n-        Assert.assertEquals(0, subList.size());\n-        // post\n-        Assert.assertSame(coll, LISTENER.postEvent.getObservedCollection());\n-        Assert.assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n-        Assert.assertEquals(ModificationEventType.CLEAR, LISTENER.postEvent.getType());\n-        Assert.assertEquals(-1, LISTENER.postEvent.getChangeIndex());\n-        Assert.assertSame(null, LISTENER.postEvent.getChangeObject());\n-        Assert.assertSame(null, LISTENER.postEvent.getPrevious());\n-        Assert.assertEquals(6, LISTENER.postEvent.getPreSize());\n-        Assert.assertEquals(2, LISTENER.postEvent.getPostSize());\n-        Assert.assertEquals(true, LISTENER.postEvent.isView());\n-        Assert.assertEquals(1, LISTENER.postEvent.getViewOffset());\n-        Assert.assertSame(subList, LISTENER.postEvent.getView());\n+        assertEquals(0, subList.size());\n+        checkPrePost(coll, ModificationEventType.CLEAR, -1, null, null, 6, 2, subList, 1);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public static void doTestSubSet(ObservedFactory factory) {\n+        ObservableSortedSet coll = (ObservableSortedSet) factory.createObservedCollection(LISTENER);\n+        \n+        coll.add(SIX);\n+        coll.add(EIGHT);\n+        coll.add(NINE);\n+        SortedSet subSet = coll.subSet(SIX, NINE);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        checkPrePost(coll, ModificationEventType.ADD, -1, SEVEN, null, 3, 4, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        // post\n+        assertSame(null, LISTENER.postEvent);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.remove(SEVEN);\n+        assertEquals(2, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE, -1, SEVEN, SEVEN, 4, 3, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        Iterator it = subSet.iterator();\n+        it.next();\n+        it.remove();\n+        assertEquals(1, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE_ITERATED, 0, SIX, SIX, 3, 2, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, subSet.size());\n+        subSet.clear();\n+        assertEquals(0, subSet.size());\n+        checkPrePost(coll, ModificationEventType.CLEAR, -1, null, null, 2, 1, subSet, -1);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public static void doTestHeadSet(ObservedFactory factory) {\n+        ObservableSortedSet coll = (ObservableSortedSet) factory.createObservedCollection(LISTENER);\n+        \n+        coll.add(SIX);\n+        coll.add(EIGHT);\n+        coll.add(NINE);\n+        SortedSet subSet = coll.headSet(NINE);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        checkPrePost(coll, ModificationEventType.ADD, -1, SEVEN, null, 3, 4, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        // post\n+        assertSame(null, LISTENER.postEvent);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.remove(SEVEN);\n+        assertEquals(2, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE, -1, SEVEN, SEVEN, 4, 3, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        Iterator it = subSet.iterator();\n+        it.next();\n+        it.remove();\n+        assertEquals(1, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE_ITERATED, 0, SIX, SIX, 3, 2, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, subSet.size());\n+        subSet.clear();\n+        assertEquals(0, subSet.size());\n+        checkPrePost(coll, ModificationEventType.CLEAR, -1, null, null, 2, 1, subSet, -1);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public static void doTestTailSet(ObservedFactory factory) {\n+        ObservableSortedSet coll = (ObservableSortedSet) factory.createObservedCollection(LISTENER);\n+        \n+        coll.add(FIVE);\n+        coll.add(SIX);\n+        coll.add(EIGHT);\n+        SortedSet subSet = coll.tailSet(SIX);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        checkPrePost(coll, ModificationEventType.ADD, -1, SEVEN, null, 3, 4, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.add(SEVEN);\n+        assertEquals(3, subSet.size());\n+        // post\n+        assertSame(null, LISTENER.postEvent);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(3, subSet.size());\n+        subSet.remove(SEVEN);\n+        assertEquals(2, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE, -1, SEVEN, SEVEN, 4, 3, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(2, subSet.size());\n+        Iterator it = subSet.iterator();\n+        it.next();\n+        it.remove();\n+        assertEquals(1, subSet.size());\n+        checkPrePost(coll, ModificationEventType.REMOVE_ITERATED, 0, SIX, SIX, 3, 2, subSet, -1);\n+        \n+        LISTENER.preEvent = null;\n+        LISTENER.postEvent = null;\n+        assertEquals(1, subSet.size());\n+        subSet.clear();\n+        assertEquals(0, subSet.size());\n+        checkPrePost(coll, ModificationEventType.CLEAR, -1, null, null, 2, 1, subSet, -1);\n+    }\n+    \n+    protected static void checkPrePost(\n+            ObservableCollection coll, int type, int changeIndex, Object changeObject,\n+            Object previous, int preSize, int postSize, Collection view, int viewOffset) {\n+                \n+        assertSame(coll, LISTENER.preEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.preEvent.getHandler());\n+        assertEquals(type, LISTENER.preEvent.getType());\n+        assertEquals(changeIndex, LISTENER.preEvent.getChangeIndex());\n+        assertSame(changeObject, LISTENER.preEvent.getChangeObject());\n+        assertEquals(preSize, LISTENER.preEvent.getPreSize());\n+        assertEquals((view != null), LISTENER.preEvent.isView());\n+        assertEquals(viewOffset, LISTENER.preEvent.getViewOffset());\n+        assertSame(view, LISTENER.preEvent.getView());\n+\n+        assertSame(coll, LISTENER.postEvent.getObservedCollection());\n+        assertSame(coll.getHandler(), LISTENER.postEvent.getHandler());\n+        assertEquals(type, LISTENER.postEvent.getType());\n+        assertEquals(changeIndex, LISTENER.postEvent.getChangeIndex());\n+        assertSame(changeObject, LISTENER.postEvent.getChangeObject());\n+        assertSame(previous, LISTENER.postEvent.getPrevious());\n+        assertEquals(preSize, LISTENER.postEvent.getPreSize());\n+        assertEquals(postSize, LISTENER.postEvent.getPostSize());\n+        assertEquals(postSize != preSize, LISTENER.postEvent.isSizeChanged());\n+        assertEquals((view != null), LISTENER.postEvent.isView());\n+        assertEquals(viewOffset, LISTENER.postEvent.getViewOffset());\n+        assertSame(view, LISTENER.postEvent.getView());\n     }\n \n }", "timestamp": 1064391886, "metainfo": ""}