{"sha": "db079b02f614f25b44eb89b1e3315f9d984f0d3b", "log": "Generics  ", "commit": "\n--- a/src/java/org/apache/commons/collections/set/TransformedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TransformedSet.java\n      * @throws IllegalArgumentException if set or transformer is null\n      * @since Commons Collections 3.3\n      */\n-    // TODO: Generics\n-    public static Set decorateTransform(Set set, Transformer transformer) {\n-        TransformedSet decorated = new TransformedSet(set, transformer);\n+    public static <E> Set<E> decorateTransform(Set<E> set, Transformer<? super E, ? extends E> transformer) {\n+        TransformedSet<E> decorated = new TransformedSet<E>(set, transformer);\n         if (transformer != null && set != null && set.size() > 0) {\n-            Object[] values = set.toArray();\n+            @SuppressWarnings(\"unchecked\") // set is type E\n+            E[] values = (E[]) set.toArray();\n             set.clear();\n             for(int i=0; i<values.length; i++) {\n                 decorated.decorated().add(transformer.transform(values[i]));", "timestamp": 1287458931, "metainfo": ""}