{"sha": "bc1660101609fd4861d20a07b8a05cdfb57c347c", "log": "Generics  ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n      * @throws IllegalArgumentException if buffer or transformer is null\n      * @since Commons Collections 3.3\n      */\n-    // TODO: Generics\n-    public static Buffer decorateTransform(Buffer buffer, Transformer transformer) {\n-        TransformedBuffer decorated = new TransformedBuffer(buffer, transformer);\n-        if (transformer != null && buffer != null && buffer.size() > 0) {\n-            Object[] values = buffer.toArray();\n+    public static <E> Buffer<E> decorateTransform(Buffer<E> buffer, Transformer<? super E, ? extends E> transformer) {\n+        TransformedBuffer<E> decorated = new TransformedBuffer<E>(buffer, transformer); // throws IAE if buffer or transformer is null\n+        if (buffer.size() > 0) {\n+            @SuppressWarnings(\"unchecked\") // buffer is type <E>\n+            E[] values = (E[]) buffer.toArray();\n             buffer.clear();\n             for(int i=0; i<values.length; i++) {\n                 decorated.decorated().add(transformer.transform(values[i]));", "timestamp": 1287430318, "metainfo": ""}