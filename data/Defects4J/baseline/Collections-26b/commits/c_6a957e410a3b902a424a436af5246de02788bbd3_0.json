{"sha": "6a957e410a3b902a424a436af5246de02788bbd3", "log": "Add missing since tags.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java\n      * @return a new predicated collection\n      * @throws IllegalArgumentException if collection or predicate is null\n      * @throws IllegalArgumentException if the collection contains invalid elements\n+     * @since 4.0\n      */\n     public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll,\n                                                                    final Predicate<? super T> predicate) {\n--- a/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/SynchronizedCollection.java\n      * @param coll  the collection to decorate, must not be null\n      * @return a new synchronized collection\n      * @throws IllegalArgumentException if collection is null\n+     * @since 4.0\n      */\n     public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll) {\n         return new SynchronizedCollection<T>(coll);\n--- a/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java\n      * @param transformer  the transformer to use for conversion, must not be null\n      * @return a new transformed collection\n      * @throws IllegalArgumentException if collection or transformer is null\n+     * @since 4.0\n      */\n     public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll,\n             final Transformer<? super E, ? extends E> transformer) {\n--- a/src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java\n      * @param coll  the <code>BoundedCollection</code> to decorate, must not be null\n      * @return a new unmodifiable bounded collection\n      * @throws IllegalArgumentException if {@code coll} is {@code null}\n+     * @since 4.0\n      */\n     public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<E> coll) {\n         return new UnmodifiableBoundedCollection<E>(coll);\n      * @param coll  the <code>BoundedCollection</code> to decorate, must not be null\n      * @return a new unmodifiable bounded collection\n      * @throws IllegalArgumentException if {@code coll} is {@code null}\n+     * @since 4.0\n      */\n     @SuppressWarnings(\"unchecked\")\n     public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll) {\n--- a/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java\n      * @param coll  the collection to decorate, must not be null\n      * @return an unmodifiable collection\n      * @throws IllegalArgumentException if collection is null\n+     * @since 4.0\n      */\n     public static <T> Collection<T> unmodifiableCollection(final Collection<T> coll) {\n         if (coll instanceof Unmodifiable) {", "timestamp": 1367790707, "metainfo": ""}