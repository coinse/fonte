{"sha": "20619b096cbb250518fd99eed15a4ae81345ce9f", "log": "[COLLECTIONS-455] Remove todos: keep decorated object protected.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java\n \n     /** Serialization version */\n     private static final long serialVersionUID = 6249888059822088500L;\n-\n-    // TODO privatise field? read-only access - could use decorated() - apart from deserialisation\n \n     /** The collection being decorated */\n     protected Collection<E> collection;\n--- a/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java\n public abstract class AbstractMapDecorator<K, V> extends AbstractIterableMap<K, V> {\n \n     /** The map to decorate */\n-    protected transient Map<K, V> map; // TODO Privatise? Only write access is for deserialisation\n+    protected transient Map<K, V> map;\n \n     /**\n      * Constructor only used in deserialization, do not use otherwise.\n--- a/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java\n public class AbstractIterableGetMapDecorator<K, V> implements IterableGet<K, V> {\n \n     /** The map to decorate */\n-    protected transient Map<K, V> map; // TODO Privatise? only external access is for deserialisation\n+    protected transient Map<K, V> map;\n \n     /**\n      * Create a new AbstractSplitMapDecorator.", "timestamp": 1371498034, "metainfo": ""}