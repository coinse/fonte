{"sha": "9b1843b10dbd62adbe29b244da55a39bb04e98a7", "log": "Add constructor Fix javadoc, from Gary Gregory   ", "commit": "\n--- a/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n+++ b/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/functors/FunctorUtils.java,v 1.3 2003/11/23 23:25:33 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/functors/FunctorUtils.java,v 1.4 2004/01/05 21:31:48 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Internal utilities for functors.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/11/23 23:25:33 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 21:31:48 $\n  *\n  * @author Stephen Colebourne\n  */\n class FunctorUtils {\n     \n     /**\n+     * Restricted constructor.\n+     */\n+    private FunctorUtils() {\n+    }\n+    \n+    /**\n      * Clone the predicates to ensure that the internal reference can't be messed with.\n      * \n      * @param predicates  the predicates to copy\n      * Validate the predicates to ensure that all is well.\n      * \n      * @param predicates  the predicates to validate\n-     * @return the validated predicates\n      */\n     static void validate(Predicate[] predicates) {\n         if (predicates == null) {\n      * Validate the predicates to ensure that all is well.\n      * \n      * @param predicates  the predicates to validate\n-     * @return the validated predicates\n      */\n     static void validateMin2(Predicate[] predicates) {\n         if (predicates == null) {\n      * Validate the closures to ensure that all is well.\n      * \n      * @param closures  the closures to validate\n-     * @return the validated closures\n      */\n     static void validate(Closure[] closures) {\n         if (closures == null) {", "timestamp": 1073338308, "metainfo": ""}