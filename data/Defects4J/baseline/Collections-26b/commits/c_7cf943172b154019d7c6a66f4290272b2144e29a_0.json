{"sha": "7cf943172b154019d7c6a66f4290272b2144e29a", "log": "Applying a unit test for COLLECTIONS-220. AbstractTestObject is refactored to provide a utility method that serializes and then deserializes. Dave Meikle's fix for said unit test is also applied.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n     private void writeObject(ObjectOutputStream out) throws IOException {\n         out.defaultWriteObject();\n         out.writeInt(size());\n+        out.writeInt(buffer.length);\n         for (Iterator it = iterator(); it.hasNext();) {\n             out.writeObject(it.next());\n         }\n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n         int size = in.readInt();\n-        buffer = new Object[size + 1];\n+        int length = in.readInt();\n+        buffer = new Object[length];\n         for (int i = 0; i < size; i++) {\n             buffer[i] = in.readObject();\n         }\n--- a/src/test/org/apache/commons/collections/AbstractTestObject.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestObject.java\n         }\n     }\n \n+    protected Object serializeDeserialize(Object obj) throws Exception {\n+        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n+        ObjectOutputStream out = new ObjectOutputStream(buffer);\n+        out.writeObject(obj);\n+        out.close();\n+\n+        ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray()));\n+        Object dest = in.readObject();\n+        in.close();\n+\n+        return dest;\n+    }\n+\n     public void testSerializeDeserializeThenCompare() throws Exception {\n         Object obj = makeObject();\n         if (obj instanceof Serializable && isTestSerialization()) {\n-            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n-            ObjectOutputStream out = new ObjectOutputStream(buffer);\n-            out.writeObject(obj);\n-            out.close();\n-\n-            ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray()));\n-            Object dest = in.readObject();\n-            in.close();\n+            Object dest = serializeDeserialize(obj);\n             if (isEqualsCheckable()) {\n                 assertEquals(\"obj != deserialize(serialize(obj))\", obj, dest);\n             }\n--- a/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testCollections220() throws Exception {\n+         UnboundedFifoBuffer buffer = new UnboundedFifoBuffer();\n+         \n+         buffer = (UnboundedFifoBuffer) serializeDeserialize(buffer);\n+\n+         // test size() gets incremented\n+         buffer.add(\"Foo\");\n+         assertEquals(1, buffer.size());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public String getCompatibilityVersion() {\n         return \"3.1\";\n     }", "timestamp": 1205627204, "metainfo": ""}