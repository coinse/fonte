{"sha": "ad2987c5ade6a7fb4f87682e888ef1d521b583f0", "log": "Fix set iterator and predicate methods bug 38074, from Huw Roberts  ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n      */\n     public void setIterator(Iterator iterator) {\n         this.iterator = iterator;\n+        nextObject = null;\n+        nextObjectSet = false;\n     }\n \n     //-----------------------------------------------------------------------\n      */\n     public void setPredicate(Predicate predicate) {\n         this.predicate = predicate;\n+        nextObject = null;\n+        nextObjectSet = false;\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n /*\n- *  Copyright 2001-2004 The Apache Software Foundation\n+ *  Copyright 2001-2004,2006 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.NoSuchElementException;\n import junit.framework.TestSuite;\n \n import org.apache.commons.collections.Predicate;\n+import org.apache.commons.collections.functors.NotNullPredicate;\n+import org.apache.commons.collections.functors.TruePredicate;\n \n /**\n  * Test the filter iterator.\n  *\n  * @version $Revision$ $Date$\n  * \n- * @author  Jan Sorensen\n+ * @author Jan Sorensen\n  * @author Ralph Wagner\n+ * @author Huw Roberts\n  */\n public class TestFilterIterator extends AbstractTestIterator {\n \n         verifyElementsInPredicate(new String[] { \"a\", \"c\" });\n         verifyElementsInPredicate(new String[] { \"b\", \"c\" });\n         verifyElementsInPredicate(new String[] { \"a\", \"b\", \"c\" });\n+    }\n+\n+    /**\n+     * Test that when the iterator is changed, the hasNext method returns the\n+     * correct response for the new iterator.\n+     */\n+    public void testSetIterator() {\n+        Iterator iter1 = Collections.singleton(new Object()).iterator();\n+        Iterator iter2 = Collections.EMPTY_LIST.iterator();\n+        \n+        FilterIterator filterIterator = new FilterIterator(iter1);\n+        filterIterator.setPredicate(TruePredicate.getInstance());\n+        // this iterator has elements\n+        assertEquals(true, filterIterator.hasNext());\n+        \n+        // this iterator has no elements\n+        filterIterator.setIterator(iter2);\n+        assertEquals(false, filterIterator.hasNext());\n+    }\n+\n+    /**\n+     * Test that when the predicate is changed, the hasNext method returns the\n+     * correct response for the new predicate.\n+     */\n+    public void testSetPredicate() {\n+        Iterator iter = Collections.singleton(null).iterator();\n+\n+        FilterIterator filterIterator = new FilterIterator(iter);\n+        filterIterator.setPredicate(TruePredicate.getInstance());\n+        // this predicate matches\n+        assertEquals(true, filterIterator.hasNext());\n+        \n+        // this predicate doesn't match\n+        filterIterator.setPredicate(NotNullPredicate.getInstance());\n+        assertEquals(false, filterIterator.hasNext());\n     }\n \n     private void verifyNoMoreElements() {", "timestamp": 1136585227, "metainfo": ""}