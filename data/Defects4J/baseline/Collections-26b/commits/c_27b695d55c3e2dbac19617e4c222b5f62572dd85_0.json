{"sha": "27b695d55c3e2dbac19617e4c222b5f62572dd85", "log": "Fix test cases to avoid dependency on DefaultMapEntry   ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n import org.apache.commons.collections.AbstractTestObject;\n import org.apache.commons.collections.BulkTest;\n import org.apache.commons.collections.collection.AbstractTestCollection;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.commons.collections.set.AbstractTestSet;\n \n /**\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.15 $ $Date: 2004/05/31 22:39:20 $\n+ * @version $Revision: 1.16 $ $Date: 2004/06/07 23:14:40 $\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n \n         resetFull();\n         Set entrySet = map.entrySet();\n         Map.Entry entry = (Map.Entry) entrySet.iterator().next();\n-        Map.Entry test = new DefaultMapEntry(entry);\n+        Map.Entry test = cloneMapEntry(entry);\n         assertEquals(true, entrySet.contains(test));\n     }\n     public void testEntrySetContains3() {\n         resetFull();\n         Set entrySet = map.entrySet();\n         Map.Entry entry = (Map.Entry) entrySet.iterator().next();\n-        Map.Entry test = new DefaultMapEntry(entry.getKey(), \"A VERY DIFFERENT VALUE\");\n+        HashMap temp = new HashMap();\n+        temp.put(entry.getKey(), \"A VERY DIFFERENT VALUE\");\n+        Map.Entry test = (Map.Entry) temp.entrySet().iterator().next();\n         assertEquals(false, entrySet.contains(test));\n     }\n     \n         Set entrySet = map.entrySet();\n         Map.Entry entry = (Map.Entry) entrySet.iterator().next();\n         Object key = entry.getKey();\n-        Map.Entry test = new DefaultMapEntry(entry);\n+        Map.Entry test = cloneMapEntry(entry);\n         \n         assertEquals(true, entrySet.remove(test));\n         assertEquals(false, map.containsKey(key));\n         Set entrySet = map.entrySet();\n         Map.Entry entry = (Map.Entry) entrySet.iterator().next();\n         Object key = entry.getKey();\n-        Map.Entry test = new DefaultMapEntry(entry.getKey(), \"A VERY DIFFERENT VALUE\");\n+        HashMap temp = new HashMap();\n+        temp.put(entry.getKey(), \"A VERY DIFFERENT VALUE\");\n+        Map.Entry test = (Map.Entry) temp.entrySet().iterator().next();\n         \n         assertEquals(false, entrySet.remove(test));\n         assertEquals(true, map.containsKey(key));", "timestamp": 1086650080, "metainfo": ""}