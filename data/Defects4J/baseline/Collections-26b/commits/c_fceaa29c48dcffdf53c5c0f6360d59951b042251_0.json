{"sha": "fceaa29c48dcffdf53c5c0f6360d59951b042251", "log": "Renamed Factory.createObject() to Factory.create(). PR: Obtained from: Submitted by: Reviewed by:   ", "commit": "\n--- a/src/java/org/apache/commons/collections/Factory.java\n+++ b/src/java/org/apache/commons/collections/Factory.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.1 2002/08/13 01:19:00 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/13 01:19:00 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Factory.java,v 1.2 2002/08/15 20:09:37 pjack Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/08/15 20:09:37 $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * to create an object.\n  *\n  * @author Arron Bates\n- * @version $Revision: 1.1 $\n+ * @version $Revision: 1.2 $\n  * @since 2.1\n  */\n public interface Factory {\n    *\n    * @return Object reference to the new object.\n    */\n-  public Object createObject();\n+  public Object create();\n   \n }\n--- a/src/java/org/apache/commons/collections/FactoryUtils.java\n+++ b/src/java/org/apache/commons/collections/FactoryUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FactoryUtils.java,v 1.4 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FactoryUtils.java,v 1.5 2002/08/15 20:09:37 pjack Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/08/15 20:09:37 $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * objects.\n  *\n  * @author Arron Bates\n- * @version $Revision: 1.4 $\n+ * @version $Revision: 1.5 $\n  * @since 2.1\n  */\n public class FactoryUtils {\n      * Thinly disguising the error as a null pointer, with a modified message for\n      * debugging.\n      */\n-    public Object createObject() {\n+    public Object create() {\n       \n       Object obj = null;\n       /* for catching error specifics */\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.7 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.8 2002/08/15 20:09:37 pjack Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/08/15 20:09:37 $\n  *\n  * ====================================================================\n  *\n                 obj = getList().get(index);\n                 if (obj == null) {\n                     /* item is a place holder, create new one, set and return */\n-                    obj = this.factory.createObject();\n+                    obj = this.factory.create();\n                     this.getList().set(index, obj);\n                     return obj;\n                 } else {\n                     getList().add(null);\n                 }\n                 /* create our last object, set and return */\n-                obj = this.factory.createObject();\n+                obj = this.factory.create();\n                 getList().add(obj);\n                 return obj;\n             }\n      *\n      *  <Pre>\n      *  Factory factory = new Factory() {\n-     *      public Object createObject() {\n+     *      public Object create() {\n      *          return new Date();\n      *      }\n      *  }\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.8 2002/08/15 20:04:31 pjack Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/15 20:04:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.9 2002/08/15 20:09:37 pjack Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/08/15 20:09:37 $\n  *\n  * ====================================================================\n  *\n \n         public Object get(Object key) {\n             if (!map.containsKey(key)) {\n-                Object value = factory.createObject();\n+                Object value = factory.create();\n                 map.put(key, value);\n                 return value;\n             }\n      *\n      *  <Pre>\n      *  Factory factory = new Factory() {\n-     *      public Object createObject() {\n+     *      public Object create() {\n      *          return new Date();\n      *      }\n      *  }\n      *\n      *  <Pre>\n      *  Factory factory = new Factory() {\n-     *      public Object createObject() {\n+     *      public Object create() {\n      *          return new Date();\n      *      }\n      *  }\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.2 2002/08/13 01:19:00 pjack Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/13 01:19:00 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.3 2002/08/15 20:09:38 pjack Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/08/15 20:09:38 $\n  *\n  * ====================================================================\n  *\n \n             private int index;\n \n-            public Object createObject() {\n+            public Object create() {\n                 index++;\n                 return new Integer(index);\n             }", "timestamp": 1029442178, "metainfo": ""}