{"sha": "43e4df85bda71ca1500112912a83d3ed19868c4c", "log": "[COLLECTIONS-453] Clone input parameters, add null check, final.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java\n      * @param args  the constructor arguments\n      * @return an instantiate transformer\n      */\n-    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(Class<?>[] paramTypes, Object[] args) {\n+    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes,\n+                                                                                final Object[] args) {\n         if (((paramTypes == null) && (args != null))\n             || ((paramTypes != null) && (args == null))\n             || ((paramTypes != null) && (args != null) && (paramTypes.length != args.length))) {\n      */\n     public InstantiateTransformer(final Class<?>[] paramTypes, final Object[] args) {\n         super();\n-        iParamTypes = paramTypes.clone();\n-        iArgs = args.clone();\n+        iParamTypes = paramTypes != null ? paramTypes.clone() : null;\n+        iArgs = args != null ? args.clone() : null;\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java\n      * @param args  the arguments to pass to the method\n      * @return an invoker transformer\n      */\n-    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, Class<?>[] paramTypes,\n-                                                              Object[] args) {\n+    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes,\n+                                                              final Object[] args) {\n         if (methodName == null) {\n             throw new IllegalArgumentException(\"The method to invoke must not be null\");\n         }\n         if (paramTypes == null || paramTypes.length == 0) {\n             return new InvokerTransformer<I, O>(methodName);\n         } else {\n-            paramTypes = paramTypes.clone();\n-            args = args.clone();\n             return new InvokerTransformer<I, O>(methodName, paramTypes, args);\n         }\n     }\n     /**\n      * Constructor that performs no validation.\n      * Use <code>invokerTransformer</code> if you want that.\n+     * <p>\n+     * Note: from 4.0, the input parameters will be cloned\n      *\n      * @param methodName  the method to call\n-     * @param paramTypes  the constructor parameter types, not cloned\n-     * @param args  the constructor arguments, not cloned\n+     * @param paramTypes  the constructor parameter types\n+     * @param args  the constructor arguments\n      */\n     public InvokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args) {\n         super();\n         iMethodName = methodName;\n-        iParamTypes = paramTypes;\n-        iArgs = args;\n+        iParamTypes = paramTypes != null ? paramTypes.clone() : null;\n+        iArgs = args != null ? args.clone() : null;\n     }\n \n     /**", "timestamp": 1367357567, "metainfo": ""}