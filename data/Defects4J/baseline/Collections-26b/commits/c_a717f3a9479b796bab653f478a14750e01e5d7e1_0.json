{"sha": "a717f3a9479b796bab653f478a14750e01e5d7e1", "log": "Move PriorityQueue decorators to PriorityQueueUtils only (PriorityQueue interface has nothing to do with Buffer)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/PriorityQueueUtils.java\n+++ b/src/java/org/apache/commons/collections/PriorityQueueUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/PriorityQueueUtils.java,v 1.4 2003/12/03 14:39:42 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/PriorityQueueUtils.java,v 1.5 2004/01/01 18:57:37 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections;\n \n-import org.apache.commons.collections.buffer.BinaryHeap;\n-import org.apache.commons.collections.buffer.SynchronizedPriorityQueue;\n-import org.apache.commons.collections.buffer.UnmodifiablePriorityQueue;\n+import java.util.NoSuchElementException;\n \n /**\n  * Provides static utility methods and decorators for {@link PriorityQueue}.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/03 14:39:42 $\n+ * @version $Revision: 1.5 $ $Date: 2004/01/01 18:57:37 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * An empty unmodifiable priority queue.\n      */\n-    public static final PriorityQueue EMPTY_PRIORITY_QUEUE = UnmodifiablePriorityQueue.decorate(new BinaryHeap());\n+    public static final PriorityQueue EMPTY_PRIORITY_QUEUE = new EmptyPriorityQueue();\n \n     /**\n      * <code>PriorityQueueUtils</code> should not normally be instantiated.\n      * @throws IllegalArgumentException  if the priority queue is null\n      */\n     public static PriorityQueue synchronizedPriorityQueue(PriorityQueue priorityQueue) {\n-        return SynchronizedPriorityQueue.decorate(priorityQueue);\n+        return new SynchronizedPriorityQueue(priorityQueue);\n     }\n \n     /**\n      * @throws IllegalArgumentException  if the priority queue is null\n      */\n     public static PriorityQueue unmodifiablePriorityQueue(PriorityQueue priorityQueue) {\n-        return UnmodifiablePriorityQueue.decorate(priorityQueue);\n-    }\n-\n+        return new UnmodifiablePriorityQueue(priorityQueue);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Decorator for PriorityQueue that adds synchronization.\n+     */\n+    static class SynchronizedPriorityQueue implements PriorityQueue {\n+\n+        /** The priority queue to decorate */\n+        protected final PriorityQueue priorityQueue;\n+\n+        protected SynchronizedPriorityQueue(PriorityQueue priorityQueue) {\n+            if (priorityQueue == null) {\n+                throw new IllegalArgumentException(\"PriorityQueue must not be null\");\n+            }\n+            this.priorityQueue = priorityQueue;\n+        }\n+\n+        public synchronized boolean isEmpty() {\n+            return priorityQueue.isEmpty();\n+        }\n+\n+        public synchronized Object peek() {\n+            return priorityQueue.peek();\n+        }\n+\n+        public synchronized Object pop() {\n+            return priorityQueue.pop();\n+        }\n+\n+        public synchronized void insert(Object obj) {\n+            priorityQueue.insert(obj);\n+        }\n+\n+        public synchronized void clear() {\n+            priorityQueue.clear();\n+        }\n+\n+        public synchronized String toString() {\n+            return priorityQueue.toString();\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Decorator for PriorityQueue that prevents changes.\n+     */\n+    static class UnmodifiablePriorityQueue implements PriorityQueue, Unmodifiable {\n+\n+        /** The priority queue to decorate */\n+        protected final PriorityQueue priorityQueue;\n+\n+        protected UnmodifiablePriorityQueue(PriorityQueue priorityQueue) {\n+            if (priorityQueue == null) {\n+                throw new IllegalArgumentException(\"PriorityQueue must not be null\");\n+            }\n+            this.priorityQueue = priorityQueue;\n+        }\n+\n+        public synchronized boolean isEmpty() {\n+            return priorityQueue.isEmpty();\n+        }\n+\n+        public synchronized Object peek() {\n+            return priorityQueue.peek();\n+        }\n+\n+        public synchronized Object pop() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized void insert(Object obj) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized void clear() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized String toString() {\n+            return priorityQueue.toString();\n+        }\n+    \n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    /**\n+     * PriorityQueue that is empty.\n+     */\n+    static class EmptyPriorityQueue implements PriorityQueue, Unmodifiable {\n+\n+        protected EmptyPriorityQueue() {\n+        }\n+\n+        public synchronized boolean isEmpty() {\n+            return true;\n+        }\n+\n+        public synchronized Object peek() {\n+            throw new NoSuchElementException();\n+        }\n+\n+        public synchronized Object pop() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized void insert(Object obj) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized void clear() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        public synchronized String toString() {\n+            return \"[]\";\n+        }\n+    \n+    }\n }\n--- a/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.9 2003/11/29 17:26:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.10 2004/01/01 18:57:37 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Provides synchronized wrapper methods for all the methods \n  * defined in the PriorityQueue interface.\n  *\n- * @deprecated Moved to buffer subpackage. Due to be removed in v4.0.\n+ * @deprecated Use PriorityQueueUtils. Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.9 $ $Date: 2003/11/29 17:26:21 $\n+ * @version $Revision: 1.10 $ $Date: 2004/01/01 18:57:37 $\n  * \n- * @author  <a href=\"mailto:ram.chidambaram@telus.com\">Ram Chidambaram</a> \n+ * @author Ram Chidambaram\n  */\n public final class SynchronizedPriorityQueue implements PriorityQueue {\n ", "timestamp": 1072983457, "metainfo": ""}