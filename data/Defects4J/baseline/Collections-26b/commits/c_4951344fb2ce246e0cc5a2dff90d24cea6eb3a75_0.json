{"sha": "4951344fb2ce246e0cc5a2dff90d24cea6eb3a75", "log": "[COLLECTIONS-475] Fixed conversion of timeout parameters in PassiveExpiringMap.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java\n          */\n         public ConstantTimeToLiveExpirationPolicy(final long timeToLive,\n                                                   final TimeUnit timeUnit) {\n-            this(validateAndConvertToMillis(timeToLive, TimeUnit.MILLISECONDS));\n+            this(validateAndConvertToMillis(timeToLive, timeUnit));\n         }\n \n         /**\n         if (timeUnit == null) {\n             throw new IllegalArgumentException(\"Time unit must not be null\");\n         }\n-        return timeUnit.convert(timeToLive, TimeUnit.MILLISECONDS);\n+        return TimeUnit.MILLISECONDS.convert(timeToLive, timeUnit);\n     }\n \n     /** map used to manage expiration times for the actual map entries. */\n--- a/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java\n+++ b/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java\n         m.put(\"a\", \"b\");\n         assertNull(m.get(\"a\"));\n     }\n+    \n+    public void testExpiration() {\n+        validateExpiration(new PassiveExpiringMap<String, String>(500), 500);\n+        validateExpiration(new PassiveExpiringMap<String, String>(1000), 1000);\n+        validateExpiration(new PassiveExpiringMap<String, String>(\n+                new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String>(500)), 500);\n+        validateExpiration(new PassiveExpiringMap<String, String>(\n+                new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, String>(1, TimeUnit.SECONDS)), 1000);\n+    }\n+\n+    private void validateExpiration(final Map<String, String> map, long timeout) {\n+        map.put(\"a\", \"b\");\n+        \n+        assertNotNull(map.get(\"a\"));\n+        \n+        try {\n+            Thread.sleep(2 * timeout);\n+        } catch (InterruptedException e) {\n+            fail();\n+        }\n+\n+        assertNull(map.get(\"a\"));\n+    }\n+    \n }", "timestamp": 1373828965, "metainfo": ""}