{"sha": "d7b20360c531ec75b4ce9f4afec798db1643724d", "log": "New class EnumerationUtils.   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/EnumerationUtils.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/EnumerationUtils.java,v 1.1 2003/10/28 18:47:47 ggregory Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.Enumeration;\n+import java.util.List;\n+\n+import org.apache.commons.collections.iterators.EnumerationIterator;\n+\n+/**\n+ * Provides utility methods for {@link Enumeration} instances.\n+ * \n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @version $Id: EnumerationUtils.java,v 1.1 2003/10/28 18:47:47 ggregory Exp $\n+ */\n+public class EnumerationUtils {\n+\n+    /**\n+     * Do not instantiate.\n+     */\n+    private EnumerationUtils() {\n+        // no init.\n+    }\n+    \n+    /**\n+     * Creates a list based on an enumeration.\n+     * \n+     * <p>As the enumeration is traversed, an ArrayList of its values is\n+     * created. The new list is returned.</p>\n+     *\n+     * @param enumeration  the enumeration to traverse, which should not be <code>null</code>.\n+     * @throws <code>NullPointerException</code> if the enumeration parameter is <code>null</code>.\n+     */\n+    public static List toList(Enumeration enumeration) {\n+        return IteratorUtils.toList(new EnumerationIterator(enumeration));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/TestEnumerationUtils.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestEnumerationUtils.java,v 1.1 2003/10/28 18:48:10 ggregory Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+ package org.apache.commons.collections;\n+\n+import java.util.ArrayList;\n+import java.util.Hashtable;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+import junit.framework.Assert;\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests EnumerationUtils.\n+ * \n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @version $Id: TestEnumerationUtils.java,v 1.1 2003/10/28 18:48:10 ggregory Exp $\n+ */\n+public class TestEnumerationUtils extends TestCase {\n+\n+    public static final String TO_LIST_FIXTURE = \"this is a test\";\n+    \n+    public void testToListWithStringTokenizer() {\n+        List expectedList1 = new ArrayList();\n+        StringTokenizer st = new StringTokenizer(TO_LIST_FIXTURE);\n+             while (st.hasMoreTokens()) {\n+                 expectedList1.add(st.nextToken());\n+             }        \n+        List expectedList2 = new ArrayList();\n+        expectedList2.add(\"this\");\n+        expectedList2.add(\"is\");\n+        expectedList2.add(\"a\");\n+        expectedList2.add(\"test\");\n+        List actualList = EnumerationUtils.toList(new StringTokenizer(TO_LIST_FIXTURE));\n+        Assert.assertEquals(expectedList1, expectedList2);\n+        Assert.assertEquals(expectedList1, actualList);\n+        Assert.assertEquals(expectedList2, actualList);\n+    }\n+\n+    public void testToListWithHashtable() {\n+        Hashtable expected = new Hashtable();\n+        expected.put(\"one\", new Integer(1));\n+        expected.put(\"two\", new Integer(2));\n+        expected.put(\"three\", new Integer(3));\n+        // validate elements.\n+        List actualEltList = EnumerationUtils.toList(expected.elements());\n+        Assert.assertEquals(expected.size(), actualEltList.size());\n+        Assert.assertTrue(actualEltList.contains(new Integer(1)));\n+        Assert.assertTrue(actualEltList.contains(new Integer(2)));\n+        Assert.assertTrue(actualEltList.contains(new Integer(3)));\n+        List expectedEltList = new ArrayList();\n+        expectedEltList.add(new Integer(1));\n+        expectedEltList.add(new Integer(2));\n+        expectedEltList.add(new Integer(3));\n+        Assert.assertTrue(actualEltList.containsAll(expectedEltList));\n+\n+        // validate keys.\n+        List actualKeyList = EnumerationUtils.toList(expected.keys());\n+        Assert.assertEquals(expected.size(), actualEltList.size());\n+        Assert.assertTrue(actualKeyList.contains(\"one\"));\n+        Assert.assertTrue(actualKeyList.contains(\"two\"));\n+        Assert.assertTrue(actualKeyList.contains(\"three\"));\n+        List expectedKeyList = new ArrayList();\n+        expectedKeyList.add(\"one\");\n+        expectedKeyList.add(\"two\");\n+        expectedKeyList.add(\"three\");\n+        Assert.assertTrue(actualKeyList.containsAll(expectedKeyList));\n+    }\n+\n+}", "timestamp": 1067366890, "metainfo": ""}