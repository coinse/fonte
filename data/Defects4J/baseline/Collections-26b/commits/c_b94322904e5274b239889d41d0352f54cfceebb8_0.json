{"sha": "b94322904e5274b239889d41d0352f54cfceebb8", "log": "more generic name for serialized collections   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestMap.java\n+++ b/src/test/org/apache/commons/collections/TestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.13 2002/02/26 00:08:07 morgand Exp $\n- * $Revision: 1.13 $\n- * $Date: 2002/02/26 00:08:07 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.14 2002/02/26 18:08:58 morgand Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2002/02/26 18:08:58 $\n  *\n  * ====================================================================\n  *\n  *\n  * @author Michael Smith\n  * @author Rodney Waldhoff\n- * @version $Id: TestMap.java,v 1.13 2002/02/26 00:08:07 morgand Exp $\n+ * @version $Id: TestMap.java,v 1.14 2002/02/26 18:08:58 morgand Exp $\n  */\n public abstract class TestMap extends TestObject {\n \n         assertEquals(\"Both maps are same size\",map2.size(),getSampleKeys().length);\n     }\n \n-\n-    public String getCanonicalEmptyMapName(Map map) {\n-        StringBuffer retval = new StringBuffer();\n-        retval.append(\"data/test/\");\n-        String mapName = map.getClass().getName();\n-        mapName = mapName.substring(mapName.lastIndexOf(\".\")+1,mapName.length());\n-        retval.append(mapName);\n-        retval.append(\".emptyMap.version\");\n-        retval.append(getCompatibilityVersion());\n-        retval.append(\".obj\");\n-        return retval.toString();\n-    }\n-\n-    public String getCanonicalFullMapName(Map map) {\n-        StringBuffer retval = new StringBuffer();\n-        retval.append(\"data/test/\");\n-        String mapName = map.getClass().getName();\n-        mapName = mapName.substring(mapName.lastIndexOf(\".\")+1,mapName.length());\n-        retval.append(mapName);\n-        retval.append(\".fullMap.version\");\n-        retval.append(getCompatibilityVersion());\n-        retval.append(\".obj\");\n-        return retval.toString();\n-    }\n-\n     /**\n      * Compare the current serialized form of the Map\n      * against the canonical version in CVS.\n         Map map = makeEmptyMap();\n         if (!(map instanceof Serializable)) return;\n         \n-        writeExternalFormToDisk((Serializable) map, getCanonicalEmptyMapName(map));\n+        writeExternalFormToDisk((Serializable) map, getCanonicalEmptyCollectionName(map));\n         */\n \n         // test to make sure the canonical form has been preserved\n         if (!(makeEmptyMap() instanceof Serializable)) return;\n-        Map map = (Map) readExternalFormFromDisk(getCanonicalEmptyMapName(makeEmptyMap()));\n+        Map map = (Map) readExternalFormFromDisk(getCanonicalEmptyCollectionName(makeEmptyMap()));\n         assertTrue(\"Map is empty\",map.isEmpty()  == true);\n     }\n \n         Map map = makeFullMap();\n         if (!(map instanceof Serializable)) return;\n         \n-        writeExternalFormToDisk((Serializable) map, getCanonicalFullMapName(map));\n+        writeExternalFormToDisk((Serializable) map, getCanonicalFullCollectionName(map));\n         */\n \n         // test to make sure the canonical form has been preserved\n         if (!(makeFullMap() instanceof Serializable)) return;\n-        Map map = (Map) readExternalFormFromDisk(getCanonicalFullMapName(makeFullMap()));\n+        Map map = (Map) readExternalFormFromDisk(getCanonicalFullCollectionName(makeFullMap()));\n         assertEquals(\"Map is the right size\",map.size(), getSampleKeys().length);\n     }\n \n--- a/src/test/org/apache/commons/collections/TestObject.java\n+++ b/src/test/org/apache/commons/collections/TestObject.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.7 2002/02/26 00:08:07 morgand Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/02/26 00:08:07 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.8 2002/02/26 18:08:58 morgand Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/02/26 18:08:58 $\n  *\n  * ====================================================================\n  *\n  * test case (method) your {@link Object} fails.\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: TestObject.java,v 1.7 2002/02/26 00:08:07 morgand Exp $\n+ * @version $Id: TestObject.java,v 1.8 2002/02/26 18:08:58 morgand Exp $\n  */\n public abstract class TestObject extends TestCase {\n     public TestObject(String testName) {\n             Object p = readExternalFormFromBytes(objekt);\n         }\n     }\n+\n+    public String getCanonicalEmptyCollectionName(Object object) {\n+        StringBuffer retval = new StringBuffer();\n+        retval.append(\"data/test/\");\n+        String colName = object.getClass().getName();\n+        colName = colName.substring(colName.lastIndexOf(\".\")+1,colName.length());\n+        retval.append(colName);\n+        retval.append(\".emptyCollection.version\");\n+        retval.append(getCompatibilityVersion());\n+        retval.append(\".obj\");\n+        return retval.toString();\n+    }\n+\n+    public String getCanonicalFullCollectionName(Object object) {\n+        StringBuffer retval = new StringBuffer();\n+        retval.append(\"data/test/\");\n+        String colName = object.getClass().getName();\n+        colName = colName.substring(colName.lastIndexOf(\".\")+1,colName.length());\n+        retval.append(colName);\n+        retval.append(\".fullCollection.version\");\n+        retval.append(getCompatibilityVersion());\n+        retval.append(\".obj\");\n+        return retval.toString();\n+    }\n }", "timestamp": 1014746938, "metainfo": ""}