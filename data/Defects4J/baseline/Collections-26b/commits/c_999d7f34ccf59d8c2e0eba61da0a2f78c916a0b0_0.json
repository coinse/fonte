{"sha": "999d7f34ccf59d8c2e0eba61da0a2f78c916a0b0", "log": "Renamed ignoredSimpleTests to ignoredTests in AbstractTestMap   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestBeanMap.java\n+++ b/src/test/org/apache/commons/collections/TestBeanMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestBeanMap.java,v 1.11 2003/10/02 23:01:10 scolebourne Exp $\n- * $Revision: 1.11 $\n- * $Date: 2003/10/02 23:01:10 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestBeanMap.java,v 1.12 2003/10/05 20:46:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n /**\n  * Test cases for BeanMap\n  * \n- * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n+ * @version $Revision: 1.12 $ $Date: 2003/10/05 20:46:40 $\n+ * \n+ * @author Morgan Delagrange\n  */\n public class TestBeanMap extends AbstractTestMap {\n \n         }\n     }\n     \n-/*\n-  note to self.  The Sample keys were generated by copying the field\n-  declarations and using the following regular expression search and replace:\n-\n-  From:\n-        private \\(.*\\) some\\(.*\\);\n-  To:\n-            \"some\\2Value\", \n-\n-  Then, I manually added the \"class\" key, which is a property that exists for\n-  all beans (and all objects for that matter.\n-*/\n-\n-    public Object[] getSampleKeys() {\n+    // note to self.  The Sample keys were generated by copying the field\n+    // declarations and using the following regular expression search and replace:\n+    //\n+    // From:\n+    //    private \\(.*\\) some\\(.*\\);\n+    // To:\n+    //    \"some\\2Value\",\n+    //\n+    // Then, I manually added the \"class\" key, which is a property that exists for\n+    // all beans (and all objects for that matter.\n+    protected Object[] getSampleKeys() {\n         Object[] keys = new Object[] {\n             \"someIntValue\",\n             \"someLongValue\",\n      **/\n     private Object objectInFullMap = new Object();\n \n-/*\n-    note to self: the sample values were created manually\n-*/\n-\n-    public Object[] getSampleValues() {\n+    // note to self: the sample values were created manually\n+    protected Object[] getSampleValues() {\n         Object[] values = new Object[] {\n             new Integer(1234),\n             new Long(1298341928234L),\n         return values;\n     }\n \n-    public Object[] getNewSampleValues() {\n+    protected Object[] getNewSampleValues() {\n         Object[] values = new Object[] {\n             new Integer(223),\n             new Long(23341928234L),\n         return new BeanMap();\n     }\n \n-    /**\n-     *  Need to override this method because the \"clear()\" method on the bean\n-     *  map just returns the bean properties to their default states.  It does\n-     *  not actually remove the mappings as per the map contract.  The default\n-     *  testClear() methods checks that the clear method throws an\n-     *  UnsupportedOperationException since this class is not add/remove\n-     *  modifiable.  In our case though, we do not always throw that exception.\n-     **/\n-    public void testClear() {\n-        //TODO: make sure a call to BeanMap.clear returns the bean to its\n-        //default initialization values.\n-    }\n-\n-    public void testBeanMapClone() {\n-        BeanMap map = (BeanMap)makeFullMap();\n-        try {\n-            BeanMap map2 = (BeanMap)((BeanMap)map).clone();\n-\n-            // make sure containsKey is working to verify the bean was cloned\n-            // ok, and the read methods were properly initialized\n-            Object[] keys = getSampleKeys();\n-            for(int i = 0; i < keys.length; i++) {\n-                assertTrue(\"Cloned BeanMap should contain the same keys\",\n-                           map2.containsKey(keys[i]));\n-            }\n-        } catch (CloneNotSupportedException exception) {\n-            fail(\"BeanMap.clone() should not throw a \" +\n-                 \"CloneNotSupportedException when clone should succeed.\");\n-        }\n-    }\n-\n-    public String[] ignoredSimpleTests() {\n+    protected String[] ignoredTests() {\n         // Ignore the serialization tests on collection views.\n         return new String[] {\n          \"TestBeanMap.bulkTestMapEntrySet.testCanonicalEmptyCollectionExists\",\n         };\n     }\n \n+    /**\n+     *  Need to override this method because the \"clear()\" method on the bean\n+     *  map just returns the bean properties to their default states.  It does\n+     *  not actually remove the mappings as per the map contract.  The default\n+     *  testClear() methods checks that the clear method throws an\n+     *  UnsupportedOperationException since this class is not add/remove\n+     *  modifiable.  In our case though, we do not always throw that exception.\n+     **/\n+    public void testClear() {\n+        //TODO: make sure a call to BeanMap.clear returns the bean to its\n+        //default initialization values.\n+    }\n+\n+    public void testBeanMapClone() {\n+        BeanMap map = (BeanMap)makeFullMap();\n+        try {\n+            BeanMap map2 = (BeanMap)((BeanMap)map).clone();\n+\n+            // make sure containsKey is working to verify the bean was cloned\n+            // ok, and the read methods were properly initialized\n+            Object[] keys = getSampleKeys();\n+            for(int i = 0; i < keys.length; i++) {\n+                assertTrue(\"Cloned BeanMap should contain the same keys\",\n+                           map2.containsKey(keys[i]));\n+            }\n+        } catch (CloneNotSupportedException exception) {\n+            fail(\"BeanMap.clone() should not throw a \" +\n+                 \"CloneNotSupportedException when clone should succeed.\");\n+        }\n+    }\n \n     public void testBeanMapPutAllWriteable() {\n         BeanMap map1 = (BeanMap)makeFullMap();\n--- a/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.12 2003/10/02 22:14:29 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2003/10/02 22:14:29 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.13 2003/10/05 20:46:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * <http://www.apache.org/>.\n  *\n  */\n-\n package org.apache.commons.collections;\n \n import java.util.ArrayList;\n /**\n  * Test class.\n  * \n+ * @version $Revision: 1.13 $ $Date: 2003/10/05 20:46:40 $\n+ * \n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n- * @version $Id: TestCursorableLinkedList.java,v 1.12 2003/10/02 22:14:29 scolebourne Exp $\n  */\n public class TestCursorableLinkedList extends AbstractTestList {\n     public TestCursorableLinkedList(String testName) {\n      *\n      *  @return an array of sublist serialization test names \n      */\n-    public String[] ignoredSimpleTests() {\n+    protected String[] ignoredTests() {\n         ArrayList list = new ArrayList();\n         String prefix = \"TestCursorableLinkedList\";\n         String bulk = \".bulkTestSubList\";\n--- a/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n-package org.apache.commons.collections;\n-\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestStaticBucketMap.java,v 1.6 2003/10/05 20:46:40 scolebourne Exp $\n+ * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Turbine\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n+package org.apache.commons.collections;\n \n import java.util.Map;\n \n  * Unit tests \n  * {@link org.apache.commons.collections.StaticBucketMap}.\n  * \n- * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n+ * @version $Revision: 1.6 $ $Date: 2003/10/05 20:46:40 $\n+ * \n+ * @author Michael A. Smith\n  */\n public class TestStaticBucketMap extends AbstractTestMap {\n \n         return new StaticBucketMap(30);\n     }\n \n-    public String[] ignoredSimpleTests() {\n+    protected String[] ignoredTests() {\n         String pre = \"TestStaticBucketMap.bulkTestMap\";\n         String post = \".testCollectionIteratorFailFast\";\n         return new String[] {", "timestamp": 1065386800, "metainfo": ""}