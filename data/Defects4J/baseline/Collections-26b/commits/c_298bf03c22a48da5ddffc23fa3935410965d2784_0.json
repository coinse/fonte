{"sha": "298bf03c22a48da5ddffc23fa3935410965d2784", "log": "StaticBucketMap containsKey doesn't check nulls correctly bug 37567, from Kazuya Ujihara  ", "commit": "\n--- a/src/java/org/apache/commons/collections/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/StaticBucketMap.java\n /*\n- *  Copyright 2002-2004 The Apache Software Foundation\n+ *  Copyright 2002-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  * @author Paul Jack\n  * @author Leo Sutic\n  * @author Janek Bogucki\n+ * @author Kazuya Ujihara\n  */\n public final class StaticBucketMap implements Map {\n \n \n             while( n != null )\n             {\n-                if( n.key == null || ( n.key != null && n.key.equals( key ) ) )\n+                if( n.key == key || ( n.key != null && n.key.equals( key ) ) )\n                 {\n                     return true;\n                 }\n--- a/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n /*\n- *  Copyright 2002-2004 The Apache Software Foundation\n+ *  Copyright 2002-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  * @author Paul Jack\n  * @author Leo Sutic\n  * @author Janek Bogucki\n+ * @author Kazuya Ujihara\n  */\n public final class StaticBucketMap implements Map {\n \n             Node n = buckets[hash];\n \n             while (n != null) {\n-                if (n.key == null || (n.key != null && n.key.equals(key))) {\n+                if (n.key == key || (n.key != null && n.key.equals(key))) {\n                     return true;\n                 }\n \n--- a/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n /*\n- *  Copyright 2001-2004 The Apache Software Foundation\n+ *  Copyright 2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n import org.apache.commons.collections.map.AbstractTestMap;\n \n /**\n- * Unit tests \n+ * Unit tests.\n  * {@link org.apache.commons.collections.StaticBucketMap}.\n  * \n  * @version $Revision$ $Date$\n             pre + \"Values\" + post\n         };\n     }   \n+\n+    // Bugzilla 37567\n+    public void test_get_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(null, \"A\");\n+        assertEquals(\"A\", map.get(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, null, map.get(str));\n+        }\n+    }\n+\n+    public void test_containsKey_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(null, \"A\");\n+        assertEquals(true, map.containsKey(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, false, map.containsKey(str));\n+        }\n+    }\n+\n+    public void test_containsValue_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(\"A\", null);\n+        assertEquals(true, map.containsValue(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, false, map.containsValue(str));\n+        }\n+    }\n+\n }\n--- a/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n /*\n- *  Copyright 2001-2004 The Apache Software Foundation\n+ *  Copyright 2001-2005 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n import org.apache.commons.collections.BulkTest;\n \n /**\n- * Unit tests \n- * {@link org.apache.commons.collections.StaticBucketMap}.\n+ * Unit tests.\n+ * {@link StaticBucketMap}.\n  * \n  * @version $Revision$ $Date$\n  * \n         return BulkTest.makeSuite(TestStaticBucketMap.class);\n     }\n \n-    public static void main(String[] args[]) {\n+    public static void main(String[] args) {\n         String[] testCaseName = { TestStaticBucketMap.class.getName() };\n         junit.textui.TestRunner.main(testCaseName);\n     }\n             pre + \"KeySet\" + post,\n             pre + \"Values\" + post\n         };\n-    }   \n+    }\n+\n+    // Bugzilla 37567\n+    public void test_get_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(null, \"A\");\n+        assertEquals(\"A\", map.get(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, null, map.get(str));\n+        }\n+    }\n+\n+    public void test_containsKey_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(null, \"A\");\n+        assertEquals(true, map.containsKey(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, false, map.containsKey(str));\n+        }\n+    }\n+\n+    public void test_containsValue_nullMatchesIncorrectly() {\n+        StaticBucketMap map = new StaticBucketMap(17);\n+        map.put(\"A\", null);\n+        assertEquals(true, map.containsValue(null));\n+        // loop so we find a string that is in the same bucket as the null\n+        for (int i = 'A'; i <= 'Z'; i++) {\n+            String str = String.valueOf((char) i);\n+            assertEquals(\"String: \" + str, false, map.containsValue(str));\n+        }\n+    }\n+\n }", "timestamp": 1132698265, "metainfo": ""}