{"sha": "bac08c04d4bcd15c20979cc9a37749247467a054", "log": "Document and fix some unchecked casts  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/main/java/org/apache/commons/collections/CollectionUtils.java\n      * @param <T> the element type\n      * @return immutable empty collection\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // OK, empty collection is compatible with any type\n     public static <T> Collection<T> emptyCollection() {\n         return EMPTY_COLLECTION;\n     }\n      * @param collection the collection, possibly <code>null</code>\n      * @return an empty collection if the argument is <code>null</code>\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // OK, empty collection is compatible with any type\n     public static <T> Collection<T> emptyIfNull(final Collection<T> collection) {\n         return collection == null ? EMPTY_COLLECTION : collection;\n     }\n      * @return true if the BoundedCollection is full\n      * @throws NullPointerException if the collection is null\n      */\n-    @SuppressWarnings(\"unchecked\")\n-    public static boolean isFull(final Collection<?> coll) {\n+    public static boolean isFull(final Collection<? extends Object> coll) {\n         if (coll == null) {\n             throw new NullPointerException(\"The collection must not be null\");\n         }\n         }\n         try {\n             final BoundedCollection<?> bcoll =\n-                    UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>) coll);\n+                    UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n             return bcoll.isFull();\n         } catch (final IllegalArgumentException ex) {\n             return false;\n      * @return the maximum size of the BoundedCollection, -1 if no maximum size\n      * @throws NullPointerException if the collection is null\n      */\n-    @SuppressWarnings(\"unchecked\")\n-    public static int maxSize(final Collection<?> coll) {\n+    public static int maxSize(final Collection<? extends Object> coll) {\n         if (coll == null) {\n             throw new NullPointerException(\"The collection must not be null\");\n         }\n         }\n         try {\n             final BoundedCollection<?> bcoll =\n-                    UnmodifiableBoundedCollection.unmodifiableBoundedCollection((Collection<Object>) coll);\n+                    UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n             return bcoll.maxSize();\n         } catch (final IllegalArgumentException ex) {\n             return -1;", "timestamp": 1358730951, "metainfo": ""}