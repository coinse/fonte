{"sha": "da5a378c4fd1757393fa599f7e6766e48dd83ce2", "log": "Applying Thomas Rogan's patch to COLLECTIONS-328, improving the performance to ListUtils.intersection in the manner described by Jilles van Gurp  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n \n      */\n     public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2) {\n         final List<E> result = new ArrayList<E>();\n-        final ArrayList<E> copyOfList1 = new ArrayList<E>(list1);\n-\n-        for (E e : list2) {\n-            if (copyOfList1.contains(e)) {\n+\n+        List<? extends E> smaller = list1;\n+        List<? extends E> larger = list2;\n+        if (list1.size() > list2.size()) {\n+        \tsmaller = list2;\n+        \tlarger = list1;\n+        }\n+        \n+        HashSet<E> hashSet = new HashSet<E>(smaller);\n+\n+        for (E e : larger) {\n+            if (hashSet.contains(e)) {\n                 result.add(e);\n-                copyOfList1.remove(e);\n+                hashSet.remove(e);\n             }\n         }\n         return result;", "timestamp": 1279440456, "metainfo": ""}