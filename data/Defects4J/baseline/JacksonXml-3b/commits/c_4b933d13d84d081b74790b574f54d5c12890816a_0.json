{"sha": "4b933d13d84d081b74790b574f54d5c12890816a", "log": "More fixing for #48", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n import com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser;\n import com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator;\n import com.fasterxml.jackson.dataformat.xml.util.StaxUtil;\n-\n \n /**\n * Factory used for constructing {@link FromXmlParser} and {@link ToXmlGenerator}\n \n     protected transient XMLOutputFactory _xmlOutputFactory;\n \n-    protected String _cfgNameForTextElement = null;\n+    protected String _cfgNameForTextElement;\n     \n     /*\n     /**********************************************************\n         try {\n             XMLInputFactory inf = (XMLInputFactory) Class.forName(_jdkXmlInFactory).newInstance();\n             XMLOutputFactory outf = (XMLOutputFactory) Class.forName(_jdkXmlOutFactory).newInstance();\n-            return new XmlFactory(_objectCodec, inf, outf);\n+            return new XmlFactory(_objectCodec, _xmlParserFeatures, _xmlGeneratorFeatures,\n+                    inf, outf, _cfgNameForTextElement);\n         } catch (ClassNotFoundException e) {\n             throw new IllegalArgumentException(e);\n         } catch (InstantiationException e) {\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestVersions.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestVersions.java\n package com.fasterxml.jackson.dataformat.xml;\n+\n+import java.io.*;\n \n import com.fasterxml.jackson.core.Version;\n import com.fasterxml.jackson.core.Versioned;\n         assertEquals(xf1._xmlGeneratorFeatures, xf2._xmlGeneratorFeatures);\n         assertEquals(xf1._xmlParserFeatures, xf2._xmlParserFeatures);\n     }\n+\n+    // Another test for [Issue#48]\n+    public void testMapperSerialization() throws Exception\n+    {\n+        XmlMapper mapper1 = new XmlMapper();\n+        mapper1.setXMLTextElementName(\"foo\");\n+        assertEquals(\"foo\", mapper1.getFactory().getXMLTextElementName());\n+\n+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+        ObjectOutputStream objectStream = new ObjectOutputStream(bytes);\n+        objectStream.writeObject(mapper1);\n+        objectStream.close();\n+        \n+        ObjectInputStream input = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()));\n+        XmlMapper mapper2 = (XmlMapper) input.readObject();\n+        input.close();\n+\n+        assertEquals(\"foo\", mapper2.getFactory().getXMLTextElementName());\n+    }\n     \n     /*\n     /**********************************************************", "timestamp": 1357965652, "metainfo": ""}