{"sha": "5907dacbb86e2adb48fc3b8000bd11c1fefe88ae", "log": "Update dependency to jackson 1.7.0 (release); fix some compilation problems (still work to do)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/xml/ser/XmlBeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/ser/XmlBeanSerializer.java\n import org.codehaus.jackson.JsonGenerator;\n import org.codehaus.jackson.map.JsonMappingException;\n import org.codehaus.jackson.map.SerializerProvider;\n+import org.codehaus.jackson.map.ser.AnyGetterWriter;\n import org.codehaus.jackson.map.ser.BeanPropertyWriter;\n import org.codehaus.jackson.map.ser.BeanSerializer;\n+import org.codehaus.jackson.type.JavaType;\n \n \n /**\n      */\n     protected final QName[] _xmlNames;\n     \n-    public XmlBeanSerializer(Class<?> type, BeanPropertyWriter[] props,\n-            BeanPropertyWriter[] filteredProps, Object filterId,\n+    public XmlBeanSerializer(JavaType type, BeanPropertyWriter[] props, BeanPropertyWriter[] filteredProps,\n+            AnyGetterWriter anyGetterWriter, Object filterId,\n             int attrCount, QName[] xmlNames)\n     {\n-        super(type, props, filteredProps, filterId);\n+        super(type, props, filteredProps, anyGetterWriter, filterId);\n         _attributeCount = attrCount;\n         _xmlNames = xmlNames;\n     }\n \n     protected XmlBeanSerializer(XmlBeanSerializer src, BeanPropertyWriter[] filtered)\n     {\n-        super(src, filtered);\n+        super(src._handledType, src._props, filtered, src._anyGetterWriter, src._propertyFilterId);\n         _attributeCount = src._attributeCount;\n         _xmlNames = src._xmlNames;\n     }\n--- a/src/main/java/com/fasterxml/jackson/xml/ser/XmlBeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/ser/XmlBeanSerializerFactory.java\n import org.codehaus.jackson.map.SerializerFactory;\n import org.codehaus.jackson.map.introspect.AnnotatedMember;\n import org.codehaus.jackson.map.introspect.BasicBeanDescription;\n+import org.codehaus.jackson.map.ser.AnyGetterWriter;\n import org.codehaus.jackson.map.ser.BeanPropertyWriter;\n import org.codehaus.jackson.map.ser.BeanSerializer;\n import org.codehaus.jackson.map.ser.BeanSerializerFactory;\n import org.codehaus.jackson.map.ser.PropertyBuilder;\n import org.codehaus.jackson.map.type.TypeBindings;\n+import org.codehaus.jackson.type.JavaType;\n \n import com.fasterxml.jackson.xml.XmlAnnotationIntrospector;\n \n \n     @Override\n     protected BeanSerializer instantiateBeanSerializer(SerializationConfig config,\n-            BasicBeanDescription beanDesc,\n-            List<BeanPropertyWriter> properties)\n+            BasicBeanDescription beanDesc, List<BeanPropertyWriter> properties)\n     {\n         BeanPropertyWriter[] writers = properties.toArray(new BeanPropertyWriter[properties.size()]);\n         // Ok: how many attributes do we have to write? namespaces?\n             xmlNames[i] = new QName((ns == null) ? \"\" : ns, bpw.getName());\n             ++i;\n         }\n-        return new XmlBeanSerializer(beanDesc.getBeanClass(), writers, null,\n-                findFilterId(config, beanDesc),\n+        return new XmlBeanSerializer(beanDesc.getType(), writers, null,\n+                null, findFilterId(config, beanDesc),\n                 attrCount, xmlNames);\n     }\n \n--- a/src/test/java/com/fasterxml/jackson/xml/jaxb/TestWithJAXBAnnotations.java\n+++ b/src/test/java/com/fasterxml/jackson/xml/jaxb/TestWithJAXBAnnotations.java\n import com.fasterxml.jackson.xml.XmlAnnotationIntrospector;\n import com.fasterxml.jackson.xml.XmlMapper;\n import com.fasterxml.jackson.xml.XmlTestBase;\n-import com.fasterxml.jackson.xml.XmlAnnotationIntrospector.Pair;\n import com.fasterxml.jackson.xml.jaxb.XmlJaxbAnnotationIntrospector;\n \n /**\n     /* Helper methods\n     /**********************************************************************\n      */\n-\n-    protected XmlMapper getJaxbAndJacksonMapper()\n-    {\n-        XmlMapper mapper = new XmlMapper();\n-        return mapper;\n-    }\n }", "timestamp": 1294428092, "metainfo": ""}