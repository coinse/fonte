{"sha": "37828fc073632d90b6fc6dbd78899d76604d06ac", "log": "Added unit test for issue #84.", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/unwrapped/TestXmlText.java\n+package com.fasterxml.jackson.dataformat.xml.unwrapped;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText;\n+\n+public class TestXmlText extends XmlTestBase{\n+    @JsonPropertyOrder({\"first\",\"second\"})\n+    class Data{\n+        @JacksonXmlText\n+        public String first;\n+        public String second;\n+        public Data(String first, String second) {\n+            this.first = first;\n+            this.second = second;\n+        }\n+    }\n+    \n+    private final XmlMapper MAPPER = new XmlMapper();\n+    { // easier for eye, uncomment for testing\n+//        MAPPER.enable(SerializationFeature.INDENT_OUTPUT);\n+    }\n+    \n+    public void testXmlTextWithSuppressedValue() throws Exception {\n+        MAPPER.setSerializationInclusion(Include.NON_EMPTY);\n+        String xml = MAPPER.writeValueAsString(new Data(\"\",\"second\"));\n+        String expectedXml = \"<Data><second>second</second></Data>\";\n+        assertEquals(expectedXml, xml);\n+    }\n+}", "timestamp": 1386694652, "metainfo": ""}