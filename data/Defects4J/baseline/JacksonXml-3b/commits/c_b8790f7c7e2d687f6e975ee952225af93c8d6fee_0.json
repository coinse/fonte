{"sha": "b8790f7c7e2d687f6e975ee952225af93c8d6fee", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java\n  */\n public class XmlSerializerProvider extends DefaultSerializerProvider\n {\n-    // As of 2.5\n-    private static final long serialVersionUID = -4138605166320336475L;\n+    // As of 2.7\n+    private static final long serialVersionUID = 1L;\n \n     /**\n      * If all we get to serialize is a null, there's no way to figure out\n      * expected root name; so let's just default to something like \"&lt;null>\"...\n      */\n     protected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");\n-    \n+\n     protected final XmlRootNameLookup _rootNameLookup;\n-    \n+\n     public XmlSerializerProvider(XmlRootNameLookup rootNames)\n     {\n         super();\n         super(src, config, f);\n         _rootNameLookup  = src._rootNameLookup;\n     }\n-    \n+\n     /*\n     /**********************************************************************\n     /* Overridden methods\n             SerializerFactory jsf) {\n         return new XmlSerializerProvider(this, config, jsf);\n     }\n-    \n+\n     @SuppressWarnings(\"resource\")\n     @Override\n-    public void serializeValue(JsonGenerator gen, Object value)\n-        throws IOException\n+    public void serializeValue(JsonGenerator gen, Object value) throws IOException\n     {\n         if (value == null) {\n             _serializeXmlNull(gen);", "timestamp": 1449447294, "metainfo": ""}