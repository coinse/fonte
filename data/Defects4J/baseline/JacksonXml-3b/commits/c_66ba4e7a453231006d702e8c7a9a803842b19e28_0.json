{"sha": "66ba4e7a453231006d702e8c7a9a803842b19e28", "log": "Added a unit test to verify customizability of the root name", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestRootListHandling.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestRootListHandling.java\n \n import java.util.*;\n \n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.databind.AnnotationIntrospector;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n \n /**\n  * Tests for verifying that Lists (and arrays) can be serialized even\n  */\n public class TestRootListHandling extends XmlTestBase\n {\n+    @JacksonXmlRootElement(localName=\"SR\")\n+    @JsonPropertyOrder({ \"id\", \"name\", \"description\" })\n     public static class SampleResource {\n         private Long id;\n         private String name;\n         private String description;\n \n+        public SampleResource() { }\n+        public SampleResource(long id, String n, String d) {\n+            this.id = id;\n+            name = n;\n+            description = d;\n+        }\n+        \n         public Long getId() {\n             return id;\n         }\n     /**********************************************************\n      */\n \n+    // Test for ensuring that we can use \".withRootName()\" to override\n+    // default name AND annotation\n+    public void testRenamedRootItem() throws Exception\n+    {\n+        XmlMapper xmlMapper = new XmlMapper();\n+        String xml = xmlMapper\n+                .writer()\n+                .withRootName(\"Shazam\")\n+                .writeValueAsString(new SampleResource(123, \"Foo\", \"Barfy!\"))\n+                .trim();\n+        xml = removeSjsxpNamespace(xml);\n+        assertEquals(\"<Shazam><id>123</id><name>Foo</name><description>Barfy!</description></Shazam>\", xml);\n+    }\n+    \n     // for [Issue#38] -- root-level Collections not supported\n     public void testListSerialization() throws Exception\n     {\n         JacksonXmlModule module = new JacksonXmlModule();\n-        module.setDefaultUseWrapper(false);\n+//        module.setDefaultUseWrapper(true);\n         XmlMapper xmlMapper = new XmlMapper(module);\n         AnnotationIntrospector introspector = new JacksonAnnotationIntrospector();\n         xmlMapper.setAnnotationIntrospector(introspector);\n \n         // to see what JAXB might do, uncomment:\n //System.out.println(\"By JAXB: \"+jaxbSerialized(l)); //  ArrayList.class, SampleResource.class));\n-        \n+\n         String xml = xmlMapper\n             .writerWithDefaultPrettyPrinter()\n-            .withRootName(\"RootList\")\n             .writeValueAsString(l)\n             .trim();\n \n         // first trivial sanity checks\n         assertNotNull(xml);\n-        if (xml.indexOf(\"<RootList>\") < 0) {\n-            fail(\"Unexpected output: should have <RootList> as root element, got: \"+xml);\n+        if (xml.indexOf(\"<ArrayList>\") < 0) {\n+            fail(\"Unexpected output: should have <ArrayList> as root element, got: \"+xml);\n         }\n \n         // and then try reading back", "timestamp": 1376545370, "metainfo": ""}