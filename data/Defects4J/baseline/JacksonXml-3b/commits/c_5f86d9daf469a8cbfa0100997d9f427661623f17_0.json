{"sha": "5f86d9daf469a8cbfa0100997d9f427661623f17", "log": "Add a failing test for #64, to be fixed for 2.2.2", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestDeserialization.java\n import java.util.*;\n \n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText;\n \n public class TestDeserialization extends XmlTestBase\n {\n         @JacksonXmlProperty(isAttribute=true, localName=\"attr\")\n         public String text = \"?\";\n     }\n-    \n+\n+    static class Optional {\n+        @JacksonXmlText\n+        public String number = \"NOT SET\";\n+        public String type = \"NOT SET\";\n+    }\n+\n+    static class Optionals {\n+        @JacksonXmlElementWrapper(useWrapping = false)\n+        public List<Optional> optional;\n+    } \n+\n     /*\n     /**********************************************************\n     /* Unit tests\n     \t\n     \tassertNotNull(map);\n     }\n+\n+    // // Tests for [Issue#64]\n+\n+    public void testOptionalAttr() throws Exception\n+    {\n+        Optional ob = MAPPER.readValue(\"<phone type='work'>123-456-7890</phone>\",\n+                Optional.class);\n+        assertNotNull(ob);\n+                System.err.println(\"ob: \" + ob);\n+        assertEquals(\"123-456-7890\", ob.number);\n+        assertEquals(\"work\", ob.type);\n+    }\n+\n+    public void testMissingOptionalAttr() throws Exception\n+    {\n+        Optional ob = MAPPER.readValue(\"<phone>123-456-7890</phone>\",\n+                Optional.class);\n+        assertNotNull(ob);\n+                System.err.println(\"ob: \" + ob);\n+        assertEquals(\"123-456-7890\", ob.number);\n+        assertEquals(\"NOT SET\", ob.type);\n+    }\n+\n+    public void testMultiOptional() throws Exception\n+    {\n+        Optionals ob = MAPPER.readValue(\"<MultiOptional><optional type='work'>123-456-7890</optional></MultiOptional>\",\n+                Optionals.class);\n+        assertNotNull(ob);\n+        assertNotNull(ob.optional);\n+        assertEquals(1, ob.optional.size());\n+//        System.err.println(\"ob: \" + ob); // works fine\n+        Optional opt = ob.optional.get(0);\n+        assertEquals(\"123-456-7890\", opt.number);\n+        assertEquals(\"work\", opt.type);\n+    }\n+    \n+        public void testMultiOptionalWithMissingType() throws Exception\n+    {\n+            Optionals ob = MAPPER.readValue(\"<MultiOptional><optional>123-456-7890</optional></MultiOptional>\",\n+                    Optionals.class);\n+            assertNotNull(ob);\n+            assertNotNull(ob.optional);\n+            assertEquals(1, ob.optional.size());\n+//            System.err.println(\"ob: \" + ob); // works fine\n+            Optional opt = ob.optional.get(0);\n+            assertEquals(\"123-456-7890\", opt.number);\n+            assertEquals(\"NOT SET\", opt.type);\n+    }\n }", "timestamp": 1369631701, "metainfo": ""}