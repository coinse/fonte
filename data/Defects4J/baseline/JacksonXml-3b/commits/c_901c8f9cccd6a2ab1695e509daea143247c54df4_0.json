{"sha": "901c8f9cccd6a2ab1695e509daea143247c54df4", "log": "Start implementing support for \"unwrapped Lists\" again", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n             _mayBeLeaf = true;\n             /* Ok: in array context we need to skip reporting field names. But what's the best way\n              * to find next token?\n-             * \n              */\n             return (_currToken = JsonToken.FIELD_NAME);\n         }\n--- /dev/null\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java\n+package com.fasterxml.jackson.dataformat.xml.deser;\n+\n+import java.util.Iterator;\n+\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.deser.*;\n+import com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n+\n+/**\n+ * Delegating deserializer whose only function is to handle case of\n+ * \"unwrapped\" List/array deserialization from XML.\n+ */\n+public class WrapperHandlingDeserializer\n+    extends DelegatingDeserializer\n+{\n+    /*\n+    /**********************************************************************\n+    /* Construction\n+    /**********************************************************************\n+     */\n+\n+    public WrapperHandlingDeserializer(BeanDeserializerBase delegate)\n+    {\n+        super(delegate);\n+    }\n+\n+    /*\n+    /**********************************************************************\n+    /* Abstract method implementations\n+    /**********************************************************************\n+     */\n+    \n+    @Override\n+    protected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee) {\n+        return new WrapperHandlingDeserializer(_verifyDeserType(newDelegatee));\n+    }\n+    \n+    /*\n+    /**********************************************************************\n+    /* Overridden methods\n+    /**********************************************************************\n+     */\n+\n+    @Override\n+    protected JsonDeserializer<?> _createContextual(DeserializationContext ctxt,\n+            BeanProperty property, JsonDeserializer<?> newDelegatee0)\n+    {\n+        BeanDeserializerBase newDelegatee = _verifyDeserType(newDelegatee0);\n+\n+//System.out.println(\"DEBUG: createContextual!\");\n+        \n+        // Let's go through the properties now...\n+        Iterator<SettableBeanProperty> it = newDelegatee.properties();\n+        final AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();\n+        while (it.hasNext()) {\n+            SettableBeanProperty prop = it.next();\n+            AnnotatedMember acc = prop.getMember();\n+            PropertyName wrapperName = (acc == null) ? null : intr.findWrapperName(acc);\n+//System.out.println(\"Prop '\"+prop.getName()+\"', wrapper -> \"+wrapperName);\n+\n+        }\n+//        System.out.println(\"DEBUG: /createContextual\");\n+        \n+        /*\n+        if (newDelegatee == _delegatee) {\n+            return this;\n+        }\n+        return newDelegatingInstance(newDelegatee);\n+        */\n+\n+        return newDelegatee;\n+    }\n+\n+    /*\n+    /**********************************************************************\n+    /* Internal methods\n+    /**********************************************************************\n+     */\n+\n+    protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser)\n+    {\n+        if (!(deser instanceof BeanDeserializerBase)) {\n+            throw new IllegalArgumentException(\"Can not change delegate to be of type \"\n+                    +deser.getClass().getName());\n+        }\n+        return (BeanDeserializerBase) deser;\n+    }\n+}\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java\n         return propDefs;\n     }\n \n+    /*\n     @Override\n     public BeanDeserializerBuilder updateBuilder(DeserializationConfig config,\n             BeanDescription beanDesc, BeanDeserializerBuilder builder)\n         }\n         return builder;\n     }\n+    */\n+\n+    @Override\n+    public JsonDeserializer<?> modifyDeserializer(DeserializationConfig config,\n+            BeanDescription beanDesc, JsonDeserializer<?> deserializer)\n+    {\n+        if (!(deserializer instanceof BeanDeserializerBase)) {\n+            return deserializer;\n+        }\n+        return new WrapperHandlingDeserializer((BeanDeserializerBase) deserializer);\n+    }\n }", "timestamp": 1347150047, "metainfo": ""}