{"sha": "16a875a9f25d49933e60998ba5becacb1f64e473", "log": "minor test cleanup", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/EmptyListDeserTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/EmptyListDeserTest.java\n                 \"</Config>\\n\",\n                 Config.class);\n         assertNotNull(r);\n+        assertEquals(\"123\", r.id);\n+        assertNotNull(r.entry);\n+        assertEquals(1, r.entry.size());\n+        assertEquals(\"foo\", r.entry.get(0).id);\n     }\n }\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListAnnotationSharingTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListAnnotationSharingTest.java\n import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n \n-// for [Issue#55]\n+// for [dataformat-xml#55]\n public class ListAnnotationSharingTest extends XmlTestBase\n {\n     static class Wrapper {\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListAsObjectTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListAsObjectTest.java\n         assertEquals(\"d\", values.getValues().get(1).getV());\n     \n         assertEquals(\"array\", values.getType());\n-\n-        // Passes with 2.1.2\n-        /*\n-        assertEquals(2, values.size());\n-        assertEquals(\"c\", values.get(0).getV());\n-        assertEquals(\"d\", values.get(1).getV());\n-        */\n     }\n }\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListSerializationTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/ListSerializationTest.java\n     {\n         String xml = MAPPER.writeValueAsString(new ListBean(1, 2, 3));\n         xml = removeSjsxpNamespace(xml);\n-        // 06-Dec-2010, tatu: Not completely ok; should default to not using wrapper...\n         assertEquals(\"<ListBean><values><values>1</values><values>2</values><values>3</values></values></ListBean>\", xml);\n     }\n \n         StringListBean list = new StringListBean(\"a\", \"b\", \"c\");\n         String xml = MAPPER.writeValueAsString(list);\n         xml = removeSjsxpNamespace(xml);\n-        // 06-Dec-2010, tatu: Not completely ok; should default to not using wrapper... but it's what we have now\n         assertEquals(\"<StringListBean><stringList>\"\n                 +\"<strings><text>a</text></strings>\"\n                 +\"<strings><text>b</text></strings>\"\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/UnwrappedListWithEmptyCData129Test.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/lists/UnwrappedListWithEmptyCData129Test.java\n         MAPPER.enable(SerializationFeature.INDENT_OUTPUT);\n     }\n \n-    // for [#129]\n+    // for [dataformat-xml#129]\n     public void testListWithEmptyCData() throws Exception\n     {\n         _testListWithEmptyCData(\" \");\n \n         List<String> values = result.value;\n \n-        assertEquals(3, values.size()); // expecting 3 values, getting only 1\n+        assertEquals(3, values.size()); // expecting 3 values\n         assertEquals(\"A\", values.get(0));\n         assertEquals(cdata, values.get(1)); // expecting empty string in second position\n         assertEquals(\"C\", values.get(2));", "timestamp": 1452146500, "metainfo": ""}