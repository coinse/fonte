{"sha": "705899795a897fb961956e3161f975fc42bccccf", "log": "Add 'requiresCustomCodec()' implementation to indicate that yes, XML does require one", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n         return hasXMLFormat(acc);\n     }\n \n+    /**\n+     * XML format does require support from custom {@link ObjectCodec}\n+     * (that is, {@link XmlMapper}), so need to return true here.\n+     * \n+     * @return True since XML format does require support from codec\n+     */\n+    @Override\n+    public boolean requiresCustomCodec() {\n+        return false;\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Upcoming parts of public API (for 2.1)\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n import com.fasterxml.jackson.core.io.IOContext;\n import com.fasterxml.jackson.core.json.JsonReadContext;\n import com.fasterxml.jackson.core.util.ByteArrayBuilder;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n import com.fasterxml.jackson.dataformat.xml.util.XmlTokenStream;\n \n \n         _objectCodec = c;\n     }\n \n+    /**\n+     * XML format does require support from custom {@link ObjectCodec}\n+     * (that is, {@link XmlMapper}), so need to return true here.\n+     * \n+     * @return True since XML format does require support from codec\n+     */\n+    @Override\n+    public boolean requiresCustomCodec() {\n+        return false;\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Extended API, configuration\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector.java\n import javax.xml.namespace.QName;\n \n import com.fasterxml.jackson.databind.introspect.*;\n+import com.fasterxml.jackson.databind.type.TypeFactory;\n import com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector;\n import com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;\n \n     extends JaxbAnnotationIntrospector\n     implements XmlAnnotationIntrospector\n {\n+    @Deprecated\n+    public XmlJaxbAnnotationIntrospector() {\n+        super();\n+    }\n+\n+    public XmlJaxbAnnotationIntrospector(TypeFactory typeFactory,\n+            boolean firstXmlidRefAsId)\n+    {\n+        super(typeFactory, firstXmlidRefAsId);\n+    }\n+    \n     @Override\n     public String findNamespace(Annotated ann)\n     {", "timestamp": 1345695310, "metainfo": ""}