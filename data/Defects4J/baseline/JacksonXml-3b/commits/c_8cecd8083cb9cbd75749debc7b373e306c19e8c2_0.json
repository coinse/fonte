{"sha": "8cecd8083cb9cbd75749debc7b373e306c19e8c2", "log": "yet more unit tests.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestStringValues.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestStringValues.java\n         assertNotNull(bean);\n         assertEquals(\"text!\", bean.text);\n     }\n-    \n-    public void testEmptyStringElement() throws Exception\n-    {\n-        // then with empty element\n-        StringBean bean = MAPPER.readValue(\"<StringBean><text></text></StringBean>\", StringBean.class);\n-        assertNotNull(bean);\n-        // empty String or null?\n-        // 22-Sep-2012, tatu: Seems to be 'null', but should probably be fixed to \"\"\n-        // Also see [dataformat-xml#162]\n-//        assertEquals(\"\", bean.text);\n-        assertNull(bean.text);\n-    }\n-    \n+\n     public void testMissingString() throws Exception\n     {\n         StringBean baseline = new StringBean();\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestStringValues162.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestStringValues162.java\n package com.fasterxml.jackson.dataformat.xml.failing;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n     static class Name {\n         public String first;\n         public String last;\n+\n+        public Name() { }\n+        public Name(String f, String l) {\n+            first = f;\n+            last = l;\n+        }\n     }\n \n+    static class Names {\n+        public List<Name> names = new ArrayList<Name>();\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Unit tests\n         assertEquals(\"Ryan\", name.first);\n         assertEquals(\"\", name.last);\n     }\n+\n+    public void testEmptyStringElement() throws Exception\n+    {\n+        // then with empty element\n+        StringBean bean = MAPPER.readValue(\"<StringBean><text></text></StringBean>\", StringBean.class);\n+        assertNotNull(bean);\n+        // empty String or null?\n+        // As per [dataformat-xml#162], really should be \"\", not null:\n+        assertEquals(\"\", bean.text);\n+//        assertNull(bean.text);\n+    }\n+\n+    public void testStringsInList() throws Exception\n+    {\n+        Names input = new Names();\n+        input.names.add(new Name(\"Bob\", \"Lee\"));\n+        input.names.add(new Name(\"\", \"\"));\n+        input.names.add(new Name(\"Sponge\", \"Bob\"));\n+        String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(input);\n+        \n+//System.err.println(\"XML:\\n\"+xml);\n+\n+        Names result = MAPPER.readValue(xml, Names.class);\n+        assertNotNull(result);\n+        assertNotNull(result.names);\n+        assertEquals(3, result.names.size());\n+        assertEquals(\"Bob\", result.names.get(2).last);\n+\n+        // [dataformat-xml#162]: should get empty String, not null\n+        assertEquals(\"\", result.names.get(1).first);\n+    }\n }", "timestamp": 1452147351, "metainfo": ""}