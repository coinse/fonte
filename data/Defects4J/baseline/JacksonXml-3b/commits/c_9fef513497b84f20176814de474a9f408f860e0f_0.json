{"sha": "9fef513497b84f20176814de474a9f408f860e0f", "log": "Change version detection", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlModule.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlModule.java\n import com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser;\n import com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier;\n import com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier;\n-\n \n /**\n  * Module that implements most functionality needed to support producing and\n     \n     public JacksonXmlModule()\n     {\n-        super(\"JackxonXmlModule\", ModuleVersion.instance.version());\n+        super(\"JackxonXmlModule\", PackageVersion.VERSION);\n     }\n     \n     @Override\n--- /dev/null\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/PackageVersion.java.in\n+package @package@;\n+\n+import com.fasterxml.jackson.core.Version;\n+import com.fasterxml.jackson.core.Versioned;\n+import com.fasterxml.jackson.core.util.VersionUtil;\n+\n+/**\n+ * Automatically generated from PackageVersion.java.in during\n+ * packageVersion-generate execution of maven-replacer-plugin in\n+ * pom.xml.\n+ */\n+public final class PackageVersion implements Versioned {\n+    public final static Version VERSION = VersionUtil.parseVersion(\n+        \"@projectversion@\", \"@projectgroupid@\", \"@projectartifactid@\");\n+\n+    @Override\n+    public Version version() {\n+        return VERSION;\n+    }\n+}\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java\n \n     @Override\n     public Version version() {\n-        return ModuleVersion.instance.version();\n+        return PackageVersion.VERSION;\n     }\n \n     /*\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java\n     \n     @Override\n     public Version version() {\n-        return ModuleVersion.instance.version();\n+        return PackageVersion.VERSION;\n     }\n \n     /*\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n      * extra handling, such as indication of whether to write attributes or\n      * elements.\n      */\n+    @SuppressWarnings(\"deprecation\")\n     @Override\n     protected void serializeFields(Object bean, JsonGenerator jgen0, SerializerProvider provider)\n         throws IOException, JsonGenerationException\n     {\n         final ToXmlGenerator xgen = (ToXmlGenerator) jgen0;\n         final BeanPropertyWriter[] props;\n+        // !!! TODO: change to use non-deprecated version in 2.3\n         if (_filteredProps != null && provider.getSerializationView() != null) {\n             props = _filteredProps;\n         } else {\n         }\n     }\n \n+    @SuppressWarnings(\"deprecation\")\n     @Override\n     protected void serializeFieldsFiltered(Object bean, JsonGenerator jgen0,\n             SerializerProvider provider)\n         final ToXmlGenerator xgen = (ToXmlGenerator) jgen0;\n         \n         final BeanPropertyWriter[] props;\n+        // !!! TODO: change to use non-deprecated version in 2.3\n         if (_filteredProps != null && provider.getSerializationView() != null) {\n             props = _filteredProps;\n         } else {", "timestamp": 1362888488, "metainfo": ""}