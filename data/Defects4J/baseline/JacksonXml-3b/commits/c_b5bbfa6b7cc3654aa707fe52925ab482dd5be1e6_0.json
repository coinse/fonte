{"sha": "b5bbfa6b7cc3654aa707fe52925ab482dd5be1e6", "log": "Add a failing test case for #162", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java\n      * String (\"\").\n      */\n     public final static String DEFAULT_UNNAMED_TEXT_PROPERTY = \"\";\n-    \n+\n     /**\n      * Enumeration that defines all togglable features for XML parsers.\n      * None defined so far (2.6), so just a placeholder.\n      * the current event.\n      */\n     @Override\n-    public String getCurrentName()\n-        throws IOException, JsonParseException\n+    public String getCurrentName() throws IOException\n     {\n         // [JACKSON-395]: start markers require information from parent\n         String name;\n      */\n \n     @Override\n-    public String getText() throws IOException, JsonParseException\n+    public String getText() throws IOException\n     {\n         if (_currToken == null) {\n             return null;\n \n     // @since 2.1\n     @Override\n-    public final String getValueAsString() throws IOException, JsonParseException {\n+    public final String getValueAsString() throws IOException {\n         return getValueAsString(null);\n     }\n \n     @Override\n-    public String getValueAsString(String defValue) throws IOException, JsonParseException\n+    public String getValueAsString(String defValue) throws IOException\n     {\n         JsonToken t = _currToken;\n         if (t == null) {\n     }\n     \n     @Override\n-    public char[] getTextCharacters() throws IOException, JsonParseException {\n+    public char[] getTextCharacters() throws IOException {\n         String text = getText();\n         return (text == null)  ? null : text.toCharArray();\n     }\n \n     @Override\n-    public int getTextLength() throws IOException, JsonParseException {\n+    public int getTextLength() throws IOException {\n         String text = getText();\n         return (text == null)  ? 0 : text.length();\n     }\n \n     @Override\n-    public int getTextOffset() throws IOException, JsonParseException {\n+    public int getTextOffset() throws IOException {\n         return 0;\n     }\n \n      */\n \n     @Override\n-    public Object getEmbeddedObject() throws IOException, JsonParseException {\n+    public Object getEmbeddedObject() throws IOException {\n         // no way to embed POJOs for now...\n         return null;\n     }\n \n     @Override\n-    public byte[] getBinaryValue(Base64Variant b64variant)\n-        throws IOException, JsonParseException\n+    public byte[] getBinaryValue(Base64Variant b64variant) throws IOException\n     {\n         if (_currToken != JsonToken.VALUE_STRING &&\n                 (_currToken != JsonToken.VALUE_EMBEDDED_OBJECT || _binaryValue == null)) {\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestStringValues.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/deser/TestStringValues.java\n             return \"[a=\"+a+\",b=\"+b+\"]\";\n         }\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Unit tests\n         assertNotNull(bean);\n         // empty String or null?\n         // 22-Sep-2012, tatu: Seems to be 'null', but should probably be fixed to \"\"\n+        // Also see [dataformat-xml#162]\n //        assertEquals(\"\", bean.text);\n         assertNull(bean.text);\n     }\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestStringValues162.java\n+package com.fasterxml.jackson.dataformat.xml.failing;\n+\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+\n+public class TestStringValues162 extends XmlTestBase\n+{\n+    static class Name {\n+        public String first;\n+        public String last;\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    private final XmlMapper MAPPER = new XmlMapper();\n+\n+    public void testEmptyString162() throws Exception\n+    {\n+        Name name = MAPPER.readValue(\"<name><first>Ryan</first><last></last></name>\",\n+                Name.class);\n+        assertNotNull(name);\n+        assertEquals(\"Ryan\", name.first);\n+        assertEquals(\"\", name.last);\n+    }\n+}", "timestamp": 1449465641, "metainfo": ""}