{"sha": "39822a45b523bb196db154af7acf194e07d75543", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n         throws Exception\n     {\n         Object value = get(bean);\n+        \n         /* Hmmh. Does the default null serialization work ok here? For now let's assume\n          * it does; can change later if not.\n          */\n             }\n             return;\n         }\n-\n+        \n         // then find serializer to use\n         JsonSerializer<Object> ser = _serializer;\n         if (ser == null) {\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n import com.fasterxml.jackson.databind.ser.BeanPropertyWriter;\n import com.fasterxml.jackson.databind.ser.BeanSerializer;\n import com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;\n+import com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;\n import com.fasterxml.jackson.databind.util.NameTransformer;\n import com.fasterxml.jackson.dataformat.xml.util.XmlInfo;\n \n      */\n     protected final QName[] _xmlNames;\n \n-    public XmlBeanSerializer(BeanSerializer src)\n+    public XmlBeanSerializer(BeanSerializerBase src)\n     {\n         super(src);\n \n         }\n         _attributeCount = attrCount;\n     }\n-    \n-    /*\n-    protected XmlBeanSerializer(XmlBeanSerializer src, BeanPropertyWriter[] filtered)\n-    {\n-        super(src._handledType, src._props, filtered, src._anyGetterWriter, src._propertyFilterId);\n-        _attributeCount = src._attributeCount;\n-        _xmlNames = src._xmlNames;\n-    }\n-    */\n \n     protected XmlBeanSerializer(XmlBeanSerializer src, ObjectIdWriter objectIdWriter)\n     {\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier.java\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n import com.fasterxml.jackson.databind.ser.*;\n+import com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;\n import com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector;\n import com.fasterxml.jackson.dataformat.xml.util.XmlInfo;\n \n          * is, what to do if it's not one: throw exception or bail out?\n          * For now let's do latter.\n          */\n-        if (!(serializer instanceof BeanSerializer)) {\n+        if (!(serializer instanceof BeanSerializerBase)) {\n             return serializer;\n         }\n-        return new XmlBeanSerializer((BeanSerializer) serializer);\n+        return new XmlBeanSerializer((BeanSerializerBase) serializer);\n     }\n \n     /*\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestEnums.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/failing/TestEnums.java\n package com.fasterxml.jackson.dataformat.xml.failing;\n-\n \n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n \n     {\n         ObjectMapper mapper = new XmlMapper();\n         String str = mapper.writeValueAsString(new UntypedEnumBean(TestEnum.B));\n+        \n         UntypedEnumBean result = mapper.readValue(str, UntypedEnumBean.class);\n         assertNotNull(result);\n         assertNotNull(result.value);", "timestamp": 1329792148, "metainfo": ""}