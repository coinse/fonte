{"sha": "9fb3472848ccbfb399d1fd7a64d1a686ad6621bf", "log": "minor test cleanup", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestComplex.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestComplex.java\n         ObjectReader r = MAPPER.reader(MediaItem.class);\n         MediaItem result = r.readValue(xml);\n         assertNotNull(result);\n+        assertEquals(content.getTitle(), result.getContent().getTitle());\n     }\n }\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/TestSerializerCustom.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestSerializerCustom.java\n         }\n \n         @Override\n-        public Item deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n+        public Item deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {\n           ObjectCodec oc = jp.getCodec();\n           JsonNode json = oc.readTree(jp);\n           JsonNode foo = json.get(\"obj\");\n         }\n \n         @Override\n-        public void serialize(Item value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {\n+        public void serialize(Item value, JsonGenerator jgen, SerializerProvider provider) throws IOException {\n           jgen.writeStartObject();\n           jgen.writeObjectField(\"obj\", value.obj);\n           jgen.writeStringField(\"name\", value.name);", "timestamp": 1373940723, "metainfo": ""}