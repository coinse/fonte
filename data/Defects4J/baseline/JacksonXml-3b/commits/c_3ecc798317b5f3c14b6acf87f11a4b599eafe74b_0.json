{"sha": "3ecc798317b5f3c14b6acf87f11a4b599eafe74b", "log": "Added unit test to verify JAXB annotations issue with @XmlElementWrapper; will be fixed by 2.0.3 of JAXB annotations module", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/jaxb/TestElementWrapper.java\n+package com.fasterxml.jackson.dataformat.xml.jaxb;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+\n+import com.fasterxml.jackson.databind.AnnotationIntrospector;\n+import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+import com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+\n+public class TestElementWrapper extends XmlTestBase\n+{\n+    @XmlRootElement(name = \"Individual\")\n+    class MyPerson {\n+          public String name;\n+\n+          @XmlElementWrapper(name = \"offspring\")\n+          @XmlElement(name = \"kid\")\n+          public List<MyPerson> children = new ArrayList<MyPerson>();\n+    }\n+\n+    /*\n+    /**********************************************************************\n+    /* Unit tests\n+    /**********************************************************************\n+     */\n+\n+    public void testElementWrapper() throws Exception\n+    {\n+        XmlMapper _jaxbMapper = new XmlMapper();\n+        // Use JAXB-then-Jackson annotation introspector\n+        AnnotationIntrospector intr = XmlAnnotationIntrospector.Pair.instance\n+            (new XmlJaxbAnnotationIntrospector(), new JacksonAnnotationIntrospector());\n+        _jaxbMapper.setAnnotationIntrospector(intr);\n+\n+        MyPerson person = new MyPerson();\n+        person.name = \"Jay\";\n+\n+        MyPerson child = new MyPerson();\n+        child.name = \"Junior\";\n+        \n+        person.children.add(child);\n+\n+        String xml = _jaxbMapper.writer().writeValueAsString(person);\n+\n+System.err.println(\"XML == \"+xml);        \n+        \n+        String expected = \"<Individual><name>Jay</name>\"\n+                + \"<offspring><kid><name>Junior</name><offspring/></kid></offspring></Individual>\";\n+        assertEquals(expected, xml);\n+    }\n+}\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/jaxb/TestWithJAXBAnnotations.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/jaxb/TestWithJAXBAnnotations.java\n package com.fasterxml.jackson.dataformat.xml.jaxb;\n \n import java.io.IOException;\n+import java.util.*;\n \n import javax.xml.bind.annotation.*;\n \n         public String attr = \"3\";\n     }\n \n-\t@javax.xml.bind.annotation.XmlRootElement(name=\"Simple\")\n-\tstatic class WithXmlValue\n-\t{\n-\t\t@javax.xml.bind.annotation.XmlAttribute\n-\t\tpublic int a = 13;\n+    @javax.xml.bind.annotation.XmlRootElement(name=\"Simple\")\n+    static class WithXmlValue\n+    {\n+        @javax.xml.bind.annotation.XmlAttribute\n+        public int a = 13;\n \n-\t\t@javax.xml.bind.annotation.XmlValue\n-\t\tpublic String text = \"something\";\n-\t}\n-\t\n+        @javax.xml.bind.annotation.XmlValue\n+        public String text = \"something\";\n+    }\n+    \n     /*\n     /**********************************************************************\n     /* Set up", "timestamp": 1337836543, "metainfo": ""}