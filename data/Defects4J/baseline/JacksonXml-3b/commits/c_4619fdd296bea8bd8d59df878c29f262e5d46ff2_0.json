{"sha": "4619fdd296bea8bd8d59df878c29f262e5d46ff2", "log": "Fix minor javadoc issues found during build", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/xml/XmlAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/XmlAnnotationIntrospector.java\n \n /**\n  * Additional extension interface used above and beyond\n- * {@link org.codehaus.jackson.map.AnnotationIntrospector} to\n+ * {@link AnnotationIntrospector} to\n  * handle XML-specific configuration.\n  * \n  * @since 1.7\n--- a/src/main/java/com/fasterxml/jackson/xml/XmlFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/XmlFactory.java\n      */\n \n     /**\n-     * Method for enabling or disabling specified parser feature\n-     * (check {@link FromXmlParser.Feature} for list of features)\n+     * Method for enabling or disabling specified XML parser feature.\n      */\n     public final XmlFactory configure(FromXmlParser.Feature f, boolean state)\n     {\n     }\n \n     /**\n-     * Method for enabling specified parser feature\n-     * (check {@link FromXmlParser.Feature} for list of features)\n+     * Method for enabling specified XML parser feature.\n      */\n     public XmlFactory enable(FromXmlParser.Feature f) {\n         _xmlParserFeatures |= f.getMask();\n     }\n \n     /**\n-     * Method for disabling specified parser features\n-     * (check {@link JsonParser.Feature} for list of features)\n+     * Method for disabling specified XML parser feature.\n      */\n     public XmlFactory disable(FromXmlParser.Feature f) {\n         _xmlParserFeatures &= ~f.getMask();\n     }\n \n     /**\n-     * Checked whether specified parser feature is enabled.\n+     * Checked whether specified XML parser feature is enabled.\n      */\n     public final boolean isEnabled(FromXmlParser.Feature f) {\n         return (_xmlParserFeatures & f.getMask()) != 0;\n      */\n \n     /**\n-     * Method for enabling or disabling specified generator feature\n-     * (check {@link JsonGenerator.Feature} for list of features)\n-     *\n-     * @since 1.2\n+     * Method for enabling or disabling specified XML generator feature.\n      */\n     public final XmlFactory configure(ToXmlGenerator.Feature f, boolean state) {\n         if (state) {\n \n \n     /**\n-     * Method for enabling specified generator features\n-     * (check {@link JsonGenerator.Feature} for list of features)\n+     * Method for enabling specified XML generator feature.\n      */\n     public XmlFactory enable(ToXmlGenerator.Feature f) {\n         _xmlGeneratorFeatures |= f.getMask();\n     }\n \n     /**\n-     * Method for disabling specified generator feature\n-     * (check {@link JsonGenerator.Feature} for list of features)\n+     * Method for disabling specified XML generator feature.\n      */\n     public XmlFactory disable(ToXmlGenerator.Feature f) {\n         _xmlGeneratorFeatures &= ~f.getMask();\n     }\n \n     /**\n-     * Check whether specified generator feature is enabled.\n+     * Check whether specified XML generator feature is enabled.\n      */\n     public final boolean isEnabled(ToXmlGenerator.Feature f) {\n         return (_xmlGeneratorFeatures & f.getMask()) != 0;\n--- a/src/main/java/com/fasterxml/jackson/xml/deser/FromXmlParser.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/deser/FromXmlParser.java\n \n     /**\n      * Bit flag composed of bits that indicate which\n-     * {@link org.codehaus.jackson.smile.SmileGenerator.Feature}s\n+     * {@link FromXmlParser.Feature}s\n      * are enabled.\n      */\n     protected int _xmlFeatures;\n \n     /**\n      * Method called to release internal buffers owned by the base\n-     * reader. This may be called along with {@link #_closeInput} (for\n-     * example, when explicitly closing this reader instance), or\n-     * separately (if need be).\n+     * parser.\n      */\n     protected void _releaseBuffers() throws IOException\n     {\n-        /*\n-        _textBuffer.releaseBuffers();\n-        char[] buf = _nameCopyBuffer;\n-        if (buf != null) {\n-            _nameCopyBuffer = null;\n-            _ioContext.releaseNameCopyBuffer(buf);\n-        }\n-        */\n+        // anything we can/must release? Underlying parser should do all of it, for now?\n     }\n \n     protected ByteArrayBuilder _getByteArrayBuilder()\n--- a/src/main/java/com/fasterxml/jackson/xml/jaxb/XmlJaxbAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/jaxb/XmlJaxbAnnotationIntrospector.java\n import com.fasterxml.jackson.xml.XmlAnnotationIntrospector;\n \n /**\n- * Alternative {@link AnnotationIntrospector} implementation that\n+ * Alternative {@link org.codehaus.jackson.map.AnnotationIntrospector} implementation that\n  * builds on introspector from Jackson XC package that uses JAXB annotations,\n  * not Jackson annotations.\n  */\n--- a/src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java\n \n     /**\n      * Bit flag composed of bits that indicate which\n-     * {@link org.codehaus.jackson.smile.SmileGenerator.Feature}s\n+     * {@link ToXmlGenerator.Feature}s\n      * are enabled.\n      */\n     protected int _xmlFeatures;", "timestamp": 1294512106, "metainfo": ""}