{"sha": "f619819cb4173c686f66e616fee74ed77b2485bc", "log": "Merge pull request #85 from pgelinas/issue-84  Unit test and fix for issue #84", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer.java\n                 if (prop != null) { // can have nulls in filtered list\n                     prop.serializeAsField(bean, xgen, provider);\n                 }\n+                // Reset to avoid next value being written as unwrapped, \n+                // for example when property is suppressed\n+                if (i == textIndex) {\n+                    xgen.setNextIsUnwrapped(false);\n+                }\n             }\n             if (_anyGetterWriter != null) {\n                 _anyGetterWriter.getAndSerialize(bean, xgen, provider);\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/unwrapped/TestXmlText.java\n+package com.fasterxml.jackson.dataformat.xml.unwrapped;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText;\n+\n+public class TestXmlText extends XmlTestBase{\n+    @JsonPropertyOrder({\"first\",\"second\"})\n+    class Data{\n+        @JacksonXmlText\n+        public String first;\n+        public String second;\n+        public Data(String first, String second) {\n+            this.first = first;\n+            this.second = second;\n+        }\n+    }\n+    \n+    private final XmlMapper MAPPER = new XmlMapper();\n+    { // easier for eye, uncomment for testing\n+//        MAPPER.enable(SerializationFeature.INDENT_OUTPUT);\n+    }\n+    \n+    public void testXmlTextWithSuppressedValue() throws Exception {\n+        MAPPER.setSerializationInclusion(Include.NON_EMPTY);\n+        String xml = MAPPER.writeValueAsString(new Data(\"\",\"second\"));\n+        String expectedXml = \"<Data><second>second</second></Data>\";\n+        assertEquals(expectedXml, xml);\n+    }\n+}", "timestamp": 1388029960, "metainfo": ""}