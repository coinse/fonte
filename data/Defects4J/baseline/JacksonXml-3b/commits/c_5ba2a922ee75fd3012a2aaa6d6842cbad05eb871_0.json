{"sha": "5ba2a922ee75fd3012a2aaa6d6842cbad05eb871", "log": "Unit test for issue #104.", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/TestIssue104.java\n+package com.fasterxml.jackson.dataformat.xml;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.annotation.JsonIdentityInfo;\n+import com.fasterxml.jackson.annotation.ObjectIdGenerators;\n+\n+/**\n+ * Unit test to showcase issue #104, based on TestObjectIdDeserialization unit test in databind package.\n+ *\n+ */\n+public class TestIssue104 extends XmlTestBase {\n+    // // Classes for external id from property annotations:\n+    \n+    static class IdWrapper\n+    {\n+        @JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property=\"id\")\n+        public ValueNode node;\n+\n+        public IdWrapper() { }\n+        public IdWrapper(int v) {\n+            node = new ValueNode(v);\n+        }\n+    }\n+\n+    static class ValueNode {\n+        public List<Integer> value= new ArrayList<Integer>();\n+        public IdWrapper next;\n+        \n+        public ValueNode() { this(0); }\n+        public ValueNode(int v) { value.add(v); }\n+    }\n+    \n+    private final XmlMapper MAPPER = new XmlMapper();\n+    \n+    // Another test to ensure ordering is not required (i.e. can do front references)\n+    public void testSimpleCollectionDeserWithForwardRefs() throws Exception\n+    {\n+        MAPPER.writeValue(System.out, new IdWrapper(7));\n+        IdWrapper result = MAPPER.readValue(\"<IdWrapper><node><value><value>7</value></value><next><node>1</node></next><id>1</id></node></IdWrapper>\"\n+                ,IdWrapper.class);\n+        assertEquals(7, (int)result.node.value.get(0));\n+        assertSame(result.node, result.node.next.node);\n+    }\n+}", "timestamp": 1392664272, "metainfo": ""}