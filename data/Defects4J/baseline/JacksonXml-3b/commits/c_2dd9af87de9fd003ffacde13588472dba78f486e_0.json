{"sha": "2dd9af87de9fd003ffacde13588472dba78f486e", "log": "Minor warnings cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java\n         // and then see if we must suppress certain values (default, empty)\n         if (_suppressableValue != null) {\n             if (MARKER_FOR_EMPTY == _suppressableValue) {\n-                if (ser.isEmpty(value)) {\n+                if (ser.isEmpty(prov, value)) {\n                     return;\n                 }\n             } else if (_suppressableValue.equals(value)) {\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/RoundtripContentTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/RoundtripContentTest.java\n         input.addPhoto(new MediaItem.Photo(\"http://a\", \"title1\", 200, 100, MediaItem.Size.LARGE));\n         input.addPhoto(new MediaItem.Photo(\"http://b\", \"title2\", 640, 480, MediaItem.Size.SMALL));\n \n-        ObjectWriter w = MAPPER.writerWithType(MediaItem.class);\n+        ObjectWriter w = MAPPER.writerFor(MediaItem.class);\n \n         /*\n         StringWriter sw = new StringWriter();\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/misc/NodeTest.java\n+package com.fasterxml.jackson.dataformat.xml.misc;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+\n+public class NodeTest extends XmlTestBase\n+{\n+    public void testMixed() throws Exception\n+    {\n+        final XmlMapper xmlMapper = new XmlMapper();\n+        final ObjectMapper jsonMapper = new ObjectMapper();\n+\n+        JsonNode root = xmlMapper.readTree(\"<root>first<child>4</child>second</root>\");\n+        String json = jsonMapper.writeValueAsString(root);\n+\n+        System.out.println(\"-> \"+json);\n+    }\n+}\n--- a/src/test/java/com/fasterxml/jackson/dataformat/xml/misc/UnwrappingWithXMLTest.java\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/misc/UnwrappingWithXMLTest.java\n         assertEquals(27, wrapper.location.y);\n \n         // should also write out the same way\n-        assertEquals(XML, mapper.writerWithType(Unwrapping.class).writeValueAsString(wrapper));\n+        assertEquals(XML, mapper.writerFor(Unwrapping.class).writeValueAsString(wrapper));\n     }\n \n     public void testUnwrappingWithAttribute()\n         assertEquals(27, wrapper.location.y);\n \n         // should also write out the same way\n-        assertEquals(XML, mapper.writerWithType(UnwrappingWithAttributes.class).writeValueAsString(wrapper));\n+        assertEquals(XML, mapper.writerFor(UnwrappingWithAttributes.class).writeValueAsString(wrapper));\n     }\n \n     public void testUnwrappingSubWithAttribute()\n         assertEquals(27, wrapper.location.y);\n \n         // should also write out the same way\n-        assertEquals(XML, mapper.writerWithType(UnwrappingSubWithAttributes.class).writeValueAsString(wrapper));\n+        assertEquals(XML, mapper.writerFor(UnwrappingSubWithAttributes.class).writeValueAsString(wrapper));\n     }\n }", "timestamp": 1418884502, "metainfo": ""}