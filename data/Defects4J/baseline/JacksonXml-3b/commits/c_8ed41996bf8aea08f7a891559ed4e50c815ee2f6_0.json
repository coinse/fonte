{"sha": "8ed41996bf8aea08f7a891559ed4e50c815ee2f6", "log": "Fix issues wrt recent refactoring of databind", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java\n         super(delegate);\n         _namesToWrap = namesToWrap;\n     }\n-    \n+\n     /*\n     /**********************************************************************\n     /* Abstract method implementations\n     /**********************************************************************\n      */\n-    \n-    @Override\n-    protected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee) {\n-        return new WrapperHandlingDeserializer(_verifyDeserType(newDelegatee),\n-                _namesToWrap);\n-    }\n-    \n-    /*\n-    /**********************************************************************\n-    /* Overridden methods\n-    /**********************************************************************\n-     */\n \n     @Override\n-    protected JsonDeserializer<?> _createContextual(DeserializationContext ctxt,\n-            BeanProperty property, JsonDeserializer<?> newDelegatee0)\n+    protected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee0) {\n+        // default not enough, as we may need to create a new wrapping deserializer\n+        // even if delegatee does not change\n+        throw new IllegalStateException(\"Internal error: should never get called\");\n+    }\n+\n+    @Override\n+    public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n+            BeanProperty property)\n+        throws JsonMappingException\n     {\n-        BeanDeserializerBase newDelegatee = _verifyDeserType(newDelegatee0);\n+        JsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property);\n+        BeanDeserializerBase newDelegatee = _verifyDeserType(del);\n         \n         // Let's go through the properties now...\n         Iterator<SettableBeanProperty> it = newDelegatee.properties();\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer.java\n     /* Abstract method implementations\n     /**********************************************************************\n      */\n-    \n+\n     @Override\n-    protected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee) {\n-        return new XmlTextDeserializer(_verifyDeserType(newDelegatee), _xmlTextPropertyIndex);\n+    protected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee0) {\n+        // default not enough, as we need to create a new wrapping deserializer\n+        // even if delegatee does not change\n+        throw new IllegalStateException(\"Internal error: should never get called\");\n     }\n \n-    /*\n-    /**********************************************************************\n-    /* Overridden methods\n-    /**********************************************************************\n-     */\n-\n-    /**\n-     * We need to override this method; otherwise underlying changes to XML text\n-     * property will go unnoticed. Otherwise default handling should work fine.\n-     */\n     @Override\n-    protected JsonDeserializer<?> _createContextual(DeserializationContext ctxt,\n-            BeanProperty property, JsonDeserializer<?> newDelegatee0)\n+    public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n+            BeanProperty property)\n+        throws JsonMappingException\n     {\n-        BeanDeserializerBase newDelegatee = _verifyDeserType(newDelegatee0);\n-        return new XmlTextDeserializer(newDelegatee, _xmlTextPropertyIndex);\n+        return new XmlTextDeserializer(_verifyDeserType(_delegatee), _xmlTextPropertyIndex);\n     }\n \n     /*", "timestamp": 1378838979, "metainfo": ""}