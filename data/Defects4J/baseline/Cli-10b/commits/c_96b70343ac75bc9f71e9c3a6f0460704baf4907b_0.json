{"sha": "96b70343ac75bc9f71e9c3a6f0460704baf4907b", "log": "- add tests for UrlValidator - fix FileValidator hidden file test  ", "commit": "\n--- a/src/test/org/apache/commons/cli2/validation/FileValidatorTest.java\n+++ b/src/test/org/apache/commons/cli2/validation/FileValidatorTest.java\n         // make file hidden on Windows\n         attribute(\"H\");\n \n-        final Object[] array = new Object[] { \".hidden\", \"src\" };\n+        final Object[] array = new Object[] { \"src/test/data/.hidden.txt\", \"src\" };\n         final List list = Arrays.asList(array);\n         final FileValidator validator = FileValidator.getExistingFileInstance();\n         validator.setHidden(true);\n--- a/src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java\n+++ b/src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java\n         assertEquals(new URL(\"file:///etc\"), i.next());\n         assertFalse(i.hasNext());\n     }\n-    \n-    public void testBadProtocol() {\n-        final Object[] array = new Object[] { \"http://www.apache.org/\", \"file:///etc\"};\n+\n+    public void testMalformedURL() throws InvalidArgumentException, MalformedURLException {\n+        final Object[] array = new Object[] { \"www.apache.org\"};\n         final List list = Arrays.asList(array);\n-        final UrlValidator validator = new UrlValidator();\n-        validator.setProtocol(\"http\");\n+        final Validator validator = new UrlValidator();\n \n-        try{\n+        try {\n             validator.validate(list);\n-            fail(\"Expected InvalidArgumentException\");\n         }\n         catch(InvalidArgumentException e){\n-            assertEquals(\"file:///etc\",e.getMessage());\n+            assertEquals(\"Cannot understand url: www.apache.org\",e.getMessage());\n+        }\n+        \n+    }\n+\n+    public void testBadProtocol() {\n+        {\n+            final Object[] array = new Object[] { \"http://www.apache.org/\", \"file:///etc\"};\n+            final List list = Arrays.asList(array);\n+            final UrlValidator validator = new UrlValidator();\n+            validator.setProtocol(\"http\");\n+    \n+            assertEquals(\"incorrect protocol\", \"http\", validator.getProtocol());\n+            try{\n+                validator.validate(list);\n+                fail(\"Expected InvalidArgumentException\");\n+            }\n+            catch(InvalidArgumentException e){\n+                assertEquals(\"file:///etc\",e.getMessage());\n+            }\n+        }\n+        {\n+            final Object[] array = new Object[] { \"http://www.apache.org/\", \"file:///etc\"};\n+            final List list = Arrays.asList(array);\n+            final UrlValidator validator = new UrlValidator(\"http\");\n+    \n+            try{\n+                validator.validate(list);\n+                fail(\"Expected InvalidArgumentException\");\n+            }\n+            catch(InvalidArgumentException e){\n+                assertEquals(\"file:///etc\",e.getMessage());\n+            }\n         }\n     }\n }", "timestamp": 1125957100, "metainfo": ""}