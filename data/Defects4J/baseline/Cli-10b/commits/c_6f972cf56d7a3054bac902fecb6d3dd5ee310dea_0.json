{"sha": "6f972cf56d7a3054bac902fecb6d3dd5ee310dea", "log": "Applying Brian Egge's enhancement from CLI-131  ", "commit": "\n--- a/src/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli/HelpFormatter.java\n         // temp variable\n         Option option;\n \n+        List optList = new ArrayList(options.getOptions());\n+        Collections.sort(optList, new OptionComparator());\n         // iterate over the options\n-        for (Iterator i = options.getOptions().iterator(); i.hasNext();)\n+        for (Iterator i = optList.iterator(); i.hasNext();)\n         {\n             // get the next Option\n             option = (Option) i.next();\n             buff.append(\"[\");\n         }\n \n+        List optList = new ArrayList(group.getOptions());\n+        Collections.sort(optList, new OptionComparator());\n         // for each option in the OptionGroup\n-        for (Iterator i = group.getOptions().iterator(); i.hasNext();)\n+        for (Iterator i = optList.iterator(); i.hasNext();)\n         {\n             // whether the option is required or not is handled at group level\n             appendOption(buff, (Option) i.next(), true);\n--- a/src/test/org/apache/commons/cli/BugsTest.java\n+++ b/src/test/org/apache/commons/cli/BugsTest.java\n         StringWriter out = new StringWriter();\n         formatter.printHelp(new PrintWriter(out),80,\"commandline\",\"header\",mOptions,2,2,\"footer\",true);\n         assertEquals(\n-                \"usage: commandline [--config <arg>] [-r <arg>] [-a <arg>] [-h] [-t] [-n] [-l\"+EOL+\n-                \"       <arg>] [-s <arg>] [-v]\"+EOL+\n+                \"usage: commandline [-a <arg>] [--config <arg>] [-h] [-l <arg>] [-n] [-r <arg>]\" + EOL +\n+                \"       [-s <arg>] [-t] [-v]\" + EOL +\n                 \"header\"+EOL+\n                 \"  -a,--age <arg>      Age (in days) of cache item before being recomputed\"+EOL+\n                 \"     --config <arg>   Use the specified configuration file\"+EOL+\n         StringWriter out = new StringWriter();\n         formatter.printHelp(new PrintWriter(out),80, \"foobar\", \"\", options, 2, 2, \"\", true);\n         assertEquals(\n-                \"usage: foobar [-a] [-c] [--bbb]\"+SEP+\n+                \"usage: foobar [-a] [--bbb] [-c]\"+SEP+\n                 \"  -a,--aaa  aaaaaaa\"+SEP+\n                 \"     --bbb  bbbbbbb\"+SEP+\n                 \"  -c        ccccccc\"+SEP\n--- a/src/test/org/apache/commons/cli/TestHelpFormatter.java\n+++ b/src/test/org/apache/commons/cli/TestHelpFormatter.java\n  *\n  * @author Slawek Zachcial\n  * @author John Keyes ( john at integralsource.com )\n+ * @author brianegge\n  **/\n public class TestHelpFormatter extends TestCase\n {\n+\n+   private static final String EOL = System.getProperty(\"line.separator\");\n+\n    public static void main( String[] args )\n    {\n       String[] testName = { TestHelpFormatter.class.getName() };\n        assertEquals(\"simple auto usage\", expected, out.toString().trim());\n        out.reset();\n    }\n+\n+    // This test ensures the options are properly sorted\n+    // See https://issues.apache.org/jira/browse/CLI-131\n+    public void testPrintUsage() {\n+        Option optionA = new Option(\"a\", \"first\");\n+        Option optionB = new Option(\"b\", \"second\");\n+        Option optionC = new Option(\"c\", \"third\");\n+        Options opts = new Options();\n+        opts.addOption(optionA);\n+        opts.addOption(optionB);\n+        opts.addOption(optionC);\n+        HelpFormatter helpFormatter = new HelpFormatter();\n+        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\n+        PrintWriter printWriter = new PrintWriter(bytesOut);\n+        helpFormatter.printUsage(printWriter, 80, \"app\", opts);\n+        printWriter.close();\n+        assertEquals(\"usage: app [-a] [-b] [-c]\" + EOL, bytesOut.toString());\n+    }\n+\n }", "timestamp": 1181116879, "metainfo": ""}