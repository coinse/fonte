{"sha": "cf25dd1b71923b13af6a72328916161d4a4aaac2", "log": "updated javadoc, added example to class doc  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/validation/EnumValidator.java\n+++ b/src/java/org/apache/commons/cli2/validation/EnumValidator.java\n-/**\n+/*\n  * Copyright 2003-2004 The Apache Software Foundation\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n \n /**\n  * A Validator for a list of known string values.\n+ *\n+ * The following example shows how to limit the valid values\n+ * for the color argument to 'red', 'green', or 'blue'.\n+ *\n+ * <pre>\n+ * Set values = new HashSet();\n+ * values.add(\"red\");\n+ * values.add(\"green\");\n+ * values.add(\"blue\");\n+ * ...\n+ * ArgumentBuilder builder = new ArgumentBuilder();\n+ * Argument color = \n+ *     builder.withName(\"color\");\n+ *            .withValidator(new EnumValidator(values));\n+ * </pre>\n  * \n  * @author John Keyes\n  */\n     private Set validValues;\n \n     /**\n-     * Creates a new StringValidator for the specified values.\n+     * Creates a new EnumValidator for the specified values.\n      * \n-     * @param values\n-     *            the list of permitted values\n+     * @param values The list of permitted values\n      */\n     public EnumValidator(final Set values) {\n         this.validValues = values;\n     }\n \n     /**\n-     * Returns the permitted values in a String\n+     * Returns the permitted values in a comma separated String\n      * \n      * @return String formatted list of values\n      */\n     }\n \n     /**\n-     * @return Returns the validValues.\n+     * @return Returns the Set of valid argument values.\n      */\n     public Set getValidValues() {\n         return validValues;\n     }\n \n     /**\n-     * @param validValues The validValues to set.\n+     * @param validValues The Set of valid argument values.\n      */\n     public void setValidValues(Set validValues) {\n         this.validValues = validValues;", "timestamp": 1125615325, "metainfo": ""}