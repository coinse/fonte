{"sha": "83b7cebfb619359348f9f56658aa94bd999d159f", "log": "bug no. 11680 resolved   ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/java/org/apache/commons/cli/CommandLine.java\n     public String[] getOptionValues( String opt ) {\n         List values = new java.util.ArrayList();\n \n-        List opts = (List)options.get( opt );\n-        Iterator iter = opts.iterator();\n-\n-        while( iter.hasNext() ) {\n-            Option optt = (Option)iter.next();\n-            values.addAll( optt.getValuesList() );\n+        if( options.containsKey( opt ) ) {\n+            List opts = (List)options.get( opt );\n+            Iterator iter = opts.iterator();\n+\n+            while( iter.hasNext() ) {\n+                Option optt = (Option)iter.next();\n+                values.addAll( optt.getValuesList() );\n+            }\n         }\n         return (values.size() == 0) ? null : (String[])values.toArray(new String[]{});\n     }\n--- /dev/null\n+++ b/src/test/org/apache/commons/cli/BugsTest.java\n+/*\n+ * Copyright (C) The Apache Software Foundation. All rights reserved.\n+ *\n+ * This software is published under the terms of the Apache Software License\n+ * version 1.1, a copy of which has been included with this distribution in\n+ * the LICENSE file.\n+ * \n+ * $Id: BugsTest.java,v 1.1 2002/08/15 20:31:23 jkeyes Exp $\n+ */\n+\n+package org.apache.commons.cli;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+public class BugsTest extends TestCase\n+{\n+    /** CommandLine instance */\n+    private CommandLine _cmdline = null;\n+    private Option _option = null;\n+\n+    public static Test suite() { \n+        return new TestSuite( BugsTest.class );\n+    }\n+\n+    public BugsTest( String name )\n+    {\n+        super( name );\n+    }\n+\n+    public void setUp()\n+    {\n+    }\n+\n+    public void tearDown()\n+    {\n+    }\n+\n+    public void test11680()\n+    {\n+        Options options = new Options();\n+        options.addOption(\"f\", true, \"foobar\");\n+\toptions.addOption(\"m\", true, \"missing\");\n+        String[] args = new String[] { \"-f\" , \"foo\" };\n+\n+        CommandLineParser parser = CommandLineParserFactory.newParser();\n+\n+        try {\n+            CommandLine cmd = parser.parse( options, args );\n+\n+            try {\n+                cmd.getOptionValue( \"f\", \"default f\");\n+                cmd.getOptionValue( \"m\", \"default m\");\n+            }\n+            catch( NullPointerException exp ) {\n+                fail( \"NullPointer caught: \" + exp.getMessage() );\n+            }\n+        }\n+        catch( ParseException exp ) {\n+            fail( \"Unexpected Exception: \" + exp.getMessage() );\n+        }\n+\n+\n+    }\n+}", "timestamp": 1029443483, "metainfo": ""}