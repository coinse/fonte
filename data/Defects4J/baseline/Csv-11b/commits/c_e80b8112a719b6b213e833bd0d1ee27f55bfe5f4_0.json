{"sha": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4", "log": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n      * @param comment the comment to output\n      */\n     public void printComment(String comment) throws IOException {\n-        if (this.format.isCommentingDisabled()) {\n+        if (format.isCommentingDisabled()) {\n             return;\n         }\n         if (!newLine) {\n     }\n \n \n-    private void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n-        if (!checkForEscape) {\n-            printSep();\n-            out.write(value, offset, len);\n-            return;\n-        }\n-        \n+    private void print(char[] value, int offset, int len) throws IOException {        \n         if (format.isEncapsulating()) {\n             printAndEncapsulate(value, offset, len);\n         } else if (format.isEscaping()) {\n         if (newLine) {\n             newLine = false;\n         } else {\n-            out.write(this.format.getDelimiter());\n+            out.write(format.getDelimiter());\n         }\n     }\n \n \n         printSep();\n \n-        char delim = this.format.getDelimiter();\n-        char escape = this.format.getEscape();\n+        char delim = format.getDelimiter();\n+        char escape = format.getEscape();\n \n         while (pos < end) {\n             char c = value[pos];\n \n         printSep();\n \n-        char delim = this.format.getDelimiter();\n-        char encapsulator = this.format.getEncapsulator();\n+        char delim = format.getDelimiter();\n+        char encapsulator = format.getEncapsulator();\n \n         if (len <= 0) {\n             // always quote an empty token that is the first\n      * @param value value to be outputted.\n      */\n     public void print(String value, boolean checkForEscape) throws IOException {\n+        if (value == null) {\n+            // null values are considered empty\n+            value = \"\";\n+        }\n+        \n         if (!checkForEscape) {\n             // write directly from string\n             printSep();\n         }\n \n         value.getChars(0, value.length(), buf, 0);\n-        print(buf, 0, value.length(), checkForEscape);\n+        print(buf, 0, value.length());\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n         assertEquals(\"\\\"a,b\\\",b\" + lineSeparator, sw.toString());\n     }\n \n+    public void testPrintNullValues() throws IOException {\n+        StringWriter sw = new StringWriter();\n+        CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT);\n+        printer.println(\"a\", null, \"b\");\n+        assertEquals(\"a,,b\" + lineSeparator, sw.toString());\n+    }\n+\n     public void testDisabledComment() throws IOException {\n         StringWriter sw = new StringWriter();\n         CSVPrinter printer = new CSVPrinter(sw, CSVFormat.DEFAULT);", "timestamp": 1330992591, "metainfo": ""}