{"sha": "e235b2a63cf9654eedc2a33dbe33e16989f0b91d", "log": "Refactor '\\r' and '\\n' into constants.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n+++ b/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n  */\n class ExtendedBufferedReader extends BufferedReader {\n \n+    private static final char CR = '\\r';\n+\n+    private static final char LF = '\\n';\n+\n     /** The end of stream symbol */\n     static final int END_OF_STREAM = -1;\n \n     @Override\n     public int read() throws IOException {\n         int current = super.read();\n-        if (current == '\\r' || (current == '\\n' && lastChar != '\\r')) {\n+        if (current == CR || (current == LF && lastChar != CR)) {\n             lineCounter++;\n         }\n         lastChar = current;\n \n             for (int i = offset; i < offset + len; i++) {\n                 char ch = buf[i];\n-                if (ch == '\\n') {\n-                    if ('\\r' != (i > 0 ? buf[i-1]: lastChar)) {\n+                if (ch == LF) {\n+                    if (CR != (i > 0 ? buf[i-1]: lastChar)) {\n                         lineCounter++;                        \n                     }\n-                } else if (ch == '\\r') {\n+                } else if (ch == CR) {\n                     lineCounter++;\n                 }\n             }\n         String line = super.readLine();\n \n         if (line != null) {\n-            lastChar = '\\n'; // needed for detecting start of line\n+            lastChar = LF; // needed for detecting start of line\n             lineCounter++;\n         } else {\n             lastChar = END_OF_STREAM;", "timestamp": 1347391045, "metainfo": ""}