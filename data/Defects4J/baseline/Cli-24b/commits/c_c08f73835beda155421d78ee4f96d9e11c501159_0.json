{"sha": "c08f73835beda155421d78ee4f96d9e11c501159", "log": "changed my email add, removed CommandLineParserFactory   ", "commit": "\n--- a/src/java/org/apache/commons/cli/AlreadySelectedException.java\n+++ b/src/java/org/apache/commons/cli/AlreadySelectedException.java\n  * <p>Thrown when more than one option in an option group\n  * has been provided.</p>\n  *\n- * @author John Keyes ( jbjk at mac.com )\n+ * @author John Keyes ( john at integralsource.com )\n  * @see ParseException\n  */\n public class AlreadySelectedException extends ParseException {\n--- a/src/java/org/apache/commons/cli/BasicParser.java\n+++ b/src/java/org/apache/commons/cli/BasicParser.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/BasicParser.java,v 1.2 2002/08/26 20:15:02 jkeyes Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/26 20:15:02 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/BasicParser.java,v 1.3 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n  * The class BasicParser provides a very simple implementation of\n  * the {@link Parser#flatten(Options,String[],boolean) flatten} method.\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  * @see Parser\n  */\n public class BasicParser extends Parser {\n--- a/src/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/java/org/apache/commons/cli/CommandLine.java\n  */\n package org.apache.commons.cli;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Iterator;\n  *\n  * @author bob mcwhirter (bob @ werken.com)\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  */\n public class CommandLine {\n     \n \n     /** Map of unique options for ease to get complete list of options */\n     private Map hashcodeMap = new HashMap();\n+    private List optionList = new ArrayList();\n+    private List keyList    = new ArrayList();\n \n     /** the processed options */\n     private Option[] optionsArray;\n      *\n      * @param opt the processed option\n      */\n-    void setOpt( Option opt ) {\n+    void addOption( Option opt ) {\n         hashcodeMap.put( new Integer( opt.hashCode() ), opt );\n \n+        optionList.add( opt );\n         String key = opt.getOpt();\n         if( \" \".equals(key) ) {\n             key = opt.getLongOpt();\n         }\n+        keyList.add( key );\n+\n         if( options.get( key ) != null ) {\n             ((java.util.List)options.get( key )).add( opt );\n         }\n         return (Option[]) processed.toArray( optionsArray );\n     }\n \n+    public Option[] getOptions2() {\n+        System.out.println( \"--2--\" );\n+        Collection processed = optionList;\n+        // reinitialise array\n+        optionsArray = new Option[ processed.size() ];\n+\n+        // return the array\n+        return (Option[]) processed.toArray( optionsArray );\n+    }\n+\n }\n--- a/src/java/org/apache/commons/cli/CommandLineParser.java\n+++ b/src/java/org/apache/commons/cli/CommandLineParser.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/CommandLineParser.java,v 1.3 2002/08/26 20:15:02 jkeyes Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/26 20:15:02 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/CommandLineParser.java,v 1.4 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n  * can parse a String array according to the {@link Options} specified\n  * and return a {@link CommandLine}.\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  */\n public interface CommandLineParser {\n     \n--- a/src/java/org/apache/commons/cli/GnuParser.java\n+++ b/src/java/org/apache/commons/cli/GnuParser.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/GnuParser.java,v 1.9 2002/08/31 17:53:11 jkeyes Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/08/31 17:53:11 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/GnuParser.java,v 1.10 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n  * The class GnuParser provides an implementation of the \n  * {@link Parser#flatten(Options,String[],boolean) flatten} method.\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.9 $\n+ * @version $Revision: 1.10 $\n  */\n public class GnuParser extends Parser {\n \n--- a/src/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli/HelpFormatter.java\n  * A formatter of help messages for the current command line options\n  *\n  * @author Slawek Zachcial\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  **/\n public class HelpFormatter\n {\n--- a/src/java/org/apache/commons/cli/MissingArgumentException.java\n+++ b/src/java/org/apache/commons/cli/MissingArgumentException.java\n  * <p>Thrown when an option requiring an argument\n  * is not provided with an argument.</p>\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  * @see ParseException\n  */\n public class MissingArgumentException extends ParseException {\n--- a/src/java/org/apache/commons/cli/MissingOptionException.java\n+++ b/src/java/org/apache/commons/cli/MissingOptionException.java\n /** \n  * <p>Thrown when a required option has not been provided.</p>\n  *\n- * @author John Keyes ( jbjk at mac.com )\n+ * @author John Keyes ( john at integralsource.com )\n  * @see ParseException\n  */\n public class MissingOptionException extends ParseException {\n--- a/src/java/org/apache/commons/cli/OptionBuilder.java\n+++ b/src/java/org/apache/commons/cli/OptionBuilder.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.9 2002/09/10 21:35:57 jkeyes Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/09/10 21:35:57 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.10 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n  * <p>Details on the Builder pattern can be found at \n  * <a href=\"http://\">http://</a>.</p>\n  *\n- * @author John Keyes ( jbjk at mac.com )\n+ * @author John Keyes ( john at integralsource.com )\n  * @since 1.0\n  */\n public class OptionBuilder {\n--- a/src/java/org/apache/commons/cli/OptionGroup.java\n+++ b/src/java/org/apache/commons/cli/OptionGroup.java\n \n /**\n  * A group of mutually exclusive options.\n- * @author John Keyes ( jbjk at mac.com )\n+ * @author John Keyes ( john at integralsource.com )\n  * @version $Revision: 1.2 $\n  */\n public class OptionGroup {\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.4 2002/09/01 22:54:56 jkeyes Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/09/01 22:54:56 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.5 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n /**\n  * <p><code>Parser</code> creates {@link CommandLine}s.</p>\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.4 $\n+ * @version $Revision: 1.5 $\n  */\n public abstract class Parser implements CommandLineParser {\n \n         }\n \n         // set the option on the command line\n-        cmd.setOpt( opt );\n+        cmd.addOption( opt );\n     }\n }\n--- a/src/java/org/apache/commons/cli/PosixParser.java\n+++ b/src/java/org/apache/commons/cli/PosixParser.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/PosixParser.java,v 1.10 2002/09/09 19:35:24 jkeyes Exp $\n- * $Revision: 1.10 $\n- * $Date: 2002/09/09 19:35:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/PosixParser.java,v 1.11 2002/09/19 22:59:43 jkeyes Exp $\n+ * $Revision: 1.11 $\n+ * $Date: 2002/09/19 22:59:43 $\n  *\n  * ====================================================================\n  *\n  * The class PosixParser provides an implementation of the \n  * {@link Parser#flatten(Options,String[],boolean) flatten} method.\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.10 $\n+ * @version $Revision: 1.11 $\n  */\n public class PosixParser extends Parser {\n \n--- a/src/test/org/apache/commons/cli/ApplicationTest.java\n+++ b/src/test/org/apache/commons/cli/ApplicationTest.java\n  * </ul>\n  * </p>\n  *\n- * @author John Keyes (jbjk at mac.com)\n+ * @author John Keyes (john at integralsource.com)\n  */\n public class ApplicationTest extends TestCase {\n \n     {\n         super(name);\n     }\n+    \n+    /**\n+     *\t\n+     */\n+    public void testLs() {\n+        // create the command line parser\n+        CommandLineParser parser = new PosixParser();\n+        Options options = new Options();\n+        options.addOption( \"a\", \"all\", false, \"do not hide entries starting with .\" );\n+        options.addOption( \"A\", \"almost-all\", false, \"do not list implied . and ..\" );\n+        options.addOption( \"b\", \"escape\", false, \"print octal escapes for nongraphic characters\" );\n+        options.addOption( OptionBuilder.withLongOpt( \"block-size\" )\n+                                        .withDescription( \"use SIZE-byte blocks\" )\n+                                        .withValueSeparator( '=' )\n+                                        .hasArg()\n+                                        .create() );\n+        options.addOption( \"B\", \"ignore-backups\", false, \"do not list implied entried ending with ~\");\n+        options.addOption( \"c\", false, \"with -lt: sort by, and show, ctime (time of last modification of file status information) with -l:show ctime and sort by name otherwise: sort by ctime\" );\n+        options.addOption( \"C\", false, \"list entries by columns\" );\n+\n+        String[] args = new String[]{ \"--block-size=10\" };\n+\n+        try {\n+            CommandLine line = parser.parse( options, args );\n+            assertTrue( line.hasOption( \"block-size\" ) );\n+            assertEquals( line.getOptionValue( \"block-size\" ), \"10\" );\n+        }\n+        catch( ParseException exp ) {\n+            fail( \"Unexpected exception:\" + exp.getMessage() );\n+        }\n+    }\n \n     /**\n      * Ant test\n      */\n     public void testAnt() {\n         // use the GNU parser\n-        CommandLineParser parser = CommandLineParserFactory.newParser( \"org.apache.commons.cli.GnuParser\" );\n+        CommandLineParser parser = new GnuParser( );\n         Options options = new Options();\n         options.addOption( \"help\", false, \"print this message\" );\n         options.addOption( \"projecthelp\", false, \"print project help information\" );\n--- a/src/test/org/apache/commons/cli/BugsTest.java\n+++ b/src/test/org/apache/commons/cli/BugsTest.java\n  * version 1.1, a copy of which has been included with this distribution in\n  * the LICENSE file.\n  * \n- * $Id: BugsTest.java,v 1.6 2002/09/01 22:54:56 jkeyes Exp $\n+ * $Id: BugsTest.java,v 1.7 2002/09/19 22:59:44 jkeyes Exp $\n  */\n \n package org.apache.commons.cli;\n                            .create() );\n         String[] args = new String[] { \"--verbose\" };\n \n-        CommandLineParser parser = CommandLineParserFactory.newParser();\n+        CommandLineParser parser = new PosixParser();\n \n         try {\n             CommandLine cmd = parser.parse( options, args );\n         String[] args = new String[] { \"-DJAVA_HOME=/opt/java\" ,\n         \"-pfile1:file2:file3\" };\n \n-        CommandLineParser parser = CommandLineParserFactory.newParser();\n+        CommandLineParser parser = new PosixParser();\n \n         try {\n             CommandLine cmd = parser.parse( options, args );\n \toptions.addOption(\"m\", true, \"missing\");\n         String[] args = new String[] { \"-f\" , \"foo\" };\n \n-        CommandLineParser parser = CommandLineParserFactory.newParser();\n+        CommandLineParser parser = new PosixParser();\n \n         try {\n             CommandLine cmd = parser.parse( options, args );\n                            .create( 'b' ) );\n         String[] args = new String[] { \"-a\", \"-bvalue\" };\n \n-        CommandLineParser parser = CommandLineParserFactory.newParser();\n+        CommandLineParser parser = new PosixParser();\n \n         try {\n             CommandLine cmd = parser.parse( options, args );\n                            .create( 'b' ) );\n         args = new String[] { \"-a\", \"-b\", \"value\" };\n \n-        parser = CommandLineParserFactory.newParser( \"org.apache.commons.cli.GnuParser\" );\n+        parser = new GnuParser();\n \n         try {\n             CommandLine cmd = parser.parse( options, args );\n--- a/src/test/org/apache/commons/cli/GnuParseTest.java\n+++ b/src/test/org/apache/commons/cli/GnuParseTest.java\n  * version 1.1, a copy of which has been included with this distribution in\n  * the LICENSE file.\n  * \n- * $Id: GnuParseTest.java,v 1.2 2002/07/25 21:40:08 jkeyes Exp $\n+ * $Id: GnuParseTest.java,v 1.3 2002/09/19 22:59:44 jkeyes Exp $\n  */\n \n package org.apache.commons.cli;\n                        false,\n                        \"turn [c] on or off\");\n \n-        _parser = CommandLineParserFactory.newParser( \"org.apache.commons.cli.GnuParser\" );\n+        _parser = new GnuParser( );\n     }\n \n     public void tearDown()\n--- a/src/test/org/apache/commons/cli/OptionGroupTest.java\n+++ b/src/test/org/apache/commons/cli/OptionGroupTest.java\n {\n \n     private Options _options = null;\n-    private CommandLineParser parser = CommandLineParserFactory.newParser();\n+    private CommandLineParser parser = new PosixParser();\n \n \n     public static Test suite() \n--- a/src/test/org/apache/commons/cli/ParseRequiredTest.java\n+++ b/src/test/org/apache/commons/cli/ParseRequiredTest.java\n {\n \n     private Options _options = null;\n-    private CommandLineParser parser = CommandLineParserFactory.newParser();\n+    private CommandLineParser parser = new PosixParser();\n \n     public static Test suite() { \n         return new TestSuite(ParseRequiredTest.class); \n--- a/src/test/org/apache/commons/cli/ParseTest.java\n+++ b/src/test/org/apache/commons/cli/ParseTest.java\n                        false,\n                        \"turn [c] on or off\");\n \n-        _parser = CommandLineParserFactory.newParser();\n+        _parser = new PosixParser();\n     }\n \n     public void tearDown()\n--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n            Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/\");\n            String[] args = new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\n       \n-           CommandLineParser parser = CommandLineParserFactory.newParser();\n+           CommandLineParser parser = new PosixParser();\n            CommandLine line = parser.parse(options,args);\n \n            // tests the char methods of CommandLine that delegate to\n--- a/src/test/org/apache/commons/cli/TestHelpFormatter.java\n+++ b/src/test/org/apache/commons/cli/TestHelpFormatter.java\n  * Test case for the HelpFormatter class \n  *\n  * @author Slawek Zachcial\n- * @author John Keyes ( jbjk at mac.com )\n+ * @author John Keyes ( john at integralsource.com )\n  **/\n public class TestHelpFormatter extends TestCase\n {\n--- a/src/test/org/apache/commons/cli/ValueTest.java\n+++ b/src/test/org/apache/commons/cli/ValueTest.java\n \n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             _cl = parser.parse(opts,args);\n         }\n         catch (ParseException e)\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"e\") );\n             assertNull( cmd.getOptionValue(\"e\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"e\") );\n             assertEquals( \"everything\", cmd.getOptionValue(\"e\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"fish\") );\n             assertNull( cmd.getOptionValue(\"fish\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"fish\") );\n             assertEquals( \"face\", cmd.getOptionValue(\"fish\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"j\") );\n             assertEquals( \"ink\", cmd.getOptionValue(\"j\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"gravy\") );\n             assertEquals( \"gold\", cmd.getOptionValue(\"gravy\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"i\") );\n             assertEquals( \"ink\", cmd.getOptionValue(\"i\") );\n         };\n         try\n         {\n-            CommandLineParser parser = CommandLineParserFactory.newParser();\n+            CommandLineParser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"hide\") );\n             assertEquals( \"house\", cmd.getOptionValue(\"hide\") );\n--- a/src/test/org/apache/commons/cli/ValuesTest.java\n+++ b/src/test/org/apache/commons/cli/ValuesTest.java\n                                        \"-kkey2=value2\",\n                                        \"-mkey=value\"};\n \n-        CommandLineParser parser = CommandLineParserFactory.newParser();\n+        CommandLineParser parser = new PosixParser();\n \n         try\n         {", "timestamp": 1032476384, "metainfo": ""}