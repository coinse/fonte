{"sha": "33abc034037e3ef5d85d1b03010122617c386827", "log": "Reformatting of the exceptions  ", "commit": "\n--- a/src/java/org/apache/commons/cli/AlreadySelectedException.java\n+++ b/src/java/org/apache/commons/cli/AlreadySelectedException.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n \n-/** \n- * <p>Thrown when more than one option in an option group\n- * has been provided.</p>\n+/**\n+ * Thrown when more than one option in an option group\n+ * has been provided.\n  *\n  * @author John Keyes ( john at integralsource.com )\n  * @see ParseException\n  */\n-public class AlreadySelectedException\n-    extends ParseException {\n-\n-    /** \n-     * <p>Construct a new <code>AlreadySelectedException</code> \n-     * with the specified detail message.</p>\n+public class AlreadySelectedException extends ParseException\n+{\n+    /**\n+     * Construct a new <code>AlreadySelectedException</code>\n+     * with the specified detail message.\n      *\n      * @param message the detail message\n      */\n     {\n         super(message);\n     }\n-}\n+}\n--- a/src/java/org/apache/commons/cli/MissingArgumentException.java\n+++ b/src/java/org/apache/commons/cli/MissingArgumentException.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n \n-/** \n- * <p>Thrown when an option requiring an argument\n- * is not provided with an argument.</p>\n+/**\n+ * Thrown when an option requiring an argument\n+ * is not provided with an argument.\n  *\n  * @author John Keyes (john at integralsource.com)\n  * @see ParseException\n  */\n-public class MissingArgumentException\n-    extends ParseException {\n-\n-    /** \n-     * <p>Construct a new <code>MissingArgumentException</code> \n-     * with the specified detail message.</p>\n+public class MissingArgumentException extends ParseException\n+{\n+    /**\n+     * Construct a new <code>MissingArgumentException</code>\n+     * with the specified detail message.\n      *\n      * @param message the detail message\n      */\n     {\n         super(message);\n     }\n-}\n+}\n--- a/src/java/org/apache/commons/cli/MissingOptionException.java\n+++ b/src/java/org/apache/commons/cli/MissingOptionException.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n \n-/** \n- * <p>Thrown when a required option has not been provided.</p>\n+/**\n+ * Thrown when a required option has not been provided.\n  *\n  * @author John Keyes ( john at integralsource.com )\n  * @see ParseException\n  */\n-public class MissingOptionException\n-    extends ParseException {\n-\n-    /** \n-     * <p>Construct a new <code>MissingSelectedException</code> \n-     * with the specified detail message.</p>\n+public class MissingOptionException extends ParseException\n+{\n+    /**\n+     * Construct a new <code>MissingSelectedException</code>\n+     * with the specified detail message.\n      *\n      * @param message the detail message\n      */\n     {\n         super(message);\n     }\n-}\n+}\n--- a/src/java/org/apache/commons/cli/ParseException.java\n+++ b/src/java/org/apache/commons/cli/ParseException.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n \n-/** \n- * <p>Base for Exceptions thrown during parsing of a command-line.</p>\n+/**\n+ * Base for Exceptions thrown during parsing of a command-line.\n  *\n  * @author bob mcwhirter (bob @ werken.com)\n  * @version $Revision$\n  */\n-public class ParseException extends Exception {\n-\n-    /** \n-     * <p>Construct a new <code>ParseException</code> \n-     * with the specified detail message.</p>\n+public class ParseException extends Exception\n+{\n+    /**\n+     * Construct a new <code>ParseException</code>\n+     * with the specified detail message.\n      *\n      * @param message the detail message\n      */\n     {\n         super(message);\n     }\n-}\n+}\n--- a/src/java/org/apache/commons/cli/UnrecognizedOptionException.java\n+++ b/src/java/org/apache/commons/cli/UnrecognizedOptionException.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n \n-/** \n- * <p>Exception thrown during parsing signalling an unrecognized\n- * option was seen.<p>\n+/**\n+ * Exception thrown during parsing signalling an unrecognized\n+ * option was seen.\n  *\n  * @author bob mcwhiter (bob @ werken.com)\n  * @version $Revision$\n  */\n-public class UnrecognizedOptionException\n-    extends ParseException {\n-\n-    /** \n-     * <p>Construct a new <code>UnrecognizedArgumentException</code> \n-     * with the specified detail message.</p>\n+public class UnrecognizedOptionException extends ParseException\n+{\n+    /**\n+     * Construct a new <code>UnrecognizedArgumentException</code>\n+     * with the specified detail message.\n      *\n      * @param message the detail message\n      */\n     {\n         super(message);\n     }\n-}\n+}", "timestamp": 1212142786, "metainfo": ""}