{"sha": "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a", "log": "The previous commit removed an incorrect method. This puts it back and removes the right one, along with a fix for a unit test that fails to compile as a result. See CLI-134  ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLineParser.java\n+++ b/src/java/org/apache/commons/cli/CommandLineParser.java\n      * @throws ParseException if there are any problems encountered\n      * while parsing the command line tokens.\n      */\n+    /* To maintain binary compatibility, this is commented out. \n+       It is still in the abstract Parser class, so most users will \n+       still reap the benefit. \n     CommandLine parse(Options options, String[] arguments, \n                       Properties properties)\n                throws ParseException;\n+     */\n \n     /**\n      * Parse the arguments according to the specified options.\n      * @throws ParseException if there are any problems encountered\n      * while parsing the command line tokens.\n      */\n-    /* To maintain binary compatibility, this is commented out. \n-       It is still in the abstract Parser class, so most users will \n-       still reap the benefit. \n     CommandLine parse(Options options, String[] arguments, \n                       boolean stopAtNonOption)\n                throws ParseException;\n-     */\n \n     /**\n      * Parse the arguments according to the specified options and\n--- a/src/test/org/apache/commons/cli/ValueTest.java\n+++ b/src/test/org/apache/commons/cli/ValueTest.java\n \n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             _cl = parser.parse(opts,args);\n         }\n         catch (ParseException e)\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"e\") );\n             assertNull( cmd.getOptionValue(\"e\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"e\") );\n             assertEquals( \"everything\", cmd.getOptionValue(\"e\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"fish\") );\n             assertNull( cmd.getOptionValue(\"fish\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"fish\") );\n             assertEquals( \"face\", cmd.getOptionValue(\"fish\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"j\") );\n             assertEquals( \"ink\", cmd.getOptionValue(\"j\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"gravy\") );\n             assertEquals( \"gold\", cmd.getOptionValue(\"gravy\") );\n         };\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts,args);\n             assertTrue( cmd.hasOption(\"i\") );\n             assertEquals( \"ink\", cmd.getOptionValue(\"i\") );\n             \"--hide\", \"house\", \"hair\", \"head\"\n         };\n \n-        CommandLineParser parser = new PosixParser();\n+        Parser parser = new PosixParser();\n \n         try\n         {\n         Properties properties = new Properties();\n         properties.setProperty( \"hide\", \"seek\" );\n \n-        CommandLineParser parser = new PosixParser();\n+        Parser parser = new PosixParser();\n         \n         try\n         {\n         properties.setProperty( \"c\", \"yes\" );\n         properties.setProperty( \"e\", \"1\" );\n \n-        CommandLineParser parser = new PosixParser();\n+        Parser parser = new PosixParser();\n         \n         try\n         {\n         Properties properties = new Properties();\n         properties.setProperty( \"k\", \"one,two\" );\n \n-        CommandLineParser parser = new PosixParser();\n+        Parser parser = new PosixParser();\n         \n         String[] values = new String[] {\n             \"one\", \"two\"\n         properties.setProperty( \"j\", \"seek\" );\n         try\n         {\n-            CommandLineParser parser = new PosixParser();\n+            Parser parser = new PosixParser();\n             CommandLine cmd = parser.parse(opts, args, properties);\n             assertTrue( cmd.hasOption(\"j\") );\n             assertEquals( \"found\", cmd.getOptionValue(\"j\") );", "timestamp": 1183100098, "metainfo": ""}