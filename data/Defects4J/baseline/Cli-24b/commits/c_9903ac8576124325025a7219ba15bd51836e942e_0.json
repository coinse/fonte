{"sha": "9903ac8576124325025a7219ba15bd51836e942e", "log": "Parser now correctly allows option arguments to be the same as other options, less the initial '-'.  E.g. with options -a, the value 'a' is now allowed. Also corrected typo in test: testNoCyclesPresnet().  PR: 25044 Submitted by:\tDavid Morris   ", "commit": "\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n  *\n  * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.15 $\n+ * @version $Revision: 1.16 $\n  */\n public abstract class Parser implements CommandLineParser {\n \n         {\n             String str = (String) iter.next();\n \n-            // found an Option\n+            // found an Option, not an argument\n+            //if (options.hasOption(str) && str.startsWith(\"-\"))\n             if (options.hasOption(str))\n             {\n                 iter.previous();\n--- a/src/test/org/apache/commons/cli/ArgumentIsOptionTest.java\n+++ b/src/test/org/apache/commons/cli/ArgumentIsOptionTest.java\n         String[] args = new String[] {\n                 \"-p\",\n                 \"-attr\",\n-                \"value\"\n+                \"p\"\n             };\n \n         try {\n             assertTrue(\"Confirm -p is set\", cl.hasOption(\"p\"));\n             assertTrue(\"Confirm -attr is set\", cl.hasOption(\"attr\"));\n             assertTrue(\"Confirm arg of -attr\",\n-                cl.getOptionValue(\"attr\").equals(\"value\"));\n+                cl.getOptionValue(\"attr\").equals(\"p\"));\n             assertTrue(\"Confirm all arguments recognized\", cl.getArgs().length == 0);\n         }\n         catch (ParseException e) {\n     public void testOptionWithArgument() {\n         String[] args = new String[] {\n                 \"-attr\",\n-                \"value\"\n+                \"p\"\n             };\n \n         try {\n             assertFalse(\"Confirm -p is set\", cl.hasOption(\"p\"));\n             assertTrue(\"Confirm -attr is set\", cl.hasOption(\"attr\"));\n             assertTrue(\"Confirm arg of -attr\",\n-                cl.getOptionValue(\"attr\").equals(\"value\"));\n+                cl.getOptionValue(\"attr\").equals(\"p\"));\n             assertTrue(\"Confirm all arguments recognized\", cl.getArgs().length == 0);\n         }\n         catch (ParseException e) {\n--- a/src/test/org/apache/commons/cli2/CommandLineTestCase.java\n+++ b/src/test/org/apache/commons/cli2/CommandLineTestCase.java\n import java.util.Iterator;\n import java.util.List;\n \n+import org.apache.commons.cli2.builder.ArgumentBuilder;\n import org.apache.commons.cli2.builder.DefaultOptionBuilder;\n import org.apache.commons.cli2.builder.GroupBuilder;\n import org.apache.commons.cli2.commandline.Parser;\n         assertEquals(3, cl.getOptionCount(\"-?\"));\n         assertEquals(1, cl.getOptionCount(\"+display\"));\n     }\n+\n+    public final void testOptionAsArgument() throws OptionException {\n+    \tfinal Option bool = new DefaultOptionBuilder().withShortName(\"p\").create();\n+    \tfinal Argument argument = new ArgumentBuilder().create();\n+    \tfinal Option withArgument = new DefaultOptionBuilder().withShortName(\"attr\").withArgument(argument).create();\n+\n+    \tfinal Group group =\n+            new GroupBuilder()\n+                .withOption(bool)\n+                .withOption(withArgument)\n+                .create();\n+\n+        final Parser parser = new Parser();\n+        parser.setGroup(group);\n+        final CommandLine cl =\n+            parser.parse(\n+                new String[] {\n+                    \"-p\",\n+                    \"-attr\",\n+                    \"p\" });\n+\n+        assertEquals(1, cl.getOptionCount(\"-p\"));\n+        assertTrue(cl.hasOption(\"-p\"));\n+        assertTrue(cl.hasOption(\"-attr\"));\n+        assertTrue(cl.getValue(\"-attr\").equals(\"p\"));\n+    }\n }\n--- a/src/test/org/apache/commons/cli2/jdepend/JDependTest.java\n+++ b/src/test/org/apache/commons/cli2/jdepend/JDependTest.java\n         }\n     }\n \n-    public void testNoCyclesPresnet() {\n+    public void testNoCyclesPresent() {\n         assertEquals(\"Cycles exist\", false, dependancies.containsCycles());\n     }\n ", "timestamp": 1104153099, "metainfo": ""}