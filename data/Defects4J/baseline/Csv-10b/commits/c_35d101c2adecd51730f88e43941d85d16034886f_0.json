{"sha": "35d101c2adecd51730f88e43941d85d16034886f", "log": "CSV-114 CSVFormat constructor should reject a header array with duplicate entries  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n     private final boolean ignoreEmptyLines;\n     private final String recordSeparator; // for outputs\n     private final String nullString; // the string to be used for null values\n-    private final String[] header;\n+    private final String[] header; // array of header column names\n     private final boolean skipHeaderRecord;\n \n     /**\n         this.ignoreEmptyLines = ignoreEmptyLines;\n         this.recordSeparator = recordSeparator;\n         this.nullString = nullString;\n-        this.header = header == null ? null : header.clone();\n+        if (header == null) {\n+        \tthis.header = null;\n+        } else {\n+        \tSet<String> dupCheck = new HashSet<String>();\n+        \tfor(String hdr : header) {\n+        \t\tif (!dupCheck.add(hdr)) {\n+        \t\t\tthrow new IllegalArgumentException(\"The header contains a duplicate entry: '\" + hdr + \"' in \" + Arrays.toString(header));\n+        \t\t}\n+        \t}\n+            this.header = header.clone();        \t\n+        }\n         this.skipHeaderRecord = skipHeaderRecord;\n     }\n \n             throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n         }\n \n-        if (header != null) {\n-            final Set<String> set = new HashSet<String>(header.length);\n-            set.addAll(Arrays.asList(header));\n-            if (set.size() != header.length) {\n-                throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n-            }\n-        }\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n         CSVFormat.DEFAULT.withDelimiter('!').withEscape('!').validate();\n     }\n \n-    @Test(expected = IllegalStateException.class)\n+    @Test(expected = IllegalArgumentException.class)\n     public void testDuplicateHeaderElements() {\n         CSVFormat.DEFAULT.withHeader(\"A\", \"A\").validate();\n     }", "timestamp": 1399483651, "metainfo": ""}