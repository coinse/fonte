{"sha": "21ed5b135c8de3db3259962f0296bb98f2aa8afb", "log": "Better lvar name.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVFileParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFileParserTest.java\n         final String[] split = line.split(\" \");\n         assertTrue(testName+\" require 1 param\", split.length >= 1);\n          // first line starts with csv data file name\n-        final BufferedReader csvFile = new BufferedReader(new FileReader(new File(BASE, split[0])));\n+        final BufferedReader csvFileReader = new BufferedReader(new FileReader(new File(BASE, split[0])));\n         CSVFormat format = CSVFormat.newFormat(',').withQuoteChar('\"');\n         boolean checkComments = false;\n         for(int i=1; i < split.length; i++) {\n         assertEquals(testName+\" Expected format \", line, format.toString());\n \n         // Now parse the file and compare against the expected results\n-        for(final CSVRecord record : format.parse(csvFile)) {\n+        for(final CSVRecord record : format.parse(csvFileReader)) {\n             String parsed = record.toString();\n             if (checkComments) {\n                 final String comment = record.getComment().replace(\"\\n\", \"\\\\n\");", "timestamp": 1375201530, "metainfo": ""}