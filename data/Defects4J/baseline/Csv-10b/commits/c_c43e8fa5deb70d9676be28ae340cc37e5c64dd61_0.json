{"sha": "c43e8fa5deb70d9676be28ae340cc37e5c64dd61", "log": "Remove fallback logic for charset parameter  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n      * @param url\n      *            a URL. Must not be null.\n      * @param charset\n-     *            the charset for the resource, if {@code null}, uses {@code UTF-8}. UTF-8 is one of the encodings\n-     *            required by the Java specification.\n+     *            the charset for the resource. Must not be null.\n      * @param format\n      *            the CSVFormat used for CSV parsing. Must not be null.\n      * @return a new parser\n      * @throws IllegalArgumentException\n-     *             If the parameters of the format are inconsistent or if either url or format are null.\n+     *             If the parameters of the format are inconsistent or if either url, charset or format are null.\n      * @throws IOException\n      *             If an I/O error occurs\n      */\n     public static CSVParser parse(URL url, Charset charset, final CSVFormat format) throws IOException {\n         Assertions.notNull(url, \"url\");\n+        Assertions.notNull(charset, \"charset\");\n         Assertions.notNull(format, \"format\");\n \n         return new CSVParser(new InputStreamReader(url.openStream(),\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n+    public void testParserUrlNullCharsetFormat() throws Exception {\n+        CSVParser.parse(new URL(\"http://commons.apache.org\"), null, CSVFormat.DEFAULT);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n     public void testParseUrlCharsetNullFormat() throws Exception {\n         CSVParser.parse(new URL(\"http://commons.apache.org\"), Charset.defaultCharset(), null);\n     }", "timestamp": 1378042568, "metainfo": ""}