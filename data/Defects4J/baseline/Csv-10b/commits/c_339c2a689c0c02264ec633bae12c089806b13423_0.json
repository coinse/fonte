{"sha": "339c2a689c0c02264ec633bae12c089806b13423", "log": "Test cases for \\r and \\n line endings (SANDBOX-218).   ", "commit": "\n--- a/src/test/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/org/apache/commons/csv/CSVParserTest.java\n      String[][] data = parser.getAllValues();\n      assertEquals(4, data.length);\n     }\n-    \n+\n+    public void testCarriageReturnEndings() throws IOException {\n+     String code = \"foo\\rbaar,\\rhello,world\\r,kanu\";\n+     CSVParser parser = new CSVParser(new StringReader(code));\n+     String[][] data = parser.getAllValues();\n+     assertEquals(4, data.length);\n+    }\n+\n+    public void testLineFeedEndings() throws IOException {\n+     String code = \"foo\\nbaar,\\nhello,world\\n,kanu\";\n+     CSVParser parser = new CSVParser(new StringReader(code));\n+     String[][] data = parser.getAllValues();\n+     assertEquals(4, data.length);\n+    }\n+\n     public void testIgnoreEmptyLines() throws IOException {\n       String code = \"\\nfoo,baar\\n\\r\\n,\\n\\n,world\\r\\n\\n\";\n       //String code = \"world\\r\\n\\n\";", "timestamp": 1296463763, "metainfo": ""}