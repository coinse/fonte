{"sha": "6eddaf8b0c0cb4fe1ece10fc7da6f3b2835dd9df", "log": "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).  ", "commit": "\n--- a/src/java/org/apache/commons/csv/writer/CSVConfig.java\n+++ b/src/java/org/apache/commons/csv/writer/CSVConfig.java\n     private char fillChar = ' ';\n     /** The seperator character. Defaults to , */\n     private char delimiter = ',';\n+    /** The row separator. Defaults to \\n */\n+    private String rowDelimiter = \"\\n\";\n     /** Should we ignore the delimiter. Defaults to false */\n     private boolean ignoreDelimiter = false;\n     /** the value delimiter. Defaults to \" */\n     }\n \n     /**\n+     * @return the rowDelimiter used.\n+     */\n+    public String getRowDelimiter() {\n+        return rowDelimiter;\n+    }\n+\n+    /**\n+     * Set the rowDelimiter to use\n+     * @param rowDelimiter the row delimiter character.\n+     */\n+    public void setRowDelimiter(String rowDelimiter) {\n+        this.rowDelimiter = rowDelimiter;\n+    }\n+\n+    /**\n      * @return if the writer should ignore the delimiter character.\n      */\n     public boolean isDelimiterIgnored() {\n--- a/src/java/org/apache/commons/csv/writer/CSVWriter.java\n+++ b/src/java/org/apache/commons/csv/writer/CSVWriter.java\n                     }\n                 }\n             }\n-            sb.append(\"\\n\");\n+            sb.append(config.getRowDelimiter());\n             String line = sb.toString();\n             writer.write(line);\n         } catch(Exception e) {", "timestamp": 1285850939, "metainfo": ""}