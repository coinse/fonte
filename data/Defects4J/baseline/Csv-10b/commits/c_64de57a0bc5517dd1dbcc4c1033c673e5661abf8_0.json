{"sha": "64de57a0bc5517dd1dbcc4c1033c673e5661abf8", "log": "Sort members.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n         assertEquals(values[2], recordWithHeader.get(\"third\"));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testGetStringInconsistentRecord() {\n+        header.put(\"fourth\", Integer.valueOf(4));\n+        recordWithHeader.get(\"fourth\");\n+    }\n+\n     @Test(expected = IllegalStateException.class)\n     public void testGetStringNoHeader() {\n         record.get(\"first\");\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n-    public void testGetStringInconsistentRecord() {\n-        header.put(\"fourth\", Integer.valueOf(4));\n-        recordWithHeader.get(\"fourth\");\n+    public void testGetUnmappedEnum() {\n+        assertNull(recordWithHeader.get(EnumFixture.UNKNOWN_COLUMN));\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n     public void testGetUnmappedName() {\n         assertNull(recordWithHeader.get(\"fourth\"));\n-    }\n-\n-    @Test(expected = IllegalArgumentException.class)\n-    public void testGetUnmappedEnum() {\n-        assertNull(recordWithHeader.get(EnumFixture.UNKNOWN_COLUMN));\n     }\n \n     @Test(expected = ArrayIndexOutOfBoundsException.class)", "timestamp": 1390269323, "metainfo": ""}