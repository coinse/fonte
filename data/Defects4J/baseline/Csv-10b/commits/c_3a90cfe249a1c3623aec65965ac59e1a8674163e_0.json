{"sha": "3a90cfe249a1c3623aec65965ac59e1a8674163e", "log": "Explicit unboxing; associated Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n     // ======================================================\n \n     /**\n-     * Outputs a the line separator.\n+     * Outputs the line separator.\n      */\n     public void println() throws IOException {\n         out.append(format.getLineSeparator());\n         if (!newLine) {\n             println();\n         }\n-        out.append(format.getCommentStart());\n+        out.append(format.getCommentStart().charValue());\n         out.append(SP);\n         for (int i = 0; i < comment.length(); i++) {\n             final char c = comment.charAt(i);\n                 //$FALL-THROUGH$ break intentionally excluded.\n             case LF:\n                 println();\n-                out.append(format.getCommentStart());\n+                out.append(format.getCommentStart().charValue());\n                 out.append(SP);\n                 break;\n             default:\n         }\n     }\n \n+    /*\n+     * Note: must only be called if escaping is enabled, otherwise will generate NPE\n+     */\n     void printAndEscape(final CharSequence value, final int offset, final int len) throws IOException {\n         int start = offset;\n         int pos = offset;\n         printDelimiter();\n \n         final char delim = format.getDelimiter();\n-        final char escape = format.getEscape();\n+        final char escape = format.getEscape().charValue();\n \n         while (pos < end) {\n             char c = value.charAt(pos);\n         }\n     }\n \n+    /*\n+     * Note: must only be called if quoting is enabled, otherwise will generate NPE\n+     */\n     void printAndQuote(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n         final boolean first = newLine; // is this the first value on this line?\n         boolean quote = false;\n         printDelimiter();\n \n         final char delimChar = format.getDelimiter();\n-        final char quoteChar = format.getQuoteChar();\n+        final char quoteChar = format.getQuoteChar().charValue();\n \n         Quote quotePolicy = format.getQuotePolicy();\n         if (quotePolicy == null) {", "timestamp": 1350318445, "metainfo": ""}