{"sha": "745fb47b2135800a4d5fdfdf180c03215669487c", "log": "Refactored XML parsing by container to allow for alternative parsers   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n+++ b/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java,v 1.5 2002/06/08 22:46:11 dmitri Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/06/08 22:46:11 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/XMLDocumentContainer.java,v 1.6 2002/08/10 01:28:49 dmitri Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/08/10 01:28:49 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.jxpath;\n \n+import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.Source;\n import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerConfigurationException;\n+import javax.xml.transform.TransformerException;\n import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.TransformerFactoryConfigurationError;\n import javax.xml.transform.dom.DOMResult;\n import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.commons.jxpath.xml.DocumentContainer;\n import org.w3c.dom.Document;\n-import org.w3c.dom.Node;\n+import org.xml.sax.SAXException;\n+\n+import org.apache.commons.jxpath.xml.DocumentContainer;\n \n /**\n  * An XML document container reads and parses XML only when it is\n  * read, parsed and traversed. If they are not - they won't be\n  * read at all.\n  *\n+ * @deprecated 1.1 Please use org.apache.commons.jxpath.xml.DocumentContainer\n+ *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.5 $ $Date: 2002/06/08 22:46:11 $\n+ * @version $Revision: 1.6 $ $Date: 2002/08/10 01:28:49 $\n  */\n public class XMLDocumentContainer implements Container {\n \n-    private Node document;\n+    private DocumentContainer delegate;\n+    private Object document;\n     private URL xmlURL;\n     private Source source;\n+    private String parser;\n \n     /**\n      * @param URL is a URL for an XML file. Use getClass().getResource(resourceName)\n      * to load XML from a resource file.\n      */\n     public XMLDocumentContainer(URL xmlURL){\n-        this.xmlURL = xmlURL;\n-        if (xmlURL == null){\n-            throw new JXPathException(\"URL is null\");\n-        }\n+        delegate = new DocumentContainer(xmlURL);\n     }\n \n     public XMLDocumentContainer(Source source){\n     public Object getValue(){\n         if (document == null){\n             try {\n-                InputStream stream = null;\n-                try {\n-                    if (xmlURL != null){\n-                        stream = xmlURL.openStream();\n-                    }\n-                    if (stream != null){\n-                        DocumentBuilderFactory factory =\n-                                DocumentBuilderFactory.newInstance();\n-                        document = factory.newDocumentBuilder().parse(stream);\n-                    }\n-                    else {\n-                        if (xmlURL != null){\n-                            source = new StreamSource(stream);\n-                        }\n-                        DOMResult result = new DOMResult();\n-                        Transformer trans = TransformerFactory.newInstance().newTransformer();\n-                        trans.transform(source, result);\n-                        document = (Document) result.getNode();\n-                    }\n+                if (source != null){\n+                    DOMResult result = new DOMResult();\n+                    Transformer trans = TransformerFactory.newInstance().newTransformer();\n+                    trans.transform(source, result);\n+                    document = (Document) result.getNode();\n                 }\n-                finally {\n-                    if (stream != null){\n-                        stream.close();\n-                    }\n+                else {\n+                    document = delegate.getValue();\n                 }\n             }\n             catch (Exception ex){\n--- /dev/null\n+++ b/src/java/org/apache/commons/jxpath/xml/DOMParser.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/xml/DOMParser.java,v 1.1 2002/08/10 01:28:49 dmitri Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2002/08/10 01:28:49 $\n+ *\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation and was\n+ * originally based on software copyright (c) 2001, Plotnix, Inc,\n+ * <http://www.plotnix.com/>.\n+ * For more information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.jxpath.xml;\n+\n+import java.io.InputStream;\n+\n+import javax.xml.parsers.DocumentBuilderFactory;\n+\n+import org.apache.commons.jxpath.JXPathException;\n+\n+/**\n+ * An implementation of the XMLParser interface that produces a DOM Document.\n+ *\n+ * @author Dmitri Plotnikov\n+ * @version $Revision: 1.1 $ $Date: 2002/08/10 01:28:49 $\n+ */\n+public class DOMParser implements XMLParser {\n+\n+    public Object parseXML(InputStream stream){\n+        try {\n+            DocumentBuilderFactory factory =\n+                    DocumentBuilderFactory.newInstance();\n+            return factory.newDocumentBuilder().parse(stream);\n+        }\n+        catch (Exception ex){\n+            throw new JXPathException(\"DOM parser error\", ex);\n+        }\n+    }\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/xml/DocumentContainer.java,v 1.1 2002/08/10 01:28:49 dmitri Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2002/08/10 01:28:49 $\n+ *\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation and was\n+ * originally based on software copyright (c) 2001, Plotnix, Inc,\n+ * <http://www.plotnix.com/>.\n+ * For more information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.jxpath.xml;\n+\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.HashMap;\n+\n+import org.apache.commons.jxpath.Container;\n+import org.apache.commons.jxpath.JXPathException;\n+\n+/**\n+ * An XML document container reads and parses XML only when it is\n+ * accessed.  JXPath traverses Containers transparently -\n+ * you use the same paths to access objects in containers as you\n+ * do to access those objects directly.  You can create\n+ * XMLDocumentContainers for various XML documents that may or\n+ * may not be accessed by XPaths.  If they are, they will be automatically\n+ * read, parsed and traversed. If they are not - they won't be\n+ * read at all.\n+ *\n+ * @author Dmitri Plotnikov\n+ * @version $Revision: 1.1 $ $Date: 2002/08/10 01:28:49 $\n+ */\n+public class DocumentContainer implements Container {\n+\n+    public static final String MODEL_DOM = \"DOM\";\n+//    public static final String MODEL_JDOM = \"JDOM\";\n+\n+    private Object document;\n+    private URL xmlURL;\n+    private String model;\n+    \n+    private static HashMap parserClasses = new HashMap();\n+    static {\n+        parserClasses.put(MODEL_DOM, \n+                          \"org.apache.commons.jxpath.xml.DOMParser\");\n+//        parserClasses.put(MODEL_JDOM, \n+//                          \"org.apache.commons.jxpath.xml.JDOMParser\");\n+    }\n+    private static HashMap parsers = new HashMap();\n+\n+    /**\n+     * Use this constructor if the desired model is DOM.\n+     * \n+     * @param URL is a URL for an XML file. \n+     * Use getClass().getResource(resourceName) to load XML from a \n+     * resource file.\n+     */\n+    public DocumentContainer(URL xmlURL){\n+        this(xmlURL, MODEL_DOM);\n+    }\n+\n+    /**\n+     * @param URL is a URL for an XML file. Use getClass().getResource(resourceName)\n+     * to load XML from a resource file.\n+     *\n+     * @param model is one of the MODEL_* constants defined in this class. It\n+     *   determines which parser should be used to load the XML.\n+     */\n+    public DocumentContainer(URL xmlURL, String model){\n+        this.xmlURL = xmlURL;\n+        if (xmlURL == null){\n+            throw new JXPathException(\"XML URL is null\");\n+        }\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Reads XML, caches it internally and returns the Document.\n+     */\n+    public Object getValue(){\n+        if (document == null){\n+            try {\n+                InputStream stream = null;\n+                try {\n+                    if (xmlURL != null){\n+                        stream = xmlURL.openStream();\n+                    }\n+                    document = getParser(model).parseXML(stream);\n+                }\n+                finally {\n+                    if (stream != null){\n+                        stream.close();\n+                    }\n+                }\n+            }\n+            catch (Exception ex){\n+                throw new JXPathException(\n+                    \"Cannot read XML from: \" + xmlURL.toString(),\n+                    ex);\n+            }\n+        }\n+        return document;\n+    }\n+\n+    /**\n+     * Throws an UnsupportedOperationException\n+     */\n+    public void setValue(Object value){\n+        throw new UnsupportedOperationException();\n+    }\n+    \n+    /**\n+     * Maps a model type to a parser.\n+     */\n+    private static final XMLParser getParser(String model){\n+        XMLParser parser = (XMLParser)parsers.get(model);\n+        if (parser == null){\n+            String className = (String)parserClasses.get(model);\n+            if (className == null){\n+                throw new JXPathException(\"Unsupported XML model: \" + model);\n+            }\n+            try {\n+                Class clazz = Class.forName(className);\n+                parser = (XMLParser)clazz.newInstance();\n+            }\n+            catch (Exception ex){\n+                throw new JXPathException(\"Cannot allocate XMLParser: \" +\n+                        className);\n+            }\n+            parsers.put(model, parser);\n+        }\n+        return parser;\n+    }\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/jxpath/xml/XMLParser.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/xml/XMLParser.java,v 1.1 2002/08/10 01:28:49 dmitri Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2002/08/10 01:28:49 $\n+ *\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation and was\n+ * originally based on software copyright (c) 2001, Plotnix, Inc,\n+ * <http://www.plotnix.com/>.\n+ * For more information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.jxpath.xml;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Common interface for XML parsers.  We are not using JAXP because\n+ * some of the parsers we want to support may not be JAXP compliant.\n+ *\n+ * @author Dmitri Plotnikov\n+ * @version $Revision: 1.1 $ $Date: 2002/08/10 01:28:49 $\n+ */\n+public interface XMLParser {\n+\n+    /**\n+     * Reads the supplied XML file and returns the resulting model,\n+     * which is not necessarily DOM.\n+     */\n+    Object parseXML(InputStream stream);\n+}", "timestamp": 1028942929, "metainfo": ""}