{"sha": "a66195bec37dd299daac0570cd6ee9b3dfd98046", "log": "Fixed allocateCollection - should not attempt to create objects of an Abstract type   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n+++ b/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java,v 1.10 2003/10/09 21:31:42 rdonkin Exp $\n- * $Revision: 1.10 $\n- * $Date: 2003/10/09 21:31:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java,v 1.11 2003/11/02 23:21:06 dmitri Exp $\n+ * $Revision: 1.11 $\n+ * $Date: 2003/11/02 23:21:06 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * The default implementation of TypeConverter.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.10 $ $Date: 2003/10/09 21:31:42 $\n+ * @version $Revision: 1.11 $ $Date: 2003/11/02 23:21:06 $\n  */\n public class BasicTypeConverter implements TypeConverter {\n \n \n     protected boolean canCreateCollection(Class type) {\n         if (!type.isInterface()\n-            && ((type.getModifiers() | Modifier.ABSTRACT) == 0)) {\n+            && ((type.getModifiers() & Modifier.ABSTRACT) == 0)) {\n             return true;\n         }\n \n \n     protected Collection allocateCollection(Class type) {\n         if (!type.isInterface()\n-            && ((type.getModifiers() | Modifier.ABSTRACT) == 0)) {\n+            && ((type.getModifiers() & Modifier.ABSTRACT) == 0)) {\n             try {\n                 return (Collection) type.newInstance();\n             }", "timestamp": 1067815266, "metainfo": ""}