{"sha": "ad1fac2acdf18b55b550c1d953c074a2658fc43a", "log": "Temporary fix pending the release of the next version of JDOM, which currently has an incompatible API change.   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java,v 1.4 2003/03/11 00:59:33 dmitri Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/03/11 00:59:33 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNamespaceIterator.java,v 1.5 2003/06/17 01:30:21 dmitri Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2003/06/17 01:30:21 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * An iterator of namespaces of a DOM Node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.4 $ $Date: 2003/03/11 00:59:33 $\n+ * @version $Revision: 1.5 $ $Date: 2003/06/17 01:30:21 $\n  */\n public class JDOMNamespaceIterator implements NodeIterator {\n     private NodePointer parent;\n                 prefixes.add(ns.getPrefix());\n             }\n         }\n-        Element parent = element.getParent();\n+        Element parent = (Element) element.getParent();\n         if (parent != null) {\n             collectNamespaces(parent);\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java,v 1.8 2003/03/11 00:59:33 dmitri Exp $\n- * $Revision: 1.8 $\n- * $Date: 2003/03/11 00:59:33 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java,v 1.9 2003/06/17 01:30:21 dmitri Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2003/06/17 01:30:21 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * A Pointer that points to a DOM node.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2003/03/11 00:59:33 $\n+ * @version $Revision: 1.9 $ $Date: 2003/06/17 01:30:21 $\n  */\n public class JDOMNodePointer extends NodePointer {\n     private Object node;\n     \n     private Element nodeParent(Object node) {\n         if (node instanceof Element) {\n-            return ((Element) node).getParent();\n+            return (Element) ((Element) node).getParent();\n         }\n         else if (node instanceof Text) {\n-            return ((Text) node).getParent();\n+            return (Element) ((Text) node).getParent();\n         }\n         else if (node instanceof CDATA) {\n-            return ((CDATA) node).getParent();\n+            return (Element) ((CDATA) node).getParent();\n         }\n         else if (node instanceof ProcessingInstruction) {\n-            return ((ProcessingInstruction) node).getParent();\n+            return (Element) ((ProcessingInstruction) node).getParent();\n         }\n         else if (node instanceof Comment) {\n-            return ((Comment) node).getParent();\n+            return (Element) ((Comment) node).getParent();\n         }\n         return null;\n     }\n \n     private int getRelativePositionByName() {\n         if (node instanceof Element) {\n-            Element parent = ((Element) node).getParent();\n+            Element parent = (Element)((Element) node).getParent();\n             if (parent == null) {\n                 return 1;\n             }\n     private int getRelativePositionOfTextNode() {\n         Element parent;\n         if (node instanceof Text) {\n-            parent = ((Text) node).getParent();\n+            parent = (Element) ((Text) node).getParent();\n         }\n         else {\n-            parent = ((CDATA) node).getParent();\n+            parent = (Element) ((CDATA) node).getParent();\n         }\n         if (parent == null) {\n             return 1;\n     }\n \n     private int getRelativePositionOfPI(String target) {\n-        Element parent = ((ProcessingInstruction) node).getParent();\n+        Element parent = (Element) ((ProcessingInstruction) node).getParent();\n         if (parent == null) {\n             return 1;\n         }", "timestamp": 1055813421, "metainfo": ""}