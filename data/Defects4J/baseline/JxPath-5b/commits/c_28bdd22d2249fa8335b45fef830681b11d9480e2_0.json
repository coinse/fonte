{"sha": "28bdd22d2249fa8335b45fef830681b11d9480e2", "log": "Fixed a problem with descendent:: axis returning non-elements   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.7 2002/04/28 04:35:48 dmitri Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/04/28 04:35:48 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.8 2002/08/10 01:32:38 dmitri Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/08/10 01:32:38 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n import java.util.Stack;\n \n import org.apache.commons.jxpath.ri.EvalContext;\n+import org.apache.commons.jxpath.ri.QName;\n+import org.apache.commons.jxpath.ri.compiler.NodeNameTest;\n import org.apache.commons.jxpath.ri.compiler.NodeTest;\n import org.apache.commons.jxpath.ri.model.NodeIterator;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n  * axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2002/04/28 04:35:48 $\n+ * @version $Revision: 1.8 $ $Date: 2002/08/10 01:32:38 $\n  */\n public class DescendantContext extends EvalContext {\n     private NodeTest nodeTest;\n     private Stack stack;\n     private NodePointer currentNodePointer;\n     private boolean includeSelf;\n+    private final static NodeTest elementNodeTest = \n+            new NodeNameTest(new QName(null, \"*\"));\n \n     public DescendantContext(EvalContext parentContext, boolean includeSelf, NodeTest nodeTest){\n         super(parentContext);\n             currentNodePointer = parentContext.getCurrentNodePointer();\n             if (currentNodePointer != null){\n                 if (!currentNodePointer.isLeaf()){\n-                    stack.push(currentNodePointer.childIterator(null, false, null));\n+                    stack.push(currentNodePointer.childIterator(\n+                            elementNodeTest, false, null));\n                 }\n                 if (includeSelf){\n                     if (currentNodePointer.testNode(nodeTest)){\n             if (it.setPosition(it.getPosition() + 1)){\n                 currentNodePointer = it.getNodePointer();\n                 if (!currentNodePointer.isLeaf()){\n-                    stack.push(currentNodePointer.childIterator(null, false, null));\n+                    stack.push(currentNodePointer.childIterator(\n+                        elementNodeTest, false, null));\n                 }\n                 if (currentNodePointer.testNode(nodeTest)){\n                     position++;", "timestamp": 1028943158, "metainfo": ""}