{"sha": "0d5fc09a748227a3574d817fd4abfdb62fb8c57d", "log": "[JXPATH-88] add getPrefix(String namespaceURI) to JXPathContext, RI  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathContext.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathContext.java\n     }\n     \n     /**\n+     * Get the prefix associated with the specifed namespace URI.\n+     * @param namespaceURI the ns URI to check.\n+     * @return String prefix\n+     * @since JXPath 1.3\n+     */\n+    public String getPrefix(String namespaceURI) {\n+        throw new UnsupportedOperationException(\n+                \"Namespace registration is not implemented by \" + getClass());\n+    }\n+\n+    /**\n      * Namespace prefixes can be defined implicitly by specifying a pointer to a\n      * context where the namespaces are defined. By default,\n      * NamespaceContextPointer is the same as the Context Pointer, see\n--- a/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n+++ b/src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java\n     public String getNamespaceURI(String prefix) {\n         return namespaceResolver.getNamespaceURI(prefix);\n     }\n-    \n+\n+    /**\n+     * {@inheritDoc}\n+     * @see org.apache.commons.jxpath.JXPathContext#getPrefix(java.lang.String)\n+     */\n+    public String getPrefix(String namespaceURI) {\n+        return namespaceResolver.getPrefix(namespaceURI);\n+    }\n+\n     public void setNamespaceContextPointer(Pointer pointer) {\n         if (namespaceResolver.isSealed()) {\n             namespaceResolver = (NamespaceResolver) namespaceResolver.clone();", "timestamp": 1181759014, "metainfo": ""}