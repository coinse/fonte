{"sha": "fca9fd233a4c021d54ff7609fa8fb8b8333129f8", "log": "Fixed a synchronization issue described in this bug report: http://issues.apache.org/bugzilla/show_bug.cgi?id=34552  ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/JXPathBasicBeanInfo.java\n+++ b/src/java/org/apache/commons/jxpath/JXPathBasicBeanInfo.java\n                     bi = Introspector.getBeanInfo(clazz, Object.class);\n                 }\n                 PropertyDescriptor[] pds = bi.getPropertyDescriptors();\n-                propertyDescriptors = new PropertyDescriptor[pds.length];\n-                System.arraycopy(pds, 0, propertyDescriptors, 0, pds.length);\n-                Arrays.sort(propertyDescriptors, new Comparator() {\n+                PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];\n+                System.arraycopy(pds, 0, descriptors, 0, pds.length);\n+                Arrays.sort(descriptors, new Comparator() {\n                     public int compare(Object left, Object right) {\n                         return ((PropertyDescriptor) left).getName().compareTo(\n                             ((PropertyDescriptor) right).getName());\n                     }\n                 });\n+                propertyDescriptors = descriptors;\n             }\n             catch (IntrospectionException ex) {\n                 ex.printStackTrace();\n     public PropertyDescriptor getPropertyDescriptor(String propertyName) {\n         if (propertyNames == null) {\n             PropertyDescriptor[] pds = getPropertyDescriptors();\n-            propertyNames = new String[pds.length];\n+            String[] names = new String[pds.length];\n             for (int i = 0; i < pds.length; i++) {\n-                propertyNames[i] = pds[i].getName();\n+                names[i] = pds[i].getName();\n             }\n+            propertyNames = names;\n         }\n \n         for (int i = 0; i < propertyNames.length; i++) {", "timestamp": 1130613097, "metainfo": ""}