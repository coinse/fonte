{"sha": "04d66747e69273ed8ed520ddfefb86d85755e4b1", "log": "Fixed a problem with iteration - calling hasNext() multiple times would mess up the iteration   ", "commit": "\n--- a/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/EvalContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/EvalContext.java,v 1.17 2002/07/03 21:12:36 dmitri Exp $\n- * $Revision: 1.17 $\n- * $Date: 2002/07/03 21:12:36 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/EvalContext.java,v 1.18 2002/10/20 03:43:39 dmitri Exp $\n+ * $Revision: 1.18 $\n+ * $Date: 2002/10/20 03:43:39 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * implement behavior of various XPath axes: \"child::\", \"parent::\" etc.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.17 $ $Date: 2002/07/03 21:12:36 $\n+ * @version $Revision: 1.18 $ $Date: 2002/10/20 03:43:39 $\n  */\n public abstract class EvalContext implements ExpressionContext, Iterator {\n     protected EvalContext parentContext;\n     protected int position = 0;\n     private boolean startedSetIteration = false;\n     private boolean done = false;\n+    private boolean hasPerformedIteratorStep = false;\n     private Iterator pointerIterator;\n \n     // Sorts in the reverse order to the one defined by the Comparable\n             return constructIterator();\n         }\n         else {\n-            if (done){\n-                return false;\n-            }\n-            if (position == 0){\n-                while (nextSet()){\n-                    if (nextNode()){\n-                        return true;\n-                    }\n-                }\n-                return false;\n-            }\n-            return true;\n+            if (!done && !hasPerformedIteratorStep){\n+                performIteratorStep();\n+            }\n+            return !done;\n         }\n     }\n \n             return pointerIterator.next();\n         }\n         else {\n-            if (done || (position == 0 && !hasNext())){\n+            if (!done && !hasPerformedIteratorStep){\n+                performIteratorStep();\n+            }\n+            if (done){\n                 throw new NoSuchElementException();\n             }\n-            NodePointer pointer = (NodePointer)getCurrentNodePointer().clone();\n-            if (!nextNode()){\n-                done = true;\n-                while (nextSet()){\n-                    if (nextNode()){\n-                        done = false;\n-                        break;\n-                    }\n+            hasPerformedIteratorStep = false;\n+            return (NodePointer)getCurrentNodePointer().clone();\n+        }\n+    }\n+\n+    /**\n+     * Moves the iterator forward by one position\n+     */\n+    private void performIteratorStep(){\n+        done = true;\n+        if (position != 0 && nextNode()){\n+            done = false;\n+        }\n+        else {\n+            while (nextSet()){\n+                if (nextNode()){\n+                    done = false;\n+                    break;\n                 }\n             }\n-            return pointer;\n-        }\n+        }\n+        hasPerformedIteratorStep = true;\n     }\n \n     /**\n             while (nextNode()){\n                 NodePointer pointer = getCurrentNodePointer();\n                 if (!set.contains(pointer)){\n-                    set.add(pointer);\n-                    list.add(pointer);\n+                    Pointer cln = (Pointer)pointer.clone();\n+                    set.add(cln);\n+                    list.add(cln);\n                 }\n             }\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java,v 1.8 2002/05/29 00:41:32 dmitri Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/05/29 00:41:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/AncestorContext.java,v 1.9 2002/10/20 03:43:39 dmitri Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/10/20 03:43:39 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"ancestor::\" and \"ancestor-or-self::\" axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2002/05/29 00:41:32 $\n+ * @version $Revision: 1.9 $ $Date: 2002/10/20 03:43:39 $\n  */\n public class AncestorContext extends EvalContext {\n     private NodeTest nodeTest;\n     private boolean setStarted = false;\n     private NodePointer currentNodePointer;\n     private boolean includeSelf;\n-    private HashSet visitedNodes = new HashSet();\n \n     /**\n      * @param parentContext represents the previous step on the path\n     }\n \n     public boolean nextNode(){\n-        while (nextIgnoreDuplicates()){\n-            NodePointer location = getCurrentNodePointer();\n-            if (!visitedNodes.contains(location)){\n-                visitedNodes.add(location.clone());\n-                position++;\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    /**\n-     * Returns true if there is another object in the current set, even\n-     * if that object has already been encountered in the same iteration.\n-     */\n-    private boolean nextIgnoreDuplicates(){\n         if (!setStarted){\n             setStarted = true;\n             currentNodePointer = parentContext.getCurrentNodePointer();\n             if (includeSelf){\n                 if (currentNodePointer.testNode(nodeTest)){\n+                    position++;\n                     return true;\n                 }\n             }\n             }\n \n             if (currentNodePointer.testNode(nodeTest)){\n+                position++;\n                 return true;\n             }\n         }\n--- a/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.8 2002/08/10 01:32:38 dmitri Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/10 01:32:38 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java,v 1.9 2002/10/20 03:43:38 dmitri Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/10/20 03:43:38 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * axes.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.8 $ $Date: 2002/08/10 01:32:38 $\n+ * @version $Revision: 1.9 $ $Date: 2002/10/20 03:43:38 $\n  */\n public class DescendantContext extends EvalContext {\n     private NodeTest nodeTest;\n     private Stack stack;\n     private NodePointer currentNodePointer;\n     private boolean includeSelf;\n-    private final static NodeTest elementNodeTest = \n+    private final static NodeTest elementNodeTest =\n             new NodeNameTest(new QName(null, \"*\"));\n \n     public DescendantContext(EvalContext parentContext, boolean includeSelf, NodeTest nodeTest){\n--- a/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n+++ b/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java,v 1.7 2002/05/29 00:41:32 dmitri Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/05/29 00:41:32 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//jxpath/src/java/org/apache/commons/jxpath/ri/axes/ParentContext.java,v 1.8 2002/10/20 03:43:38 dmitri Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/10/20 03:43:38 $\n  *\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  * EvalContext that walks the \"parent::\" axis.\n  *\n  * @author Dmitri Plotnikov\n- * @version $Revision: 1.7 $ $Date: 2002/05/29 00:41:32 $\n+ * @version $Revision: 1.8 $ $Date: 2002/10/20 03:43:38 $\n  */\n public class ParentContext extends EvalContext {\n     private NodeTest nodeTest;\n     private boolean setStarted = false;\n     private NodePointer currentNodePointer;\n-    private HashSet visitedNodes = new HashSet();\n \n     public ParentContext(EvalContext parentContext, NodeTest nodeTest){\n         super(parentContext);\n     }\n \n     public boolean nextNode(){\n-        while (nextIgnoreDuplicates()){\n-            NodePointer location = getCurrentNodePointer();\n-            if (!visitedNodes.contains(location)){\n-                visitedNodes.add(location.clone());\n-                position++;\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    /**\n-     * Returns true if there is another object in the current set, even\n-     * if that object has already been encountered in the same iteration.\n-     */\n-    private boolean nextIgnoreDuplicates(){\n         // Each set contains exactly one node: the parent\n         if (setStarted){\n             return false;\n         while (currentNodePointer != null && !currentNodePointer.isNode()){\n             currentNodePointer = currentNodePointer.getParent();\n         }\n-        return currentNodePointer != null && currentNodePointer.testNode(nodeTest);\n+        if (currentNodePointer != null &&\n+                currentNodePointer.testNode(nodeTest)){\n+            position++;\n+            return true;\n+        }\n+        return false;\n     }\n }", "timestamp": 1035085419, "metainfo": ""}