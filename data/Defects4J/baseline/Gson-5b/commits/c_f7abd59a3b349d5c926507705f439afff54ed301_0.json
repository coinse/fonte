{"sha": "f7abd59a3b349d5c926507705f439afff54ed301", "log": "JsonWriter#jsonValue writes raw JSON values.  Add a jsonValue(String value) method that takes a raw JSON string that can be used to write the string directly to the underlying writer without modification.  The intended use case for this is when building JSON that contains a pre-serialized JSON string as a value in an object or array.", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n   }\n \n   /**\n+   * Writes {@code value} directly to the writer without quoting or\n+   * escaping.\n+   *\n+   * @param value the literal string value, or null to encode a null literal.\n+   * @return this writer.\n+   */\n+  public JsonWriter jsonValue(String value) throws IOException {\n+    if (value == null) {\n+      return nullValue();\n+    }\n+    writeDeferredName();\n+    beforeValue(false);\n+    out.append(value);\n+    return this;\n+  }\n+\n+  /**\n    * Encodes {@code null}.\n    *\n    * @return this writer.\n--- a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n     jsonWriter.value((String) null);\n     jsonWriter.endObject();\n     assertEquals(\"{\\\"a\\\":null}\", stringWriter.toString());\n+  }\n+\n+  public void testJsonValue() throws IOException {\n+    StringWriter stringWriter = new StringWriter();\n+    JsonWriter jsonWriter = new JsonWriter(stringWriter);\n+    jsonWriter.beginObject();\n+    jsonWriter.name(\"a\");\n+    jsonWriter.jsonValue(\"{\\\"b\\\":true}\");\n+    jsonWriter.name(\"c\");\n+    jsonWriter.value(1);\n+    jsonWriter.endObject();\n+    assertEquals(\"{\\\"a\\\":{\\\"b\\\":true},\\\"c\\\":1}\", stringWriter.toString());\n   }\n \n   public void testNonFiniteDoubles() throws IOException {", "timestamp": 1437415016, "metainfo": ""}