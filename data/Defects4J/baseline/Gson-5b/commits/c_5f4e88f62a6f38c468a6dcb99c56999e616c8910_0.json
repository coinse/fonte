{"sha": "5f4e88f62a6f38c468a6dcb99c56999e616c8910", "log": "More tests to ensure that serialization works for parameterized types like A<B<C<D>>> without the need to specify type in toJson()", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java\n     assertEquals(expectedJson, json);\n   }\n \n+  public void testTwoLevelParameterizedObject() {\n+    Bar<Bar<Foo>> bar = new Bar<Bar<Foo>>(new Bar<Foo>(new Foo(1)));\n+    String expectedJson = \"{\\\"t\\\":{\\\"t\\\":{\\\"b\\\":1}}}\";\n+    // Ensure that serialization works without specifying the type explicitly\n+    String json = gson.toJson(bar);\n+    assertEquals(expectedJson, json);\n+    // Ensure that serialization also works when the type is specified explicitly\n+    json = gson.toJson(bar, new TypeToken<Bar<Bar<Foo>>>(){}.getType());\n+    assertEquals(expectedJson, json);\n+  }\n+\n+  public void testThreeLevelParameterizedObject() {\n+    Bar<Bar<Bar<Foo>>> bar = new Bar<Bar<Bar<Foo>>>(new Bar<Bar<Foo>>(new Bar<Foo>(new Foo(1))));\n+    String expectedJson = \"{\\\"t\\\":{\\\"t\\\":{\\\"t\\\":{\\\"b\\\":1}}}}\";\n+    // Ensure that serialization works without specifying the type explicitly\n+    String json = gson.toJson(bar);\n+    assertEquals(expectedJson, json);\n+    // Ensure that serialization also works when the type is specified explicitly\n+    json = gson.toJson(bar, new TypeToken<Bar<Bar<Bar<Foo>>>>(){}.getType());\n+    assertEquals(expectedJson, json);\n+  }\n+\n   private static class Foo {\n     @SuppressWarnings(\"unused\")\n     int b;", "timestamp": 1309032849, "metainfo": ""}