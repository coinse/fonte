{"sha": "6d90f0d894c468bc2f5b1e138ef21174ae644a0b", "log": "Make JsonElement TypeAdapterFactory a type hierarchy factory.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n   };\n \n   public static final TypeAdapterFactory JSON_ELEMENT_FACTORY\n-      = newFactory(JsonElement.class, JSON_ELEMENT);\n+      = newTypeHierarchyFactory(JsonElement.class, JSON_ELEMENT);\n \n   private static final class EnumTypeAdapter<T extends Enum<T>> extends TypeAdapter<T> {\n     private final Map<String, T> nameToConstant = new HashMap<String, T>();\n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n \n   public void testJsonPrimitiveDeserialization() {\n     assertEquals(new JsonPrimitive(5), gson.fromJson(\"5\", JsonElement.class));\n+    assertEquals(new JsonPrimitive(5), gson.fromJson(\"5\", JsonPrimitive.class));\n     assertEquals(new JsonPrimitive(true), gson.fromJson(\"true\", JsonElement.class));\n+    assertEquals(new JsonPrimitive(true), gson.fromJson(\"true\", JsonPrimitive.class));\n     assertEquals(new JsonPrimitive(\"foo\"), gson.fromJson(\"\\\"foo\\\"\", JsonElement.class));\n+    assertEquals(new JsonPrimitive(\"foo\"), gson.fromJson(\"\\\"foo\\\"\", JsonPrimitive.class));\n     assertEquals(new JsonPrimitive('a'), gson.fromJson(\"\\\"a\\\"\", JsonElement.class));\n+    assertEquals(new JsonPrimitive('a'), gson.fromJson(\"\\\"a\\\"\", JsonPrimitive.class));\n   }\n \n   public void testJsonNullSerialization() {\n     assertEquals(\"null\", gson.toJson(JsonNull.INSTANCE, JsonElement.class));\n+    assertEquals(\"null\", gson.toJson(JsonNull.INSTANCE, JsonNull.class));\n   }\n \n   public void testNullJsonElementSerialization() {\n     assertEquals(\"null\", gson.toJson(null, JsonElement.class));\n+    assertEquals(\"null\", gson.toJson(null, JsonNull.class));\n   }\n \n   public void testJsonArraySerialization() {\n     assertEquals(\"[1,2,3]\", gson.toJson(array, JsonElement.class));\n   }\n \n-  public void testJsonArrayDeerialization() {\n+  public void testJsonArrayDeserialization() {\n     JsonArray array = new JsonArray();\n     array.add(new JsonPrimitive(1));\n     array.add(new JsonPrimitive(2));\n     array.add(new JsonPrimitive(3));\n-    assertEquals(array, gson.fromJson(\"[1,2,3]\", JsonElement.class));\n+\n+    String json = \"[1,2,3]\";\n+    assertEquals(array, gson.fromJson(json, JsonElement.class));\n+    assertEquals(array, gson.fromJson(json, JsonArray.class));\n   }\n \n   public void testJsonObjectSerialization() {\n     object.add(\"foo\", new JsonPrimitive(1));\n     object.add(\"bar\", new JsonPrimitive(2));\n \n-    JsonElement actual = gson.fromJson(\"{\\\"foo\\\":1,\\\"bar\\\":2}\", JsonElement.class);\n+    String json = \"{\\\"foo\\\":1,\\\"bar\\\":2}\";\n+    JsonElement actual = gson.fromJson(json, JsonElement.class);\n     assertEquals(object, actual);\n-  }\n-\n-  public void testJsonNullDeerialization() {\n+\n+    JsonObject actualObj = gson.fromJson(json, JsonObject.class);\n+    assertEquals(object, actualObj);\n+  }\n+\n+  public void testJsonNullDeserialization() {\n     assertEquals(JsonNull.INSTANCE, gson.fromJson(\"null\", JsonElement.class));\n-  }\n-\n-  public void testNullJsonElementDeserialization() {\n-    assertEquals(JsonNull.INSTANCE, gson.fromJson(\"null\", JsonElement.class));\n+    assertEquals(JsonNull.INSTANCE, gson.fromJson(\"null\", JsonNull.class));\n   }\n \n   private static class ClassWithBigDecimal {", "timestamp": 1355990237, "metainfo": ""}