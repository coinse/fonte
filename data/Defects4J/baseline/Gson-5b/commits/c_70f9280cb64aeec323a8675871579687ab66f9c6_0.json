{"sha": "70f9280cb64aeec323a8675871579687ab66f9c6", "log": "Remove usage of StringPool as it appears to slow things down and avoid Java String intern for the common cases.", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n    * fails.\n    */\n   private String peekedString;\n-\n-  /**\n-   * A pool of short strings intended to prevent object allocation.\n-   */\n-  private static final StringPool stringPool = new StringPool();\n \n   /*\n    * The nesting stack. Using a manual array rather than an ArrayList saves 20%.\n   private String nextQuotedValue(char quote) throws IOException {\n     // Like nextNonWhitespace, this uses locals 'p' and 'l' to save inner-loop field access.\n     char[] buffer = this.buffer;\n-    StringBuilder builder = null;\n-    int hashCode = 0;\n+    StringBuilder builder = new StringBuilder();\n     while (true) {\n       int p = pos;\n       int l = limit;\n \n         if (c == quote) {\n           pos = p;\n-          if (builder == null) {\n-            return stringPool.get(buffer, start, p - start - 1, hashCode);\n-          } else {\n-            builder.append(buffer, start, p - start - 1);\n-            return builder.toString();\n-          }\n-\n+          builder.append(buffer, start, p - start - 1);\n+          return builder.toString();\n         } else if (c == '\\\\') {\n           pos = p;\n-          if (builder == null) {\n-            builder = new StringBuilder();\n-          }\n           builder.append(buffer, start, p - start - 1);\n           builder.append(readEscapeCharacter());\n           p = pos;\n           l = limit;\n           start = p;\n-\n         } else if (c == '\\n') {\n-          hashCode = (hashCode * 31) + c;\n           lineNumber++;\n           lineStart = p;\n-        } else {\n-          hashCode = (hashCode * 31) + c;\n-        }\n-      }\n-\n-      if (builder == null) {\n-        builder = new StringBuilder();\n-      }\n+        }\n+      }\n+\n       builder.append(buffer, start, p - start);\n       pos = p;\n       if (!fillBuffer(1)) {", "timestamp": 1365446183, "metainfo": ""}