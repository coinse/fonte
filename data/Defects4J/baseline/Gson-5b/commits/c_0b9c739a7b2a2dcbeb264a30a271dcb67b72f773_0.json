{"sha": "0b9c739a7b2a2dcbeb264a30a271dcb67b72f773", "log": "added additional tests for the default deserialization of dates.", "commit": "\n--- a/gson/src/main/java/com/google/gson/MappedObjectConstructor.java\n+++ b/gson/src/main/java/com/google/gson/MappedObjectConstructor.java\n import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Type;\n-import java.util.Map;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n     assertEquals(\"\\\"\" + DateFormat.getDateInstance().format(now) + \"\\\"\", json);\n   }\n \n+  public void testDefaultDateDeserialization() {\n+    Date date = new Date();\n+    assertEquals(date, gson.fromJson(gson.toJson(date), Date.class));    \n+  }\n+\n   public void testDefaultDateSerializationUsingBuilder() throws Exception {\n     Gson gson = new GsonBuilder().create();\n     Date now = new Date();\n     String json = gson.toJson(now);\n     assertEquals(\"\\\"\" + DateFormat.getDateInstance().format(now) + \"\\\"\", json);\n+  }\n+\n+  public void testDefaultDateDeserializationUsingBuilder() throws Exception {\n+    Gson gson = new GsonBuilder().create();\n+    Date now = new Date();\n+    String json = gson.toJson(now);\n+    assertEquals(now, gson.fromJson(json, Date.class));    \n   }\n \n   public void testDateSerializationWithPattern() throws Exception {\n     String json = gson.toJson(now);\n     assertEquals(\"\\\"\" + formatter.format(now) + \"\\\"\", json);\n   }\n-\n+  \n+  public void testDateDeserializationWithPattern() throws Exception {\n+    String pattern = \"yyyy-MM-dd\";\n+    DateFormat formatter = new SimpleDateFormat(pattern);\n+    Gson gson = new GsonBuilder().setDateFormat(DateFormat.LONG).setDateFormat(pattern).create();\n+    Date now = new Date();\n+    String json = gson.toJson(now);\n+    assertEquals(now, gson.fromJson(json, Date.class));    \n+  }\n+  \n   private static class ClassWithBigDecimal {\n     BigDecimal value;\n     ClassWithBigDecimal() { }", "timestamp": 1223330404, "metainfo": ""}