{"sha": "90c9eadda162e0e9056d8d5137b4c9e0db598f3e", "log": "custom-collections", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n         .factory(TypeAdapters.STRING_BUFFER_FACTORY)\n         .typeAdapter(BigDecimal.class, new BigDecimalTypeAdapter())\n         .typeAdapter(BigInteger.class, new BigIntegerTypeAdapter())\n-        .factory(new CollectionTypeAdapterFactory(constructorConstructor))\n         .factory(TypeAdapters.JSON_ELEMENT_FACTORY)\n         .factory(ObjectTypeAdapter.FACTORY);\n \n       builder.factory(factory);\n     }\n \n-    builder.factory(new GsonToMiniGsonTypeAdapterFactory(this, serializers, deserializers))\n+    builder\n+        .factory(new GsonToMiniGsonTypeAdapterFactory(this, serializers, deserializers))\n+        .factory(new CollectionTypeAdapterFactory(constructorConstructor))\n         .factory(TypeAdapters.URL_FACTORY)\n         .factory(TypeAdapters.URI_FACTORY)\n         .factory(TypeAdapters.UUID_FACTORY)\n--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n package com.google.gson.functional;\n \n import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonPrimitive;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n import com.google.gson.common.MoreAsserts;\n import com.google.gson.common.TestTypes.BagOfPrimitives;\n import com.google.gson.reflect.TypeToken;\n     HasArrayListField copy = gson.fromJson(\"{\\\"longs\\\":[1,3]}\", HasArrayListField.class);\n     assertEquals(Arrays.asList(1L, 3L), copy.longs);\n   }\n+  \n+  public void testUserCollectionTypeAdapter() {\n+    Type listOfString = new TypeToken<List<String>>() {}.getType();\n+    Object stringListSerializer = new JsonSerializer<List<String>>() {\n+      public JsonElement serialize(List<String> src, Type typeOfSrc,\n+          JsonSerializationContext context) {\n+        return new JsonPrimitive(src.get(0) + \";\" + src.get(1));\n+      }\n+    };\n+    Gson gson = new GsonBuilder()\n+        .registerTypeAdapter(listOfString, stringListSerializer)\n+        .create();\n+    assertEquals(\"\\\"ab;cd\\\"\", gson.toJson(Arrays.asList(\"ab\", \"cd\"), listOfString));\n+  }\n \n   static class HasArrayListField {\n     ArrayList<Long> longs = new ArrayList<Long>();", "timestamp": 1319311530, "metainfo": ""}