{"sha": "b7c3e0067cd2e69d0f12da7c3318a713c6bdcc27", "log": "Avoid local field accesses in nextString(char). This saves a modest 2%.", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n    *     malformed.\n    */\n   private String nextString(char quote) throws IOException {\n+    // Like nextNonWhitespace, this uses locals 'p' and 'l' to save inner-loop field access.\n+    char[] buffer = this.buffer;\n     StringBuilder builder = null;\n-    do {\n+    while (true) {\n+      int p = pos;\n+      int l = limit;\n       /* the index of the first character not yet appended to the builder. */\n-      int start = pos;\n-      while (pos < limit) {\n-        int c = buffer[pos++];\n+      int start = p;\n+      while (p < l) {\n+        int c = buffer[p++];\n \n         if (c == quote) {\n+          pos = p;\n           if (skipping) {\n             return \"skipped!\";\n           } else if (builder == null) {\n-            return stringPool.get(buffer, start, pos - start - 1);\n+            return stringPool.get(buffer, start, p - start - 1);\n           } else {\n-            builder.append(buffer, start, pos - start - 1);\n+            builder.append(buffer, start, p - start - 1);\n             return builder.toString();\n           }\n \n         } else if (c == '\\\\') {\n+          pos = p;\n           if (builder == null) {\n             builder = new StringBuilder();\n           }\n-          builder.append(buffer, start, pos - start - 1);\n+          builder.append(buffer, start, p - start - 1);\n           builder.append(readEscapeCharacter());\n-          start = pos;\n+          p = pos;\n+          l = limit;\n+          start = p;\n         }\n       }\n \n       if (builder == null) {\n         builder = new StringBuilder();\n       }\n-      builder.append(buffer, start, pos - start);\n-    } while (fillBuffer(1));\n-\n-    throw syntaxError(\"Unterminated string\");\n+      builder.append(buffer, start, p - start);\n+      pos = p;\n+      if (!fillBuffer(1)) {\n+        throw syntaxError(\"Unterminated string\");\n+      }\n+    }\n   }\n \n   /**", "timestamp": 1323842860, "metainfo": ""}