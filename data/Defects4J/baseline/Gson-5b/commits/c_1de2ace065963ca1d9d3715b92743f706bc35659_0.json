{"sha": "1de2ace065963ca1d9d3715b92743f706bc35659", "log": "removed eclipse warnings. updated maven plugins to the latest versions", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\n     this.constructorConstructor = constructorConstructor;\n   }\n \n-  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+  @SuppressWarnings(\"unchecked\")\n   public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType) {\n     JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class);\n     if (annotation == null) {\n--- a/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java\n           @Override public void write(JsonWriter out, T value) throws IOException {\n             out.value(\"jsonAdapterFactory\");\n           }\n+          @SuppressWarnings(\"unchecked\")\n           @Override public T read(JsonReader in) throws IOException {\n             in.nextString();\n             return (T) new C(\"jsonAdapterFactory\");\n--- a/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java\n import java.io.StringReader;\n import junit.framework.TestCase;\n \n+@SuppressWarnings(\"resource\")\n public class JsonReaderPathTest extends TestCase {\n   public void testPath() throws IOException {\n     JsonReader reader = new JsonReader(\n--- a/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java\n    * Returns a reader that returns one character at a time.\n    */\n   private Reader reader(final String s) {\n-    if (true) return new StringReader(s);\n-\n-    return new Reader() {\n+    /* if (true) */ return new StringReader(s);\n+    /* return new Reader() {\n       int position = 0;\n       @Override public int read(char[] buffer, int offset, int count) throws IOException {\n         if (position == s.length()) {\n       }\n       @Override public void close() throws IOException {\n       }\n-    };\n+    }; */\n   }\n }", "timestamp": 1416170701, "metainfo": ""}