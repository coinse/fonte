{"sha": "005c93e3832e8f83aa5602d83ffb6d181ec0f1a1", "log": "removed unused no-args constructors", "commit": "\n--- a/gson/src/test/java/com/google/gson/common/TestTypes.java\n+++ b/gson/src/test/java/com/google/gson/common/TestTypes.java\n   public static class ClassWithBaseField {\n     public static final String FIELD_KEY = \"base\";\n     public final Base base;\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithBaseField() {\n-      this(null);\n-    }\n     public ClassWithBaseField(Base base) {\n       this.base = base;\n     }\n   public static class ClassWithBaseArrayField {\n     public static final String FIELD_KEY = \"base\";\n     public final Base[] base;\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithBaseArrayField() {\n-      this(null);\n-    }\n     public ClassWithBaseArrayField(Base[] base) {\n       this.base = base;\n     }\n \n   public static class StringWrapper {\n     public final String someConstantStringInstanceField;\n-\n-    StringWrapper() {\n-      this(\"Blah\");\n-    }\n \n     public StringWrapper(String value) {\n       someConstantStringInstanceField = value;\n     private final Long longValue;\n     private final Integer intValue;\n     private final Boolean booleanValue;\n-\n-    public BagOfPrimitiveWrappers() {\n-      this(0L, 0, false);\n-    }\n \n     public BagOfPrimitiveWrappers(Long longValue, Integer intValue, Boolean booleanValue) {\n       this.longValue = longValue;\n--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n   private static class ObjectWithWildcardCollection {\n     private final Collection<? extends BagOfPrimitives> collection;\n \n-    // For use by Gson\n-    @SuppressWarnings({ \"unchecked\", \"unused\" })\n-    public ObjectWithWildcardCollection() {\n-      this(Collections.EMPTY_LIST);\n-    }\n-\n     public ObjectWithWildcardCollection(Collection<? extends BagOfPrimitives> collection) {\n       this.collection = collection;\n     }\n \n   private static class Entry {\n     int value;\n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private Entry() {\n-      this(10);\n-    }\n     Entry(int value) {\n       this.value = value;\n     }\n--- a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n   private static class DataHolder {\n     final String data;\n \n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private DataHolder() {\n-      this(\"\");\n-    }\n-    \n     public DataHolder(String data) {\n       this.data = data;\n     }\n   \n   private static class DataHolderWrapper {\n     final DataHolder wrappedData;\n-    \n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private DataHolderWrapper() {\n-      this(null);\n-    }\n     \n     public DataHolderWrapper(DataHolder data) {\n       this.wrappedData = data;\n--- a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java\n \n   private static class ClassWithBigDecimal {\n     BigDecimal value;\n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithBigDecimal() { }\n     ClassWithBigDecimal(String value) {\n       this.value = new BigDecimal(value);\n     }\n \n   private static class ClassWithBigInteger {\n     BigInteger value;\n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithBigInteger() { }\n     ClassWithBigInteger(String value) {\n       this.value = new BigInteger(value);\n     }\n--- a/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java\n     @Expose(deserialize = false) final double d;\n     @Expose(serialize = false, deserialize = false) final char e;\n \n-    // For use by Gson\n-    private ClassWithExposedFields() {\n-      this(null, null);\n-    }\n-\n     public ClassWithExposedFields(Integer a, Integer b) {\n       this(a, b, 1L, 2.0, 'a');\n     }\n     @Expose\n     private final SomeInterface interfaceField;\n \n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithInterfaceField() {\n-      this(null);\n-    }\n-\n     public ClassWithInterfaceField(SomeInterface interfaceField) {\n       this.interfaceField = interfaceField;\n     }\n--- a/gson/src/test/java/com/google/gson/functional/InheritanceTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/InheritanceTest.java\n \n   private static class SubTypeOfNested extends Nested {\n     private final long value = 5;\n-\n-    // Used by Gson\n-    @SuppressWarnings(\"unused\")\n-    private SubTypeOfNested() {\n-      this(null, null);\n-    }\n \n     public SubTypeOfNested(BagOfPrimitives primitive1, BagOfPrimitives primitive2) {\n       super(primitive1, primitive2);\n     private Set<Float> set;\n     private SortedSet<Character> sortedSet;\n \n-    // For use by Gson\n-    @SuppressWarnings(\"unused\")\n-    private ClassWithSubInterfacesOfCollection() {\n-    }\n-\n     public ClassWithSubInterfacesOfCollection(List<Integer> list, Queue<Long> queue, Set<Float> set,\n         SortedSet<Character> sortedSet) {\n       this.list = list;", "timestamp": 1300906083, "metainfo": ""}