{"sha": "fdaa6b05c4b418b567d33041c07f9d14b8e45dfe", "log": "ensuring that the type field is written by runtime type adapter", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java\n     json = gson.toJson(shape);\n     shape = gson.fromJson(json, Shape.class);\n     assertEquals(15, ((Square)shape).side);\n+    assertEquals(ShapeType.SQUARE, shape.type);\n   }\n \n   @JsonAdapter(Shape.JsonAdapterFactory.class)\n       return new TypeAdapter<R>() {\n         @Override public R read(JsonReader in) throws IOException {\n           JsonElement jsonElement = Streams.parse(in);\n-          JsonElement labelJsonElement = jsonElement.getAsJsonObject().remove(typeFieldName);\n+          JsonElement labelJsonElement = jsonElement.getAsJsonObject().get(typeFieldName);\n           if (labelJsonElement == null) {\n             throw new JsonParseException(\"cannot deserialize \" + baseType\n                 + \" because it does not define a field named \" + typeFieldName);", "timestamp": 1418252228, "metainfo": ""}