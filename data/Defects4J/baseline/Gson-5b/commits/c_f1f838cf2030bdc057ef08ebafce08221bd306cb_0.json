{"sha": "f1f838cf2030bdc057ef08ebafce08221bd306cb", "log": "Favor post-Gingerbread instantiation mechanism.  pre-Gingerbread is now a small subset of the Android OS distribution and is constantly shrinking toward zero.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java\n+++ b/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java\n     } catch (Exception ignored) {\n     }\n \n-    // try dalvikvm, pre-gingerbread\n-    // public class ObjectInputStream {\n-    //   private static native Object newInstance(\n-    //     Class<?> instantiationClass, Class<?> constructorClass);\n-    // }\n-    try {\n-      final Method newInstance = ObjectInputStream.class\n-          .getDeclaredMethod(\"newInstance\", Class.class, Class.class);\n-      newInstance.setAccessible(true);\n-      return new UnsafeAllocator() {\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public <T> T newInstance(Class<T> c) throws Exception {\n-          return (T) newInstance.invoke(null, c, Object.class);\n-        }\n-      };\n-    } catch (Exception ignored) {\n-    }\n-\n     // try dalvikvm, post-gingerbread\n     // public class ObjectStreamClass {\n     //   private static native int getConstructorId(Class<?> c);\n     } catch (Exception ignored) {\n     }\n \n+    // try dalvikvm, pre-gingerbread\n+    // public class ObjectInputStream {\n+    //   private static native Object newInstance(\n+    //     Class<?> instantiationClass, Class<?> constructorClass);\n+    // }\n+    try {\n+      final Method newInstance = ObjectInputStream.class\n+          .getDeclaredMethod(\"newInstance\", Class.class, Class.class);\n+      newInstance.setAccessible(true);\n+      return new UnsafeAllocator() {\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public <T> T newInstance(Class<T> c) throws Exception {\n+          return (T) newInstance.invoke(null, c, Object.class);\n+        }\n+      };\n+    } catch (Exception ignored) {\n+    }\n+\n     // give up\n     return new UnsafeAllocator() {\n       @Override", "timestamp": 1407562370, "metainfo": ""}