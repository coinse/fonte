{"sha": "4d9bec220682ff8e0a854eb422e8b498692f6394", "log": "Caching inheritance hierarchy for a type to reduce performance impact of reflection.", "commit": "\n--- a/gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java\n+++ b/gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java\n import java.lang.reflect.AccessibleObject;\n import java.lang.reflect.Field;\n import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * Visits each of the fields of the specified class using reflection\n  * @author Jesse Wilson\n  */\n final class ReflectingFieldNavigator {\n+  private static final LruCache<Type, List<Class<?>>> classCache =\n+    new LruCache<Type, List<Class<?>>>(500);\n   private static final LruCache<Class<?>, Field[]> fieldsCache =\n     new LruCache<Class<?>, Field[]>(500);\n \n   void visitFieldsReflectively(ObjectTypePair objTypePair, Visitor visitor) {\n     ObjectTypePair currObjTypePair = objTypePair.toMoreSpecificType();\n     Class<?> topLevelClass = Types.getRawType(currObjTypePair.type);\n-    for (Class<?> curr = topLevelClass; curr != null && !curr.equals(Object.class); curr =\n-      curr.getSuperclass()) {\n-      if (!curr.isSynthetic()) {\n-        navigateClassFields(objTypePair.getObject(), objTypePair.type, curr, visitor);\n+    for (Class<?> curr : getInheritanceHierarchy(currObjTypePair.type)) {\n+      navigateClassFields(objTypePair.getObject(), objTypePair.type, curr, visitor);\n+    }\n+  }\n+\n+  /**\n+   * Returns a list of classes corresponding to the inheritance of specified type \n+   */\n+  private List<Class<?>> getInheritanceHierarchy(Type type) {\n+    List<Class<?>> classes = classCache.get(type);\n+    if (classes == null) {\n+      classes = new ArrayList<Class<?>>();\n+      Class<?> topLevelClass = Types.getRawType(type);\n+      for (Class<?> curr = topLevelClass; curr != null && !curr.equals(Object.class); curr =\n+        curr.getSuperclass()) {\n+        if (!curr.isSynthetic()) {\n+          classes.add(curr);\n+        }\n       }\n+      classCache.put(type, classes);\n     }\n+    return classes;\n   }\n \n   private void navigateClassFields(Object obj, Type objType,", "timestamp": 1301005725, "metainfo": ""}