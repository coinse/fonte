{"sha": "19ae6c0763cffe5d4a9a020902ae7d9ecbb2d6ea", "log": "Fixed issue 162 by making default date adapter thread-safe by synchronizing serialize() and deserialize() methods.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java\n  */\n final class DefaultTypeAdapters {\n \n-  private static final DefaultDateTypeAdapter DATE_TYPE_ADAPTER =\n-      new DefaultDateTypeAdapter(DateFormat.getDateTimeInstance());\n+  private static final DefaultDateTypeAdapter DATE_TYPE_ADAPTER = new DefaultDateTypeAdapter();\n \n   @SuppressWarnings(\"unchecked\")\n   private static final EnumTypeAdapter ENUM_TYPE_ADAPTER = new EnumTypeAdapter();\n   static class DefaultDateTypeAdapter implements JsonSerializer<Date>, JsonDeserializer<Date> {\n     private final DateFormat format;\n \n-    public DefaultDateTypeAdapter(String datePattern) {\n+    DefaultDateTypeAdapter() {\n+      this.format = DateFormat.getDateTimeInstance();\n+    }\n+\n+    DefaultDateTypeAdapter(final String datePattern) {\n       this.format = new SimpleDateFormat(datePattern);\n     }\n     \n-    DefaultDateTypeAdapter(DateFormat format) {\n-      this.format = format;\n-    }\n-\n-    public DefaultDateTypeAdapter(int style) {\n+    DefaultDateTypeAdapter(final int style) {\n       this.format = DateFormat.getDateInstance(style);\n     }\n \n-    public DefaultDateTypeAdapter(int dateStyle, int timeStyle) {\n+    public DefaultDateTypeAdapter(final int dateStyle, final int timeStyle) {\n       this.format = DateFormat.getDateTimeInstance(dateStyle, timeStyle);\n     }\n \n-    public JsonElement serialize(Date src, Type typeOfSrc, JsonSerializationContext context) {\n+    // These methods need to be synchronized since JDK DateFormat classes are not thread-safe\n+    // See issue 162\n+    public synchronized JsonElement serialize(\n+        Date src, Type typeOfSrc, JsonSerializationContext context) {\n       String dateFormatAsString = format.format(src);\n       return new JsonPrimitive(dateFormatAsString);\n     }\n \n-    public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+    public synchronized Date deserialize(\n+        JsonElement json, Type typeOfT, JsonDeserializationContext context)\n         throws JsonParseException {\n       if (!(json instanceof JsonPrimitive)) {\n         throw new JsonParseException(\"The date should be a string value\");", "timestamp": 1253898888, "metainfo": ""}