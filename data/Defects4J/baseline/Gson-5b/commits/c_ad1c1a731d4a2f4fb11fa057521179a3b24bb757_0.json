{"sha": "ad1c1a731d4a2f4fb11fa057521179a3b24bb757", "log": "Added more tests in response to Issue 70.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n import junit.framework.TestCase;\n \n import java.lang.reflect.Type;\n+import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.Map;\n import java.util.Set;\n \n /**\n     StringHolder holder = new StringHolder(\"Jacob\", \"Tomaw\");\n     Set<StringHolder> setOfHolders = new HashSet<StringHolder>();\n     setOfHolders.add(holder);\n-    String json = gson.toJson(holder);\n+    String json = gson.toJson(setOfHolders);\n     assertTrue(json.contains(\"Jacob:Tomaw\"));\n   }\n \n       .registerTypeAdapter(StringHolder.class, new StringHolderTypeAdapter())\n       .create();\n     Type setType = new TypeToken<Set<StringHolder>>() {}.getType();\n-    Set<StringHolder> setOfFoo = gson.fromJson(\"['Jacob:Tomaw']\", setType);\n-    assertEquals(1, setOfFoo.size());\n-    StringHolder foo = setOfFoo.iterator().next();\n+    Set<StringHolder> setOfHolders = gson.fromJson(\"['Jacob:Tomaw']\", setType);\n+    assertEquals(1, setOfHolders.size());\n+    StringHolder foo = setOfHolders.iterator().next();\n     assertEquals(\"Jacob\", foo.part1);\n     assertEquals(\"Tomaw\", foo.part2);\n   }\n+  \n+  // Test created from Issue 70\n+  public void testCustomAdapterInvokedForMapElementSerialization() {\n+    Gson gson = new GsonBuilder()\n+      .registerTypeAdapter(StringHolder.class, new StringHolderTypeAdapter())\n+      .create();\n+    Type mapType = new TypeToken<Map<String,StringHolder>>() {}.getType();\n+    StringHolder holder = new StringHolder(\"Jacob\", \"Tomaw\");\n+    Map<String, StringHolder> mapOfHolders = new HashMap<String, StringHolder>();\n+    mapOfHolders.put(\"foo\", holder);\n+    String json = gson.toJson(mapOfHolders);\n+    assertTrue(json.contains(\"\\\"foo\\\":\\\"Jacob:Tomaw\\\"\"));\n+  }\n+\n+  // Test created from Issue 70\n+  public void testCustomAdapterInvokedForMapElementDeserialization() {\n+    Gson gson = new GsonBuilder()\n+      .registerTypeAdapter(StringHolder.class, new StringHolderTypeAdapter())\n+      .create();\n+    Type mapType = new TypeToken<Map<String, StringHolder>>() {}.getType();\n+    Map<String, StringHolder> mapOfFoo = gson.fromJson(\"{'foo':'Jacob:Tomaw'}\", mapType);\n+    assertEquals(1, mapOfFoo.size());\n+    StringHolder foo = mapOfFoo.get(\"foo\");\n+    assertEquals(\"Jacob\", foo.part1);\n+    assertEquals(\"Tomaw\", foo.part2);\n+  }\n }", "timestamp": 1226700672, "metainfo": ""}