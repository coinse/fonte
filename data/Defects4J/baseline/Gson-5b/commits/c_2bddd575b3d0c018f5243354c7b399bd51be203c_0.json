{"sha": "2bddd575b3d0c018f5243354c7b399bd51be203c", "log": "Code review changes from r476", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java\n     Type objType = objTypePair.getType();\n     JsonDeserializer deserializer = deserializers.getHandlerFor(objType);\n     if (deserializer != null) {\n-      if (json != null && !json.isJsonNull()) {\n+      if (!json.isJsonNull()) {\n         target = (T) deserializer.deserialize(json, objType, context);\n       }\n       return true;\n--- a/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n       @SuppressWarnings(\"unchecked\")\n       JsonDeserializer deserializer = deserializers.getHandlerFor(actualTypeOfField);\n       if (deserializer != null) {\n-        if (child != null && !child.isJsonNull()) {\n+        if (!child.isJsonNull()) {\n           Object value = deserializer.deserialize(child, actualTypeOfField, context);\n           f.set(parent, value);\n         }\n--- a/gson/src/main/java/com/google/gson/JsonStreamParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonStreamParser.java\n  * <pre>\n  * JsonStreamParser parser = new JsonStreamParser(\"['first'] {'second':10} 'third'\");\n  * JsonElement element;\n- * synchronized (someCommonObject) {\n+ * synchronized (parser) {  // synchronize on an object shared by threads\n  *   if (parser.hasNext()) {\n  *     element = parser.next();\n  *   }\n--- a/gson/src/main/java/com/google/gson/JsonTreeNavigator.java\n+++ b/gson/src/main/java/com/google/gson/JsonTreeNavigator.java\n   }\n   \n   public void navigate(JsonElement element) throws IOException {\n-    if (element == null || element.isJsonNull()) {\n+    if (element.isJsonNull()) {\n       visitor.visitNull();\n     } else if (element.isJsonArray()) {\n       JsonArray array = element.getAsJsonArray();\n    */\n   private boolean visitChild(JsonObject parent, String childName, JsonElement child, \n       boolean isFirst) throws IOException {\n-    if (child == null || child.isJsonNull()) {\n+    if (child.isJsonNull()) {\n       if (visitNulls) {\n         visitor.visitNullObjectMember(parent, childName, isFirst);\n         navigate(child.getAsJsonNull());\n    * Returns true if the child was visited, false if it was skipped.\n    */\n   private void visitChild(JsonArray parent, JsonElement child, boolean isFirst) throws IOException {\n-    if (child == null || child.isJsonNull()) {\n+    if (child.isJsonNull()) {\n       visitor.visitNullArrayMember(parent, isFirst);\n       navigate(child);\n \t  } else if (child.isJsonArray()) {\n--- a/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java\n     SubType1 target = (SubType1) gson.fromJson(json, MyBase.class);\n     assertEquals(\"abc\", target.field1);    \n   }\n+\n   private static class MyBase {\n     static final String TYPE_ACCESS = \"__type__\";\n   }\n+\n   private enum SubTypes { \n     SUB_TYPE1(SubType1.class),\n     SUB_TYPE2(SubType2.class);\n       return subClass;\n     }\n   }\n+\n   private static class SubType1 extends MyBase {\n     String field1;    \n   }\n+\n   private static class SubType2 extends MyBase {\n     @SuppressWarnings(\"unused\")\n     String field2;    ", "timestamp": 1255044232, "metainfo": ""}