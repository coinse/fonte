{"sha": "69661216a3687fdf360af30fe7a24bba7310c100", "log": "Minor clean-up of warnings (in 1.5) and added new test for non-Empty maps.", "commit": "\n--- a/gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java\n+++ b/gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java\n     JsonObject emptyMapJsonObject = (JsonObject) element;\n     assertTrue(emptyMapJsonObject.entrySet().isEmpty());\n   }\n+  \n+  public void testNonEmptyMapSerialization() {\n+    Type mapType = new TypeToken<Map<String, String>>() { }.getType();\n+    Map<String, String> myMap = new HashMap<String, String>();\n+    String key = \"key1\";\n+    myMap.put(key, \"value1\");\n+    Gson gson = new Gson();\n+    JsonElement element = gson.toJsonTree(myMap, mapType);\n+\n+    assertTrue(element.isJsonObject());\n+    JsonObject mapJsonObject = element.getAsJsonObject();\n+    assertTrue(mapJsonObject.has(key));\n+  }\n }\n--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n     assertEquals(\"[1,2,3,4,5,6,7,8,9]\", gson.toJson(target));\n   }\n \n-  @SuppressWarnings({ \"rawtypes\" })\n+  @SuppressWarnings(\"unchecked\")\n   public void testRawCollectionSerialization() {\n     BagOfPrimitives bag1 = new BagOfPrimitives();\n     Collection target = Arrays.asList(bag1, bag1);\n     assertTrue(deserializedCollection.contains(objB));\n   }\n \n-  @SuppressWarnings({ \"rawtypes\" })\n+  @SuppressWarnings(\"unchecked\")\n   private static int[] toIntArray(Collection collection) {\n     int[] ints = new int[collection.size()];\n     int i = 0;\n--- a/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java\n     // Field tag only annotation\n   }\n \n-  @SuppressWarnings(\"unused\")\n   private static class SampleObjectForTest {\n     @Foo\n     private final int annotatedField;", "timestamp": 1297448578, "metainfo": ""}