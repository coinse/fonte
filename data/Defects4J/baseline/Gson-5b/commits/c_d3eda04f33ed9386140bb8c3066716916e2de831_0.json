{"sha": "d3eda04f33ed9386140bb8c3066716916e2de831", "log": "Added support for deserializing from null input to a null value. Added toString() method to ObjectTypePair.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n    */\n   @SuppressWarnings(\"unchecked\")\n   public <T> T fromJson(String json, Type typeOfT) throws JsonParseException {\n+    if (json == null) {\n+      return null;\n+    }\n     StringReader reader = new StringReader(json);\n     T target = (T) fromJson(reader, typeOfT);\n     return target;\n--- a/gson/src/main/java/com/google/gson/ObjectTypePair.java\n+++ b/gson/src/main/java/com/google/gson/ObjectTypePair.java\n   Type getType() {\n     return type;\n   }\n-  \n+\n+  @Override\n+  public String toString() {\n+    return String.format(\"preserveType: %b, type: %s, obj: %s\", preserveType, type, obj);\n+  }\n+\n   <HANDLER> Pair<HANDLER, ObjectTypePair> getMatchingHandler(\n       ParameterizedTypeHandlerMap<HANDLER> handlers) {\n     HANDLER handler = null;\n--- a/gson/src/test/java/com/google/gson/functional/ObjectTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ObjectTest.java\n     assertEquals(\"\", gson.toJson(null));\n   }\n \n+  public void testEmptyStringDeserialization() throws Exception {\n+    Object object = gson.fromJson(\"\", Object.class);\n+    assertNull(object);\n+  }\n+\n   public void testNullDeserialization() throws Exception {\n-    Object object = gson.fromJson(\"\", Object.class);\n+    String myNullObject = null;\n+    Object object = gson.fromJson(myNullObject, Object.class);\n     assertNull(object);\n   }\n ", "timestamp": 1287763619, "metainfo": ""}