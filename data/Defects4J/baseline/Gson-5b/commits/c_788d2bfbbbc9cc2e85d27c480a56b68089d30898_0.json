{"sha": "788d2bfbbbc9cc2e85d27c480a56b68089d30898", "log": "Fix parsing of double and big decimals that have an exponent but no fraction part.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonParser.java\n     }\n     Number n;\n     if (exppart != null) {\n+      fracpart = (fracpart == null) ? \"\" : fracpart;\n       n = new java.math.BigDecimal(intpart + fracpart + exppart);\n     } else if (fracpart != null) {\n       n = new Double(intpart + fracpart);\n--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n     assertEquals(\"[-122.08]\", gson.toJson(target, double[].class));\n     assertEquals(\"[-122.08]\", gson.toJson(target, Double[].class));\n   }\n+  \n+  public void testDoubleAsStringRepresentationDeserialization() {\n+    String doubleValue = \"1.0043E+5\";\n+    Double expected = Double.valueOf(doubleValue);\n+    Double actual = gson.fromJson(doubleValue, Double.class);\n+    assertEquals(expected, actual);\n+\n+    double actual1 = gson.fromJson(doubleValue, double.class);\n+    assertEquals(expected.doubleValue(), actual1);\n+  }\n+  \n+  public void testDoubleNoFractAsStringRepresentationDeserialization() {\n+    String doubleValue = \"1E+5\";\n+    Double expected = Double.valueOf(doubleValue);\n+    Double actual = gson.fromJson(doubleValue, Double.class);\n+    assertEquals(expected, actual);\n+\n+    double actual1 = gson.fromJson(doubleValue, double.class);\n+    assertEquals(expected.doubleValue(), actual1);\n+  }\n \n   public void testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization() {\n     double expected = -122.08;\n   public void testSmallValueForBigDecimalDeserialization() {\n     BigDecimal expected = new BigDecimal(\"1.55\");\n     BigDecimal actual = gson.fromJson(\"1.55\", BigDecimal.class);\n+    assertEquals(expected, actual);\n+  }\n+\n+  public void testBigDecimalAsStringRepresentationDeserialization() {\n+    String doubleValue = \"0.05E+5\";\n+    BigDecimal expected = new BigDecimal(doubleValue);\n+    BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);\n+    assertEquals(expected, actual);\n+  }\n+  \n+  public void testBigDecimalNoFractAsStringRepresentationDeserialization() {\n+    String doubleValue = \"5E+5\";\n+    BigDecimal expected = new BigDecimal(doubleValue);\n+    BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);\n     assertEquals(expected, actual);\n   }\n ", "timestamp": 1227038114, "metainfo": ""}