{"sha": "99801915aa324c4d07b852e23debfbcefb1a3007", "log": "More code through the same fromJson path", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.io.StringReader;\n import java.io.StringWriter;\n import java.io.Writer;\n import java.lang.reflect.Field;\n       return null;\n     }\n     try {\n-      TypeAdapter<T> typeAdapter = (TypeAdapter<T>)miniGson.getAdapter(TypeToken.get(typeOfT));\n-      return typeAdapter.fromJson(json);\n+      StringReader reader = new StringReader(json);\n+      T target = (T) fromJson(reader, typeOfT);\n+      return target;\n     } catch (IllegalStateException e) {\n-      // TODO(inder): Figure out whether it is indeed right to rethrow this as JsonSyntaxException\n-      throw new JsonSyntaxException(e);\n-    } catch (IOException e) {\n       // TODO(inder): Figure out whether it is indeed right to rethrow this as JsonSyntaxException\n       throw new JsonSyntaxException(e);\n     }\n    */\n   @SuppressWarnings(\"unchecked\")\n   public <T> T fromJson(JsonReader reader, Type typeOfT) throws JsonIOException, JsonSyntaxException {\n-    if (reader == null) {\n-      // TODO(inder): remove this null check since we didnt have it in a previously released version\n-      return null;\n-    }\n     boolean oldLenient = reader.isLenient();\n     reader.setLenient(true);\n     try {\n-      TypeAdapter<T> typeAdapter = (TypeAdapter<T>)miniGson.getAdapter(TypeToken.get(typeOfT));\n+      TypeAdapter<T> typeAdapter = (TypeAdapter<T>) miniGson.getAdapter(TypeToken.get(typeOfT));\n       return typeAdapter.read(reader);\n     } catch (IOException e) {\n       // TODO(inder): Figure out whether it is indeed right to rethrow this as JsonSyntaxException\n     if (json == null) {\n       return null;\n     }\n-    return (T) miniGson.getAdapter(TypeToken.get(typeOfT)).fromJsonElement(json);\n+    return fromJson(new StringReader(json.toString()), typeOfT);\n   }\n \n   @Override\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java\n \n   public T fromJsonElement(JsonElement json) {\n     try {\n-      StringWriter stringWriter = new StringWriter();\n-      JsonWriter jsonWriter = new JsonWriter(stringWriter);\n-      jsonWriter.setLenient(true);\n-      Streams.write(json, false, jsonWriter);\n-      JsonReader jsonReader = new JsonReader(new StringReader(stringWriter.toString()));\n+      JsonReader jsonReader = new JsonReader(new StringReader(json.toString()));\n       jsonReader.setLenient(true);\n       return read(jsonReader);\n     } catch (IOException e) {", "timestamp": 1315546834, "metainfo": ""}