{"sha": "dd86d63436c5ea9d90df52af049e82d25461d19f", "log": "Use inner classes for BigDecimal and BigInteger type adapters", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n import com.google.gson.internal.Primitives;\n import com.google.gson.internal.Streams;\n import com.google.gson.internal.bind.ArrayTypeAdapter;\n-import com.google.gson.internal.bind.BigDecimalTypeAdapter;\n-import com.google.gson.internal.bind.BigIntegerTypeAdapter;\n import com.google.gson.internal.bind.CollectionTypeAdapterFactory;\n import com.google.gson.internal.bind.DateTypeAdapter;\n import com.google.gson.internal.bind.JsonTreeReader;\n     factories.add(TypeAdapters.CHARACTER_FACTORY);\n     factories.add(TypeAdapters.STRING_BUILDER_FACTORY);\n     factories.add(TypeAdapters.STRING_BUFFER_FACTORY);\n-    factories.add(TypeAdapters.newFactory(BigDecimal.class, new BigDecimalTypeAdapter()));\n-    factories.add(TypeAdapters.newFactory(BigInteger.class, new BigIntegerTypeAdapter()));\n+    factories.add(TypeAdapters.newFactory(BigDecimal.class, TypeAdapters.BIG_DECIMAL));\n+    factories.add(TypeAdapters.newFactory(BigInteger.class, TypeAdapters.BIG_INTEGER));\n     factories.add(TypeAdapters.JSON_ELEMENT_FACTORY);\n     factories.add(ObjectTypeAdapter.FACTORY);\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n \n import com.google.gson.TypeAdapterFactory;\n import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n import java.net.InetAddress;\n import java.net.URI;\n import java.net.URISyntaxException;\n \n   @SuppressWarnings(\"rawtypes\")\n   public static final TypeAdapter<Class> CLASS = new TypeAdapter<Class>() {\n-\t@Override\n-\tpublic void write(JsonWriter out, Class value) throws IOException {\n-\t  throw new UnsupportedOperationException(\"Attempted to serialize java.lang.Class: \"\n-\t      + value.getName() + \". Forgot to register a type adapter?\");\n-\t}\n-\t@Override\n-\tpublic Class read(JsonReader in) throws IOException {\n-      throw new UnsupportedOperationException(\n-          \"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n-\t}\n+    @Override\n+    public void write(JsonWriter out, Class value) throws IOException {\n+      throw new UnsupportedOperationException(\"Attempted to serialize java.lang.Class: \"\n+          + value.getName() + \". Forgot to register a type adapter?\");\n+    }\n+    @Override\n+    public Class read(JsonReader in) throws IOException {\n+        throw new UnsupportedOperationException(\n+            \"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n+    }\n   };\n   public static final TypeAdapterFactory CLASS_FACTORY = newFactory(Class.class, CLASS);\n \n       out.value(value);\n     }\n   };\n+  \n+  public static final TypeAdapter<BigDecimal> BIG_DECIMAL = new TypeAdapter<BigDecimal>() {\n+    @Override public BigDecimal read(JsonReader in) throws IOException {\n+      if (in.peek() == JsonToken.NULL) {\n+        in.nextNull();\n+        return null;\n+      }\n+      try {\n+        return new BigDecimal(in.nextString());\n+      } catch (NumberFormatException e) {\n+        throw new JsonSyntaxException(e);\n+      }\n+    }\n+\n+    @Override public void write(JsonWriter out, BigDecimal value) throws IOException {\n+      out.value(value);\n+    }\n+  };\n+  \n+  public static final TypeAdapter<BigInteger> BIG_INTEGER = new TypeAdapter<BigInteger>() {\n+    @Override public BigInteger read(JsonReader in) throws IOException {\n+      if (in.peek() == JsonToken.NULL) {\n+        in.nextNull();\n+        return null;\n+      }\n+      try {\n+        return new BigInteger(in.nextString());\n+      } catch (NumberFormatException e) {\n+        throw new JsonSyntaxException(e);\n+      }\n+    }\n+\n+    @Override public void write(JsonWriter out, BigInteger value) throws IOException {\n+      out.value(value);\n+    }\n+  };\n \n   public static final TypeAdapterFactory STRING_FACTORY = newFactory(String.class, STRING);\n \n \n   public static final TypeAdapterFactory ENUM_FACTORY = newEnumTypeHierarchyFactory();\n \n-  public static <TT> TypeAdapterFactory newEnumTypeHierarchyFactory() {\n+  public static TypeAdapterFactory newEnumTypeHierarchyFactory() {\n     return new TypeAdapterFactory() {\n       @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n       public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {", "timestamp": 1328991263, "metainfo": ""}