{"sha": "2cd3f9707f4494e15ac8f1652a4fbd19ba26c2d4", "log": "Incorporated feedback from r1082", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java\n   // test for issue 389\n   public void testAbsentJsonElementsAreSetToNull() {\n     Gson gson = new Gson();\n-    ClassWithMembers target = gson.fromJson(\"{array:[1,2,3]}\", ClassWithMembers.class);\n+    ClassWithInitializedMembers target =\n+        gson.fromJson(\"{array:[1,2,3]}\", ClassWithInitializedMembers.class);\n     assertTrue(target.array.length == 3 && target.array[1] == 2);\n-    assertNull(target.str);\n-    assertNull(target.col);\n+    assertEquals(ClassWithInitializedMembers.MY_STRING_DEFAULT, target.str1);\n+    assertNull(target.str2);\n+    assertEquals(ClassWithInitializedMembers.MY_INT_DEFAULT, target.int1);\n+    assertEquals(0, target.int2); // test the default value of a primitive int field per JVM spec\n+    assertEquals(ClassWithInitializedMembers.MY_BOOLEAN_DEFAULT, target.bool1);\n+    assertFalse(target.bool2); // test the default value of a primitive boolean field per JVM spec\n+  }\n+\n+  public static class ClassWithInitializedMembers  {\n+    // Using a mix of no-args constructor and field initializers\n+    // Also, some fields are intialized and some are not (so initialized per JVM spec)\n+    public static final String MY_STRING_DEFAULT = \"string\";\n+    private static final int MY_INT_DEFAULT = 2;\n+    private static final boolean MY_BOOLEAN_DEFAULT = true;\n+    int[] array;\n+    String str1, str2;\n+    int int1 = MY_INT_DEFAULT;\n+    int int2;\n+    boolean bool1 = MY_BOOLEAN_DEFAULT;\n+    boolean bool2;\n+    public ClassWithInitializedMembers() {\n+      str1 = MY_STRING_DEFAULT;\n+    }\n   }\n \n   private static class ClassWithNullWrappedPrimitive {\n     private Long value;\n   }\n \n+  @SuppressWarnings(\"unused\")\n   private static class ClassWithMembers {\n     String str;\n     int[] array;", "timestamp": 1324656672, "metainfo": ""}