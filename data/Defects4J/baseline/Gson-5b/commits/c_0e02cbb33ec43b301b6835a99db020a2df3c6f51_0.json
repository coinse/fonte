{"sha": "0e02cbb33ec43b301b6835a99db020a2df3c6f51", "log": "Nulls are here to stay. Sigh.", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n     return new TypeAdapter<Number>() {\n       @Override public Double read(JsonReader reader) throws IOException {\n         if (reader.peek() == JsonToken.NULL) {\n-          reader.nextNull(); // TODO: does this belong here?\n+          reader.nextNull();\n           return null;\n         }\n         return reader.nextDouble();\n     return new TypeAdapter<Number>() {\n       @Override public Float read(JsonReader reader) throws IOException {\n         if (reader.peek() == JsonToken.NULL) {\n-          reader.nextNull(); // TODO: does this belong here?\n+          reader.nextNull();\n           return null;\n         }\n         return (float) reader.nextDouble();\n     return new TypeAdapter<Number>() {\n       @Override public Number read(JsonReader reader) throws IOException {\n         if (reader.peek() == JsonToken.NULL) {\n-          reader.nextNull(); // TODO: does this belong here?\n+          reader.nextNull();\n           return null;\n         }\n         return reader.nextLong();\n--- a/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java\n \n   public Object read(JsonReader reader) throws IOException {\n     if (reader.peek() == JsonToken.NULL) {\n-      reader.nextNull(); // TODO: does this belong here?\n+      reader.nextNull();\n       return null;\n     }\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java\n \n     public Collection<E> read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java\n     public Map<K, V> read(JsonReader reader) throws IOException {\n       JsonToken peek = reader.peek();\n       if (peek == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java\n     @Override\n     public T read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java\n \n     public Map<String, V> read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n \n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n     @Override\n     public Boolean read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return reader.nextBoolean();\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       try {\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       try {\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       try {\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       try {\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return (float) reader.nextDouble();\n     @Override\n     public Number read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return reader.nextDouble();\n       JsonToken jsonToken = reader.peek();\n       switch (jsonToken) {\n       case NULL:\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       case NUMBER:\n         return new LazilyParsedNumber(reader.nextString());\n     @Override\n     public Character read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return reader.nextString().charAt(0);\n     public String read(JsonReader reader) throws IOException {\n       JsonToken peek = reader.peek();\n       if (peek == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       /* coerce booleans to strings for backwards compatibility */\n     @Override\n     public StringBuilder read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return new StringBuilder(reader.nextString());\n     @Override\n     public StringBuffer read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return new StringBuffer(reader.nextString());\n     @Override\n     public URL read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       String nextString = reader.nextString();\n     @Override\n     public URI read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       try {\n     @Override\n     public InetAddress read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return InetAddress.getByName(reader.nextString());\n     @Override\n     public UUID read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       return java.util.UUID.fromString(reader.nextString());\n     @Override\n     public Locale read(JsonReader reader) throws IOException {\n       if (reader.peek() == JsonToken.NULL) {\n-        reader.nextNull(); // TODO: does this belong here?\n+        reader.nextNull();\n         return null;\n       }\n       String locale = reader.nextString();", "timestamp": 1318562405, "metainfo": ""}