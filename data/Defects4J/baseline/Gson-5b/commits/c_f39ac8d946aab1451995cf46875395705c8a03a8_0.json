{"sha": "f39ac8d946aab1451995cf46875395705c8a03a8", "log": "Update extras to build after today's Gson/MiniGson refactoring.", "commit": "\n--- a/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java\n+++ b/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java\n \n package com.google.gson.typeadapters;\n \n+import com.google.gson.Gson;\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParseException;\n import com.google.gson.JsonPrimitive;\n+import com.google.gson.TypeAdapter;\n import com.google.gson.internal.Streams;\n-import com.google.gson.internal.bind.MiniGson;\n-import com.google.gson.internal.bind.TypeAdapter;\n import com.google.gson.reflect.TypeToken;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n     return registerSubtype(type, type.getSimpleName());\n   }\n \n-  public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> type) {\n+  public <T> TypeAdapter<T> create(Gson context, TypeToken<T> type) {\n     if (type.getRawType() != baseType) {\n       return null;\n     }", "timestamp": 1321852154, "metainfo": ""}