{"sha": "912add077989dc06977fe31209d4d8d125bce8d4", "log": "(Failing) test cases for registering competing types.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParseException;\n+import com.google.gson.JsonPrimitive;\n import com.google.gson.JsonSerializationContext;\n import com.google.gson.JsonSerializer;\n import java.lang.reflect.Type;\n         ((Manager) company.ceo.minions[2]).minions[1].userid);\n   }\n \n+  public void testRegisterSubtypeFirst() {\n+    Gson gson = new GsonBuilder()\n+        .registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter())\n+        .registerTypeHierarchyAdapter(Manager.class, new ManagerAdapter())\n+        .create();\n+\n+    Manager manager = new Manager();\n+    manager.userid = \"inder\";\n+\n+    String json = gson.toJson(manager, Manager.class);\n+    assertEquals(\"\\\"inder\\\"\", json);\n+    Manager copied = gson.fromJson(json, Manager.class);\n+    assertEquals(manager.userid, copied.userid);\n+  }\n+\n+  public void testRegisterSupertypeFirst() {\n+    GsonBuilder builder = new GsonBuilder()\n+        .registerTypeHierarchyAdapter(Manager.class, new ManagerAdapter())\n+        .registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter());\n+    try {\n+      builder.create();\n+      fail();\n+    } catch (IllegalArgumentException expected) {\n+    }\n+  }\n+\n+  static class ManagerAdapter implements JsonSerializer<Manager>, JsonDeserializer<Manager> {\n+    public Manager deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {\n+      Manager result = new Manager();\n+      result.userid = json.getAsString();\n+      return result;\n+    }\n+    public JsonElement serialize(Manager src, Type typeOfSrc, JsonSerializationContext context) {\n+      return new JsonPrimitive(src.userid);\n+    }\n+  }\n+\n   static class EmployeeAdapter implements JsonSerializer<Employee>, JsonDeserializer<Employee> {\n     public JsonElement serialize(Employee employee, Type typeOfSrc,\n         JsonSerializationContext context) {", "timestamp": 1300140875, "metainfo": ""}