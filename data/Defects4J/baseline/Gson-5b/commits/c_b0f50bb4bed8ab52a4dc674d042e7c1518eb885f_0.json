{"sha": "b0f50bb4bed8ab52a4dc674d042e7c1518eb885f", "log": "Return a \"JsonNull\" object for empty whitespace input into the JsonParser.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonParser.java\n+++ b/gson/src/main/java/com/google/gson/JsonParser.java\n       throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n     } catch (JsonParseException e) {\n       if (e.getCause() instanceof EOFException) {\n-        return null;\n+        return JsonNull.createJsonNull();\n       } else {\n         throw e;\n       }\n--- a/gson/src/test/java/com/google/gson/JsonParserTest.java\n+++ b/gson/src/test/java/com/google/gson/JsonParserTest.java\n     assertEquals(10, e.getAsJsonObject().get(\"a\").getAsInt());\n     assertEquals(\"c\", e.getAsJsonObject().get(\"b\").getAsString());\n   }\n+  \n+  public void testParseEmptyString() {\n+    JsonElement e = parser.parse(\"\\\"   \\\"\");\n+    assertTrue(e.isJsonPrimitive());\n+    assertEquals(\"   \", e.getAsString());\n+  }\n+\n+  public void testParseEmptyWhitespaceInput() {\n+    JsonElement e = parser.parse(\"     \");\n+    assertTrue(e.isJsonNull());\n+  }\n \n   public void testParseReader() {\n     StringReader reader = new StringReader(\"{a:10,b:'c'}\");", "timestamp": 1253732405, "metainfo": ""}