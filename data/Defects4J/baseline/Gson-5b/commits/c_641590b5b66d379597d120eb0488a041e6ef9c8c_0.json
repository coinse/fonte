{"sha": "641590b5b66d379597d120eb0488a041e6ef9c8c", "log": "Fill in some gaps in ExclusionStrategy's test.  Changes to GsonInternalAccess should have broken exclusion strategies, but didn't. Adding these tests cause the expected breaks.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java\n \n package com.google.gson.functional;\n \n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-\n-import junit.framework.TestCase;\n-\n import com.google.gson.ExclusionStrategy;\n import com.google.gson.FieldAttributes;\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonPrimitive;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import junit.framework.TestCase;\n \n /**\n  * Performs some functional tests when Gson is instantiated with some common user defined\n  * @author Joel Leitch\n  */\n public class ExclusionStrategyFunctionalTest extends TestCase {\n+  private static final ExclusionStrategy EXCLUDE_SAMPLE_OBJECT_FOR_TEST = new ExclusionStrategy() {\n+    public boolean shouldSkipField(FieldAttributes f) {\n+      return false;\n+    }\n+    public boolean shouldSkipClass(Class<?> clazz) {\n+      return clazz == SampleObjectForTest.class;\n+    }\n+  };\n+\n   private SampleObjectForTest src;\n \n   @Override\n     assertTrue(json.contains(\"\\\"longField\\\"\"));\n   }\n \n+  public void testExclusionStrategySerializationDoesNotImpactDeserialization() {\n+    String json = \"{\\\"annotatedField\\\":1,\\\"stringField\\\":\\\"x\\\",\\\"longField\\\":2}\";\n+    Gson gson = createGson(new MyExclusionStrategy(String.class), true);\n+    SampleObjectForTest value = gson.fromJson(json, SampleObjectForTest.class);\n+    assertEquals(1, value.annotatedField);\n+    assertEquals(\"x\", value.stringField);\n+    assertEquals(2, value.longField);\n+  }\n+\n   public void testExclusionStrategyDeserialization() throws Exception {\n     Gson gson = createGson(new MyExclusionStrategy(String.class), false);\n     JsonObject json = new JsonObject();\n     assertEquals(src.stringField, target.stringField);\n   }\n \n+  public void testExclusionStrategySerializationDoesNotImpactSerialization() throws Exception {\n+    Gson gson = createGson(new MyExclusionStrategy(String.class), false);\n+    String json = gson.toJson(src);\n+    assertTrue(json.contains(\"\\\"stringField\\\"\"));\n+    assertTrue(json.contains(\"\\\"annotatedField\\\"\"));\n+    assertTrue(json.contains(\"\\\"longField\\\"\"));\n+  }\n+\n   public void testExclusionStrategyWithMode() throws Exception {\n     SampleObjectForTest testObj = new SampleObjectForTest(\n         src.annotatedField + 5, src.stringField + \"blah,blah\",\n     // assert excluded fields are set to the defaults\n     assertEquals(src.annotatedField, target.annotatedField);\n     assertEquals(src.stringField, target.stringField);\n+  }\n+\n+  public void testExcludeTopLevelClassSerialization() {\n+    Gson gson = new GsonBuilder()\n+        .addSerializationExclusionStrategy(EXCLUDE_SAMPLE_OBJECT_FOR_TEST)\n+        .create();\n+    assertEquals(\"null\", gson.toJson(new SampleObjectForTest(), SampleObjectForTest.class));\n+  }\n+\n+  public void testExcludeTopLevelClassSerializationDoesNotImpactDeserialization() {\n+    Gson gson = new GsonBuilder()\n+        .addSerializationExclusionStrategy(EXCLUDE_SAMPLE_OBJECT_FOR_TEST)\n+        .create();\n+    String json = \"{\\\"annotatedField\\\":1,\\\"stringField\\\":\\\"x\\\",\\\"longField\\\":2}\";\n+    SampleObjectForTest value = gson.fromJson(json, SampleObjectForTest.class);\n+    assertEquals(1, value.annotatedField);\n+    assertEquals(\"x\", value.stringField);\n+    assertEquals(2, value.longField);\n+  }\n+\n+  public void testExcludeTopLevelClassDeserialization() {\n+    Gson gson = new GsonBuilder()\n+        .addDeserializationExclusionStrategy(EXCLUDE_SAMPLE_OBJECT_FOR_TEST)\n+        .create();\n+    String json = \"{\\\"annotatedField\\\":1,\\\"stringField\\\":\\\"x\\\",\\\"longField\\\":2}\";\n+    SampleObjectForTest value = gson.fromJson(json, SampleObjectForTest.class);\n+    assertNull(value);\n+  }\n+\n+  public void testExcludeTopLevelClassDeserializationDoesNotImpactSerialization() {\n+    Gson gson = new GsonBuilder()\n+        .addDeserializationExclusionStrategy(EXCLUDE_SAMPLE_OBJECT_FOR_TEST)\n+        .create();\n+    String json = gson.toJson(new SampleObjectForTest(), SampleObjectForTest.class);\n+    assertTrue(json.contains(\"\\\"stringField\\\"\"));\n+    assertTrue(json.contains(\"\\\"annotatedField\\\"\"));\n+    assertTrue(json.contains(\"\\\"longField\\\"\"));\n   }\n \n   private static Gson createGson(ExclusionStrategy exclusionStrategy, boolean serialization) {", "timestamp": 1325421287, "metainfo": ""}