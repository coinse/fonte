{"sha": "4f6a36d68fbc38f9fb4a84a43875e64676a73139", "log": "Support reading nulls into strings", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n \n package com.google.gson.internal.bind;\n \n+import com.google.gson.reflect.TypeToken;\n+import com.google.gson.stream.JsonReader;\n+import com.google.gson.stream.JsonToken;\n+import com.google.gson.stream.JsonWriter;\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n import java.util.StringTokenizer;\n import java.util.UUID;\n \n-import com.google.gson.reflect.TypeToken;\n-import com.google.gson.stream.JsonReader;\n-import com.google.gson.stream.JsonWriter;\n-\n /**\n  * Type adapters for basic types.\n  */\n \n   public static final TypeAdapter<String> STRING = new TypeAdapter<String>() {\n     public String read(JsonReader reader) throws IOException {\n+      if (reader.peek() == JsonToken.NULL) {\n+        reader.nextNull(); // TODO: does this belong here?\n+        return null;\n+      }\n       return reader.nextString();\n     }\n     public void write(JsonWriter writer, String value) throws IOException {", "timestamp": 1315539639, "metainfo": ""}