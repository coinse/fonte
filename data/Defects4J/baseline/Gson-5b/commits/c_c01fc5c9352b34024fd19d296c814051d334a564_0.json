{"sha": "c01fc5c9352b34024fd19d296c814051d334a564", "log": "Fix tests broken by r1078.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n     }\n   }\n \n-  public static final TypeAdapter.Factory ENUM_FACTORY = newEnumTypeHierarchyFactory(Enum.class);\n-\n-  public static <TT> TypeAdapter.Factory newEnumTypeHierarchyFactory(final Class<TT> clazz) {\n+  public static final TypeAdapter.Factory ENUM_FACTORY = newEnumTypeHierarchyFactory();\n+\n+  public static <TT> TypeAdapter.Factory newEnumTypeHierarchyFactory() {\n     return new TypeAdapter.Factory() {\n       @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n       public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\n         Class<? super T> rawType = typeToken.getRawType();\n-        return clazz.isAssignableFrom(rawType)\n-          ? (TypeAdapter<T>) new EnumTypeAdapter(rawType) : null;\n+        if (!Enum.class.isAssignableFrom(rawType) || rawType == Enum.class) {\n+          return null;\n+        }\n+        if (!rawType.isEnum()) {\n+          rawType = rawType.getSuperclass(); // handle anonymous subclasses\n+        }\n+        return (TypeAdapter<T>) new EnumTypeAdapter(rawType);\n       }\n     };\n   }", "timestamp": 1324044754, "metainfo": ""}