{"sha": "22c835f2bcd5ee39fd58556e01324f334c5f0cb7", "log": "Fix compile warnings", "commit": "\n--- a/gson/src/main/java/com/google/gson/Gson.java\n+++ b/gson/src/main/java/com/google/gson/Gson.java\n       reader.peek();\n       isEmpty = false;\n       TypeToken<T> typeToken = (TypeToken<T>) TypeToken.get(typeOfT);\n-      TypeAdapter<T> typeAdapter = (TypeAdapter<T>) getAdapter(typeToken);\n+      TypeAdapter<T> typeAdapter = getAdapter(typeToken);\n       T object = typeAdapter.read(reader);\n-      invokeInterceptorIfNeeded(object, typeToken.getRawType());\n+      invokeInterceptorIfNeeded(object, (Class<T>) typeToken.getRawType());\n       return object;\n     } catch (EOFException e) {\n       /*\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private <T> void invokeInterceptorIfNeeded(T object, Type type) {\n-    @SuppressWarnings(\"unchecked\")\n     TypeToken<T> typeToken = (TypeToken<T>) TypeToken.get(type);\n-    Class<? super T> clazz = typeToken.getRawType();\n+    Class<T> clazz = (Class<T>) typeToken.getRawType();\n     invokeInterceptorIfNeeded(object, clazz);\n   }\n ", "timestamp": 1350960014, "metainfo": ""}