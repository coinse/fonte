{"sha": "c6f762f36be0496874d05c733593ac030409eb4e", "log": "Fix Warnings", "commit": "\n--- a/gson/src/test/java/com/google/gson/ExposeAnnotationBasedExclusionStrategyTest.java\n+++ b/gson/src/test/java/com/google/gson/ExposeAnnotationBasedExclusionStrategyTest.java\n   @SuppressWarnings(\"unused\")\n   private static class MockObject {\n     @Expose\n-    public final int exposedField = 0;\n-    public final int hiddenField = 0;\n+    private final int exposedField = 0;\n+    private final int hiddenField = 0;\n   }\n }\n--- a/gson/src/test/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicyTest.java\n+++ b/gson/src/test/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicyTest.java\n   @SuppressWarnings(\"unused\")\n   private static class SomeObject {\n     @SerializedName(ANNOTATED_FIELD_NAME) public final int fieldWithAnnotation = 1;\n-    public final int fieldWithoutAnnotation = 1;\n+    private final int fieldWithoutAnnotation = 1;\n   }\n }\n--- a/gson/src/test/java/com/google/gson/TypeInfoFactoryTest.java\n+++ b/gson/src/test/java/com/google/gson/TypeInfoFactoryTest.java\n       TEST_1, TEST_2;\n     }\n \n-    public String simpleField;\n-    public TestEnum enumField;\n-    public List<String> simpleParameterizedType;\n-    public List<List<String>> simpleNestedParameterizedType;\n-    public List<String>[] simpleGenericArray;\n-\n-    public T typeVariableObj;\n-    public T[] typeVariableArray;\n-    public T[][][] mutliDimensionalTypeVariableArray;\n-    public List<T> listOfTypeVariables;\n-    public List<List<T>> listOfListsOfTypeVariables;\n-    public List<T>[] listOfTypeVariablesArray;\n-\n-    public List<?> listWithWildcard;\n-    public List<?>[] arrayOfListWithWildcard;\n-    public List<? extends String> listWithStringWildcard;\n-    public List<? extends String>[] arrayOfListWithStringWildcard;\n-\n-    public List<? extends T> listWithTypeVariableWildcard;\n-    public List<? extends T>[] arrayOfListWithTypeVariableWildcard;\n+    private String simpleField;\n+    private TestEnum enumField;\n+    private List<String> simpleParameterizedType;\n+    private List<List<String>> simpleNestedParameterizedType;\n+    private List<String>[] simpleGenericArray;\n+\n+    private T typeVariableObj;\n+    private T[] typeVariableArray;\n+    private T[][][] mutliDimensionalTypeVariableArray;\n+    private List<T> listOfTypeVariables;\n+    private List<List<T>> listOfListsOfTypeVariables;\n+    private List<T>[] listOfTypeVariablesArray;\n+\n+    private List<?> listWithWildcard;\n+    private List<?>[] arrayOfListWithWildcard;\n+    private List<? extends String> listWithStringWildcard;\n+    private List<? extends String>[] arrayOfListWithStringWildcard;\n+\n+    private List<? extends T> listWithTypeVariableWildcard;\n+    private List<? extends T>[] arrayOfListWithTypeVariableWildcard;\n   }\n }\n--- a/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java\n+++ b/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java\n \n     @SuppressWarnings(\"unused\")\n     @Since(VERSION)\n-    public final int someField = 0;\n+    private final int someField = 0;\n   }\n }\n--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CollectionTest.java\n \n     // For use by Gson\n     @SuppressWarnings({ \"unchecked\", \"unused\" })\n-    public ObjectWithWildcardCollection() {\n+    private ObjectWithWildcardCollection() {\n       this(Collections.EMPTY_LIST);\n     }\n     \n--- a/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java\n   \n   @SuppressWarnings(\"unused\")\n   private static class MyObject {\n-    String a;\n-    String b;\n-    int i;\n+    private String a;\n+    private String b;\n+    private int i;\n \n     MyObject() {\n       this(\"hello\", \"world\", 42);\n--- a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n   \n   private static class Derived extends Base {\n     @SuppressWarnings(\"unused\")\n-    int derivedValue = 3;\n+    private int derivedValue = 3;\n   }\n   \n   \n--- a/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java\n   \n   private static class SubTypeOfBagOfPrimitives extends BagOfPrimitives {\n     @SuppressWarnings(\"unused\")\n-    float f = 1.2F;\n+    private float f = 1.2F;\n     public SubTypeOfBagOfPrimitives(long l, int i, boolean b, String string, float f) {\n       super(l, i, b, string);\n       this.f = f;\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n     private static final long serialVersionUID = 1L;\n \n     @SuppressWarnings(\"unused\")\n-    int foo = 10;\n+    private int foo = 10;\n   }\n   \n   public void testMapSubclassSerialization() {\n     private static final long serialVersionUID = 1L;\n \n     @SuppressWarnings(\"unused\")\n-    int foo = 10;\n+    private int foo = 10;\n   }\n   \n   /**\n--- a/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java\n \n   @SuppressWarnings(\"unused\")\n   private static class ClassWithDuplicateFields {\n-    public Integer a;\n-    @SerializedName(\"a\") public Double b;\n+    private Integer a;\n+    @SerializedName(\"a\") private Double b;\n     \n     public ClassWithDuplicateFields(Integer a) {\n       this(a, null);\n--- a/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java\n \n   @SuppressWarnings(\"unused\")\n   private static class ClassWithMembers {\n-    String str;\n-    int[] array;\n-    Collection<String> col;\n+    private String str;\n+    private int[] array;\n+    private Collection<String> col;\n   }\n   \n   private static class ClassWithObjectsSerializer implements JsonSerializer<ClassWithObjects> {\n--- a/gson/src/test/java/com/google/gson/functional/ObjectTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ObjectTest.java\n \n   private static class ClassWithObjectField {\n     @SuppressWarnings(\"unused\")\n-    Object member;\n+    private Object member;\n   }\n   \n   public void testInnerClassSerialization() {    \n    \n   private static class Parent {\n     @SuppressWarnings(\"unused\")\n-    int value1 = 1;\n+    private int value1 = 1;\n     private class Child {\n       int value2 = 2;\n     }\n--- a/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java\n   // Begin: tests to reproduce issue 103\n   private static class Quantity {\n     @SuppressWarnings(\"unused\")\n-    int q = 10;\n+    private int q = 10;\n   }\n   private static class MyQuantity extends Quantity {\n     @SuppressWarnings(\"unused\")\n-    int q2 = 20;\n+    private int q2 = 20;\n   }\n   private interface Measurable<T> {    \n   }", "timestamp": 1253732941, "metainfo": ""}