{"sha": "bc6ec50db979108d83da3927684844f819a5e6e7", "log": "incorporated fixes from code review of r341", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java\n   }\n   \n   public void testDoubleNaNSerializationNotSupportedByDefault() {\n-    double nan = Double.NaN;\n-    try {\n+    try {\n+      double nan = Double.NaN;\n       gson.toJson(nan);\n+      fail(\"Gson should not accept NaN for serialization\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Double.NaN);\n       fail(\"Gson should not accept NaN for serialization\");\n     } catch (IllegalArgumentException expected) {      \n   }\n   \n   public void testFloatNaNSerializationNotSupportedByDefault() {\n-    float nan = Float.NaN;\n-    try {\n+    try {\n+      float nan = Float.NaN;\n       gson.toJson(nan);\n+      fail(\"Gson should not accept NaN for serialization\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Float.NaN);\n       fail(\"Gson should not accept NaN for serialization\");\n     } catch (IllegalArgumentException expected) {      \n   }\n \n   public void testDoubleInfinitySerializationNotSupportedByDefault() {\n-    double infinity = Double.POSITIVE_INFINITY;\n-    try {\n+    try {\n+      double infinity = Double.POSITIVE_INFINITY;\n       gson.toJson(infinity);\n+      fail(\"Gson should not accept positive infinity for serialization by default.\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Double.POSITIVE_INFINITY);\n       fail(\"Gson should not accept positive infinity for serialization by default.\");\n     } catch (IllegalArgumentException expected) {      \n   }\n   \n   public void testFloatInfinitySerializationNotSupportedByDefault() {\n-    float infinity = Float.POSITIVE_INFINITY;\n-    try {\n+    try {\n+      float infinity = Float.POSITIVE_INFINITY;\n       gson.toJson(infinity);\n+      fail(\"Gson should not accept positive infinity for serialization by default\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Float.POSITIVE_INFINITY);\n       fail(\"Gson should not accept positive infinity for serialization by default\");\n     } catch (IllegalArgumentException expected) {      \n   }\n   \n   public void testNegativeInfinitySerializationNotSupportedByDefault() {\n-    double negativeInfinity = Double.NEGATIVE_INFINITY;\n-    try {\n+    try {\n+      double negativeInfinity = Double.NEGATIVE_INFINITY;\n       gson.toJson(negativeInfinity);\n+      fail(\"Gson should not accept negative infinity for serialization by default\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Double.NEGATIVE_INFINITY);\n       fail(\"Gson should not accept negative infinity for serialization by default\");\n     } catch (IllegalArgumentException expected) {      \n   }\n   \n   public void testNegativeInfinityFloatSerializationNotSupportedByDefault() {\n-    float negativeInfinity = Float.NEGATIVE_INFINITY;\n-    try {\n+    try {\n+      float negativeInfinity = Float.NEGATIVE_INFINITY;\n       gson.toJson(negativeInfinity);\n+      fail(\"Gson should not accept negative infinity for serialization by default\");\n+    } catch (IllegalArgumentException expected) {      \n+    }\n+    try {\n       gson.toJson(Float.NEGATIVE_INFINITY);\n       fail(\"Gson should not accept negative infinity for serialization by default\");\n     } catch (IllegalArgumentException expected) {      ", "timestamp": 1230056653, "metainfo": ""}