{"sha": "ed415f692f22800e2db5be7a46226450cce94725", "log": "Ensuring that the HTTP connection is closed when the rest call is finished.", "commit": "\n--- a/wsclient/src/main/java/com/google/gson/webservice/client/RestClient.java\n+++ b/wsclient/src/main/java/com/google/gson/webservice/client/RestClient.java\n \n   public <R> RestResponse<R> getResponse(\n       RestCallSpec<R> callSpec, RestRequest<R> request, Gson gson) {\n+    HttpURLConnection conn = null;\n     try {\n       URL webServiceUrl = getWebServiceUrl(callSpec);\n       if (logger != null) {\n         logger.log(logLevel, \"Opening connection to \" + webServiceUrl);\n       }\n-      HttpURLConnection conn = (HttpURLConnection) webServiceUrl.openConnection();\n+      conn = (HttpURLConnection) webServiceUrl.openConnection();\n       RestRequestSender requestSender = new RestRequestSender(gson, logLevel);\n       requestSender.send(conn, request);\n       RestResponseReceiver<R> responseReceiver =\n       throw new WebServiceSystemException(e);\n     } catch (IllegalArgumentException e) {\n       throw new WebServiceSystemException(e);\n+    } finally {\n+      closeIgnoringErrors(conn);\n     }\n   }\n   \n+  private static void closeIgnoringErrors(HttpURLConnection conn) {\n+    if (conn != null) {\n+      conn.disconnect();\n+    }\n+  }\n+\n   @Override\n   public String toString() {\n     return String.format(\"config:%s\", config);", "timestamp": 1285849691, "metainfo": ""}