{"sha": "ee9ffa808a24d690dbffedb6bda4a18876c29fbd", "log": "If the reflective type isn't as expected, fail with a JsonSyntaxException", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java\n \n package com.google.gson.internal.bind;\n \n+import com.google.gson.JsonSyntaxException;\n import java.io.IOException;\n import java.lang.reflect.AccessibleObject;\n import java.lang.reflect.Constructor;\n \n     // TODO: null out the other fields?\n \n-    reader.beginObject();\n     try {\n+      reader.beginObject();\n       while (reader.hasNext()) {\n         String name = reader.nextName();\n         BoundField field = map.get(name);\n           field.read(reader, instance);\n         }\n       }\n+    } catch (IllegalStateException e) {\n+      throw new JsonSyntaxException(e);\n     } catch (IllegalAccessException e) {\n       throw new AssertionError();\n     }", "timestamp": 1315555857, "metainfo": ""}