{"sha": "e4ea6b1fd052705a8c2088ce36ee84db1961b4af", "log": "removed unused code.", "commit": "\n--- a/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java\n \n import java.lang.reflect.Field;\n import java.lang.reflect.Type;\n-import java.util.Collection;\n \n /**\n  * A visitor that populates fields of an object with data from its equivalent\n--- a/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n+++ b/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java\n import java.lang.reflect.Array;\n import java.lang.reflect.Field;\n import java.lang.reflect.Type;\n-import java.util.Collection;\n-import java.util.Map;\n \n /**\n  * A visitor that adds JSON elements corresponding to each field of an object\n       Preconditions.checkState(root.isJsonObject());\n       Object obj = f.get(parent);\n       JsonSerializer serializer = serializers.getHandlerFor(actualTypeOfField);\n-      if (serializer == null && obj instanceof Map) {\n-        serializer = serializers.getHandlerFor(Map.class);\n-      }\n-      if (serializer == null && obj instanceof Collection) {\n-        serializer = serializers.getHandlerFor(Collection.class);\n-      }\n       if (serializer != null) {\n         JsonElement child = serializer.serialize(obj, actualTypeOfField, context);\n         addChildAsElement(f, child);", "timestamp": 1226630612, "metainfo": ""}