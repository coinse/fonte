{"sha": "299ee89852f8e3ac510a939a2583515a6f1c3e87", "log": "Add tests to demonstrate the issue  Run the FieldNamingTest with the JVM options: `-Duser.language=tr -Duser.region=TR`", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/FieldNamingTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/FieldNamingTest.java\n import static com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES;\n import static com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE;\n import static com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE_WITH_SPACES;\n+\n+import com.google.gson.FieldNamingPolicy;\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.annotations.SerializedName;\n \n public final class FieldNamingTest extends TestCase {\n   public void testIdentity() {\n-    Gson gson = new GsonBuilder().setFieldNamingPolicy(IDENTITY).create();\n+    Gson gson = getGsonWithNamingPolicy(IDENTITY);\n     assertEquals(\"{'lowerCamel':1,'UpperCamel':2,'_lowerCamelLeadingUnderscore':3,\" +\n         \"'_UpperCamelLeadingUnderscore':4,'lower_words':5,'UPPER_WORDS':6,\" +\n-        \"'annotatedName':7}\",\n+        \"'annotatedName':7,'lowerId':8}\",\n         gson.toJson(new TestNames()).replace('\\\"', '\\''));\n   }\n \n   public void testUpperCamelCase() {\n-    Gson gson = new GsonBuilder().setFieldNamingPolicy(UPPER_CAMEL_CASE).create();\n+    Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE);\n     assertEquals(\"{'LowerCamel':1,'UpperCamel':2,'_LowerCamelLeadingUnderscore':3,\" +\n         \"'_UpperCamelLeadingUnderscore':4,'Lower_words':5,'UPPER_WORDS':6,\" +\n-        \"'annotatedName':7}\",\n+        \"'annotatedName':7,'LowerId':8}\",\n         gson.toJson(new TestNames()).replace('\\\"', '\\''));\n   }\n \n   public void testUpperCamelCaseWithSpaces() {\n-    Gson gson = new GsonBuilder().setFieldNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES).create();\n+    Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES);\n     assertEquals(\"{'Lower Camel':1,'Upper Camel':2,'_Lower Camel Leading Underscore':3,\" +\n         \"'_ Upper Camel Leading Underscore':4,'Lower_words':5,'U P P E R_ W O R D S':6,\" +\n-        \"'annotatedName':7}\",\n+        \"'annotatedName':7,'Lower Id':8}\",\n         gson.toJson(new TestNames()).replace('\\\"', '\\''));\n   }\n \n   public void testLowerCaseWithUnderscores() {\n-    Gson gson = new GsonBuilder().setFieldNamingPolicy(LOWER_CASE_WITH_UNDERSCORES).create();\n+    Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_UNDERSCORES);\n     assertEquals(\"{'lower_camel':1,'upper_camel':2,'_lower_camel_leading_underscore':3,\" +\n         \"'__upper_camel_leading_underscore':4,'lower_words':5,'u_p_p_e_r__w_o_r_d_s':6,\" +\n-        \"'annotatedName':7}\",\n+        \"'annotatedName':7,'lower_id':8}\",\n         gson.toJson(new TestNames()).replace('\\\"', '\\''));\n   }\n \n   public void testLowerCaseWithDashes() {\n-    Gson gson = new GsonBuilder().setFieldNamingPolicy(LOWER_CASE_WITH_DASHES).create();\n+    Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_DASHES);\n     assertEquals(\"{'lower-camel':1,'upper-camel':2,'_lower-camel-leading-underscore':3,\" +\n         \"'_-upper-camel-leading-underscore':4,'lower_words':5,'u-p-p-e-r_-w-o-r-d-s':6,\" +\n-        \"'annotatedName':7}\",\n+        \"'annotatedName':7,'lower-id':8}\",\n         gson.toJson(new TestNames()).replace('\\\"', '\\''));\n+  }\n+\n+  private Gson getGsonWithNamingPolicy(FieldNamingPolicy fieldNamingPolicy){\n+    return new GsonBuilder()\n+      .setFieldNamingPolicy(fieldNamingPolicy)\n+        .create();\n   }\n \n   @SuppressWarnings(\"unused\") // fields are used reflectively\n     int lower_words = 5;\n     int UPPER_WORDS = 6;\n     @SerializedName(\"annotatedName\") int annotated = 7;\n+    int lowerId = 8;\n   }\n }", "timestamp": 1433859158, "metainfo": ""}