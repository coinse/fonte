{"sha": "3e324cc8a409cfa278274dc116e8d24f44395ede", "log": "Added an example of using raw collection for serialization and deserialization with Gson.", "commit": "\n--- /dev/null\n+++ b/extras/src/main/java/com/google/gson/extras/examples/rawcollections/RawCollectionsExample.java\n+/*\n+ * Copyright (C) 2011 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.gson.extras.examples.rawcollections;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonParser;\n+\n+public class RawCollectionsExample {\n+  public static final String json = \"['hello',5,{name:'GREETINGS',source:'guest'}]\";\n+\n+  static class Event {\n+    private String name;\n+    private String source;\n+    private Event(String name, String source) {\n+      this.name = name;\n+      this.source = source;\n+    }\n+    @Override\n+    public String toString() {\n+      return String.format(\"(name=%s, source=%s)\", name, source);\n+    }\n+  }\n+  \n+  @SuppressWarnings(\"unchecked\")\n+  public static void main(String[] args) {\n+    Gson gson = new Gson();\n+    Collection collection = new ArrayList();\n+    collection.add(\"hello\");\n+    collection.add(5);\n+    collection.add(new Event(\"GREETINGS\", \"guest\"));\n+    String json2 = gson.toJson(collection);\n+    System.out.println(\"Using Gson.toJson() on a raw collection: \" + json2);\n+    JsonParser parser = new JsonParser();\n+    JsonArray array = parser.parse(json).getAsJsonArray();\n+    String message = gson.fromJson(array.get(0), String.class);\n+    int number = gson.fromJson(array.get(1), int.class);\n+    Event event = gson.fromJson(array.get(2), Event.class);\n+    System.out.printf(\"Using Gson.fromJson() to get: %s, %d, %s\", message, number, event);\n+  }\n+}", "timestamp": 1306521183, "metainfo": ""}