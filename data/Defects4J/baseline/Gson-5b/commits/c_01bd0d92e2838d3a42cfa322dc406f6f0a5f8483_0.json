{"sha": "01bd0d92e2838d3a42cfa322dc406f6f0a5f8483", "log": "Tests for LinkedTreeMap with incompatible keys.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java\n+++ b/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java\n     }\n   }\n \n-  // TODO(jwilson): don't throw ClassCastExceptions on unknown types\n   @SuppressWarnings(\"unchecked\") // this method throws ClassCastExceptions!\n   Node<K, V> findByObject(Object key) {\n     return key != null ? find((K) key, false) : null;\n--- a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n     assertIterationOrder(map.keySet(), \"a\", \"c\");\n   }\n \n-  // TODO: test contains with non-string key\n+  public void testPutNullKeyFails() {\n+    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();\n+    try {\n+      map.put(null, \"android\");\n+      fail();\n+    } catch (NullPointerException expected) {\n+    }\n+  }\n+\n+  public void testContainsNullKeyFails() {\n+    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();\n+    map.put(\"a\", \"android\");\n+    assertFalse(map.containsKey(null));\n+  }\n+\n+  public void testContainsNonComparableKeyThrows() {\n+    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();\n+    map.put(\"a\", \"android\");\n+    try {\n+      map.containsKey(new Object());\n+      fail();\n+    } catch (ClassCastException expected) {\n+    }\n+  }\n \n   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {\n     ArrayList<T> actualList = new ArrayList<T>();", "timestamp": 1347426408, "metainfo": ""}