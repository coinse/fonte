{"sha": "7e360b95e7aca387bca775f1fa80d52c707ccefe", "log": "Added tests to verify that custom serializer and deserializers for byte[] types works.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java\n     Boolean value;\n   }\n   \n+  public void testCustomByteArraySerializer() {\n+    Gson gson = new GsonBuilder().registerTypeAdapter(byte[].class, new JsonSerializer<byte[]>() {\n+      public JsonElement serialize(byte[] src, Type typeOfSrc, JsonSerializationContext context) {\n+        StringBuilder sb = new StringBuilder(src.length);\n+        for (byte b : src) {\n+          sb.append(b);\n+        }\n+        return new JsonPrimitive(sb.toString());\n+      }      \n+    }).create();\n+    byte[] data = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n+    String json = gson.toJson(data);\n+    assertEquals(\"\\\"0123456789\\\"\", json);\n+  }\n+  \n+  public void testCustomByteArrayDeserializerAndInstanceCreator() {\n+    GsonBuilder gsonBuilder = new GsonBuilder().registerTypeAdapter(byte[].class, \n+        new JsonDeserializer<byte[]>() {\n+      public byte[] deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+          throws JsonParseException {\n+        String str = json.getAsString();\n+        byte[] data = new byte[str.length()];\n+        for (int i = 0; i < data.length; ++i) {\n+          data[i] = Byte.parseByte(\"\"+str.charAt(i));\n+        }\n+        return data;\n+      }      \n+    });\n+    gsonBuilder.registerTypeAdapter(byte[].class, new InstanceCreator<byte[]>() {\n+      public byte[] createInstance(Type type) {\n+        return new byte[0];\n+      }      \n+    });\n+    Gson gson = gsonBuilder.create();\n+    String json = \"'0123456789'\";\n+    byte[] actual = gson.fromJson(json, byte[].class);\n+    byte[] expected = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n+    for (int i = 0; i < actual.length; ++i) {\n+      assertEquals(expected[i], actual[i]);\n+    }\n+  }\n+  \n   private static class StringHolder {\n     String part1;\n     String part2;", "timestamp": 1226706957, "metainfo": ""}