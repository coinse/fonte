{"sha": "82f18a257faafa4501d91003e72a33fdafe85bd0", "log": "Implemented code review comments from r1090", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java\n \n package com.google.gson.internal.bind;\n \n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.sql.Timestamp;\n+import java.util.BitSet;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.StringTokenizer;\n+import java.util.UUID;\n+\n import com.google.gson.Gson;\n import com.google.gson.JsonArray;\n import com.google.gson.JsonElement;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonToken;\n import com.google.gson.stream.JsonWriter;\n-import java.io.IOException;\n-import java.net.InetAddress;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.sql.Timestamp;\n-import java.util.BitSet;\n-import java.util.Calendar;\n-import java.util.Date;\n-import java.util.GregorianCalendar;\n-import java.util.HashMap;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.StringTokenizer;\n-import java.util.UUID;\n \n /**\n  * Type adapters for basic types.\n   public static final TypeAdapter<Class> CLASS = new TypeAdapter<Class>() {\n \t@Override\n \tpublic void write(JsonWriter out, Class value) throws IOException {\n-\t  if (value == null) {\n-\t    return;\n-\t  }\n \t  throw new UnsupportedOperationException(\"Attempted to serialize java.lang.Class: \"\n \t      + value.getName() + \". Forgot to register a type adapter?\");\n \t}", "timestamp": 1324655530, "metainfo": ""}