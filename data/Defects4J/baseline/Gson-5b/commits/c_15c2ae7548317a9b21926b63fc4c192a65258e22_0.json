{"sha": "15c2ae7548317a9b21926b63fc4c192a65258e22", "log": "Updated map subclass deserialization test to illustrate a failing condition. Gson currently uses LinkedHashMap for an instance if a Map subclass does not define a default constructor.", "commit": "\n--- a/gson/src/test/java/com/google/gson/functional/MapTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/MapTest.java\n   }\n \n   public void testParameterizedMapSubclassSerialization() {\n-    MyParameterizedMap<String, String> map = new MyParameterizedMap<String, String>();\n+    MyParameterizedMap<String, String> map = new MyParameterizedMap<String, String>(10);\n     map.put(\"a\", \"b\");\n     Type type = new TypeToken<MyParameterizedMap<String, String>>() {}.getType();\n     String json = gson.toJson(map, type);\n     assertEquals(2, map.get(\"b\").intValue());\n   }\n \n+  @SuppressWarnings({ \"unused\", \"serial\" })\n   private static class MyParameterizedMap<K, V> extends LinkedHashMap<K, V> {\n-    private static final long serialVersionUID = 1L;\n-\n-    @SuppressWarnings(\"unused\")\n-    int foo = 10;\n+    final int foo;\n+    MyParameterizedMap(int foo) {\n+      this.foo = foo;\n+    }\n   }\n \n   public void testMapSubclassSerialization() {", "timestamp": 1331501833, "metainfo": ""}