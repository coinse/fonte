{"sha": "b4eb810347ac073c29b62bb0fc2c70c40376aafb", "log": "Comments for r766.", "commit": "\n--- a/gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java\n+++ b/gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java\n   }\n \n   // for testing purpose\n-  final Cache<Class<?>, Constructor<?>> getConstructorCache() {\n-    return constructorCache;\n+  final boolean isInCache(Class<?> cacheKey) {\n+    return constructorCache.getElement(cacheKey) != null;\n   }\n \n   private static final Constructor<Null> createNullConstructor() {\n--- a/gson/src/test/java/com/google/gson/DefaultConstructorAllocatorTest.java\n+++ b/gson/src/test/java/com/google/gson/DefaultConstructorAllocatorTest.java\n  */\n \n package com.google.gson;\n-\n-import com.google.gson.DefaultConstructorAllocator;\n \n import junit.framework.TestCase;\n \n   public void testObjectConstructor() throws Exception {\n     ArrayList<Object> arrayList = allocator.newInstance(ArrayList.class);\n     assertTrue(arrayList.isEmpty());\n-    assertInCache(ArrayList.class);\n+    assertTrue(allocator.isInCache(ArrayList.class));\n \n     LinkedList<Object> linkedList = allocator.newInstance(LinkedList.class);\n     assertTrue(linkedList.isEmpty());\n-    assertInCache(LinkedList.class);\n+    assertTrue(allocator.isInCache(LinkedList.class));\n   }\n \n   public void testMissingDefaultConstructor() throws Exception {\n     assertNull(allocator.newInstance(NoDefaultConstructor.class));\n-    assertInCache(NoDefaultConstructor.class);\n-  }\n-\n-  private void assertInCache(Class<?> clazz) {\n-    assertNotNull(allocator.getConstructorCache().getElement(clazz));\n+    assertTrue(allocator.isInCache(NoDefaultConstructor.class));\n   }\n \n   private static class NoDefaultConstructor {", "timestamp": 1302048160, "metainfo": ""}