{"sha": "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f", "log": "Fixed a bug where an inner static class was incorrectly marked as non-static while creating parameterized types.", "commit": "\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n import java.lang.reflect.Array;\n import java.lang.reflect.GenericArrayType;\n import java.lang.reflect.GenericDeclaration;\n+import java.lang.reflect.Modifier;\n import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n import java.lang.reflect.TypeVariable;\n       // require an owner type if the raw type needs it\n       if (rawType instanceof Class<?>) {\n         Class<?> rawTypeAsClass = (Class<?>) rawType;\n-        checkArgument(ownerType != null || rawTypeAsClass.getEnclosingClass() == null);\n-        checkArgument(ownerType == null || rawTypeAsClass.getEnclosingClass() != null);\n+        boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n+            || rawTypeAsClass.getEnclosingClass() == null;\n+        checkArgument(ownerType != null || isStaticOrTopLevelClass);\n+        checkArgument(ownerType == null || !isStaticOrTopLevelClass);\n       }\n \n       this.ownerType = ownerType == null ? null : canonicalize(ownerType);", "timestamp": 1394305944, "metainfo": ""}