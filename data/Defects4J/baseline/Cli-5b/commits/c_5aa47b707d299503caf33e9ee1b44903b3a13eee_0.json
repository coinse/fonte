{"sha": "5aa47b707d299503caf33e9ee1b44903b3a13eee", "log": "added iterator method to CommandLine for the processed Options, refactored CommandLine   ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/java/org/apache/commons/cli/CommandLine.java\n \n package org.apache.commons.cli;\n \n+import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.LinkedList;\n import java.util.Map;\n-import java.util.HashMap;\n \n /** <p>Represents list of arguments parsed against\n  * a {@link Options} descriptor.<p>\n     /** the recognised options/arguments */\n     private Map  options = new HashMap();\n \n-    /** the option types */\n-    private Map  types   = new HashMap();\n-\n     /**\n      * <p>Creates a command line.</p>\n      */\n      * @param opt the name of the option\n      * @return the type of opt\n      */\n-    public Object getOptionObject(String opt) {\n+    public Object getOptionObject( String opt ) {\n         String res = getOptionValue( opt );\n-        Object type = types.get( opt );\n+        Object type = ((Option)options.get( opt )).getType();\n         return res == null ? null : TypeHandler.createValue(res, type);\n     }\n \n      * @param opt the name of the option\n      * @return Value of the argument if option is set, and has an argument, else null.\n      */\n-    public String getOptionValue(String opt) {\n-        String[] result = (String[])options.get( opt );\n-        return result == null ? null : result[0];\n+    public String getOptionValue( String opt ) {\n+        return (String)((Option)options.get( opt )).getValue();\n     }\n \n     /** <p>Retrieves the array of values, if any, of an option.</p>\n      * @param opt Single-character name of the option\n      * @return An array of values if the option is set, and has an argument, else null.\n      */\n-    public String[] getOptionValues(String opt) {\n-        String[] result = (String[])options.get( opt );\n-        return result == null ? null : result;\n+    public String[] getOptionValues( String opt ) {\n+        return (String[])((Option)options.get( opt )).getValues();\n     }\n     \n     /** <p>Retrieve the argument, if any,  of an option.</p>\n      * @param defaultValue is the default value to be returned if the option is not specified\n      * @return Value of the argument if option is set, and has an argument, else null.\n      */\n-    public String getOptionValue(String opt, String defaultValue) {\n-        String answer = getOptionValue(opt);\n-        return (answer != null) ? answer : defaultValue;\n+    public String getOptionValue( String opt, String defaultValue ) {\n+        String answer = getOptionValue( opt );\n+        return ( answer != null ) ? answer : defaultValue;\n     }\n     \n     /** <p>Retrieve any left-over non-recognized options and arguments</p>\n     void addArg(String arg) {\n         args.add( arg );\n     }\n-    \n-    /**\n-     * <p>Add an option that does not have any value to the \n-     * command line.</p>\n-     *\n-     * @param opt the processed option\n-     */\n-    void setOpt(String opt) {\n-        options.put( opt, null );\n-    }\n-    \n-    /**\n-     * <p>Add an option with the specified value to the \n-     * command line.</p>\n-     *\n-     * @param opt the processed option\n-     * @param value the value of the option\n-     */\n-    void setOpt(String opt, String value) {\n-        options.put( opt, value );\n-    }\n-    \n+        \n     /**\n      * <p>Add an option to the command line.  The values of \n      * the option are stored.</p>\n      *\n      * @param opt the processed option\n      */\n-    void setOpt(Option opt) {\n-        options.put( opt.getOpt(), opt.getValues() );\n-        types.put( opt.getOpt(), opt.getType() );\n-    }\n+    void setOpt( Option opt ) {\n+        options.put( opt.getOpt(), opt );\n+    }\n+\n+    /**\n+     * <p>Returns an iterator over the Option members of CommandLine.</p>\n+     *\n+     * @return an <code>Iterator</code> over the processed {@link Option} \n+     * members of this {@link CommandLine}\n+     */\n+    public Iterator iterator( ) {\n+        return options.values().iterator();\n+    }\n+\n }\n--- a/src/java/org/apache/commons/cli/Option.java\n+++ b/src/java/org/apache/commons/cli/Option.java\n     }\n \n     /**\n-     * @return the value/first value of this Option or null if there are no\n-     * values\n+     * @return the value/first value of this Option or \n+     * null if there are no values.\n      */\n     public String getValue() {\n         return this.values.size()==0 ? null : (String)this.values.get( 0 );\n     }\n \n     /**\n+     * @return the value/first value of this Option or the \n+     * <code>defaultValue</code> if there are no values.\n+     */\n+    public String getValue( String defaultValue ) {\n+        String value = getValue( );\n+        return ( value != null ) ? value : defaultValue;\n+    }\n+\n+    /**\n      * @return the values of this Option or null if there are no\n      * values\n      */", "timestamp": 1028154269, "metainfo": ""}