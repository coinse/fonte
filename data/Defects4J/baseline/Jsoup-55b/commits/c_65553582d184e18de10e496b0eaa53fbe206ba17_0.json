{"sha": "65553582d184e18de10e496b0eaa53fbe206ba17", "log": "Combine header values with comma  Fixes #618", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n             statusMessage = conn.getResponseMessage();\n             contentType = conn.getContentType();\n \n-            Map<String, List<String>> resHeaders = conn.getHeaderFields();\n+            Map<String, List<String>> resHeaders = createHeaderMap(conn);\n             processResponseHeaders(resHeaders);\n \n             // if from a redirect, map previous response cookies into this response\n                         cookie(prevCookie.getKey(), prevCookie.getValue());\n                 }\n             }\n+        }\n+\n+        private static LinkedHashMap<String, List<String>> createHeaderMap(HttpURLConnection conn) {\n+            // the default sun impl of conn.getHeaderFields() returns header values out of order\n+            final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();\n+            int i = 0;\n+            while (true) {\n+                final String key = conn.getHeaderFieldKey(i);\n+                final String val = conn.getHeaderField(i);\n+                if (key == null && val == null)\n+                    break;\n+                i++;\n+                if (key == null || val == null)\n+                    continue; // skip http1.1 line\n+\n+                if (headers.containsKey(key))\n+                    headers.get(key).add(val);\n+                else {\n+                    final ArrayList<String> vals = new ArrayList<String>();\n+                    vals.add(val);\n+                    headers.put(key, vals);\n+                }\n+            }\n+            return headers;\n         }\n \n         void processResponseHeaders(Map<String, List<String>> resHeaders) {\n                         if (cookieName.length() > 0)\n                             cookie(cookieName, cookieVal);\n                     }\n-                } else { // only take the first instance of each header\n-                    if (!values.isEmpty())\n+                } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n+                    if (values.size() == 1)\n                         header(name, values.get(0));\n+                    else if (values.size() > 1) {\n+                        StringBuilder accum = new StringBuilder();\n+                        for (int i = 0; i < values.size(); i++) {\n+                            final String val = values.get(i);\n+                            if (i != 0)\n+                                accum.append(\", \");\n+                            accum.append(val);\n+                        }\n+                        header(name, accum.toString());\n+                    }\n                 }\n             }\n         }\n--- a/src/test/java/org/jsoup/helper/HttpConnectionTest.java\n+++ b/src/test/java/org/jsoup/helper/HttpConnectionTest.java\n         res.header(\"accept-encoding\", \"deflate\");\n         assertEquals(\"deflate\", res.header(\"Accept-Encoding\"));\n         assertEquals(\"deflate\", res.header(\"accept-Encoding\"));\n+    }\n+\n+    @Test public void sameHeadersCombineWithComma() {\n+        Map<String, List<String>> headers = new HashMap<String, List<String>>();\n+        List<String> values = new ArrayList<String>();\n+        values.add(\"no-cache\");\n+        values.add(\"no-store\");\n+        headers.put(\"Cache-Control\", values);\n+        HttpConnection.Response res = new HttpConnection.Response();\n+        res.processResponseHeaders(headers);\n+        assertEquals(\"no-cache, no-store\", res.header(\"Cache-Control\"));\n     }\n \n     @Test public void ignoresEmptySetCookies() {\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n         Connection.Response res = con.execute();\n         assertEquals(\"asdfg123\", res.cookie(\"token\")); // confirms that cookies set on 1st hit are presented in final result\n         Document doc = res.parse();\n-        assertEquals(\"uid=jhy; token=asdfg123\", ihVal(\"HTTP_COOKIE\", doc)); // confirms that redirected hit saw cookie\n+        assertEquals(\"token=asdfg123; uid=jhy\", ihVal(\"HTTP_COOKIE\", doc)); // confirms that redirected hit saw cookie\n     }\n \n     @Test\n \n         // send those cookies into the echo URL by map:\n         Document doc = Jsoup.connect(echoURL).cookies(cookies).get();\n-        assertEquals(\"uid=jhy; token=asdfg123\", ihVal(\"HTTP_COOKIE\", doc));\n+        assertEquals(\"token=asdfg123; uid=jhy\", ihVal(\"HTTP_COOKIE\", doc));\n     }\n \n     @Test\n         assertEquals(\"<html> <head></head> <body> <xml> <link>one <table> Two </table> </xml> </body> </html>\", StringUtil.normaliseWhitespace(doc.outerHtml()));\n     }\n \n+    @Test\n+    public void combinesSameHeadersWithComma() throws IOException {\n+        // http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n+        String url = \"http://direct.infohound.net/tools/q.pl\";\n+        Connection con = Jsoup.connect(url);\n+        con.get();\n+\n+        assertEquals(\"text/html\", con.response().header(\"Content-Type\"));\n+        assertEquals(\"no-cache, no-store\", con.response().header(\"Cache-Control\"));\n+    }\n+\n }", "timestamp": 1440974863, "metainfo": ""}