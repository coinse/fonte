{"sha": "63b778a5b41e75cb46a817fbdcc8e65db740a46c", "log": "Code cleanup", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n             }\n             outStream.write(buffer, 0, read);\n         }\n-        ByteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());\n-        return byteData;\n+        return ByteBuffer.wrap(outStream.toByteArray());\n     }\n \n     static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException {\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n      * </ul>\n      */\n     private void ensureMetaCharsetElement() {\n-        if (updateMetaCharset == true) {\n+        if (updateMetaCharset) {\n             OutputSettings.Syntax syntax = outputSettings().syntax();\n \n             if (syntax == OutputSettings.Syntax.html) {\n--- a/src/main/java/org/jsoup/nodes/FormElement.java\n+++ b/src/main/java/org/jsoup/nodes/FormElement.java\n         Connection.Method method = attr(\"method\").toUpperCase().equals(\"POST\") ?\n                 Connection.Method.POST : Connection.Method.GET;\n \n-        Connection con = Jsoup.connect(action)\n+        return Jsoup.connect(action)\n                 .data(formData())\n                 .method(method);\n-\n-        return con;\n     }\n \n     /**\n--- a/src/main/java/org/jsoup/nodes/XmlDeclaration.java\n+++ b/src/main/java/org/jsoup/nodes/XmlDeclaration.java\n     public String getWholeDeclaration() {\n         final String decl = attributes.get(DECL_KEY);\n         \n-        if( decl.equals(\"xml\") == true && attributes.size() > 1 ) {\n+        if(decl.equals(\"xml\") && attributes.size() > 1 ) {\n             StringBuilder sb = new StringBuilder(decl);\n             final String version = attributes.get(\"version\");\n             \n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n     \n     public Document parseInput(String html, String baseUri) {\n         errors = isTrackErrors() ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();\n-        Document doc = treeBuilder.parse(html, baseUri, errors);\n-        return doc;\n+        return treeBuilder.parse(html, baseUri, errors);\n     }\n \n     // gets & sets\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n                 pos++;\n         }\n \n-        String data = queue.substring(start, pos); \n-        return data; \n+        return queue.substring(start, pos);\n     }\n \n     /**\n             pos++;\n         }\n \n-        String data = queue.substring(start, pos); \n-        return data; \n+        return queue.substring(start, pos);\n     }\n \n     /**", "timestamp": 1429307444, "metainfo": ""}