{"sha": "674dab0387c4bfad01465574c4be6ea4b3f4f6e9", "log": "Optimise adding nodes to end of childnode list.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n     }\n \n     protected void addChildren(Node... children) {\n-        addChildren(childNodes.size(), children);\n+        //most used. short circuit addChildren(int), which hits reindex children and array copy\n+        for (Node child: children) {\n+            reparentChild(child);\n+            childNodes.add(child);\n+            child.setSiblingIndex(childNodes.size()-1);\n+        }\n     }\n \n     protected void addChildren(int index, Node... children) {\n         Validate.noNullElements(children);\n         for (int i = children.length - 1; i >= 0; i--) {\n             Node in = children[i];\n-            if (in.parentNode != null)\n-                in.parentNode.removeChild(in);\n-            \n+            reparentChild(in);\n             childNodes.add(index, in);\n-            in.setParentNode(this);\n         }\n         reindexChildren();\n+    }\n+\n+    private void reparentChild(Node child) {\n+        if (child.parentNode != null)\n+            child.parentNode.removeChild(child);\n+        child.setParentNode(this);\n     }\n     \n     private void reindexChildren() {\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         div.appendElement(\"P\").attr(\"class\", \"second\").text(\"now\");\n         assertEquals(\"<html><head></head><body><div id=\\\"1\\\"><p>Hello</p><p>there</p><p class=\\\"second\\\">now</p></div></body></html>\",\n                 TextUtil.stripNewlines(doc.html()));\n+\n+        // check sibling index (with short circuit on reindexChildren):\n+        Elements ps = doc.select(\"p\");\n+        for (int i = 0; i < ps.size(); i++) {\n+            assertEquals(i, ps.get(i).siblingIndex);\n+        }\n     }\n \n     @Test public void testAppendRowToTable() {\n         table.prepend(\"<tr><td>2</td></tr>\");\n \n         assertEquals(\"<table><tr><td>2</td></tr><tr><td>1</td></tr></table>\", TextUtil.stripNewlines(doc.body().html()));\n+\n+        // check sibling index (reindexChildren):\n+        Elements ps = doc.select(\"tr\");\n+        for (int i = 0; i < ps.size(); i++) {\n+            assertEquals(i, ps.get(i).siblingIndex);\n+        }\n     }\n     \n     @Test public void testPrependElement() {\n         Element div = doc.getElementById(\"1\");\n         div.append(\"<p>there</p><p>now</p>\");\n         assertEquals(\"<p>Hello</p><p>there</p><p>now</p>\", TextUtil.stripNewlines(div.html()));\n+\n+        // check sibling index (no reindexChildren):\n+        Elements ps = doc.select(\"p\");\n+        for (int i = 0; i < ps.size(); i++) {\n+            assertEquals(i, ps.get(i).siblingIndex);\n+        }\n     }\n     \n     @Test public void testPrependNewHtml() {\n         Element div = doc.getElementById(\"1\");\n         div.prepend(\"<p>there</p><p>now</p>\");\n         assertEquals(\"<p>there</p><p>now</p><p>Hello</p>\", TextUtil.stripNewlines(div.html()));\n+\n+        // check sibling index (reindexChildren):\n+        Elements ps = doc.select(\"p\");\n+        for (int i = 0; i < ps.size(); i++) {\n+            assertEquals(i, ps.get(i).siblingIndex);\n+        }\n     }\n     \n     @Test public void testSetHtml() {", "timestamp": 1309605117, "metainfo": ""}