{"sha": "a97385eb2870d113427b0d9430e108236ae363b4", "log": "Fixed issue with :all pseudo-tag in HTML sanitizer when cleaning tags  Fixes #156", "commit": "\n--- a/src/main/java/org/jsoup/safety/Whitelist.java\n+++ b/src/main/java/org/jsoup/safety/Whitelist.java\n                     return true;\n                 }\n             }\n-        } else { // no attributes defined for tag, try :all tag\n-            return !tagName.equals(\":all\") && isSafeAttribute(\":all\", el, attr);\n-        }\n-        return false;\n+        }\n+        // no attributes defined for tag, try :all tag\n+        return !tagName.equals(\":all\") && isSafeAttribute(\":all\", el, attr);\n     }\n \n     private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n--- a/src/test/java/org/jsoup/safety/CleanerTest.java\n+++ b/src/test/java/org/jsoup/safety/CleanerTest.java\n         String preserved = Jsoup.clean(html, Whitelist.basicWithImages().addProtocols(\"img\", \"src\", \"cid\", \"data\"));\n         assertEquals(\"<img src=\\\"cid:12345\\\" /> \\n<img src=\\\"data:gzzt\\\" />\", preserved);\n     }\n+\n+    @Test public void handlesAllPseudoTag() {\n+        String html = \"<p class='foo' src='bar'><a class='qux'>link</a></p>\";\n+        Whitelist whitelist = new Whitelist()\n+                .addAttributes(\":all\", \"class\")\n+                .addAttributes(\"p\", \"style\")\n+                .addTags(\"p\", \"a\");\n+\n+        String clean = Jsoup.clean(html, whitelist);\n+        assertEquals(\"<p class=\\\"foo\\\"><a class=\\\"qux\\\">link</a></p>\", clean);\n+    }\n }", "timestamp": 1336290648, "metainfo": ""}