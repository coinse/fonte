{"sha": "f31916f55db7d57b67b71c469105978692b88cf5", "log": "Tweaked Element#select documentation to reinforce CSS selector syntax.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n     }\n \n     /**\n-     * Find elements that match the {@link Selector} query, with this element as the starting context. Matched elements\n+     * Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\n      * may include this element, or any of its children.\n      * <p/>\n      * This method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\n      * <p/>\n      * See the query syntax documentation in {@link org.jsoup.select.Selector}.\n      *\n-     * @param query a {@link Selector} query\n+     * @param cssQuery a {@link Selector} CSS-like query\n      * @return elements that match the query (empty if none match)\n      * @see org.jsoup.select.Selector\n      */\n-    public Elements select(String query) {\n-        return Selector.select(query, this);\n+    public Elements select(String cssQuery) {\n+        return Selector.select(cssQuery, this);\n     }\n     \n     /**\n--- a/src/main/java/org/jsoup/select/Selector.java\n+++ b/src/main/java/org/jsoup/select/Selector.java\n  * <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  * <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  * <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n- * <tr><td><code>:not(<em>selector</em>)</code></td><td>elements that do not match the <em>selector</em>. See also {@link Elements#not(String)}</td><code>div:not(.logo)</code> finds all divs that do not have the \"logo\" class</td></tr>\n+ * <tr><td><code>:not(<em>selector</em>)</code></td><td>elements that do not match the <em>selector</em>. See also {@link Elements#not(String)}</td><code>div:not(.logo)</code> finds all divs that do not have the \"logo\" class.<br /><code>div:not(:has(div))</code> finds divs that do not contain divs.</code></td></tr>\n  * <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  * <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  * <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>", "timestamp": 1314667659, "metainfo": ""}