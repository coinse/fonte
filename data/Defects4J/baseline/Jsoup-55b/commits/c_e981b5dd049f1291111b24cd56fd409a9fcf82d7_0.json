{"sha": "e981b5dd049f1291111b24cd56fd409a9fcf82d7", "log": "Methods renamed.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n         normaliseStructure(\"head\", htmlEl);\n         normaliseStructure(\"body\", htmlEl);\n         \n-        ensureMetaCharset();\n+        ensureMetaCharsetElement();\n         \n         return this;\n     }\n      * charset / encoding element within the document.\n      * \n      * <p>This enables\n-     * {@link #updateMetaCharset(boolean) meta charset update}.</p>\n+     * {@link #updateMetaCharsetElement(boolean) meta charset update}.</p>\n      * \n      * <p>If there's no element with charset / encoding information yet it will\n      * be created. Obsolete charset / encoding definitions are removed!</p>\n      * \n      * @param charset Charset\n      * \n-     * @see #updateMetaCharset(boolean) \n+     * @see #updateMetaCharsetElement(boolean) \n      * @see OutputSettings#charset(java.nio.charset.Charset) \n      */\n     public void charset(Charset charset) {\n-        updateMetaCharset(true);\n+        Document.this.updateMetaCharsetElement(true);\n         outputSettings.charset(charset);\n-        ensureMetaCharset();\n+        ensureMetaCharsetElement();\n     }\n     \n     /**\n      * \n      * @see #charset(java.nio.charset.Charset) \n      */\n-    public void updateMetaCharset(boolean update) {\n+    public void updateMetaCharsetElement(boolean update) {\n         this.updateMetaCharset = true;\n     }\n     \n      * @return Returns <tt>true</tt> if the element is updated on charset\n      * changes, <tt>false</tt> if not\n      */\n-    public boolean updateMetaCharset() {\n+    public boolean updateMetaCharsetElement() {\n         return updateMetaCharset;\n     }\n \n     \n     /**\n      * Ensures a meta charset (html) or xml declaration (xml) with the current\n-     * encoding used. This only applies with {@link #updateMetaCharset(boolean)\n-     * updateMetaCharset} set to <tt>true</tt>, otherwise this method does\n-     * nothing.\n+     * encoding used. This only applies with\n+     * {@link #updateMetaCharsetElement(boolean) updateMetaCharset} set to\n+     * <tt>true</tt>, otherwise this method does nothing.\n      * \n      * <ul>\n      * <li>An exsiting element gets updated with the current charset</li>\n      * <li><b>Xml:</b> <i>&lt;?xml version=\"1.0\" encoding=\"CHARSET\"&gt;</i></li>\n      * </ul>\n      */\n-    private void ensureMetaCharset() {\n+    private void ensureMetaCharsetElement() {\n         if (updateMetaCharset == true) {\n             OutputSettings.Syntax syntax = outputSettings().syntax();\n \n--- a/src/test/java/org/jsoup/nodes/DocumentTest.java\n+++ b/src/test/java/org/jsoup/nodes/DocumentTest.java\n     @Test\n     public void testMetaCharsetUpdateUtf8() {\n         final Document doc = createHtmlDocument(\"changeThis\");\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetUtf8));\n         \n         final String htmlCharsetUTF8 = \"<html>\\n\" +\n     @Test\n     public void testMetaCharsetUpdateIso8859() {\n         final Document doc = createHtmlDocument(\"changeThis\");\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetIso8859));\n         \n         final String htmlCharsetISO = \"<html>\\n\" +\n     @Test\n     public void testMetaCharsetUpdateNoCharset() {\n         final Document docNoCharset = Document.createShell(\"\");\n-        docNoCharset.updateMetaCharset(true);\n+        docNoCharset.updateMetaCharsetElement(true);\n         docNoCharset.charset(Charset.forName(charsetUtf8));\n         \n         assertEquals(charsetUtf8, docNoCharset.select(\"meta[charset]\").first().attr(\"charset\"));\n     @Test\n     public void testMetaCharsetUpdateCleanup() {\n         final Document doc = createHtmlDocument(\"dontTouch\");\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetUtf8));\n         \n         final String htmlCharsetUTF8 = \"<html>\\n\" +\n     @Test\n     public void testMetaCharsetUpdateXmlUtf8() {\n         final Document doc = createXmlDocument(\"1.0\", \"changeThis\", true);\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetUtf8));\n         \n         final String xmlCharsetUTF8 = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetUtf8 + \"\\\">\\n\" +\n     @Test\n     public void testMetaCharsetUpdateXmlIso8859() {\n         final Document doc = createXmlDocument(\"1.0\", \"changeThis\", true);\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetIso8859));\n         \n         final String xmlCharsetISO = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetIso8859 + \"\\\">\\n\" +\n     @Test\n     public void testMetaCharsetUpdateXmlNoCharset() {\n         final Document doc = createXmlDocument(\"1.0\", \"none\", false);\n-        doc.updateMetaCharset(true);\n+        doc.updateMetaCharsetElement(true);\n         doc.charset(Charset.forName(charsetUtf8));\n         \n         final String xmlCharsetUTF8 = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetUtf8 + \"\\\">\\n\" +\n     @Test\n     public void testMetaCharsetUpdatedDisabledPerDefault() {\n         final Document doc = createHtmlDocument(\"none\");\n-        assertFalse(doc.updateMetaCharset());\n+        assertFalse(doc.updateMetaCharsetElement());\n     }\n     \n     private Document createHtmlDocument(String charset) {", "timestamp": 1428514954, "metainfo": ""}