{"sha": "f148f88de365c50eea28d3e14093e13c33104483", "log": "Normalize invalid attribute names in XML when converting  Fixes #721", "commit": "\n--- a/src/main/java/org/jsoup/helper/W3CDom.java\n+++ b/src/main/java/org/jsoup/helper/W3CDom.java\n \n         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {\n             for (Attribute attribute : source.attributes()) {\n-                el.setAttribute(attribute.getKey(), attribute.getValue());\n+                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]\n+                String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");\n+                if (key.matches(\"[a-zA-Z_:]{1}[-a-zA-Z0-9_:.]*\"))\n+                    el.setAttribute(key, attribute.getValue());\n             }\n         }\n \n--- a/src/test/java/org/jsoup/helper/W3CDomTest.java\n+++ b/src/test/java/org/jsoup/helper/W3CDomTest.java\n \n import org.jsoup.Jsoup;\n import org.jsoup.integration.ParseTest;\n+import org.jsoup.nodes.Element;\n import org.junit.Test;\n import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n         assertEquals(\"section\", xSection.getLocalName());\n         assertEquals(\"x:section\", xSection.getNodeName());\n     }\n+\n+    @Test\n+    public void handlesInvalidAttributeNames() {\n+        String html = \"<html><head></head><body style=\\\"color: red\\\" \\\" name\\\"></body></html>\";\n+        org.jsoup.nodes.Document jsoupDoc;\n+        jsoupDoc = Jsoup.parse(html);\n+        Element body = jsoupDoc.select(\"body\").first();\n+        assertTrue(body.hasAttr(\"\\\"\")); // actually an attribute with key '\"'. Correct per HTML5 spec, but w3c xml dom doesn't dig it\n+        assertTrue(body.hasAttr(\"name\\\"\"));\n+\n+        Document w3Doc = new W3CDom().fromJsoup(jsoupDoc);\n+    }\n }\n ", "timestamp": 1470440500, "metainfo": ""}