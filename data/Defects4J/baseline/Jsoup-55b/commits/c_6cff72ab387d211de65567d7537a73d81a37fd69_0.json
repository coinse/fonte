{"sha": "6cff72ab387d211de65567d7537a73d81a37fd69", "log": "Parsing performance optimisation.  Modified TokenQueue chompTo method to use indexOf to allow rapid scan for next token.", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n package org.jsoup.parser;\n \n import org.apache.commons.lang.Validate;\n-\n-import java.util.LinkedList;\n-import java.util.List;\n \n /**\n  * A character queue with parsing helpers.\n  */\n public class TokenQueue {\n     private StringBuilder queue;\n+    private StringBuilder lcQueue; // lower-cased clone of the queue, for faster matching \n     private int pos = 0;\n+    \n     private static final Character ESC = '\\\\'; // escape char for chomp balanced.\n \n     /**\n         Validate.notNull(data);\n \n         queue = new StringBuilder(data);\n+        lcQueue = new StringBuilder(data.toLowerCase());\n     }\n \n     /**\n      */\n     public void addFirst(Character c) {\n         queue.insert(pos, c);\n+        lcQueue.insert(pos, Character.toLowerCase(c));\n     }\n \n     /**\n      */\n     public void addFirst(String seq) {\n         queue.insert(pos, seq);\n+        lcQueue.insert(pos, seq.toLowerCase());\n     }\n \n     /**\n         int len = seq.length();\n         if (len > remainingLength())\n             return false;\n-        String check = queue.substring(pos, pos+len);\n-        return seq.equalsIgnoreCase(check);\n-    }\n+        String check = lcQueue.substring(pos, pos+len);\n+        return seq.toLowerCase().equals(check);\n+    }\n+    \n \n     /**\n      Tests if the next characters match any of the sequences.\n      * @return The matched data consumed from queue.\n      */\n     public String consumeTo(String seq) {\n-        return consumeToAny(seq);\n+        int offset = lcQueue.indexOf(seq.toLowerCase(), pos);\n+        if (offset != -1) {\n+            String consumed = queue.substring(pos, offset);\n+            pos += consumed.length();\n+            return consumed;\n+        } else {\n+            return remainder();\n+        }\n     }\n \n     /**", "timestamp": 1309605114, "metainfo": ""}