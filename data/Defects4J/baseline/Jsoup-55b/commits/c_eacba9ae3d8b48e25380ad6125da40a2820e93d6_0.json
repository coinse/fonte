{"sha": "eacba9ae3d8b48e25380ad6125da40a2820e93d6", "log": "Fix for https://github.com/jhy/jsoup/issues/504", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n         Validate.isTrue(out.parentNode == this);\n         int index = out.siblingIndex();\n         childNodes.remove(index);\n-        reindexChildren();\n+        reindexChildren(index);\n         out.parentNode = null;\n     }\n \n             reparentChild(in);\n             childNodes.add(index, in);\n         }\n-        reindexChildren();\n+        reindexChildren(index);\n     }\n \n     protected void reparentChild(Node child) {\n         child.setParentNode(this);\n     }\n     \n-    private void reindexChildren() {\n-        for (int i = 0; i < childNodes.size(); i++) {\n+    private void reindexChildren(int start) {\n+        for (int i = start; i < childNodes.size(); i++) {\n             childNodes.get(i).setSiblingIndex(i);\n         }\n     }\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n         Element body = doc.body();\n         List<Node> nodeList = parseFragment(bodyHtml, body, baseUri);\n         Node[] nodes = nodeList.toArray(new Node[nodeList.size()]); // the node list gets modified when re-parented\n+        for (int i = nodes.length - 1; i > 0; i--) {\n+            nodes[i].remove();\n+        }\n         for (Node node : nodes) {\n             body.appendChild(node);\n         }\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n                 \"<!doctype \ufffd> <html> <head></head> <body></body> </html>\",\n                 StringUtil.normaliseWhitespace(doc.outerHtml()));\n     }\n+    \n+    @Test public void handlesManyChildren() {\n+        // Arrange\n+        StringBuilder longBody = new StringBuilder(500000);\n+        for (int i = 0; i < 25000; i++) {\n+            longBody.append(i).append(\"<br>\");\n+        }\n+        \n+        // Act\n+        long start = System.currentTimeMillis();\n+        Document doc = Parser.parseBodyFragment(longBody.toString(), \"\");\n+        \n+        // Assert\n+        assertEquals(50000, doc.body().childNodeSize());\n+        assertTrue(System.currentTimeMillis() - start < 1000);\n+    }\n }", "timestamp": 1418310602, "metainfo": ""}