{"sha": "453cfcbb593732bee980f4c83d06448152ac9887", "log": "Use final.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n \n         private final CSVFormat format;\n \n-        private Predefined(CSVFormat format) {\n+        private Predefined(final CSVFormat format) {\n             this.format = format;\n         }\n         \n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n     @Test\n     public void testJiraCsv154_withCommentMarker() throws IOException {\n         final String comment = \"This is a header comment\";\n-        CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withCommentMarker('#').withHeaderComments(comment);\n-        StringBuilder out = new StringBuilder();\n+        final CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withCommentMarker('#').withHeaderComments(comment);\n+        final StringBuilder out = new StringBuilder();\n         final CSVPrinter printer = format.print(out);\n         printer.print(\"A\");\n         printer.print(\"B\");\n         printer.close();\n-        String s = out.toString();\n+        final String s = out.toString();\n         Assert.assertTrue(s, s.contains(comment));\n     }\n \n     @Test\n     public void testJiraCsv154_withHeaderComments() throws IOException {\n         final String comment = \"This is a header comment\";\n-        CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withHeaderComments(comment).withCommentMarker('#');\n-        StringBuilder out = new StringBuilder();\n+        final CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withHeaderComments(comment).withCommentMarker('#');\n+        final StringBuilder out = new StringBuilder();\n         final CSVPrinter printer = format.print(out);\n         printer.print(\"A\");\n         printer.print(\"B\");\n         printer.close();\n-        String s = out.toString();\n+        final String s = out.toString();\n         Assert.assertTrue(s, s.contains(comment));\n     }\n     \n--- a/src/test/java/org/apache/commons/csv/JiraCsv167Test.java\n+++ b/src/test/java/org/apache/commons/csv/JiraCsv167Test.java\n     @Test\n     @Ignore(\"Fails\")\n     public void parse() throws IOException {\n-        File csvData = new File(\"src/test/resources/csv-167/sample1.csv\");\n+        final File csvData = new File(\"src/test/resources/csv-167/sample1.csv\");\n         CSVFormat format = CSVFormat.DEFAULT;\n         //\n         format = format.withAllowMissingColumnNames(false);\n         format = format.withRecordSeparator('\\n');\n         format = format.withSkipHeaderRecord(false);\n         //\n-        CSVParser parser = CSVParser.parse(csvData, Charset.defaultCharset(), format);\n+        final CSVParser parser = CSVParser.parse(csvData, Charset.defaultCharset(), format);\n         int comments = 0;\n         int records = 0;\n-        for (CSVRecord csvRecord : parser) {\n+        for (final CSVRecord csvRecord : parser) {\n             if (csvRecord.isComment()) {\n                 comments++;\n             } else {", "timestamp": 1453150341, "metainfo": ""}