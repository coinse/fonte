{"sha": "c4f74756ff768b341782bb60c6df89acf30e67f9", "log": "Testing [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n \n import java.io.File;\n import java.io.IOException;\n+import java.io.InputStreamReader;\n import java.io.Reader;\n import java.io.StringReader;\n import java.io.StringWriter;\n import java.util.Map;\n import java.util.NoSuchElementException;\n \n+import org.apache.commons.io.input.BOMInputStream;\n import org.junit.Assert;\n import org.junit.Ignore;\n import org.junit.Test;\n         assertTrue(records.size() > 0);\n         for (int i = 0; i < res.length; i++) {\n             assertArrayEquals(res[i], records.get(i).values());\n+        }\n+    }\n+\n+    @Test\n+    @Ignore(\"CSV-107\")\n+    public void testBOM() throws IOException {\n+        URL url = ClassLoader.getSystemClassLoader().getResource(\"CSVFileParser/bom.csv\");\n+        final CSVParser parser = CSVParser.parse(url, null, CSVFormat.EXCEL.withHeader());\n+        try {\n+            for (CSVRecord record : parser) {\n+                System.out.println(\"date: \" + record.get(\"Date\"));\n+            }\n+        } finally {\n+            parser.close();\n+        }\n+    }\n+\n+    @Test\n+    public void testBOMInputStream() throws IOException {\n+        URL url = ClassLoader.getSystemClassLoader().getResource(\"CSVFileParser/bom.csv\");\n+        Reader reader = new InputStreamReader(new BOMInputStream(url.openStream()), \"UTF-8\");\n+        final CSVParser parser = new CSVParser(reader, CSVFormat.EXCEL.withHeader());\n+        try {\n+            for (CSVRecord record : parser) {\n+                System.out.println(\"date: \" + record.get(\"Date\"));\n+            }\n+        } finally {\n+            parser.close();\n         }\n     }\n ", "timestamp": 1395018357, "metainfo": ""}