{"sha": "3fd92ec4a4d74541d012114d21196348ae4169e0", "log": "Use NotEscaped where character has not been escaped  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n \n     @Test\n     public void testCR() throws Exception {\n-        final Lexer lexer = getLexer(\"character\" + CR + \"Escaped\", formatWithEscaping);\n+        final Lexer lexer = getLexer(\"character\" + CR + \"NotEscaped\", formatWithEscaping);\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\"));\n-        assertThat(lexer.nextToken(new Token()), hasContent(\"Escaped\"));\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"NotEscaped\"));\n     }\n \n     @Test\n \n     @Test\n     public void testLF() throws Exception {\n-        final Lexer lexer = getLexer(\"character\" + LF + \"Escaped\", formatWithEscaping);\n+        final Lexer lexer = getLexer(\"character\" + LF + \"NotEscaped\", formatWithEscaping);\n         assertThat(lexer.nextToken(new Token()), hasContent(\"character\"));\n-        assertThat(lexer.nextToken(new Token()), hasContent(\"Escaped\"));\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"NotEscaped\"));\n     }\n \n     @Test // TODO is this correct? Do we expect TAB to be un/escaped?\n \n     @Test // TODO is this correct? Do we expect TAB to be un/escaped?\n     public void testTab() throws Exception {\n-        final Lexer lexer = getLexer(\"character\" + TAB + \"Escaped\", formatWithEscaping);\n-        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + TAB + \"Escaped\"));\n+        final Lexer lexer = getLexer(\"character\" + TAB + \"NotEscaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + TAB + \"NotEscaped\"));\n     }\n \n     @Test // TODO is this correct? Do we expect BACKSPACE to be un/escaped?\n \n     @Test // TODO is this correct? Do we expect BACKSPACE to be un/escaped?\n     public void testBackspace() throws Exception {\n-        final Lexer lexer = getLexer(\"character\" + BACKSPACE + \"Escaped\", formatWithEscaping);\n-        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + BACKSPACE + \"Escaped\"));\n+        final Lexer lexer = getLexer(\"character\" + BACKSPACE + \"NotEscaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + BACKSPACE + \"NotEscaped\"));\n     }\n \n     @Test // TODO is this correct? Do we expect FF to be un/escaped?\n \n     @Test // TODO is this correct? Do we expect FF to be un/escaped?\n     public void testFF() throws Exception {\n-        final Lexer lexer = getLexer(\"character\" + FF + \"Escaped\", formatWithEscaping);\n-        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + FF + \"Escaped\"));\n+        final Lexer lexer = getLexer(\"character\" + FF + \"NotEscaped\", formatWithEscaping);\n+        assertThat(lexer.nextToken(new Token()), hasContent(\"character\" + FF + \"NotEscaped\"));\n     }\n \n     @Test", "timestamp": 1375530681, "metainfo": ""}