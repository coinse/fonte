{"sha": "28520d57d8100665c4b96c01d0d2ca9de69cc7d6", "log": "Use @Ignore instead of commenting out code.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n         }\n     }\n \n-    // @Test\n-    // public void testStartWithEmptyLinesThenHeaders() throws Exception {\n-    // final String[] codes = { \"\\r\\n\\r\\n\\r\\nhello,\\r\\n\\r\\n\\r\\n\", \"hello,\\n\\n\\n\", \"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\",\n-    // \"hello,\\\"\\\"\\n\\n\\n\" };\n-    // final String[][] res = { { \"hello\", \"\" }, { \"\" }, // Excel format does not ignore empty lines\n-    // { \"\" } };\n-    // for (final String code : codes) {\n-    // final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);\n-    // final List<CSVRecord> records = parser.getRecords();\n-    // assertEquals(res.length, records.size());\n-    // assertTrue(records.size() > 0);\n-    // for (int i = 0; i < res.length; i++) {\n-    // assertArrayEquals(res[i], records.get(i).values());\n-    // }\n-    // parser.close();\n-    // }\n-    // }\n+    @Test\n+    @Ignore\n+    public void testStartWithEmptyLinesThenHeaders() throws Exception {\n+        final String[] codes = {\"\\r\\n\\r\\n\\r\\nhello,\\r\\n\\r\\n\\r\\n\", \"hello,\\n\\n\\n\", \"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\",\n+                \"hello,\\\"\\\"\\n\\n\\n\"};\n+        final String[][] res = {{\"hello\", \"\"}, {\"\"}, // Excel format does not ignore empty lines\n+                {\"\"}};\n+        for (final String code : codes) {\n+            final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);\n+            final List<CSVRecord> records = parser.getRecords();\n+            assertEquals(res.length, records.size());\n+            assertTrue(records.size() > 0);\n+            for (int i = 0; i < res.length; i++) {\n+                assertArrayEquals(res[i], records.get(i).values());\n+            }\n+            parser.close();\n+        }\n+    }\n \n     @Test\n     public void testEndOfFileBehaviorCSV() throws Exception {", "timestamp": 1414569361, "metainfo": ""}