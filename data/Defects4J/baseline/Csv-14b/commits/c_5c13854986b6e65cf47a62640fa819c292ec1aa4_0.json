{"sha": "5c13854986b6e65cf47a62640fa819c292ec1aa4", "log": "Add missing since tags  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n      * Specifies whether header names will be accessed ignoring case.\n      *\n      * @return {@code true} if header names cases are ignored, {@code false} if they are case sensitive.\n+     * @since 1.3\n      */\n     public boolean getIgnoreHeaderCase() {\n         return ignoreHeaderCase;\n      * Returns whether to add a trailing delimiter.\n      *\n      * @return whether to add a trailing delimiter.\n+     * @since 1.3\n      */\n     public boolean getTrailingDelimiter() {\n         return trailingDelimiter;\n      *\n      * @return A new CSVFormat that will ignore case header name.\n      * @see #withIgnoreHeaderCase(boolean)\n-     * @since ?\n+     * @since 1.3\n      */\n     public CSVFormat withIgnoreHeaderCase() {\n         return this.withIgnoreHeaderCase(true);\n      *            the case mapping behavior, {@code true} to access name/values, {@code false} to leave the mapping as\n      *            is.\n      * @return A new CSVFormat that will ignore case header name if specified as {@code true}\n+     * @since 1.3\n      */\n     public CSVFormat withIgnoreHeaderCase(final boolean ignoreHeaderCase) {\n         return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,\n      *            whether to trim leading and trailing blanks.\n      *\n      * @return A new CSVFormat that is equal to this but with the specified trim setting.\n+     * @since 1.3\n      */\n     public CSVFormat withTrim(final boolean trim) {\n         return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,\n      * Returns a new {@code CSVFormat} to add a trailing delimiter.\n      *\n      * @return A new CSVFormat that is equal to this but with the trailing delimiter setting.\n+     * @since 1.3\n      */\n     public CSVFormat withTrailingDelimiter() {\n         return withTrailingDelimiter(true);\n      *            whether to add a trailing delimiter.\n      *\n      * @return A new CSVFormat that is equal to this but with the specified trailing delimiter setting.\n+     * @since 1.3\n      */\n     public CSVFormat withTrailingDelimiter(final boolean trailingDelimiter) {\n         return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,\n      * Returns a new {@code CSVFormat} to trim leading and trailing blanks.\n      *\n      * @return A new CSVFormat that is equal to this but with the trim setting on.\n+     * @since 1.3\n      */\n     public CSVFormat withTrim() {\n         return withTrim(true);", "timestamp": 1462518400, "metainfo": ""}