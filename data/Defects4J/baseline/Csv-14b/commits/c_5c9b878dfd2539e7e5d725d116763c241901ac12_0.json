{"sha": "5c9b878dfd2539e7e5d725d116763c241901ac12", "log": "PRISTINE can now be private as we have ctor which allows delimiter to be specified  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n     /**\n      * Starting format; used for creating other formats.\n      */\n-    static final CSVFormat PRISTINE = new CSVFormat(COMMA, null, null, null, null, false, false, null, null);\n+    private static final CSVFormat PRISTINE = new CSVFormat(COMMA, null, null, null, null, false, false, null, null);\n \n     /**\n      * Standard comma separated format, as for {@link #RFC4180} but allowing blank lines.\n--- a/src/test/java/org/apache/commons/csv/CSVFileParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFileParserTest.java\n         assertTrue(testName+\" require 1 param\", split.length >= 1);\n          // first line starts with csv data file name\n         final BufferedReader csvFile = new BufferedReader(new FileReader(new File(BASE, split[0])));\n-        CSVFormat fmt = CSVFormat.PRISTINE.withDelimiter(',').withQuoteChar('\"');\n+        CSVFormat fmt = new CSVFormat(',').withQuoteChar('\"');\n         boolean checkComments = false;\n         for(int i=1; i < split.length; i++) {\n             final String option = split[i];\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n         };\n \n \n-        final CSVFormat format = CSVFormat.PRISTINE.withDelimiter(',').withQuoteChar('\\'').withEscape('/')\n+        final CSVFormat format = new CSVFormat(',').withQuoteChar('\\'').withEscape('/')\n                                .withIgnoreEmptyLines(true).withLineSeparator(CRLF);\n \n         final CSVParser parser = new CSVParser(code, format);\n         };\n \n \n-        final CSVFormat format = CSVFormat.PRISTINE.withDelimiter(',').withEscape('/')\n+        final CSVFormat format = new CSVFormat(',').withEscape('/')\n                 .withIgnoreEmptyLines(true).withLineSeparator(CRLF);\n \n         final CSVParser parser = new CSVParser(code, format);", "timestamp": 1350341871, "metainfo": ""}