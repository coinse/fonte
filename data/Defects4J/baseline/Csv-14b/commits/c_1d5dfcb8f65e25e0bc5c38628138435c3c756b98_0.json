{"sha": "1d5dfcb8f65e25e0bc5c38628138435c3c756b98", "log": "Test CSV-154.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n     }\n \n     @Test\n-    public void testJIraCsv154() throws IOException {\n+    public void testJiraCsv154_withCommentMarker() throws IOException {\n         final String comment = \"This is a header comment\";\n-        CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withCommentMarker('#')\n-                .withHeaderComments(comment);\n+        CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withCommentMarker('#').withHeaderComments(comment);\n         StringBuilder out = new StringBuilder();\n         final CSVPrinter printer = format.print(out);\n         printer.print(\"A\");\n         String s = out.toString();\n         Assert.assertTrue(s, s.contains(comment));\n     }\n+\n+    @Test\n+    public void testJiraCsv154_withHeaderComments() throws IOException {\n+        final String comment = \"This is a header comment\";\n+        CSVFormat format = CSVFormat.EXCEL.withHeader(\"H1\", \"H2\").withHeaderComments(comment).withCommentMarker('#');\n+        StringBuilder out = new StringBuilder();\n+        final CSVPrinter printer = format.print(out);\n+        printer.print(\"A\");\n+        printer.print(\"B\");\n+        printer.close();\n+        String s = out.toString();\n+        Assert.assertTrue(s, s.contains(comment));\n+    }\n     \n     @Test\n     public void testWithIgnoreEmptyLines() throws Exception {", "timestamp": 1441085585, "metainfo": ""}