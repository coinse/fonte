{"sha": "59e1f7941fa8558755c8539b5721e4119603c8b4", "log": "Add @SuppressWarnings.", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n import java.io.Serializable;\n import java.io.StringWriter;\n import java.nio.charset.Charset;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n import java.sql.ResultSet;\n import java.sql.ResultSetMetaData;\n      *             thrown if the optional header cannot be printed.\n      * @since 1.5\n      */\n+    @SuppressWarnings(\"resource\")\n     public CSVPrinter print(final File out, Charset charset) throws IOException {\n         // The writer will be closed when close() is called.\n         return new CSVPrinter(new OutputStreamWriter(new FileOutputStream(out), charset), this);\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n      * @throws IOException\n      *             If an I/O error occurs\n      */\n+    @SuppressWarnings(\"resource\")\n     public static CSVParser parse(final File file, final Charset charset, final CSVFormat format) throws IOException {\n         Assertions.notNull(file, \"file\");\n         Assertions.notNull(format, \"format\");\n      *             If there is a problem reading the header or skipping the first record\n      * @since 1.1\n      */\n+    @SuppressWarnings(\"resource\")\n     public CSVParser(final Reader reader, final CSVFormat format, final long characterOffset, final long recordNumber)\n             throws IOException {\n         Assertions.notNull(reader, \"reader\");", "timestamp": 1469902763, "metainfo": ""}