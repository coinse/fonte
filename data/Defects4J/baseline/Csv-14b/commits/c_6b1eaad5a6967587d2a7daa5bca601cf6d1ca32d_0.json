{"sha": "6b1eaad5a6967587d2a7daa5bca601cf6d1ca32d", "log": "Javadoc fixes.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n             .build();\n \n     /**\n-     * Creates a new CSV format builds.\n+     * Creates a new CSV format builder.\n      *\n      * @param delimiter\n      *            the char used for value separation, must not be a line break character\n+     * @return a new CSV format builder. \n      * @throws IllegalArgumentException if the delimiter is a line break character\n      */\n     public static CSVFormatBuilder newBuilder(final char delimiter) {\n     }\n \n     /**\n-     * Standard comma separated format, as for {@link #RFC4180} but allowing blank lines.\n+     * Creates a standard comma separated format builder, as for {@link #RFC4180} but allowing empty lines.\n      * <ul>\n      * <li>withDelimiter(',')</li>\n      * <li>withQuoteChar('\"')</li>\n      * <li>withEmptyLinesIgnored(true)</li>\n      * <li>withLineSeparator(CRLF)</li>\n      * </ul>\n+     * @return a standard comma separated format builder, as for {@link #RFC4180} but allowing empty lines.\n      */\n     public static CSVFormatBuilder newBuilder() {\n         return new CSVFormatBuilder(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null);", "timestamp": 1363756586, "metainfo": ""}