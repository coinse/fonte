{"sha": "389fcd218eca6fd7e2826cafb08933fcb1ae8faa", "log": "Testcases for CSVWriter.  ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/csv/writer/CSVConfigGuesserTest.java\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.csv.writer;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests for the config guesser.\n+ *\n+ * @author Martin van den Bemt\n+ * @version $Id: $\n+ */\n+public class CSVConfigGuesserTest extends TestCase {\n+\n+    public void testSetters() throws Exception {\n+        CSVConfigGuesser guesser = new CSVConfigGuesser();\n+        ByteArrayInputStream in = new ByteArrayInputStream(new byte[0]);\n+        guesser.setInputStream(in);\n+        assertEquals(in, guesser.getInputStream());\n+        guesser = new CSVConfigGuesser(in);\n+        assertEquals(in, guesser.getInputStream());\n+        assertEquals(false, guesser.hasFieldHeader());\n+        guesser.setHasFieldHeader(true);\n+        assertEquals(true, guesser.hasFieldHeader());\n+    }\n+    /**\n+     * Test a format like\n+     *  1234 ; abcd ; 1234 ;\n+     *\n+     */\n+    public void testConfigGuess1() {\n+        CSVConfig expected = new CSVConfig();\n+        expected.setDelimiter(';');\n+        expected.setValueDelimiter(' ');\n+        expected.setFill(CSVConfig.FILLRIGHT);\n+        expected.setIgnoreValueDelimiter(false);\n+        expected.setFixedWidth(true);\n+        CSVField field = new CSVField();\n+        field.setSize(4);\n+        expected.addField(field);\n+        expected.addField(field);\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"1234;abcd;1234\\n\");\n+        sb.append(\"abcd;1234;abcd\");\n+        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n+        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n+        CSVConfig guessed = guesser.guess();\n+        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n+        assertEquals(expected.getFields().length, guessed.getFields().length);\n+        assertEquals(expected.getFields()[0].getSize(), guessed.getFields()[0].getSize());\n+    }\n+    /**\n+     * Test a format like\n+     *  1234,123123,12312312,213123\n+     *  1,2,3,4\n+     *\n+     */\n+    public void testConfigGuess2() {\n+        CSVConfig expected = new CSVConfig();\n+        expected.setDelimiter(';');\n+        expected.setValueDelimiter(' ');\n+        expected.setFill(CSVConfig.FILLRIGHT);\n+        expected.setIgnoreValueDelimiter(false);\n+//        expected.setFixedWidth(false);\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(\"1,2,3,4\\n\");\n+        sb.append(\"abcd,1234,abcd,1234\");\n+        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n+        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n+        CSVConfig guessed = guesser.guess();\n+        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/csv/writer/CSVConfigTest.java\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.csv.writer;\n+\n+import java.util.Collection;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Testcase for the CSVConfig\n+ *\n+ * @author Martin van den Bemt\n+ * @version $Id: $\n+ */\n+public class CSVConfigTest extends TestCase {\n+    \n+\n+    public void testFixedWith() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(false, config.isFixedWidth());\n+        config.setFixedWidth(true);\n+        assertEquals(true, config.isFixedWidth());\n+    }\n+    \n+    public void testFields() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(0, config.getFields().length);\n+        config.setFields((CSVField[])null);\n+        assertEquals(0, config.getFields().length);\n+        config.setFields((Collection)null);\n+        assertEquals(0, config.getFields().length);\n+        CSVField field = new CSVField();\n+        field.setName(\"field1\");\n+        config.addField(field);\n+        assertEquals(field, config.getFields()[0]);\n+        assertEquals(null, config.getField(null));\n+        assertEquals(null, config.getField(\"field11\"));\n+        assertEquals(field, config.getField(\"field1\"));\n+    }\n+    \n+    public void testFill() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(CSVConfig.FILLNONE, config.getFill());\n+        config.setFill(CSVConfig.FILLLEFT);\n+        assertEquals(CSVConfig.FILLLEFT, config.getFill());\n+        config.setFill(CSVConfig.FILLRIGHT);\n+        assertEquals(CSVConfig.FILLRIGHT, config.getFill());\n+        assertEquals(' ', config.getFillChar());\n+        config.setFillChar('m');\n+        assertEquals('m', config.getFillChar());\n+    }\n+    \n+    public void testDelimiter() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(',', config.getDelimiter());\n+        config.setDelimiter(';');\n+        assertEquals(';', config.getDelimiter());\n+        assertEquals(false, config.isDelimiterIgnored());\n+        config.setIgnoreDelimiter(true);\n+        assertEquals(true, config.isDelimiterIgnored());\n+    }\n+    \n+    public void testValueDelimiter() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals('\"', config.getValueDelimiter());\n+        config.setValueDelimiter('m');\n+        assertEquals('m', config.getValueDelimiter());\n+        assertEquals(true, config.isValueDelimiterIgnored());\n+        config.setIgnoreValueDelimiter(false);\n+        assertEquals(false, config.isValueDelimiterIgnored());\n+    }\n+    \n+    public void testFieldHeader() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(false, config.isFieldHeader());\n+        config.setFieldHeader(true);\n+        assertEquals(true, config.isFieldHeader());\n+    }\n+    \n+    public void testTrimEnd() {\n+        CSVConfig config = new CSVConfig();\n+        assertEquals(false, config.isEndTrimmed());\n+        config.setEndTrimmed(true);\n+        assertEquals(true, config.isEndTrimmed());\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/csv/writer/CSVFieldTest.java\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.csv.writer;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * \n+ * @author Martin van den Bemt\n+ * @version $Id: $\n+ */\n+public class CSVFieldTest extends TestCase {\n+\n+    public void testCSVField() {\n+        CSVField field = new CSVField();\n+        assertEquals(null, field.getName());\n+        field.setName(\"id\");\n+        assertEquals(\"id\", field.getName());\n+        assertEquals(0, field.getSize());\n+        field.setSize(10);\n+        assertEquals(10, field.getSize());\n+        field = new CSVField(\"name\");\n+        assertEquals(\"name\", field.getName());\n+        field = new CSVField(\"name\", 10);\n+        assertEquals(\"name\", field.getName());\n+        assertEquals(10, field.getSize());\n+    }\n+    \n+    public void testFill() {\n+        CSVField field = new CSVField();\n+        assertEquals(CSVConfig.FILLNONE, field.getFill());\n+        assertEquals(false, field.overrideFill());\n+        field.setFill(CSVConfig.FILLLEFT);\n+        assertEquals(true, field.overrideFill());\n+        assertEquals(CSVConfig.FILLLEFT, field.getFill());\n+    }\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/csv/writer/CSVWriterTest.java\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */package org.apache.commons.csv.writer;\n+\n+import java.io.StringWriter;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * The testcase for the csv writer.\n+ * \n+ * @author Martin van den Bemt\n+ * @version $Id: $\n+ */\n+public class CSVWriterTest extends TestCase {\n+\n+    public void testCSVConfig() {\n+        CSVWriter writer = new CSVWriter();\n+        assertEquals(null, writer.getConfig());\n+        CSVConfig config = new CSVConfig();\n+        writer.setConfig(config);\n+        assertEquals(config, writer.getConfig());\n+        writer = new CSVWriter(config);\n+        assertEquals(config, writer.getConfig());\n+    }\n+    \n+    public void testWriter() {\n+        CSVWriter writer = new CSVWriter();\n+        CSVConfig config = new CSVConfig();\n+        config.addField(new CSVField(\"field1\", 5));\n+        config.addField(new CSVField(\"field2\", 4));\n+        writer.setConfig(config);\n+        StringWriter sw = new StringWriter();\n+        writer.setWriter(sw);\n+        Map map = new HashMap();\n+        map.put(\"field1\", \"12345\");\n+        map.put(\"field2\", \"1234\");\n+        writer.writeRecord(map);\n+        assertEquals(\"12345,1234\\n\",sw.toString());\n+    }\n+}", "timestamp": 1138750636, "metainfo": ""}