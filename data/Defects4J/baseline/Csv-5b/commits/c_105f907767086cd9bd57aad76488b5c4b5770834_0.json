{"sha": "105f907767086cd9bd57aad76488b5c4b5770834", "log": "CSV-78 Use Character instead of char for char fields except delimiter Already done as part of CSV-99 etc. Updated Javadoc to clarify that null can be used to disable settings  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n     }\n \n     private final char delimiter;\n-    private final Character quoteChar;\n+    private final Character quoteChar; // null if quoting is disabled\n     private final Quote quotePolicy;\n-    private final Character commentStart;\n-    private final Character escape;\n+    private final Character commentStart; // null if commenting is disabled\n+    private final Character escape; // null if escaping is disabled\n     private final boolean ignoreSurroundingSpaces; // Should leading/trailing spaces be ignored around values?\n     private final boolean ignoreEmptyLines;\n     private final String recordSeparator; // for outputs\n-    private final String nullString;\n+    private final String nullString; // the string to be used for null values\n     private final String[] header;\n     private final boolean skipHeaderRecord;\n \n      * @param delimiter\n      *            the char used for value separation, must not be a line break character\n      * @param quoteChar\n-     *            the char used as value encapsulation marker\n+     *            the Character used as value encapsulation marker, may be {@code null} to disable\n      * @param quotePolicy\n      *            the quote policy\n      * @param commentStart\n-     *            the char used for comment identification\n+     *            the Character used for comment identification, may be {@code null} to disable\n      * @param escape\n-     *            the char used to escape special characters in values\n+     *            the Character used to escape special characters in values, may be {@code null} to disable\n      * @param ignoreSurroundingSpaces\n      *            <tt>true</tt> when whitespaces enclosing values should be ignored\n      * @param ignoreEmptyLines\n     /**\n      * Returns the character marking the start of a line comment.\n      *\n-     * @return the comment start marker.\n+     * @return the comment start marker, may be {@code null}\n      */\n     public Character getCommentStart() {\n         return commentStart;\n     /**\n      * Returns the escape character.\n      *\n-     * @return the escape character\n+     * @return the escape character, may be {@code null}\n      */\n     public Character getEscape() {\n         return escape;\n     /**\n      * Returns the character used to encapsulate values containing special characters.\n      *\n-     * @return the quoteChar character\n+     * @return the quoteChar character, may be {@code null}\n      */\n     public Character getQuoteChar() {\n         return quoteChar;\n \t *\n \t * @param in\n \t *            the input stream\n-\t * @return a parser over a stream of {@link #CSVRecord}s.\n+\t * @return a parser over a stream of {@link CSVRecord}s.\n \t * @throws IOException\n \t *             If an I/O error occurs\n \t */\n      * Note that the comment start character is only recognised at the start of a line.\n      *\n      * @param commentStart\n-     *            the comment start marker\n+     *            the comment start marker, use {@code null} to disable\n      * @return A new CSVFormat that is equal to this one but with the specified character as the comment start marker\n      * @throws IllegalArgumentException\n      *             thrown if the specified character is a line break\n      * Sets the escape character of the format to the specified character.\n      *\n      * @param escape\n-     *            the escape character\n+     *            the escape character, use {@code null} to disable\n      * @return A new CSVFormat that is equal to this but with the specified character as the escape character\n      * @throws IllegalArgumentException\n      *             thrown if the specified character is a line break\n      * Sets the quoteChar of the format to the specified character.\n      *\n      * @param quoteChar\n-     *            the quoteChar character\n+     *            the quoteChar character, use {@code null} to disable\n      * @return A new CSVFormat that is equal to this but with the specified character as quoteChar\n      * @throws IllegalArgumentException\n      *             thrown if the specified character is a line break", "timestamp": 1375365740, "metainfo": ""}