{"sha": "17139b840fc076b36f7e15be40495faefee08ad4", "log": "Better lvar names.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n \n         printDelimiter();\n \n-        final char delim = format.getDelimiter();\n-        final char encapsulator = format.getQuoteChar();\n+        final char delimChar = format.getDelimiter();\n+        final char quoteChar = format.getQuoteChar();\n \n         if (len <= 0) {\n             // always quote an empty token that is the first\n             } else {\n                 while (pos < end) {\n                     c = value.charAt(pos);\n-                    if (c == LF || c == CR || c == encapsulator || c == delim) {\n+                    if (c == LF || c == CR || c == quoteChar || c == delimChar) {\n                         quote = true;\n                         break;\n                     }\n         }\n \n         // we hit something that needed encapsulation\n-        out.append(encapsulator);\n+        out.append(quoteChar);\n \n         // Pick up where we left off: pos should be positioned on the first character that caused\n         // the need for encapsulation.\n         while (pos < end) {\n             final char c = value.charAt(pos);\n-            if (c == encapsulator) {\n+            if (c == quoteChar) {\n                 // write out the chunk up until this point\n \n                 // add 1 to the length to write out the encapsulator also\n \n         // write the last segment\n         out.append(value, start, pos);\n-        out.append(encapsulator);\n+        out.append(quoteChar);\n     }\n \n     /**", "timestamp": 1350191195, "metainfo": ""}