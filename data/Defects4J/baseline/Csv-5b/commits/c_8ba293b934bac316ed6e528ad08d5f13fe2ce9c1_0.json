{"sha": "8ba293b934bac316ed6e528ad08d5f13fe2ce9c1", "log": "Add @Test testRemoveAndAddColumns.  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVRecordTest.java\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n \n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n \n public class CSVRecordTest {\n \n     private enum EnumFixture { UNKNOWN_COLUMN }\n-    \n+\n     private String[] values;\n     private CSVRecord record, recordWithHeader;\n     private Map<String, Integer> header;\n     }\n \n     @Test\n+    public void testRemoveAndAddColumns() throws IOException {\n+        // do:\n+        final CSVPrinter printer = new CSVPrinter(new StringBuilder(), CSVFormat.DEFAULT);\n+        final Map<String, String> map = recordWithHeader.toMap();\n+        map.remove(\"OldColumn\");\n+        map.put(\"NewColumn\", \"NewValue\");\n+        // check:\n+        final ArrayList<String> list = new ArrayList<String>(map.values());\n+        Collections.sort(list);\n+        printer.printRecord(list);\n+        Assert.assertEquals(\"A,B,C,NewValue\" + CSVFormat.DEFAULT.getRecordSeparator(), printer.getOut().toString());\n+    }\n+\n+    @Test\n     public void testToMap() {\n         final Map<String, String> map = this.recordWithHeader.toMap();\n         this.validateMap(map, true);", "timestamp": 1390405754, "metainfo": ""}