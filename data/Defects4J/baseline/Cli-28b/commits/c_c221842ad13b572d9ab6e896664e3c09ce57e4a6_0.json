{"sha": "c221842ad13b572d9ab6e896664e3c09ce57e4a6", "log": "CLI-153 set svn:eol-style to native - thanks to Benjamin Bentmann for the patch  ", "commit": "\n--- a/src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java\n+++ b/src/test/org/apache/commons/cli2/resource/ResourceHelperTest.java\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.commons.cli2.resource;\n-\n-import java.util.Locale;\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n-\n-import junit.framework.TestCase;\n-\n-/**\n- * A utility class used to provide internationalisation support.\n- *\n- * @author John Keyes\n- */\n-public class ResourceHelperTest extends TestCase {\n-    /** system property */\n-    private static final String PROP_LOCALE = \"org.apache.commons.cli2.resource.bundle\";\n-\n-    private static ResourceHelper helper;\n-\n-    /** resource bundle */\n-    private ResourceBundle bundle;\n-\n-    public void setUp() {\n-    \tSystem.setProperty(PROP_LOCALE, \"org.apache.commons.cli2.resource.TestBundle\");\n-    \thelper = ResourceHelper.getResourceHelper();\n-    }\n-    \n-    public void tearDown() {\n-    \tSystem.setProperty(PROP_LOCALE, \"org.apache.commons.cli2.resource.CLIMessageBundle_en_US.properties\");\n-    }\n-    \n-    /**\n-     * Create a new ResourceHelper for the specified class.\n-     *\n-     * @param clazz the Class that requires some resources\n-     */\n-    public ResourceHelperTest() {\n-    \tsuper(\"ResourceHelperTest\");\n-    }\n-    \n-    public void testOverridden() {\n-    \tassertEquals(\"wrong message\", \"The class name \\\"ResourceHelper\\\" is invalid.\", helper.getMessage(\"ClassValidator.bad.classname\", \"ResourceHelper\"));\n-    }\n-    \n-    public void testNewMessage1Param() {\n-    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\"));\n-    }\n-\n-    public void testNewMessage2Params() {\n-    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\"));\n-    }\n-\n-    public void testNewMessage3Params() {\n-    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\", \"might\"));\n-    }\n-\n-    public void testNewMessage4Params() {\n-    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\", \"might\", \"say\"));\n-    }\n-\n-    public void testDefaultBundle() {\n-    \tSystem.setProperty(PROP_LOCALE, \"madeupname.properties\");\n-    \thelper = ResourceHelper.getResourceHelper();\n-    \tassertEquals(\"wrong message\", \"The class name \\\"ResourceHelper\\\" is invalid.\", helper.getMessage(\"ClassValidator.bad.classname\", \"ResourceHelper\"));\n-    }\n-}\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.cli2.resource;\n+\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * A utility class used to provide internationalisation support.\n+ *\n+ * @author John Keyes\n+ */\n+public class ResourceHelperTest extends TestCase {\n+    /** system property */\n+    private static final String PROP_LOCALE = \"org.apache.commons.cli2.resource.bundle\";\n+\n+    private static ResourceHelper helper;\n+\n+    /** resource bundle */\n+    private ResourceBundle bundle;\n+\n+    public void setUp() {\n+    \tSystem.setProperty(PROP_LOCALE, \"org.apache.commons.cli2.resource.TestBundle\");\n+    \thelper = ResourceHelper.getResourceHelper();\n+    }\n+    \n+    public void tearDown() {\n+    \tSystem.setProperty(PROP_LOCALE, \"org.apache.commons.cli2.resource.CLIMessageBundle_en_US.properties\");\n+    }\n+    \n+    /**\n+     * Create a new ResourceHelper for the specified class.\n+     *\n+     * @param clazz the Class that requires some resources\n+     */\n+    public ResourceHelperTest() {\n+    \tsuper(\"ResourceHelperTest\");\n+    }\n+    \n+    public void testOverridden() {\n+    \tassertEquals(\"wrong message\", \"The class name \\\"ResourceHelper\\\" is invalid.\", helper.getMessage(\"ClassValidator.bad.classname\", \"ResourceHelper\"));\n+    }\n+    \n+    public void testNewMessage1Param() {\n+    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\"));\n+    }\n+\n+    public void testNewMessage2Params() {\n+    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\"));\n+    }\n+\n+    public void testNewMessage3Params() {\n+    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\", \"might\"));\n+    }\n+\n+    public void testNewMessage4Params() {\n+    \tassertEquals(\"wrong message\", \"Some might say we will find a brighter day.\", helper.getMessage(\"test.message\", \"Some\", \"might\", \"say\"));\n+    }\n+\n+    public void testDefaultBundle() {\n+    \tSystem.setProperty(PROP_LOCALE, \"madeupname.properties\");\n+    \thelper = ResourceHelper.getResourceHelper();\n+    \tassertEquals(\"wrong message\", \"The class name \\\"ResourceHelper\\\" is invalid.\", helper.getMessage(\"ClassValidator.bad.classname\", \"ResourceHelper\"));\n+    }\n+}", "timestamp": 1209121953, "metainfo": ""}