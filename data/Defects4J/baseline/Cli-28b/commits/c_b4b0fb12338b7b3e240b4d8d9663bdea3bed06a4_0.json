{"sha": "b4b0fb12338b7b3e240b4d8d9663bdea3bed06a4", "log": "Added missing @since tags  ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/java/org/apache/commons/cli/CommandLine.java\n      * @return the value parsed into a particluar object\n      * @throws ParseException if there are problems turning the option value into the desired type\n      * @see PatternOptionBuilder\n+     * @since 1.2\n      */\n     public Object getParsedOptionValue(String opt) throws ParseException\n     {\n \n         Object type = option.getType();\n \n-        return (res == null)        ? null : TypeHandler.createValue(res, type);\n+        return (res == null) ? null : TypeHandler.createValue(res, type);\n     }\n \n     /**\n--- a/src/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli/HelpFormatter.java\n     }\n \n     /**\n-     * Comparator used to sort the options when they output in help text\n+     * Comparator used to sort the options when they output in help text.\n+     * Defaults to case-insensitive alphabetical sorting by option key.\n      * \n-     * Defaults to case-insensitive alphabetical sorting by option key\n+     * @since 1.2\n      */\n     public Comparator getOptionComparator()\n     {\n     }\n \n     /**\n-     * Set the comparator used to sort the options when they output in help text\n+     * Set the comparator used to sort the options when they output in help text.\n+     * Passing in a null parameter will set the ordering to the default mode.\n      * \n-     * Passing in a null parameter will set the ordering to the default mode\n+     * @since 1.2\n      */\n     public void setOptionComparator(Comparator comparator)\n     {", "timestamp": 1243419216, "metainfo": ""}