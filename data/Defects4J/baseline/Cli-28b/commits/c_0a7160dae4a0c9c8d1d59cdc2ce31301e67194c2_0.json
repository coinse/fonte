{"sha": "0a7160dae4a0c9c8d1d59cdc2ce31301e67194c2", "log": "Some cosmetic javadoc fixes to make reviewers happy  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/Option.java\n+++ b/src/java/org/apache/commons/cli2/Option.java\n      * Indicates whether this Option will be able to process the particular\n      * argument.\n      *\n+     * @param commandLine\n+     *            The CommandLine to check\n      * @param argument\n      *            The argument to be tested\n      * @return true if the argument can be processed by this Option\n      * returning the boolean.\n      *\n      * @see #canProcess(WriteableCommandLine,String)\n+     * @param commandLine\n+     *            the CommandLine to check\n      * @param arguments\n      *            the ListIterator over String arguments\n      * @return true if the argument can be processed by this Option\n--- a/src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java\n     /**\n      * Resets the ArgumentBuilder to the defaults for a new Argument. The\n      * method is called automatically at the end of a create() call.\n+     * @return this ArgumentBuilder\n      */\n     public final ArgumentBuilder reset() {\n         name = \"arg\";\n--- a/src/java/org/apache/commons/cli2/builder/CommandBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/CommandBuilder.java\n      *\n      * This method is called automatically at the end of the\n      * {@link #create() create} method.\n+     * @return this <code>CommandBuilder</code>\n      */\n     public CommandBuilder reset() {\n         preferredName = null;\n--- a/src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java\n     }\n \n     /**\n-     * Resets the builder\n+     * Resets the builder.\n+     * @return this builder\n      */\n     public DefaultOptionBuilder reset() {\n         preferredName = null;\n--- a/src/java/org/apache/commons/cli2/builder/GroupBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/GroupBuilder.java\n     }\n \n     /**\n-     * Resets the builder\n+     * Resets the builder.\n+     * @return this builder     \n      */\n     public GroupBuilder reset() {\n         name = null;\n     }\n \n     /**\n-     * Use this option description\n+     * Use this option description.\n      * @param newDescription the description to use\n      * @return this builder\n      */\n--- a/src/java/org/apache/commons/cli2/builder/PatternBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/PatternBuilder.java\n     }\n \n     /**\n-     * Resets this builder\n+     * Resets this builder.\n+     * @return this builder\n      */\n     public PatternBuilder reset() {\n         options.clear();\n--- a/src/java/org/apache/commons/cli2/builder/SwitchBuilder.java\n+++ b/src/java/org/apache/commons/cli2/builder/SwitchBuilder.java\n     }\n \n     /**\n-     * Resets the builder\n+     * Resets the builder.\n+     * @return this builder\n      */\n     public SwitchBuilder reset() {\n         description = null;\n--- a/src/java/org/apache/commons/cli2/commandline/Parser.java\n+++ b/src/java/org/apache/commons/cli2/commandline/Parser.java\n      *\n      * @param arguments the command line arguments\n      * @return a valid CommandLine or null if the parse was unsuccessful\n-     * @throws IOException if an error occurs while formatting help\n      */\n     public CommandLine parseAndHelp(final String[] arguments) {\n         helpFormatter.setGroup(group);\n--- a/src/java/org/apache/commons/cli2/validation/ClassValidator.java\n+++ b/src/java/org/apache/commons/cli2/validation/ClassValidator.java\n     /**\n      * Returns whether the specified name is allowed as\n      * a Java class name.\n+     * @param name the name to be checked\n+     * @return true if allowed as Java class name\n      */\n     protected boolean isPotentialClassName(final String name) {\n         final char[] chars = name.toCharArray();\n--- a/src/java/org/apache/commons/cli2/validation/UrlValidator.java\n+++ b/src/java/org/apache/commons/cli2/validation/UrlValidator.java\n \n     /**\n      * Creates a UrlValidator for the specified protocol.\n+     * @param protocol the protocol to be used\n      */\n     public UrlValidator(final String protocol) {\n         setProtocol(protocol);", "timestamp": 1231779195, "metainfo": ""}