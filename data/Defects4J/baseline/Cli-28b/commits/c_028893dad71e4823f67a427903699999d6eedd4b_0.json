{"sha": "028893dad71e4823f67a427903699999d6eedd4b", "log": "CLI-124: Provide better support for displaying usage information for optional child groups.  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/DisplaySetting.java\n+++ b/src/java/org/apache/commons/cli2/DisplaySetting.java\n     private static final Set all = new HashSet();\n \n     /**\n-     * A Set guarenteed to contain all possible DisplaySetting values\n+     * A Set guaranteed to contain all possible DisplaySetting values\n      */\n     public static final Set ALL = Collections.unmodifiableSet(all);\n \n     /**\n-     * A Set guarenteed to contain no DisplaySetting values\n+     * A Set guaranteed to contain no DisplaySetting values\n      */\n     public static final Set NONE = Collections.EMPTY_SET;\n \n      */\n     public static final DisplaySetting DISPLAY_OPTIONAL =\n         new DisplaySetting(\"DISPLAY_OPTIONAL\");\n+\n+    /**\n+     * Indicates that optional child groups should be displayed in square\n+     * brackets.\n+     */\n+    public static final DisplaySetting DISPLAY_OPTIONAL_CHILD_GROUP =\n+        new DisplaySetting(\"DISPLAY_OPTIONAL_CHILD_GROUP\");\n \n     /**\n      * Indicates that property options should be included\n--- a/src/java/org/apache/commons/cli2/option/GroupImpl.java\n+++ b/src/java/org/apache/commons/cli2/option/GroupImpl.java\n                             final String separator) {\n         final Set helpSettingsCopy = new HashSet(helpSettings);\n \n-        final boolean optional =\n-            (minimum == 0) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL);\n+        final boolean optional = !isRequired()\n+                && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) ||\n+                        helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP));\n \n         final boolean expanded =\n             (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);\n--- a/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n package org.apache.commons.cli2.util;\n \n import java.io.PrintWriter;\n-\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n         final Set fullUsage = new HashSet(DisplaySetting.ALL);\n         fullUsage.remove(DisplaySetting.DISPLAY_ALIASES);\n         fullUsage.remove(DisplaySetting.DISPLAY_GROUP_NAME);\n+        fullUsage.remove(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);\n         DEFAULT_FULL_USAGE_SETTINGS = Collections.unmodifiableSet(fullUsage);\n \n         final Set lineUsage = new HashSet();\n--- a/src/test/org/apache/commons/cli2/option/GroupTest.java\n+++ b/src/test/org/apache/commons/cli2/option/GroupTest.java\n         assertEquals(\"[ant (--help (-?,-h)) [<target1> [<target2> ...]]]\", buffer.toString());\n     }\n \n+    public void testAppendUsage_OptionalChildGroup() {\n+        final Option option = buildRequiredTestGroup(false, 2).getParent();\n+        final StringBuffer buffer = new StringBuffer();\n+        final Set settings = new HashSet(DisplaySetting.ALL);\n+        option.appendUsage(buffer, settings, null);\n+\n+        assertEquals(\"[parent ([test ()])]\", buffer.toString());\n+    }\n+\n+    public void testAppendUsage_OptionalChildGroupNoSetting() {\n+        final Option option = buildRequiredTestGroup(false, 2).getParent();\n+        final StringBuffer buffer = new StringBuffer();\n+        final Set settings = new HashSet(DisplaySetting.ALL);\n+        settings.remove(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);\n+        option.appendUsage(buffer, settings, null);\n+\n+        assertEquals(\"[parent (test ())]\", buffer.toString());\n+    }\n+\n+    public void testAppendUsage_RequiredChildGroup() {\n+        final Option option = buildRequiredTestGroup(true, 2).getParent();\n+        final StringBuffer buffer = new StringBuffer();\n+        final Set settings = new HashSet(DisplaySetting.ALL);\n+        option.appendUsage(buffer, settings, null);\n+\n+        assertEquals(\"[parent (test ())]\", buffer.toString());\n+    }\n+\n     /*\n      * (non-Javadoc)\n      *\n--- a/src/test/org/apache/commons/cli2/option/NestedGroupTest.java\n+++ b/src/test/org/apache/commons/cli2/option/NestedGroupTest.java\n  */\n package org.apache.commons.cli2.option;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n import org.apache.commons.cli2.CLITestCase;\n import org.apache.commons.cli2.CommandLine;\n+import org.apache.commons.cli2.DisplaySetting;\n import org.apache.commons.cli2.Group;\n import org.apache.commons.cli2.OptionException;\n import org.apache.commons.cli2.builder.ArgumentBuilder;\n import org.apache.commons.cli2.commandline.Parser;\n import org.apache.commons.cli2.util.HelpFormatter;\n \n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.io.StringReader;\n-import java.io.StringWriter;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n \n /**\n  * Test to exercise nested groups developed to demonstrate bug 32533\n  */\n public class NestedGroupTest extends CLITestCase {\n+    private static final String[] EXPECTED_USAGE = new String[] {\n+            \"Usage:                                                                          \",\n+            \" [-h -k -e|-d -b|-3 -f <file>|-s <string>]                                      \",\n+            \"encryptionService                                                               \",\n+            \"  -h (--help)               Print this message                                  \",\n+            \"  -k (--key)                Encryption key                                      \",\n+            \"  Action                    Action                                              \",\n+            \"    -e (--encrypt)          Encrypt input                                       \",\n+            \"    -d (--decrypt)          Decrypt input                                       \",\n+            \"  Algorithm                 Encryption Algorithm                                \",\n+            \"    -b (--blowfish)         Blowfish                                            \",\n+            \"    -3 (--3DES)             Triple DES                                          \",\n+            \"  Input                     Input                                               \",\n+            \"    -f (--file) file        Input file                                          \",\n+            \"    -s (--string) string    Input string                                        \"\n+    };\n+\n     final static DefaultOptionBuilder obuilder = new DefaultOptionBuilder();\n     final static ArgumentBuilder abuilder = new ArgumentBuilder();\n     final static GroupBuilder gbuilder = new GroupBuilder();\n     }\n \n     public void testNestedGroupHelp() {\n+        checkNestedGroupHelp(new HelpFormatter(), EXPECTED_USAGE);\n+    }\n+\n+    public void testNestedGroupHelpOptional()\n+    {\n+        HelpFormatter helpFormatter = new HelpFormatter();\n+        Set dispOptions = new HashSet(helpFormatter.getFullUsageSettings());\n+        dispOptions.add(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP);\n+        List expLines = new ArrayList(Arrays.asList(EXPECTED_USAGE));\n+        expLines.set(1,\" [-h -k -e|-d [-b|-3] -f <file>|-s <string>]                                    \");\n+        helpFormatter.setFullUsageSettings(dispOptions);\n+        checkNestedGroupHelp(helpFormatter, (String[]) expLines\n+                .toArray(new String[expLines.size()]));\n+    }\n+\n+    private void checkNestedGroupHelp(HelpFormatter helpFormatter, String[] expected) {\n         Group[] nestedGroups = {\n                 buildActionGroup(),\n                 buildAlgorithmGroup(),\n                 buildInputGroup()\n             };\n-\n-        HelpFormatter helpFormatter = new HelpFormatter();\n         helpFormatter.setGroup(buildEncryptionServiceGroup(nestedGroups));\n \n         final StringWriter out = new StringWriter();\n \n             final BufferedReader bufferedReader = new BufferedReader(new StringReader(\n                         out.toString()));\n-            final String[] expected = new String[] {\n-                    \"Usage:                                                                          \",\n-                    \" [-h -k -e|-d -b|-3 -f <file>|-s <string>]                                      \",\n-                    \"encryptionService                                                               \",\n-                    \"  -h (--help)               Print this message                                  \",\n-                    \"  -k (--key)                Encryption key                                      \",\n-                    \"  Action                    Action                                              \",\n-                    \"    -e (--encrypt)          Encrypt input                                       \",\n-                    \"    -d (--decrypt)          Decrypt input                                       \",\n-                    \"  Algorithm                 Encryption Algorithm                                \",\n-                    \"    -b (--blowfish)         Blowfish                                            \",\n-                    \"    -3 (--3DES)             Triple DES                                          \",\n-                    \"  Input                     Input                                               \",\n-                    \"    -f (--file) file        Input file                                          \",\n-                    \"    -s (--string) string    Input string                                        \"\n-                };\n \n             List actual = new ArrayList(expected.length);\n             String input;", "timestamp": 1217447721, "metainfo": ""}