{"sha": "094746596cb39b2bfbd1843233b7dd2009736c00", "log": "improved the testing of ant   ", "commit": "\n--- a/src/test/org/apache/commons/cli/ApplicationTest.java\n+++ b/src/test/org/apache/commons/cli/ApplicationTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n \n+/**\n+ * <p>\n+ * This is a collection of tests that test real world\n+ * applications command lines.\n+ * </p>\n+ * \n+ * <p>\n+ * The following are the applications that are tested:\n+ * <ul>\n+ * <li>Ant</li>\n+ * </ul>\n+ * </p>\n+ *\n+ * @author John Keyes (jbjk at mac.com)\n+ */\n public class ApplicationTest extends TestCase {\n-\n-    static {\n-        System.setProperty( \"org.apache.commons.cli.parser\",\n-                            \"org.apache.commons.cli.GnuParser\");\n-    }\n \n     public static Test suite() { \n         return new TestSuite(ApplicationTest.class); \n         super(name);\n     }\n \n+    /**\n+     * Ant test\n+     */\n     public void testAnt() {\n+        // use the GNU parser\n+        System.setProperty( \"org.apache.commons.cli.parser\",\n+                            \"org.apache.commons.cli.GnuParser\");\n+\n         Options options = new Options();\n         options.addOption( \"help\", false, \"print this message\" );\n         options.addOption( \"projecthelp\", false, \"print project help information\" );\n         options.addOption( \"logger\", true, \"the class which is to perform the logging\" );\n         options.addOption( \"listener\", true, \"add an instance of a class as a project listener\" );\n         options.addOption( \"buildfile\", true, \"use given buildfile\" );\n-        options.addOption( \"D\", true, \"use value for given property\" );\n+        options.addOption( \"D\", null, true, \"use value for given property\", false, true );\n         options.addOption( \"find\", true, \"search for buildfile towards the root of the filesystem and use it\" );\n \n-        String[] args = new String[]{ \"-buildfile\", \"mybuild.xml\" };\n+        String[] args = new String[]{ \"-buildfile\", \"mybuild.xml\",\n+            \"-Dproperty=value\", \"-Dproperty1=value1\",\n+            \"-projecthelp\" };\n \n         try {\n             CommandLine line = options.parse( args );\n-            assertTrue( \"mybuild.xml\" == line.getOptionValue( \"buildfile\" ) );\n+\n+            // check multiple values\n+            String[] opts = line.getOptionValues( \"D\" );\n+            assertEquals( opts[0], \"property=value\" );\n+            assertEquals( opts[1], \"property1=value1\" );\n+\n+            // check single value\n+            assertEquals( line.getOptionValue( \"buildfile\"), \"mybuild.xml\" );\n+\n+            // check option\n+            assertTrue( line.hasOption( \"projecthelp\") );\n         }\n         catch( ParseException exp ) {\n             fail( \"Unexpected exception:\" + exp.getMessage() );\n         }\n \n-        args = new String[]{ \"-buildfile\", \"mybuild.xml\",\n-        \"-Dproperty=value\" };\n-    \n-        try {\n-            CommandLine line = options.parse( args );\n-            assertEquals( line.getOptionValue( \"D\" ), \"property=value\" );\n-        }\n-        catch( ParseException exp ) {\n-            fail( \"Unexpected exception:\" + exp.getMessage() );\n-        }\n     }\n \n }", "timestamp": 1024608622, "metainfo": ""}