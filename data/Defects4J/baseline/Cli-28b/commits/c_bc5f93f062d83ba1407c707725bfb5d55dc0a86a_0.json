{"sha": "bc5f93f062d83ba1407c707725bfb5d55dc0a86a", "log": "Improved the javadoc explaining the stopAtNonOption parameter  ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLineParser.java\n+++ b/src/java/org/apache/commons/cli/CommandLineParser.java\n      *\n      * @param options the specified Options\n      * @param arguments the command line arguments\n-     * @param stopAtNonOption specifies whether to continue parsing the\n-     * arguments if a non option is encountered.\n+     * @param stopAtNonOption if <tt>true</tt> an unrecognized argument stops\n+     *     the parsing and the remaining arguments are added to the \n+     *     {@link CommandLine}s args list. If <tt>false</tt> an unrecognized\n+     *     argument triggers a ParseException.\n      *\n      * @return the list of atomic option and value tokens\n      * @throws ParseException if there are any problems encountered\n      * @param options the specified Options\n      * @param arguments the command line arguments\n      * @param properties command line option name-value pairs\n-     * @param stopAtNonOption specifies whether to continue parsing the\n+     * @param stopAtNonOption if <tt>true</tt> an unrecognized argument stops\n+     *     the parsing and the remaining arguments are added to the \n+     *     {@link CommandLine}s args list. If <tt>false</tt> an unrecognized\n+     *     argument triggers a ParseException.\n      *\n      * @return the list of atomic option and value tokens\n      * @throws ParseException if there are any problems encountered\n--- a/src/java/org/apache/commons/cli/DefaultParser.java\n+++ b/src/java/org/apache/commons/cli/DefaultParser.java\n {    \n     protected CommandLine cmd;\n     protected Options options;\n+\n+    /** \n+     * Flag indicating how unrecognized tokens are handled. <tt>true</tt> to stop\n+     * the parsing and add the remaining tokens to the args list.\n+     * <tt>false</tt> to throw an exception. \n+     */\n     protected boolean stopAtNonOption;\n-    \n+\n     /** The token currently processed. */\n     protected String currentToken;\n     \n         if (stopAtNonOption)\n         {\n             skipParsing = true;\n-        }        \n+        }\n     }\n \n     /**\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n      *\n      * @param options         the <code>Options</code>\n      * @param arguments       the <code>arguments</code>\n-     * @param stopAtNonOption specifies whether to stop interpreting the\n-     *                        arguments when a non option has been encountered\n-     *                        and to add them to the CommandLines args list.\n+     * @param stopAtNonOption if <tt>true</tt> an unrecognized argument stops\n+     *     the parsing and the remaining arguments are added to the \n+     *     {@link CommandLine}s args list. If <tt>false</tt> an unrecognized\n+     *     argument triggers a ParseException.\n      * @return the <code>CommandLine</code>\n      * @throws ParseException if an error occurs when parsing the arguments.\n      */\n      * @param options the specified Options\n      * @param arguments the command line arguments\n      * @param properties command line option name-value pairs\n-     * @param stopAtNonOption stop parsing the arguments when the first\n-     * non option is encountered.\n+     * @param stopAtNonOption if <tt>true</tt> an unrecognized argument stops\n+     *     the parsing and the remaining arguments are added to the \n+     *     {@link CommandLine}s args list. If <tt>false</tt> an unrecognized\n+     *     argument triggers a ParseException.\n      *\n      * @return the list of atomic option and value tokens\n      *", "timestamp": 1276603640, "metainfo": ""}