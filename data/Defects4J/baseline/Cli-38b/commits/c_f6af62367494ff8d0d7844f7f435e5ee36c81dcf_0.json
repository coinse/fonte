{"sha": "f6af62367494ff8d0d7844f7f435e5ee36c81dcf", "log": "Ignore tests purposely left empty test bodies. Thanks to GitHub user august782. This also closes #5 from GitHub.  ", "commit": "\n--- a/src/test/java/org/apache/commons/cli/BasicParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/BasicParserTest.java\n package org.apache.commons.cli;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n+import org.junit.Test;\n \n @SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BasicParserTest extends ParserTestCase\n         parser = new BasicParser();\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testDoubleDash2() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testAmbiguousLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the basicParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser (CLI-184)\")\n     public void testNegativeOption() throws Exception\n     {\n-        // not supported by the BasicParser (CLI-184)\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testPropertiesOption1() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testPropertiesOption2() throws Exception\n     {\n-        // not supported by the BasicParser\n     }    \n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testShortWithEqual() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testShortWithoutEqual() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testLongWithEqualDoubleDash() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testLongWithEqualSingleDash() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testUnambiguousPartialLongOption1() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testUnambiguousPartialLongOption2() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testUnambiguousPartialLongOption3() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testUnambiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testAmbiguousPartialLongOption1() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testAmbiguousPartialLongOption2() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testAmbiguousPartialLongOption3() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testAmbiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testPartialLongOptionSingleDash() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testBursting() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testUnrecognizedOptionWithBursting() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testMissingArgWithBursting() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testStopBursting() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the BasicParser\")\n     public void testStopBursting2() throws Exception\n     {\n-        // not supported by the BasicParser\n     }\n }\n--- a/src/test/java/org/apache/commons/cli/GnuParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/GnuParserTest.java\n package org.apache.commons.cli;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n+import org.junit.Test;\n \n @SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class GnuParserTest extends ParserTestCase\n         parser = new GnuParser();\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testDoubleDash2() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testAmbiguousLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser (CLI-184)\")\n     public void testNegativeOption() throws Exception\n     {\n-        // not supported by the GnuParser (CLI-184)\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testLongWithUnexpectedArgument1() throws Exception \n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testLongWithUnexpectedArgument2() throws Exception \n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testShortWithUnexpectedArgument() throws Exception \n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testUnambiguousPartialLongOption1() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testUnambiguousPartialLongOption2() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testUnambiguousPartialLongOption3() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testUnambiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testAmbiguousPartialLongOption1() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testAmbiguousPartialLongOption2() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testAmbiguousPartialLongOption3() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testAmbiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testPartialLongOptionSingleDash() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testBursting() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testUnrecognizedOptionWithBursting() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testMissingArgWithBursting() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testStopBursting() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the GnuParser\")\n     public void testStopBursting2() throws Exception\n     {\n-        // not supported by the GnuParser\n     }\n }\n--- a/src/test/java/org/apache/commons/cli/PosixParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/PosixParserTest.java\n package org.apache.commons.cli;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n+import org.junit.Test;\n \n /**\n  * Test case for the PosixParser.\n         parser = new PosixParser();\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testDoubleDash2() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testAmbiguousLongWithoutEqualSingleDash() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n     \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser (CLI-184)\")\n     public void testNegativeOption() throws Exception\n     {\n-        // not supported by the PosixParser (CLI-184)\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testLongWithUnexpectedArgument1() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testLongWithEqualSingleDash() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testShortWithEqual() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testUnambiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n \n-    @Override\n+    @Override @Test @Ignore(\"not supported by the PosixParser\")\n     public void testAmbiguousPartialLongOption4() throws Exception\n     {\n-        // not supported by the PosixParser\n     }\n }", "timestamp": 1466451660, "metainfo": ""}