{"sha": "43c4f66d93a9cc09eb4e8cdd17f71fe151edae9c", "log": "Brought CpTest inline with new default display settings Testtime console output back to none   ", "commit": "\n--- a/src/test/org/apache/commons/cli2/application/CpTest.java\n+++ b/src/test/org/apache/commons/cli2/application/CpTest.java\n             \"OPTIONS                                                                         \",\n             in.readLine());\n         assertEquals(\n-            \"  -a (--archive)            same as -dpR                                        \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -b (--backup)             make backup before removal                          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -d (--no-dereference)     preserve links                                      \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -f (--force)              remove existing destinations, never prompt          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -i (--interactive)        prompt before overwrite                             \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -l (--link)               link files instead of copying                       \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -p (--preserve)           preserve file attributes if possible                \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -P (--parents)            append source path to DIRECTORY                     \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -r                        copy recursively, non-directories as files          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  --sparse                  control creation of sparse files                    \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -R (--recursive)          copy directories recursively                        \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -s (--symbolic-link)      make symbolic links instead of copying              \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -S (--suffix)             override the usual backup suffix                    \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -u (--update)             copy only when the SOURCE file is newer than the    \",\n-            in.readLine());\n-        assertEquals(\n-            \"                            destination file or when the destination file is    \",\n-            in.readLine());\n-        assertEquals(\n-            \"                            missing                                             \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -v (--verbose)            explain what is being done                          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -V (--version-contol)     explain what is being done                          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  -x (--one-file-system)    stay on this file system                            \",\n-            in.readLine());\n-        assertEquals(\n-            \"  --help                    display this help and exit                          \",\n-            in.readLine());\n-        assertEquals(\n-            \"  --version                 output version information and exit                 \",\n+            \"  -a (--archive)                same as -dpR                                    \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -b (--backup)                 make backup before removal                      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -d (--no-dereference)         preserve links                                  \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -f (--force)                  remove existing destinations, never prompt      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -i (--interactive)            prompt before overwrite                         \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -l (--link)                   link files instead of copying                   \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -p (--preserve)               preserve file attributes if possible            \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -P (--parents)                append source path to DIRECTORY                 \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -r                            copy recursively, non-directories as files      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  --sparse WHEN                 control creation of sparse files                \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -R (--recursive)              copy directories recursively                    \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -s (--symbolic-link)          make symbolic links instead of copying          \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -S (--suffix) SUFFIX          override the usual backup suffix                \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -u (--update)                 copy only when the SOURCE file is newer than    \",\n+            in.readLine());\n+        assertEquals(\n+            \"                                the destination file or when the destination    \",\n+            in.readLine());\n+        assertEquals(\n+            \"                                file is missing                                 \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -v (--verbose)                explain what is being done                      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -V (--version-contol) WORD    explain what is being done                      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  -x (--one-file-system)        stay on this file system                        \",\n+            in.readLine());\n+        assertEquals(\n+            \"  --help                        display this help and exit                      \",\n+            in.readLine());\n+        assertEquals(\n+            \"  --version                     output version information and exit             \",\n             in.readLine());\n         assertEquals(\n             \"  SOURCE [SOURCE ...]                                                           \",\n--- a/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n+++ b/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n         helpFormatter.setGroup(options);\n         helpFormatter.setPrintWriter(new PrintWriter(writer));\n         helpFormatter.printHelp();\n-        System.out.println(writer);\n         final BufferedReader reader =\n             new BufferedReader(new StringReader(writer.toString()));\n         assertEquals(", "timestamp": 1103814280, "metainfo": ""}