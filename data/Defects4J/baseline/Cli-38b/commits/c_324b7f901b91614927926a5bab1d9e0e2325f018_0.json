{"sha": "324b7f901b91614927926a5bab1d9e0e2325f018", "log": "Fixed the bugs with the default options and the option groups (CLI-203 and CLI-204)  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/DefaultParser.java\n+++ b/src/main/java/org/apache/commons/cli/DefaultParser.java\n         {\n             String option = e.nextElement().toString();\n             \n-            if (!cmd.hasOption(option))\n-            {\n-                Option opt = options.getOption(option);\n-                \n+            Option opt = options.getOption(option);\n+            if (opt == null)\n+            {\n+                throw new UnrecognizedOptionException(\"Default option wasn't defined\", option);\n+            }\n+            \n+            // if the option is part of a group, check if another option of the group has been selected\n+            OptionGroup group = options.getOptionGroup(opt);\n+            boolean selected = group != null && group.getSelected() != null;\n+            \n+            if (!cmd.hasOption(option) && !selected)\n+            {\n                 // get the value from the properties\n                 String value = properties.getProperty(option);\n                 \n--- a/src/main/java/org/apache/commons/cli/Parser.java\n+++ b/src/main/java/org/apache/commons/cli/Parser.java\n         for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)\n         {\n             String option = e.nextElement().toString();\n-\n-            if (!cmd.hasOption(option))\n-            {\n-                Option opt = getOptions().getOption(option);\n-\n+            \n+            Option opt = options.getOption(option);\n+            if (opt == null)\n+            {\n+                throw new UnrecognizedOptionException(\"Default option wasn't defined\", option);\n+            }\n+            \n+            // if the option is part of a group, check if another option of the group has been selected\n+            OptionGroup group = options.getOptionGroup(opt);\n+            boolean selected = group != null && group.getSelected() != null;\n+            \n+            if (!cmd.hasOption(option) && !selected)\n+            {\n                 // get the value from the properties instance\n                 String value = properties.getProperty(option);\n \n--- a/src/test/java/org/apache/commons/cli/OptionGroupTest.java\n+++ b/src/test/java/org/apache/commons/cli/OptionGroupTest.java\n \n package org.apache.commons.cli;\n \n+import java.util.Properties;\n+\n import junit.framework.TestCase;\n \n /**\n public class OptionGroupTest extends TestCase\n {\n     private Options _options = null;\n-    private CommandLineParser parser = new PosixParser();\n+    private Parser parser = new PosixParser();\n \n     public void setUp()\n     {\n         assertTrue( \"Confirm NO extra args\", cl.getArgList().size() == 0);\n     }\n \n+    public void testTwoOptionsFromGroupWithProperties() throws Exception\n+    {\n+        String[] args = new String[] { \"-f\" };\n+        \n+        Properties properties = new Properties();\n+        properties.put(\"d\", \"true\");\n+        \n+        CommandLine cl = parser.parse( _options, args, properties);\n+        assertTrue(cl.hasOption(\"f\"));\n+        assertTrue(!cl.hasOption(\"d\"));\n+    }\n+\n     public void testValidLongOnlyOptions() throws Exception\n     {\n         CommandLine cl1 = parser.parse(_options, new String[]{\"--export\"});\n--- a/src/test/java/org/apache/commons/cli/ParserTestCase.java\n+++ b/src/test/java/org/apache/commons/cli/ParserTestCase.java\n         CommandLine cmd = parse(parser, opts, null, properties);\n         assertTrue(cmd.hasOption(\"f\"));\n     }\n+\n+    public void testPropertyOptionUnexpected() throws Exception\n+    {\n+        Options opts = new Options();\n+        \n+        Properties properties = new Properties();\n+        properties.setProperty(\"f\", \"true\");\n+        \n+        try {\n+            parse(parser, opts, null, properties);\n+            fail(\"UnrecognizedOptionException expected\");\n+        } catch (UnrecognizedOptionException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testPropertyOptionGroup() throws Exception\n+    {\n+        Options opts = new Options();\n+        \n+        OptionGroup group1 = new OptionGroup();\n+        group1.addOption(new Option(\"a\", null));\n+        group1.addOption(new Option(\"b\", null));\n+        opts.addOptionGroup(group1);\n+        \n+        OptionGroup group2 = new OptionGroup();\n+        group2.addOption(new Option(\"x\", null));\n+        group2.addOption(new Option(\"y\", null));\n+        opts.addOptionGroup(group2);\n+        \n+        String[] args = new String[] { \"-a\" };\n+        \n+        Properties properties = new Properties();\n+        properties.put(\"b\", \"true\");\n+        properties.put(\"x\", \"true\");\n+        \n+        CommandLine cmd = parse(parser, opts, args, properties);\n+        \n+        assertTrue(cmd.hasOption(\"a\"));\n+        assertFalse(cmd.hasOption(\"b\"));\n+        assertTrue(cmd.hasOption(\"x\"));\n+        assertFalse(cmd.hasOption(\"y\"));\n+    }\n }", "timestamp": 1276761458, "metainfo": ""}