{"sha": "648c03ad0f852812cb9d056159313f4de713faac", "log": "Long descriptions with newlines are now correctly formatted  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n \n         while (left < chars.length) {\n             int right = left;\n-            while (right < chars.length && chars[right] != '\\n') {\n+            while (right < chars.length && chars[right] != '\\n' && right<left+width+1) {\n                 right++;\n             }\n-            if (right < chars.length) {\n+            if (right<chars.length && chars[right] == '\\n') {\n                 final String line = new String(chars, left, right - left);\n                 lines.add(line);\n                 left = right + 1;\n--- a/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n+++ b/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n import java.io.StringReader;\n import java.io.StringWriter;\n import java.util.Iterator;\n+import java.util.List;\n \n import junit.framework.TestCase;\n \n         assertEquals(\"\", i.next());\n         assertFalse(i.hasNext());\n     }\n+\n+    public void testWrap_NewLine2() {\n+        List wrapped = HelpFormatter.wrap(\"A really quite long general description of the option with specific alternatives documented:\\n\"+\n+                    \"  Indented special case\\n\"+\n+                    \"  Alternative scenario\", 30);\n+        \n+        final Iterator i =\n+            wrapped.iterator();\n+        \n+        assertEquals(\"A really quite long general\", i.next());\n+        assertEquals(\"description of the option\", i.next());\n+        assertEquals(\"with specific alternatives\", i.next());\n+        assertEquals(\"documented:\", i.next());\n+        assertEquals(\"  Indented special case\", i.next());\n+        assertEquals(\"  Alternative scenario\", i.next());\n+        assertFalse(i.hasNext());\n+    }\n     \n     public void testWrap_Below1Length() {\n         try{", "timestamp": 1113666032, "metainfo": ""}