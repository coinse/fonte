{"sha": "0cebfb4cdd85a968f76bca830bcfab8c094d8949", "log": "Added a test for the -Dflag case  ", "commit": "\n--- a/src/test/org/apache/commons/cli/BasicParserTest.java\n+++ b/src/test/org/apache/commons/cli/BasicParserTest.java\n         parser = new BasicParser();\n     }\n \n-    public void testPropertiesOption() throws Exception\n+    public void testPropertiesOption1() throws Exception\n     {\n         // not supported by the BasicParser\n     }\n+\n+    public void testPropertiesOption2() throws Exception\n+    {\n+        // not supported by the BasicParser\n+    }    \n \n     public void testShortWithEqual() throws Exception\n     {\n--- a/src/test/org/apache/commons/cli/ParserTestCase.java\n+++ b/src/test/org/apache/commons/cli/ParserTestCase.java\n \n import java.util.Arrays;\n import java.util.List;\n+import java.util.Properties;\n \n import junit.framework.TestCase;\n \n         assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n     }\n \n-    public void testPropertiesOption() throws Exception\n+    public void testPropertiesOption1() throws Exception\n     {\n         String[] args = new String[] { \"-Jsource=1.5\", \"-J\", \"target\", \"1.5\", \"foo\" };\n \n         assertEquals(\"value 2\", \"1.5\", values.get(1));\n         assertEquals(\"value 3\", \"target\", values.get(2));\n         assertEquals(\"value 4\", \"1.5\", values.get(3));\n+        \n         List argsleft = cl.getArgList();\n-        assertEquals(\"Should be 1 arg left\",1,argsleft.size());\n-        assertEquals(\"Expecting foo\",\"foo\",argsleft.get(0));\n-    }\n-    \n+        assertEquals(\"Should be 1 arg left\", 1, argsleft.size());\n+        assertEquals(\"Expecting foo\", \"foo\", argsleft.get(0));\n+    }\n+\n+    public void testPropertiesOption2() throws Exception\n+    {\n+        String[] args = new String[] { \"-Dparam1\", \"-Dparam2=value2\", \"-D\"};\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withValueSeparator().hasOptionalArgs(2).create('D'));\n+\n+        CommandLine cl = parser.parse(options, args);\n+        \n+        Properties props = cl.getOptionProperties(\"D\");\n+        assertNotNull(\"null properties\", props);\n+        assertEquals(\"number of properties in \" + props, 2, props.size());\n+        assertEquals(\"property 1\", \"true\", props.getProperty(\"param1\"));\n+        assertEquals(\"property 2\", \"value2\", props.getProperty(\"param2\"));\n+        \n+        List argsleft = cl.getArgList();\n+        assertEquals(\"Should be no arg left\", 0, argsleft.size());\n+    }\n+\n     public void testUnambiguousPartialLongOption1() throws Exception\n     {\n         String[] args = new String[] { \"--ver\" };", "timestamp": 1243526278, "metainfo": ""}