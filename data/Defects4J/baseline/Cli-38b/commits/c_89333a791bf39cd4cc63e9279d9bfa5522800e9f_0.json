{"sha": "89333a791bf39cd4cc63e9279d9bfa5522800e9f", "log": "Fix some obvious raw types  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/Option.java\n+++ b/src/main/java/org/apache/commons/cli/Option.java\n     @Deprecated\n     public void setType(Object type)\n     {\n-        setType((Class) type);\n+        setType((Class<?>) type);\n     }\n \n     /**\n      *\n      * @param type the type of this Option\n      */\n-    public void setType(Class type)\n+    public void setType(Class<?> type)\n     {\n         this.type = type;\n     }\n--- a/src/main/java/org/apache/commons/cli/OptionBuilder.java\n+++ b/src/main/java/org/apache/commons/cli/OptionBuilder.java\n     private static int numberOfArgs = Option.UNINITIALIZED;\n \n     /** option type */\n-    private static Class type;\n+    private static Class<?> type;\n \n     /** option can have an optional argument value */\n     private static boolean optionalArg;\n     @Deprecated\n     public static OptionBuilder withType(Object newType)\n     {\n-        return withType((Class) newType);\n+        return withType((Class<?>) newType);\n     }\n \n     /**\n      * @param newType the type of the Options argument value\n      * @return the OptionBuilder instance\n      */\n-    public static OptionBuilder withType(Class newType)\n+    public static OptionBuilder withType(Class<?> newType)\n     {\n         OptionBuilder.type = newType;\n \n--- a/src/main/java/org/apache/commons/cli/TypeHandler.java\n+++ b/src/main/java/org/apache/commons/cli/TypeHandler.java\n      */\n     public static Object createValue(String str, Object obj) throws ParseException\n     {\n-        return createValue(str, (Class) obj);\n+        return createValue(str, (Class<?>) obj);\n     }\n \n     /**\n      * the value of <code>str</code>.\n      * @throws ParseException if the value creation for the given class failed\n      */\n-    public static Object createValue(String str, Class clazz) throws ParseException\n+    public static Object createValue(String str, Class<?> clazz) throws ParseException\n     {\n         if (PatternOptionBuilder.STRING_VALUE == clazz)\n         {\n       */\n     public static Object createObject(String classname) throws ParseException\n     {\n-        Class cl;\n+        Class<?> cl;\n \n         try\n         {\n      * @return The class if it is found\n      * @throws ParseException if the class could not be found\n      */\n-    public static Class createClass(String classname) throws ParseException\n+    public static Class<?> createClass(String classname) throws ParseException\n     {\n         try\n         {", "timestamp": 1359568110, "metainfo": ""}