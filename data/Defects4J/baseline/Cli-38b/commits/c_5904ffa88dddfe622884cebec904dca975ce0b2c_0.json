{"sha": "5904ffa88dddfe622884cebec904dca975ce0b2c", "log": "improved javadoc info describing how to use PatternOptionBuilder   ", "commit": "\n--- a/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n+++ b/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n package org.apache.commons.cli;\n \n /** \n+ * <p>\n  * Allows Options to be created from a single String.\n- *\n+ * The pattern contains various single character flags and via\n+ * an optional punctuation character, their expected type.\n+ * </p>\n+ *\n+ * <table border=\"1\">\n+ * <tr><td>a</td><td>-a flag</td></tr>\n+ * <tr><td>b@</td><td>-b [classname]</td></tr>\n+ * <tr><td>c&gt;</td><td>-c [filename]</td></tr>\n+ * <tr><td>d+</td><td>-d [classname] (creates object via empty contructor)</td></tr>\n+ * <tr><td>e%</td><td>-e [number] (creates Number instance)</td></tr>\n+ * <tr><td>f/</td><td>-f [url]</td></tr>\n+ * </table>\n+ *\n+ * <p>\n+ * For example, the following allows command line flags of '-v -p string-value -f /dir/file'.\n+ * </p>\n+ * <code>Options options = PatternOptionBuilder.parsePattern(\"vp:f/\");</code>\n+ *\n+ * <p>\n  * TODO These need to break out to OptionType and also \n  * to be pluggable.\n+ * </p>\n  *\n  * @author Henri Yandell (bayard @ generationjava.com)\n  * @version $Revision: 1.2 $\n \n         return options;\n     }\n-}\n+}", "timestamp": 1093142254, "metainfo": ""}