{"sha": "0961b24e30a244ee26a568541c44840584642d5e", "log": "Test case for #455  Works OK since previous fix for equals", "commit": "\n--- a/src/test/java/org/jsoup/nodes/DocumentTest.java\n+++ b/src/test/java/org/jsoup/nodes/DocumentTest.java\n package org.jsoup.nodes;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.TextUtil;\n+import org.jsoup.integration.ParseTest;\n+import org.junit.Ignore;\n+import org.junit.Test;\n \n import java.io.File;\n import java.io.IOException;\n \n-import org.jsoup.Jsoup;\n-import org.jsoup.TextUtil;\n-import org.jsoup.integration.ParseTest;\n-import org.junit.Test;\n-import org.junit.Ignore;\n-\n import static org.jsoup.nodes.Document.OutputSettings.Syntax;\n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n \n /**\n  Tests for Document.\n         Document doc = Jsoup.parse(builder.toString());\n         doc.clone();\n     }\n+\n+    @Test public void DocumentsWithSameContentAreEqual() throws Exception {\n+        Document docA = Jsoup.parse(\"<div/>One\");\n+        Document docB = Jsoup.parse(\"<div/>One\");\n+        Document docC = Jsoup.parse(\"<div/>Two\");\n+\n+        assertEquals(docA, docB);\n+        assertFalse(docA.equals(docC));\n+        assertEquals(docA.hashCode(), docB.hashCode());\n+        assertFalse(docA.hashCode() == docC.hashCode());\n+    }\n }", "timestamp": 1428028221, "metainfo": ""}