{"sha": "98e87c6ae88fc31782f7cb542d4637df1af19f89", "log": "Merge pull request #526 from offa/class_fix  Fix for selector attribute space normalization (issue #521)", "commit": "\n--- a/src/main/java/org/jsoup/select/Evaluator.java\n+++ b/src/main/java/org/jsoup/select/Evaluator.java\n \n         @Override\n         public boolean matches(Element root, Element element) {\n-            return element.hasAttr(key) && value.equalsIgnoreCase(element.attr(key));\n+            return element.hasAttr(key) && value.equalsIgnoreCase(element.attr(key).trim());\n         }\n \n         @Override\n--- a/src/test/java/org/jsoup/select/SelectorTest.java\n+++ b/src/test/java/org/jsoup/select/SelectorTest.java\n         assertEquals(\"div\", doc.select(\"div[k\" + s + \"]\").first().tagName());\n         assertEquals(\"div\", doc.select(\"div:containsOwn(\" + s + \")\").first().tagName());\n     }\n+    \n+    @Test\n+    public void selectClassWithSpace() {\n+        final String html = \"<div class=\\\"value\\\">class without space</div>\\n\"\n+                          + \"<div class=\\\"value \\\">class with space</div>\";\n+        \n+        Document doc = Jsoup.parse(html);\n+        \n+        Elements found = doc.select(\"div[class=value ]\");\n+        assertEquals(2, found.size());\n+        assertEquals(\"class without space\", found.get(0).text());\n+        assertEquals(\"class with space\", found.get(1).text());\n+        \n+        found = doc.select(\"div[class=\\\"value \\\"]\");\n+        assertEquals(2, found.size());\n+        assertEquals(\"class without space\", found.get(0).text());\n+        assertEquals(\"class with space\", found.get(1).text());\n+        \n+        found = doc.select(\"div[class=\\\"value\\\\ \\\"]\");\n+        assertEquals(0, found.size());\n+    }\n+    \n }\n--- a/src/main/java/org/jsoup/nodes/FormElement.java\n+++ b/src/main/java/org/jsoup/nodes/FormElement.java\n             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable\n             String name = el.attr(\"name\");\n             if (name.length() == 0) continue;\n+            String type = el.attr(\"type\");\n \n             if (\"select\".equals(el.tagName())) {\n                 Elements options = el.select(\"option[selected]\");\n                     if (option != null)\n                         data.add(HttpConnection.KeyVal.create(name, option.val()));\n                 }\n+            } else if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n+                // only add checkbox or radio if they have the checked attribute\n+                if (el.hasAttr(\"checked\"))\n+                    data.add(HttpConnection.KeyVal.create(name, el.val()));\n             } else {\n                 data.add(HttpConnection.KeyVal.create(name, el.val()));\n             }\n--- a/src/test/java/org/jsoup/TextUtil.java\n+++ b/src/test/java/org/jsoup/TextUtil.java\n \n  @author Jonathan Hedley, jonathan@hedley.net */\n public class TextUtil {\n+    public static final String LE = String.format(\"%n\");\n+\n     public static String stripNewlines(String text) {\n         text = text.replaceAll(\"\\\\n\\\\s*\", \"\");\n         return text;\n--- a/src/test/java/org/jsoup/helper/W3CDomTest.java\n+++ b/src/test/java/org/jsoup/helper/W3CDomTest.java\n \n import java.io.File;\n import java.io.IOException;\n+\n+import static org.jsoup.TextUtil.LE;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n         Document wDoc = w3c.fromJsoup(doc);\n         String out = w3c.asString(wDoc);\n         assertEquals(\n-                \"<html>\\n\" +\n-                        \"<head>\\n\" +\n-                        \"<META http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n\" +\n-                        \"<title>W3c</title>\\n\" +\n-                        \"</head>\\n\" +\n-                        \"<body>\\n\" +\n-                        \"<p class=\\\"one\\\" id=\\\"12\\\">Text</p>\\n\" +\n-                        \"<!-- comment -->\\n\" +\n-                        \"<invalid>What<script>alert('!')</script>\\n\" +\n-                        \"</invalid>\\n\" +\n-                        \"</body>\\n\" +\n-                        \"</html>\\n\"\n+                \"<html>\" + LE +\n+                        \"<head>\" + LE +\n+                        \"<META http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\" + LE +\n+                        \"<title>W3c</title>\" + LE +\n+                        \"</head>\" + LE +\n+                        \"<body>\" + LE +\n+                        \"<p class=\\\"one\\\" id=\\\"12\\\">Text</p>\" + LE +\n+                        \"<!-- comment -->\" + LE +\n+                        \"<invalid>What<script>alert('!')</script>\" + LE +\n+                        \"</invalid>\" + LE +\n+                        \"</body>\" + LE +\n+                        \"</html>\" + LE\n                 , out);\n     }\n \n--- a/src/test/java/org/jsoup/nodes/FormElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/FormElementTest.java\n \n     @Test public void createsFormData() {\n         String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n-                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea></form>\";\n+                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n+                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n+                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n+                \"</form>\";\n         Document doc = Jsoup.parse(html);\n         FormElement form = (FormElement) doc.select(\"form\").first();\n         List<Connection.KeyVal> data = form.formData();\n \n-        assertEquals(4, data.size());\n+        assertEquals(6, data.size());\n         assertEquals(\"one=two\", data.get(0).toString());\n         assertEquals(\"three=four\", data.get(1).toString());\n         assertEquals(\"three=five\", data.get(2).toString());\n         assertEquals(\"six=seven\", data.get(3).toString());\n+        assertEquals(\"seven=on\", data.get(4).toString());\n+        assertEquals(\"eight=\", data.get(5).toString());\n     }\n \n     @Test public void createsSubmitableConnection() {", "timestamp": 1427664760, "metainfo": ""}