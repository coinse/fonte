{"sha": "c98349a7fb5598f0cbac88130520171bd6f253c1", "log": "Updated the Cleaner to support custom allowed protocols such as \"cid:\" and \"data:\".  Fixes #127", "commit": "\n--- a/src/main/java/org/jsoup/safety/Whitelist.java\n+++ b/src/main/java/org/jsoup/safety/Whitelist.java\n     }\n \n     private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n-        // resolve relative urls to abs, and optionally update the attribute so output html has abs.\n+        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n         // rels without a baseuri get removed\n         String value = el.absUrl(attr.getKey());\n+        if (value.length() == 0)\n+            value = attr.getValue(); // if it could not be made abs, run as-is to allow custom unknown protocols\n         if (!preserveRelativeLinks)\n             attr.setValue(value);\n         \n--- a/src/test/java/org/jsoup/safety/CleanerTest.java\n+++ b/src/test/java/org/jsoup/safety/CleanerTest.java\n         String clean = Jsoup.clean(html, Whitelist.basic());\n         assertEquals(\"<a rel=\\\"nofollow\\\">Link</a>\", clean);\n     }\n+\n+    @Test public void handlesCustomProtocols() {\n+        String html = \"<img src='cid:12345' /> <img src='data:gzzt' />\";\n+        String dropped = Jsoup.clean(html, Whitelist.basicWithImages());\n+        assertEquals(\"<img /> \\n<img />\", dropped);\n+\n+        String preserved = Jsoup.clean(html, Whitelist.basicWithImages().addProtocols(\"img\", \"src\", \"cid\", \"data\"));\n+        assertEquals(\"<img src=\\\"cid:12345\\\" /> \\n<img src=\\\"data:gzzt\\\" />\", preserved);\n+    }\n }", "timestamp": 1314508475, "metainfo": ""}