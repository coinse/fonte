{"sha": "40a35750e655d5229744684086a9249b233058bf", "log": "String.isEmpty() and LinkedList.peekFirst() is not part of the Java 5.0 API.", "commit": "\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n         String tagName = tq.consumeWord();\n         tq.chompTo(\">\");\n \n-        if (!tagName.isEmpty()) {\n+        if (tagName.length() != 0) {\n             Tag tag = Tag.valueOf(tagName);\n             popStackToClose(tag);\n         }\n         tq.consume(\"<\");\n         String tagName = tq.consumeWord();\n \n-        if (tagName.isEmpty()) { // doesn't look like a start tag after all; put < back on stack and handle as text\n+        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text\n             tq.addFirst(\"&lt;\");\n             parseTextNode();\n             return;\n         // <base href>: update the base uri\n         if (child.tagName().equals(\"base\")) {\n             String href = child.absUrl(\"href\");\n-            if (!href.isEmpty()) { // ignore <base target> etc\n+            if (href.length() != 0) { // ignore <base target> etc\n                 baseUri = href;\n                 doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base\n             }\n             }\n             tq.consumeWhitespace();\n         }\n-        if (!key.isEmpty())\n+        if (key.length() != 0)\n             return Attribute.createFromEncoded(key, value);\n         else {\n             tq.consume(); // unknown char, keep popping so not get stuck\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n      */\n     public boolean consumeWhitespace() {\n         boolean seen = false;\n-        while (!queue.isEmpty() && Character.isWhitespace(queue.peekFirst())) {\n+        while (!queue.isEmpty() && Character.isWhitespace(queue.peek())) {\n             consume();\n             seen = true;\n         }\n      */\n     public String consumeWord() {\n         StringBuilder wordAccum = new StringBuilder();\n-        while (!queue.isEmpty() && Character.isLetterOrDigit(queue.peekFirst())) {\n+        while (!queue.isEmpty() && Character.isLetterOrDigit(queue.peek())) {\n             wordAccum.append(queue.removeFirst());\n         }\n         return wordAccum.toString();\n--- a/src/test/java/org/jsoup/select/SelectorTest.java\n+++ b/src/test/java/org/jsoup/select/SelectorTest.java\n         assertEquals(\"div\", els.get(2).tagName());\n         assertEquals(\"bar\", els.get(2).attr(\"title\"));\n         assertEquals(\"div\", els.get(3).tagName());\n-        assertTrue(els.get(3).attr(\"title\").isEmpty()); // missing attributes come back as empty string\n+        assertTrue(els.get(3).attr(\"title\").length() == 0); // missing attributes come back as empty string\n         assertFalse(els.get(3).hasAttr(\"title\"));\n         assertEquals(\"span\", els.get(4).tagName());\n     }", "timestamp": 1309605112, "metainfo": ""}