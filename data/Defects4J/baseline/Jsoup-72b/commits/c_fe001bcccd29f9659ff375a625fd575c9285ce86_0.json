{"sha": "fe001bcccd29f9659ff375a625fd575c9285ce86", "log": "Add Node.filter, Elements.filter convenience API", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n import org.jsoup.helper.StringUtil;\n import org.jsoup.helper.Validate;\n import org.jsoup.parser.Parser;\n+import org.jsoup.select.NodeFilter;\n import org.jsoup.select.NodeTraversor;\n import org.jsoup.select.NodeVisitor;\n \n     }\n \n     /**\n+     * Perform a depth-first filtering through this node and its descendants.\n+     * @param nodeFilter the filter callbacks to perform on each node\n+     * @return this node, for chaining\n+     */\n+    public Node filter(NodeFilter nodeFilter) {\n+        Validate.notNull(nodeFilter);\n+        NodeTraversor.filter(nodeFilter, this);\n+        return this;\n+    }\n+\n+    /**\n      Get the outer HTML of this node.\n      @return HTML\n      */\n--- a/src/main/java/org/jsoup/select/Elements.java\n+++ b/src/main/java/org/jsoup/select/Elements.java\n     }\n \n     /**\n+     * Perform a depth-first filtering on each of the selected elements.\n+     * @param nodeFilter the filter callbacks to perform on each node\n+     * @return this, for chaining\n+     */\n+    public Elements filter(NodeFilter nodeFilter) {\n+        NodeTraversor.filter(nodeFilter, this);\n+        return this;\n+    }\n+\n+    /**\n      * Get the {@link FormElement} forms from the selected elements, if any.\n      * @return a list of {@link FormElement}s pulled from the matched elements. The list will be empty if the elements contain\n      * no forms.", "timestamp": 1507503484, "metainfo": ""}