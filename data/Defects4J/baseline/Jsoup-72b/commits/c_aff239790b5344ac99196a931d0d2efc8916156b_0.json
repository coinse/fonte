{"sha": "aff239790b5344ac99196a931d0d2efc8916156b", "log": "Make sure encoder works across threads", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n \n         private Entities.EscapeMode escapeMode = Entities.EscapeMode.base;\n         private Charset charset;\n-        private final ThreadLocal<CharsetEncoder> encoder = new ThreadLocal<>(); // enables the doc to be shared in multiple threads, without creating new encoders on every travers\n+        // enables the doc to be shared in multiple threads, without creating new encoders on every traverse\n+        private final ThreadLocal<CharsetEncoder> encoder = new ThreadLocal<CharsetEncoder>() {\n+            @Override\n+            protected CharsetEncoder initialValue() {\n+                return charset.newEncoder();\n+            }\n+        };\n         private boolean prettyPrint = true;\n         private boolean outline = false;\n         private int indentAmount = 1;\n          */\n         public OutputSettings charset(Charset charset) {\n             this.charset = charset;\n-            encoder.set(charset.newEncoder());\n+            encoder.remove();\n             return this;\n         }\n \n--- a/src/test/java/org/jsoup/nodes/DocumentTest.java\n+++ b/src/test/java/org/jsoup/nodes/DocumentTest.java\n         assertTrue(\"Should have contained a '&#xa0;' or a '&nbsp;'.\",\n                 output.contains(\"&#xa0;\") || output.contains(\"&nbsp;\"));\n     }\n+\n+    @Test public void parseAndHtmlOnDifferentThreads() throws InterruptedException {\n+        String html = \"<p>Alright then.</p>\";\n+        final Document doc = Jsoup.parse(html);\n+        final String[] out = new String[1];\n+        Thread thread = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                out[0] = doc.select(\"p\").outerHtml();\n+            }\n+        });\n+        thread.start();\n+        thread.join();\n+        assertEquals(\"<p>Alright then.</p>\", out[0]);\n+    }\n }", "timestamp": 1499030998, "metainfo": ""}