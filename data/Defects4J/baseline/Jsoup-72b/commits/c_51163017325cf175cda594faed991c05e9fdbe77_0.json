{"sha": "51163017325cf175cda594faed991c05e9fdbe77", "log": "Fixed IndexLessThan matches() to ignore root element and added tests (#918)  * Fixed IndexLessThan matches() to ignore root element and added tests\r \r * moved unit tests for getElementsByIndexLessThan() and getElementsByIndexGreaterThan() to ElementTest.java", "commit": "\n--- a/src/main/java/org/jsoup/select/Evaluator.java\n+++ b/src/main/java/org/jsoup/select/Evaluator.java\n \n         @Override\n         public boolean matches(Element root, Element element) {\n-            return element.elementSiblingIndex() < index;\n+            return root != element && element.elementSiblingIndex() < index;\n         }\n \n         @Override\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertTrue(matched.is(\":containsOwn(get what you want)\"));\n     }\n \t\n+\t@Test\n+\tpublic void testRemoveBeforeIndex() {\n+\t\tDocument doc = Jsoup.parse(\n+\t            \"<html><body><div><p>before1</p><p>before2</p><p>XXX</p><p>after1</p><p>after2</p></div></body></html>\",\n+\t            \"\");\n+\t    Element body = doc.select(\"body\").first();\n+\t    Elements elems = body.select(\"p:matchesOwn(XXX)\");\n+\t    Element xElem = elems.first();\n+\t    Elements beforeX = xElem.parent().getElementsByIndexLessThan(xElem.elementSiblingIndex());\n+\n+\t    for(Element p : beforeX) {\n+\t        p.remove();\n+\t    }\n+\n+\t    assertEquals(\"<body><div><p>XXX</p><p>after1</p><p>after2</p></div></body>\", TextUtil.stripNewlines(body.outerHtml()));\n+\t}\n \t\n+\t@Test\n+\tpublic void testRemoveAfterIndex() {\n+\t\t Document doc2 = Jsoup.parse(\n+\t\t            \"<html><body><div><p>before1</p><p>before2</p><p>XXX</p><p>after1</p><p>after2</p></div></body></html>\",\n+\t\t            \"\");\n+\t    Element body = doc2.select(\"body\").first();\n+\t    Elements elems = body.select(\"p:matchesOwn(XXX)\");\n+\t    Element xElem = elems.first();\n+\t    Elements afterX = xElem.parent().getElementsByIndexGreaterThan(xElem.elementSiblingIndex());\n+\n+\t    for(Element p : afterX) {\n+\t        p.remove();\n+\t    }\n+\n+\t    assertEquals(\"<body><div><p>before1</p><p>before2</p><p>XXX</p></div></body>\", TextUtil.stripNewlines(body.outerHtml()));\n+\t}\n \t\n     @Test \n     public void whiteSpaceClassElement(){\n \t    assertFalse(hasClass);\n \t        \n \t}\n-\t\n-\t\n }", "timestamp": 1507415848, "metainfo": ""}