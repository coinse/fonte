{"sha": "982ce8a3cea6158e22f351527d12853f0bd7050f", "log": "Merge pull request #931 from kno10/patch-2  Make consistency checks consistent", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Attribute.java\n+++ b/src/main/java/org/jsoup/nodes/Attribute.java\n      @param key the new key; must not be null\n      */\n     public void setKey(String key) {\n-        Validate.notEmpty(key);\n+        Validate.notNull(key);\n         key = key.trim();\n+        Validate.notEmpty(key); // trimming could potentially make empty, so validate here\n         if (parent != null) {\n             int i = parent.indexOfKey(this.key);\n             if (i != Attributes.NotFound)\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n         }\n \n         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n-            String name = t.asEndTag().name(); // matches with case sensitivity if enabled\n+            String name = tb.settings.normalizeTag(t.asEndTag().name()); // matches with case sensitivity if enabled\n             ArrayList<Element> stack = tb.getStack();\n             for (int pos = stack.size() -1; pos >= 0; pos--) {\n                 Element node = stack.get(pos);\n--- a/src/test/java/org/jsoup/TextUtil.java\n+++ b/src/test/java/org/jsoup/TextUtil.java\n \n  @author Jonathan Hedley, jonathan@hedley.net */\n public class TextUtil {\n-    public static final String LE = String.format(\"%n\");\n-\n     public static String stripNewlines(String text) {\n         text = text.replaceAll(\"\\\\n\\\\s*\", \"\");\n         return text;\n--- a/src/test/java/org/jsoup/helper/W3CDomTest.java\n+++ b/src/test/java/org/jsoup/helper/W3CDomTest.java\n package org.jsoup.helper;\n \n import org.jsoup.Jsoup;\n+import org.jsoup.TextUtil;\n import org.jsoup.integration.ParseTest;\n import org.jsoup.nodes.Element;\n import org.junit.Test;\n import java.io.File;\n import java.io.IOException;\n \n-import static org.jsoup.TextUtil.LE;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \n \n         W3CDom w3c = new W3CDom();\n         Document wDoc = w3c.fromJsoup(doc);\n-        String out = w3c.asString(wDoc);\n-        assertEquals(\n-                \"<html>\" + LE +\n-                        \"<head>\" + LE +\n-                        \"<META http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\" + LE +\n-                        \"<title>W3c</title>\" + LE +\n-                        \"</head>\" + LE +\n-                        \"<body>\" + LE +\n-                        \"<p class=\\\"one\\\" id=\\\"12\\\">Text</p>\" + LE +\n-                        \"<!-- comment -->\" + LE +\n-                        \"<invalid>What<script>alert('!')</script>\" + LE +\n-                        \"</invalid>\" + LE +\n-                        \"</body>\" + LE +\n-                        \"</html>\" + LE\n-                , out);\n+        String out = TextUtil.stripNewlines(w3c.asString(wDoc));\n+        String expected = TextUtil.stripNewlines(\n+                \"<html><head><META http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\"><title>W3c</title>\" +\n+                \"</head><body><p class=\\\"one\\\" id=\\\"12\\\">Text</p><!-- comment --><invalid>What<script>alert('!')</script>\" +\n+                \"</invalid></body></html>\"\n+        );\n+        assertEquals(expected, out);\n     }\n \n     @Test\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n         assertEquals(\"<r> <X> A </X> <y> B </y> </r>\", StringUtil.normaliseWhitespace(doc.body().html()));\n     }\n \n+    @Test public void caseInsensitiveParseTree() {\n+        String html = \"<r><X>A</X><y>B</y></r>\";\n+        Parser parser = Parser.htmlParser();\n+        Document doc = parser.parseInput(html, \"\");\n+        assertEquals(\"<r> <x> A </x> <y> B </y> </r>\", StringUtil.normaliseWhitespace(doc.body().html()));\n+    }\n+\n     @Test public void selfClosingVoidIsNotAnError() {\n         String html = \"<p>test<br/>test<br/></p>\";\n         Parser parser = Parser.htmlParser().setTrackErrors(5);", "timestamp": 1507414803, "metainfo": ""}