{"sha": "ac5e9e8392ea4ab436fe71b72ed78cdfd0aba7df", "log": "Name safety", "commit": "\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n         return el;\n     }\n \n-    Element insert(String startTagName) {\n+    Element insertStartTag(String startTagName) {\n         Element el = new Element(Tag.valueOf(startTagName), baseUri);\n         insert(el);\n         return el;\n \n             // 8. create new element from element, 9 insert into current node, onto stack\n             skip = false; // can only skip increment from 4.\n-            Element newEl = insert(entry.nodeName()); // todo: avoid fostering here?\n+            Element newEl = insertStartTag(entry.nodeName()); // todo: avoid fostering here?\n             // newEl.namespace(entry.namespace()); // todo: namespaces\n             newEl.attributes().addAll(entry.attributes());\n \n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n         }\n \n         private boolean anythingElse(Token t, HtmlTreeBuilder tb) {\n-            tb.insert(\"html\");\n+            tb.insertStartTag(\"html\");\n             tb.transition(BeforeHead);\n             return tb.process(t);\n         }", "timestamp": 1414470698, "metainfo": ""}