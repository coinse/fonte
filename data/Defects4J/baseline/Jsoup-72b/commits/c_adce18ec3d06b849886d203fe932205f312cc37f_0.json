{"sha": "adce18ec3d06b849886d203fe932205f312cc37f", "log": "Fixed absolute URL generation from relative URLs which are only query strings.  Fixes #49", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n                     URL abs = new URL(relUrl);\n                     return abs.toExternalForm();\n                 }\n+                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired\n+                if (relUrl.startsWith(\"?\"))\n+                    relUrl = base.getPath() + relUrl;\n                 URL abs = new URL(base, relUrl);\n                 return abs.toExternalForm();\n             } catch (MalformedURLException e) {\n--- a/src/test/java/org/jsoup/nodes/NodeTest.java\n+++ b/src/test/java/org/jsoup/nodes/NodeTest.java\n         assertEquals(\"http://jsoup.org/foo\", a.attr(\"abs:href\"));\n         assertFalse(a.hasAttr(\"abs:href\")); // only realised on the get method, not in has or iterator\n     }\n+\n+    /*\n+    Test for an issue with Java's abs URL handler.\n+     */\n+    @Test public void absHandlesRelativeQuery() {\n+        Document doc = Jsoup.parse(\"<a href='?foo'>One</a> <a href='bar.html?foo'>Two</a>\", \"http://jsoup.org/path/file?bar\");\n+\n+        Element a1 = doc.select(\"a\").first();\n+        assertEquals(\"http://jsoup.org/path/file?foo\", a1.absUrl(\"href\"));\n+\n+        Element a2 = doc.select(\"a\").get(1);\n+        assertEquals(\"http://jsoup.org/path/bar.html?foo\", a2.absUrl(\"href\"));\n+    }\n     \n     @Test public void testRemove() {\n         Document doc = Jsoup.parse(\"<p>One <span>two</span> three</p>\");", "timestamp": 1309605122, "metainfo": ""}