{"sha": "fb8b60b4d3d202c6fa708f60b8b4a5a53836af24", "log": "Limit stack search depth to 100  Fixes #955", "commit": "\n--- a/src/main/java/org/jsoup/helper/StringUtil.java\n+++ b/src/main/java/org/jsoup/helper/StringUtil.java\n         }\n     }\n \n-    public static boolean in(String needle, String... haystack) {\n-        for (String hay : haystack) {\n-            if (hay.equals(needle))\n+    public static boolean in(final String needle, final String... haystack) {\n+        final int len = haystack.length;\n+        for (int i = 0; i < len; i++) {\n+            if (haystack[i].equals(needle))\n             return true;\n         }\n         return false;\n \n     public static boolean inSorted(String needle, String[] haystack) {\n         return Arrays.binarySearch(haystack, needle) >= 0;\n+    }\n+\n+    public static String[] sort(String[] array) {\n+        Arrays.sort(array);\n+        return array;\n     }\n \n     /**\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.jsoup.helper.StringUtil.inSorted;\n+import static org.jsoup.helper.StringUtil.sort;\n+\n /**\n  * HTML Tree Builder; creates a DOM from Tokens.\n  */\n public class HtmlTreeBuilder extends TreeBuilder {\n-    // tag searches\n-    private static final String[] TagsSearchInScope = new String[]{\"applet\", \"caption\", \"html\", \"table\", \"td\", \"th\", \"marquee\", \"object\"};\n-    private static final String[] TagSearchList = new String[]{\"ol\", \"ul\"};\n-    private static final String[] TagSearchButton = new String[]{\"button\"};\n-    private static final String[] TagSearchTableScope = new String[]{\"html\", \"table\"};\n-    private static final String[] TagSearchSelectScope = new String[]{\"optgroup\", \"option\"};\n-    private static final String[] TagSearchEndTags = new String[]{\"dd\", \"dt\", \"li\", \"option\", \"optgroup\", \"p\", \"rp\", \"rt\"};\n-    private static final String[] TagSearchSpecial = new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n-            \"blockquote\", \"body\", \"br\", \"button\", \"caption\", \"center\", \"col\", \"colgroup\", \"command\", \"dd\",\n-            \"details\", \"dir\", \"div\", \"dl\", \"dt\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\",\n-            \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\",\n-            \"iframe\", \"img\", \"input\", \"isindex\", \"li\", \"link\", \"listing\", \"marquee\", \"menu\", \"meta\", \"nav\",\n-            \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"p\", \"param\", \"plaintext\", \"pre\", \"script\",\n-            \"section\", \"select\", \"style\", \"summary\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\",\n-            \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"};\n+    // tag searches. must be sorted, used in inSorted\n+    private static final String[] TagsSearchInScope = sort(new String[]{\"applet\", \"caption\", \"html\", \"table\", \"td\", \"th\", \"marquee\", \"object\"});\n+    private static final String[] TagSearchList = sort(new String[]{\"ol\", \"ul\"});\n+    private static final String[] TagSearchButton = sort(new String[]{\"button\"});\n+    private static final String[] TagSearchTableScope = sort(new String[]{\"html\", \"table\"});\n+    private static final String[] TagSearchSelectScope = sort(new String[]{\"optgroup\", \"option\"});\n+    private static final String[] TagSearchEndTags = sort(new String[]{\"dd\", \"dt\", \"li\", \"option\", \"optgroup\", \"p\", \"rp\", \"rt\"});\n+    private static final String[] TagSearchSpecial = sort(new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n+        \"blockquote\", \"body\", \"br\", \"button\", \"caption\", \"center\", \"col\", \"colgroup\", \"command\", \"dd\",\n+        \"details\", \"dir\", \"div\", \"dl\", \"dt\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\",\n+        \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\",\n+        \"iframe\", \"img\", \"input\", \"isindex\", \"li\", \"link\", \"listing\", \"marquee\", \"menu\", \"meta\", \"nav\",\n+        \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"p\", \"param\", \"plaintext\", \"pre\", \"script\",\n+        \"section\", \"select\", \"style\", \"summary\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\",\n+        \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"});\n+\n+    public static final int MaxScopeSearchDepth = 100; // prevents the parser bogging down in exceptionally broken pages\n \n     private HtmlTreeBuilderState state; // the current state\n     private HtmlTreeBuilderState originalState; // original / marked state\n         }\n     }\n \n+    // elnames is sorted, comes from Constants\n     void popStackToClose(String... elNames) {\n         for (int pos = stack.size() -1; pos >= 0; pos--) {\n             Element next = stack.get(pos);\n             stack.remove(pos);\n-            if (StringUtil.in(next.nodeName(), elNames))\n+            if (inSorted(next.nodeName(), elNames))\n                 break;\n         }\n     }\n     }\n \n     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n-        for (int pos = stack.size() -1; pos >= 0; pos--) {\n+        int depth = stack.size() -1;\n+        if (depth > MaxScopeSearchDepth) {\n+            depth = MaxScopeSearchDepth;\n+        }\n+        for (int pos = depth; pos >= 0; pos--) {\n             Element el = stack.get(pos);\n             String elName = el.nodeName();\n-            if (StringUtil.in(elName, targetNames))\n+            if (inSorted(elName, targetNames))\n                 return true;\n-            if (StringUtil.in(elName, baseTypes))\n+            if (inSorted(elName, baseTypes))\n                 return false;\n-            if (extraTypes != null && StringUtil.in(elName, extraTypes))\n+            if (extraTypes != null && inSorted(elName, extraTypes))\n                 return false;\n         }\n         Validate.fail(\"Should not be reachable\");\n             String elName = el.nodeName();\n             if (elName.equals(targetName))\n                 return true;\n-            if (!StringUtil.in(elName, TagSearchSelectScope)) // all elements except\n+            if (!inSorted(elName, TagSearchSelectScope)) // all elements except\n                 return false;\n         }\n         Validate.fail(\"Should not be reachable\");\n      */\n     void generateImpliedEndTags(String excludeTag) {\n         while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&\n-                StringUtil.in(currentElement().nodeName(), TagSearchEndTags))\n+                inSorted(currentElement().nodeName(), TagSearchEndTags))\n             pop();\n     }\n \n         // todo: mathml's mi, mo, mn\n         // todo: svg's foreigObject, desc, title\n         String name = el.nodeName();\n-        return StringUtil.in(name, TagSearchSpecial);\n+        return inSorted(name, TagSearchSpecial);\n     }\n \n     Element lastFormattingElement() {\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n package org.jsoup.parser;\n \n import org.jsoup.helper.StringUtil;\n-import org.jsoup.nodes.*;\n+import org.jsoup.nodes.Attribute;\n+import org.jsoup.nodes.Attributes;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.DocumentType;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n \n import java.util.ArrayList;\n \n \n     // lists of tags to search through. A little harder to read here, but causes less GC than dynamic varargs.\n     // was contributing around 10% of parse GC load.\n+    // must make sure these are sorted, as used in findSorted\n     private static final class Constants {\n-        private static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};\n-        private static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n-                \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n-                \"p\", \"section\", \"summary\", \"ul\"};\n-        private static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};\n-        private static final String[] InBodyStartPreListing = new String[]{\"pre\", \"listing\"};\n-        private static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};\n-        private static final String[] DdDt = new String[]{\"dd\", \"dt\"};\n-        private static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};\n-        private static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};\n-        private static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};\n-        private static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};\n-        private static final String[] InBodyStartInputAttribs = new String[]{\"name\", \"action\", \"prompt\"};\n-        private static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};\n-        private static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};\n-        private static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};\n-        private static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n-                \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n-                \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};\n-        private static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};\n-        private static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};\n+        private static final String[] InBodyStartToHead = StringUtil.sort(new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"});\n+        private static final String[] InBodyStartPClosers = StringUtil.sort(new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n+            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n+            \"p\", \"section\", \"summary\", \"ul\"});\n+        private static final String[] Headings = StringUtil.sort(new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"});\n+        private static final String[] InBodyStartPreListing = StringUtil.sort(new String[]{\"pre\", \"listing\"});\n+        private static final String[] InBodyStartLiBreakers = StringUtil.sort(new String[]{\"address\", \"div\", \"p\"});\n+        private static final String[] DdDt = StringUtil.sort(new String[]{\"dd\", \"dt\"});\n+        private static final String[] Formatters = StringUtil.sort(new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"});\n+        private static final String[] InBodyStartApplets = StringUtil.sort(new String[]{\"applet\", \"marquee\", \"object\"});\n+        private static final String[] InBodyStartEmptyFormatters = StringUtil.sort(new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"});\n+        private static final String[] InBodyStartMedia = StringUtil.sort(new String[]{\"param\", \"source\", \"track\"});\n+        private static final String[] InBodyStartInputAttribs = StringUtil.sort(new String[]{\"name\", \"action\", \"prompt\"});\n+        private static final String[] InBodyStartOptions = StringUtil.sort(new String[]{\"optgroup\", \"option\"});\n+        private static final String[] InBodyStartRuby = StringUtil.sort(new String[]{\"rp\", \"rt\"});\n+        private static final String[] InBodyStartDrop = StringUtil.sort(new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"});\n+        private static final String[] InBodyEndClosers = StringUtil.sort(new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n+            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n+            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"});\n+        private static final String[] InBodyEndAdoptionFormatters = StringUtil.sort(new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"});\n+        private static final String[] InBodyEndTableFosters = StringUtil.sort(new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"});\n     }\n }\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n         assertTrue(doc2.title().contains(\"Environment\"));\n     }\n \n+    @Test public void handlesSuperDeepPage() throws IOException {\n+        // https://github.com/jhy/jsoup/issues/955\n+\n+        long start = System.currentTimeMillis();\n+        String url = \"http://sv.stargate.wikia.com/wiki/M2J\";\n+        Document doc = Jsoup.connect(url).get();\n+        assertEquals(\"M2J | Sv.stargate Wiki | FANDOM powered by Wikia\", doc.title());\n+        assertEquals(110160, doc.select(\"dd\").size());\n+        // those are all <dl><dd> stacked in each other. wonder how that got generated?\n+        assertTrue(System.currentTimeMillis() - start < 1000);\n+\n+    }\n+\n }\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n         assertTrue(System.currentTimeMillis() - start < 1000);\n     }\n \n+    @Test public void handlesDeepStack() {\n+        // inspired by http://sv.stargate.wikia.com/wiki/M2J and https://github.com/jhy/jsoup/issues/955\n+        // I didn't put it in the integration tests, because explorer and intellij kept dieing trying to preview/index it\n+\n+        // Arrange\n+        StringBuilder longBody = new StringBuilder(500000);\n+        for (int i = 0; i < 25000; i++) {\n+            longBody.append(i).append(\"<dl><dd>\");\n+        }\n+        for (int i = 0; i < 25000; i++) {\n+            longBody.append(i).append(\"</dd></dl>\");\n+        }\n+\n+        // Act\n+        long start = System.currentTimeMillis();\n+        Document doc = Parser.parseBodyFragment(longBody.toString(), \"\");\n+\n+        // Assert\n+        assertEquals(2, doc.body().childNodeSize());\n+        assertEquals(25000, doc.select(\"dd\").size());\n+        assertTrue(System.currentTimeMillis() - start < 1000);\n+    }\n+\n     @Test\n     public void testInvalidTableContents() throws IOException {\n         File in = ParseTest.getFile(\"/htmltests/table-invalid-elements.html\");", "timestamp": 1508639862, "metainfo": ""}