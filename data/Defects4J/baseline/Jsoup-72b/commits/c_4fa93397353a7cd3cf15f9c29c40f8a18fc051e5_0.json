{"sha": "4fa93397353a7cd3cf15f9c29c40f8a18fc051e5", "log": "allow template inside thead/tbody/tr. Fixes #807 (#901)", "commit": "\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n     }\n \n     void clearStackToTableBodyContext() {\n-        clearStackToContext(\"tbody\", \"tfoot\", \"thead\");\n+        clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");\n     }\n \n     void clearStackToTableRowContext() {\n-        clearStackToContext(\"tr\");\n+        clearStackToContext(\"tr\", \"template\");\n     }\n \n     private void clearStackToContext(String... nodeNames) {\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n                 case StartTag:\n                     Token.StartTag startTag = t.asStartTag();\n                     String name = startTag.normalName();\n-                    if (name.equals(\"tr\")) {\n+                    if (name.equals(\"template\")) {\n+                        tb.insert(startTag);\n+                    } else if (name.equals(\"tr\")) {\n                         tb.clearStackToTableBodyContext();\n                         tb.insert(startTag);\n                         tb.transition(InRow);\n                 Token.StartTag startTag = t.asStartTag();\n                 String name = startTag.normalName();\n \n-                if (StringUtil.in(name, \"th\", \"td\")) {\n+                if (name.equals(\"template\")) {\n+                    tb.insert(startTag);\n+                } else if (StringUtil.in(name, \"th\", \"td\")) {\n                     tb.clearStackToTableRowContext();\n                     tb.insert(startTag);\n                     tb.transition(InCell);\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n         String clean = Jsoup.clean(html, Whitelist.relaxed());\n         assertEquals(\"<p>test</p> <div></div> <div> Two </div>\", StringUtil.normaliseWhitespace(clean));\n     }\n+\n+  @Test public void testTemplateInsideTable() throws IOException {\n+        File in = ParseTest.getFile(\"/htmltests/table-polymer-template.html\");\n+        Document doc = Jsoup.parse(in, \"UTF-8\");\n+        doc.outputSettings().prettyPrint(true);\n+\n+        Elements templates = doc.body().getElementsByTag(\"template\");\n+        for (Element template : templates) {\n+            assertTrue(template.childNodes().size() > 1);\n+        }\n+  }\n }", "timestamp": 1507416387, "metainfo": ""}