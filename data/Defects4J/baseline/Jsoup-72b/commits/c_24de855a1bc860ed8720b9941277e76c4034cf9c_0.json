{"sha": "24de855a1bc860ed8720b9941277e76c4034cf9c", "log": "Sort and validate sorted at build not runtime", "commit": "\n--- a/src/main/java/org/jsoup/helper/StringUtil.java\n+++ b/src/main/java/org/jsoup/helper/StringUtil.java\n         return Arrays.binarySearch(haystack, needle) >= 0;\n     }\n \n-    public static String[] sort(String[] array) {\n-        Arrays.sort(array);\n-        return array;\n-    }\n-\n     /**\n      * Create a new absolute URL, from a provided existing absolute URL and a relative URL component.\n      * @param base the existing absolute base URL\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n import java.util.List;\n \n import static org.jsoup.helper.StringUtil.inSorted;\n-import static org.jsoup.helper.StringUtil.sort;\n \n /**\n  * HTML Tree Builder; creates a DOM from Tokens.\n  */\n public class HtmlTreeBuilder extends TreeBuilder {\n-    // tag searches. must be sorted, used in inSorted\n-    private static final String[] TagsSearchInScope = sort(new String[]{\"applet\", \"caption\", \"html\", \"table\", \"td\", \"th\", \"marquee\", \"object\"});\n-    private static final String[] TagSearchList = sort(new String[]{\"ol\", \"ul\"});\n-    private static final String[] TagSearchButton = sort(new String[]{\"button\"});\n-    private static final String[] TagSearchTableScope = sort(new String[]{\"html\", \"table\"});\n-    private static final String[] TagSearchSelectScope = sort(new String[]{\"optgroup\", \"option\"});\n-    private static final String[] TagSearchEndTags = sort(new String[]{\"dd\", \"dt\", \"li\", \"option\", \"optgroup\", \"p\", \"rp\", \"rt\"});\n-    private static final String[] TagSearchSpecial = sort(new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n+    // tag searches. must be sorted, used in inSorted. MUST update HtmlTreeBuilderTest if more arrays are added.\n+    static final String[] TagsSearchInScope = new String[]{\"applet\", \"caption\", \"html\", \"marquee\", \"object\", \"table\", \"td\", \"th\"};\n+    static final String[] TagSearchList = new String[]{\"ol\", \"ul\"};\n+    static final String[] TagSearchButton = new String[]{\"button\"};\n+    static final String[] TagSearchTableScope = new String[]{\"html\", \"table\"};\n+    static final String[] TagSearchSelectScope = new String[]{\"optgroup\", \"option\"};\n+    static final String[] TagSearchEndTags = new String[]{\"dd\", \"dt\", \"li\", \"optgroup\", \"option\", \"p\", \"rp\", \"rt\"};\n+    static final String[] TagSearchSpecial = new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n         \"blockquote\", \"body\", \"br\", \"button\", \"caption\", \"center\", \"col\", \"colgroup\", \"command\", \"dd\",\n         \"details\", \"dir\", \"div\", \"dl\", \"dt\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\",\n         \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\",\n         \"iframe\", \"img\", \"input\", \"isindex\", \"li\", \"link\", \"listing\", \"marquee\", \"menu\", \"meta\", \"nav\",\n         \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"p\", \"param\", \"plaintext\", \"pre\", \"script\",\n         \"section\", \"select\", \"style\", \"summary\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\",\n-        \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"});\n+        \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"};\n \n     public static final int MaxScopeSearchDepth = 100; // prevents the parser bogging down in exceptionally broken pages\n \n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n \n     // lists of tags to search through. A little harder to read here, but causes less GC than dynamic varargs.\n     // was contributing around 10% of parse GC load.\n-    // must make sure these are sorted, as used in findSorted\n-    private static final class Constants {\n-        private static final String[] InBodyStartToHead = StringUtil.sort(new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"});\n-        private static final String[] InBodyStartPClosers = StringUtil.sort(new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n+    // must make sure these are sorted, as used in findSorted. MUST update HtmlTreebuilderStateTest if more arrays added.\n+    static final class Constants {\n+        static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};\n+        static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n             \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n-            \"p\", \"section\", \"summary\", \"ul\"});\n-        private static final String[] Headings = StringUtil.sort(new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"});\n-        private static final String[] InBodyStartPreListing = StringUtil.sort(new String[]{\"pre\", \"listing\"});\n-        private static final String[] InBodyStartLiBreakers = StringUtil.sort(new String[]{\"address\", \"div\", \"p\"});\n-        private static final String[] DdDt = StringUtil.sort(new String[]{\"dd\", \"dt\"});\n-        private static final String[] Formatters = StringUtil.sort(new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"});\n-        private static final String[] InBodyStartApplets = StringUtil.sort(new String[]{\"applet\", \"marquee\", \"object\"});\n-        private static final String[] InBodyStartEmptyFormatters = StringUtil.sort(new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"});\n-        private static final String[] InBodyStartMedia = StringUtil.sort(new String[]{\"param\", \"source\", \"track\"});\n-        private static final String[] InBodyStartInputAttribs = StringUtil.sort(new String[]{\"name\", \"action\", \"prompt\"});\n-        private static final String[] InBodyStartOptions = StringUtil.sort(new String[]{\"optgroup\", \"option\"});\n-        private static final String[] InBodyStartRuby = StringUtil.sort(new String[]{\"rp\", \"rt\"});\n-        private static final String[] InBodyStartDrop = StringUtil.sort(new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"});\n-        private static final String[] InBodyEndClosers = StringUtil.sort(new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n+            \"p\", \"section\", \"summary\", \"ul\"};\n+        static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};\n+        static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};\n+        static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};\n+        static final String[] DdDt = new String[]{\"dd\", \"dt\"};\n+        static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};\n+        static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};\n+        static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};\n+        static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};\n+        static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};\n+        static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};\n+        static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};\n+        static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};\n+        static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n             \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n-            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"});\n-        private static final String[] InBodyEndAdoptionFormatters = StringUtil.sort(new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"});\n-        private static final String[] InBodyEndTableFosters = StringUtil.sort(new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"});\n+            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};\n+        static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};\n+        static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};\n     }\n }\n--- /dev/null\n+++ b/src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java\n+package org.jsoup.parser;\n+\n+import org.jsoup.parser.HtmlTreeBuilderState.Constants;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+\n+public class HtmlTreeBuilderStateTest {\n+    @Test\n+    public void ensureArraysAreSorted() {\n+        String[][] arrays = {\n+            Constants.InBodyStartToHead,\n+            Constants.InBodyStartPClosers,\n+            Constants.Headings,\n+            Constants.InBodyStartPreListing,\n+            Constants.InBodyStartLiBreakers,\n+            Constants.DdDt,\n+            Constants.Formatters,\n+            Constants.InBodyStartApplets,\n+            Constants.InBodyStartEmptyFormatters,\n+            Constants.InBodyStartMedia,\n+            Constants.InBodyStartInputAttribs,\n+            Constants.InBodyStartOptions,\n+            Constants.InBodyStartRuby,\n+            Constants.InBodyStartDrop,\n+            Constants.InBodyEndClosers,\n+            Constants.InBodyEndAdoptionFormatters,\n+            Constants.InBodyEndTableFosters\n+        };\n+\n+        for (String[] array : arrays) {\n+            String[] copy = Arrays.copyOf(array, array.length);\n+            Arrays.sort(array);\n+            assertArrayEquals(array, copy);\n+        }\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java\n+package org.jsoup.parser;\n+\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+\n+public class HtmlTreeBuilderTest {\n+    @Test\n+    public void ensureSearchArraysAreSorted() {\n+        String[][] arrays = {\n+            HtmlTreeBuilder.TagsSearchInScope,\n+            HtmlTreeBuilder.TagSearchList,\n+            HtmlTreeBuilder.TagSearchButton,\n+            HtmlTreeBuilder.TagSearchTableScope,\n+            HtmlTreeBuilder.TagSearchSelectScope,\n+            HtmlTreeBuilder.TagSearchEndTags,\n+            HtmlTreeBuilder.TagSearchSpecial\n+        };\n+\n+        for (String[] array : arrays) {\n+            String[] copy = Arrays.copyOf(array, array.length);\n+            Arrays.sort(array);\n+            assertArrayEquals(array, copy);\n+        }\n+    }\n+}", "timestamp": 1509050471, "metainfo": ""}