{"sha": "adb7a15a1e2dd6742a25592602a6e8ee77b518b6", "log": "Start stack search at right spot  Fixes a bug in the in-scope search, which was starting in the middle instead of the bottom when trying to limit the stack depth search. That meant that when generating implied end-tags, the stack wasn't getting shorter, so it tried to generate end tags for days, and ultimately threw a StackOverflowDetect.  (Which is somewhat ironic, because the max depth was set to prevent a different STE... Le Sigh.)  Fixes #966", "commit": "\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n     }\n \n     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n-        int depth = stack.size() -1;\n-        if (depth > MaxScopeSearchDepth) {\n-            depth = MaxScopeSearchDepth;\n-        }\n-        for (int pos = depth; pos >= 0; pos--) {\n-            Element el = stack.get(pos);\n-            String elName = el.nodeName();\n+        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope\n+        final int bottom = stack.size() -1;\n+        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;\n+        // don't walk too far up the tree\n+\n+        for (int pos = bottom; pos >= top; pos--) {\n+            final String elName = stack.get(pos).nodeName();\n             if (inSorted(elName, targetNames))\n                 return true;\n             if (inSorted(elName, baseTypes))\n             if (extraTypes != null && inSorted(elName, extraTypes))\n                 return false;\n         }\n-        Validate.fail(\"Should not be reachable\");\n+        //Validate.fail(\"Should not be reachable\"); // would end up false because hitting 'html' at root (basetypes)\n         return false;\n     }\n \n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n         assertTrue(System.currentTimeMillis() - start < 1000);\n     }\n \n+    @Test public void handles966() throws IOException {\n+        // http://szshb.nxszs.gov.cn/\n+        // https://github.com/jhy/jsoup/issues/966\n+\n+        Document doc = Jsoup.connect(\"http://szshb.nxszs.gov.cn/\").get();\n+\n+        assertEquals(\"\u77f3\u5634\u5c71\u5e02\u73af\u5883\u4fdd\u62a4\u5c40\", doc.title());\n+    }\n+\n }\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n             assertTrue(template.childNodes().size() > 1);\n         }\n   }\n+\n+  @Test public void testHandlesDeepSpans() {\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < 200; i++) {\n+            sb.append(\"<span>\");\n+        }\n+\n+        sb.append(\"<p>One</p>\");\n+\n+        Document doc = Jsoup.parse(sb.toString());\n+        assertEquals(200, doc.select(\"span\").size());\n+        assertEquals(1, doc.select(\"p\").size());\n+  }\n }", "timestamp": 1510036136, "metainfo": ""}