{"sha": "b185fd76845a9c99e4077bc017d25d65ed58d440", "log": "patch about issue #836 addChildren is quadratic (#930)  * patch about issue #836 addChildren is quadratic\r \r patch about  issue #836 addChildren is quadratic\r when add many children, the origin implementation will move childNodes array per loop.(method add(index, obj)),\r a performance improvement was made using addAll(index, objs).there are three steps:\r 1. reparent all the children\r 2. use addAll(index, objs) to insert children\r 3. reset sibling index\r it is very similar with method addChildren(Node... children)", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n import org.jsoup.select.NodeVisitor;\n \n import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;\n \n /**\n  The base, abstract Node model. Elements, Documents, Comments etc are all Node instances.\n         Validate.noNullElements(children);\n         final List<Node> nodes = ensureChildNodes();\n \n-        for (int i = children.length - 1; i >= 0; i--) {\n-            Node in = children[i];\n-            reparentChild(in);\n-            nodes.add(index, in);\n-            reindexChildren(index);\n-        }\n+        for (Node child : children) {\n+            reparentChild(child);\n+        }\n+        nodes.addAll(index, Arrays.asList(children));\n+        reindexChildren(index);\n     }\n     \n     protected void reparentChild(Node child) {", "timestamp": 1507414980, "metainfo": ""}