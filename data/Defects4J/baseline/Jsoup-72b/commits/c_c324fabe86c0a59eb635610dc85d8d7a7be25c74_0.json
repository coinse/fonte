{"sha": "c324fabe86c0a59eb635610dc85d8d7a7be25c74", "log": "Notifications to cloned elements were incorrectly delivered to the original element.  Fixes #951", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n \n     protected List<Node> ensureChildNodes() {\n         if (childNodes == EMPTY_NODES) {\n-            childNodes = new NodeList(4);\n+            childNodes = new NodeList(this, 4);\n         }\n         return childNodes;\n     }\n         Element clone = (Element) super.doClone(parent);\n         clone.attributes = attributes != null ? attributes.clone() : null;\n         clone.baseUri = baseUri;\n-        clone.childNodes = new NodeList(childNodes.size());\n-\n+        clone.childNodes = new NodeList(clone, childNodes.size());\n         clone.childNodes.addAll(childNodes);\n \n         return clone;\n     }\n \n-    private final class NodeList extends ChangeNotifyingArrayList<Node> {\n-        NodeList(int initialCapacity) {\n+    private static final class NodeList extends ChangeNotifyingArrayList<Node> {\n+        private final Element owner;\n+\n+        NodeList(Element owner, int initialCapacity) {\n             super(initialCapacity);\n+            this.owner = owner;\n         }\n \n         public void onContentsChanged() {\n-            nodelistChanged();\n+            owner.nodelistChanged();\n         }\n     }\n }\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n \t    attribs.put(\"class\", \"abc \");\n \t    boolean hasClass = el.hasClass(\"ab\");\n \t    assertFalse(hasClass);\n-\t        \n \t}\n+\n+\t@Test\n+    public void testNextElementSiblingAfterClone() {\n+        // via https://github.com/jhy/jsoup/issues/951\n+        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n+        String expectedText = \"New element\";\n+        String cloneExpect = \"New element in clone\";\n+\n+        Document original = Jsoup.parse(html);\n+        Document clone = original.clone();\n+\n+        Element originalElement = original.body().child(0);\n+        originalElement.after(\"<div>\" + expectedText + \"</div>\");\n+        Element originalNextElementSibling = originalElement.nextElementSibling();\n+        Element originalNextSibling = (Element) originalElement.nextSibling();\n+        assertEquals(expectedText, originalNextElementSibling.text());\n+        assertEquals(expectedText, originalNextSibling.text());\n+\n+        Element cloneElement = clone.body().child(0);\n+        cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");\n+        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n+        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n+        assertEquals(cloneExpect, cloneNextElementSibling.text());\n+        assertEquals(cloneExpect, cloneNextSibling.text());\n+    }\n }", "timestamp": 1507586126, "metainfo": ""}