{"sha": "9824d000c7b73f52a277dcc83b55602225154fb2", "log": "Improved HTML output format for empty elements and auto-detected self closing tags.  Closes #27", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n                 .append(tagName())\n                 .append(attributes.html());\n \n-        if (childNodes.isEmpty() && tag.isEmpty())\n+        if (childNodes.isEmpty() && tag.isSelfClosing())\n             accum.append(\" />\");\n         else\n             accum.append(\">\");\n     }\n \n     void outerHtmlTail(StringBuilder accum, int depth) {\n-        if (!tag.isEmpty()) {\n-            if (tag.canContainBlock()) indent(accum, depth);\n+        if (!(childNodes.isEmpty() && tag.isSelfClosing())) {\n+            if (!childNodes.isEmpty() && tag.canContainBlock())\n+                indent(accum, depth);\n             accum.append(\"</\").append(tagName()).append(\">\");\n         }\n     }\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n         boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>\n         if (tq.matchChomp(\"/>\")) { // close empty element or tag\n             isEmptyElement = true;\n+            if (!tag.isKnownTag()) // if unknown and a self closed, allow it to be self closed on output. this doesn't force all instances to be empty\n+                tag.setSelfClosing();\n         } else {\n             tq.matchChomp(\">\");\n         }\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n     }\n \n     private String tagName;\n+    private boolean knownTag = false; // if pre-defined or auto-created\n     private boolean isBlock = true; // block or inline\n     private boolean canContainBlock = true; // Can this tag hold block level tags?\n     private boolean canContainInline = true; // only pcdata if not\n     private boolean optionalClosing = false; // If tag is open, and another seen, close previous tag\n     private boolean empty = false; // can hold nothing; e.g. img\n+    private boolean selfClosing = false; // can self close (<foo />). used for unknown tags that self close, without forcing them as empty.\n     private boolean preserveWhitespace = false; // for pre, textarea, script etc\n     private List<Tag> ancestors; // elements must be a descendant of one of these ancestors\n     private List<Tag> excludes = Collections.emptyList(); // cannot contain these tags\n      */\n     public boolean isEmpty() {\n         return empty;\n+    }\n+    \n+    /**\n+     * Get if this tag is self closing.\n+     * @return if this tag should be output as self closing.\n+     */\n+    public boolean isSelfClosing() {\n+        return empty || selfClosing;\n+    }\n+    \n+    /**\n+     * Get if this is a pre-defined tag, or was auto created on parsing.\n+     * @return if a known tag\n+     */\n+    public boolean isKnownTag() {\n+        return knownTag;\n     }\n \n     /**\n \n     private static Tag register(Tag tag) {\n         tag.setAncestor(defaultAncestor.tagName);\n+        tag.setKnownTag();\n         synchronized (tags) {\n             tags.put(tag.tagName, tag);\n         }\n         limitChildren = true;\n         return this;\n     }\n+    \n+    Tag setSelfClosing() {\n+        selfClosing = true;\n+        return this;\n+    }\n+    \n+    private Tag setKnownTag() {\n+        knownTag = true;\n+        return this;\n+    }\n }\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n \n     @Test public void testFormatHtml() {\n         Document doc = Jsoup.parse(\"<div><p>Hello</p></div>\");\n-        assertEquals(\"<html>\\n <head>\\n </head>\\n <body>\\n  <div>\\n   <p>Hello</p>\\n  </div>\\n </body>\\n</html>\", doc.html());\n+        assertEquals(\"<html>\\n <head></head>\\n <body>\\n  <div>\\n   <p>Hello</p>\\n  </div>\\n </body>\\n</html>\", doc.html());\n+    }\n+    \n+    @Test public void testEmptyElementFormatHtml() {\n+        // don't put newlines into empty blocks\n+        Document doc = Jsoup.parse(\"<section><div></div></section>\");\n+        assertEquals(\"\\n<section>\\n <div></div>\\n</section>\", doc.select(\"section\").first().outerHtml());\n     }\n \n     @Test public void testSetText() {\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n     }\n     \n     @Test public void handlesUnknownNamespaceTags() {\n-        String h = \"<foo:bar/><abc:def id=1>Foo<p>Hello</abc:def>\";\n-        Document doc = Jsoup.parse(h);\n-        assertEquals(\"<foo:bar></foo:bar><abc:def id=\\\"1\\\">Foo<p>Hello</p></abc:def>\", TextUtil.stripNewlines(doc.body().html()));\n+        String h = \"<foo:bar id=1/><abc:def id=2>Foo<p>Hello</abc:def><foo:bar>There</foo:bar>\";\n+        Document doc = Jsoup.parse(h);\n+        assertEquals(\"<foo:bar id=\\\"1\\\" /><abc:def id=\\\"2\\\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>\", TextUtil.stripNewlines(doc.body().html()));\n     }\n     \n     @Test public void handlesEmptyBlocks() {", "timestamp": 1309605116, "metainfo": ""}