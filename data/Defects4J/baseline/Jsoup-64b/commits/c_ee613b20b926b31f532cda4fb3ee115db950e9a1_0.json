{"sha": "ee613b20b926b31f532cda4fb3ee115db950e9a1", "log": "Fixed UnsupportedCharsetException for meta charset tags with an unsupported charset.", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n             doc = parser.parseInput(docData, baseUri);\n             Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n             if (meta != null) { // if not found, will keep utf-8 as best attempt\n-                String foundCharset;\n+                String foundCharset = null;\n                 if (meta.hasAttr(\"http-equiv\")) {\n                     foundCharset = getCharsetFromContentType(meta.attr(\"content\"));\n-                    if (foundCharset == null && meta.hasAttr(\"charset\")) {\n-                        try {\n-                            if (Charset.isSupported(meta.attr(\"charset\"))) {\n-                                foundCharset = meta.attr(\"charset\");\n-                            }\n-                        } catch (IllegalCharsetNameException e) {\n-                            foundCharset = null;\n+                }\n+                if (foundCharset == null && meta.hasAttr(\"charset\")) {\n+                    try {\n+                        if (Charset.isSupported(meta.attr(\"charset\"))) {\n+                            foundCharset = meta.attr(\"charset\");\n                         }\n+                    } catch (IllegalCharsetNameException e) {\n+                        foundCharset = null;\n                     }\n-                } else {\n-                    foundCharset = meta.attr(\"charset\");\n                 }\n \n                 if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n package org.jsoup.helper;\n \n+import java.io.UnsupportedEncodingException;\n import org.jsoup.nodes.Document;\n import org.jsoup.parser.Parser;\n import org.junit.Test;\n         assertEquals(DataUtil.boundaryLength, m2.length());\n         assertNotSame(m1, m2);\n     }\n-\n+    \n+    @Test\n+    public void wrongMetaCharsetFallback() {\n+        try {\n+            final byte[] input = \"<html><head><meta charset=iso-8></head><body></body></html>\".getBytes(\"UTF-8\");\n+            final ByteBuffer inBuffer = ByteBuffer.wrap(input);\n+            \n+            Document doc = DataUtil.parseByteData(inBuffer, null, \"http://example.com\", Parser.htmlParser());\n+            \n+            final String expected = \"<html>\\n\" +\n+                                    \" <head>\\n\" +\n+                                    \"  <meta charset=\\\"iso-8\\\">\\n\" +\n+                                    \" </head>\\n\" +\n+                                    \" <body></body>\\n\" +\n+                                    \"</html>\";\n+            \n+            assertEquals(expected, doc.toString());\n+        } catch( UnsupportedEncodingException ex ) {\n+            fail(ex.getMessage());\n+        }\n+    }\n }", "timestamp": 1418763520, "metainfo": ""}