{"sha": "0e4c8bf728d368fed47e458f5f91517c677f1d60", "log": "All nodes have outerHtml method, elements have (inner) HTML.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Comment.java\n+++ b/src/main/java/org/jsoup/nodes/Comment.java\n         return attributes.get(COMMENT_KEY);\n     }\n \n-    public String html() {\n+    public String outerHtml() {\n         return String.format(\"<!--%s-->\", getData());\n     }\n \n     public String toString() {\n-        return html();\n+        return outerHtml();\n     }\n }\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n         return classNames().contains(className);\n     }\n \n-    public String html() {\n+    public String outerHtml() {\n         StringBuilder accum = new StringBuilder();\n         accum\n                 .append(\"<\")\n             accum.append(\" />\");\n         } else {\n             accum.append(\">\");\n-            for (Node node : childNodes)\n-                accum.append(node.html());\n+            accum.append(html());\n             accum.append(\"</\").append(tagName()).append(\">\");\n         }\n \n         return accum.toString();\n     }\n \n+    /**\n+     * Retrieves the element's inner HTML.\n+     * @return String of HTML.\n+     */\n+    public String html() {\n+        StringBuilder accum = new StringBuilder();\n+        for (Node node : childNodes)\n+            accum.append(node.outerHtml());\n+\n+        return accum.toString();\n+    }\n+\n     public String toString() {\n-        return html();\n+        return outerHtml();\n     }\n \n \n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n         // TODO: probably not have this accessor\n     }\n \n-    public abstract String html();\n+    public abstract String outerHtml();\n \n     public String toString() {\n-        return nodeName();\n+        return outerHtml();\n     }\n }\n--- a/src/main/java/org/jsoup/nodes/TextNode.java\n+++ b/src/main/java/org/jsoup/nodes/TextNode.java\n         return attributes.get(TEXT_KEY);\n     }\n \n-    public String html() {\n+    public String outerHtml() {\n         return StringEscapeUtils.escapeHtml(getWholeText());\n     }\n \n     public String toString() {\n-        return html();\n+        return outerHtml();\n     }\n \n     /**\n--- a/src/main/java/org/jsoup/nodes/XmlDeclaration.java\n+++ b/src/main/java/org/jsoup/nodes/XmlDeclaration.java\n     }\n \n     // TODO: this munged <! and <? -- not really correct or useful\n-    public String html() {\n+    public String outerHtml() {\n         return String.format(\"<? %s >\", getWholeDeclaration());\n     }\n \n     public String toString() {\n-        return html();\n+        return outerHtml();\n     }\n }\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertFalse(doc.hasClass(\"mellow\"));\n     }\n \n-    @Test public void testToHtml() {\n+    @Test public void testOuterHtml() {\n         Document doc = Jsoup.parse(\"<div title='Tags &amp;c.'><img src=foo.png><p><!-- comment -->Hello<p>there\");\n-        assertEquals(\"<html><head></head><body><div title=\\\"Tags &amp;c.\\\"><img src=\\\"foo.png\\\" /><p><!-- comment -->Hello</p><p>there</p></div></body></html>\", doc.html());\n+        assertEquals(\"<html><head></head><body><div title=\\\"Tags &amp;c.\\\"><img src=\\\"foo.png\\\" /><p><!-- comment -->Hello</p><p>there</p></div></body></html>\", doc.outerHtml());\n+    }\n+\n+    @Test public void testInnerHtml() {\n+        Document doc = Jsoup.parse(\"<div><p>Hello</p></div>\");\n+        assertEquals(\"<p>Hello</p>\", doc.getElementsByTag(\"div\").get(0).html());\n     }\n \n ", "timestamp": 1309605101, "metainfo": ""}