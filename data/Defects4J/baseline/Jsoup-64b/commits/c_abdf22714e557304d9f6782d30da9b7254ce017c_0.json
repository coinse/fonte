{"sha": "abdf22714e557304d9f6782d30da9b7254ce017c", "log": "Implemented Element.append(html)", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n package org.jsoup.nodes;\n \n import org.apache.commons.lang.Validate;\n+import org.jsoup.parser.Parser;\n import org.jsoup.parser.StartTag;\n import org.jsoup.parser.Tag;\n import org.jsoup.select.Collector;\n \n     public Element appendChild(Element child) {\n         Validate.notNull(child);\n+        \n         elementChildren.add(child);\n         childNodes.add(child);\n         child.setParentNode(this);\n-        return child;\n-    }\n-\n-    public Node appendChild(Node child) {\n+        return this;\n+    }\n+\n+    public Element appendChild(Node child) {\n         Validate.notNull(child);\n+        \n         childNodes.add(child);\n         child.setParentNode(this);\n-        return child;\n+        return this;\n     }\n     \n     public Element appendElement(String tagName) {\n+        Validate.notEmpty(tagName);\n+        \n         Element child = new Element(Tag.valueOf(tagName), baseUri());\n         appendChild(child);\n         return child;\n+    }\n+    \n+    public Element appendText(String text) {\n+        TextNode node = new TextNode(text, baseUri());\n+        appendChild(node);\n+        return this;\n+    }\n+    \n+    public Element append(String html) {\n+        Validate.notNull(html);\n+        \n+        Element fragment = Parser.parseBodyFragment(html, baseUri).getBody();\n+        for (Node node : fragment.childNodes()) {\n+            node.parentNode = null;\n+            appendChild(node);\n+        }\n+        return this;\n+    }\n+    \n+    public Element empty() {\n+        childNodes.clear();\n+        elementChildren.clear();\n+        return this;\n     }\n \n     public Element nextElementSibling() {\n     public Element text(String text) {\n         Validate.notNull(text);\n \n-        childNodes.clear();\n-        elementChildren.clear();\n+        empty();\n         TextNode textNode = new TextNode(text, baseUri);\n         appendChild(textNode);\n \n \n         return accum.toString();\n     }\n+    \n+    public Element html(String html) {\n+        empty();\n+        append(html);\n+        return this;\n+    }\n \n     public String toString() {\n         return outerHtml();\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n         if (stack.size() == 1 && childTag.equals(htmlTag))\n             return true; // root is valid for html node\n         \n-        for (int i = stack.size() -1; i > 0; i--) { // not all the way to end\n+        for (int i = stack.size() -1; i >= 0; i--) {\n             Element el = stack.get(i);\n             Tag parent2 = el.getTag();\n             if (parent2.isValidParent(childTag)) {\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertEquals(\"<html><head></head><body><div id=\\\"1\\\"><p>Hello</p><p>there</p><p class=\\\"second\\\">now</p></div></body></html>\",\n                 doc.html());\n     }\n+    \n+    @Test public void testAddNewText() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.appendText(\" there & now >\");\n+        assertEquals(\"<p>Hello</p> there &amp; now &gt;\", div.html());\n+    }\n+    \n+    @Test public void testAddNewHtml() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.append(\"<p>there</p><p>now</p>\");\n+        assertEquals(\"<p>Hello</p><p>there</p><p>now</p>\", div.html());\n+    }\n+    \n+    @Test public void testSetHtml() {\n+        Document doc = Jsoup.parse(\"<div id=1><p>Hello</p></div>\");\n+        Element div = doc.getElementById(\"1\");\n+        div.html(\"<p>there</p><p>now</p>\");\n+        assertEquals(\"<p>there</p><p>now</p>\", div.html());\n+    }\n \n \n }", "timestamp": 1309605105, "metainfo": ""}