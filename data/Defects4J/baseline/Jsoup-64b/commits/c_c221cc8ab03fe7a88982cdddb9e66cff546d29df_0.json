{"sha": "c221cc8ab03fe7a88982cdddb9e66cff546d29df", "log": "Bit of a Tag cleanup  Fixes #767  These fields are only advisory for other users now, and no longer used in tree construction (since the HTML5 builder rewrite).", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n     private String tagName;\n     private boolean isBlock = true; // block or inline\n     private boolean formatAsBlock = true; // should be formatted as a block\n-    private boolean canContainBlock = true; // Can this tag hold block level tags?\n     private boolean canContainInline = true; // only pcdata if not\n     private boolean empty = false; // can hold nothing; e.g. img\n     private boolean selfClosing = false; // can self close (<foo />). used for unknown tags that self close, without forcing them as empty.\n                 // not defined: create default; go anywhere, do anything! (incl be inside a <p>)\n                 tag = new Tag(tagName);\n                 tag.isBlock = false;\n-                tag.canContainBlock = true;\n             }\n         }\n         return tag;\n      * Gets if this tag can contain block tags.\n      *\n      * @return if tag can contain block tags\n+     * @deprecated No longer used, and no different result than {{@link #isBlock()}}\n      */\n     public boolean canContainBlock() {\n-        return canContainBlock;\n+        return isBlock;\n     }\n \n     /**\n         Tag tag = (Tag) o;\n \n         if (!tagName.equals(tag.tagName)) return false;\n-        if (canContainBlock != tag.canContainBlock) return false;\n         if (canContainInline != tag.canContainInline) return false;\n         if (empty != tag.empty) return false;\n         if (formatAsBlock != tag.formatAsBlock) return false;\n         int result = tagName.hashCode();\n         result = 31 * result + (isBlock ? 1 : 0);\n         result = 31 * result + (formatAsBlock ? 1 : 0);\n-        result = 31 * result + (canContainBlock ? 1 : 0);\n         result = 31 * result + (canContainInline ? 1 : 0);\n         result = 31 * result + (empty ? 1 : 0);\n         result = 31 * result + (selfClosing ? 1 : 0);\n             \"html\", \"head\", \"body\", \"frameset\", \"script\", \"noscript\", \"style\", \"meta\", \"link\", \"title\", \"frame\",\n             \"noframes\", \"section\", \"nav\", \"aside\", \"hgroup\", \"header\", \"footer\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n             \"ul\", \"ol\", \"pre\", \"div\", \"blockquote\", \"hr\", \"address\", \"figure\", \"figcaption\", \"form\", \"fieldset\", \"ins\",\n-            \"del\", \"s\", \"dl\", \"dt\", \"dd\", \"li\", \"table\", \"caption\", \"thead\", \"tfoot\", \"tbody\", \"colgroup\", \"col\", \"tr\", \"th\",\n+            \"del\", \"dl\", \"dt\", \"dd\", \"li\", \"table\", \"caption\", \"thead\", \"tfoot\", \"tbody\", \"colgroup\", \"col\", \"tr\", \"th\",\n             \"td\", \"video\", \"audio\", \"canvas\", \"details\", \"menu\", \"plaintext\", \"template\", \"article\", \"main\",\n             \"svg\", \"math\"\n     };\n             \"sub\", \"sup\", \"bdo\", \"iframe\", \"embed\", \"span\", \"input\", \"select\", \"textarea\", \"label\", \"button\", \"optgroup\",\n             \"option\", \"legend\", \"datalist\", \"keygen\", \"output\", \"progress\", \"meter\", \"area\", \"param\", \"source\", \"track\",\n             \"summary\", \"command\", \"device\", \"area\", \"basefont\", \"bgsound\", \"menuitem\", \"param\", \"source\", \"track\",\n-            \"data\", \"bdi\"\n+            \"data\", \"bdi\", \"s\"\n     };\n     private static final String[] emptyTags = {\n             \"meta\", \"link\", \"base\", \"frame\", \"img\", \"br\", \"wbr\", \"embed\", \"hr\", \"input\", \"keygen\", \"col\", \"command\",\n         for (String tagName : inlineTags) {\n             Tag tag = new Tag(tagName);\n             tag.isBlock = false;\n-            tag.canContainBlock = false;\n             tag.formatAsBlock = false;\n             register(tag);\n         }\n         for (String tagName : emptyTags) {\n             Tag tag = tags.get(tagName);\n             Validate.notNull(tag);\n-            tag.canContainBlock = false;\n             tag.canContainInline = false;\n             tag.empty = true;\n         }", "timestamp": 1483659390, "metainfo": ""}