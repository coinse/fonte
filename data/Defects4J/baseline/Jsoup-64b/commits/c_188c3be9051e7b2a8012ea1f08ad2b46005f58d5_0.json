{"sha": "188c3be9051e7b2a8012ea1f08ad2b46005f58d5", "log": "Fixed a few typos", "commit": "\n--- a/src/main/java/org/jsoup/Connection.java\n+++ b/src/main/java/org/jsoup/Connection.java\n     Connection ignoreContentType(boolean ignoreContentType);\n \n     /**\n-     * Disable/enable TSL certificates validation for HTTPS requests.\n+     * Disable/enable TLS certificates validation for HTTPS requests.\n      * <p>\n      * By default this is <b>true</b>; all\n      * connections over HTTPS perform normal validation of certificates, and will abort requests if the provided\n      * <p>\n      * <b>Be careful</b> and understand why you need to disable these validations.\n      * </p>\n-     * @param value if should validate TSL (SSL) certificates. <b>true</b> by default.\n+     * @param value if should validate TLS (SSL) certificates. <b>true</b> by default.\n      * @return this Connection, for chaining\n      */\n     Connection validateTLSCertificates(boolean value);\n     Connection data(String key, String value);\n \n     /**\n-     * Add an input stream as a request data paramater. For GETs, has no effect, but for POSTS this will upload the\n+     * Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the\n      * input stream.\n      * @param key data key (form item name)\n      * @param filename the name of the file to present to the remove server. Typically just the name, not path,\n--- a/src/main/java/org/jsoup/helper/StringUtil.java\n+++ b/src/main/java/org/jsoup/helper/StringUtil.java\n     private static final String[] padding = {\"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \"};\n \n     /**\n-     * Join a collection of strings by a seperator\n+     * Join a collection of strings by a separator\n      * @param strings collection of string objects\n      * @param sep string to place between strings\n      * @return joined string\n     }\n \n     /**\n-     * Join a collection of strings by a seperator\n+     * Join a collection of strings by a separator\n      * @param strings iterator of string objects\n      * @param sep string to place between strings\n      * @return joined string\n     }\n \n     /**\n-     * Tests if a string is blank: null, emtpy, or only whitespace (\" \", \\r\\n, \\t, etc)\n+     * Tests if a string is blank: null, empty, or only whitespace (\" \", \\r\\n, \\t, etc)\n      * @param string string to test\n      * @return if string is blank\n      */\n     /**\n      * Tests if a string is numeric, i.e. contains only digit characters\n      * @param string string to test\n-     * @return true if only digit chars, false if empty or null or contains non-digit chrs\n+     * @return true if only digit chars, false if empty or null or contains non-digit chars\n      */\n     public static boolean isNumeric(String string) {\n         if (string == null || string.length() == 0)\n \n     /**\n      * Create a new absolute URL, from a provided existing absolute URL and a relative URL component.\n-     * @param base the existing absolulte base URL\n+     * @param base the existing absolute base URL\n      * @param relUrl the relative URL to resolve. (If it's already absolute, it will be returned)\n      * @return the resolved absolute URL\n      * @throws MalformedURLException if an error occurred generating the URL\n--- a/src/main/java/org/jsoup/nodes/Attribute.java\n+++ b/src/main/java/org/jsoup/nodes/Attribute.java\n     /**\n      * Collapsible if it's a boolean attribute and value is empty or same as name\n      * \n-     * @param out Outputsettings\n+     * @param out output settings\n      * @return  Returns whether collapsible or not\n      */\n     protected final boolean shouldCollapseAttribute(Document.OutputSettings out) {\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n      * <tt>true</tt>, otherwise this method does nothing.\n      * \n      * <ul>\n-     * <li>An exsiting element gets updated with the current charset</li>\n+     * <li>An existing element gets updated with the current charset</li>\n      * <li>If there's no element yet it will be inserted</li>\n      * <li>Obsolete elements are removed</li>\n      * </ul>\n--- a/src/main/java/org/jsoup/nodes/Entities.java\n+++ b/src/main/java/org/jsoup/nodes/Entities.java\n     }\n \n     /**\n-     * Get the character(s) represented by the named entitiy\n+     * Get the character(s) represented by the named entity\n      *\n      * @param name entity (e.g. \"lt\" or \"amp\")\n      * @return the string value of the character(s) represented by this entity, or \"\" if not defined\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n     /**\n      * Get if this tag should preserve whitespace within child text nodes.\n      *\n-     * @return if preserve whitepace\n+     * @return if preserve whitespace\n      */\n     public boolean preserveWhitespace() {\n         return preserveWhitespace;", "timestamp": 1479093979, "metainfo": ""}