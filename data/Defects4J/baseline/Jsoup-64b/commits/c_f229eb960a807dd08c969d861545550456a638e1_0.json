{"sha": "f229eb960a807dd08c969d861545550456a638e1", "log": "Merge branch 'master' of https://github.com/jhy/jsoup", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n import org.jsoup.nodes.Element;\n import org.jsoup.nodes.XmlDeclaration;\n import org.jsoup.parser.Parser;\n+import org.jsoup.select.Elements;\n \n import java.io.ByteArrayOutputStream;\n import java.io.File;\n             // look for <meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"> or HTML5 <meta charset=\"gb2312\">\n             docData = Charset.forName(defaultCharset).decode(byteData).toString();\n             doc = parser.parseInput(docData, baseUri);\n-            Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n+            Elements metaElements = doc.select(\"meta[http-equiv=content-type], meta[charset]\");\n             String foundCharset = null; // if not found, will keep utf-8 as best attempt\n-            if (meta != null) {\n+            for (Element meta : metaElements) {\n                 if (meta.hasAttr(\"http-equiv\")) {\n                     foundCharset = getCharsetFromContentType(meta.attr(\"content\"));\n                 }\n                 if (foundCharset == null && meta.hasAttr(\"charset\")) {\n                     foundCharset = meta.attr(\"charset\");\n                 }\n-            }\n+                if (foundCharset != null) {\n+                    break;\n+                }\n+            }\n+\n             // look for <?xml encoding='ISO-8859-1'?>\n             if (foundCharset == null && doc.childNodeSize() > 0 && doc.childNode(0) instanceof XmlDeclaration) {\n                 XmlDeclaration prolog = (XmlDeclaration) doc.childNode(0);\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n     }\n \n     @Test\n+    public void secondMetaElementWithContentTypeContainsCharsetParameter() throws Exception {\n+        ByteBuffer inBuffer = ByteBuffer.wrap((\"<html><head>\" +\n+                \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html\\\">\" +\n+                \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=euc-kr\\\">\" +\n+                \"</head><body>\ud55c\uad6d\uc5b4</body></html>\").getBytes(\"euc-kr\"));\n+\n+        Document doc = DataUtil.parseByteData(inBuffer, null, \"http://example.com\", Parser.htmlParser());\n+\n+        assertEquals(\"\ud55c\uad6d\uc5b4\", doc.body().text());\n+    }\n+\n+    @Test\n+    public void firstMetaElementWithCharsetShouldBeUsedForDecoding() throws Exception {\n+        ByteBuffer inBuffer = ByteBuffer.wrap((\"<html><head>\" +\n+                \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=iso-8859-1\\\">\" +\n+                \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=koi8-u\\\">\" +\n+                \"</head><body>\u00dcbergr\u00f6\u00dfentr\u00e4ger</body></html>\").getBytes(\"iso-8859-1\"));\n+\n+        Document doc = DataUtil.parseByteData(inBuffer, null, \"http://example.com\", Parser.htmlParser());\n+\n+        assertEquals(\"\u00dcbergr\u00f6\u00dfentr\u00e4ger\", doc.body().text());\n+    }\n+\n+    @Test\n     public void supportsBOMinFiles() throws IOException {\n         // test files from http://www.i18nl10n.com/korean/utftest/\n         File in = getFile(\"/bomtests/bom_utf16be.html\");\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n      * Get the combined data of this element. Data is e.g. the inside of a {@code script} tag. Note that data is NOT the\n      * text of the element. Use {@link #text()} to get the text that would be visible to a user, and {@link #data()}\n      * for the contents of scripts, comments, CSS styles, etc.\n-     * \n+     *\n      * @return the data, or empty string if none\n      *\n      * @see #dataNodes()", "timestamp": 1497126983, "metainfo": ""}