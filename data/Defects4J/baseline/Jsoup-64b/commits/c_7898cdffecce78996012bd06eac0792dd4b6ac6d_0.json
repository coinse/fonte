{"sha": "7898cdffecce78996012bd06eac0792dd4b6ac6d", "log": "Use string builders for HTML creation.", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Comment.java\n+++ b/src/main/java/org/jsoup/nodes/Comment.java\n         return attributes.get(COMMENT_KEY);\n     }\n \n-    public String outerHtml() {\n-        return String.format(\"<!--%s-->\", getData());\n+    public void outerHtml(StringBuilder accum) {\n+        accum.append(String.format(\"<!--%s-->\", getData()));\n     }\n \n     public String toString() {\n--- a/src/main/java/org/jsoup/nodes/DataNode.java\n+++ b/src/main/java/org/jsoup/nodes/DataNode.java\n         return attributes.get(DATA_KEY);\n     }\n \n-    public String outerHtml() {\n-        return getWholeData(); // data is not escaped in return from data nodes, so \" in script, style is plain\n+    public void outerHtml(StringBuilder accum) {\n+        accum.append(getWholeData()); // data is not escaped in return from data nodes, so \" in script, style is plain\n     }\n \n     public String toString() {\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n         return classNames().contains(className);\n     }\n \n-    /**\n-     * Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n-     * {@code <div><p></p></div>}.\n-     * \n-     * @return the outer HTML\n-     * @see #html()\n-     */\n-    public String outerHtml() {\n-        StringBuilder accum = new StringBuilder();\n+    void outerHtml(StringBuilder accum) {\n         accum\n                 .append(\"<\")\n                 .append(tagName())\n             accum.append(\" />\");\n         } else {\n             accum.append(\">\");\n-            accum.append(html());\n+            html(accum);\n             accum.append(\"</\").append(tagName()).append(\">\");\n         }\n-\n-        return accum.toString();\n-    }\n-\n-    /**\n-     * Retrieves the element's inner HTML. E.g. on a {@code div} with one empty {@code p}, would return\n-     * {@code <p></p>}.\n+    }\n+\n+    /**\n+     * Retrieves the element's inner HTML. E.g. on a {@code <div>} with one empty {@code <p>}, would return\n+     * {@code <p></p>}. (Whereas {@link #outerHtml()} would return {@code <div><p></p></div>}.)\n      * \n      * @return String of HTML.\n      * @see #outerHtml()\n      */\n     public String html() {\n         StringBuilder accum = new StringBuilder();\n+        html(accum); \n+        return accum.toString();\n+    }\n+\n+    private void html(StringBuilder accum) {\n         for (Node node : childNodes)\n-            accum.append(node.outerHtml());\n-\n-        return accum.toString();\n+            node.outerHtml(accum);\n     }\n     \n     /**\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n         return null;\n     }\n \n-    public abstract String outerHtml();\n+    public String outerHtml() {\n+        StringBuilder accum = new StringBuilder();\n+        outerHtml(accum);\n+        return accum.toString();\n+    }\n+\n+    abstract void outerHtml(StringBuilder accum);\n \n     public String toString() {\n         return outerHtml();\n--- a/src/main/java/org/jsoup/nodes/TextNode.java\n+++ b/src/main/java/org/jsoup/nodes/TextNode.java\n         return attributes.get(TEXT_KEY);\n     }\n \n-    public String outerHtml() {\n-        return StringEscapeUtils.escapeHtml(getWholeText());\n+    void outerHtml(StringBuilder accum) {\n+        String html = StringEscapeUtils.escapeHtml(getWholeText());\n+        if (parent() instanceof Element && !((Element) parent()).tag().preserveWhitespace())\n+            html = normaliseWhitespace(html).trim();\n+\n+        accum.append(html);\n     }\n \n     public String toString() {", "timestamp": 1309605107, "metainfo": ""}