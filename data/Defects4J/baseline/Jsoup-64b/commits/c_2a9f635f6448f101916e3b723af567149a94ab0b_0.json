{"sha": "2a9f635f6448f101916e3b723af567149a94ab0b", "log": "Updated default timeout and user-agent", "commit": "\n--- a/src/main/java/org/jsoup/Connection.java\n+++ b/src/main/java/org/jsoup/Connection.java\n      * Set the request user-agent header.\n      * @param userAgent user-agent to use\n      * @return this Connection, for chaining\n+     * @see org.jsoup.helper.HttpConnection#DEFAULT_UA\n      */\n     Connection userAgent(String userAgent);\n \n     /**\n      * Set the request timeouts (connect and read). If a timeout occurs, an IOException will be thrown. The default\n-     * timeout is 3 seconds (3000 millis). A timeout of zero is treated as an infinite timeout.\n+     * timeout is <b<30 seconds</b> (30000 millis). A timeout of zero is treated as an infinite timeout.\n      * @param millis number of milliseconds (thousandths of a second) before timing out connects or reads.\n      * @return this Connection, for chaining\n      */\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n  */\n public class HttpConnection implements Connection {\n     public static final String  CONTENT_ENCODING = \"Content-Encoding\";\n+    /**\n+     * Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop\n+     * vs in jsoup, which would otherwise default to {@code Java}. So by default, use a desktop UA.\n+     */\n+    public static final String DEFAULT_UA =\n+        \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\";\n+    private static final String USER_AGENT = \"User-Agent\";\n     private static final String CONTENT_TYPE = \"Content-Type\";\n     private static final String MULTIPART_FORM_DATA = \"multipart/form-data\";\n     private static final String FORM_URL_ENCODED = \"application/x-www-form-urlencoded\";\n \n     public Connection userAgent(String userAgent) {\n         Validate.notNull(userAgent, \"User agent must not be null\");\n-        req.header(\"User-Agent\", userAgent);\n+        req.header(USER_AGENT, userAgent);\n         return this;\n     }\n \n         private String postDataCharset = DataUtil.defaultCharset;\n \n         private Request() {\n-            timeoutMilliseconds = 3000;\n+            timeoutMilliseconds = 30000; // 30 seconds\n             maxBodySizeBytes = 1024 * 1024; // 1MB\n             followRedirects = true;\n             data = new ArrayList<Connection.KeyVal>();\n             method = Method.GET;\n             headers.put(\"Accept-Encoding\", \"gzip\");\n+            headers.put(USER_AGENT, DEFAULT_UA);\n             parser = Parser.htmlParser();\n         }\n \n--- a/src/test/java/org/jsoup/helper/HttpConnectionTest.java\n+++ b/src/test/java/org/jsoup/helper/HttpConnectionTest.java\n \n     @Test public void userAgent() {\n         Connection con = HttpConnection.connect(\"http://example.com/\");\n+        assertEquals(HttpConnection.DEFAULT_UA, con.request().header(\"User-Agent\"));\n         con.userAgent(\"Mozilla\");\n         assertEquals(\"Mozilla\", con.request().header(\"User-Agent\"));\n     }\n \n     @Test public void timeout() {\n         Connection con = HttpConnection.connect(\"http://example.com/\");\n+        assertEquals(30 * 1000, con.request().timeout());\n         con.timeout(1000);\n         assertEquals(1000, con.request().timeout());\n     }\n         assertEquals(Connection.Method.POST, con.request().method());\n     }\n \n-    @Test(expected=IllegalArgumentException.class) public void throwsOnOdddData() {\n+    @Test(expected=IllegalArgumentException.class) public void throwsOnOddData() {\n         Connection con = HttpConnection.connect(\"http://example.com/\");\n         con.data(\"Name\", \"val\", \"what\");\n     }", "timestamp": 1477856260, "metainfo": ""}