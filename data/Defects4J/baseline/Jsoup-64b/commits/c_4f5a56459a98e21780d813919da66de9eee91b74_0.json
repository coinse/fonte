{"sha": "4f5a56459a98e21780d813919da66de9eee91b74", "log": "Changelog for #753 and tidied up comments a little  Fixes #753", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n      * @param className name of class to check for\n      * @return true if it does, false if not\n      */\n-    /*\n-    Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames().\n-\n-    Wiki: 71, 13 (5.4x)\n-    CNN: 227, 91 (2.5x)\n-    Alterslash: 59, 4 (14.8x)\n-    Jsoup: 14, 1 (14x)\n-    */\n+    // performance sensitive\n     public boolean hasClass(String className) {\n-        String classAttr = attributes.get(\"class\");\n-        final int end = classAttr.length();\n-        final int classNameLength = className.length();\n-\n-        // class attribute is empty or the requested class name is 'too' long\n-        if (end == 0 || end < classNameLength) {\n+        final String classAttr = attributes.get(\"class\");\n+        final int len = classAttr.length();\n+        final int wantLen = className.length();\n+\n+        if (len == 0 || len < wantLen) {\n             return false;\n         }\n-        \n-        // if both length are equals, just compare the className with the attribute\n-        if(end == classNameLength) {\n+\n+        // if both lengths are equal, only need compare the className with the attribute\n+        if (len == wantLen) {\n             return className.equalsIgnoreCase(classAttr);\n         }\n \n-        // manually split the different class names in the class attibute\n-        // DO NOT allocate the string but use regionMatches and length comparaison to make the check\n+        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)\n         boolean inClass = false;\n         int start = 0;\n-        for (int i = 0; i < end; i ++) {\n+        for (int i = 0; i < len; i++) {\n             if (Character.isWhitespace(classAttr.charAt(i))) {\n-                if(inClass) {\n-                    // the white space ends a class name\n-                    // compare it with the requested one\n-                    if(i-start == classNameLength && classAttr.regionMatches(true, start, className, 0, classNameLength)) {\n+                if (inClass) {\n+                    // white space ends a class name, compare it with the requested one, ignore case\n+                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                         return true;\n                     }\n                     inClass = false;\n                 }\n-            }\n-            else {\n-                if(!inClass) {\n+            } else {\n+                if (!inClass) {\n                     // we're in a class name : keep the start of the substring\n                     inClass = true;\n                     start = i;\n                 }\n             }\n         }\n-        \n-        // the attribute may not end by a white space\n-        // check the current class name\n-        if(inClass && end-start == classNameLength) {\n-            return classAttr.regionMatches(true, start, className, 0, classNameLength);  \n-        }\n-        \n+\n+        // check the last entry\n+        if (inClass && len - start == wantLen) {\n+            return classAttr.regionMatches(true, start, className, 0, wantLen);\n+        }\n+\n         return false;\n     }\n ", "timestamp": 1472083485, "metainfo": ""}