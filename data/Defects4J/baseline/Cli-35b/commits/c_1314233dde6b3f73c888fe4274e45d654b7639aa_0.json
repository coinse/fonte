{"sha": "1314233dde6b3f73c888fe4274e45d654b7639aa", "log": "When extracting option values from properties, options with a single argument can now be processed successfully.  BR: 31148   ", "commit": "\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n  *\n  * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.17 $\n+ * @version $Revision: 1.18 $\n  */\n public abstract class Parser implements CommandLineParser {\n \n                 // get the value from the properties instance\n                 String value = properties.getProperty(option);\n \n-                if (opt.hasArgs())\n+                if (opt.hasArg())\n                 {\n                     if ((opt.getValues() == null)\n                         || (opt.getValues().length == 0))\n--- a/src/test/org/apache/commons/cli/BugsTest.java\n+++ b/src/test/org/apache/commons/cli/BugsTest.java\n import java.io.PrintStream;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n+import java.util.Properties;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n                 \"footer\"+EOL\n                 ,out.toString());\n     }\n+    \n+    public void test31148() throws ParseException {\n+        Option multiArgOption = new Option(\"o\",\"option with multiple args\");\n+        multiArgOption.setArgs(1);\n+        \n+        Options options = new Options();\n+        options.addOption(multiArgOption);\n+        \n+        Parser parser = new PosixParser();\n+        String[] args = new String[]{};\n+        Properties props = new Properties();\n+        props.setProperty(\"o\",\"ovalue\");\n+        CommandLine cl = parser.parse(options,args,props);\n+        \n+        assertTrue(cl.hasOption('o'));\n+        assertEquals(\"ovalue\",cl.getOptionValue('o'));\n+    }\n \n }", "timestamp": 1104158136, "metainfo": ""}