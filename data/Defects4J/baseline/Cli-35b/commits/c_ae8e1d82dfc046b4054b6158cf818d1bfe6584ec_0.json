{"sha": "ae8e1d82dfc046b4054b6158cf818d1bfe6584ec", "log": "- added more HelpFormatter tests - fixed default gutter bug  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n+++ b/src/java/org/apache/commons/cli2/util/HelpFormatter.java\n         final int fullWidth) {\n         \n         // default the left gutter to empty string\n-        if (gutterLeft == null) {\n-            this.gutterLeft = \"\";\n-        }\n-        else {\n-            this.gutterLeft = gutterLeft;\n-        }\n-\n-        // default the center gutter to empty string\n-        if (gutterCenter == null) {\n-            this.gutterCenter = \"\";\n-        }\n-        else {\n-            this.gutterCenter = gutterCenter;\n-        }\n+        this.gutterLeft = (gutterLeft == null) ? DEFAULT_GUTTER_LEFT : gutterLeft;\n+\n+        // default the center gutter to a single space\n+        this.gutterCenter = (gutterCenter == null) ? DEFAULT_GUTTER_CENTER : gutterCenter;\n \n         // default the right gutter to empty string\n-        if (gutterRight == null) {\n-            this.gutterRight = \"\";\n-        }\n-        else {\n-            this.gutterRight = gutterRight;\n-        }\n+        this.gutterRight = (gutterRight == null) ? DEFAULT_GUTTER_RIGHT : gutterRight;\n \n         // calculate the available page width\n-        this.pageWidth = fullWidth - gutterLeft.length() - gutterRight.length();\n+        this.pageWidth = fullWidth - this.gutterLeft.length() - this.gutterRight.length();\n         \n         // check available page width is valid\n-        if (fullWidth - pageWidth + gutterCenter.length() < 2) {\n+        int availableWidth = fullWidth - pageWidth + this.gutterCenter.length(); \n+        if ( availableWidth < 2 ) {\n             throw new IllegalArgumentException(\n                 \"The gutter strings leave no space for output! \"\n                     + \"Supply shorter gutters or more width.\");\n--- a/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n+++ b/src/test/org/apache/commons/cli2/util/HelpFormatterTest.java\n import java.io.PrintWriter;\n import java.io.StringReader;\n import java.io.StringWriter;\n+import java.util.Collections;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Set;\n \n import junit.framework.TestCase;\n \n+import org.apache.commons.cli2.DisplaySetting;\n import org.apache.commons.cli2.Group;\n import org.apache.commons.cli2.Option;\n import org.apache.commons.cli2.OptionException;\n \n     public void testPrint() throws IOException {\n         final StringWriter writer = new StringWriter();\n-        helpFormatter.setPrintWriter(new PrintWriter(writer));\n+        final PrintWriter pw = new PrintWriter(writer);\n+        helpFormatter.setPrintWriter(pw);\n         helpFormatter.print();\n \n-        //System.out.println(writer.toString());\n+        // test group\n+        assertEquals(\"incorrect group\", this.options, helpFormatter.getGroup());\n+\n+        // test pagewidth\n+        assertEquals(\"incorrect page width\", 76, helpFormatter.getPageWidth());\n+\n+        // test pw\n+        assertEquals(\"incorrect print writer\", pw, helpFormatter.getPrintWriter());\n+\n+        // test divider\n+        assertEquals(\"incorrect divider\", \n+                \"+------------------------------------------------------------------------------+\",\n+                helpFormatter.getDivider());\n+\n+        // test header\n+        assertEquals(\"incorrect header\", \"Jakarta Commons CLI\", helpFormatter.getHeader());\n+\n+        // test footer\n+        assertEquals(\"incorrect footer\", \"Copyright 2003\\nApache Software Foundation\",\n+                helpFormatter.getFooter());\n+\n+        // test gutters\n+        assertEquals(\"incorrect left gutter\", \"|*\", helpFormatter.getGutterLeft());\n+        assertEquals(\"incorrect right gutter\", \"*|\", helpFormatter.getGutterRight());\n+        assertEquals(\"incorrect center gutter\", \"*-*\", helpFormatter.getGutterCenter());\n+\n \n         final BufferedReader reader =\n             new BufferedReader(new StringReader(writer.toString()));\n         HelpFormatter.pad(\"hello world\", -5, writer);\n         assertEquals(\"hello world\", writer.toString());\n     }\n+    \n+    public void testGutters() throws IOException {\n+        helpFormatter = new HelpFormatter(null, null, null, 80);\n+        helpFormatter.setShellCommand(\"ant\");\n+        final Set lusage = new HashSet();\n+        lusage.add(DisplaySetting.DISPLAY_ALIASES);\n+        lusage.add(DisplaySetting.DISPLAY_GROUP_NAME);\n+        helpFormatter.setLineUsageSettings(lusage);\n+        \n+        // test line usage\n+        assertEquals(\"incorrect line usage\", lusage, helpFormatter.getLineUsageSettings());\n+\n+        final Set fusage = new HashSet();\n+        fusage.add(DisplaySetting.DISPLAY_PARENT_CHILDREN);\n+        fusage.add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);\n+        fusage.add(DisplaySetting.DISPLAY_GROUP_OUTER);\n+        fusage.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);\n+        fusage.add(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);\n+        fusage.add(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);\n+        fusage.add(DisplaySetting.DISPLAY_SWITCH_ENABLED);\n+        fusage.add(DisplaySetting.DISPLAY_SWITCH_DISABLED);\n+        fusage.add(DisplaySetting.DISPLAY_PROPERTY_OPTION);\n+        fusage.add(DisplaySetting.DISPLAY_PARENT_CHILDREN);\n+        fusage.add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);\n+        fusage.add(DisplaySetting.DISPLAY_OPTIONAL);\n+        helpFormatter.setFullUsageSettings(fusage);\n+\n+        // test line usage\n+        assertEquals(\"incorrect full usage\", fusage, helpFormatter.getFullUsageSettings());\n+\n+        final Set dsettings = new HashSet();\n+        dsettings.add(DisplaySetting.DISPLAY_GROUP_NAME);\n+        dsettings.add(DisplaySetting.DISPLAY_GROUP_EXPANDED);\n+        dsettings.add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);\n+        \n+        helpFormatter.setDisplaySettings(dsettings);\n+\n+        verbose =\n+            new DefaultOptionBuilder()\n+                .withLongName(\"verbose\")\n+                .withDescription(\"print the version information and exit\")\n+                .create();\n+\n+        options = new GroupBuilder()\n+            .withName(\"options\")\n+            .withOption(DefaultOptionTest.buildHelpOption())\n+            .withOption(ArgumentTest.buildTargetsArgument())\n+            .withOption(\n+                new DefaultOptionBuilder()\n+                    .withLongName(\"diagnostics\")\n+                    .withDescription(\"print information that might be helpful to diagnose or report problems.\")\n+                    .create())\n+            .withOption(\n+                new DefaultOptionBuilder()\n+                    .withLongName(\"projecthelp\")\n+                    .withDescription(\"print project help information\")\n+                    .create())\n+            .withOption(verbose)\n+            .create();        \n+        \n+        helpFormatter.setGroup(options);\n+\n+        // test default gutters\n+        assertEquals(\"incorrect left gutter\", HelpFormatter.DEFAULT_GUTTER_LEFT, helpFormatter.getGutterLeft());\n+        assertEquals(\"incorrect right gutter\", HelpFormatter.DEFAULT_GUTTER_RIGHT, helpFormatter.getGutterRight());\n+        assertEquals(\"incorrect center gutter\", HelpFormatter.DEFAULT_GUTTER_CENTER, helpFormatter.getGutterCenter());\n+    \n+        final StringWriter writer = new StringWriter();\n+        helpFormatter.setPrintWriter(new PrintWriter(writer));\n+        helpFormatter.print();\n+\n+        final BufferedReader reader =\n+            new BufferedReader(new StringReader(writer.toString()));\n+        assertEquals(\n+            \"Usage:                                                                          \",\n+            reader.readLine());\n+        assertEquals(\n+            \"ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2> ...]]  \",\n+            reader.readLine());\n+        assertEquals(\n+            \"options                                                                         \",\n+            reader.readLine());\n+        assertEquals(\n+            \"  --help (-?,-h)         Displays the help                                      \",\n+            reader.readLine());\n+        assertEquals(\n+            \"  --diagnostics          print information that might be helpful to diagnose or \",\n+            reader.readLine());\n+        assertEquals(\n+            \"                         report problems.                                       \",\n+            reader.readLine());\n+        assertEquals(\n+            \"  --projecthelp          print project help information                         \",\n+            reader.readLine());\n+        assertEquals(\n+            \"  --verbose              print the version information and exit                 \",\n+            reader.readLine());\n+        assertEquals(\n+            \"  target [target ...]    The targets ant should build                           \",\n+            reader.readLine());\n+        assertNull(reader.readLine());\n+    }\n }", "timestamp": 1125962316, "metainfo": ""}