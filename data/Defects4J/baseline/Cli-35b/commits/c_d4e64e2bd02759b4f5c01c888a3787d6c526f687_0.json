{"sha": "d4e64e2bd02759b4f5c01c888a3787d6c526f687", "log": "Merged ParseTest into PosixParserTest  ", "commit": "\n--- a/src/test/org/apache/commons/cli/PosixParserTest.java\n+++ b/src/test/org/apache/commons/cli/PosixParserTest.java\n import junit.framework.TestCase;\n \n /**\n- * This is a collection of tests that test real world\n- * applications command lines focusing on options with\n- * long and short names.\n+ * Test case for the PosixParser.\n+ *\n+ * @version $Revision$, $Date$\n  */\n-public class PosixParserTest extends TestCase {\n-\n+public class PosixParserTest extends TestCase\n+{\n+    private Options options = null;\n+    private Parser parser = null;\n+\n+    public void setUp()\n+    {\n+        options = new Options()\n+            .addOption(\"a\", \"enable-a\", false, \"turn [a] on or off\")\n+            .addOption(\"b\", \"bfile\", true, \"set the value of [b]\")\n+            .addOption(\"c\", \"copt\", false, \"turn [c] on or off\");\n+\n+        parser = new PosixParser();\n+    }\n+\n+    public void testSimpleShort() throws Exception\n+    {\n+        String[] args = new String[] { \"-a\",\n+                                       \"-b\", \"toast\",\n+                                       \"foo\", \"bar\" };\n+\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertTrue( \"Confirm -a is set\", cl.hasOption(\"a\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+        assertTrue( \"Confirm size of extra args\", cl.getArgList().size() == 2);\n+    }\n+\n+    public void testSimpleLong() throws Exception\n+    {\n+        String[] args = new String[] { \"--enable-a\",\n+                                       \"--bfile\", \"toast\",\n+                                       \"foo\", \"bar\" };\n+\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertTrue( \"Confirm -a is set\", cl.hasOption(\"a\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+        assertTrue( \"Confirm arg of --bfile\", cl.getOptionValue( \"bfile\" ).equals( \"toast\" ) );\n+        assertTrue( \"Confirm size of extra args\", cl.getArgList().size() == 2);\n+    }\n+\n+    public void testComplexShort() throws Exception\n+    {\n+        String[] args = new String[] { \"-acbtoast\",\n+                                       \"foo\", \"bar\" };\n+\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertTrue( \"Confirm -a is set\", cl.hasOption(\"a\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm -c is set\", cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+        assertTrue( \"Confirm size of extra args\", cl.getArgList().size() == 2);\n+    }\n+\n+    public void testExtraOption() throws Exception\n+    {\n+        String[] args = new String[] { \"-adbtoast\",\n+                                       \"foo\", \"bar\" };\n+\n+        boolean caught = false;\n+\n+        try\n+        {\n+            CommandLine cl = parser.parse(options, args);\n+\n+            assertTrue( \"Confirm -a is set\", cl.hasOption(\"a\") );\n+            assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+            assertTrue( \"confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+            assertTrue( \"Confirm size of extra args\", cl.getArgList().size() == 3);\n+        }\n+        catch (UnrecognizedOptionException e)\n+        {\n+            caught = true;\n+        }\n+\n+        assertTrue( \"Confirm UnrecognizedOptionException caught\", caught );\n+    }\n+\n+    public void testMissingArg() throws Exception\n+    {\n+        String[] args = new String[] { \"-acb\" };\n+\n+        boolean caught = false;\n+\n+        try\n+        {\n+            parser.parse(options, args);\n+        }\n+        catch (MissingArgumentException e)\n+        {\n+            caught = true;\n+        }\n+\n+        assertTrue( \"Confirm MissingArgumentException caught\", caught );\n+    }\n+\n+    public void testStop() throws Exception\n+    {\n+        String[] args = new String[] { \"-c\",\n+                                       \"foober\",\n+                                       \"-btoast\" };\n+\n+        CommandLine cl = parser.parse(options, args, true);\n+        assertTrue( \"Confirm -c is set\", cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm  2 extra args: \" + cl.getArgList().size(), cl.getArgList().size() == 2);\n+    }\n+\n+    public void testMultiple() throws Exception\n+    {\n+        String[] args = new String[] { \"-c\",\n+                                       \"foobar\",\n+                                       \"-btoast\" };\n+\n+        CommandLine cl = parser.parse(options, args, true);\n+        assertTrue( \"Confirm -c is set\", cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm  2 extra args: \" + cl.getArgList().size(), cl.getArgList().size() == 2);\n+\n+        cl = parser.parse(options, cl.getArgs() );\n+\n+        assertTrue( \"Confirm -c is not set\", ! cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+        assertTrue( \"Confirm  1 extra arg: \" + cl.getArgList().size(), cl.getArgList().size() == 1);\n+        assertTrue( \"Confirm  value of extra arg: \" + cl.getArgList().get(0), cl.getArgList().get(0).equals(\"foobar\") );\n+    }\n+\n+    public void testMultipleWithLong() throws Exception\n+    {\n+        String[] args = new String[] { \"--copt\",\n+                                       \"foobar\",\n+                                       \"--bfile\", \"toast\" };\n+\n+        CommandLine cl = parser.parse(options,args,\n+                                        true);\n+        assertTrue( \"Confirm -c is set\", cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm  3 extra args: \" + cl.getArgList().size(), cl.getArgList().size() == 3);\n+\n+        cl = parser.parse(options, cl.getArgs() );\n+\n+        assertTrue( \"Confirm -c is not set\", ! cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"toast\") );\n+        assertTrue( \"Confirm  1 extra arg: \" + cl.getArgList().size(), cl.getArgList().size() == 1);\n+        assertTrue( \"Confirm  value of extra arg: \" + cl.getArgList().get(0), cl.getArgList().get(0).equals(\"foobar\") );\n+    }\n+\n+    public void testDoubleDash() throws Exception\n+    {\n+        String[] args = new String[] { \"--copt\",\n+                                       \"--\",\n+                                       \"-b\", \"toast\" };\n+\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertTrue( \"Confirm -c is set\", cl.hasOption(\"c\") );\n+        assertTrue( \"Confirm -b is not set\", ! cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm 2 extra args: \" + cl.getArgList().size(), cl.getArgList().size() == 2);\n+    }\n+\n+    public void testSingleDash() throws Exception\n+    {\n+        String[] args = new String[] { \"--copt\",\n+                                       \"-b\", \"-\",\n+                                       \"-a\",\n+                                       \"-\" };\n+\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertTrue( \"Confirm -a is set\", cl.hasOption(\"a\") );\n+        assertTrue( \"Confirm -b is set\", cl.hasOption(\"b\") );\n+        assertTrue( \"Confirm arg of -b\", cl.getOptionValue(\"b\").equals(\"-\") );\n+        assertTrue( \"Confirm 1 extra arg: \" + cl.getArgList().size(), cl.getArgList().size() == 1);\n+        assertTrue( \"Confirm value of extra arg: \" + cl.getArgList().get(0), cl.getArgList().get(0).equals(\"-\") );\n+    }\n+\n+    /**\n+     * Real world test with long and short options.\n+     */\n     public void testLongOptionWithShort() throws Exception {\n         Option help = new Option(\"h\", \"help\", false, \"print this message\");\n         Option version = new Option(\"v\", \"version\", false, \"print version information\");", "timestamp": 1212174532, "metainfo": ""}