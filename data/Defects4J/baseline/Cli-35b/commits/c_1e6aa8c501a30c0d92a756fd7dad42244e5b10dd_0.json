{"sha": "1e6aa8c501a30c0d92a756fd7dad42244e5b10dd", "log": "Complete javadoc, fix typos, fix findbugs warning: make comparator serializable.  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/main/java/org/apache/commons/cli/HelpFormatter.java\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.PrintWriter;\n+import java.io.Serializable;\n import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.Arrays;\n      * Comparator used to sort the options when they output in help text.\n      * Defaults to case-insensitive alphabetical sorting by option key.\n      *\n+     * @return the {@link Comparator} currently in use to sort the options\n      * @since 1.2\n      */\n     public Comparator<Option> getOptionComparator()\n      * Set the comparator used to sort the options when they output in help text.\n      * Passing in a null comparator will keep the options in the order they were declared.\n      *\n+     * @param comparator the {@link Comparator} to use for sorting the options\n      * @since 1.2\n      */\n     public void setOptionComparator(Comparator<Option> comparator)\n      *\n      * @param width the number of characters to be displayed on each line\n      * @param cmdLineSyntax the syntax for this application\n-     * @param header the banner to display at the begining of the help\n+     * @param header the banner to display at the beginning of the help\n      * @param options the Options instance\n      * @param footer the banner to display at the end of the help\n      * @param autoUsage whether to print an automatically generated \n      * @param pw the writer to which the help will be written\n      * @param width the number of characters to be displayed on each line\n      * @param cmdLineSyntax the syntax for this application\n-     * @param header the banner to display at the begining of the help\n+     * @param header the banner to display at the beginning of the help\n      * @param options the Options instance\n      * @param leftPad the number of characters of padding to be prefixed\n      * to each line\n      * This class implements the <code>Comparator</code> interface\n      * for comparing Options.\n      */\n-    private static class OptionComparator implements Comparator<Option>\n-    {\n+    private static class OptionComparator implements Comparator<Option>, Serializable\n+    {\n+        /** The serial version UID. */\n+        private static final long serialVersionUID = 5305467873966684014L;\n+\n         /**\n          * Compares its two arguments for order. Returns a negative\n          * integer, zero, or a positive integer as the first argument", "timestamp": 1359382333, "metainfo": ""}