{"sha": "d36b987c3257c01b42353cf7d2eb69ca325860aa", "log": "A space character is no longer accepted as a valid short option  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/OptionValidator.java\n+++ b/src/main/java/org/apache/commons/cli/OptionValidator.java\n         {\n             return;\n         }\n-\n+        \n         // handle the single character opt\n-        else if (opt.length() == 1)\n+        if (opt.length() == 1)\n         {\n             char ch = opt.charAt(0);\n \n             if (!isValidOpt(ch))\n             {\n-                throw new IllegalArgumentException(\"illegal option value '\" + ch + \"'\");\n+                throw new IllegalArgumentException(\"Illegal option name '\" + ch + \"'\");\n             }\n         }\n \n             {\n                 if (!isValidChar(chars[i]))\n                 {\n-                    throw new IllegalArgumentException(\"opt contains illegal character value '\" + chars[i] + \"'\");\n+                    throw new IllegalArgumentException(\"The option '\" + opt + \"' contains an illegal character : '\" + chars[i] + \"'\");\n                 }\n             }\n         }\n      * Returns whether the specified character is a valid Option.\n      *\n      * @param c the option to validate\n-     * @return true if <code>c</code> is a letter, ' ', '?' or '@',\n-     *         otherwise false.\n+     * @return true if <code>c</code> is a letter, '?' or '@', otherwise false.\n      */\n     private static boolean isValidOpt(char c)\n     {\n-        return isValidChar(c) || c == ' ' || c == '?' || c == '@';\n+        return isValidChar(c) || c == '?' || c == '@';\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/cli/OptionBuilderTest.java\n+++ b/src/test/java/org/apache/commons/cli/OptionBuilderTest.java\n         // '@'\n         Option opt2 = OptionBuilder.withDescription(\"read from stdin\").create('@');\n         assertEquals(\"@\", opt2.getOpt());\n+        \n+        // ' '\n+        try {\n+            OptionBuilder.create(' ');\n+            fail( \"IllegalArgumentException not caught\" );            \n+        } catch (IllegalArgumentException e) {\n+            // success\n+        }\n     }\n \n     public void testOptionArgNumbers()", "timestamp": 1276703336, "metainfo": ""}