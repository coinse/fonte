{"sha": "aa050a69b2395f496f953f4f9c4f63a475dcf430", "log": "Fixed the parsing of --foo=bar and -f=bar options with the GnuParser (CLI-157)  ", "commit": "\n--- a/src/java/org/apache/commons/cli/GnuParser.java\n+++ b/src/java/org/apache/commons/cli/GnuParser.java\n             }\n             else if (arg.startsWith(\"-\"))\n             {\n-                Option option = options.getOption(arg);\n+                String opt = Util.stripLeadingHyphens(arg);\n \n-                String head = arg.substring(0, 2); // \"--\" if --foo, \"-f\" if -foo\n-                String tail = arg.substring(2);    // \"foo\" if -foo, \"oo\" if -foo\n-\n-                // this is not an Option\n-                if (option == null)\n+                if (options.hasOption(opt))\n                 {\n-                    // handle special properties Option (-Dproperty=value for example)\n-                    Option specialOption = options.getOption(head);\n-\n-                    if (specialOption != null)\n+                    tokens.add(arg);\n+                }\n+                else\n+                {\n+                    if (opt.indexOf('=') != -1 && options.hasOption(opt.substring(0, opt.indexOf('='))))\n                     {\n-                        tokens.add(head); // -D\n-                        tokens.add(tail); // property=value\n+                        // the format is --foo=value or -foo=value\n+                        tokens.add(arg.substring(0, arg.indexOf('='))); // --foo\n+                        tokens.add(arg.substring(arg.indexOf('=') + 1)); // value\n+                    }\n+                    else if (options.hasOption(arg.substring(0, 2)))\n+                    {\n+                        // the format is a special properties option (-Dproperty=value)\n+                        tokens.add(arg.substring(0, 2)); // -D\n+                        tokens.add(arg.substring(2)); // property=value\n                     }\n                     else\n                     {\n                         eatTheRest = stopAtNonOption;\n                         tokens.add(arg);\n                     }\n-                }\n-                else\n-                {\n-                    tokens.add(arg);\n                 }\n             }\n             else\n--- a/src/test/org/apache/commons/cli/GnuParserTest.java\n+++ b/src/test/org/apache/commons/cli/GnuParserTest.java\n         CommandLine cl = parser.parse(options, args);\n         assertEquals(\"-1\", cl.getOptionValue(\"a\"));\n     }\n+\n+    public void testShortWithEqual() throws Exception\n+    {\n+        String[] args = new String[] { \"-f=bar\" };\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withLongOpt(\"foo\").hasArg().create('f'));\n+\n+        Parser parser = new GnuParser();\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n+    }\n+\n+    public void testShortWithoutEqual() throws Exception\n+    {\n+        String[] args = new String[] { \"-fbar\" };\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withLongOpt(\"foo\").hasArg().create('f'));\n+\n+        Parser parser = new GnuParser();\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n+    }\n+\n+    public void testLongWithEqual() throws Exception\n+    {\n+        String[] args = new String[] { \"--foo=bar\" };\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withLongOpt(\"foo\").hasArg().create('f'));\n+\n+        Parser parser = new GnuParser();\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n+    }\n+\n+    public void testLongWithEqualSingleDash() throws Exception\n+    {\n+        String[] args = new String[] { \"-foo=bar\" };\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withLongOpt(\"foo\").hasArg().create('f'));\n+\n+        Parser parser = new GnuParser();\n+        CommandLine cl = parser.parse(options, args);\n+\n+        assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n+    }\n }", "timestamp": 1212314510, "metainfo": ""}