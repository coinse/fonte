{"sha": "0cbe33506c92b790fd4dc866237d7e430a6c91dd", "log": "Suppress deprecation warnings for test classes  ", "commit": "\n--- a/src/test/java/org/apache/commons/cli/ApplicationTest.java\n+++ b/src/test/java/org/apache/commons/cli/ApplicationTest.java\n  *\n  * @author John Keyes (john at integralsource.com)\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class ApplicationTest extends TestCase {\n \n     public void testLs() throws Exception {\n--- a/src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java\n+++ b/src/test/java/org/apache/commons/cli/ArgumentIsOptionTest.java\n \n import junit.framework.TestCase;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class ArgumentIsOptionTest extends TestCase\n {\n     private Options options = null;\n--- a/src/test/java/org/apache/commons/cli/BasicParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/BasicParserTest.java\n  * @author Emmanuel Bourg\n  * @version $Revision$, $Date$\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BasicParserTest extends ParserTestCase\n {\n     @Override\n--- a/src/test/java/org/apache/commons/cli/BugsTest.java\n+++ b/src/test/java/org/apache/commons/cli/BugsTest.java\n \n import junit.framework.TestCase;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BugsTest extends TestCase\n {\n     public void test11457() throws Exception\n--- a/src/test/java/org/apache/commons/cli/CommandLineTest.java\n+++ b/src/test/java/org/apache/commons/cli/CommandLineTest.java\n  * @author Emmanuel Bourg\n  * @version $Revision$, $Date$\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class CommandLineTest extends TestCase\n {\n     public void testGetOptionProperties() throws Exception\n--- a/src/test/java/org/apache/commons/cli/GnuParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/GnuParserTest.java\n \n package org.apache.commons.cli;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class GnuParserTest extends ParserTestCase\n {\n     @Override\n--- a/src/test/java/org/apache/commons/cli/OptionGroupTest.java\n+++ b/src/test/java/org/apache/commons/cli/OptionGroupTest.java\n  * @author John Keyes (john at integralsource.com)\n  * @version $Revision$\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class OptionGroupTest extends TestCase\n {\n     private Options _options = null;\n--- a/src/test/java/org/apache/commons/cli/OptionsTest.java\n+++ b/src/test/java/org/apache/commons/cli/OptionsTest.java\n  * @author Rob Oxspring roxspring@apache.org\n  * @version $Revision$\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class OptionsTest extends TestCase\n {\n     public void testSimple()\n--- a/src/test/java/org/apache/commons/cli/ParserTestCase.java\n+++ b/src/test/java/org/apache/commons/cli/ParserTestCase.java\n         assertEquals(\"number of arg for -f\", 1, cl.getOptionValues(\"f\").length);\n     }\n \n+    @SuppressWarnings(\"deprecation\")\n     private CommandLine parse(CommandLineParser parser, Options opts, String[] args, Properties properties) throws ParseException {\n         if (parser instanceof Parser) {\n             return ((Parser) parser).parse(opts, args, properties);\n--- a/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java\n+++ b/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java\n  *\n  * @version $Revision$, $Date$\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class PatternOptionBuilderTest extends TestCase\n {\n     public void testSimplePattern() throws Exception\n--- a/src/test/java/org/apache/commons/cli/PosixParserTest.java\n+++ b/src/test/java/org/apache/commons/cli/PosixParserTest.java\n  */\n public class PosixParserTest extends ParserTestCase\n {\n+    @SuppressWarnings(\"deprecation\")\n     @Override\n     public void setUp()\n     {\n--- a/src/test/java/org/apache/commons/cli/ValueTest.java\n+++ b/src/test/java/org/apache/commons/cli/ValueTest.java\n \n import junit.framework.TestCase;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class ValueTest extends TestCase\n {\n     private CommandLine _cl = null;\n--- a/src/test/java/org/apache/commons/cli/ValuesTest.java\n+++ b/src/test/java/org/apache/commons/cli/ValuesTest.java\n import junit.framework.TestCase;\n import junitx.framework.ArrayAssert;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class ValuesTest extends TestCase\n {\n     private CommandLine cmd;\n--- a/src/test/java/org/apache/commons/cli/bug/BugCLI133Test.java\n+++ b/src/test/java/org/apache/commons/cli/bug/BugCLI133Test.java\n /**\n  * @author brianegge\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BugCLI133Test extends TestCase {\n     public void testOrder() throws ParseException {\n         Option optionA = new Option(\"a\", \"first\");\n--- a/src/test/java/org/apache/commons/cli/bug/BugCLI13Test.java\n+++ b/src/test/java/org/apache/commons/cli/bug/BugCLI13Test.java\n /**\n  * @author brianegge\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BugCLI13Test extends TestCase\n {\n     public void testCLI13() throws ParseException\n--- a/src/test/java/org/apache/commons/cli/bug/BugCLI148Test.java\n+++ b/src/test/java/org/apache/commons/cli/bug/BugCLI148Test.java\n  *\n  * @author brianegge\n  */\n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BugCLI148Test  extends TestCase\n {    \n     private Options options;\n--- a/src/test/java/org/apache/commons/cli/bug/BugCLI71Test.java\n+++ b/src/test/java/org/apache/commons/cli/bug/BugCLI71Test.java\n \n import junit.framework.TestCase;\n \n+@SuppressWarnings(\"deprecation\") // tests some deprecated classes\n public class BugCLI71Test extends TestCase {\n \n     private Options options;", "timestamp": 1359566454, "metainfo": ""}