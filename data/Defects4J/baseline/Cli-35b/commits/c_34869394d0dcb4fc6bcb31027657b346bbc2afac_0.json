{"sha": "34869394d0dcb4fc6bcb31027657b346bbc2afac", "log": "Add property test for Posix Parser  ", "commit": "\n--- a/src/test/org/apache/commons/cli/PosixParserTest.java\n+++ b/src/test/org/apache/commons/cli/PosixParserTest.java\n \n package org.apache.commons.cli;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import junit.framework.TestCase;\n \n /**\n         assertEquals(line.getOptionValue(\"age\"), \"5\");\n         assertEquals(line.getOptionValue(\"file\"), \"filename\");\n     }\n+\n+    public void testPropertiesOption() throws Exception\n+    {\n+        String[] args = new String[] { \"-Jsource=1.5\", \"-J\", \"target\", \"1.5\", \"foo\" };\n+\n+        Options options = new Options();\n+        options.addOption(OptionBuilder.withValueSeparator().hasArgs(2).create('J'));\n+\n+        Parser parser = new PosixParser();\n+        CommandLine cl = parser.parse(options, args);\n+\n+        List values = Arrays.asList(cl.getOptionValues(\"J\"));\n+        assertNotNull(\"null values\", values);\n+        assertEquals(\"number of values\", 4, values.size());\n+        assertEquals(\"value 1\", \"source\", values.get(0));\n+        assertEquals(\"value 2\", \"1.5\", values.get(1));\n+        assertEquals(\"value 3\", \"target\", values.get(2));\n+        assertEquals(\"value 4\", \"1.5\", values.get(3));\n+        List argsleft = cl.getArgList();\n+        assertEquals(\"Should be 1 arg left\",1,argsleft.size());\n+        assertEquals(\"Expecting foo\",\"foo\",argsleft.get(0));\n+    }\n }", "timestamp": 1213377844, "metainfo": ""}