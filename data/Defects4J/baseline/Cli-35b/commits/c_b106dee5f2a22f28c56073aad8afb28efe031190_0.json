{"sha": "b106dee5f2a22f28c56073aad8afb28efe031190", "log": "Document and cleanup throws clauses.  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/TypeHandler.java\n+++ b/src/main/java/org/apache/commons/cli/TypeHandler.java\n      * @param obj the type of argument\n      * @return The instance of <code>obj</code> initialised with\n      * the value of <code>str</code>.\n+     * @throws ParseException if the value creation for the given object type failed\n      */\n     public static Object createValue(String str, Object obj) throws ParseException\n     {\n      * @param clazz the type of argument\n      * @return The instance of <code>clazz</code> initialised with\n      * the value of <code>str</code>.\n+     * @throws ParseException if the value creation for the given class failed\n      */\n     public static Object createValue(String str, Class clazz) throws ParseException\n     {\n       * Create an Object from the classname and empty constructor.\n       *\n       * @param classname the argument value\n-      * @return the initialised object, or null if it couldn't create\n-      * the Object.\n+      * @return the initialised object\n+      * @throws ParseException if the class could not be found or the object could not be created\n       */\n     public static Object createObject(String classname) throws ParseException\n     {\n      * Double, otherwise a Long.\n      *\n      * @param str the value\n-     * @return the number represented by <code>str</code>, if <code>str</code>\n-     * is not a number, null is returned.\n+     * @return the number represented by <code>str</code>\n+     * @throws ParseException if <code>str</code> is not a number\n      */\n     public static Number createNumber(String str) throws ParseException\n     {\n      * Returns the class whose name is <code>classname</code>.\n      *\n      * @param classname the class name\n-     * @return The class if it is found, otherwise return null\n+     * @return The class if it is found\n+     * @throws ParseException if the class could not be found\n      */\n     public static Class createClass(String classname) throws ParseException\n     {\n      * otherwise return null.\n      * @throws UnsupportedOperationException always\n      */\n-    public static Date createDate(String str) throws ParseException\n+    public static Date createDate(String str)\n     {\n         throw new UnsupportedOperationException(\"Not yet implemented\");\n     }\n      * Returns the URL represented by <code>str</code>.\n      *\n      * @param str the URL string\n-     * @return The URL is <code>str</code> is well-formed, otherwise\n-     * return null.\n+     * @return The URL in <code>str</code> is well-formed\n+     * @throws ParseException if the URL in <code>str</code> is not well-formed\n      */\n     public static URL createURL(String str) throws ParseException\n     {\n      * @param str the File location\n      * @return The file represented by <code>str</code>.\n      */\n-    public static File createFile(String str) throws ParseException\n+    public static File createFile(String str)\n     {\n         return new File(str);\n     }\n      * @return The File[] represented by <code>str</code>.\n      * @throws UnsupportedOperationException always\n      */\n-    public static File[] createFiles(String str) throws ParseException\n+    public static File[] createFiles(String str)\n     {\n         // to implement/port:\n         //        return FileW.findFiles(str);", "timestamp": 1359476320, "metainfo": ""}