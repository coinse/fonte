{"sha": "97ddfd9dc79cc0fd5044f754f5e74818387567c3", "log": "Removed unnecessary final modifiers  ", "commit": "\n--- a/src/main/java/org/apache/commons/cli/HelpFormatter.java\n+++ b/src/main/java/org/apache/commons/cli/HelpFormatter.java\n         StringBuffer buff = new StringBuffer(getSyntaxPrefix()).append(app).append(\" \");\n \n         // create a list for processed option groups\n-        final Collection<OptionGroup> processedGroups = new ArrayList<OptionGroup>();\n+        Collection<OptionGroup> processedGroups = new ArrayList<OptionGroup>();\n \n         List<Option> optList = new ArrayList<Option>(options.getOptions());\n         if (getOptionComparator() != null)\n      * @param group the group to append\n      * @see #appendOption(StringBuffer,Option,boolean)\n      */\n-    private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)\n+    private void appendOptionGroup(StringBuffer buff, OptionGroup group)\n     {\n         if (!group.isRequired())\n         {\n      * @param option the Option to append\n      * @param required whether the Option is required or not\n      */\n-    private void appendOption(final StringBuffer buff, final Option option, final boolean required)\n+    private void appendOption(StringBuffer buff, Option option, boolean required)\n     {\n         if (!required)\n         {\n--- a/src/main/java/org/apache/commons/cli/Parser.java\n+++ b/src/main/java/org/apache/commons/cli/Parser.java\n     /** list of required options strings */\n     private List requiredOptions;\n \n-    protected void setOptions(final Options options)\n+    protected void setOptions(Options options)\n     {\n         this.options = options;\n         this.requiredOptions = new ArrayList(options.getRequiredOptions());", "timestamp": 1323945001, "metainfo": ""}