{"sha": "ce34196827e6ac834b4c566e1e6fbe863c8e8d1c", "log": "Fixing bug reported byu Markus Rogg in #SANDBOX-153. Whitespace was being treated specially when it was not the delimiter. Unit test and patch applied.   ", "commit": "\n--- a/src/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/java/org/apache/commons/csv/CSVParser.java\n    * @return true if the given char is a whitespace character\n    */\n   private boolean isWhitespace(int c) {\n-    return Character.isWhitespace((char) c);\n+    return Character.isWhitespace((char) c) && (c != strategy.getDelimiter());\n   }\n   \n   /**\n--- a/src/test/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/org/apache/commons/csv/CSVParserTest.java\n         }\n       }\n     }\n+\n+    // From SANDBOX-153\n+     public void testDelimiterIsWhitespace() throws IOException {\n+         String code = \"one\\ttwo\\t\\tfour \\t five\\t six\";\n+         TestCSVParser parser = new TestCSVParser(new StringReader(code));\n+         parser.setStrategy(CSVStrategy.TDF_STRATEGY);\n+         System.out.println(\"---------\\n\" + code + \"\\n-------------\");\n+         assertEquals(CSVParser.TT_TOKEN + \";one;\", parser.testNextToken());\n+         assertEquals(CSVParser.TT_TOKEN + \";two;\", parser.testNextToken());\n+         assertEquals(CSVParser.TT_TOKEN + \";;\", parser.testNextToken());\n+         assertEquals(CSVParser.TT_TOKEN + \";four;\", parser.testNextToken());\n+         assertEquals(CSVParser.TT_TOKEN + \";five;\", parser.testNextToken());\n+         assertEquals(CSVParser.TT_EOF + \";six;\", parser.testNextToken());\n+     }\n }", "timestamp": 1154415008, "metainfo": ""}