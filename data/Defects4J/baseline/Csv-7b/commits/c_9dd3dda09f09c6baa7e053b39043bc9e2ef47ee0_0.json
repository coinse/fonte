{"sha": "9dd3dda09f09c6baa7e053b39043bc9e2ef47ee0", "log": "Removed the package private method CSVParser.nextToken()  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n     }\n \n     /**\n-     * Parses from the current point in the stream til * the end of the current line.\n+     * Parses from the current point in the stream til the end of the current line.\n      *\n      * @return array of values til end of line ('null' when end of file has been reached)\n      * @throws IOException on parse error or input read-failure\n     // ======================================================\n     //  the lexer(s)\n     // ======================================================\n-\n-    /**\n-     * Convenience method for <code>nextToken(null)</code>.\n-     */\n-    Token nextToken() throws IOException {\n-        return nextToken(new Token());\n-    }\n \n     /**\n      * Returns the next token.\n      */\n     private boolean isEndOfLine(int c) throws IOException {\n         // check if we have \\r\\n...\n-        if (c == '\\r') {\n-            if (in.lookAhead() == '\\n') {\n-                // note: does not change c outside of this method !!\n-                c = in.read();\n-            }\n+        if (c == '\\r' && in.lookAhead() == '\\n') {\n+            // note: does not change c outside of this method !!\n+            c = in.read();\n         }\n         return (c == '\\n' || c == '\\r');\n     }\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n          * type and content.\n          *\n          * @return String representation of token type and content\n-         * @throws IOException like {@link CSVParser#nextToken()}\n+         * @throws IOException like {@link CSVParser#nextToken(Token)}\n          */\n         public String testNextToken() throws IOException {\n-            Token t = super.nextToken();\n+            Token t = super.nextToken(new Token());\n             return t.type.name() + \";\" + t.content + \";\";\n         }\n     }", "timestamp": 1331032984, "metainfo": ""}