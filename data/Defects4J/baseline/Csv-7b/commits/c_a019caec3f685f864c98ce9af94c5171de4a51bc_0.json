{"sha": "a019caec3f685f864c98ce9af94c5171de4a51bc", "log": "Simplify assertions, and provide details if the strings are not equal  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/ExtendedBufferedReaderTest.java\n+++ b/src/test/java/org/apache/commons/csv/ExtendedBufferedReaderTest.java\n         assertTrue(br.readLine() == null);\n \n         br = getBufferedReader(\"\\n\");\n-        assertTrue(br.readLine().equals(\"\"));\n+        assertEquals(\"\",br.readLine());\n         assertTrue(br.readLine() == null);\n \n         br = getBufferedReader(\"foo\\n\\nhello\");\n         assertEquals(0, br.getLineNumber());\n-        assertTrue(br.readLine().equals(\"foo\"));\n+        assertEquals(\"foo\",br.readLine());\n         assertEquals(1, br.getLineNumber());\n-        assertTrue(br.readLine().equals(\"\"));\n+        assertEquals(\"\",br.readLine());\n         assertEquals(2, br.getLineNumber());\n-        assertTrue(br.readLine().equals(\"hello\"));\n+        assertEquals(\"hello\",br.readLine());\n         assertEquals(3, br.getLineNumber());\n         assertTrue(br.readLine() == null);\n         assertEquals(3, br.getLineNumber());\n         br = getBufferedReader(\"foo\\n\\nhello\");\n         assertEquals('f', br.read());\n         assertEquals('o', br.lookAhead());\n-        assertTrue(br.readLine().equals(\"oo\"));\n+        assertEquals(\"oo\",br.readLine());\n         assertEquals(1, br.getLineNumber());\n         assertEquals('\\n', br.lookAhead());\n-        assertTrue(br.readLine().equals(\"\"));\n+        assertEquals(\"\",br.readLine());\n         assertEquals(2, br.getLineNumber());\n         assertEquals('h', br.lookAhead());\n-        assertTrue(br.readLine().equals(\"hello\"));\n+        assertEquals(\"hello\",br.readLine());\n         assertTrue(br.readLine() == null);\n         assertEquals(3, br.getLineNumber());\n \n \n         br = getBufferedReader(\"foo\\rbaar\\r\\nfoo\");\n-        assertTrue(br.readLine().equals(\"foo\"));\n+        assertEquals(\"foo\",br.readLine());\n         assertEquals('b', br.lookAhead());\n-        assertTrue(br.readLine().equals(\"baar\"));\n+        assertEquals(\"baar\",br.readLine());\n         assertEquals('f', br.lookAhead());\n-        assertTrue(br.readLine().equals(\"foo\"));\n+        assertEquals(\"foo\",br.readLine());\n         assertTrue(br.readLine() == null);\n     }\n ", "timestamp": 1332005798, "metainfo": ""}