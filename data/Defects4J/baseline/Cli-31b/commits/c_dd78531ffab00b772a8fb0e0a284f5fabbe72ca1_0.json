{"sha": "dd78531ffab00b772a8fb0e0a284f5fabbe72ca1", "log": "The array of permitted formats is not mutable   ", "commit": "\n--- a/src/java/org/apache/commons/cli2/validation/DateValidator.java\n+++ b/src/java/org/apache/commons/cli2/validation/DateValidator.java\n public class DateValidator implements Validator {\n \n     /** an array of permitted DateFormats */\n-    private final DateFormat[] formats;\n+    private DateFormat[] formats;\n \n     /** minimum Date allowed i.e: a valid date occurs later than this date */\n     private Date minimum;\n      *            a DateFormat which dates must conform to\n      */\n     public DateValidator(final DateFormat format) {\n-        this.formats = new DateFormat[] { format };\n+        setFormat(format);\n     }\n \n     /**\n      *            a List of DateFormats which dates must conform to\n      */\n     public DateValidator(final List formats) {\n-        this.formats =\n-            (DateFormat[])formats.toArray(new DateFormat[formats.size()]);\n+    \tsetFormats(formats);\n     }\n \n     /**\n     private boolean isDateEarlier(Date date) {\n         return minimum != null && date.getTime() < minimum.getTime();\n     }\n+    \n+    /**\n+     * Sets the date format permitted.\n+     * \n+     * @param format \n+     *              the format to use\n+     */\n+    public void setFormat(final DateFormat format) {\n+    \tformats = new DateFormat[]{format};\n+    }\n+    \n+    /**\n+     * Sets the date formats permitted.\n+     * \n+     * @param formats \n+     *               the List of DateFormats to use\n+     */\n+    public void setFormats(final List formats) {\n+    \tsetFormats((DateFormat[])formats.toArray(new DateFormat[formats.size()]));\n+    }\n+    \n+    /**\n+     * Sets the date formats permitted.\n+     * \n+     * @param formats \n+     *               the array of DateFormats to use\n+     */\n+    public void setFormats(final DateFormat[] formats) {\n+    \tthis.formats = formats;\n+    }\n+    \n+    /**\n+     * Gets the date formats permitted.\n+     *\n+     * @return the permitted formats\n+     */\n+    public DateFormat[] getFormats() {\n+    \treturn this.formats;\n+    }\n+    \n }", "timestamp": 1094136351, "metainfo": ""}