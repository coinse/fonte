{"sha": "8ee0ed532e4ddbf2746d802f9926b9e3d0116cc5", "log": "Added the missing @since tags for the classes and methods added in CLI 1.1  ", "commit": "\n--- a/src/java/org/apache/commons/cli/Option.java\n+++ b/src/java/org/apache/commons/cli/Option.java\n      * @throws IllegalArgumentException if there are any non valid\n      * Option characters in <code>opt</code>.\n      */\n-    public Option(String opt, String longOpt, boolean hasArg, \n+    public Option(String opt, String longOpt, boolean hasArg,\n                   String description)\n            throws IllegalArgumentException\n     {\n         return this.description;\n     }\n \n-   /** \n+    /**\n      * Sets the self-documenting description of this Option\n      *\n      * @param description The description of this option\n+     * @since 1.1\n      */\n     public void setDescription(String description)\n     {\n      */\n     public boolean hasArgs()\n     {\n-        return (this.numberOfArgs > 1) \n+        return (this.numberOfArgs > 1)\n                 || (this.numberOfArgs == UNLIMITED_VALUES);\n     }\n \n      * Return whether this Option has specified a value separator.\n      * \n      * @return whether this Option has specified a value separator.\n+     * @since 1.1\n      */\n     public boolean hasValueSeparator()\n     {\n--- a/src/java/org/apache/commons/cli/OptionValidator.java\n+++ b/src/java/org/apache/commons/cli/OptionValidator.java\n  * Validates an Option string.\n  *\n  * @author John Keyes ( john at integralsource.com )\n+ * @since 1.1\n  */\n public class OptionValidator {\n \n     {\n         return Character.isJavaIdentifierPart(c);\n     }\n-}\n+}\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n      *\n      * @throws ParseException if there are any problems encountered\n      * while parsing the command line tokens.\n+     *\n+     * @since 1.1\n      */\n     public CommandLine parse(Options options, String[] arguments, \n                              Properties properties)\n      *\n      * @throws ParseException if there are any problems encountered\n      * while parsing the command line tokens.\n+     *\n+     * @since 1.1\n      */\n     public CommandLine parse(Options options, String[] arguments, \n                              Properties properties, boolean stopAtNonOption)", "timestamp": 1216713336, "metainfo": ""}