{"sha": "798f9e5c5c508d2edf86300b8fc00687d4a4f914", "log": "Added test to demonstrate the 27635 has been fixed  PR: 27635   ", "commit": "\n--- a/src/test/org/apache/commons/cli/BugsTest.java\n+++ b/src/test/org/apache/commons/cli/BugsTest.java\n \n import java.io.ByteArrayOutputStream;\n import java.io.PrintStream;\n+import java.io.PrintWriter;\n import java.io.StringWriter;\n \n import junit.framework.Test;\n         assertEquals( \"Two Words\", line.getOptionValue( \"m\" ) );\n     }\n \n+    public void test27635() {\n+        Option help = new Option(\"h\", \"help\", false, \"print this message\");\n+        Option version = new Option(\"v\", \"version\", false, \"print version information\");\n+        Option newRun = new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\n+        Option trackerRun = new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\n+        \n+        Option timeLimit = OptionBuilder.withLongOpt(\"limit\")\n+                                        .hasArg()\n+                                        .withValueSeparator()\n+                                        .withDescription(\"Set time limit for execution, in mintues\")\n+                                        .create(\"l\");\n+        \n+        Option age = OptionBuilder.withLongOpt(\"age\")\n+                                        .hasArg()\n+                                        .withValueSeparator()\n+                                        .withDescription(\"Age (in days) of cache item before being recomputed\")\n+                                        .create(\"a\");\n+        \n+        Option server = OptionBuilder.withLongOpt(\"server\")\n+                                        .hasArg()\n+                                        .withValueSeparator()\n+                                        .withDescription(\"The NLT server address\")\n+                                        .create(\"s\");\n+        \n+        Option numResults = OptionBuilder.withLongOpt(\"results\")\n+                                        .hasArg()\n+                                        .withValueSeparator()\n+                                        .withDescription(\"Number of results per item\")\n+                                        .create(\"r\");\n+        \n+        Option configFile = OptionBuilder.withLongOpt(\"config\")\n+                                        .hasArg()\n+                                        .withValueSeparator()\n+                                        .withDescription(\"Use the specified configuration file\")\n+                                        .create();\n+        \n+        Options mOptions = new Options();\n+        mOptions.addOption(help);\n+        mOptions.addOption(version);\n+        mOptions.addOption(newRun);\n+        mOptions.addOption(trackerRun);\n+        mOptions.addOption(timeLimit);\n+        mOptions.addOption(age);\n+        mOptions.addOption(server);\n+        mOptions.addOption(numResults);\n+        mOptions.addOption(configFile);\n+        \n+        HelpFormatter formatter = new HelpFormatter();\n+        final String EOL = System.getProperty(\"line.separator\");\n+        StringWriter out = new StringWriter();\n+        formatter.printHelp(new PrintWriter(out),80,\"commandline\",\"header\",mOptions,2,2,\"footer\",true);\n+        assertEquals(\n+                \"usage: commandline [--config <arg>] [-r <arg>] [-a <arg>] [-h] [-t] [-n] [-l\"+EOL+\n+                \"       <arg>] [-s <arg>] [-v]\"+EOL+\n+                \"header\"+EOL+\n+                \"  -a,--age <arg>      Age (in days) of cache item before being recomputed\"+EOL+\n+                \"     --config <arg>   Use the specified configuration file\"+EOL+\n+                \"  -h,--help           print this message\"+EOL+\n+                \"  -l,--limit <arg>    Set time limit for execution, in mintues\"+EOL+\n+                \"  -n,--new            Create NLT cache entries only for new items\"+EOL+\n+                \"  -r,--results <arg>  Number of results per item\"+EOL+\n+                \"  -s,--server <arg>   The NLT server address\"+EOL+\n+                \"  -t,--tracker        Create NLT cache entries only for tracker items\"+EOL+\n+                \"  -v,--version        print version information\"+EOL+\n+                \"footer\"+EOL\n+                ,out.toString());\n+    }\n+\n }", "timestamp": 1104154428, "metainfo": ""}