{"sha": "312f5b033e7e9d532dd841eec3a179bf5659c85b", "log": "Added a convenient parse() method to CSVFormat  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n \n package org.apache.commons.csv;\n \n+import java.io.Reader;\n import java.io.Serializable;\n \n /**\n         return format;\n     }\n \n+    /**\n+     * Parses the specified content.\n+     * \n+     * @param in\n+     */\n+    public Iterable<String[]> parse(Reader in) {\n+        return new CSVParser(in, this);\n+    }\n+\n     protected CSVFormat clone() {\n         try {\n             return (CSVFormat) super.clone();\n--- a/src/test/java/org/apache/commons/csv/CSVParserTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVParserTest.java\n     public void testForEach() {\n         List<String[]> records = new ArrayList<String[]>();\n         \n-        String code = \"a,b,c\\n1,2,3\\nx,y,z\";\n-        Reader in = new StringReader(code);\n-        \n-        for (String[] record : new CSVParser(in)) {\n+        Reader in = new StringReader(\"a,b,c\\n1,2,3\\nx,y,z\");\n+        \n+        for (String[] record : CSVFormat.DEFAULT.parse(in)) {\n             records.add(record);\n         }\n         \n         assertEquals(3, records.size());\n-        assertTrue(Arrays.equals(new String[] {\"a\", \"b\", \"c\"}, records.get(0)));\n+        assertTrue(Arrays.equals(new String[]{\"a\", \"b\", \"c\"}, records.get(0)));\n         assertTrue(Arrays.equals(new String[]{\"1\", \"2\", \"3\"}, records.get(1)));\n-        assertTrue(Arrays.equals(new String[] {\"x\", \"y\", \"z\"}, records.get(2)));\n+        assertTrue(Arrays.equals(new String[]{\"x\", \"y\", \"z\"}, records.get(2)));\n     }\n \n     public void testIterator() {\n-        String code = \"a,b,c\\n1,2,3\\nx,y,z\";\n-        Iterator<String[]> iterator = new CSVParser(new StringReader(code)).iterator();\n+        Reader in = new StringReader(\"a,b,c\\n1,2,3\\nx,y,z\");\n+        \n+        Iterator<String[]> iterator = CSVFormat.DEFAULT.parse(in).iterator();\n         \n         assertTrue(iterator.hasNext());\n         iterator.remove();", "timestamp": 1330949524, "metainfo": ""}