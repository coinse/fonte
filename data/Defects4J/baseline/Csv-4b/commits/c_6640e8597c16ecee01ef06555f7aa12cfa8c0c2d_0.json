{"sha": "6640e8597c16ecee01ef06555f7aa12cfa8c0c2d", "log": "Standardise on record rather than line; fix incorrect Javadoc comments  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n     private final Appendable out;\n     private final CSVFormat format;\n \n-    /** True if we just began a new line. */\n-    private boolean newLine = true;\n+    /** True if we just began a new record. */\n+    private boolean newRecord = true;\n \n     /**\n      * Creates a printer that will print values to the given stream following the CSVFormat.\n     // ======================================================\n \n     /**\n-     * Outputs the line separator.\n+     * Outputs the record separator.\n      *\n      * @throws IOException\n      *             If an I/O error occurs\n      */\n     public void println() throws IOException {\n         out.append(format.getRecordSeparator());\n-        newLine = true;\n+        newRecord = true;\n     }\n \n     /**\n         if (!format.isCommentingEnabled()) {\n             return;\n         }\n-        if (!newLine) {\n+        if (!newRecord) {\n             println();\n         }\n         out.append(format.getCommentStart().charValue());\n     }\n \n     void printDelimiter() throws IOException {\n-        if (newLine) {\n-            newLine = false;\n+        if (newRecord) {\n+            newRecord = false;\n         } else {\n             out.append(format.getDelimiter());\n         }\n      */\n     void printAndQuote(final Object object, final CharSequence value,\n             final int offset, final int len) throws IOException {\n-        final boolean first = newLine; // is this the first value on this line?\n+        final boolean first = newRecord; // is this the first value on this line?\n         boolean quote = false;\n         int start = offset;\n         int pos = offset;", "timestamp": 1366194717, "metainfo": ""}