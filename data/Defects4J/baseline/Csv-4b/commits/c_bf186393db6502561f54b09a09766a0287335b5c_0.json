{"sha": "bf186393db6502561f54b09a09766a0287335b5c", "log": "trivial cleanup of javadoc errors  ", "commit": "\n--- a/src/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/java/org/apache/commons/csv/CSVParser.java\n   // ======================================================\n   \n   /**\n-   * Default strategy for the parser follows the default CSV Strategy.\n+   * Default strategy for the parser follows the default {@link CSVStrategy}.\n    * \n    * @param input an InputStream containing \"csv-formatted\" stream\n-   * @see #setStrategy()\n    * @deprecated use {@link #CSVParser(Reader)}.\n    */\n   public CSVParser(InputStream input) {\n    * CSV parser using the default {@link CSVStrategy}.\n    * \n    * @param input a Reader containing \"csv-formatted\" input\n-   * @see #setStrategy()\n    */\n   public CSVParser(Reader input) {\n     // note: must match default-CSV-strategy !!\n   /**\n    * Customized value delimiter parser.\n    * \n-   * The parser follows the default CSV strategy as defined in \n-   * {@link #setStrategy()} except for the delimiter setting.\n+   * The parser follows the default {@link CSVStrategy}\n+   * except for the delimiter setting.\n    * \n    * @param input a Reader based on \"csv-formatted\" input\n    * @param delimiter a Char used for value separation\n--- a/src/java/org/apache/commons/csv/CSVUtils.java\n+++ b/src/java/org/apache/commons/csv/CSVUtils.java\n   // ======================================================\n   \n   /**\n-   * Parses the given String according to the default CSV strategy.\n+   * Parses the given String according to the default {@link CSVStrategy}.\n    * \n    * @param s CSV String to be parsed.\n    * @return parsed String matrix (which is never null)\n    * @throws IOException in case of error\n-   * @see #setStrategy()\n    */\n   public static String[][] parse(String s) throws IOException {\n     if (s == null) {\n   }\n   \n   /**\n-   * Parses the first line only according to the default CSV strategy.\n+   * Parses the first line only according to the default {@link CSVStrategy}.\n    * \n    * Parsing empty string will be handled as valid records containing zero\n    * elements, so the following property holds: parseLine(\"\").length == 0.\n    * @param s CSV String to be parsed.\n    * @return parsed String vector (which is never null)\n    * @throws IOException in case of error\n-   * @see #setStrategy()\n    */\n   public static String[] parseLine(String s) throws IOException {\n     if (s == null) {", "timestamp": 1170189580, "metainfo": ""}