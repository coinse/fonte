{"sha": "22af43218a497e6205d921c336db71e9e6959170", "log": "Don't detect comments except at start of a line  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVLexerTest.java\n     public void testNextToken2() throws IOException {\n         final String code = \n                 \"1,2,3,\\n\"+\n-                \"a,b x,c\\n\"+\n+                \"a,b x,c#no-comment\\n\"+\n                 \"#foo\\n\"+\n                 \"\\n\"+\n-                \"d,e,\\n\"+\n+                \"d,e,#no-comment\\n\"+\n                 \"\\n\";\n         CSVFormat format = CSVFormat.DEFAULT.withCommentStart('#');\n         \n         assertTokenEquals(EORECORD, \"\", parser.nextToken(new Token()));\n         assertTokenEquals(TOKEN, \"a\", parser.nextToken(new Token()));\n         assertTokenEquals(TOKEN, \"b x\", parser.nextToken(new Token()));\n-        assertTokenEquals(EORECORD, \"c\", parser.nextToken(new Token()));\n+        assertTokenEquals(EORECORD, \"c#no-comment\", parser.nextToken(new Token()));\n         assertTokenEquals(COMMENT, \"\", parser.nextToken(new Token()));\n         assertTokenEquals(EORECORD, \"\", parser.nextToken(new Token()));\n         assertTokenEquals(TOKEN, \"d\", parser.nextToken(new Token()));\n         assertTokenEquals(TOKEN, \"e\", parser.nextToken(new Token()));\n-        assertTokenEquals(EORECORD, \"\", parser.nextToken(new Token()));\n+        assertTokenEquals(EORECORD, \"#no-comment\", parser.nextToken(new Token()));\n         assertTokenEquals(EOF, \"\", parser.nextToken(new Token()));\n         assertTokenEquals(EOF, \"\", parser.nextToken(new Token()));\n ", "timestamp": 1332948680, "metainfo": ""}