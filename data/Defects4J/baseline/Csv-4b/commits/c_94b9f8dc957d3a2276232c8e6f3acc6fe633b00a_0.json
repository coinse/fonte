{"sha": "94b9f8dc957d3a2276232c8e6f3acc6fe633b00a", "log": "Minor performance improvement (~2%)  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n         c = in.readAgain();\n \n         //  empty line detection: eol AND (last char was EOL or beginning)\n-        while (format.isEmptyLinesIgnored() && eol\n-                && (lastChar == '\\n'\n-                || lastChar == '\\r'\n-                || lastChar == ExtendedBufferedReader.UNDEFINED)\n-                && !isEndOfFile(lastChar)) {\n-            // go on char ahead ...\n-            lastChar = c;\n-            c = in.read();\n-            eol = isEndOfLine(c);\n-            c = in.readAgain();\n-            // reached end of file without any content (empty line at the end)\n-            if (isEndOfFile(c)) {\n-                tkn.type = EOF;\n-                return tkn;\n+        if (format.isEmptyLinesIgnored()) {\n+            while (eol\n+                    && (lastChar == '\\n' || lastChar == '\\r' || lastChar == ExtendedBufferedReader.UNDEFINED)\n+                    && !isEndOfFile(lastChar)) {\n+                // go on char ahead ...\n+                lastChar = c;\n+                c = in.read();\n+                eol = isEndOfLine(c);\n+                c = in.readAgain();\n+                // reached end of file without any content (empty line at the end)\n+                if (isEndOfFile(c)) {\n+                    tkn.type = EOF;\n+                    return tkn;\n+                }\n             }\n         }\n \n         //  important: make sure a new char gets consumed in each iteration\n         while (!tkn.isReady && tkn.type != EOF) {\n             // ignore whitespaces at beginning of a token\n-            while (format.isLeadingSpacesIgnored() && isWhitespace(c) && !eol) {\n-                wsBuf.append((char) c);\n-                c = in.read();\n-                eol = isEndOfLine(c);\n-            }\n+            if (format.isLeadingSpacesIgnored()) {\n+                while (isWhitespace(c) && !eol) {\n+                    wsBuf.append((char) c);\n+                    c = in.read();\n+                    eol = isEndOfLine(c);\n+                }\n+            }\n+            \n             // ok, start of token reached: comment, encapsulated, or token\n             if (c == format.getCommentStart()) {\n                 // ignore everything till end of line and continue (incr linecount)", "timestamp": 1331508217, "metainfo": ""}