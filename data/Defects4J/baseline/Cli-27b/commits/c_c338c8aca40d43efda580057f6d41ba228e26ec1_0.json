{"sha": "c338c8aca40d43efda580057f6d41ba228e26ec1", "log": "CLI-144: validate() is now called only once for an option that belongs to a group. Thanks to David dot Biesack at sas dot com for the unit test and dioktos at gmail dot com for a proposed fix.  ", "commit": "\n--- a/src/java/org/apache/commons/cli2/option/GroupImpl.java\n+++ b/src/java/org/apache/commons/cli2/option/GroupImpl.java\n         for (final Iterator i = options.iterator(); i.hasNext();) {\n             final Option option = (Option) i.next();\n \n-            // if the child option is required then validate it\n-            if (option.isRequired()) {\n-                option.validate(commandLine);\n-            }\n-\n-            if (option instanceof Group) {\n-                option.validate(commandLine);\n-            }\n+            // needs validation?\n+            boolean validate = option.isRequired() || option instanceof Group;\n \n             // if the child option is present then validate it\n             if (commandLine.hasOption(option)) {\n \n                     break;\n                 }\n-\n+                validate = true;\n+            }\n+\n+            if (validate) {\n                 option.validate(commandLine);\n             }\n         }\n--- /dev/null\n+++ b/src/test/org/apache/commons/cli2/bug/BugCLI144Test.java\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.cli2.bug;\n+\n+import java.io.File;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.commons.cli2.CommandLine;\n+import org.apache.commons.cli2.Group;\n+import org.apache.commons.cli2.builder.ArgumentBuilder;\n+import org.apache.commons.cli2.builder.DefaultOptionBuilder;\n+import org.apache.commons.cli2.builder.GroupBuilder;\n+import org.apache.commons.cli2.commandline.Parser;\n+import org.apache.commons.cli2.option.DefaultOption;\n+import org.apache.commons.cli2.validation.FileValidator;\n+\n+/**\n+ * Test case for http://issues.apache.org/jira/browse/CLI-144 CLI 2 throws\n+ *\n+ * <pre>\n+ * Exception in thread &quot;main&quot; java.lang.ClassCastException: java.io.File cannot be cast to java.lang.String\n+ * </pre>\n+ *\n+ * when there should be no such exception\n+ *\n+ * @author David Biesack\n+ */\n+public class BugCLI144Test extends TestCase {\n+\tpublic void testFileValidator() {\n+\t\tfinal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();\n+        final ArgumentBuilder abuilder = new ArgumentBuilder();\n+        final GroupBuilder gbuilder = new GroupBuilder();\n+        DefaultOption fileNameOption = obuilder.withShortName(\"f\")\n+                .withLongName(\"file-name\").withRequired(true).withDescription(\n+                        \"name of an existing file\").withArgument(\n+                        abuilder.withName(\"file-name\").withValidator(\n+                                FileValidator.getExistingFileInstance())\n+                                .create()).create();\n+        Group options = gbuilder.withName(\"options\").withOption(fileNameOption)\n+                .create();\n+        Parser parser = new Parser();\n+        parser.setHelpTrigger(\"--help\");\n+        parser.setGroup(options);\n+\n+        final String fileName = \"src/test/org/apache/commons/cli2/bug/BugCLI144Test.java\";\n+        CommandLine cl = parser\n+                .parseAndHelp(new String[] { \"--file-name\", fileName });\n+        assertNotNull(cl);\n+        assertEquals(\"Wrong file\", new File(fileName), cl.getValue(fileNameOption));\n+\t}\n+}", "timestamp": 1216843745, "metainfo": ""}