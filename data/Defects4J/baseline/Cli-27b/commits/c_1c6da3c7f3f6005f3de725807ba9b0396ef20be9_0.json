{"sha": "1c6da3c7f3f6005f3de725807ba9b0396ef20be9", "log": "Full test coverage for HelpFormatter.setOptionComparator()  ", "commit": "\n--- a/src/test/org/apache/commons/cli/HelpFormatterTest.java\n+++ b/src/test/org/apache/commons/cli/HelpFormatterTest.java\n \n     // This test ensures the options are properly sorted\n     // See https://issues.apache.org/jira/browse/CLI-131\n-    public void testPrintUsage() {\n+    public void testPrintUsage()\n+    {\n         Option optionA = new Option(\"a\", \"first\");\n         Option optionB = new Option(\"b\", \"second\");\n         Option optionC = new Option(\"c\", \"third\");\n     }\n \n     // uses the test for CLI-131 to implement CLI-155\n-    public void testPrintSortedUsage() {\n-        Option optionA = new Option(\"a\", \"first\");\n-        Option optionB = new Option(\"b\", \"second\");\n-        Option optionC = new Option(\"c\", \"third\");\n+    public void testPrintSortedUsage()\n+    {\n         Options opts = new Options();\n-        opts.addOption(optionA);\n-        opts.addOption(optionB);\n-        opts.addOption(optionC);\n+        opts.addOption(new Option(\"a\", \"first\"));\n+        opts.addOption(new Option(\"b\", \"second\"));\n+        opts.addOption(new Option(\"c\", \"third\"));\n+\n         HelpFormatter helpFormatter = new HelpFormatter();\n-        helpFormatter.setOptionComparator(\n-            new Comparator() { \n-                public int compare(Object o1, Object o2) {\n-                    // reverses the fuctionality of the default comparator\n-                    Option opt1 = (Option)o1;\n-                    Option opt2 = (Option)o2;\n-                    return opt2.getKey().compareToIgnoreCase(opt1.getKey());\n-                }\n-            } );\n-        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\n-        PrintWriter printWriter = new PrintWriter(bytesOut);\n-        helpFormatter.printUsage(printWriter, 80, \"app\", opts);\n-        printWriter.close();\n-        assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, bytesOut.toString());\n+        helpFormatter.setOptionComparator(new Comparator()\n+        {\n+            public int compare(Object o1, Object o2)\n+            {\n+                // reverses the fuctionality of the default comparator\n+                Option opt1 = (Option) o1;\n+                Option opt2 = (Option) o2;\n+                return opt2.getKey().compareToIgnoreCase(opt1.getKey());\n+            }\n+        });\n+\n+        StringWriter out = new StringWriter();\n+        helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\n+\n+        assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\n+    }\n+\n+    public void testPrintSortedUsageWithNullComparator()\n+    {\n+        Options opts = new Options();\n+        opts.addOption(new Option(\"a\", \"first\"));\n+        opts.addOption(new Option(\"b\", \"second\"));\n+        opts.addOption(new Option(\"c\", \"third\"));\n+\n+        HelpFormatter helpFormatter = new HelpFormatter();\n+        helpFormatter.setOptionComparator(null);\n+\n+        StringWriter out = new StringWriter();\n+        helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\n+\n+        assertEquals(\"usage: app [-a] [-b] [-c]\" + EOL, out.toString());\n     }\n \n     public void testPrintOptionGroupUsage()", "timestamp": 1212144789, "metainfo": ""}