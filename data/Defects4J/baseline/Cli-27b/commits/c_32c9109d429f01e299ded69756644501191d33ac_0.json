{"sha": "32c9109d429f01e299ded69756644501191d33ac", "log": "Improved the message of AmbiguousOptionException  ", "commit": "\n--- a/src/java/org/apache/commons/cli/AmbiguousOptionException.java\n+++ b/src/java/org/apache/commons/cli/AmbiguousOptionException.java\n package org.apache.commons.cli;\n \n import java.util.Collection;\n+import java.util.Iterator;\n \n /**\n  * Exception thrown when an option can't be identified from a partial name.\n      */\n     public AmbiguousOptionException(String option, Collection matchingOptions)\n     {\n-        super(\"Ambiguous option: \" + option, option);\n+        super(createMessage(option, matchingOptions), option);\n         this.matchingOptions = matchingOptions;\n     }\n \n     {\n         return matchingOptions;\n     }\n+\n+    /**\n+     * Build the exception message from the specified list of options.\n+     * \n+     * @param option\n+     * @param matchingOptions\n+     * @return\n+     */\n+    private static String createMessage(String option, Collection matchingOptions)\n+    {\n+        StringBuffer buff = new StringBuffer(\"Ambiguous option: '\");\n+        buff.append(option);\n+        buff.append(\"'  (could be: \");\n+\n+        Iterator it = matchingOptions.iterator();\n+        while (it.hasNext())\n+        {\n+            buff.append(\"'\");\n+            buff.append(it.next());\n+            buff.append(\"'\");\n+            if (it.hasNext())\n+            {\n+                buff.append(\", \");\n+            }\n+        }\n+        buff.append(\")\");\n+\n+        return buff.toString();\n+    }\n }", "timestamp": 1243508817, "metainfo": ""}