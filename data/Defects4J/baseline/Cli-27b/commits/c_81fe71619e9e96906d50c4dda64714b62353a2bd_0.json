{"sha": "81fe71619e9e96906d50c4dda64714b62353a2bd", "log": "MissingArgumentException now references the option with the missing argument  ", "commit": "\n--- a/src/java/org/apache/commons/cli/MissingArgumentException.java\n+++ b/src/java/org/apache/commons/cli/MissingArgumentException.java\n  */\n public class MissingArgumentException extends ParseException\n {\n+    /** The option requiring additional arguments */\n+    private Option option;\n+\n     /**\n      * Construct a new <code>MissingArgumentException</code>\n      * with the specified detail message.\n     {\n         super(message);\n     }\n+\n+    /**\n+     * Construct a new <code>MissingArgumentException</code>\n+     * with the specified detail message.\n+     *\n+     * @param option the option requiring an argument\n+     * @since 1.2\n+     */\n+    public MissingArgumentException(Option option)\n+    {\n+        this(\"Missing argument for option: \" + option.getKey());\n+        this.option = option;\n+    }\n+\n+    /**\n+     * Return the option requiring an argument that wasn't provided\n+     * on the command line.\n+     *\n+     * @since 1.2\n+     */\n+    public Option getOption()\n+    {\n+        return option;\n+    }\n }\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n \n         if ((opt.getValues() == null) && !opt.hasOptionalArg())\n         {\n-            throw new MissingArgumentException(\"Missing argument for option:\"\n-                                               + opt.getKey());\n+            throw new MissingArgumentException(opt);\n         }\n     }\n \n--- a/src/test/org/apache/commons/cli/GnuParserTest.java\n+++ b/src/test/org/apache/commons/cli/GnuParserTest.java\n         catch (MissingArgumentException e)\n         {\n             caught = true;\n+            assertEquals(\"option missing an argument\", \"b\", e.getOption().getOpt());\n         }\n \n         assertTrue( \"Confirm MissingArgumentException caught\", caught );\n--- a/src/test/org/apache/commons/cli/PosixParserTest.java\n+++ b/src/test/org/apache/commons/cli/PosixParserTest.java\n         catch (MissingArgumentException e)\n         {\n             caught = true;\n+            assertEquals(\"option missing an argument\", \"b\", e.getOption().getOpt());\n         }\n \n         assertTrue( \"Confirm MissingArgumentException caught\", caught );\n--- a/src/test/org/apache/commons/cli/bug/BugCLI71Test.java\n+++ b/src/test/org/apache/commons/cli/bug/BugCLI71Test.java\n         try {\n             CommandLine line = parser.parse( options, args);\n             fail(\"MissingArgumentException expected\");\n-        } catch(MissingArgumentException mae) {\n-            // expected\n+        } catch(MissingArgumentException e) {\n+            assertEquals(\"option missing an argument\", \"k\", e.getOption().getOpt());\n         }\n     }\n ", "timestamp": 1216718264, "metainfo": ""}