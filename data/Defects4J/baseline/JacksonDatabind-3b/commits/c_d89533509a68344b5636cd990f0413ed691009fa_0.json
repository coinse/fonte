{"sha": "d89533509a68344b5636cd990f0413ed691009fa", "log": "Merge pull request #90 from christophercurrie/delegate  Additional methods on StdDelegatingSerializer", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java\n package com.fasterxml.jackson.databind.ser.std;\n-\n-import java.io.IOException;\n-import java.lang.reflect.Type;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.BeanProperty;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;\n import com.fasterxml.jackson.databind.jsonschema.SchemaAware;\n import com.fasterxml.jackson.databind.jsontype.TypeSerializer;\n-import com.fasterxml.jackson.databind.ser.*;\n+import com.fasterxml.jackson.databind.ser.ContextualSerializer;\n import com.fasterxml.jackson.databind.type.TypeFactory;\n import com.fasterxml.jackson.databind.util.Converter;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n \n /**\n  * Serializer implementation where given Java type is first converted\n         Object delegateValue = _converter.convert(value);\n         _delegateSerializer.serializeWithType(delegateValue, jgen, provider, typeSer);\n     }\n+\n+    @Override\n+    public boolean isEmpty(Object value)\n+    {\n+        Object delegateValue = _converter.convert(value);\n+        return _delegateSerializer.isEmpty(delegateValue);\n+    }\n     \n     /*\n     /**********************************************************\n     /**********************************************************\n      */\n \n+    protected Converter<Object, ?> getConverter() {\n+        return _converter;\n+    }\n+\n     @Override\n     public JsonSerializer<?> getDelegatee() {\n         return _delegateSerializer;", "timestamp": 1349648611, "metainfo": ""}