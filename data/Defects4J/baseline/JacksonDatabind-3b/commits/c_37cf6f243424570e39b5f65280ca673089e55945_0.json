{"sha": "37cf6f243424570e39b5f65280ca673089e55945", "log": "Fix #346", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java\n     {\n         switch (jp.getCurrentToken()) {\n         case START_OBJECT:\n+        case END_OBJECT: // for empty JSON Objects we may point to this\n             return deserializeObject(jp, ctxt, nodeFactory);\n \n         case START_ARRAY:\n--- a/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestObjectNode.java\n import java.math.BigDecimal;\n import java.util.*;\n \n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n \n /**\n  * Additional tests for {@link ObjectNode} container class.\n public class TestObjectNode\n     extends BaseMapTest\n {\n-    private final ObjectMapper MAPPER = new ObjectMapper();\n-\n+    @JsonDeserialize(as = DataImpl.class)\n+    public interface Data {\n+    }\n+\n+    public static class DataImpl implements Data\n+    {\n+        protected JsonNode root;\n+\n+        @JsonCreator\n+        public DataImpl(JsonNode n) {\n+            root = n;\n+        }\n+        \n+        @JsonValue\n+        public JsonNode value() { return root; }\n+        \n+        /*\n+        public Wrapper(ObjectNode n) { root = n; }\n+        \n+        @JsonValue\n+        public ObjectNode value() { return root; }\n+        */\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+    \n+    private final ObjectMapper MAPPER = objectMapper();\n+\n+    // for [Issue#346]\n+    public void testEmptyNodeAsValue() throws Exception\n+    {\n+        Data w = MAPPER.readValue(\"{}\", Data.class);\n+        assertNotNull(w);\n+    }\n+    \n     public void testBasics()\n     {\n         ObjectNode n = new ObjectNode(JsonNodeFactory.instance);", "timestamp": 1384572706, "metainfo": ""}