{"sha": "0cc64f2ebd94ad5e6f803d51984e861dac0dbe7b", "log": "Add a unit test for #327, to indicate problem to solve", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n package com.fasterxml.jackson.databind.introspect;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.BaseMapTest;\n import com.fasterxml.jackson.databind.ObjectMapper;\n     /* Test methods\n     /**********************************************************\n      */\n+\n+    private final ObjectMapper MAPPER = objectMapper();\n     \n     // for [JACKSON-694]\n     public void testFailWithDupProps() throws Exception\n     {\n         BeanWithConflict bean = new BeanWithConflict();\n-        ObjectMapper mapper = new ObjectMapper();\n         try {\n-            String json = mapper.writeValueAsString(bean);\n+            String json = MAPPER.writeValueAsString(bean);\n             fail(\"Should have failed due to conflicting accessor definitions; got JSON = \"+json);\n         } catch (JsonProcessingException e) {\n             verifyException(e, \"Conflicting getter definitions\");\n     public void testRegularAndIsGetter() throws Exception\n     {\n         // first, serialize without probs:\n-        final ObjectMapper MAPPER = new ObjectMapper();\n         assertEquals(\"{\\\"value\\\":4}\", MAPPER.writeValueAsString(new Getters1A()));\n         assertEquals(\"{\\\"value\\\":4}\", MAPPER.writeValueAsString(new Getters1B()));\n \n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestPropertyConflicts.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+import com.fasterxml.jackson.databind.BaseMapTest;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+/**\n+ * Unit tests verifying handling of \"virtual\" conflict; case where\n+ * there is no actual problem, but Jackson takes too conservative view\n+ * on this and throws an exception.\n+ */\n+public class TestPropertyConflicts extends BaseMapTest\n+{\n+    /* We should only report an exception for cases where there is\n+     * real ambiguity as to how to rename things; but not when everything\n+     * has been explicitly defined\n+     */\n+    // [Issue#327]\n+    @JsonPropertyOrder({ \"prop1\", \"prop2\" })\n+    static class BogusConflictBean\n+    {\n+        @JsonProperty(\"prop1\")\n+        public int a = 2;\n+\n+        @JsonProperty(\"prop2\")\n+        public int getA() {\n+            return 1;\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    private final ObjectMapper MAPPER = objectMapper();\n+\n+    // [Issue#327]\n+    public void testNonConflict() throws Exception\n+    {\n+        String json = MAPPER.writeValueAsString(new BogusConflictBean());\n+        assertEquals(aposToQuotes(\"{'prop1':2,'prop2':1}\"), json);\n+    }\n+}", "timestamp": 1382075333, "metainfo": ""}