{"sha": "1d29e0f496a9a646e2379afa2504814064019a61", "log": "minor cleanup for jdk serializer mapping", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java\n                 StackTraceElement.class,\n                 ByteBuffer.class\n         };\n-        for (Class<?> cls : types) {\n-            _classNames.add(cls.getName());\n-        }\n-        for (Class<?> cls : FromStringDeserializer.types()) {\n-            _classNames.add(cls.getName());\n-        }\n+        for (Class<?> cls : types) { _classNames.add(cls.getName()); }\n+        for (Class<?> cls : FromStringDeserializer.types()) { _classNames.add(cls.getName()); }\n     }\n \n     public static JsonDeserializer<?> find(Class<?> rawType, String clsName)\n     {\n-        if (!_classNames.contains(clsName)) {\n-            return null;\n+        if (_classNames.contains(clsName)) {\n+            JsonDeserializer<?> d = FromStringDeserializer.findDeserializer(rawType);\n+            if (d != null) {\n+                return d;\n+            }\n+            if (rawType == UUID.class) {\n+                return new UUIDDeserializer();\n+            }\n+            if (rawType == StackTraceElement.class) {\n+                return new StackTraceElementDeserializer();\n+            }\n+            if (rawType == AtomicBoolean.class) {\n+                // (note: AtomicInteger/Long work due to single-arg constructor. For now?\n+                return new AtomicBooleanDeserializer();\n+            }\n+            if (rawType == ByteBuffer.class) {\n+                return new ByteBufferDeserializer();\n+            }\n         }\n-        JsonDeserializer<?> d = FromStringDeserializer.findDeserializer(rawType);\n-        if (d != null) {\n-            return d;\n-        }\n-        if (rawType == UUID.class) {\n-            return new UUIDDeserializer();\n-        }\n-        if (rawType == StackTraceElement.class) {\n-            return new StackTraceElementDeserializer();\n-        }\n-        if (rawType == AtomicBoolean.class) {\n-            // (note: AtomicInteger/Long work due to single-arg constructor. For now?\n-            return new AtomicBooleanDeserializer();\n-        }\n-        if (rawType == ByteBuffer.class) {\n-            return new ByteBufferDeserializer();\n-        }\n-        // should never occur\n-        throw new IllegalArgumentException(\"Internal error: can't find deserializer for \"+clsName);\n+        return null;\n     }\n }", "timestamp": 1388899213, "metainfo": ""}