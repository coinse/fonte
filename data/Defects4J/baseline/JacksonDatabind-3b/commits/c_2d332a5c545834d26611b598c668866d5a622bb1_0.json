{"sha": "2d332a5c545834d26611b598c668866d5a622bb1", "log": "Fix [Issue#122]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n         _rootNames = new RootNameLookup();\n         _typeFactory = src._typeFactory;\n         _serializationConfig = src._serializationConfig;\n-        _serializationConfig = new SerializationConfig(src._serializationConfig, _mixInAnnotations);\n-        _deserializationConfig = new DeserializationConfig(src._deserializationConfig, _mixInAnnotations);\n+        HashMap<ClassKey,Class<?>> mixins = new HashMap<ClassKey,Class<?>>(src._mixInAnnotations);\n+        _serializationConfig = new SerializationConfig(src._serializationConfig, mixins);\n+        _deserializationConfig = new DeserializationConfig(src._deserializationConfig, mixins);\n         _serializerProvider = src._serializerProvider;\n         _deserializationContext = src._deserializationContext;\n \n--- a/src/test/java/com/fasterxml/jackson/databind/TestObjectMapper.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestObjectMapper.java\n         \n         assertNotSame(m.getFactory(), m2.getFactory());\n \n-        // ... anything else? (probably should do more tests, add as needed)\n+        // [Issue#122]: Need to ensure mix-ins are not shared\n+        assertEquals(0, m.getSerializationConfig().mixInCount());\n+        assertEquals(0, m2.getSerializationConfig().mixInCount());\n+        assertEquals(0, m.getDeserializationConfig().mixInCount());\n+        assertEquals(0, m2.getDeserializationConfig().mixInCount());\n+\n+        m.addMixInAnnotations(String.class, Integer.class);\n+        assertEquals(1, m.getSerializationConfig().mixInCount());\n+        assertEquals(0, m2.getSerializationConfig().mixInCount());\n+        assertEquals(1, m.getDeserializationConfig().mixInCount());\n+        assertEquals(0, m2.getDeserializationConfig().mixInCount());\n     }\n }", "timestamp": 1354164067, "metainfo": ""}