{"sha": "193522a6acfb5b77c63eeda1656870289966c63d", "log": "Add unit test for [JACKSON-831]", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java\n         @JsonProperty\n         public Base getBase() { return base; }\n     }\n-    \n+\n+    // [JACKSON-831]\n+    \n+    interface Pet {}\n+\n+    static class Dog implements Pet {\n+        public String name;\n+    }\n+\n+    static class House831 {\n+        private String petType;\n+\n+        @JsonTypeInfo(use = Id.NAME, include = As.EXTERNAL_PROPERTY, property = \"petType\")\n+        @JsonSubTypes({@JsonSubTypes.Type(name = \"dog\", value = Dog.class)})\n+        public Pet pet;\n+\n+        public String getPetType() {\n+            return petType;\n+        }\n+\n+        public void setPetType(String petType) {\n+            this.petType = petType;\n+        }\n+    }    \n+\n     /*\n     /**********************************************************\n     /* Unit tests, serialization\n         assertEquals(\"base prop val\", derived1.getBaseProperty());\n         assertEquals(\"derived1 prop val\", derived1.getDerived1Property());\n     }\n+\n+    // There seems to be some problems if type is also visible...\n+    public void testIssue831() throws Exception\n+    {\n+        final String JSON = \"{ \\\"petType\\\": \\\"dog\\\",\\n\"\n+                +\"\\\"pet\\\": { \\\"name\\\": \\\"Pluto\\\" }\\n}\";\n+        ObjectMapper mapper = new ObjectMapper();\n+        House831 result = mapper.readValue(JSON, House831.class);\n+        assertNotNull(result);\n+        assertNotNull(result.pet);\n+        assertSame(Dog.class, result.pet.getClass());\n+    }\n }", "timestamp": 1335978310, "metainfo": ""}