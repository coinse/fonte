{"sha": "6d2e7c261f55d43c6a9885d96fcd955eb6bb0675", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n \n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.deser.impl.FailingDeserializer;\n import com.fasterxml.jackson.databind.deser.impl.NullProvider;\n-import com.fasterxml.jackson.databind.deser.std.FailingDeserializer;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;\n--- /dev/null\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/FailingDeserializer.java\n+package com.fasterxml.jackson.databind.deser.impl;\n+\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.databind.DeserializationContext;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.deser.std.StdDeserializer;\n+\n+/**\n+ * Special bogus \"serializer\" that will throw\n+ * {@link JsonMappingException} if an attempt is made to deserialize\n+ * a value. This is used as placeholder to avoid NPEs for uninitialized\n+ * structured serializers or handlers.\n+ */\n+public class FailingDeserializer extends StdDeserializer<Object>\n+{\n+    private static final long serialVersionUID = 1L;\n+\n+    protected final String _message;\n+\n+    public FailingDeserializer(String m) {\n+        super(Object.class);\n+        _message = m;\n+    }\n+    \n+    @Override\n+    public Object deserialize(JsonParser jp, DeserializationContext ctxt)\n+        throws JsonMappingException\n+    {\n+        throw ctxt.mappingException(_message);\n+    }\n+}", "timestamp": 1381380279, "metainfo": ""}