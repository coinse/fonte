{"sha": "580b85fc40feb51a3381f9c56d6d203808e79cea", "log": "Add MappingIterator.getCurrentLocation()", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/MappingIterator.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/MappingIterator.java\n     public FormatSchema getParserSchema() {\n     \treturn _parser.getSchema();\n     }\n+\n+    /**\n+     * Convenience method, functionally equivalent to:\n+     *<code>\n+     *   iterator.getParser().getCurrentLocation()\n+     *</code>\n+     * \n+     * @return Location of the input stream of the underlying parser\n+     * \n+     * @since 2.2.1\n+     */\n+    public JsonLocation getCurrentLocation() {\n+        return _parser.getCurrentLocation();\n+    }\n }\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedParameter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedParameter.java\n         throw new UnsupportedOperationException(\"Cannot call getValue() on constructor parameter of \"\n                 +getDeclaringClass().getName());\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Extended API\n--- a/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/TestReadValues.java\n         final String JSON = \"{\\\"a\\\":3}{\\\"a\\\":27}  \";\n         Iterator<Bean> it = MAPPER.reader(Bean.class).readValues(JSON);\n \n+        assertNotNull(((MappingIterator<?>) it).getCurrentLocation());\n         assertTrue(it.hasNext());\n         Bean b = it.next();\n         assertEquals(3, b.a);\n         final String JSON = \"{\\\"a\\\":3}{\\\"a\\\":27}  \";\n         Iterator<Map<?,?>> it = MAPPER.reader(Map.class).readValues(JSON);\n \n+        assertNotNull(((MappingIterator<?>) it).getCurrentLocation());\n         assertTrue(it.hasNext());\n         Map<?,?> map = it.next();\n         assertEquals(1, map.size());\n         assertEquals(Integer.valueOf(3), map.get(\"a\"));\n         assertTrue(it.hasNext());\n+        assertNotNull(((MappingIterator<?>) it).getCurrentLocation());\n         map = it.next();\n         assertEquals(1, map.size());\n         assertEquals(Integer.valueOf(27), map.get(\"a\"));", "timestamp": 1367469429, "metainfo": ""}