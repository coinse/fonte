{"sha": "bbeebd3e3c67ba9c2d62627d5ccdca8f679eb2c8", "log": "Mark 'path()' method as overridden in JsonNode (from TreeNode)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/JsonNode.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JsonNode.java\n      */\n     @Override\n     public JsonNode get(String fieldName) { return null; }\n+    /**\n+     * This method is similar to {@link #get(String)}, except\n+     * that instead of returning null if no such value exists (due\n+     * to this node not being an object, or object not having value\n+     * for the specified field),\n+     * a \"missing node\" (node that returns true for\n+     * {@link #isMissingNode}) will be returned. This allows for\n+     * convenient and safe chained access via path calls.\n+     */\n+\n+    @Override\n+    public abstract JsonNode path(String fieldName);\n+\n+    /**\n+     * This method is similar to {@link #get(int)}, except\n+     * that instead of returning null if no such element exists (due\n+     * to index being out of range, or this node not being an array),\n+     * a \"missing node\" (node that returns true for\n+     * {@link #isMissingNode}) will be returned. This allows for\n+     * convenient and safe chained access via path calls.\n+     */\n+    @Override\n+    public abstract JsonNode path(int index);\n \n     @Override\n     public Iterator<String> fieldNames() {\n      */\n \n     /**\n-     * This method is similar to {@link #get(String)}, except\n-     * that instead of returning null if no such value exists (due\n-     * to this node not being an object, or object not having value\n-     * for the specified field),\n-     * a \"missing node\" (node that returns true for\n-     * {@link #isMissingNode}) will be returned. This allows for\n-     * convenient and safe chained access via path calls.\n-     */\n-    public abstract JsonNode path(String fieldName);\n-\n-    /**\n-     * This method is similar to {@link #get(int)}, except\n-     * that instead of returning null if no such element exists (due\n-     * to index being out of range, or this node not being an array),\n-     * a \"missing node\" (node that returns true for\n-     * {@link #isMissingNode}) will be returned. This allows for\n-     * convenient and safe chained access via path calls.\n-     */\n-    public abstract JsonNode path(int index);\n-\n-    /**\n      * Method that can be called on Object nodes, to access a property\n      * that has Object value; or if no such property exists, to create,\n      * add and return such Object node.", "timestamp": 1364341236, "metainfo": ""}