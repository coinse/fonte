{"sha": "5bd18093a249a0a506e280bda6df90bc19035436", "log": "Minor improvement to error handling", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n         return JsonMappingException.from(_parser, \"Could not resolve type id '\"+id+\"' into a subtype of \"+type);\n     }\n \n+    public JsonMappingException endOfInputException(Class<?> instClass)\n+    {\n+        return JsonMappingException.from(_parser, \"Unexpected end-of-input when trying to deserialize a \"\n+                +instClass.getName());\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Overridable internal methods\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n                 return deserializeWithObjectId(jp, ctxt);\n             }\n             return deserializeFromObject(jp, ctxt);\n+        }\n+        if (t == null) {\n+            return _missingToken(jp, ctxt);\n         }\n         // and then others, generally requiring use of @JsonCreator\n         switch (t) {\n         throw ctxt.mappingException(getBeanClass());\n     }\n \n+    private Object _missingToken(JsonParser jp, DeserializationContext ctxt)\n+        throws JsonProcessingException\n+    {\n+        throw ctxt.endOfInputException(getBeanClass());\n+    }\n+    \n     /**\n      * Secondary deserialization method, called in cases where POJO\n      * instance is created as part of deserialization, potentially", "timestamp": 1347679183, "metainfo": ""}