{"sha": "6c89cbb587d7f79ce7b2aeb838105577bb3ad9f4", "log": "Clean up for findCreatorPropertyNames() (in BasicBeanDescription)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java\n     }\n \n     /**\n+     * @deprecated Since 2.4, use {@link #findCreatorParameterNames()} instead.\n+     * @return\n+     */\n+    @Deprecated\n+    public List<String> findCreatorPropertyNames()\n+    {\n+    \tList<PropertyName> params = findCreatorParameterNames();\n+    \tif (params.isEmpty()) {\n+    \t\treturn Collections.emptyList();\n+    \t}\n+    \tList<String> result = new ArrayList<String>(params.size());\n+    \tfor (PropertyName name : params) {\n+    \t\tresult.add(name.getSimpleName());\n+    \t}\n+    \treturn result;\n+    }\n+    \n+    /**\n      * Method for getting ordered list of named Creator properties.\n      * Returns an empty list is none found. If multiple Creator\n      * methods are defined, order between properties from different\n      * methods is undefined; however, properties for each such\n-     * Creator are ordered properly relative to each other. For the\n-     * usual case of just a single Creator, named properties are\n+     * Creator are ordered properly relative to each other.\n+     * For the usual case of just a single Creator, named properties are\n      * thus properly ordered.\n-     */\n-    public List<String> findCreatorPropertyNames()\n-    {\n-        List<String> names = null;\n-\n+     * \n+     * @since 2.4\n+     */\n+    public List<PropertyName> findCreatorParameterNames()\n+    {\n         for (int i = 0; i < 2; ++i) {\n             List<? extends AnnotatedWithParams> l = (i == 0)\n                 ? getConstructors() : getFactoryMethods();\n             for (AnnotatedWithParams creator : l) {\n                 int argCount = creator.getParameterCount();\n                 if (argCount < 1) continue;\n-                PropertyName name = _annotationIntrospector.findNameForDeserialization(creator.getParameter(0));\n-                if (name == null) {\n+                PropertyName name = _findCreatorPropertyName(creator.getParameter(0));\n+                if (name == null || name.isEmpty()) {\n                     continue;\n                 }\n-                if (names == null) {\n-                    names = new ArrayList<String>();\n-                }\n-                names.add(name.getSimpleName());\n+                List<PropertyName> names = new ArrayList<PropertyName>();\n+                names.add(name);\n                 for (int p = 1; p < argCount; ++p) {\n-                    name = _annotationIntrospector.findNameForDeserialization(creator.getParameter(p));\n-                    names.add((name == null) ? null : name.getSimpleName());\n-                }\n-            }\n-        }\n-        if (names == null) {\n-            return Collections.emptyList();\n-        }\n-        return names;\n-    }\n-\n+                    name = _findCreatorPropertyName(creator.getParameter(p));\n+                    names.add(name);\n+                }\n+                return names;\n+            }\n+        }\n+        return Collections.emptyList();\n+    }\n+\n+    protected PropertyName _findCreatorPropertyName(AnnotatedParameter param)\n+    {\n+    \tPropertyName name = _annotationIntrospector.findNameForDeserialization(param);\n+    \tif (name == null || name.isEmpty()) {\n+    \t\tString str = _annotationIntrospector.findParameterSourceName(param);\n+    \t\tif (str != null && !str.isEmpty()) {\n+    \t\t\tname = new PropertyName(str);\n+    \t\t}\n+    \t}\n+    \treturn name;\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Introspection for deserialization, other\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n package com.fasterxml.jackson.databind.introspect;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.*;\n ", "timestamp": 1397624481, "metainfo": ""}