{"sha": "d080adc8815f3d737bc70d8bd298b6d587d6e3ee", "log": "Add another manually run perf micro-benchmark", "commit": "\n--- /dev/null\n+++ b/src/test/java/perf/ManualReadPerfUntyped.java\n+package perf;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+public class ManualReadPerfUntyped extends ObjectReaderBase\n+{\n+    public static void main(String[] args) throws Exception\n+    {\n+        if (args.length != 1) {\n+            System.err.println(\"Usage: java [input]\");\n+            System.exit(1);\n+        }\n+        byte[] data = readAll(args[0]);\n+\n+        ObjectMapper m = new ObjectMapper();\n+        Object input1 = m.readValue(data, Object.class);\n+        JsonNode input2 = m.readTree(data);\n+\n+        new ManualReadPerfUntyped().test(\n+                m, \"JSON-as-Object\", input1, Object.class,\n+                m, \"JSON-as-Array\", input2, JsonNode.class);\n+    }\n+\n+}\n--- a/src/test/java/perf/ObjectReaderBase.java\n+++ b/src/test/java/perf/ObjectReaderBase.java\n package perf;\n+\n+import java.io.*;\n \n import com.fasterxml.jackson.databind.*;\n \n         hash = result.hashCode();\n         return System.currentTimeMillis() - start;\n     }\n+\n+    public static byte[] readAll(String filename) throws IOException\n+    {\n+        File f = new File(filename);\n+        ByteArrayOutputStream bytes = new ByteArrayOutputStream((int) f.length());\n+        byte[] buffer = new byte[4000];\n+        int count;\n+        FileInputStream in = new FileInputStream(f);\n+        \n+        while ((count = in.read(buffer)) > 0) {\n+            bytes.write(buffer, 0, count);\n+        }\n+        in.close();\n+        return bytes.toByteArray();\n+    }\n }", "timestamp": 1398015061, "metainfo": ""}