{"sha": "4140deb44c09656e46f52598fc556e2bdcc432c1", "log": "1) Commit failing unit test that shouldn't be failing", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonValue.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestJsonValue.java\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;\n+import junit.framework.Assert;\n \n /**\n  * This unit test suite tests functioning of {@link JsonValue}\n         String json = MAPPER.writeValueAsString(bean);\n         assertEquals(json, \"{\\\"values\\\":[{\\\"i\\\":1},{\\\"i\\\":2}]}\");\n     }\n+\n+  public void testPolymorphicSerdeWithDelegate() throws Exception\n+  {\n+    AdditionInterface adder = new AdditionInterfaceImpl(1);\n+\n+    assertEquals(2, adder.add(1));\n+    String json = MAPPER.writeValueAsString(adder);\n+    assertEquals(\"{\\\"boingo\\\":\\\"boopsy\\\",\\\"toAdd\\\":1}\", json);\n+    assertEquals(2, MAPPER.readValue(json, AdditionInterface.class).add(1));\n+\n+    adder = new NegatingAdditionInterface(adder);\n+    assertEquals(0, adder.add(1));\n+    json = MAPPER.writeValueAsString(adder);\n+    assertEquals(\"{\\\"boingo\\\":\\\"boopsy\\\",\\\"toAdd\\\":1}\", json);\n+    assertEquals(2, MAPPER.readValue(json, AdditionInterface.class).add(1));\n+  }\n+\n+  @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"boingo\")\n+  @JsonSubTypes(value = {\n+      @JsonSubTypes.Type(name = \"boopsy\", value = AdditionInterfaceImpl.class)\n+  })\n+  static interface AdditionInterface\n+  {\n+    public int add(int in);\n+  }\n+\n+  public static class AdditionInterfaceImpl implements AdditionInterface\n+  {\n+    private final int toAdd;\n+\n+    @JsonCreator\n+    public AdditionInterfaceImpl(\n+        @JsonProperty(\"toAdd\") int toAdd\n+    )\n+    {\n+      this.toAdd = toAdd;\n+    }\n+\n+    @JsonProperty\n+    public int getToAdd()\n+    {\n+      return toAdd;\n+    }\n+\n+    @Override\n+    public int add(int in)\n+    {\n+      return in + toAdd;\n+    }\n+  }\n+\n+  public static class NegatingAdditionInterface implements AdditionInterface\n+  {\n+    private final AdditionInterface delegate;\n+\n+    public NegatingAdditionInterface(\n+        AdditionInterface delegate\n+    )\n+    {\n+      this.delegate = delegate;\n+    }\n+\n+    @Override\n+    public int add(int in)\n+    {\n+      return delegate.add(-in);\n+    }\n+\n+    @JsonValue\n+    public AdditionInterface getDelegate()\n+    {\n+      return delegate;\n+    }\n+  }\n }", "timestamp": 1360796561, "metainfo": ""}