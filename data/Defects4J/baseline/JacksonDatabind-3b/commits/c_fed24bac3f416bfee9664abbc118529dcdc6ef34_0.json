{"sha": "fed24bac3f416bfee9664abbc118529dcdc6ef34", "log": "Fix #287", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase.java\n import java.lang.reflect.Type;\n \n import com.fasterxml.jackson.core.*;\n-\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor;\n             // 30-Sep-2012, tatu: One more thing -- if explicit content type is annotated,\n             //   we can consider it a static case as well.\n             if (_elementType != null) {\n-                if (_staticTyping || hasContentTypeAnnotation(provider, property)) {\n+                // 20-Aug-2013, tatu: Need to avoid trying to access serializer for java.lang.Object tho\n+                if ((_staticTyping && _elementType.getRawClass() != Object.class)\n+                        || hasContentTypeAnnotation(provider, property)) {\n                     ser = provider.findValueSerializer(_elementType, property);\n                 }\n             }\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n         // If value type is final, it's same as forcing static value typing:\n         if (!staticValueType) {\n             staticValueType = (valueType != null && valueType.isFinal());\n+        } else {\n+            // also: Object.class can not be handled as static, ever\n+            if (valueType.getRawClass() == Object.class) {\n+                staticValueType = false;\n+            }\n         }\n         return new MapSerializer(ignoredEntries, keyType, valueType, staticValueType, vts,\n                 keySerializer, valueSerializer);\n         }\n         return result;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Post-processing (contextualization)\n         if (ser == null) {\n             // 30-Sep-2012, tatu: One more thing -- if explicit content type is annotated,\n             //   we can consider it a static case as well.\n-            if (_valueTypeIsStatic || hasContentTypeAnnotation(provider, property)) {\n+            // 20-Aug-2013, tatu: Need to avoid trying to access serializer for java.lang.Object tho\n+            if ((_valueTypeIsStatic && _valueType.getRawClass() != Object.class)\n+                    || hasContentTypeAnnotation(provider, property)) {\n                 ser = provider.findValueSerializer(_valueType, property);\n             }\n         } else if (ser instanceof ContextualSerializer) {", "timestamp": 1377034009, "metainfo": ""}