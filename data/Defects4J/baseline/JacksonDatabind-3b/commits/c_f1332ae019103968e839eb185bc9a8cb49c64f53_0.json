{"sha": "f1332ae019103968e839eb185bc9a8cb49c64f53", "log": "move failing test", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestInnerClass.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestInnerClass.java\n package com.fasterxml.jackson.databind.deser;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n \n import com.fasterxml.jackson.databind.*;\n \n         output.name = \"Foo\";\n         assertEquals(\"Foo\", output.brain.parentName());\n     }\n-\n-    // core/[Issue#32]\n-    public void testInnerList() throws Exception\n-    {\n-        Dog2 dog = new Dog2();\n-        dog.name = \"Spike\";\n-        dog.legs = new ArrayList<Dog2.Leg>();\n-        dog.legs.add(dog.new Leg());\n-        dog.legs.add(dog.new Leg());\n-        dog.legs.get(0).length = 5;\n-        dog.legs.get(1).length = 4;\n-\n-        ObjectMapper mapper = new ObjectMapper();\n-\n-        String dogJson = mapper.writeValueAsString(dog);\n-        System.out.println(dogJson);\n-      // output: {\"name\":\"Spike\",\"legs\":[{length: 5}, {length: 4}]}\n-\n-        // currently throws JsonMappingException\n-        Dog2 dogCopy = mapper.readValue(dogJson, Dog2.class);\n-        assertEquals(dogCopy.legs.get(1).length, 4);\n-        // prefer fully populated Dog instance\n-    }\n-\n-    public static class Dog2\n-    {\n-      public String name;\n-      public List<Leg> legs;\n-\n-      public class Leg {\n-        public int length;\n-      }\n-    }\n }\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestInnerClass.java\n+package com.fasterxml.jackson.failing;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestInnerClass extends BaseMapTest\n+{\n+    public static class Dog2\n+    {\n+        public String name;\n+        public List<Leg> legs;\n+\n+        public class Leg {\n+            public int length;\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Tests\n+    /**********************************************************\n+     */\n+\n+    // core/[Issue#32]\n+    public void testInnerList() throws Exception\n+    {\n+        Dog2 dog = new Dog2();\n+        dog.name = \"Spike\";\n+        dog.legs = new ArrayList<Dog2.Leg>();\n+        dog.legs.add(dog.new Leg());\n+        dog.legs.add(dog.new Leg());\n+        dog.legs.get(0).length = 5;\n+        dog.legs.get(1).length = 4;\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+\n+        String dogJson = mapper.writeValueAsString(dog);\n+        System.out.println(dogJson);\n+      // output: {\"name\":\"Spike\",\"legs\":[{length: 5}, {length: 4}]}\n+\n+        // currently throws JsonMappingException\n+        Dog2 dogCopy = mapper.readValue(dogJson, Dog2.class);\n+        assertEquals(dogCopy.legs.get(1).length, 4);\n+        // prefer fully populated Dog instance\n+    }\n+}", "timestamp": 1351300986, "metainfo": ""}