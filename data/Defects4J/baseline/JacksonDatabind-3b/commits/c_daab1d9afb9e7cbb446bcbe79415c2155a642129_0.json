{"sha": "daab1d9afb9e7cbb446bcbe79415c2155a642129", "log": "Fix #311", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n         }\n         // And secondly by sorting Creator properties before other unordered properties\n         if (_creatorProperties != null) {\n-            for (POJOPropertyBuilder prop : _creatorProperties) {\n+            /* As per [Issue#311], this is bit delicate; but if alphabetic ordering\n+             * is mandated, at least ensure creator properties are in alphabetic\n+             * order. Related question of creator vs non-creator is punted for now,\n+             * so creator properties still fully predate non-creator ones.\n+             */\n+            Collection<POJOPropertyBuilder> cr;\n+            if (sort) {\n+                TreeMap<String, POJOPropertyBuilder> sorted =\n+                        new TreeMap<String,POJOPropertyBuilder>();\n+                for (POJOPropertyBuilder prop : _creatorProperties) {\n+                    sorted.put(prop.getName(), prop);\n+                }\n+                cr = sorted.values();\n+            } else {\n+                cr = _creatorProperties;\n+            }\n+            for (POJOPropertyBuilder prop : cr) {\n                 ordered.put(prop.getName(), prop);\n             }\n         }\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestSerializationOrder.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestSerializationOrder.java\n     {\n         ObjectMapper m = new ObjectMapper();\n         m.configure(MapperFeature.SORT_PROPERTIES_ALPHABETICALLY, true);\n-        String json = m.writeValueAsString(new BeanForGH311(1, 2));\n+        String json = m.writeValueAsString(new BeanForGH311(2, 1));\n         assertEquals(\"{\\\"a\\\":1,\\\"b\\\":2}\", json);\n     }\n }", "timestamp": 1379538464, "metainfo": ""}