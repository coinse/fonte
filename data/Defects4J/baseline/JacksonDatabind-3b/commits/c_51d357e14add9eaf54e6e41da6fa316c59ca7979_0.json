{"sha": "51d357e14add9eaf54e6e41da6fa316c59ca7979", "log": "Merge pull request #137 from stevenschlansker/map-key-failing  Failing test case for Issue 47: Map key @JsonValue serialization", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestMapJsonValueKey.java\n+package com.fasterxml.jackson.failing;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.test.BaseTest;\n+\n+public class TestMapJsonValueKey extends BaseTest\n+{\n+    public static class Wat\n+    {\n+        private final String wat;\n+\n+        @JsonCreator\n+        Wat(String wat)\n+        {\n+            this.wat = wat;\n+        }\n+\n+        @JsonValue\n+        public String getWat()\n+        {\n+            return wat;\n+        }\n+\n+        @Override\n+        public String toString()\n+        {\n+            return \"[Wat: \" + wat + \"]\";\n+        }\n+    }\n+\n+    public void testMapJsonValueKey()\n+    throws Exception\n+    {\n+        Map<Wat, Boolean> map = new HashMap<Wat, Boolean>();\n+        map.put(new Wat(\"3\"), true);\n+        map.put(new Wat(\"x\"), false);\n+\n+        TypeReference<Map<Wat, Boolean>> type = new TypeReference<Map<Wat, Boolean>>(){};\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        assertEquals(map, mapper.readValue(mapper.writeValueAsBytes(map), type));\n+    }\n+}", "timestamp": 1357244238, "metainfo": ""}