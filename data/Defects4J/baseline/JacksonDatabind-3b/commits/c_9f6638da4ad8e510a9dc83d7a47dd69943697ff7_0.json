{"sha": "9f6638da4ad8e510a9dc83d7a47dd69943697ff7", "log": "unit test refactoring", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JacksonStdImpl;\n-import com.fasterxml.jackson.databind.introspect.Annotated;\n import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;\n import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor;\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestNameConflicts193And327.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestNameConflicts193And327 extends BaseMapTest\n+{\n+    static class Bean193\n+    {\n+        @JsonProperty(\"val1\")\n+        private int x;\n+        @JsonIgnore\n+        private int value2;\n+        \n+        public Bean193(@JsonProperty(\"val1\")int value1,\n+                    @JsonProperty(\"val2\")int value2)\n+        {\n+            this.x = value1;\n+            this.value2 = value2;\n+        }\n+        \n+        @JsonProperty(\"val2\")\n+        int x()\n+        {\n+            return value2;\n+        }\n+    }\n+\n+    /* We should only report an exception for cases where there is\n+     * real ambiguity as to how to rename things; but not when everything\n+     * has been explicitly defined\n+     */\n+    // [Issue#327]\n+    @JsonPropertyOrder({ \"prop1\", \"prop2\" })\n+    static class BogusConflictBean\n+    {\n+        @JsonProperty(\"prop1\")\n+        public int a = 2;\n+\n+        @JsonProperty(\"prop2\")\n+        public int getA() {\n+            return 1;\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    public void testIssue193() throws Exception\n+    {\n+        String json = objectWriter().writeValueAsString(new Bean193(1, 2));\n+        assertNotNull(json);\n+    }\n+\n+    // [Issue#327]\n+    public void testNonConflict() throws Exception\n+    {\n+        String json = objectMapper().writeValueAsString(new BogusConflictBean());\n+        assertEquals(aposToQuotes(\"{'prop1':2,'prop2':1}\"), json);\n+    }    \n+}", "timestamp": 1395011564, "metainfo": ""}