{"sha": "3a92b128f484114e4bb2a5dba760afa8c8582483", "log": "Added assertion for unresolved id check.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/UnresolvedForwardReference.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/UnresolvedForwardReference.java\n      * \n      * @author pgelinas\n      */\n-    private static class UnresolvedId {\n+    public static class UnresolvedId {\n         private Object _id;\n         private JsonLocation _location;\n         private Class<?> _type;\n             _id = id;\n             _type = type;\n             _location = where;\n+        }\n+        \n+        public Object getId()\n+        {\n+            return _id;\n+        }\n+        \n+        public Class<?> getType()\n+        {\n+            return _type;\n+        }\n+        \n+        public JsonLocation getLocation()\n+        {\n+            return _location;\n         }\n \n         @Override\n         _unresolvedIds.add(new UnresolvedId(id, type, where));\n     }\n \n+    public List<UnresolvedId> getUnresolvedIds(){\n+        return _unresolvedIds;\n+    }\n+    \n     @Override\n     public String getMessage()\n     {\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n \n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n \n import com.fasterxml.jackson.annotation.ObjectIdGenerators;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;\n+import com.fasterxml.jackson.databind.deser.UnresolvedForwardReference.UnresolvedId;\n import com.fasterxml.jackson.databind.struct.TestObjectId.Company;\n import com.fasterxml.jackson.databind.struct.TestObjectId.Employee;\n \n             fail(\"Should have thrown.\");\n         } catch (UnresolvedForwardReference exception) {\n             // Expected\n+            List<UnresolvedId> unresolvedIds = exception.getUnresolvedIds();\n+            assertEquals(2, unresolvedIds.size());\n+            UnresolvedId firstUnresolvedId = unresolvedIds.get(0);\n+            assertEquals(3, firstUnresolvedId.getId());\n+            assertEquals(Employee.class, firstUnresolvedId.getType());\n+            UnresolvedId secondUnresolvedId = unresolvedIds.get(1);\n+            assertEquals(firstUnresolvedId.getId(), secondUnresolvedId.getId());\n+            assertEquals(firstUnresolvedId.getType(), secondUnresolvedId.getType());\n         }\n     }\n ", "timestamp": 1389625653, "metainfo": ""}