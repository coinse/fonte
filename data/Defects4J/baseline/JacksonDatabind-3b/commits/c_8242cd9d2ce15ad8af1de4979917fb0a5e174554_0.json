{"sha": "8242cd9d2ce15ad8af1de4979917fb0a5e174554", "log": "add a unit test for #251", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/node/TestNumberNodes.java\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.core.JsonToken;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.*;\n \n /**\n  * Basic tests for {@link JsonNode} implementations that\n         assertTrue(BigIntegerNode.valueOf(BigInteger.valueOf(Long.MIN_VALUE)).canConvertToLong());\n     }\n \n+    public void testBigDecimalAsPlain() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper()\n+                .enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS)\n+                .enable(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN);\n+        final String JSON = \"{\\\"x\\\":1e2}\";\n+        final JsonNode node = mapper.readTree(JSON);\n+        String result = mapper.writeValueAsString(node);\n+        assertEquals(\"{\\\"x\\\":100}\", result);\n+    }\n }", "timestamp": 1372995428, "metainfo": ""}