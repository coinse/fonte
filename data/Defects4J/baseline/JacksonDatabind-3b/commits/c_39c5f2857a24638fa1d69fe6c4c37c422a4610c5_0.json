{"sha": "39c5f2857a24638fa1d69fe6c4c37c422a4610c5", "log": "Bit more work wrt [JACKSON-805], POJO-as-array feature, moving tests around", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestBeanDeserializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestBeanDeserializer.java\n         }        \n     }\n     \n-    @JsonFormat(shape=Shape.ARRAY)\n-    class SingleBean {\n-        public String name;\n-    }\n-    \n     /*\n     /********************************************************\n     /* Unit tests\n         Bean result = mapper.readValue(quote(\"\"), Bean.class);\n         assertNull(result);\n     }\n-    \n-    public void testBeanAsArrayUnwrapped() throws Exception {\n-        ObjectMapper mapper = new ObjectMapper();\n-        mapper.enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n-        SingleBean result = mapper.readValue(quote(\"foo\"), SingleBean.class);\n-        assertNotNull(result);\n-        assertEquals(\"foo\", result.name);\n-    }\n }\n--- a/src/test/java/com/fasterxml/jackson/databind/mixins/TestMixinSerForMethods.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/mixins/TestMixinSerForMethods.java\n     }\n \n     /*\n-    ///////////////////////////////////////////////////////////\n-    // Unit tests\n-    ///////////////////////////////////////////////////////////\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n      */\n \n     /**\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestBeanSerializer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestBeanSerializer.java\n     static class EmptyBean {\n         @JsonIgnore\n         public String name = \"foo\";\n-    }\n-    \n-    // for [JACKSON-805]\n-    @JsonFormat(shape=Shape.ARRAY)\n-    static class SingleBean {\n-        public String name =\"foo\";\n     }\n     \n     static class EmptyBeanModifier extends BeanSerializerModifier\n         String json = mapper.writeValueAsString(new EmptyBean());\n         assertEquals(\"{\\\"bogus\\\":\\\"foo\\\"}\", json);\n     }\n-    \n-    // for [JACKSON-805]\n-    public void testBeanAsArrayWithSingleProperty() throws Exception {\n-        ObjectMapper mapper = new ObjectMapper();\n-        mapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);\n-        String json = mapper.writeValueAsString(new SingleBean());\n-        assertEquals(\"\\\"foo\\\"\", json);\n-    }\n \n     /*\n     /********************************************************\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestPOJOAsArray.java\n \n import com.fasterxml.jackson.annotation.JsonFormat;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.annotation.JsonFormat.Shape;\n+\n import com.fasterxml.jackson.databind.BaseMapTest;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n import com.fasterxml.jackson.databind.introspect.Annotated;\n import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n \n         public int x = 1;\n         public int y = 2;\n     }\n+\n+    // for [JACKSON-805]\n+    @JsonFormat(shape=Shape.ARRAY)\n+    static class SingleBean {\n+        public String name = \"foo\";\n+    }\n     \n     /*\n     /*****************************************************\n \n     /*\n     /*****************************************************\n+    /* Compatibility with \"single-elem as array\" feature\n+    /*****************************************************\n+     */\n+    \n+    // for [JACKSON-805]\n+    public void testSerializeAsArrayWithSingleProperty() throws Exception {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.enable(SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED);\n+        String json = mapper.writeValueAsString(new SingleBean());\n+        assertEquals(\"\\\"foo\\\"\", json);\n+    }\n+    \n+    public void testBeanAsArrayUnwrapped() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n+        SingleBean result = mapper.readValue(quote(\"foobar\"), SingleBean.class);\n+        assertNotNull(result);\n+        assertEquals(\"foobar\", result.name);\n+    }\n+    \n+    /*\n+    /*****************************************************\n     /* Round-trip tests\n     /*****************************************************\n      */", "timestamp": 1348280348, "metainfo": ""}