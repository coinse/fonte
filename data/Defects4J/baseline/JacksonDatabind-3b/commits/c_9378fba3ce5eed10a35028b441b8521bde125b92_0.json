{"sha": "9378fba3ce5eed10a35028b441b8521bde125b92", "log": "Add a unit test for #154", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestObjectId154.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestObjectId154 extends BaseMapTest\n+{\n+    @JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property=\"@id\")\n+    public static class BaseEntity {  }\n+\n+    @JsonTypeInfo(use=JsonTypeInfo.Id.CLASS, include=JsonTypeInfo.As.PROPERTY, property=\"@class\")\n+    public static class Foo extends BaseEntity {\n+        public BaseEntity ref;\n+    }\n+\n+    public static class Bar extends BaseEntity\n+    {\n+        public Foo next;\n+    }\n+\n+    public void testObjectAndTypeId() throws Exception\n+    {\n+        final ObjectMapper mapper = new ObjectMapper();\n+\n+        Foo foo = new Foo();\n+        Bar bar = new Bar();\n+        foo.ref = bar;\n+        bar.next = foo;\n+\n+        String json = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(bar);\n+\n+        System.out.println(\"JSON: \"+json);\n+        \n+        BaseEntity result = mapper.readValue(json, BaseEntity.class);\n+        assertNotNull(result);\n+        assertTrue(result instanceof Bar);\n+        Bar first = (Bar) result;\n+\n+        assertNotNull(first.next);\n+        assertTrue(first.next instanceof Foo);\n+        Foo second = (Foo) first.next;\n+        assertNotNull(second.ref);\n+        assertSame(first, second.ref);\n+    }\n+}", "timestamp": 1387346523, "metainfo": ""}