{"sha": "a2966ff7fe76cbabadf54766f576e3a66244ffe5", "log": "Completed serialization-side test, seems to work.", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/contextual/TestContextAttributeWithSer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/contextual/TestContextAttributeWithSer.java\n     public void testSimplePerCall() throws Exception\n     {\n         ObjectWriter w = MAPPER.writer();\n-        String json = w.writeValueAsString(new TestPOJO(\"def\"));\n-        assertEquals(\"\", json);\n+        String json = w.writeValueAsString(new TestPOJO[] {\n+                new TestPOJO(\"a\"),\n+                new TestPOJO(\"b\") });\n+        assertEquals(aposToQuotes(\"[{'value':'0:a'},{'value':'1:b'}]\"), json);\n     }\n \n     public void testSimpleDefaults() throws Exception\n \n     public void testHierarchic() throws Exception\n     {\n-        ObjectWriter w = MAPPER.writer().withAttribute(KEY, Integer.valueOf(3));\n-        String json = w.writeValueAsString(new TestPOJO(\"abc\"));\n-        assertEquals(\"\", json);\n-        \n+        ObjectWriter w = MAPPER.writer().withAttribute(KEY, Integer.valueOf(2));\n+        String json = w.writeValueAsString(new TestPOJO[] {\n+                new TestPOJO(\"a\"),\n+                new TestPOJO(\"b\") });\n+        assertEquals(aposToQuotes(\"[{'value':'2:a'},{'value':'3:b'}]\"), json);\n     }\n }", "timestamp": 1381202911, "metainfo": ""}