{"sha": "d61c921d5b2b35cc9977a9a84052b6a085abcbbd", "log": "test refactoring", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestCreators2.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestCreators2.java\n         \n         public AbstractBaseImpl(Map<String,Object> props) {\n             this.props = props;\n-        }\n-    }\n-\n-    static class BooleanBean\n-    {\n-        protected Boolean value;\n-\n-        public BooleanBean(Boolean v) { value = v; }\n-        \n-        @JsonCreator\n-        protected static BooleanBean create(Boolean value) {\n-            return new BooleanBean(value);\n         }\n     }\n     \n         assertEquals(Integer.valueOf(3), impl.props.get(\"a\"));\n     }\n \n-    public void testBooleanDelegate() throws Exception\n-    {\n-        ObjectMapper m = new ObjectMapper();\n-        // should obviously work with booleans...\n-        BooleanBean bb = m.readValue(\"true\", BooleanBean.class);\n-        assertEquals(Boolean.TRUE, bb.value);\n-\n-        // but also with value conversion from String\n-        bb = m.readValue(quote(\"true\"), BooleanBean.class);\n-        assertEquals(Boolean.TRUE, bb.value);\n-    }\n-\n     // [JACKSON-700]\n     public void testCreatorProperties() throws Exception\n     {\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestCreatorsDelegating.java\n+package com.fasterxml.jackson.databind.deser;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JacksonInject;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestCreatorsDelegating extends BaseMapTest\n+{\n+    static class BooleanBean\n+    {\n+        protected Boolean value;\n+\n+        public BooleanBean(Boolean v) { value = v; }\n+        \n+        @JsonCreator\n+        protected static BooleanBean create(Boolean value) {\n+            return new BooleanBean(value);\n+        }\n+    }\n+\n+    // for [JACKSON-711]; should allow delegate-based one(s) too\n+    static class CtorBean711\n+    {\n+        protected String name;\n+        protected int age;\n+        \n+        @JsonCreator\n+        public CtorBean711(@JacksonInject String n, int a)\n+        {\n+            name = n;\n+            age = a;\n+        }\n+    }\n+\n+    // for [JACKSON-711]; should allow delegate-based one(s) too\n+    static class FactoryBean711\n+    {\n+        protected String name1;\n+        protected String name2;\n+        protected int age;\n+        \n+        private FactoryBean711(int a, String n1, String n2) {\n+            age = a;\n+            name1 = n1;\n+            name2 = n2;\n+        }\n+        \n+        @JsonCreator\n+        public static FactoryBean711 create(@JacksonInject String n1, int a, @JacksonInject String n2) {\n+            return new FactoryBean711(a, n1, n2);\n+        }\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    public void testBooleanDelegate() throws Exception\n+    {\n+        ObjectMapper m = new ObjectMapper();\n+        // should obviously work with booleans...\n+        BooleanBean bb = m.readValue(\"true\", BooleanBean.class);\n+        assertEquals(Boolean.TRUE, bb.value);\n+\n+        // but also with value conversion from String\n+        bb = m.readValue(quote(\"true\"), BooleanBean.class);\n+        assertEquals(Boolean.TRUE, bb.value);\n+    }\n+    \n+    // As per [JACKSON-711]: should also work with delegate model (single non-annotated arg)\n+    public void testWithCtorAndDelegate() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setInjectableValues(new InjectableValues.Std()\n+            .addValue(String.class, \"Pooka\")\n+            );\n+        CtorBean711 bean = null;\n+        try {\n+            bean = mapper.readValue(\"38\", CtorBean711.class);\n+        } catch (JsonMappingException e) {\n+            fail(\"Did not expect problems, got: \"+e.getMessage());\n+        }\n+        assertEquals(38, bean.age);\n+        assertEquals(\"Pooka\", bean.name);\n+    }\n+\n+    public void testWithFactoryAndDelegate() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setInjectableValues(new InjectableValues.Std()\n+            .addValue(String.class, \"Fygar\")\n+            );\n+        FactoryBean711 bean = null;\n+        try {\n+            bean = mapper.readValue(\"38\", FactoryBean711.class);\n+        } catch (JsonMappingException e) {\n+            fail(\"Did not expect problems, got: \"+e.getMessage());\n+        }\n+        assertEquals(38, bean.age);\n+        assertEquals(\"Fygar\", bean.name1);\n+        assertEquals(\"Fygar\", bean.name2);\n+    }\n+}", "timestamp": 1327017715, "metainfo": ""}