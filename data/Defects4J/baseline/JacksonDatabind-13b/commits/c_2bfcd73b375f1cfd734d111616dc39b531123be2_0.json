{"sha": "2bfcd73b375f1cfd734d111616dc39b531123be2", "log": "stylistics", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n \n     /**\n      * We will use a separate main-level Map for keeping track\n-     * of root-level deserializers. This is where most succesful\n+     * of root-level deserializers. This is where most successful\n      * cache lookups get resolved.\n      * Map will contain resolvers for all kinds of types, including\n      * container types: this is different from the component cache\n      * Java Beans (based on method names and Jackson-specific annotations),\n      * but does not support JAXB annotations.\n      */\n-    public ObjectMapper()\n-    {\n+    public ObjectMapper() {\n         this(null, null, null);\n     }\n \n      * for constructing necessary {@link JsonParser}s and/or\n      * {@link JsonGenerator}s.\n      */\n-    public ObjectMapper(JsonFactory jf)\n-    {\n+    public ObjectMapper(JsonFactory jf) {\n         this(jf, null, null);\n     }\n \n      * @param n Root node of the tree that resulting parser will read from\n      */\n     @Override\n-    public JsonParser treeAsTokens(TreeNode n)\n-    {\n+    public JsonParser treeAsTokens(TreeNode n) {\n         return new TreeTraversingParser((JsonNode) n, this);\n     }\n ", "timestamp": 1412295305, "metainfo": ""}