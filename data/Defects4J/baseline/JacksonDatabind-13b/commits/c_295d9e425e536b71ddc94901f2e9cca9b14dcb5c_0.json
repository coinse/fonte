{"sha": "295d9e425e536b71ddc94901f2e9cca9b14dcb5c", "log": "Minor improvement wrt #546: prevent attempts to use `JsonTypeInfo.As.EXTERNAL_PROPERTY` for default typing (throw IllegalArgumentException if attempted)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n      * Method for enabling automatic inclusion of type information, needed\n      * for proper deserialization of polymorphic types (unless types\n      * have been annotated with {@link com.fasterxml.jackson.annotation.JsonTypeInfo}).\n+     *<P>\n+     * NOTE: use of {@link JsonTypeInfo.As#EXTERNAL_PROPERTY} is <b>NOT SUPPORTED</b>;\n+     * and attempts of do so will throw an {@link IllegalArgumentException} to make\n+     * this limitation explicit.\n      * \n      * @param applicability Defines kinds of types for which additional type information\n      *    is added; see {@link DefaultTyping} for more information.\n      */\n     public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo.As includeAs)\n     {\n+        /* 18-Sep-2014, tatu: Let's add explicit check to ensure no one tries to\n+         *   use \"As.EXTERNAL_PROPERTY\", since that will not work.\n+         */\n+        if (includeAs == JsonTypeInfo.As.EXTERNAL_PROPERTY) {\n+            throw new IllegalArgumentException(\"Can not use includeAs of \"+includeAs);\n+        }\n+        \n         TypeResolverBuilder<?> typer = new DefaultTypeResolverBuilder(applicability);\n         // we'll always use full class name, when using defaulting\n         typer = typer.init(JsonTypeInfo.Id.CLASS, null);\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForObject.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForObject.java\n         String json = mapper.writeValueAsString(new BeanHolder(new StringBean(\"punny\")));\n         assertEquals(\"{\\\"bean\\\":{\\\"*CLASS*\\\":\\\"com.fasterxml.jackson.databind.jsontype.TestDefaultForObject$StringBean\\\",\\\"name\\\":\\\"punny\\\"}}\", json);\n     }\n+\n+    public void testNoGoWithExternalProperty() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        try {\n+            mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT,\n+                    JsonTypeInfo.As.EXTERNAL_PROPERTY);\n+            fail(\"Should not have passed\");\n+        } catch (IllegalArgumentException e) {\n+            verifyException(e, \"Can not use includeAs of EXTERNAL_PROPERTY\");\n+        }\n+    }\n     \n     /*\n     /**********************************************************", "timestamp": 1411079807, "metainfo": ""}