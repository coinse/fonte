{"sha": "082511bd55135d237757dbee3eb7246e6b786f27", "log": "Convert EnumSetDeserializer", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n         if (contentDeser == null) { // not defined by annotation\n             // One special type: EnumSet:\n             if (EnumSet.class.isAssignableFrom(collectionClass)) {\n-                return new EnumSetDeserializer(contentType, property, null);\n+                return new EnumSetDeserializer(contentType, null);\n             }\n         }\n         \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer.java\n import com.fasterxml.jackson.core.*;\n \n import com.fasterxml.jackson.databind.*;\n-import com.fasterxml.jackson.databind.deser.ResolvableDeserializer;\n+import com.fasterxml.jackson.databind.deser.ContextualDeserializer;\n import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;\n \n /**\n- * \n+ * Standard deserializer for {@link EnumSet}s.\n  * <p>\n  * Note: casting within this class is all messed up -- just could not figure out a way\n  * to properly deal with recursive definition of \"EnumSet<K extends Enum<K>, V>\n- * \n- * @author tsaloranta\n  */\n @SuppressWarnings(\"rawtypes\")\n public class EnumSetDeserializer\n     extends StdDeserializer<EnumSet<?>>\n-    implements ResolvableDeserializer\n+    implements ContextualDeserializer\n {\n     protected final JavaType _enumType;\n-\n-    protected final BeanProperty _property;\n \n     protected final Class<Enum> _enumClass;\n \n     protected JsonDeserializer<Enum<?>> _enumDeserializer;\n \n+    /*\n+    /**********************************************************\n+    /* Life-cycle\n+    /**********************************************************\n+     */\n+    \n     @SuppressWarnings(\"unchecked\" )\n-    public EnumSetDeserializer(JavaType enumType, BeanProperty prop,\n-            JsonDeserializer<?> deser)\n+    public EnumSetDeserializer(JavaType enumType, JsonDeserializer<?> deser)\n     {\n         super(EnumSet.class);\n         _enumType = enumType;\n-        _property = prop;\n         _enumClass = (Class<Enum>) enumType.getRawClass();\n         _enumDeserializer = (JsonDeserializer<Enum<?>>) deser;\n     }\n \n+    public EnumSetDeserializer withDeserializer(JsonDeserializer<?> deser) {\n+        return new EnumSetDeserializer(_enumType, deser);\n+    }\n+    \n     /**\n      * Because of costs associated with constructing Enum resolvers,\n      * let's cache instances by default.\n     @Override\n     public boolean isCachable() { return true; }\n     \n-    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public void resolve(DeserializationContext ctxt) throws JsonMappingException\n+    public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n+            BeanProperty property) throws JsonMappingException\n     {\n-        if (_enumDeserializer == null) {\n-            _enumDeserializer = (JsonDeserializer<Enum<?>>)(JsonDeserializer<?>)\n-                ctxt.findValueDeserializer(_enumType, _property);\n+        if (_enumDeserializer != null) {\n+            return this;\n         }\n+        return withDeserializer(ctxt.findValueDeserializer(_enumType, property));\n     }\n+\n+    /*\n+    /**********************************************************\n+    /* JsonDeserializer API\n+    /**********************************************************\n+     */\n     \n     @SuppressWarnings(\"unchecked\") \n     @Override\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer.java\n      * Overridable fluent-factory method used to create contextual instances\n      */\n     @SuppressWarnings(\"unchecked\")\n-    protected ObjectArrayDeserializer withDeserializer(JsonDeserializer<?> deser) {\n+    public ObjectArrayDeserializer withDeserializer(JsonDeserializer<?> deser) {\n         return new ObjectArrayDeserializer(_arrayType,\n                 (JsonDeserializer<Object>) deser, _elementTypeDeserializer);\n     }", "timestamp": 1327943105, "metainfo": ""}