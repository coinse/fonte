{"sha": "8e2901ec08aa389b98dae738846d4e8c79dba9c9", "log": "add a test wrt #570 in master", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java\n         assertEquals(30, c.get(Calendar.DAY_OF_MONTH));\n     }\n \n+    // [Databind#570]\n+    public void testISO8601PartialMilliseconds() throws Exception\n+    {\n+        String inputStr;\n+        Date inputDate;\n+        Calendar c = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n+        \n+        inputStr = \"2014-10-03T18:00:00.6-05:00\";\n+        inputDate = MAPPER.readValue(quote(inputStr), java.util.Date.class);\n+        c.setTime(inputDate);\n+        assertEquals(2014, c.get(Calendar.YEAR));\n+        assertEquals(Calendar.OCTOBER, c.get(Calendar.MONTH));\n+        assertEquals(3, c.get(Calendar.DAY_OF_MONTH));\n+        assertEquals(600, c.get(Calendar.MILLISECOND));\n+\n+        inputStr = \"2014-10-03T18:00:00.61-05:00\";\n+        inputDate = MAPPER.readValue(quote(inputStr), java.util.Date.class);\n+        c.setTime(inputDate);\n+        assertEquals(2014, c.get(Calendar.YEAR));\n+        assertEquals(Calendar.OCTOBER, c.get(Calendar.MONTH));\n+        assertEquals(3, c.get(Calendar.DAY_OF_MONTH));\n+        assertEquals(18 + 5, c.get(Calendar.HOUR_OF_DAY));\n+        assertEquals(0, c.get(Calendar.MINUTE));\n+        assertEquals(0, c.get(Calendar.SECOND));\n+        assertEquals(610, c.get(Calendar.MILLISECOND));\n+\n+        inputStr = \"1997-07-16T19:20:30.45+01:00\";\n+        inputDate = MAPPER.readValue(quote(inputStr), java.util.Date.class);\n+        c.setTime(inputDate);\n+        assertEquals(1997, c.get(Calendar.YEAR));\n+        assertEquals(Calendar.JULY, c.get(Calendar.MONTH));\n+        assertEquals(16, c.get(Calendar.DAY_OF_MONTH));\n+        assertEquals(19 - 1, c.get(Calendar.HOUR_OF_DAY));\n+        assertEquals(20, c.get(Calendar.MINUTE));\n+        assertEquals(30, c.get(Calendar.SECOND));\n+        assertEquals(450, c.get(Calendar.MILLISECOND));\n+    }\n+\n+    public void testISO8601MissingSeconds() throws Exception\n+    {\n+        String inputStr;\n+        Date inputDate;\n+        Calendar c = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n+    \n+        inputStr = \"1997-07-16T19:20+01:00\";\n+        inputDate = MAPPER.readValue(quote(inputStr), java.util.Date.class);\n+        c.setTime(inputDate);\n+        assertEquals(1997, c.get(Calendar.YEAR));\n+        assertEquals(Calendar.JULY, c.get(Calendar.MONTH));\n+        assertEquals(16, c.get(Calendar.DAY_OF_MONTH));\n+        assertEquals(19 - 1, c.get(Calendar.HOUR_OF_DAY));\n+        assertEquals(0, c.get(Calendar.SECOND));\n+        assertEquals(0, c.get(Calendar.MILLISECOND));\n+}\n+\n     public void testDateUtilISO8601NoTimezone() throws Exception\n     {\n         // Timezone itself is optional as well... \n         assertEquals(0, c.get(Calendar.MILLISECOND));\n \n         // 03-Nov-2013, tatu: This wouldn't work, and is the nominal reason\n-        //    for #338 I thinl\n+        //    for #338 I think\n         /*\n         inputDate =  ISO8601Utils.parse(INPUT_STR);\n         c = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));", "timestamp": 1412354027, "metainfo": ""}