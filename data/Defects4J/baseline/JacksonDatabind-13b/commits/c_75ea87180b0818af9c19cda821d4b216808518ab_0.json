{"sha": "75ea87180b0818af9c19cda821d4b216808518ab", "log": "javadoc cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java\n     protected final JsonNodeFactory _nodeFactory;\n \n     /**\n-     * States of {@link JsonParser.Feature}s to enable/disable.\n+     * States of {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable.\n      */\n     protected final int _parserFeatures;\n \n     /**\n-     * Bitflag of {@link JsonParser.Feature}s to enable/disable\n+     * Bitflag of {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable\n      */\n     protected final int _parserFeaturesToChange;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java\n     protected final FilterProvider _filterProvider;\n \n     /**\n-     * States of {@link JsonGenerator.Feature}s to enable/disable.\n+     * States of {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable.\n      */\n     protected final int _generatorFeatures;\n \n     /**\n-     * Bitflag of {@link JsonGenerator.Feature}s to enable/disable\n+     * Bitflag of {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable\n      */\n     protected final int _generatorFeaturesToChange;\n     \n--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n     }\n \n     /**\n-     * Copy-constructor used when making a {@link #copy} of a blueprint\n-     * object.\n+     * Copy-constructor used when making a copy of a blueprint instance.\n      * \n      * @since 2.4.4\n      */\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/MapEntryDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/MapEntryDeserializer.java\n     /**\n      * Key deserializer to use; either passed via constructor\n      * (when indicated by annotations), or resolved when\n-     * {@link #resolve} is called;\n+     * {@link #createContextual} is called;\n      */\n     protected final KeyDeserializer _keyDeserializer;\n \n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDelegatingDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDelegatingDeserializer.java\n  *<p>\n  * Note that although types (delegate, target) may be related, they must not be same; trying\n  * to do this will result in an exception.\n+ *<p>\n+ * Since 2.5 There is {@link StdNodeBasedDeserializer} that is a simplified version\n+ * for cases where intermediate type is {@link JsonNode}\n  * \n  * @param <T> Target type to convert to, from delegate type\n  * \n  * @since 2.1\n+ * \n+ * @see StdNodeBasedDeserializer\n+ * @see Converter\n  */\n public class StdDelegatingDeserializer<T>\n     extends StdDeserializer<T>\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n \n     /**\n      * Copy-constructor for sub-classes to use, most often when creating\n-     * new instances for {@link ContextualDeserializer}.\n+     * new instances for {@link com.fasterxml.jackson.databind.deser.ContextualDeserializer}.\n      * \n      * @since 2.5\n      */\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java\n \n     /**\n      * \"Copy-constructor\" used when creating a modified copies, most often\n-     * if sub-class implements {@link ContextualDeserializer}.\n+     * if sub-class implements {@link com.fasterxml.jackson.databind.deser.ContextualDeserializer}.\n      */\n     protected StdNodeBasedDeserializer(StdNodeBasedDeserializer<?> src) {\n         super(src);\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n \n     /**\n      * Value that indicates suppression mechanism to use; either one of\n-     * values of {@link JsonInclude.Include}, or actual object to compare\n+     * values of {@link com.fasterxml.jackson.annotation.JsonInclude.Include}, or actual object to compare\n      * against (\"default value\")\n      * \n      * @since 2.5\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java\n  *<p>\n  * Note that although types may be related, they must not be same; trying\n  * to do this will result in an exception.\n- * \n+ *\n  * @since 2.1\n  */\n public class StdDelegatingSerializer\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n      * @param parametrized Type-erased type of instance being constructed\n      * @param parametersFor class or interface for which type parameters are applied; either\n      *   <code>parametrized</code> or one of its supertypes\n-     * @parameterClasses Type parameters to apply\n+     * @param parameterClasses Type parameters to apply\n      * \n      * @since 2.5\n      */\n      * @param parametrized Actual full type\n      * @param parametersFor class or interface for which type parameters are applied; either\n      *   <code>parametrized</code> or one of its supertypes\n-     * @parameterClasses Type parameters to apply\n+     * @param parameterTypes Type parameters to apply\n      * \n      * @since 2.5\n      */", "timestamp": 1416438439, "metainfo": ""}