{"sha": "26bfb0ce795f60895b16b9cdd196a0ca9d48f5c1", "log": "Add test for #538", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/TestObjectIdDeserialization.java\n             return new PoolResolver(pool);\n         }\n     }\n+    \n+    /*\n+    /*****************************************************\n+    /* Unit tests, external id deserialization\n+    /*****************************************************\n+     */\n \n     private final ObjectMapper mapper = new ObjectMapper();\n     \n-    /*\n-    /*****************************************************\n-    /* Unit tests, external id deserialization\n-    /*****************************************************\n-     */\n-\n     private final static String EXP_SIMPLE_INT_CLASS = \"{\\\"id\\\":1,\\\"value\\\":13,\\\"next\\\":1}\";\n \n     public void testSimpleDeserializationClass() throws Exception\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestObjectIdWithInjectables538.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.*;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestObjectIdWithInjectables538 extends BaseMapTest\n+{\n+    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class)\n+    public static class A {\n+        public B b;\n+\n+        public A(@JacksonInject(\"i1\") String injected) {}\n+    }\n+\n+    @JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class)\n+    public static class B {\n+        public A a;\n+\n+        public B(@JacksonInject(\"i2\") String injected) {}\n+    } \n+\n+    /*\n+    /*****************************************************\n+    /* Test methods\n+    /*****************************************************\n+     */\n+    \n+    private final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    public void testWithInjectables538() throws Exception\n+    {\n+        A a = new A(null);\n+        B b = new B(null);\n+        a.b = b;\n+        b.a = a;\n+\n+        String json = MAPPER.writeValueAsString(a);\n+\n+System.out.println(\"JSON = \"+json);\n+        \n+        InjectableValues.Std inject = new InjectableValues.Std();\n+        inject.addValue(\"i1\", \"e1\");\n+        inject.addValue(\"i2\", \"e2\");\n+        A output = MAPPER.reader(inject).withType(A.class).readValue(json);\n+        assertNotNull(output);\n+\n+        assertNotNull(output.b);\n+    }\n+}\n+", "timestamp": 1413513858, "metainfo": ""}