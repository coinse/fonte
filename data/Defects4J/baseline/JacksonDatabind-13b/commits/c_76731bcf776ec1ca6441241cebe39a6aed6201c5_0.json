{"sha": "76731bcf776ec1ca6441241cebe39a6aed6201c5", "log": "Add annotation-access support for #527", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java\n      * field) defines which Bean/Map properties are to be included in\n      * serialization.\n      * If no annotation is found, method should return given second\n-     * argument; otherwise value indicated by the annotation\n+     * argument; otherwise value indicated by the annotation.\n+     *<p>\n+     * Note that meaning of inclusion value depends on whether it is for\n+     * a Class or property (field/method/constructor): in former case,\n+     * it is the default for all properties; in latter case it is specific\n+     * override for annotated property.\n      *\n      * @return Enumerated value indicating which properties to include\n      *   in serialization\n      */\n     public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n+        return defValue;\n+    }\n+\n+    /**\n+     * Method for checking whether content (entries) of a {@link java.util.Map} property\n+     * are to be included during serialization or not.\n+     * \n+     * @since 2.5\n+     */\n+    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue) {\n         return defValue;\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n     public JsonInclude.Include findSerializationInclusion(Annotated a,\n             JsonInclude.Include defValue)\n     {\n-        /* This is bit trickier: need to combine results in a meaningful\n-         * way. Seems like it should be a disjoint; that is, most\n-         * restrictive value should be returned.\n-         * For enumerations, comparison is done by indexes, which\n-         * works: largest value is the last one, which is the most\n-         * restrictive value as well.\n-         */\n-        /* 09-Mar-2010, tatu: Actually, as per [JACKSON-256], it is probably better to just\n-         *    use strict overriding. Simpler, easier to understand.\n-         */\n         // note: call secondary first, to give lower priority\n         defValue = _secondary.findSerializationInclusion(a, defValue);\n         defValue = _primary.findSerializationInclusion(a, defValue);\n         return defValue;\n     }\n+\n+    @Override\n+    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)\n+    {\n+        // note: call secondary first, to give lower priority\n+        defValue = _secondary.findSerializationInclusion(a, defValue);\n+        defValue = _primary.findSerializationInclusion(a, defValue);\n+        return defValue;\n+    }\n     \n     @Override\n     public Class<?> findSerializationType(Annotated a) {\n-    \tClass<?> r = _primary.findSerializationType(a);\n+        Class<?> r = _primary.findSerializationType(a);\n         return (r == null) ? _secondary.findSerializationType(a) : r;\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n             }\n         }\n         return defValue;\n+    }\n+\n+    @Override\n+    public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)\n+    {\n+        JsonInclude inc = _findAnnotation(a, JsonInclude.class);\n+        return (inc == null) ? defValue : inc.content();\n     }\n \n     @Override\n      * Helper method called to construct and initialize instance of {@link TypeResolverBuilder}\n      * if given annotated element indicates one is needed.\n      */\n+    @SuppressWarnings(\"deprecation\")\n     protected TypeResolverBuilder<?> _findTypeResolver(MapperConfig<?> config,\n             Annotated ann, JavaType baseType)\n     {", "timestamp": 1413525688, "metainfo": ""}