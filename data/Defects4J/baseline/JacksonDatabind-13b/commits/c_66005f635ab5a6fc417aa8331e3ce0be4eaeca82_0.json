{"sha": "66005f635ab5a6fc417aa8331e3ce0be4eaeca82", "log": "Merge pull request #192 from christophercurrie/propNames  Honor detected constructor properties/names", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n                 creators.setDefaultCreator(defaultCtor);\n             }\n         }\n-        \n+\n+        String[] ctorPropNames = null;\n+        AnnotatedConstructor propertyCtor = null;\n+        for (BeanPropertyDefinition propDef : beanDesc.findProperties()) {\n+            if (propDef.getConstructorParameter() != null) {\n+                AnnotatedParameter param = propDef.getConstructorParameter();\n+                AnnotatedWithParams owner = param.getOwner();\n+                if (owner instanceof AnnotatedConstructor) {\n+                    if (propertyCtor == null) {\n+                        propertyCtor = (AnnotatedConstructor) owner;\n+                        ctorPropNames = new String[propertyCtor.getParameterCount()];\n+                    }\n+                    ctorPropNames[param.getIndex()] = propDef.getName();\n+                }\n+            }\n+        }\n+\n         for (AnnotatedConstructor ctor : beanDesc.getConstructors()) {\n             int argCount = ctor.getParameterCount();\n-            boolean isCreator = intr.hasCreatorAnnotation(ctor);\n+            boolean isCreator = intr.hasCreatorAnnotation(ctor) || ctor == propertyCtor;\n             boolean isVisible =  vchecker.isCreatorVisible(ctor);\n             // some single-arg constructors (String, number) are auto-detected\n             if (argCount == 1) {\n+                String name = ctor == propertyCtor ? ctorPropNames[0] : null;\n                 _handleSingleArgumentConstructor(ctxt, beanDesc, vchecker, intr, creators,\n-                        ctor, isCreator, isVisible);\n+                        ctor, isCreator, isVisible, name);\n                 continue;\n             }\n             if (!isCreator && !isVisible) {\n             CreatorProperty[] properties = new CreatorProperty[argCount];\n             for (int i = 0; i < argCount; ++i) {\n                 AnnotatedParameter param = ctor.getParameter(i);\n-                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n-                String name = (pn == null) ? null : pn.getSimpleName();\n+                String name = null;\n+                if (ctor == propertyCtor) {\n+                    name = ctorPropNames[i];\n+                }\n+                if (name == null) {\n+                    PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n+                    name = (pn == null) ? null : pn.getSimpleName();\n+                }\n                 Object injectId = intr.findInjectableValueId(param);\n                 if (name != null && name.length() > 0) {\n                     ++namedCount;\n     protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt,\n             BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n             AnnotationIntrospector intr, CreatorCollector creators,\n-            AnnotatedConstructor ctor, boolean isCreator, boolean isVisible)\n+            AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name)\n         throws JsonMappingException\n     {\n         // note: if we do have parameter name, it'll be \"property constructor\":\n         AnnotatedParameter param = ctor.getParameter(0);\n-        PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n-        String name = (pn == null) ? null : pn.getSimpleName();\n+        if (name == null) {\n+            PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n+            name = (pn == null) ? null : pn.getSimpleName();\n+        }\n         Object injectId = intr.findInjectableValueId(param);\n     \n         if ((injectId != null) || (name != null && name.length() > 0)) { // property-based\n         }\n         return false;\n     }\n-    \n+\n     protected void _addDeserializerFactoryMethods\n         (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n          AnnotationIntrospector intr, CreatorCollector creators)", "timestamp": 1363629738, "metainfo": ""}