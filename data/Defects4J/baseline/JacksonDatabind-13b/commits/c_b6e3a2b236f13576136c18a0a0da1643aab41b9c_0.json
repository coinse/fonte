{"sha": "b6e3a2b236f13576136c18a0a0da1643aab41b9c", "log": "add javadoc comments to points out potential cost of module discovery methods in ObjectMapper.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n     /**\n      * Method for locating available methods, using JDK {@link ServiceLoader}\n      * facility, along with module-provided SPI.\n+     *<p>\n+     * Note that method does not do any caching, so calls should be considered\n+     * potentially expensive.\n      * \n      * @since 2.2\n      */\n     /**\n      * Method for locating available methods, using JDK {@link ServiceLoader}\n      * facility, along with module-provided SPI.\n+     *<p>\n+     * Note that method does not do any caching, so calls should be considered\n+     * potentially expensive.\n      * \n      * @since 2.2\n      */\n      *<code>\n      *   mapper.registerModules(mapper.findModules());\n      *<code>\n+     *<p>\n+     * As with {@link #findModules()}, no caching is done for modules, so care\n+     * needs to be taken to either create and share a single mapper instance;\n+     * or to cache introspected set of modules.\n      *\n      * @since 2.2\n      */", "timestamp": 1365727307, "metainfo": ""}