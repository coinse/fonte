{"sha": "3cbb1d2ba1e9d9406b3786f062653ea5eaa2ac64", "log": "Fix issue [JACKSON-814]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java\n \n     /**\n      * This constant defines the date format specified by\n-     * RFC 1123.\n+     * RFC 1123 / RFC 822.\n      */\n     protected final static String DATE_FORMAT_STR_RFC1123 = \"EEE, dd MMM yyyy HH:mm:ss zzz\";\n \n         /* Another important thing: let's force use of GMT for\n          * baseline DataFormat objects\n          */\n-        DATE_FORMAT_RFC1123 = new SimpleDateFormat(DATE_FORMAT_STR_RFC1123);\n+        DATE_FORMAT_RFC1123 = new SimpleDateFormat(DATE_FORMAT_STR_RFC1123, Locale.US);\n         DATE_FORMAT_RFC1123.setTimeZone(DEFAULT_TIMEZONE);\n         DATE_FORMAT_ISO8601 = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601);\n         DATE_FORMAT_ISO8601.setTimeZone(DEFAULT_TIMEZONE);\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java\n \n     public void testDateUtilRFC1123() throws Exception\n     {\n-        DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\");\n+        DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n         // let's use an arbitrary value...\n         String inputStr = \"Sat, 17 Jan 2009 06:13:58 +0000\";\n         java.util.Date inputDate = fmt.parse(inputStr);\n         assertEquals(inputDate, MAPPER.readValue(\"\\\"\"+inputStr+\"\\\"\", java.util.Date.class));\n+    }\n+\n+    public void testDateUtilRFC1123OnNonUSLocales() throws Exception\n+    {\n+        Locale old = Locale.getDefault();\n+        Locale.setDefault(Locale.GERMAN);\n+        DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n+        // let's use an arbitrary value...\n+        String inputStr = \"Sat, 17 Jan 2009 06:13:58 +0000\";\n+        java.util.Date inputDate = fmt.parse(inputStr);\n+        assertEquals(inputDate, MAPPER.readValue(\"\\\"\"+inputStr+\"\\\"\", java.util.Date.class));\n+        Locale.setDefault(old);\n     }\n \n     /**\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java\n     public void testDateMap() throws Exception\n     {\n     \t Date date1=new Date(123456000L);\n-    \t DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\");\n+    \t DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n          \n     \t String JSON = \"{ \\\"\"+  fmt.format(date1)+\"\\\" : \\\"\\\", \\\"\"+new Date(0).getTime()+\"\\\" : null }\";\n     \t HashMap<Date,String> result=  MAPPER.readValue\n     {\n     \t Calendar c = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n          c.setTimeInMillis(123456000L);\n-         DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\");\n+         DateFormat fmt = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n     \t String JSON = \"{ \\\"\"+fmt.format(c.getTime())+\"\\\" : \\\"\\\", \\\"\"+new Date(0).getTime()+\"\\\" : null }\";\n     \t HashMap<Calendar,String> result = MAPPER.readValue\n     \t            (JSON, new TypeReference<HashMap<Calendar,String>>() { });", "timestamp": 1332286964, "metainfo": ""}