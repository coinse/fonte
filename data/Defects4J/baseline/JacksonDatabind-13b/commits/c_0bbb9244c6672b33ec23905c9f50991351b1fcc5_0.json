{"sha": "0bbb9244c6672b33ec23905c9f50991351b1fcc5", "log": "Add a unit test repro for #556", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestCreatorWithNamingStrategy556.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedMember;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;\n+import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\n+\n+public class TestCreatorWithNamingStrategy556\n+    extends BaseMapTest\n+{\n+    static class CreatorBean\n+    {\n+        protected String myName;\n+        protected int myAge;\n+\n+        @JsonCreator\n+        public CreatorBean(int myAge, String myName)\n+        {\n+            this.myName = myName;\n+            this.myAge = myAge;\n+        }\n+    }\n+\n+    @SuppressWarnings(\"serial\")\n+    static class MyParamIntrospector extends JacksonAnnotationIntrospector\n+    {\n+        @Override\n+        public String findImplicitPropertyName(AnnotatedMember param) {\n+            if (param instanceof AnnotatedParameter) {\n+                AnnotatedParameter ap = (AnnotatedParameter) param;\n+                switch (ap.getIndex()) {\n+                case 0: return \"myName\";\n+                case 1: return \"myAge\";\n+                default:\n+                    return \"param\"+ap.getIndex();\n+                }\n+            }\n+            return super.findImplicitPropertyName(param);\n+        }\n+    }\n+    \n+    private final ObjectMapper MAPPER = new ObjectMapper()\n+            .setPropertyNamingStrategy(PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE)\n+            ;\n+    {\n+        MAPPER.setAnnotationIntrospector(new MyParamIntrospector());\n+    }\n+\n+    public void testPascalCaseWithImplicitNames() throws Exception\n+    {\n+        CreatorBean bean = MAPPER.readValue(\"{ \\\"MyAge\\\" : 42,  \\\"MyName\\\" : \\\"NotMyRealName\\\" }\", CreatorBean.class);\n+        assertEquals(42, bean.myAge);\n+        assertEquals(\"NotMyRealName\", bean.myName);\n+    }\n+\n+}", "timestamp": 1411536355, "metainfo": ""}