{"sha": "6b10186b77e0f6bedb0b5add3a0a9dee18912682", "log": "adding first test trying to reproduce #501", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestSetterlessProperties.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestSetterlessProperties.java\n public class TestSetterlessProperties\n     extends BaseMapTest\n {\n-    /*\n-    /**********************************************************\n-    /* Helper beans\n-    /**********************************************************\n-     */\n-\n     static class CollectionBean\n     {\n         List<String> _values = new ArrayList<String>();\n         }\n     }\n \n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n+    static class Poly {\n+        public int id;\n+\n+        public Poly(int id) { this.id = id; }\n+        protected Poly() { this(0); }\n+    }\n+\n+    static class Issue501Bean {\n+        protected Map<String,Poly> m = new HashMap<String,Poly>();\n+        protected List<Poly> l = new ArrayList<Poly>();\n+\n+        protected Issue501Bean() { }\n+        public Issue501Bean(String key, Poly value) {\n+            m.put(key, value);\n+            l.add(value);\n+        }\n+        \n+        public List<Poly> getList(){\n+            return l;\n+        }\n+        public Map<String,Poly> getMap(){\n+            return m;\n+        }\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Unit tests\n         assertNotNull(value);\n         assertEquals(3, value.values.size());\n     }\n+\n+    public void testSetterlessWithPolymorphic() throws Exception\n+    {\n+        Issue501Bean input = new Issue501Bean(\"a\", new Poly(13));\n+        ObjectMapper m = new ObjectMapper();\n+        assertTrue(m.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS));\n+        \n+        String json = m.writeValueAsString(input);\n+        \n+        Issue501Bean output = m.readValue(json, Issue501Bean.class);\n+        assertNotNull(output);\n+\n+        assertEquals(1, output.l.size());\n+        assertEquals(1, output.m.size());\n+\n+        assertEquals(13, output.l.get(0).id);\n+        Poly p = output.m.get(\"a\");\n+        assertNotNull(p);\n+        assertEquals(13, p.id);\n+    }\n }", "timestamp": 1405120229, "metainfo": ""}