{"sha": "daa3a330cef69ebdb05316ff1fc5d833aef760b0", "log": "Add tests for handling JsonCreator.Mode.DISABLED, as well as basic handling (modules probably should use it too)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n          */\n         return _hasAnnotation(am, JsonAnyGetter.class);\n     }\n-    \n+\n     @Override\n     public boolean hasCreatorAnnotation(Annotated a)\n     {\n          * if needs to be ignored (and if so, is handled prior\n          * to this method getting called)\n          */\n-        return _hasAnnotation(a, JsonCreator.class);\n+         JsonCreator ann = _findAnnotation(a, JsonCreator.class);\n+         return (ann != null && ann.mode() != JsonCreator.Mode.DISABLED);\n     }\n \n     @Override\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/creators/DisablingCreatorsTest.java\n+package com.fasterxml.jackson.databind.creators;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.*;\n+\n+/**\n+ * Tests to ensure one can disable {@link JsonCreator} annotations.\n+ */\n+public class DisablingCreatorsTest extends BaseMapTest\n+{\n+     static class ConflictingCreators {\n+          @JsonCreator(mode=JsonCreator.Mode.PROPERTIES)\n+          public ConflictingCreators(@JsonProperty(\"foo\") String foo) { }\n+          @JsonCreator(mode=JsonCreator.Mode.PROPERTIES)\n+          public ConflictingCreators(@JsonProperty(\"foo\") String foo,\n+                    @JsonProperty(\"value\") int value) { }\n+     }\n+\n+     static class NonConflictingCreators {\n+          public String _value;\n+          \n+          @JsonCreator(mode=JsonCreator.Mode.DELEGATING)\n+          public NonConflictingCreators(String foo) { _value = foo; }\n+\n+          @JsonCreator(mode=JsonCreator.Mode.DISABLED)\n+          public NonConflictingCreators(String foo, int value) { }\n+     }\n+\n+     /*\n+     /**********************************************************\n+     /* Helper methods\n+     /**********************************************************\n+      */\n+\n+     public void testDisabling() throws Exception\n+     {\n+          final ObjectMapper mapper = objectMapper();\n+\n+          // first, non-problematic case\n+          NonConflictingCreators value = mapper.readValue(quote(\"abc\"), NonConflictingCreators.class);\n+          assertNotNull(value);\n+          assertEquals(\"abc\", value._value);\n+\n+          // then something that ought to fail\n+          try {\n+               /*ConflictingCreators value =*/ mapper.readValue(quote(\"abc\"), ConflictingCreators.class);\n+               fail(\"Should have failed with JsonCreator conflict\");\n+          } catch (JsonProcessingException e) {\n+               verifyException(e, \"Conflicting property-based creators\");\n+          }\n+     }\n+}", "timestamp": 1419102625, "metainfo": ""}