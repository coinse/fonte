{"sha": "6cdd268bbcff8ace18da14ac32e7bbd08088fec2", "log": "start working on TokenBuffer improvements", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n \n     /*\n     /**********************************************************\n+    /* JsonGenerator implementation: capability introspection\n+    /**********************************************************\n+     */\n+    \n+    /**\n+     * Since we can efficiently store <code>byte[]</code>, yes.\n+     */\n+    @Override\n+    public boolean canWriteBinaryNatively() {\n+        return true;\n+    }\n+    \n+    /*\n+    /**********************************************************\n     /* JsonGenerator implementation: low-level output handling\n     /**********************************************************\n      */\n--- a/src/test/java/com/fasterxml/jackson/databind/util/TestTokenBuffer.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/util/TestTokenBuffer.java\n package com.fasterxml.jackson.databind.util;\n \n import java.io.*;\n+import java.util.UUID;\n \n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.core.util.JsonParserSequence;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n \n public class TestTokenBuffer extends com.fasterxml.jackson.test.BaseTest\n {\n         jp.close();\n         buf.close();\n     }\n-\n+    \n     public void testSimpleObject() throws IOException\n     {\n         TokenBuffer buf = new TokenBuffer(null, false);\n         jp.close();\n         buf1.close();\n         buf2.close();\n+    }\n+\n+    // Since 2.3 had big changes to UUID handling, let's verify we can\n+    // deal with\n+    public void testWithUUID() throws IOException\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        TokenBuffer buf = new TokenBuffer(mapper, false); // no ObjectCodec\n+        UUID uuid = UUID.fromString(\"76e6d183-5f68-4afa-b94a-922c1fdb83f8\");\n+        mapper.writeValue(buf, uuid);\n+        buf.close();\n+\n+        // and bring it back\n+        UUID out = mapper.readValue(buf.asParser(), UUID.class);\n+        assertEquals(uuid, out);\n     }\n     \n     /*", "timestamp": 1379186480, "metainfo": ""}