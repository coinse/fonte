{"sha": "a748091460ff20609d4f0699c7440f2cb56103b9", "log": "javadoc improvement", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n \n     /**\n      * Reverse of {@link #treeToValue}; given a value (usually bean), will\n-     * construct equivalent JSON Tree representation. Functionally same\n-     * as if serializing value into JSON and parsing JSON as tree, but\n+     * construct equivalent JSON Tree representation. Functionally similar\n+     * to serializing value into JSON and parsing JSON as tree, but\n      * more efficient.\n+     *<p>\n+     * NOTE: one known difference from actual serialization is that so-called\n+     * \"raw values\" are not supported -- since they are opaque sequence of\n+     * bytes to include (which may or may not be supported by the backend)\n+     * they can not be converted using this method. It may be possible to\n+     * support conversions using full serialization, if raw values must be\n+     * preserved.\n      * \n      * @param <T> Actual node type; usually either basic {@link JsonNode} or\n      *  {@link com.fasterxml.jackson.databind.node.ObjectNode}", "timestamp": 1386195524, "metainfo": ""}