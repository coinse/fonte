{"sha": "573216bca927b9406f77d4db5e45c523d4dbb7d9", "log": "Merge pull request #600 from stackmagic/ser-feat-doc-fix  Doc Fix for SerializationFeature.INDENT_OUTPUT", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializationFeature.java\n     /* Generic output features\n     /******************************************************\n      */\n-    \n+\n     /**\n      * Feature that can be enabled to make root value (usually JSON\n      * Object but can be any type) wrapped within a single property\n      * method to use any <code>PrettyPrinter</code> instance.\n      * This feature will only allow using the default implementation.\n      *<p>\n-     * Feature is enabled by default.\n+     * Feature is disabled by default.\n      */\n     INDENT_OUTPUT(false),\n-    \n+\n     /*\n     /******************************************************\n     /* Error handling features\n     /******************************************************\n      */\n-    \n+\n     /**\n      * Feature that determines what happens when no accessors are\n      * found for a type (and there are no annotations to indicate\n      * @since 2.4\n      */\n     FAIL_ON_SELF_REFERENCES(true),\n-    \n+\n     /**\n      * Feature that determines whether Jackson code should catch\n      * and wrap {@link Exception}s (but never {@link Error}s!)\n     /* Output life cycle features\n     /******************************************************\n      */\n-    \n+\n      /**\n       * Feature that determines whether <code>close</code> method of\n       * serialized <b>root level</b> objects (ones for which <code>ObjectMapper</code>'s\n       * writeValue() (or equivalent) method is called)\n-      * that implement {@link java.io.Closeable} \n+      * that implement {@link java.io.Closeable}\n       * is called after serialization or not. If enabled, <b>close()</b> will\n       * be called after serialization completes (whether succesfully, or\n       * due to an error manifested by an exception being thrown). You can\n      * Feature is enabled by default.\n      */\n     FLUSH_AFTER_WRITE_VALUE(true),\n-     \n+\n     /*\n     /******************************************************\n     /* Datatype-specific serialization configuration\n      * Feature is disabled by default.\n      */\n     WRITE_ENUMS_USING_INDEX(false),\n-    \n+\n     /**\n      * Feature that determines whether Map entries with null values are\n      * to be serialized (true) or not (false).\n      * Feature is enabled by default.\n      */\n     WRITE_EMPTY_JSON_ARRAYS(true),\n-    \n+\n     /**\n      * Feature added for interoperability, to work with oddities of\n      * so-called \"BadgerFish\" convention.\n      * Feature is disabled by default.\n      */\n     WRITE_BIGDECIMAL_AS_PLAIN(false),\n-    \n+\n     /**\n      * Feature that controls whether numeric timestamp values are\n      * to be written using nanosecond timestamps (enabled) or not (disabled);\n      * This is the counterpart to {@link SerializationFeature#WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS}.\n      *<p>\n      * Feature is enabled by default, to support most accurate time values possible.\n-     * \n+     *\n      * @since 2.2\n      */\n-    WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS(true),    \n-    \n+    WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS(true),\n+\n     /**\n      * Feature that determines whether {@link java.util.Map} entries are first\n      * sorted by key before serialization or not: if enabled, additional sorting\n      * feature: only consider that if there are actual perceived problems.\n      *<p>\n      * Feature is enabled by default.\n-     * \n+     *\n      * @since 2.1\n      */\n     EAGER_SERIALIZER_FETCH(true),\n      *<p>\n      * Feature is disabled by default; meaning that strict identity is used, not\n      * <code>equals()</code>\n-     * \n+     *\n      * @since 2.3\n      */\n     USE_EQUALITY_FOR_OBJECT_ID(false)\n     ;\n \n     private final boolean _defaultState;\n-    \n+\n     private SerializationFeature(boolean defaultState) {\n         _defaultState = defaultState;\n     }", "timestamp": 1415207895, "metainfo": ""}