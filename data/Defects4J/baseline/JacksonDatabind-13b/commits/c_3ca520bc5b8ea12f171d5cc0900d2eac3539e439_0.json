{"sha": "3ca520bc5b8ea12f171d5cc0900d2eac3539e439", "log": "Add a failing test for #312 (no time to work on for 2.5, hope to do in 2.6; non-trivial to solve)", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestOverlappingTypeIdNames312.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestOverlappingTypeIdNames312 extends BaseMapTest\n+{\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\")\n+    @JsonSubTypes({\n+            @JsonSubTypes.Type(name = \"a\", value = Impl312.class),\n+            @JsonSubTypes.Type(name = \"b\", value = Impl312.class)\n+    })\n+    static abstract class Base312 { }\n+\n+    static class Impl312 extends Base312 {\n+        public int x;\n+    }\n+    \n+    public void testOverlappingNameDeser() throws Exception\n+    {\n+        final ObjectMapper mapper = objectMapper();\n+        Base312 value;\n+\n+        // Ensure both type ids are acceptable\n+\n+        value = mapper.readValue(aposToQuotes(\"{'type':'a','x':7}\"), Base312.class);\n+        assertNotNull(value);\n+        assertEquals(Impl312.class, value.getClass());\n+        assertEquals(7, ((Impl312) value).x);\n+        \n+        value = mapper.readValue(aposToQuotes(\"{'type':'b','x':3}\"), Base312.class);\n+        assertNotNull(value);\n+        assertEquals(Impl312.class, value.getClass());\n+        assertEquals(3, ((Impl312) value).x);\n+    }\n+}", "timestamp": 1419035643, "metainfo": ""}