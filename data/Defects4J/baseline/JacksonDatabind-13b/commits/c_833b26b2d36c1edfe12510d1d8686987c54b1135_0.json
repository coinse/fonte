{"sha": "833b26b2d36c1edfe12510d1d8686987c54b1135", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n         boolean visible;\n \n         PropertyName pn = (ai == null) ? null : ai.findNameForSerialization(m);\n-        String explName = (pn == null) ? null : pn.getSimpleName();\n-        \n-        boolean nameExplicit = (explName != null);\n+        boolean nameExplicit = (pn != null);\n \n         if (!nameExplicit) { // no explicit name; must follow naming convention\n             implName = BeanUtil.okNameForRegularGetter(m, m.getName());\n             if (implName == null) {\n                 implName = m.getName();\n             }\n-            if (explName.length() == 0) {\n+            if (pn.isEmpty()) {\n+                // !!! TODO: use PropertyName for implicit names too\n+                pn = _propNameFromSimple(implName);\n                 nameExplicit = false;\n-                explName = implName;\n             }\n             visible = true;\n         }\n         boolean ignore = (ai == null) ? false : ai.hasIgnoreMarker(m);\n-        _property(implName).addGetter(m, explName, nameExplicit, visible, ignore);\n+        _property(implName).addGetter(m, pn, nameExplicit, visible, ignore);\n     }\n     \n     protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai)", "timestamp": 1396238016, "metainfo": ""}