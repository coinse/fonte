{"sha": "aec6276a997038c962bed7821c7013852ba321b5", "log": "Improve javadocs for SimpleModule", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/module/SimpleModule.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/module/SimpleModule.java\n import com.fasterxml.jackson.databind.ser.BeanSerializerModifier;\n \n /**\n- * Simple {@link Module} implementation that allows registration\n- * of serializers and deserializers, and bean serializer\n- * and deserializer modifiers.\n+ * Vanilla {@link Module} implementation that allows registration\n+ * of serializers and deserializers, bean serializer\n+ * and deserializer modifiers, registration of subtypes and mix-ins\n+ * as well as some other commonly\n+ * needed aspects (addition of custom {@link AbstractTypeResolver}s,\n+ * {@link com.fasterxml.jackson.databind.deser.ValueInstantiator}s).\n+ *<p>\n+ * NOTE: although it is not expected that sub-types should need to\n+ * override {@link #setupModule(SetupContext)} method, if they choose\n+ * to do so they MUST call <code>super.setupModule(context);</code>\n+ * to ensure that registration works as expected.\n  */\n public class SimpleModule\n     extends Module\n     implements java.io.Serializable\n {\n-    private static final long serialVersionUID = 3132264350026957446L;\n+    // at 2.4.0:\n+    private static final long serialVersionUID = -8905749147637667249L;\n \n     protected final String _name;\n     protected final Version _version;\n         return _name;\n     }\n \n+    /**\n+     * Standard implementation handles registration of all configured\n+     * customizations: it is important that sub-classes call this \n+     * implementation (usually before additional custom logic)\n+     * if they choose to override it; otherwise customizations\n+     * will not be registered.\n+     */\n     @Override\n     public void setupModule(SetupContext context)\n     {\n     }\n \n     @Override\n-    public Version version() {\n-        return _version;\n-    }\n+    public Version version() { return _version; }\n }", "timestamp": 1396847028, "metainfo": ""}