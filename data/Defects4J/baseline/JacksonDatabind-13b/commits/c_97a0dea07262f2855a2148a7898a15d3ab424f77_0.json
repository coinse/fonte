{"sha": "97a0dea07262f2855a2148a7898a15d3ab424f77", "log": "Implemented #425, to migrate from \"NoClass.class\" to using \"Void\"", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;\n import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n-import com.fasterxml.jackson.databind.annotation.NoClass;\n import com.fasterxml.jackson.databind.cfg.MapperConfig;\n import com.fasterxml.jackson.databind.jsontype.NamedType;\n import com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder;\n+import com.fasterxml.jackson.databind.util.ClassUtil;\n import com.fasterxml.jackson.databind.util.NameTransformer;\n \n /**\n     @Override\n     public Object findSerializer(Annotated am) {\n         Object r = _primary.findSerializer(am);\n-        return (r == null) ? _secondary.findSerializer(am) : r;\n+        return _isExplicitClassOrOb(r, JsonSerializer.None.class)\n+                ? r : _secondary.findSerializer(am);\n     }\n     \n     @Override\n     public Object findKeySerializer(Annotated a) {\n         Object r = _primary.findKeySerializer(a);\n-        return (r == null || r == JsonSerializer.None.class || r == NoClass.class) ?\n-        \t\t_secondary.findKeySerializer(a) : r;\n+        return _isExplicitClassOrOb(r, JsonSerializer.None.class)\n+        \t\t? r : _secondary.findKeySerializer(a);\n     }\n \n     @Override\n     public Object findContentSerializer(Annotated a) {\n-    \tObject r = _primary.findContentSerializer(a);\n-        return (r == null || r == JsonSerializer.None.class || r == NoClass.class) ?\n-        \t\t_secondary.findContentSerializer(a) : r;\n+        Object r = _primary.findContentSerializer(a);\n+        return _isExplicitClassOrOb(r, JsonSerializer.None.class)\n+        \t\t? r : _secondary.findContentSerializer(a);\n     }\n     \n     @Override\n     public Object findNullSerializer(Annotated a) {\n-        Object result = _primary.findNullSerializer(a);\n-        if (result == null || result == JsonSerializer.None.class || result == NoClass.class) {\n-            result = _secondary.findNullSerializer(a);\n-        }\n-        return result;\n+        Object r = _primary.findNullSerializer(a);\n+        return _isExplicitClassOrOb(r, JsonSerializer.None.class)\n+                ? r : _secondary.findNullSerializer(a);\n     }\n     \n     @Override\n     @Override\n     public Object findDeserializer(Annotated am) {\n         Object r = _primary.findDeserializer(am);\n-        return (r == null) ? _secondary.findDeserializer(am) : r;\n+        return _isExplicitClassOrOb(r, JsonDeserializer.None.class)\n+                ? r : _secondary.findDeserializer(am);\n     }\n     \n     @Override\n     public Object findKeyDeserializer(Annotated am) {\n-        Object result = _primary.findKeyDeserializer(am);\n-        return (result == null || result == KeyDeserializer.None.class || result == NoClass.class) ?\n-                _secondary.findKeyDeserializer(am) : result;\n+        Object r = _primary.findKeyDeserializer(am);\n+        return _isExplicitClassOrOb(r, KeyDeserializer.None.class)\n+                ? r : _secondary.findKeyDeserializer(am);\n     }\n \n     @Override\n     public Object findContentDeserializer(Annotated am) {\n-        Object result = _primary.findContentDeserializer(am);\n-        return (result == null || result == JsonDeserializer.None.class || result == NoClass.class) ?\n-                _secondary.findContentDeserializer(am) : result;\n+        Object r = _primary.findContentDeserializer(am);\n+        return _isExplicitClassOrOb(r, JsonDeserializer.None.class)\n+                ? r : _secondary.findContentDeserializer(am);\n     }\n     \n     @Override\n     public Class<?> findDeserializationType(Annotated am, JavaType baseType) {\n-        Class<?> result = _primary.findDeserializationType(am, baseType);\n-        return (result == null) ? _secondary.findDeserializationType(am, baseType) : result;\n+        Class<?> r = _primary.findDeserializationType(am, baseType);\n+        return (r != null) ? r : _secondary.findDeserializationType(am, baseType);\n     }\n \n     @Override\n     public boolean hasCreatorAnnotation(Annotated a) {\n         return _primary.hasCreatorAnnotation(a) || _secondary.hasCreatorAnnotation(a);\n     }\n- }\n+\n+    protected boolean _isExplicitClassOrOb(Object maybeCls, Class<?> implicit) {\n+        if (maybeCls == null) {\n+            return false;\n+        }\n+        if (!(maybeCls instanceof Class<?>)) {\n+            return true;\n+        }\n+        Class<?> cls = (Class<?>) maybeCls;\n+        return (cls != implicit && !ClassUtil.isBogusClass(cls));\n+    }\n+}\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java\n     protected final JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt) throws IOException\n     {\n         /* 06-Feb-2013, tatu: As per [Issue#148], consider default implementation value of\n-         *   {@link NoClass} to mean \"serialize as null\"; as well as DeserializationFeature\n+         *   {@link java.lang.Void} to mean \"serialize as null\"; as well as DeserializationFeature\n          *   to do swift mapping to null\n          */\n         if (_defaultImpl == null) {", "timestamp": 1400568915, "metainfo": ""}