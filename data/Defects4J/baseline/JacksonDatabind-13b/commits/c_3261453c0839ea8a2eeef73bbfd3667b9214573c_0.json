{"sha": "3261453c0839ea8a2eeef73bbfd3667b9214573c", "log": "update release notes", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestAnyGetter.java\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.SerializationFeature;\n \n-public class TestAnyGetter\n-    extends BaseMapTest\n+public class TestAnyGetter extends BaseMapTest\n {\n-    /*\n-    /**********************************************************\n-    /* Helper bean classes\n-    /**********************************************************\n-     */\n-\n     static class Bean\n     {\n         final static Map<String,Boolean> extra = new HashMap<String,Boolean>();\n         }\n     }\n \n+    static class MapAsAny\n+    {\n+        protected Map<String,Object> stuff = new LinkedHashMap<String,Object>();\n+        \n+        @JsonAnyGetter\n+        public Map<String,Object> any() {\n+            return stuff;\n+        }\n+\n+        public void add(String key, Object value) {\n+            stuff.put(key, value);\n+        }\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Test cases\n     /**********************************************************\n      */\n \n+    private final ObjectMapper MAPPER = new ObjectMapper();\n+    \n     public void testSimpleJsonValue() throws Exception\n     {\n-        ObjectMapper m = new ObjectMapper();\n-        String json = serializeAsString(m, new Bean());\n-        Map<?,?> map = m.readValue(json, Map.class);\n+        String json = MAPPER.writeValueAsString(new Bean());\n+        Map<?,?> map = MAPPER.readValue(json, Map.class);\n         assertEquals(2, map.size());\n         assertEquals(Integer.valueOf(3), map.get(\"x\"));\n         assertEquals(Boolean.TRUE, map.get(\"a\"));\n         json = serializeAsString(m, new AnyOnlyBean());\n         assertEquals(\"{\\\"a\\\":3}\", json);\n     }\n+\n+    // Trying to repro [databind#577]\n+    public void testAnyWithNull() throws Exception\n+    {\n+        MapAsAny input = new MapAsAny();\n+        input.add(\"bar\", null);\n+        assertEquals(aposToQuotes(\"{'bar':null}\"),\n+                MAPPER.writeValueAsString(input));\n+    }\n }", "timestamp": 1412740081, "metainfo": ""}