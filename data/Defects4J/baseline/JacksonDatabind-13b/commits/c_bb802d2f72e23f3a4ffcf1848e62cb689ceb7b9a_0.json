{"sha": "bb802d2f72e23f3a4ffcf1848e62cb689ceb7b9a", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n import com.fasterxml.jackson.databind.type.TypeFactory;\n import com.fasterxml.jackson.databind.util.ArrayBuilders;\n import com.fasterxml.jackson.databind.util.ObjectBuffer;\n-\n \n /**\n  * Context for deserialization process. Used to allow passing in configuration\n      * Returns provider that can be used for dynamically locating\n      * other deserializers during runtime.\n      */\n-    public DeserializerProvider getDeserializerProvider() {\n-        // will be overridden by impl class\n-        return null;\n-    }\n-\n-    public AnnotationIntrospector getAnnotationIntrospector() {\n+    public abstract DeserializerProvider getDeserializerProvider();\n+\n+    public final AnnotationIntrospector getAnnotationIntrospector() {\n         return _config.getAnnotationIntrospector();\n     }\n     \n      * Convenience method for checking whether specified on/off\n      * feature is enabled\n      */\n-    public boolean isEnabled(DeserializationConfig.Feature feat) {\n+    public final boolean isEnabled(DeserializationConfig.Feature feat) {\n         /* 03-Dec-2010, tatu: minor shortcut; since this is called quite often,\n          *   let's use a local copy of feature settings:\n          */\n         return _config.getNodeFactory();\n     }\n \n-    public JavaType constructType(Class<?> cls) {\n+    public final JavaType constructType(Class<?> cls) {\n         return _config.constructType(cls);\n     }\n \n-    public TypeFactory getTypeFactory() {\n+    public final TypeFactory getTypeFactory() {\n         return _config.getTypeFactory();\n     }\n ", "timestamp": 1327386789, "metainfo": ""}