{"sha": "d352f0cbe16d7000546bc674a1b70fed7988f4a1", "log": "Move #88 test case out of 'failing' (passes now)", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForTreeNodes.java\n+package com.fasterxml.jackson.databind.jsontype;\n+\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestDefaultForTreeNodes extends BaseMapTest\n+{\n+    public static class Foo {\n+        public String bar;\n+\n+        public Foo() { }\n+        public Foo(String b) { bar = b; }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+\n+    private final ObjectMapper DEFAULT_MAPPER = new ObjectMapper();\n+    {\n+        DEFAULT_MAPPER.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);\n+    }\n+    \n+    public void testValueAsStringWithDefaultTyping() throws Exception\n+    {\n+        Foo foo = new Foo(\"baz\");\n+        String json = DEFAULT_MAPPER.writeValueAsString(foo);\n+\n+        JsonNode jsonNode = DEFAULT_MAPPER.readTree(json);\n+        assertEquals(jsonNode.get(\"bar\").textValue(), foo.bar);\n+    }\n+\n+    public void testValueToTreeWithDefaultTyping() throws Exception\n+    {\n+        Foo foo = new Foo(\"baz\");\n+        JsonNode jsonNode = DEFAULT_MAPPER.valueToTree(foo);\n+        assertEquals(jsonNode.get(\"bar\").textValue(), foo.bar);\n+    }\n+}", "timestamp": 1389498842, "metainfo": ""}