{"sha": "f9866ee1521073b2cfef4800f42fca424725da6e", "log": "Make it possible to create ObjectReader with alternate JsonFactory", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n         _dataFormatDetector = base._dataFormatDetector;\n     }\n \n+    protected ObjectReader(ObjectReader base, JsonFactory f)\n+    {\n+        _config = base._config;\n+        _context = base._context;\n+\n+        _rootDeserializers = base._rootDeserializers;\n+        _jsonFactory = f;\n+        _rootNames = base._rootNames;\n+\n+        _valueType = base._valueType;\n+        _rootDeserializer = base._rootDeserializer;\n+        _valueToUpdate = base._valueToUpdate;\n+        _schema = base._schema;\n+        _injectableValues = base._injectableValues;\n+        _unwrapRoot = base._unwrapRoot;\n+        _dataFormatDetector = base._dataFormatDetector;\n+    }\n+    \n     /**\n      * Method that will return version information stored in and read from jar\n      * that contains this class.\n         return _with(_config.with(f));\n     }\n \n+    /**\n+     * Method for constructing a new reader instance with configuration that uses\n+     * passed {@link JsonFactory} for constructing underlying Readers.\n+     *<p>\n+     * NOTE: only factories that <b>DO NOT REQUIRE SPECIAL MAPPERS</b>\n+     * (that is, ones that return <code>false</code> for\n+     * {@link JsonFactory#requiresCustomCodec()}) can be used: trying\n+     * to use one that requires custom codec will throw exception\n+     * \n+     * @since 2.1\n+     */\n+    public ObjectReader with(JsonFactory f) {\n+        if (f == _jsonFactory) {\n+            return this;\n+        }\n+        ObjectReader r = new ObjectReader(this, f);\n+        // Also, try re-linking, if possible...\n+        if (f.getCodec() == null) {\n+            f.setCodec(r);\n+        }\n+        return r;\n+    }\n+    \n     /**\n      * Method for constructing a new instance with configuration that\n      * specifies what root name to expect for \"root name unwrapping\".", "timestamp": 1346289366, "metainfo": ""}