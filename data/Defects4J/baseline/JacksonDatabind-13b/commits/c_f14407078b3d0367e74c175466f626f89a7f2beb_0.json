{"sha": "f14407078b3d0367e74c175466f626f89a7f2beb", "log": "Add a convenience \"no-op\" filter implementation", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/SimpleBeanPropertyFilter.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/SimpleBeanPropertyFilter.java\n  * because it can provide default implementation for any methods that may\n  * be added in {@link PropertyFilter} (as unfortunate as additions may be).\n  */\n-public abstract class SimpleBeanPropertyFilter\n+public class SimpleBeanPropertyFilter\n     implements BeanPropertyFilter, PropertyFilter\n         // sub-classes must also implement java.io.Serializable\n {\n \n     protected SimpleBeanPropertyFilter() { }\n \n+    /**\n+     * Convenience factory method that will return a \"no-op\" filter that will\n+     * simply just serialize all properties that are given, and filter out\n+     * nothing.\n+     * \n+     * @since 2.5\n+     */\n+    public static SimpleBeanPropertyFilter serializeAll(Set<String> properties) {\n+        return new FilterExceptFilter(properties);\n+    }\n+    \n     /**\n      * Factory method to construct filter that filters out all properties <b>except</b>\n      * ones includes in set\n      * Method called to determine whether property will be included\n      * (if 'true' returned) or filtered out (if 'false' returned)\n      */\n-    protected abstract boolean include(BeanPropertyWriter writer);\n-\n-    /**\n+    protected boolean include(BeanPropertyWriter writer) {\n+        return true;\n+    }\n+\n+    /**\n+     * Method called to determine whether property will be included\n+     * (if 'true' returned) or filtered out (if 'false' returned)\n+     *\n      * @since 2.3\n      */\n-    protected abstract boolean include(PropertyWriter writer);\n-\n-    /**\n-     * Method that defines what to do with container elements;\n+    protected boolean include(PropertyWriter writer) {\n+        return true;\n+    }\n+\n+    /**\n+     * Method that defines what to do with container elements\n+     * (values contained in an array or {@link java.util.Collection}:\n      * default implementation simply writes them out.\n      * \n      * @since 2.3\n--- a/src/test/java/com/fasterxml/jackson/databind/struct/PojoAsArray646Test.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/struct/PojoAsArray646Test.java\n     @JsonFormat(shape = JsonFormat.Shape.ARRAY)\n     @JsonPropertyOrder(alphabetic = true)\n     static class Outer {\n-\n-        private Map<String, TheItem> attributes;\n+        protected Map<String, TheItem> attributes;\n \n         public Outer() {\n             attributes = new HashMap<String, TheItem>();", "timestamp": 1418761340, "metainfo": ""}