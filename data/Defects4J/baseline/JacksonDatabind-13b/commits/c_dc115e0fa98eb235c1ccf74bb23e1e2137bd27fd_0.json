{"sha": "dc115e0fa98eb235c1ccf74bb23e1e2137bd27fd", "log": "Add another test for #541", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/creators/TestCreators541.java\n+package com.fasterxml.jackson.databind.creators;\n+\n+import java.util.*;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestCreators541 extends BaseMapTest\n+{\n+    static final class Foo {\n+\n+        @JsonProperty(\"foo\")\n+        private Map<Integer, Bar> foo;\n+        @JsonProperty(\"anumber\")\n+        private long anumber;\n+\n+        public Foo() {\n+            anumber = 0;\n+        }\n+\n+        public Map<Integer, Bar> getFoo() {\n+            return foo;\n+        }\n+\n+        public long getAnumber() {\n+            return anumber;\n+        }\n+    }\n+\n+    static final class Bar {\n+\n+        private final long p;\n+        private final List<String> stuff;\n+\n+        @JsonCreator\n+        public Bar(@JsonProperty(\"p\") long p, @JsonProperty(\"stuff\") List<String> stuff) {\n+            this.p = p;\n+            this.stuff = stuff;\n+        }\n+\n+        @JsonProperty(\"s\")\n+        public List<String> getStuff() {\n+            return stuff;\n+        }\n+\n+        @JsonProperty(\"stuff\")\n+        private List<String> getStuffDeprecated() {\n+            return stuff;\n+        }\n+\n+        public long getP() {\n+            return p;\n+        }\n+    }    \n+    /*\n+    /**********************************************************\n+    /* Test methods\n+    /**********************************************************\n+     */\n+\n+    public void testCreator541() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+\n+        mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n+        mapper.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);\n+        mapper.disable(\n+                MapperFeature.AUTO_DETECT_CREATORS,\n+                MapperFeature.AUTO_DETECT_FIELDS,\n+                MapperFeature.AUTO_DETECT_GETTERS,\n+                MapperFeature.AUTO_DETECT_IS_GETTERS,\n+                MapperFeature.AUTO_DETECT_SETTERS,\n+                MapperFeature.USE_GETTERS_AS_SETTERS\n+        );\n+        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);  \n+\n+        final String JSON = \"{\\n\"\n+                + \"    \\\"foo\\\": {\\n\"\n+                + \"        \\\"0\\\": {\\n\"\n+                + \"            \\\"p\\\": 0,\\n\"\n+                + \"            \\\"stuff\\\": [\\n\"\n+                + \"              \\\"a\\\", \\\"b\\\" \\n\"\n+                + \"            ]   \\n\"\n+                + \"        },\\n\"\n+                + \"        \\\"1\\\": {\\n\"\n+                + \"            \\\"p\\\": 1000,\\n\"\n+                + \"            \\\"stuff\\\": [\\n\"\n+                + \"              \\\"c\\\", \\\"d\\\" \\n\"\n+                + \"            ]   \\n\"\n+                + \"        },\\n\"\n+                + \"        \\\"2\\\": {\\n\"\n+                + \"            \\\"p\\\": 2000,\\n\"\n+                + \"            \\\"stuff\\\": [\\n\"\n+                + \"            ]   \\n\"\n+                + \"        }\\n\"\n+                + \"    },\\n\"\n+                + \"    \\\"anumber\\\": 25385874\\n\"\n+                + \"}\";\n+\n+        Foo obj = mapper.readValue(JSON, Foo.class);\n+        assertNotNull(obj);\n+        assertNotNull(obj.foo);\n+        assertEquals(3, obj.foo.size());\n+        assertEquals(25385874L, obj.getAnumber());\n+    }\n+}", "timestamp": 1416880602, "metainfo": ""}