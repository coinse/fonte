{"sha": "8221fe16c513eae3193ae7cfeaadecf3a179b7f9", "log": "Add unit tests for #88", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForScalars.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestDefaultForScalars.java\n \n import static org.junit.Assert.*;\n \n-\n import com.fasterxml.jackson.databind.*;\n \n /**\n  * Unit tests to verify that Java/JSON scalar values (non-structured values)\n  * are handled properly with respect to additional type information.\n- * \n- * @since 1.5\n- * @author tatu\n  */\n public class TestDefaultForScalars\n     extends BaseMapTest\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestNodeTypingIssue88.java\n+package com.fasterxml.jackson.failing;\n+\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.databind.*;\n+\n+public class TestNodeTypingIssue88 extends BaseMapTest\n+{\n+    public static class Foo {\n+        public String bar;\n+\n+        public Foo() { }\n+        public Foo(String b) { bar = b; }\n+    }\n+\n+    /*\n+    /**********************************************************\n+    /* Unit tests\n+    /**********************************************************\n+     */\n+    \n+    public void testValueAsStringWithDefaultTyping() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);\n+\n+        Foo foo = new Foo(\"baz\");\n+        String json = mapper.writeValueAsString(foo);\n+\n+        JsonNode jsonNode = mapper.readTree(json);\n+        assertEquals(jsonNode.get(\"bar\").textValue(), foo.bar);\n+    }\n+\n+    public void testValueToTreeWithDefaultTyping() throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);\n+\n+        Foo foo = new Foo(\"baz\");\n+        JsonNode jsonNode = mapper.valueToTree(foo);\n+        assertEquals(jsonNode.get(\"bar\").textValue(), foo.bar);\n+    }\n+}", "timestamp": 1389414070, "metainfo": ""}