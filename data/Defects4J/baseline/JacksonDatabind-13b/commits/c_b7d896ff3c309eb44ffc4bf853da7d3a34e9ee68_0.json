{"sha": "b7d896ff3c309eb44ffc4bf853da7d3a34e9ee68", "log": "Fixed #216", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n             @SuppressWarnings(\"unchecked\")\n                 Class<? extends Map<?,?>> mapValue = (Class<? extends Map<?,?>>) value;\n             _mapFallbacks.put(key.getName(), mapValue);\n-        } catch (Exception e) { // is this possible?\n+        } catch (Throwable e) { // is this possible?\n             System.err.println(\"Problems with (optional) types: \"+e);\n         }\n     }\n         _collectionFallbacks.put(Queue.class.getName(), LinkedList.class);\n \n         // then 1.6 types:\n-        _collectionFallbacks.put(java.util.Deque.class.getName(), LinkedList.class);\n-        _collectionFallbacks.put(java.util.NavigableSet.class.getName(), TreeSet.class);\n+        /* 17-May-2013, tatu: [Issue#216] Should be fine to use straight Class references EXCEPT\n+         *   that some godforsaken platforms (... looking at you, Android) do not\n+         *   include these. So, use \"soft\" references...\n+         */\n+        _collectionFallbacks.put(\"java.util.Deque\", LinkedList.class);\n+        _collectionFallbacks.put(\"java.util.NavigableSet\", TreeSet.class);\n     }\n     \n     /*\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/ext/TestJDK16OnlyTypes.java\n+package com.fasterxml.jackson.databind.ext;\n+\n+import java.util.Deque;\n+import java.util.NavigableSet;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+/**\n+ * Tests to ensure that we can handle 1.6-only types, even if\n+ * registrations are done without direct refs\n+ */\n+public class TestJDK16OnlyTypes extends com.fasterxml.jackson.databind.BaseMapTest\n+{\n+    // for [Issue#216]\n+    public void test16Types() throws Exception\n+    {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        Deque<?> dq = mapper.readValue(\"[1]\", Deque.class);\n+        assertNotNull(dq);\n+        assertEquals(1, dq.size());\n+        assertTrue(dq instanceof Deque<?>);\n+\n+        NavigableSet<?> ns = mapper.readValue(\"[ true ]\", NavigableSet.class);\n+        assertEquals(1, ns.size());\n+        assertTrue(ns instanceof NavigableSet<?>);\n+    }\n+}", "timestamp": 1368852851, "metainfo": ""}