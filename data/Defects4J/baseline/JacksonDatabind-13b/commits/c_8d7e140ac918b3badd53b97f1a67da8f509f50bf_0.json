{"sha": "8d7e140ac918b3badd53b97f1a67da8f509f50bf", "log": "...", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestCustomSerializers.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestCustomSerializers.java\n         protected int y() { return 7; }\n     }\n \n-    public static class ImmutableConverter\n-        implements Converter<Immutable, Map<String,Integer>>\n-    {\n-        @Override\n-        public Map<String, Integer> convert(Immutable value)\n-        {\n-            HashMap<String,Integer> map = new LinkedHashMap<String,Integer>();\n-            map.put(\"x\", value.x());\n-            map.put(\"y\", value.y());\n-            return map;\n-        }\n-    }\n-\n     /*\n     /**********************************************************\n     /* Unit tests\n         ObjectMapper mapper = new ObjectMapper();\n         SimpleModule module = new SimpleModule(\"test\", Version.unknownVersion());\n         module.addSerializer(new StdDelegatingSerializer(Immutable.class,\n-                new ImmutableConverter()));\n+                new Converter<Immutable, Map<String,Integer>>() {\n+                    @Override\n+                    public Map<String, Integer> convert(Immutable value)\n+                    {\n+                        HashMap<String,Integer> map = new LinkedHashMap<String,Integer>();\n+                        map.put(\"x\", value.x());\n+                        map.put(\"y\", value.y());\n+                        return map;\n+                    }\n+        }));\n         mapper.registerModule(module);\n         assertEquals(\"{\\\"x\\\":3,\\\"y\\\":7}\", mapper.writeValueAsString(new Immutable()));\n     }", "timestamp": 1349056504, "metainfo": ""}