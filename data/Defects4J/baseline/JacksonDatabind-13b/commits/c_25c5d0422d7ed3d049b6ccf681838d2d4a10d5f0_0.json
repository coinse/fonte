{"sha": "25c5d0422d7ed3d049b6ccf681838d2d4a10d5f0", "log": "minor tweak", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n         throws IOException\n     {\n         JsonToken t = p.getCurrentToken();\n-        // common case first:\n-        if (t == JsonToken.START_OBJECT) {\n+        // common case first\n+        if (t == JsonToken.START_OBJECT) { // TODO: in 2.6, use 'p.hasTokenId()'\n             if (_vanillaProcessing) {\n                 return vanillaDeserialize(p, ctxt, p.nextToken());\n             }\n          *   but let's only do that if and when that becomes necessary.\n          */\n         if (_objectIdReader != null && _objectIdReader.maySerializeAsObject()) {\n-            if (p.hasTokenId(JsonTokenId.ID_FIELD_NAME)\n+            // TODO: in 2.6, use 'p.hasTokenId()'\n+            if ((p.getCurrentTokenId() == JsonTokenId.ID_FIELD_NAME)\n                     && _objectIdReader.isValidReferencePropertyName(p.getCurrentName(), p)) {\n                 return deserializeFromObjectId(p, ctxt);\n             }\n             injectValues(ctxt, bean);\n         }\n         final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n-        for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {\n+        JsonToken t = p.getCurrentToken();\n+        for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n             String propName = p.getCurrentName();\n             p.nextToken();\n             SettableBeanProperty prop = _beanProperties.find(propName);", "timestamp": 1418329492, "metainfo": ""}