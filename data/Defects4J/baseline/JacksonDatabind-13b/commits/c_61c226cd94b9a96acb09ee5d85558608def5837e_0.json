{"sha": "61c226cd94b9a96acb09ee5d85558608def5837e", "log": "back port test for #745 from master", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestEnumDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestEnumDeserialization.java\n \n import java.io.IOException;\n import java.math.BigDecimal;\n+import java.util.Collection;\n import java.util.EnumMap;\n import java.util.EnumSet;\n import java.util.Map;\n import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.deser.std.EnumDeserializer;\n import com.fasterxml.jackson.databind.deser.std.StdDeserializer;\n+import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;\n import com.fasterxml.jackson.databind.module.SimpleModule;\n \n @SuppressWarnings(\"serial\")\n             throw new RuntimeException(\"Foobar!\");\n         }\n     }\n-    \n+\n+    // [Issue#745]\n+    static class DelegatingDeserializers extends Deserializers.Base\n+    {\n+        @Override\n+        public JsonDeserializer<?> findEnumDeserializer(final Class<?> type, final DeserializationConfig config, final BeanDescription beanDesc) throws JsonMappingException {\n+            final Collection<AnnotatedMethod> factoryMethods = beanDesc.getFactoryMethods();\n+            if (factoryMethods != null) {\n+                for (AnnotatedMethod am : factoryMethods) {\n+                    final JsonCreator creator = am.getAnnotation(JsonCreator.class);\n+                    if (creator != null) {\n+                        return EnumDeserializer.deserializerForCreator(config, type, am);\n+                    }\n+                }\n+            }\n+            return null;\n+        }\n+    }\n+\n+    // [Issue#745]\n+    static class DelegatingDeserializersModule extends SimpleModule\n+    {\n+        @Override\n+        public void setupModule(final SetupContext context) {\n+            context.addDeserializers(new DelegatingDeserializers());\n+        }\n+    }\n+\n     /*\n     /**********************************************************\n     /* Tests\n         en = MAPPER.readValue(quote(\"1\"), TestEnum.class);\n         assertSame(TestEnum.values()[1], en);\n     }\n+\n+    // [Issue#745]\n+    public void testDeserializerForCreatorWithEnumMaps() throws Exception\n+    {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        mapper.registerModule(new DelegatingDeserializersModule());\n+        EnumMap<EnumWithCreator,String> value = mapper.readValue(\"{\\\"enumA\\\":\\\"value\\\"}\",\n+            new TypeReference<EnumMap<EnumWithCreator,String>>() {});\n+        assertEquals(\"value\", value.get(EnumWithCreator.A));\n+    }\n }", "timestamp": 1427847901, "metainfo": ""}