{"sha": "cab48ae6d89051806a8b1b7816c22d4adc153404", "log": "minor improvement to checking of format", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/MappingJsonFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/MappingJsonFactory.java\n \n /**\n  * Sub-class of {@link JsonFactory} that will create a proper\n- * {@link ObjectCodec} to allow seamless conversions between\n- * Json content and Java objects (POJOs).\n+ * {@link ObjectCodec} to allow seam-less conversions between\n+ * JSON content and Java objects (POJOs).\n  * The only addition to regular {@link JsonFactory} currently\n  * is that {@link ObjectMapper} is constructed and passed as\n  * the codec to use.\n     @Override\n     public MatchStrength hasFormat(InputAccessor acc) throws IOException\n     {\n-        return hasJSONFormat(acc);\n+        if (getClass() == MappingJsonFactory.class) {\n+            return hasJSONFormat(acc);\n+        }\n+        return null;\n     }\n }", "timestamp": 1344440222, "metainfo": ""}