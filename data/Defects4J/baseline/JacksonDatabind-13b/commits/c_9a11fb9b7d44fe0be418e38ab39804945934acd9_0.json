{"sha": "9a11fb9b7d44fe0be418e38ab39804945934acd9", "log": "Backport #541 fix in 2.4 (for 2.4.3)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n         for (Linked<?> node = accessors; node != null; node = node.next) {\n             PropertyName name = node.name;\n             if (!node.isNameExplicit || name == null) { // no explicit name -- problem!\n+                // [Issue#541] ... but only as long as it's visible\n+                if (!node.isVisible) {\n+                    continue;\n+                }\n+                \n                 throw new IllegalStateException(\"Conflicting/ambiguous property name definitions (implicit name '\"\n                         +_name+\"'): found multiple explicit names: \"\n                         +newNames+\", but also implicit accessor: \"+node);\n--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java\n package com.fasterxml.jackson.databind.introspect;\n \n+import com.fasterxml.jackson.annotation.*;\n+\n import com.fasterxml.jackson.core.JsonProcessingException;\n+\n import com.fasterxml.jackson.databind.*;\n \n /**\n         }\n     }\n \n+    // For [Issue#541]\n+    static class Bean541 {\n+        protected String str;\n+\n+        @JsonCreator\n+        public Bean541(@JsonProperty(\"str\") String str) {\n+            this.str = str;\n+        }\n+\n+        @JsonProperty(\"s\")\n+        public String getStr() {\n+            return str;\n+        }\n+     }\n+     \n     /*\n     /**********************************************************\n     /* Test methods\n         Infernal inf = mapper.readValue(aposToQuotes(\"{'stuff':'Bob'}\"), Infernal.class);\n         assertNotNull(inf);\n     }\n+\n+    public void testIssue541() throws Exception {\n+        final ObjectMapper mapper = new ObjectMapper();\n+        mapper.disable(\n+                MapperFeature.AUTO_DETECT_CREATORS,\n+                MapperFeature.AUTO_DETECT_FIELDS,\n+                MapperFeature.AUTO_DETECT_GETTERS,\n+                MapperFeature.AUTO_DETECT_IS_GETTERS,\n+                MapperFeature.AUTO_DETECT_SETTERS,\n+                MapperFeature.USE_GETTERS_AS_SETTERS\n+        );\n+        Bean541 data = mapper.readValue(\"{\\\"str\\\":\\\"the string\\\"}\", Bean541.class);\n+        if (data == null) {\n+            throw new IllegalStateException(\"data is null\");\n+        }\n+        if (!\"the string\".equals(data.getStr())) {\n+            throw new IllegalStateException(\"bad value for data.str\");\n+        }\n+    }\n }", "timestamp": 1410911100, "metainfo": ""}