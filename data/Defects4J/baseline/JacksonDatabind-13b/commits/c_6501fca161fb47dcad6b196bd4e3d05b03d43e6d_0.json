{"sha": "6501fca161fb47dcad6b196bd4e3d05b03d43e6d", "log": "start adding support for writing native object ids", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java\n         throws IOException, JsonGenerationException\n     {\n         if (id != null && (idWritten || w.alwaysAsId)) {\n-            w.serializer.serialize(id, jgen, provider);\n+            // 03-Aug-2013, tatu: Prefer Native Object Ids if available\n+            if (jgen.canWriteObjectId()) {\n+                jgen.writeObjectRef(String.valueOf(id));\n+            } else {\n+                w.serializer.serialize(id, jgen, provider);\n+            }\n             return true;\n         }\n         return false;\n         return (id = generator.generateId(forPojo));\n     }\n \n+    /**\n+     * Method called to output Object Id as specified.\n+     */\n     public void writeAsField(JsonGenerator jgen, SerializerProvider provider,\n             ObjectIdWriter w)\n         throws IOException, JsonGenerationException\n     {\n+        idWritten = true;\n+\n+        // 03-Aug-2013, tatu: Prefer Native Object Ids if available\n+        if (jgen.canWriteObjectId()) {\n+            // Need to assume String(ified) ids, for now... could add 'long' variant?\n+            jgen.writeObjectId(String.valueOf(id));\n+            return;\n+        }\n+        \n         SerializedString name = w.propertyName;\n-        idWritten = true;\n         if (name != null) {\n             jgen.writeFieldName(name);\n             w.serializer.serialize(id, jgen, provider);", "timestamp": 1375589519, "metainfo": ""}