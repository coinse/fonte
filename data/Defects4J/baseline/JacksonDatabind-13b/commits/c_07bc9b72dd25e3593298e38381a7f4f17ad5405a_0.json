{"sha": "07bc9b72dd25e3593298e38381a7f4f17ad5405a", "log": "addded addHandler() to ObjectReader", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n \n import com.fasterxml.jackson.databind.cfg.DatabindVersion;\n import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;\n+import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;\n import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n import com.fasterxml.jackson.databind.node.NullNode;\n import com.fasterxml.jackson.databind.node.TreeTraversingParser;\n \n     public ObjectReader with(TimeZone tz) {\n         DeserializationConfig newConfig = _config.with(tz);\n+        return (newConfig == _config) ? this :  new ObjectReader(this, newConfig);\n+    }\n+\n+    public ObjectReader addHandler(DeserializationProblemHandler h) {\n+        DeserializationConfig newConfig = _config.withHandler(h);\n         return (newConfig == _config) ? this :  new ObjectReader(this, newConfig);\n     }\n     \n--- a/src/test/java/com/fasterxml/jackson/databind/filter/TestUnknownPropertyDeserialization.java\n+++ b/src/test/java/com/fasterxml/jackson/databind/filter/TestUnknownPropertyDeserialization.java\n         mapper.clearProblemHandlers();\n         mapper.addHandler(new MyHandler());\n         TestBean result = mapper.readValue(new StringReader(JSON_UNKNOWN_FIELD), TestBean.class);\n+        assertNotNull(result);\n+        assertEquals(1, result._a);\n+        assertEquals(-1, result._b);\n+        assertEquals(\"foo:START_ARRAY\", result._unknown);\n+    }\n+\n+    /**\n+     * Test that verifies that it is possible to ignore unknown properties using\n+     * {@link DeserializationProblemHandler} and an ObjectReader.\n+     */\n+    public void testUnknownHandlingIgnoreWithHandlerAndObjectReader()\n+        throws Exception\n+    {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.clearProblemHandlers();\n+        TestBean result = mapper.reader(TestBean.class).addHandler(new MyHandler()).readValue(new StringReader(JSON_UNKNOWN_FIELD));\n         assertNotNull(result);\n         assertEquals(1, result._a);\n         assertEquals(-1, result._b);", "timestamp": 1341153120, "metainfo": ""}