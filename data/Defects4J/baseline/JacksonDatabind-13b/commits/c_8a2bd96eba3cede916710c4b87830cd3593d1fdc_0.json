{"sha": "8a2bd96eba3cede916710c4b87830cd3593d1fdc", "log": "Add Scala-style constructors", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/failing/TestScalaLikeImplicitProperties.java\n+++ b/src/test/java/com/fasterxml/jackson/failing/TestScalaLikeImplicitProperties.java\n {\n     static class ValProperty\n     {\n-        public String prop\u203f = \"val\";\n+        public final String prop\u203f;\n         public String prop() { return prop\u203f; }\n+\n+        public ValProperty(String prop) {\n+            prop\u203f = prop;\n+        }\n     }\n \n     static class VarProperty\n     {\n-        public String prop\u203f = \"var\";\n+        public String prop\u203f;\n         public String prop() { return prop\u203f; }\n         public void prop_\u2040(String p) { prop\u203f = p; }\n+\n+        public VarProperty(String prop) {\n+            prop\u203f = prop;\n+        }\n     }\n \n     static class GetterSetterProperty\n         private String _prop_impl = \"get/set\";\n         public String prop() { return _prop_impl; }\n         public void prop_\u2040(String p) { _prop_impl = p; }\n+\n+        // Getter/Setters are typically not in the constructor because they are implemented\n+        // by the end user, not the compiler. They should be detected similar to 'bean-style'\n+        // getProp/setProp pairs.\n     }\n \n \n \n         // TODO: Activate whatever handler implements the property detection style\n \n-        assertEquals(\"{\\\"prop\\\":\\\"val\\\"}\", m.writeValueAsString(new ValProperty()));\n+        assertEquals(\"{\\\"prop\\\":\\\"val\\\"}\", m.writeValueAsString(new ValProperty(\"val\")));\n     }\n \n \n \n         // TODO: Activate whatever handler implements the property detection style\n \n-        assertEquals(\"{\\\"prop\\\":\\\"var\\\"}\", m.writeValueAsString(new VarProperty()));\n+        assertEquals(\"{\\\"prop\\\":\\\"var\\\"}\", m.writeValueAsString(new VarProperty(\"var\")));\n         VarProperty result = m.readValue(\"{\\\"prop\\\":\\\"read\\\"}\", VarProperty.class);\n         assertEquals(\"read\", result.prop());\n     }", "timestamp": 1398832243, "metainfo": ""}