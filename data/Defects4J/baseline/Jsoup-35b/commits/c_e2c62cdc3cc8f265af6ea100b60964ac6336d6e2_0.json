{"sha": "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2", "log": "Dropped \"get\"", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n      * \n      * @return the tag object\n      */\n-    public Tag getTag() {\n+    public Tag tag() {\n         return tag;\n     }\n     \n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n      * E.g.: <blockquote><code>String url = a.attr(\"abs:href\");</code></blockquote>\n      * @param attributeKey The attribute key.\n      * @return The attribute, or empty string if not present (to avoid nulls).\n-     * @see #getAttributes()\n+     * @see #attributes()\n      * @see #hasAttr(String)\n      * @see #absUrl(String)\n      */\n      * Get all of the element's attributes.\n      * @return attributes (which implements iterable, in same order as presented in original HTML).\n      */\n-    public Attributes getAttributes() {\n+    public Attributes attributes() {\n         return attributes;\n     }\n \n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n     }\n \n     private Element addChildToParent(Element child, boolean isEmptyElement) {\n-        Element parent = popStackToSuitableContainer(child.getTag());\n-        Tag childTag = child.getTag();\n+        Element parent = popStackToSuitableContainer(child.tag());\n+        Tag childTag = child.tag();\n         boolean validAncestor = stackHasValidParent(childTag);\n \n         if (!validAncestor) {\n             Tag parentTag = childTag.getImplicitParent();\n             Element implicit = new Element(parentTag, baseUri);\n             // special case: make sure there's a head before putting in body\n-            if (child.getTag().equals(bodyTag)) {\n+            if (child.tag().equals(bodyTag)) {\n                 Element head = new Element(headTag, baseUri);\n                 implicit.appendChild(head);\n             }\n         \n         for (int i = stack.size() -1; i >= 0; i--) {\n             Element el = stack.get(i);\n-            Tag parent2 = el.getTag();\n+            Tag parent2 = el.tag();\n             if (parent2.isValidParent(childTag)) {\n                 return true;\n             }\n \n     private Element popStackToSuitableContainer(Tag tag) {\n         while (!stack.isEmpty()) {\n-            if (last().getTag().canContain(tag))\n+            if (last().tag().canContain(tag))\n                 return last();\n             else\n                 stack.removeLast();\n         for (int i = stack.size() -1; i > 0; i--) {\n             counter++;\n             Element el = stack.get(i);\n-            Tag elTag = el.getTag();\n+            Tag elTag = el.tag();\n             if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                 break;\n             } else if (elTag.equals(tag)) {\n--- a/src/main/java/org/jsoup/safety/Cleaner.java\n+++ b/src/main/java/org/jsoup/safety/Cleaner.java\n         Attributes destAttrs = new Attributes();\n         Element dest = new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n \n-        Attributes sourceAttrs = sourceEl.getAttributes();\n+        Attributes sourceAttrs = sourceEl.attributes();\n         for (Attribute sourceAttr : sourceAttrs) {\n             if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n                 destAttrs.put(sourceAttr);\n--- a/src/test/java/org/jsoup/parser/AttributeParseTest.java\n+++ b/src/test/java/org/jsoup/parser/AttributeParseTest.java\n         // should be: <id=123>, <class=baz = 'bar'>, <qux=>, <zim=>, <foo=12>, <mux.=18>\n \n         Element el = Jsoup.parse(html).getElementsByTag(\"a\").get(0);\n-        Attributes attr = el.getAttributes();\n+        Attributes attr = el.attributes();\n         assertEquals(7, attr.size());\n         assertEquals(\"123\", attr.get(\"id\"));\n         assertEquals(\"baz = 'bar'\", attr.get(\"class\"));\n     @Test public void parsesEmptyString() {\n         String html = \"<a />\";\n         Element el = Jsoup.parse(html).getElementsByTag(\"a\").get(0);\n-        Attributes attr = el.getAttributes();\n+        Attributes attr = el.attributes();\n         assertEquals(0, attr.size());\n     }\n \n     @Test public void emptyOnNoKey() {\n         String html = \"<a =empty />\";\n         Element el = Jsoup.parse(html).getElementsByTag(\"a\").get(0);\n-        Attributes attr = el.getAttributes();\n+        Attributes attr = el.attributes();\n         assertEquals(0, attr.size());\n     }\n }", "timestamp": 1309605107, "metainfo": ""}