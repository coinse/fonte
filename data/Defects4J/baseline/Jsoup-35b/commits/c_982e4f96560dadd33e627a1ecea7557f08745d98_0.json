{"sha": "982e4f96560dadd33e627a1ecea7557f08745d98", "log": "Added Node#remove and Node#replaceWith.  Closes #19", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n     public Node parent() {\n         return parentNode;\n     }\n+    \n+    /**\n+     * Remove (delete) this node from the DOM tree. If this node has children, they are also removed.\n+     */\n+    public void remove() {\n+        Validate.notNull(parentNode);\n+        parentNode.removeChild(this);\n+    }\n+    \n+    /**\n+     * Replace this node in the DOM with the supplied node.\n+     * @param in the node that will will replace the existing node.\n+     */\n+    public void replaceWith(Node in) {\n+        Validate.notNull(in);\n+        Validate.notNull(parentNode);\n+        parentNode.replaceChild(this, in);\n+    }\n \n     protected void setParentNode(Node parentNode) {\n         if (this.parentNode != null)\n--- a/src/test/java/org/jsoup/nodes/NodeTest.java\n+++ b/src/test/java/org/jsoup/nodes/NodeTest.java\n         assertEquals(\"http://jsoup.org/foo\", a.attr(\"abs:href\"));\n         assertFalse(a.hasAttr(\"abs:href\")); // only realised on the get method, not in has or iterator\n     }\n+    \n+    @Test public void testRemove() {\n+        Document doc = Jsoup.parse(\"<p>One <span>two</span> three</p>\");\n+        Element p = doc.select(\"p\").first();\n+        p.childNode(0).remove();\n+        \n+        assertEquals(\"two three\", p.text());\n+        assertEquals(\"<span>two</span> three\", p.html());\n+    }\n+    \n+    @Test public void testReplace() {\n+        Document doc = Jsoup.parse(\"<p>One <span>two</span> three</p>\");\n+        Element p = doc.select(\"p\").first();\n+        Element insert = doc.createElement(\"em\").text(\"foo\");\n+        p.childNode(1).replaceWith(insert);\n+        \n+        assertEquals(\"One <em>foo</em> three\", p.html());\n+    }\n }", "timestamp": 1309605112, "metainfo": ""}