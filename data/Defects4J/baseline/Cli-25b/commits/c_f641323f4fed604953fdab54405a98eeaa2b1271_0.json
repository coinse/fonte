{"sha": "f641323f4fed604953fdab54405a98eeaa2b1271", "log": "Replaced fully qualified names with imports  ", "commit": "\n--- a/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n+++ b/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.cli;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.net.URL;\n+import java.util.Date;\n \n /** \n  * <p>\n public class PatternOptionBuilder {\n \n     /** String class */\n-    public static final Class STRING_VALUE = java.lang.String.class;\n+    public static final Class STRING_VALUE = String.class;\n \n     /** Object class */\n-    public static final Class OBJECT_VALUE = java.lang.Object.class;\n+    public static final Class OBJECT_VALUE = Object.class;\n \n     /** Number class */\n-    public static final Class NUMBER_VALUE = java.lang.Number.class;\n+    public static final Class NUMBER_VALUE = Number.class;\n \n     /** Date class */\n-    public static final Class DATE_VALUE = java.util.Date.class;\n+    public static final Class DATE_VALUE = Date.class;\n \n     /** Class class */\n-    public static final Class CLASS_VALUE = java.lang.Class.class;\n+    public static final Class CLASS_VALUE = Class.class;\n \n     /// can we do this one?? \n     // is meant to check that the file exists, else it errors.\n     // ie) it's for reading not writing.\n \n     /** FileInputStream class */\n-    public static final Class EXISTING_FILE_VALUE = \n-            java.io.FileInputStream.class;\n+    public static final Class EXISTING_FILE_VALUE = FileInputStream.class;\n \n     /** File class */\n-    public static final Class FILE_VALUE = java.io.File.class;\n+    public static final Class FILE_VALUE = File.class;\n \n     /** File array class */\n-    public static final Class FILES_VALUE = java.io.File[].class;\n+    public static final Class FILES_VALUE = File[].class;\n \n     /** URL class */\n-    public static final Class URL_VALUE = java.net.URL.class;\n+    public static final Class URL_VALUE = URL.class;\n \n     /**\n      * <p>Retrieve the class that <code>ch</code> represents.</p>\n--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n  */\n \n package org.apache.commons.cli;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.util.Calendar;\n+import java.util.Vector;\n \n import junit.framework.TestCase;\n \n \n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\n-       assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\n+       assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\n        assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\n        assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\n-       assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\n-       assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\n+       assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\n+       assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\n-       assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\n+       assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\n \n        // tests the char methods of CommandLine that delegate to the String methods\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue('a'));\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject('a'));\n-       assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject('b'));\n+       assertEquals(\"object flag b\", new Vector(), line.getOptionObject('b'));\n        assertTrue(\"boolean true flag c\", line.hasOption('c'));\n        assertFalse(\"boolean false flag d\", line.hasOption('d'));\n-       assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject('e'));\n-       assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject('f'));\n+       assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject('e'));\n+       assertEquals(\"class flag f\", Calendar.class, line.getOptionObject('f'));\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject('n'));\n-       assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject('t'));\n+       assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject('t'));\n \n        /// DATES NOT SUPPORTED YET.\n-       //      assertEquals(\"number flag t\", new java.util.Date(1023400137276L), line.getOptionObject('z'));\n+       //      assertEquals(\"number flag t\", new Date(1023400137276L), line.getOptionObject('z'));\n        //     input is:  \"Thu Jun 06 17:48:57 EDT 2002\"\n    }\n }", "timestamp": 1216718594, "metainfo": ""}