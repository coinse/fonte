{"sha": "6e760a412fba8715f219e98def54c6cd6267582f", "log": "Relaxed parse rules of H1 - H6 to allow nested content.", "commit": "\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n \n         // block\n         createBlock(\"P\").setContainInlineOnly(); // emasculated block?\n-        createBlock(\"H1\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n-        createBlock(\"H2\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n-        createBlock(\"H3\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n-        createBlock(\"H4\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n-        createBlock(\"H5\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n-        createBlock(\"H6\").setAncestor(\"BODY\", \"HGROUP\").setContainInlineOnly();\n+        createBlock(\"H1\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n+        createBlock(\"H2\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n+        createBlock(\"H3\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n+        createBlock(\"H4\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n+        createBlock(\"H5\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n+        createBlock(\"H6\").setAncestor(\"BODY\", \"HGROUP\").setExcludes(\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\");\n         createBlock(\"UL\");\n         createBlock(\"OL\");\n         createBlock(\"PRE\").setContainInlineOnly().setPreserveWhitespace();\n--- a/src/test/java/org/jsoup/parser/ParserTest.java\n+++ b/src/test/java/org/jsoup/parser/ParserTest.java\n         Document doc = Jsoup.parse(\"<abc_def id=1>Hello</abc_def> <abc-def>There</abc-def>\");\n         assertEquals(\"<abc_def id=\\\"1\\\">Hello</abc_def> <abc-def>There</abc-def>\", TextUtil.stripNewlines(doc.body().html()));\n     }\n+\n+    @Test public void testHeaderContents() {\n+        // h* tags (h1 .. h9) in browsers can handle any internal content other than other h*. which is not per any\n+        // spec, which defines them as containing phrasing content only. so, reality over theory.\n+        Document doc = Jsoup.parse(\"<h1>Hello <div>There</div> now</h1> <h2>More <h3>Content</h3></h2>\");\n+        assertEquals(\"<h1>Hello <div>There</div> now</h1> <h2>More </h2><h3>Content</h3>\", TextUtil.stripNewlines(doc.body().html()));\n+    }\n }", "timestamp": 1309605120, "metainfo": ""}