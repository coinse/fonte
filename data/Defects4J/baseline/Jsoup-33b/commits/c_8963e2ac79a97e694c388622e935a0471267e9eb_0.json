{"sha": "8963e2ac79a97e694c388622e935a0471267e9eb", "log": "If the charset from the server is not supported, fail-back to UTF8.  Fixes #215", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n     }\n \n     /**\n-     * Parse out a charset from a content type header.\n+     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\n+     * will kick in.)\n      * @param contentType e.g. \"text/html; charset=EUC-JP\"\n      * @return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n      */\n         if (contentType == null) return null;\n         Matcher m = charsetPattern.matcher(contentType);\n         if (m.find()) {\n-            return m.group(1).trim().toUpperCase(Locale.ENGLISH);\n+            String charset = m.group(1).trim();\n+            if (Charset.isSupported(charset)) return charset;\n+            charset = charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset)) return charset;\n         }\n         return null;\n     }\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n public class DataUtilTest {\n     @Test\n     public void testCharset() {\n-        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=utf-8 \"));\n+        assertEquals(\"utf-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=utf-8 \"));\n         assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html; charset=UTF-8\"));\n         assertEquals(\"ISO-8859-1\", DataUtil.getCharsetFromContentType(\"text/html; charset=ISO-8859-1\"));\n         assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html\"));\n         assertEquals(null, DataUtil.getCharsetFromContentType(null));\n+        assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html;charset=Unknown\"));\n     }\n \n     @Test public void testQuotedCharset() {\n-        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"utf-8\\\"\"));\n-        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=\\\"utf-8\\\"\"));\n+        assertEquals(\"utf-8\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"utf-8\\\"\"));\n+        assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=\\\"UTF-8\\\"\"));\n         assertEquals(\"ISO-8859-1\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"ISO-8859-1\\\"\"));\n+        assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"Unsupported\\\"\"));\n     }\n     \n     @Test public void discardsSpuriousByteOrderMark() {\n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n         Document doc = Jsoup.connect(echoURL).cookies(cookies).get();\n         assertEquals(\"uid=jhy; token=asdfg123\", ihVal(\"HTTP_COOKIE\", doc));\n     }\n+\n+    @Test\n+    public void handlesDodgyCharset() throws IOException {\n+        // tests that when we get back \"UFT8\", that it is recognised as unsupported, and falls back to default instead\n+        String url = \"http://direct.infohound.net/tools/bad-charset.pl\";\n+        Connection.Response res = Jsoup.connect(url).execute();\n+        assertEquals(\"text/html; charset=UFT8\", res.header(\"Content-Type\")); // from the header\n+        assertEquals(null, res.charset()); // tried to get from header, not supported, so returns null\n+        Document doc = res.parse(); // would throw an error if charset unsupported\n+        assertTrue(doc.text().contains(\"Hello!\"));\n+        assertEquals(\"UTF-8\", res.charset()); // set from default on parse\n+    }\n }", "timestamp": 1342675981, "metainfo": ""}