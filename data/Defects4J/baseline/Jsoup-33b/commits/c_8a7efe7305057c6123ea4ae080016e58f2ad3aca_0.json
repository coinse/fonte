{"sha": "8a7efe7305057c6123ea4ae080016e58f2ad3aca", "log": "Initial add of new generation selectors(faster than original)", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/AndSelector.java\n+package org.jsoup.select.ng;\n+\n+import java.util.List;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class AndSelector implements Selector {\n+\tList<Selector> selectors;\n+\n+\tpublic AndSelector(List<Selector> selectors) {\n+\t\tthis.selectors = selectors;\n+\t}\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\tfor(Selector s : selectors) {\n+\t\t\tif(!s.select(node))\n+\t\t\t\treturn false;\n+\t\t}\n+\t\t\n+\t\treturn true;\n+\t}\n+\n+\t\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/BasicSelector.java\n+package org.jsoup.select.ng;\n+\n+import java.util.Arrays;\n+\n+public class BasicSelector {\n+\t\n+\tpublic static ListSelector list(Selector... sels) {\n+\t\treturn new ListSelector(Arrays.asList(sels));\n+\t}\n+\t\n+\tpublic static AndSelector and(Selector... sels) {\n+\t\treturn new AndSelector(Arrays.asList(sels));\n+\t}\n+\t\n+\tpublic static NotSelector not(Selector sel) {\n+\t\treturn new NotSelector(sel);\n+\t}\n+\t\n+\tpublic static TagSelector tag(String tag) {\n+\t\treturn new TagSelector(tag);\n+\t}\n+\t\n+\tpublic static IdSelector id(String id) {\n+\t\treturn new IdSelector(id);\n+\t}\n+\t\n+\tpublic static ClassSelector cls(String cls) {\n+\t\treturn new ClassSelector(cls);\n+\t}\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/ClassSelector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class ClassSelector implements Selector{\n+\tString cls;\n+\t\n+\n+\tpublic ClassSelector(String cls) {\n+\t\tsuper();\n+\t\tthis.cls = cls;\n+\t}\n+\n+\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\n+\t\t\tElement el = (Element)node;\n+\t\t\treturn el.classNames().contains(cls);\n+\t}\n+\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/ElementSelector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class ElementSelector implements Selector {\n+\tString tag;\n+\tString cls;\n+\tString id;\n+\tclass AttrSelector {\n+\t\tString name;\n+\t\tString value;\n+\t\t\n+\t\t\n+\t}\n+\t\n+\tpublic ElementSelector(String tag, String cls, String id) {\n+\t\tsuper();\n+\t\tthis.tag = tag;\n+\t\tthis.cls = cls;\n+\t\tthis.id = id;\n+\t}\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\t\tElement el = (Element) node;\n+\t\t\t\n+\t\t\tif(tag != null && !el.tagName().equals(tag))\n+\t\t\t\treturn false;\n+\t\t\t\n+\t\t\tif(cls != null && !el.className().equals(cls))\n+\t\t\t\treturn false;\n+\t\t\t\n+\t\t\tif(id != null && !el.id().equals(id))\n+\t\t\t\treturn false;\n+\t\t\t\n+\t\t\treturn true;\n+\t}\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/IdSelector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class IdSelector implements Selector {\n+\tString id;\n+\t\n+\n+\tpublic IdSelector(String id) {\n+\t\tsuper();\n+\t\tthis.id = id;\n+\t}\n+\n+\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\t\tElement el = (Element)node;\n+\t\t\treturn el.id().equals(id);\n+\t}\n+\n+\t\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/ListSelector.java\n+package org.jsoup.select.ng;\n+\n+import java.util.List;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class ListSelector implements Selector {\n+\tList<Selector> selectors;\n+\n+\tpublic ListSelector(List<Selector> selectors) {\n+\t\tsuper();\n+\t\tthis.selectors = selectors;\n+\t}\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\tfor(Selector s : selectors) {\n+\t\t\tif(s.select(node))\n+\t\t\t\treturn true;\n+\t\t}\n+\t\t\n+\t\treturn false;\n+\t}\n+\t\n+\t\n+\t\n+\t\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/NotSelector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class NotSelector implements Selector {\n+\tSelector sel;\n+\t\n+\t\n+\n+\tpublic NotSelector(Selector sel) {\n+\t\tsuper();\n+\t\tthis.sel = sel;\n+\t}\n+\n+\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\treturn !sel.select(node);\n+\t}\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/SelectMatch.java\n+package org.jsoup.select.ng;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Deque;\n+import java.util.List;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+import org.jsoup.select.Elements;\n+\n+public class SelectMatch {\n+\tSelector sel;\n+\t\n+\tpublic SelectMatch(Selector sel) {\n+\t\tthis.sel = sel;\n+\t}\n+\t\n+\tpublic Elements match(Node root) {\n+\t\treturn new Elements(match(root, new ArrayList<Element>()));\n+\t}\n+\t\n+\tpublic List<Element> match(Node start, List<Element> matched) {\n+\t\tif((start instanceof Element) && sel.select((Element)start))\n+\t\t\tmatched.add((Element)start);\n+\t\t\n+\t\tfor(Node n : start.childNodes())\n+\t\t\tif(n instanceof Element)\n+\t\t\t\tmatch(n, matched);\n+\t\t\n+\t\treturn matched;\n+\t}\n+\t\n+\t/*public List<Node> match1(Node start, List<Node> matched) {\n+\t\tDeque<Node> queue = new ArrayDeque<Node>();\n+\t\tqueue.add(start);\n+\t\t\n+\t\twhile(!queue.isEmpty()) {\n+\t\t\tNode n = queue.pop();\n+\t\t\t\n+\t\t\tif(sel.select(n))\n+\t\t\t\tmatched.add(n);\n+\t\t\t\n+\t\t\tqueue.addAll(n.childNodes());\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\t\n+\t\treturn matched;\n+\t}*/\n+\n+\t\n+\n+\t\n+\t\n+\t\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/Selector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+\n+public interface Selector {\n+\tpublic boolean select(Element element);\n+}\n--- /dev/null\n+++ b/src/main/java/org/jsoup/select/ng/TagSelector.java\n+package org.jsoup.select.ng;\n+\n+import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n+\n+public class TagSelector implements Selector {\n+\tString tag;\n+\t\n+\n+\tpublic TagSelector(String tag) {\n+\t\tsuper();\n+\t\tthis.tag = tag;\n+\t}\n+\n+\n+\n+\t@Override\n+\tpublic boolean select(Element node) {\n+\t\t\tElement el = (Element)node;\n+\t\t\treturn el.tagName().equals(tag);\n+\t}\n+\n+}", "timestamp": 1309605123, "metainfo": ""}