{"sha": "1d31086acba06579c4e7d5928dbba9ca8a0128b1", "log": "Drop BOM at start of byte data if present after decode.  Fixes #134.", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n             docData = Charset.forName(charsetName).decode(byteData).toString();\n         }\n         if (doc == null) {\n+            // there are times where there is a spurious byte-order-mark at the start of the text. Shouldn't be present\n+            // in utf-8. If after decoding, there is a BOM, strip it; otherwise will cause the parser to go straight\n+            // into head mode\n+            if (docData.charAt(0) == 65279)\n+                docData = docData.substring(1);\n+\n             doc = parser.parseInput(docData, baseUri);\n             doc.outputSettings().charset(charsetName);\n         }\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n package org.jsoup.helper;\n \n import static org.junit.Assert.assertEquals;\n+\n+import org.jsoup.nodes.Document;\n+import org.jsoup.parser.Parser;\n import org.junit.Test;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.Charset;\n \n public class DataUtilTest {\n     @Test\n         assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=\\\"utf-8\\\"\"));\n         assertEquals(\"ISO-8859-1\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"ISO-8859-1\\\"\"));\n     }\n+    \n+    @Test public void discardsSpuriousByteOrderMark() {\n+        String html = \"\\uFEFF<html><head><title>One</title></head><body>Two</body></html>\";\n+        ByteBuffer buffer = Charset.forName(\"UTF-8\").encode(html);\n+        Document doc = DataUtil.parseByteData(buffer, \"UTF-8\", \"http://foo.com/\", Parser.htmlParser());\n+        assertEquals(\"One\", doc.head().text());\n+    }\n }", "timestamp": 1332737856, "metainfo": ""}