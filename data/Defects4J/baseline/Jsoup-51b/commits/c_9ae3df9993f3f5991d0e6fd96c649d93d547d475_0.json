{"sha": "9ae3df9993f3f5991d0e6fd96c649d93d547d475", "log": "Added ability to change an element's tag with Element.tagName(String), and to change many at once with Elements.tagName(String).", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n  * @author Jonathan Hedley, jonathan@hedley.net\n  */\n public class Element extends Node {\n-    private final Tag tag;\n+    private Tag tag;\n     private Set<String> classNames;\n     \n     /**\n      */\n     public String tagName() {\n         return tag.getName();\n+    }\n+\n+    /**\n+     * Change the tag of this element. For example, convert a {@code <span>} to a {@code <div>} with\n+     * {@code el.tagName(\"div\");}.\n+     *\n+     * @param tagName new tag name for this element\n+     * @return this element, for chaining\n+     */\n+    public Element tagName(String tagName) {\n+        Validate.notEmpty(tagName, \"Tag name must not be empty.\");\n+        tag = Tag.valueOf(tagName);\n+        return this;\n     }\n \n     /**\n--- a/src/main/java/org/jsoup/select/Elements.java\n+++ b/src/main/java/org/jsoup/select/Elements.java\n     public Elements(Element... elements) {\n         this(Arrays.asList(elements));\n     }\n-    \n-    \n     \n     @Override\n \tpublic Elements clone() {\n     public String toString() {\n         return outerHtml();\n     }\n+\n+    /**\n+     * Update the tag name of each matched element. For example, to change each {@code <i>} to a {@code <em>}, do\n+     * {@code doc.select(\"i\").tagName(\"em\");}\n+     * @param tagName the new tag name\n+     * @return this, for chaining\n+     * @see Element#tagName(String)\n+     */\n+    public Elements tagName(String tagName) {\n+        for (Element element : contents) {\n+            element.tagName(tagName);\n+        }\n+        return this;\n+    }\n     \n     /**\n      * Set the inner HTML of each matched element.\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertEquals(\"<div><p>One</p><p><span>Two</span></p></div><p><span>Two</span><span>Three</span></p>\", TextUtil.stripNewlines(doc.body().html()));\n     }\n \n+    @Test public void testTagNameSet() {\n+        Document doc = Jsoup.parse(\"<div><i>Hello</i>\");\n+        doc.select(\"i\").first().tagName(\"em\");\n+        assertEquals(0, doc.select(\"i\").size());\n+        assertEquals(1, doc.select(\"em\").size());\n+        assertEquals(\"<em>Hello</em>\", doc.select(\"div\").first().html());\n+    }\n+\n \n }\n--- a/src/test/java/org/jsoup/select/ElementsTest.java\n+++ b/src/test/java/org/jsoup/select/ElementsTest.java\n         assertEquals(1, div2.size());\n         assertEquals(\"2\", div2.first().id());\n     }\n+\n+    @Test public void tagNameSet() {\n+        Document doc = Jsoup.parse(\"<p>Hello <i>there</i> <i>now</i></p>\");\n+        doc.select(\"i\").tagName(\"em\");\n+\n+        assertEquals(\"<p>Hello <em>there</em> <em>now</em></p>\", doc.body().html());\n+    }\n }", "timestamp": 1309605127, "metainfo": ""}