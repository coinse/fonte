{"sha": "8c673ddc1357f00009e38cb800c1c6ebb6ee4beb", "log": "Element.classNames() must not be cached", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n  */\n public class Element extends Node {\n     private Tag tag;\n-    private Set<String> classNames;\n-    \n     /**\n      * Create a new, standalone Element. (Standalone in that is has no parent.)\n      * \n      * @return set of classnames, empty if no class attribute\n      */\n     public Set<String> classNames() {\n-        if (classNames == null) {\n-            String[] names = className().split(\"\\\\s+\");\n-            classNames = new LinkedHashSet<String>(Arrays.asList(names));\n-            classNames.remove(\"\"); // if classNames() was empty, would include an empty class\n-        }\n+    \tString[] names = className().split(\"\\\\s+\");\n+    \tSet<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\n+    \tclassNames.remove(\"\"); // if classNames() was empty, would include an empty class\n+\n         return classNames;\n     }\n \n     @Override\n     public Element clone() {\n         Element clone = (Element) super.clone();\n-        clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames\n         return clone;\n     }\n }", "timestamp": 1413663452, "metainfo": ""}