{"sha": "b03d68547460332b861044db80ccd08edec361a1", "log": "fixed an error in Simplex algorithm when several ambiguous solutions exist  ", "commit": "\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n      * @return The value of the given decision variable.\n      */\n     protected double getDecisionVariableValue(final int decisionVariable) {\n-        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + decisionVariable);\n-        return basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()); \n-    }\n+      int col = getNumObjectiveFunctions() + decisionVariable;  \n+      Integer basicRow = getBasicRow(col);\n+      if (basicRow == null) {\n+          return 0;\n+      }\n+      // if there are multiple variables that can take the value on the RHS\n+      // then we'll give the first variable that value\n+      for (int i = getNumObjectiveFunctions(); i < col; i++) {\n+          if (tableau.getEntry(basicRow, i) == 1) {\n+              return 0;\n+          }\n+      }\n+      return getEntry(basicRow, getRhsOffset()); \n+  }\n \n     /**\n      * Subtracts a multiple of one row from another.\n--- a/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n+++ b/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n         assertEquals(1438556.7491409, solution.getValue(), .0000001);\n     }\n \n-    public void testSomething() throws OptimizationException {\n+    public void testTrivialModel() throws OptimizationException {\n         LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);\n         Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n         constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));\n \n         SimplexSolver solver = new SimplexSolver();\n         RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n-        assertEquals(13366.0, solution.getValue(), .0000001);\n-        //assertEquals(7518.0, solution.getValue(), .0000001);\n+        assertEquals(7518.0, solution.getValue(), .0000001);\n     }\n     \n     /**", "timestamp": 1238140564, "metainfo": ""}