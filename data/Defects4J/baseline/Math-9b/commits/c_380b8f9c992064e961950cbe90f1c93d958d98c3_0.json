{"sha": "380b8f9c992064e961950cbe90f1c93d958d98c3", "log": "Remove suite() methods  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java\n         return yb * b - ya * a;\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(LegendreGaussIntegratorTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java\n  */\n package org.apache.commons.math.analysis.interpolation;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.MathException;\n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n import org.apache.commons.math.analysis.polynomials.PolynomialFunction;\n import org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test the SplineInterpolator.\n \n     public SplineInterpolatorTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SplineInterpolatorTest.class);\n-        suite.setName(\"UnivariateRealInterpolator Tests\");\n-        return suite;\n     }\n \n     public void testInterpolateLinearDegenerateTwoSegment()\n--- a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n  */\n package org.apache.commons.math.analysis.solvers;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.MathException;\n import org.apache.commons.math.analysis.MonitoredFunction;\n import org.apache.commons.math.analysis.QuinticFunction;\n import org.apache.commons.math.analysis.SinFunction;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Testcase for UnivariateRealSolver.\n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(BrentSolverTest.class);\n-        suite.setName(\"UnivariateRealSolver Tests\");\n-        return suite;\n-    }\n-\n     @Deprecated\n     public void testDeprecated() throws MathException {\n         // The sinus function is behaved well around the root at #pi. The second\n--- a/src/test/java/org/apache/commons/math/estimation/EstimatedParameterTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/EstimatedParameterTest.java\n \n   }\n \n-  public static Test suite() {\n-    return new TestSuite(EstimatedParameterTest.class);\n-  }\n-\n   private void checkValue(double value, double expected) {\n     assertTrue(Math.abs(value - expected) < 1.0e-10);\n   }\n--- a/src/test/java/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n import java.util.ArrayList;\n import java.util.HashSet;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * <p>Some of the unit tests are re-implementations of the MINPACK <a\n \n   }\n \n-  public static Test suite() {\n-    return new TestSuite(GaussNewtonEstimatorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n import java.util.ArrayList;\n import java.util.HashSet;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * <p>Some of the unit tests are re-implementations of the MINPACK <a\n       }\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(LevenbergMarquardtEstimatorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/estimation/MinpackTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/MinpackTest.java\n \n   }\n \n-  public static Test suite() {\n-    return new TestSuite(MinpackTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/estimation/WeightedMeasurementTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/WeightedMeasurementTest.java\n \n   }\n \n-  public static Test suite() {\n-    return new TestSuite(WeightedMeasurementTest.class);\n-  }\n-\n   @Override\n   public void setUp() {\n     p1 = new EstimatedParameter(\"p1\", 1.0);\n--- a/src/test/java/org/apache/commons/math/geometry/RotationOrderTest.java\n+++ b/src/test/java/org/apache/commons/math/geometry/RotationOrderTest.java\n     return \"unknown\";\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(RotationOrderTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/geometry/RotationTest.java\n+++ b/src/test/java/org/apache/commons/math/geometry/RotationTest.java\n     assertEquals(0, Rotation.distance(r, new Rotation(q0, q1, q2, q3, false)), 1.0e-12);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(RotationTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/geometry/Vector3DTest.java\n+++ b/src/test/java/org/apache/commons/math/geometry/Vector3DTest.java\n       assertEquals(z, v.getZ(), 1.0e-12);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(Vector3DTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java\n  */\n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n \n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(Array2DRowRealMatrixTest.class);\n-        suite.setName(\"Array2DRowRealMatrix Tests\");\n-        return suite;\n-    }\n-\n     /** test dimensions */\n     public void testDimensions() {\n         Array2DRowRealMatrix m = new Array2DRowRealMatrix(testData);\n--- a/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n import java.io.Serializable;\n import java.lang.reflect.Array;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.Field;\n import org.apache.commons.math.FieldElement;\n \n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ArrayFieldVectorTest.class);\n-        suite.setName(\"ArrayFieldVector<Fraction> Tests\");\n-        return suite;\n-    }\n-\n     public void testConstructors() {\n \n         ArrayFieldVector<Fraction> v0 = new ArrayFieldVector<Fraction>(FractionField.getInstance());\n--- a/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n import java.io.Serializable;\n import java.util.Iterator;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.TestUtils;\n \n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ArrayRealVectorTest.class);\n-        suite.setName(\"ArrayRealVector Tests\");\n-        return suite;\n-    }\n-\n     public void testConstructors() {\n \n         ArrayRealVector v0 = new ArrayRealVector();\n--- a/src/test/java/org/apache/commons/math/linear/BigMatrixImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/BigMatrixImplTest.java\n  */\n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n+import java.math.BigDecimal;\n+\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n-import java.math.BigDecimal;\n \n \n /**\n \n     public BigMatrixImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(BigMatrixImplTest.class);\n-        suite.setName(\"BigMatrixImpl Tests\");\n-        return suite;\n     }\n \n     public static final double[] asDouble(BigDecimal[] data) {\n--- a/src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java\n import java.util.Arrays;\n import java.util.Random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.fraction.Fraction;\n \n     public BlockFieldMatrixTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(BlockFieldMatrixTest.class);\n-        suite.setName(\"BlockFieldMatrix<Fraction> Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java\n import java.util.Arrays;\n import java.util.Random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n \n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(BlockRealMatrixTest.class);\n-        suite.setName(\"BlockRealMatrix Tests\");\n-        return suite;\n-    }\n-\n     /** test dimensions */\n     public void testDimensions() {\n         BlockRealMatrix m = new BlockRealMatrix(testData);\n--- a/src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java\n \n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.MathException;\n-import org.apache.commons.math.linear.CholeskyDecompositionImpl;\n-import org.apache.commons.math.linear.DecompositionSolver;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.ArrayRealVector;\n \n public class CholeskySolverTest extends TestCase {\n \n \n     public CholeskySolverTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(CholeskySolverTest.class);\n-        suite.setName(\"LUSolver Tests\");\n-        return suite;\n     }\n \n     /** test solve dimension errors */\n--- a/src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java\n import java.util.Arrays;\n import java.util.Random;\n \n-import org.apache.commons.math.linear.EigenDecomposition;\n-import org.apache.commons.math.linear.EigenDecompositionImpl;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.RealVector;\n-import org.apache.commons.math.linear.TriDiagonalTransformer;\n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.util.MathUtils;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class EigenDecompositionImplTest extends TestCase {\n \n \n     public EigenDecompositionImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(EigenDecompositionImplTest.class);\n-        suite.setName(\"EigenDecompositionImpl Tests\");\n-        return suite;\n     }\n \n     public void testDimension1() {\n--- a/src/test/java/org/apache/commons/math/linear/EigenSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/EigenSolverTest.java\n \n import java.util.Random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n-import org.apache.commons.math.linear.DecompositionSolver;\n-import org.apache.commons.math.linear.EigenDecompositionImpl;\n-import org.apache.commons.math.linear.InvalidMatrixException;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.ArrayRealVector;\n import org.apache.commons.math.util.MathUtils;\n \n public class EigenSolverTest extends TestCase {\n \n     public EigenSolverTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(EigenSolverTest.class);\n-        suite.setName(\"EigenSolver Tests\");\n-        return suite;\n     }\n \n     /** test non invertible matrix */\n--- a/src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java\n \n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.fraction.Fraction;\n import org.apache.commons.math.fraction.FractionField;\n-import org.apache.commons.math.linear.FieldLUDecomposition;\n-import org.apache.commons.math.linear.FieldLUDecompositionImpl;\n-import org.apache.commons.math.linear.FieldMatrix;\n-import org.apache.commons.math.linear.Array2DRowFieldMatrix;\n-import org.apache.commons.math.linear.InvalidMatrixException;\n \n public class FieldLUDecompositionImplTest extends TestCase {\n     private Fraction[][] testData = {\n \n     public FieldLUDecompositionImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(FieldLUDecompositionImplTest.class);\n-        suite.setName(\"FieldLUDecompositionImpl Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java\n  */\n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.fraction.Fraction;\n \n     public FieldMatrixImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(FieldMatrixImplTest.class);\n-        suite.setName(\"Array2DRowFieldMatrix<Fraction> Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java\n \n package org.apache.commons.math.linear;\n \n-import org.apache.commons.math.linear.InvalidMatrixException;\n-import org.apache.commons.math.linear.LUDecomposition;\n-import org.apache.commons.math.linear.LUDecompositionImpl;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-\n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class LUDecompositionImplTest extends TestCase {\n     private double[][] testData = {\n \n     public LUDecompositionImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(LUDecompositionImplTest.class);\n-        suite.setName(\"LUDecompositionImpl Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/LUSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/LUSolverTest.java\n \n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n-import org.apache.commons.math.linear.DecompositionSolver;\n-import org.apache.commons.math.linear.InvalidMatrixException;\n-import org.apache.commons.math.linear.LUDecompositionImpl;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.ArrayRealVector;\n \n public class LUSolverTest extends TestCase {\n     private double[][] testData = {\n \n     public LUSolverTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(LUSolverTest.class);\n-        suite.setName(\"LUSolver Tests\");\n-        return suite;\n     }\n \n     /** test threshold impact */\n--- a/src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java\n package org.apache.commons.math.linear;\n \n import java.math.BigDecimal;\n-import junit.framework.Test;\n+\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.fraction.BigFraction;\n import org.apache.commons.math.fraction.Fraction;\n     }\n \n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MatrixUtilsTest.class);\n-        suite.setName(\"MatrixUtils Tests\");\n-        return suite;\n-    }\n-\n     public void testCreateRealMatrix() {\n         assertEquals(new BlockRealMatrix(testData),\n                 MatrixUtils.createRealMatrix(testData));\n--- a/src/test/java/org/apache/commons/math/linear/QRDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/QRDecompositionImplTest.java\n \n import java.util.Random;\n \n-import org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor;\n-import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;\n-import org.apache.commons.math.linear.BlockRealMatrix;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.MatrixVisitorException;\n-import org.apache.commons.math.linear.QRDecomposition;\n-import org.apache.commons.math.linear.QRDecompositionImpl;\n-import org.apache.commons.math.linear.RealMatrix;\n-\n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class QRDecompositionImplTest extends TestCase {\n     double[][] testData3x3NonSingular = {\n \n     public QRDecompositionImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(QRDecompositionImplTest.class);\n-        suite.setName(\"QRDecompositionImpl Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/QRSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/QRSolverTest.java\n \n import java.util.Random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n-import org.apache.commons.math.linear.DecompositionSolver;\n-import org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor;\n-import org.apache.commons.math.linear.BlockRealMatrix;\n-import org.apache.commons.math.linear.InvalidMatrixException;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.MatrixVisitorException;\n-import org.apache.commons.math.linear.QRDecomposition;\n-import org.apache.commons.math.linear.QRDecompositionImpl;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.RealVector;\n-import org.apache.commons.math.linear.ArrayRealVector;\n \n public class QRSolverTest extends TestCase {\n     double[][] testData3x3NonSingular = {\n \n     public QRSolverTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(QRSolverTest.class);\n-        suite.setName(\"QRSolver Tests\");\n-        return suite;\n     }\n \n     /** test rank */\n--- a/src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java\n  */\n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n \n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(RealMatrixImplTest.class);\n-        suite.setName(\"RealMatrixImpl Tests\");\n-        return suite;\n-    }\n-\n     /** test dimensions */\n     public void testDimensions() {\n         RealMatrixImpl m = new RealMatrixImpl(testData);\n--- a/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SingularValueDecompositionImplTest.java\n \n import java.util.Random;\n \n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.SingularValueDecomposition;\n-import org.apache.commons.math.linear.SingularValueDecompositionImpl;\n-\n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class SingularValueDecompositionImplTest extends TestCase {\n \n \n     public SingularValueDecompositionImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SingularValueDecompositionImplTest.class);\n-        suite.setName(\"SingularValueDecompositionImpl Tests\");\n-        return suite;\n     }\n \n     public void testMoreRows() {\n--- a/src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java\n  */\n package org.apache.commons.math.linear;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.Field;\n import org.apache.commons.math.fraction.Fraction;\n import org.apache.commons.math.fraction.FractionConversionException;\n import org.apache.commons.math.fraction.FractionField;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link SparseFieldMatrix} class.\n         }\n \n \n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SparseFieldMatrixTest.class);\n-        suite.setName(\"SparseFieldMatrix<Fraction> Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java\n  */\n package org.apache.commons.math.linear;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n \n \n     public SparseRealMatrixTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SparseRealMatrixTest.class);\n-        suite.setName(\"SparseRealMatrix Tests\");\n-        return suite;\n     }\n \n     /** test dimensions */\n--- a/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n import java.io.Serializable;\n import java.util.Iterator;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.TestUtils;\n             throw unsupported();\n         }\n \n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SparseRealVectorTest.class);\n-        suite.setName(\"SparseRealVector Tests\");\n-        return suite;\n     }\n \n     public void testConstructors() {\n--- a/src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java\n \n import java.util.Arrays;\n \n-import org.apache.commons.math.linear.InvalidMatrixException;\n-import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.RealMatrix;\n-import org.apache.commons.math.linear.TriDiagonalTransformer;\n-\n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class TriDiagonalTransformerTest extends TestCase {\n \n \n     }\n \n-    public static Test suite() {\n-        return new TestSuite(TriDiagonalTransformerTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java\n     assertTrue(Math.abs(value - reference) < 1.0e-10);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(ContinuousOutputModelTest.class);\n-  }\n-\n   @Override\n   public void setUp() {\n     pb = new TestProblem3(0.9);\n--- a/src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java\n     assertTrue(Math.abs(error) > 0.1);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(FirstOrderConverterTest.class);\n-  }\n-\n   private static class Equations\n     implements SecondOrderDifferentialEquations {\n \n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java\n       }, 0.0, new double[] { 0.0 }, 5.0, new double[1]);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(ClassicalRungeKuttaIntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java\n     private double  maxStep;\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(DormandPrince54IntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java\n     }\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(DormandPrince853IntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java\n                       }, 0.0, new double[] { 0.0 }, 5.0, new double[1]);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(EulerIntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java\n       }, 0.0, new double[] { 0.0 }, 5.0, new double[1]);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(GillIntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java\n     private double  minStep;\n     private double  maxStep;\n   }\n-  public static Test suite() {\n-    return new TestSuite(GraggBulirschStoerIntegratorTest.class);\n-  }\n \n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java\n \n package org.apache.commons.math.ode.nonstiff;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.ConvergenceException;\n import org.apache.commons.math.ode.DerivativeException;\n import org.apache.commons.math.ode.TestProblemHandler;\n import org.apache.commons.math.ode.events.EventException;\n import org.apache.commons.math.ode.events.EventHandler;\n-import org.apache.commons.math.ode.nonstiff.HighamHall54Integrator;\n import org.apache.commons.math.ode.sampling.StepHandler;\n import org.apache.commons.math.ode.sampling.StepInterpolator;\n \n     private double maxError;\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(HighamHall54IntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java\n       }, 0.0, new double[] { 0.0 }, 5.0, new double[1]);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(MidpointIntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java\n       }, 0.0, new double[] { 0.0 }, 5.0, new double[1]);\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(ThreeEighthesIntegratorTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java\n     this.lastSeen = lastSeen;\n   }\n \n-  public static Test suite() {\n-    return new TestSuite(StepNormalizerTest.class);\n-  }\n-\n   @Override\n   public void setUp() {\n     pb = new TestProblem3(0.9);\n--- a/src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n import java.util.ArrayList;\n import java.util.Arrays;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction;\n \n     }\n \n-    public static Test suite() {\n-        return new TestSuite(GaussNewtonOptimizerTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n import java.util.Arrays;\n import java.util.List;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction;\n \n     }\n \n-    public static Test suite() {\n-        return new TestSuite(LevenbergMarquardtOptimizerTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java\n import java.io.Serializable;\n import java.util.Arrays;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction;\n \n   }\n \n-  public static Test suite() {\n-    return new TestSuite(MinpackTest.class);\n-  }\n-\n }\n--- a/src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java\n import java.io.Serializable;\n import java.util.ArrayList;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.DifferentiableMultivariateRealFunction;\n \n     }\n \n-    public static Test suite() {\n-        return new TestSuite(NonLinearConjugateGradientOptimizerTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.random;\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.Frequency;\n \n     public AbstractRandomGeneratorTest(String name) {\n         super(name);\n         randomData = new RandomDataImpl(testGenerator);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(AbstractRandomGeneratorTest.class);\n-        suite.setName(\"AbstractRandomGenerator Tests\");\n-        return suite;\n     }\n \n     @Override\n--- a/src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n \n package org.apache.commons.math.random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.DimensionMismatchException;\n import org.apache.commons.math.linear.MatrixUtils;\n         generator  = null;\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(CorrelatedRandomVectorGeneratorTest.class);\n-    }\n-\n     private double[] mean;\n     private RealMatrix covariance;\n     private CorrelatedRandomVectorGenerator generator;\n--- a/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n import java.net.URL;\n import java.util.ArrayList;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.RetryTestCase;\n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n             dataArray[i] = data.doubleValue();\n             i++;\n         }\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(EmpiricalDistributionTest.class);\n-        suite.setName(\"EmpiricalDistribution Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/random/GaussianRandomGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/GaussianRandomGeneratorTest.java\n         assertEquals(1.0, StatUtils.variance(sample), 0.01);\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(GaussianRandomGeneratorTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/random/RandomAdaptorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/RandomAdaptorTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.random;\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n+\n import java.util.Random;\n \n /**\n \n     public RandomAdaptorTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(RandomAdaptorTest.class);\n-        suite.setName(\"RandomAdaptor Tests\");\n-        return suite;\n     }\n \n     public void testAdaptor() {\n--- a/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n  */\n package org.apache.commons.math.random;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-import junit.framework.AssertionFailedError;\n-\n import java.text.DecimalFormat;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n \n+import junit.framework.AssertionFailedError;\n+\n import org.apache.commons.math.RetryTestCase;\n import org.apache.commons.math.distribution.PoissonDistribution;\n import org.apache.commons.math.distribution.PoissonDistributionImpl;\n import org.apache.commons.math.stat.Frequency;\n+import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n+import org.apache.commons.math.stat.inference.ChiSquareTest;\n import org.apache.commons.math.stat.inference.ChiSquareTestImpl;\n-import org.apache.commons.math.stat.inference.ChiSquareTest;\n-import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n \n /**\n  * Test cases for the RandomData class.\n             \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" };\n     protected RandomDataImpl randomData = null;\n     protected ChiSquareTestImpl testStatistic = new ChiSquareTestImpl();\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(RandomDataTest.class);\n-        suite.setName(\"RandomData Tests\");\n-        return suite;\n-    }\n \n     public void testNextIntExtremeValues() {\n         int x = randomData.nextInt(Integer.MIN_VALUE, Integer.MAX_VALUE);\n--- a/src/test/java/org/apache/commons/math/random/UncorrelatedRandomVectorGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/UncorrelatedRandomVectorGeneratorTest.java\n         generator = null;\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(UncorrelatedRandomVectorGeneratorTest.class);\n-    }\n-\n     private double[] mean;\n     private double[] standardDeviation;\n     private UncorrelatedRandomVectorGenerator generator;\n--- a/src/test/java/org/apache/commons/math/random/UniformRandomGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/UniformRandomGeneratorTest.java\n         assertEquals(1.0, StatUtils.variance(sample), 0.02);\n     }\n \n-\n-    public static Test suite() {\n-        return new TestSuite(UniformRandomGeneratorTest.class);\n-    }\n-\n }\n--- a/src/test/java/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/java/org/apache/commons/math/random/ValueServerTest.java\n  */\n package org.apache.commons.math.random;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import java.io.EOFException;\n import java.net.URL;\n \n             fail(\"malformed test URL\");\n         }\n     }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ValueServerTest.class);\n-        suite.setName(\"ValueServer Tests\");\n-        return suite;\n-    }\n-\n \n     /**\n       * Generate 1000 random values and make sure they look OK.<br>\n--- a/src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java\n  */\n package org.apache.commons.math.stat;\n \n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n import java.io.BufferedReader;\n import java.io.InputStreamReader;\n \n+import junit.framework.TestCase;\n+\n+import org.apache.commons.math.stat.descriptive.DescriptiveStatistics;\n import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n-import org.apache.commons.math.stat.descriptive.DescriptiveStatistics;\n \n /**\n  * Certified data test cases.\n      */\n     public CertifiedDataTest(String name) {\n         super(name);\n-    }\n-\n-    /**\n-     * @return The test suite\n-     */\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(CertifiedDataTest.class);\n-        suite.setName(\"Certified Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/FrequencyTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/FrequencyTest.java\n import java.io.StringReader;\n import java.util.Iterator;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.TestUtils;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link Frequency} class.\n     @Override\n     public void setUp() {\n         f = new Frequency();\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(FrequencyTest.class);\n-        suite.setName(\"Frequency Tests\");\n-        return suite;\n     }\n \n     /** test freq counts */\n--- a/src/test/java/org/apache/commons/math/stat/StatUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/StatUtilsTest.java\n  */\n package org.apache.commons.math.stat;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n \n \n     public StatUtilsTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(StatUtilsTest.class);\n-        suite.setName(\"StatUtil Tests\");\n-        return suite;\n     }\n \n     /** test stats */\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.moment.Mean;\n \n \n     public AbstractUnivariateStatisticTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(AbstractUnivariateStatisticTest.class);\n-        suite.setName(\"AbstractUnivariateStatistic Tests\");\n-        return suite;\n     }\n \n     protected double[] testArray = {0, 1, 2, 3, 4, 5};\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java\n \n package org.apache.commons.math.stat.descriptive;\n \n-import junit.framework.Test;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n-import java.util.Collection;\n-import java.util.ArrayList;\n-\n+\n+import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.random.RandomData;\n import org.apache.commons.math.random.RandomDataImpl;\n-import org.apache.commons.math.TestUtils;\n \n \n /**\n  *\n  */\n public class AggregateSummaryStatisticsTest extends TestCase {\n-\n-    /**\n-     * Creates and returns a {@code Test} representing all the test cases in this\n-     * class\n-     *\n-     * @return a {@code Test} representing all the test cases in this class\n-     */\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(AggregateSummaryStatisticsTest.class);\n-        suite.setName(\"AggregateSummaryStatistics tests\");\n-        return suite;\n-    }\n \n     /**\n      * Tests the standard aggregation behavior\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java\n \n import java.util.Locale;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.rank.Percentile;\n import org.apache.commons.math.util.MathUtils;\n \n     public DescriptiveStatisticsTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(DescriptiveStatisticsTest.class);\n-        suite.setName(\"DescriptiveStatistics Tests\");\n-        return suite;\n     }\n \n     protected DescriptiveStatistics createDescriptiveStatistics() {\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/ListUnivariateImplTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/ListUnivariateImplTest.java\n import java.util.ArrayList;\n import java.util.List;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.TestUtils;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link ListUnivariateImpl} class.\n \n     public ListUnivariateImplTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ListUnivariateImplTest.class);\n-        suite.setName(\"Frequency Tests\");\n-        return suite;\n     }\n \n     /** test stats */\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/MixedListUnivariateImplTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/MixedListUnivariateImplTest.java\n import java.util.ArrayList;\n import java.util.List;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.util.NumberTransformer;\n import org.apache.commons.math.util.TransformerMap;\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link ListUnivariateImpl} class.\n \n         transformers.putTransformer(Bar.class, new BarTransformer());\n \n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MixedListUnivariateImplTest.class);\n-        suite.setName(\"Mixed List Tests\");\n-        return suite;\n     }\n \n     /** test stats */\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n \n import java.util.Locale;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.DimensionMismatchException;\n import org.apache.commons.math.TestUtils;\n \n     public MultivariateSummaryStatisticsTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MultivariateSummaryStatisticsTest.class);\n-        suite.setName(\"MultivariateSummaryStatistics tests\");\n-        return suite;\n     }\n \n     protected MultivariateSummaryStatistics createMultivariateSummaryStatistics(int k, boolean isCovarianceBiasCorrected) {\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValuesTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValuesTest.java\n package org.apache.commons.math.stat.descriptive;\n \n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n /**\n \n     public StatisticalSummaryValuesTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(StatisticalSummaryValuesTest.class);\n-        suite.setName(\"StatisticalSummaryValues Tests\");\n-        return suite;\n     }\n \n     public void testSerialization() {\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-\n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.stat.descriptive.moment.Mean;\n     private double max = 3;\n     private double tolerance = 10E-15;\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SummaryStatisticsTest.class);\n-        suite.setName(\"SummaryStatistics tests\");\n-        return suite;\n-    }\n-\n     public SummaryStatisticsTest(String name) {\n         super(name);\n     }\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link SynchronizedDescriptiveStatisticsTest} class.\n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SynchronizedDescriptiveStatisticsTest.class);\n-        suite.setName(\"SynchronizedDescriptiveStatistics Tests\");\n-        return suite;\n-    }\n-\n     @Override\n     protected DescriptiveStatistics createDescriptiveStatistics() {\n         return new SynchronizedDescriptiveStatistics();\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatisticsTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the {@link SynchronizedMultivariateSummaryStatisticsTest} class.\n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SynchronizedMultivariateSummaryStatisticsTest.class);\n-        suite.setName(\"SynchronizedMultivariateSummaryStatistics Tests\");\n-        return suite;\n-    }\n-\n     @Override\n     protected MultivariateSummaryStatistics createMultivariateSummaryStatistics(int k, boolean isCovarianceBiasCorrected) {\n         return new SynchronizedMultivariateSummaryStatistics(k, isCovarianceBiasCorrected);\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatisticsTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n /**\n  * Test cases for the {@link SynchronizedSummaryStatisticsTest} class.\n  * @version $Revision$ $Date: 2007-08-16 15:36:33 -0500 (Thu, 16 Aug\n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SynchronizedSummaryStatisticsTest.class);\n-        suite.setName(\"SynchronizedSummaryStatistics Tests\");\n-        return suite;\n-    }\n-\n     @Override\n     protected SummaryStatistics createSummaryStatistics() {\n         return new SynchronizedSummaryStatistics();\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java\n  */\n package org.apache.commons.math.stat.descriptive;\n \n-import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.List;\n \n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/GeometricMeanTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/GeometricMeanTest.java\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public GeometricMeanTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(GeometricMeanTest.class);\n-        suite.setName(\"Mean  Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/KurtosisTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/KurtosisTest.java\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public KurtosisTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(KurtosisTest.class);\n-        suite.setName(\"Kurtosis  Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/MeanTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/MeanTest.java\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public MeanTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MeanTest.class);\n-        suite.setName(\"Mean  Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/SkewnessTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/SkewnessTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n-\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n         return new Skewness();\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SkewnessTest.class);\n-        suite.setName(\"Skewness Tests\");\n-        return suite;\n-    }\n-\n     /**\n      * {@inheritDoc}\n      */\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviationTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviationTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n-\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n     @Override\n     public UnivariateStatistic getUnivariateStatistic() {\n         return new StandardDeviation();\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(StandardDeviationTest.class);\n-        suite.setName(\"StandardDeviation Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.descriptive.moment;\n-\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n     @Override\n     public UnivariateStatistic getUnivariateStatistic() {\n         return new Variance();\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(VarianceTest.class);\n-        suite.setName(\"Variance Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java\n \n package org.apache.commons.math.stat.descriptive.moment;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.DimensionMismatchException;\n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.linear.RealMatrix;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class VectorialCovarianceTest\n extends TestCase {\n         points = null;\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(VectorialCovarianceTest.class);\n-    }\n-\n     private double [][] points;\n \n }\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java\n \n package org.apache.commons.math.stat.descriptive.moment;\n \n+import junit.framework.TestCase;\n+\n import org.apache.commons.math.DimensionMismatchException;\n import org.apache.commons.math.TestUtils;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n public class VectorialMeanTest\n extends TestCase {\n         points = null;\n     }\n \n-    public static Test suite() {\n-        return new TestSuite(VectorialMeanTest.class);\n-    }\n-\n     private double [][] points;\n \n }\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/rank/MaxTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/rank/MaxTest.java\n  */\n package org.apache.commons.math.stat.descriptive.rank;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public MaxTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MaxTest.class);\n-        suite.setName(\"Max  Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/rank/MedianTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/rank/MedianTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.descriptive.rank;\n-\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n import org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest;\n         super(name);\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MedianTest.class);\n-        suite.setName(\"Median  Tests\");\n-        return suite;\n-    }\n-\n     /**\n      * {@inheritDoc}\n      */\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/rank/MinTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/rank/MinTest.java\n  */\n package org.apache.commons.math.stat.descriptive.rank;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public MinTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MinTest.class);\n-        suite.setName(\"Min  Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java\n  */\n package org.apache.commons.math.stat.descriptive.rank;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n import org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest;\n \n      */\n     public PercentileTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(PercentileTest.class);\n-        suite.setName(\"Percentile Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/summary/ProductTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/summary/ProductTest.java\n  */\n package org.apache.commons.math.stat.descriptive.summary;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public ProductTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ProductTest.class);\n-        suite.setName(\"Product Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumLogTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumLogTest.java\n  */\n package org.apache.commons.math.stat.descriptive.summary;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public SumLogTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SumLogTest.class);\n-        suite.setName(\"SumLog Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumSqTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumSqTest.java\n  */\n package org.apache.commons.math.stat.descriptive.summary;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public SumSqTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SumSqTest.class);\n-        suite.setName(\"SumSq Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/summary/SumTest.java\n  */\n package org.apache.commons.math.stat.descriptive.summary;\n \n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n-\n import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.descriptive.UnivariateStatistic;\n \n      */\n     public SumTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SumTest.class);\n-        suite.setName(\"Sum Tests\");\n-        return suite;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.inference;\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the ChiSquareTestFactory.\n         testStatistic = TestUtils.getUnknownDistributionChiSquareTest();\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ChiSquareFactoryTest.class);\n-        suite.setName(\"ChiSquareTestFactory Tests\");\n-        return suite;\n-    }\n }\n--- a/src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java\n  */\n package org.apache.commons.math.stat.inference;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the ChiSquareTestImpl class.\n \n     public ChiSquareTestTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(ChiSquareTestTest.class);\n-        suite.setName(\"TestStatistic Tests\");\n-        return suite;\n     }\n \n     public void testChiSquare() throws Exception {\n--- a/src/test/java/org/apache/commons/math/stat/inference/OneWayAnovaTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/OneWayAnovaTest.java\n  */\n package org.apache.commons.math.stat.inference;\n \n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n import java.util.ArrayList;\n import java.util.List;\n+\n+import junit.framework.TestCase;\n \n /**\n  * Test cases for the OneWayAnovaImpl class.\n \n     public OneWayAnovaTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(OneWayAnovaTest.class);\n-        suite.setName(\"TestStatistic Tests\");\n-        return suite;\n     }\n \n     public void testAnovaFValue() throws Exception {\n--- a/src/test/java/org/apache/commons/math/stat/inference/TTestFactoryTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/TTestFactoryTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.stat.inference;\n-import junit.framework.Test;\n-import junit.framework.TestSuite;\n \n /**\n  * Test cases for the TTestTestFactory.\n         testStatistic = TestUtils.getTTest();\n     }\n \n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(TTestFactoryTest.class);\n-        suite.setName(\"TTestFactory Tests\");\n-        return suite;\n-    }\n }\n--- a/src/test/java/org/apache/commons/math/stat/inference/TTestTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/TTestTest.java\n  */\n package org.apache.commons.math.stat.inference;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n /**\n     public void setUp() {\n         tooShortStats = new SummaryStatistics();\n         tooShortStats.addValue(0d);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(TTestTest.class);\n-        suite.setName(\"TestStatistic Tests\");\n-        return suite;\n     }\n \n     public void testOneSampleT() throws Exception {\n--- a/src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java\n import java.util.ArrayList;\n import java.util.List;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n+\n import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n /**\n  * Test cases for the TestUtils class.\n \n     public TestUtilsTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(TestUtilsTest.class);\n-        suite.setName(\"TestUtils Tests\");\n-        return suite;\n     }\n \n     public void testChiSquare() throws Exception {\n--- a/src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n \n import java.util.Random;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n+\n /**\n  * Test cases for the TestStatistic class.\n  *\n \n     public SimpleRegressionTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(SimpleRegressionTest.class);\n-        suite.setName(\"BivariateRegression Tests\");\n-        return suite;\n     }\n \n     public void testNorris() {\n--- a/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n import java.util.List;\n import java.util.Map;\n \n-import junit.framework.Test;\n import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-\n+\n+import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.random.RandomDataImpl;\n-import org.apache.commons.math.TestUtils;\n \n /**\n  * Test cases for the MathUtils class.\n \n     public MathUtilsTest(String name) {\n         super(name);\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(MathUtilsTest.class);\n-        suite.setName(\"MathUtils Tests\");\n-        return suite;\n     }\n \n     /** cached binomial coefficients */", "timestamp": 1264184296, "metainfo": ""}