{"sha": "f28a47e6b823b2b43a5b787e23b820c6cecd6bc6", "log": "Changed to use updated decomp API.  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java\n      */\n     protected RealMatrix getOmegaInverse() {\n         if (OmegaInverse == null) {\n-            OmegaInverse = new LUSolver(new LUDecompositionImpl(Omega)).getInverse();\n+            OmegaInverse = new LUDecompositionImpl(Omega).getSolver().getInverse();\n         }\n         return OmegaInverse;\n     }\n         RealMatrix OI = getOmegaInverse();\n         RealMatrix XT = X.transpose();\n         RealMatrix XTOIX = XT.multiply(OI).multiply(X);\n-        RealMatrix inverse = new LUSolver(new LUDecompositionImpl(XTOIX)).getInverse();\n+        RealMatrix inverse = new LUDecompositionImpl(XTOIX).getSolver().getInverse();\n         return inverse.multiply(XT).multiply(OI).multiply(Y);\n     }\n \n--- a/src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java\n      */\n     protected RealMatrix calculateBetaVariance() {\n         RealMatrix XTX = X.transpose().multiply(X);\n-        return new LUSolver(new LUDecompositionImpl(XTX)).getInverse();\n+        return new LUDecompositionImpl(XTX).getSolver().getInverse();\n     }\n     \n ", "timestamp": 1231015835, "metainfo": ""}