{"sha": "10f49bc2c3b25f0aa61d32ef6d22de6fc788a98f", "log": "Added tests corresponding to examples in user guide.   ", "commit": "\n--- a/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n+++ b/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n /**\n  * Test cases for the {@link RealMatrixImpl} class.\n  *\n- * @version $Revision: 1.13 $ $Date: 2004/04/08 07:08:22 $\n+ * @version $Revision: 1.14 $ $Date: 2004/05/18 04:08:38 $\n  */\n \n public final class RealMatrixImplTest extends TestCase {\n         }\n     }\n     \n+    /** test examples in user guide */\n+    public void testExamples() {\n+        // Create a real matrix with two rows and three columns\n+        double[][] matrixData = { {1d,2d,3d}, {2d,5d,3d}};\n+        RealMatrix m = new RealMatrixImpl(matrixData);\n+        // One more with three rows, two columns\n+        double[][] matrixData2 = { {1d,2d}, {2d,5d}, {1d, 7d}};\n+        RealMatrix n = new RealMatrixImpl();\n+        n.setData(matrixData2); \n+        // Now multiply m by n\n+        RealMatrix p = m.multiply(n);\n+        assertEquals(2, p.getRowDimension());\n+        assertEquals(2, p.getColumnDimension());\n+        // Invert p\n+        RealMatrix pInverse = p.inverse(); \n+        assertEquals(2, pInverse.getRowDimension());\n+        assertEquals(2, pInverse.getColumnDimension());\n+        \n+        // Solve example\n+        double[][] coefficientsData = {{2, 3, -2}, {-1, 7, 6}, {4, -3, -5}};\n+        RealMatrix coefficients = new RealMatrixImpl(coefficientsData);\n+        double[] constants = {1, -2, 1};\n+        double[] solution = coefficients.solve(constants);\n+        assertEquals(2 * solution[0] + 3 * solution[1] -2 * solution[2], constants[0], 1E-12);\n+        assertEquals(-1 * solution[0] + 7 * solution[1] + 6 * solution[2], constants[1], 1E-12);\n+        assertEquals(4 * solution[0] - 3 * solution[1] -5 * solution[2], constants[2], 1E-12);   \n+        \n+    }\n+    \n     //--------------- -----------------Protected methods\n         \n     /** verifies that two matrices are close (1-norm) */              ", "timestamp": 1084853318, "metainfo": ""}