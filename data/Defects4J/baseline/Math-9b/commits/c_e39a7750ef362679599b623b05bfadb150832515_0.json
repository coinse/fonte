{"sha": "e39a7750ef362679599b623b05bfadb150832515", "log": "Increased default epsilon for Gamma, Beta function evaluation. JIRA: MATH-166 Reported and patched by Lukas Theussl   ", "commit": "\n--- a/src/java/org/apache/commons/math/special/Beta.java\n+++ b/src/java/org/apache/commons/math/special/Beta.java\n     private static final long serialVersionUID = -3833485397404128220L;\n \n     /** Maximum allowed numerical error. */\n-    private static final double DEFAULT_EPSILON = 10e-9;\n+    private static final double DEFAULT_EPSILON = 10e-15;\n \n     /**\n      * Default constructor.  Prohibit instantiation.\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n     private static final long serialVersionUID = -6587513359895466954L;\n \n     /** Maximum allowed numerical error. */\n-    private static final double DEFAULT_EPSILON = 10e-9;\n+    private static final double DEFAULT_EPSILON = 10e-15;\n \n     /** Lanczos coefficients */\n     private static double[] lanczos =\n--- a/src/test/org/apache/commons/math/special/BetaTest.java\n+++ b/src/test/org/apache/commons/math/special/BetaTest.java\n     {\n         try {\n             double actual = Beta.regularizedBeta(x, a, b);\n-            TestUtils.assertEquals(expected, actual, 10e-5);\n+            TestUtils.assertEquals(expected, actual, 10e-15);\n         } catch(MathException ex){\n             fail(ex.getMessage());\n         }\n \n     private void testLogBeta(double expected, double a, double b) {\n         double actual = Beta.logBeta(a, b);\n-        TestUtils.assertEquals(expected, actual, 10e-5);\n+        TestUtils.assertEquals(expected, actual, 10e-15);\n     }\n \n     public void testRegularizedBetaNanPositivePositive() {\n     }\n     \n     public void testLogBetaPositivePositive() {\n-        testLogBeta(-0.693147, 1.0, 2.0);\n+        testLogBeta(-0.693147180559945, 1.0, 2.0);\n     }\n }\n--- a/src/test/org/apache/commons/math/special/GammaTest.java\n+++ b/src/test/org/apache/commons/math/special/GammaTest.java\n         try {\n             double actualP = Gamma.regularizedGammaP(a, x);\n             double actualQ = Gamma.regularizedGammaQ(a, x);\n-            TestUtils.assertEquals(expected, actualP, 10e-5);\n-            TestUtils.assertEquals(actualP, 1.0 - actualQ, 10e-5);\n+            TestUtils.assertEquals(expected, actualP, 10e-15);\n+            TestUtils.assertEquals(actualP, 1.0 - actualQ, 10e-15);\n         } catch(MathException ex){\n             fail(ex.getMessage());\n         }\n \n     private void testLogGamma(double expected, double x) {\n         double actual = Gamma.logGamma(x);\n-        TestUtils.assertEquals(expected, actual, 10e-5);\n+        TestUtils.assertEquals(expected, actual, 10e-15);\n     }\n \n     public void testRegularizedGammaNanPositive() {\n     }\n     \n     public void testRegularizedGammaPositivePositive() {\n-        testRegularizedGamma(0.632121, 1.0, 1.0);\n+        testRegularizedGamma(0.632120558828558, 1.0, 1.0);\n     }\n     \n     public void testLogGammaNan() {\n     }\n     \n     public void testLogGammaPositive() {\n-        testLogGamma(0.693147, 3.0);\n+        testLogGamma(0.6931471805599457, 3.0);\n     }\n }", "timestamp": 1182378244, "metainfo": ""}