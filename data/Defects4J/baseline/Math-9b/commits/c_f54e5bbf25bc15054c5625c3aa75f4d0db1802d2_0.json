{"sha": "f54e5bbf25bc15054c5625c3aa75f4d0db1802d2", "log": "moved synchronized setters/getters from SummaryStatistics to SynchronizedSummaryStatistics JIRA: MATH-183  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n      * \n      * @return the StorelessUnivariateStatistic implementing the sum\n      */\n-    public synchronized StorelessUnivariateStatistic getSumImpl() {\n+    public StorelessUnivariateStatistic getSumImpl() {\n         return sumImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setSumImpl(StorelessUnivariateStatistic sumImpl) {\n+    public void setSumImpl(StorelessUnivariateStatistic sumImpl) {\n         checkEmpty();\n         this.sumImpl = sumImpl;\n     }\n      * \n      * @return the StorelessUnivariateStatistic implementing the sum of squares\n      */\n-    public synchronized StorelessUnivariateStatistic getSumsqImpl() {\n+    public StorelessUnivariateStatistic getSumsqImpl() {\n         return sumsqImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setSumsqImpl(\n+    public void setSumsqImpl(\n             StorelessUnivariateStatistic sumsqImpl) {\n         checkEmpty();\n         this.sumsqImpl = sumsqImpl;\n      * \n      * @return the StorelessUnivariateStatistic implementing the minimum\n      */\n-    public synchronized StorelessUnivariateStatistic getMinImpl() {\n+    public StorelessUnivariateStatistic getMinImpl() {\n         return minImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setMinImpl(StorelessUnivariateStatistic minImpl) {\n+    public void setMinImpl(StorelessUnivariateStatistic minImpl) {\n         checkEmpty();\n         this.minImpl = minImpl;\n     }\n      * \n      * @return the StorelessUnivariateStatistic implementing the maximum\n      */\n-    public synchronized StorelessUnivariateStatistic getMaxImpl() {\n+    public StorelessUnivariateStatistic getMaxImpl() {\n         return maxImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setMaxImpl(StorelessUnivariateStatistic maxImpl) {\n+    public void setMaxImpl(StorelessUnivariateStatistic maxImpl) {\n         checkEmpty();\n         this.maxImpl = maxImpl;\n     }\n      * \n      * @return the StorelessUnivariateStatistic implementing the log sum\n      */\n-    public synchronized StorelessUnivariateStatistic getSumLogImpl() {\n+    public StorelessUnivariateStatistic getSumLogImpl() {\n         return sumLogImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added \n      *  (i.e if n > 0)\n      */\n-    public synchronized void setSumLogImpl(\n+    public void setSumLogImpl(\n             StorelessUnivariateStatistic sumLogImpl) {\n         checkEmpty();\n         this.sumLogImpl = sumLogImpl;\n      * \n      * @return the StorelessUnivariateStatistic implementing the geometric mean\n      */\n-    public synchronized StorelessUnivariateStatistic getGeoMeanImpl() {\n+    public StorelessUnivariateStatistic getGeoMeanImpl() {\n         return geoMeanImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setGeoMeanImpl(\n+    public void setGeoMeanImpl(\n             StorelessUnivariateStatistic geoMeanImpl) {\n         checkEmpty();\n         this.geoMeanImpl = geoMeanImpl;\n      * \n      * @return the StorelessUnivariateStatistic implementing the mean\n      */\n-    public synchronized StorelessUnivariateStatistic getMeanImpl() {\n+    public StorelessUnivariateStatistic getMeanImpl() {\n         return meanImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setMeanImpl(\n+    public void setMeanImpl(\n             StorelessUnivariateStatistic meanImpl) {\n         checkEmpty();\n         this.meanImpl = meanImpl;\n      * \n      * @return the StorelessUnivariateStatistic implementing the variance\n      */\n-    public synchronized StorelessUnivariateStatistic getVarianceImpl() {\n+    public StorelessUnivariateStatistic getVarianceImpl() {\n         return varianceImpl;\n     }\n \n      * @throws IllegalStateException if data has already been added\n      *  (i.e if n > 0)\n      */\n-    public synchronized void setVarianceImpl(\n+    public void setVarianceImpl(\n             StorelessUnivariateStatistic varianceImpl) {\n         checkEmpty();\n         this.varianceImpl = varianceImpl;\n--- a/src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java\n         return super.hashCode();\n     }\n \n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getSumImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getSumImpl() {\n+        return super.getSumImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setSumImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setSumImpl(StorelessUnivariateStatistic sumImpl) {\n+        super.setSumImpl(sumImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getSumsqImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getSumsqImpl() {\n+        return super.getSumsqImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setSumsqImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl) {\n+        super.setSumsqImpl(sumsqImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getMinImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getMinImpl() {\n+        return super.getMinImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setMinImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setMinImpl(StorelessUnivariateStatistic minImpl) {\n+        super.setMinImpl(minImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getMaxImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getMaxImpl() {\n+        return super.getMaxImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setMaxImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setMaxImpl(StorelessUnivariateStatistic maxImpl) {\n+        super.setMaxImpl(maxImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getSumLogImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getSumLogImpl() {\n+        return super.getSumLogImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setSumLogImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl) {\n+        super.setSumLogImpl(sumLogImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getGeoMeanImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getGeoMeanImpl() {\n+        return super.getGeoMeanImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setGeoMeanImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {\n+        super.setGeoMeanImpl(geoMeanImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getMeanImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getMeanImpl() {\n+        return super.getMeanImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setMeanImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setMeanImpl(StorelessUnivariateStatistic meanImpl) {\n+        super.setMeanImpl(meanImpl);\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#getVarianceImpl()\n+     */\n+    public synchronized StorelessUnivariateStatistic getVarianceImpl() {\n+        return super.getVarianceImpl();\n+    }\n+\n+    /**\n+     * @see org.apache.commons.math.stat.descriptive.SummaryStatistics#setVarianceImpl(StorelessUnivariateStatistic)\n+     */\n+    public synchronized void setVarianceImpl(StorelessUnivariateStatistic varianceImpl) {\n+        super.setVarianceImpl(varianceImpl);\n+    }\n+    \n }", "timestamp": 1202074748, "metainfo": ""}