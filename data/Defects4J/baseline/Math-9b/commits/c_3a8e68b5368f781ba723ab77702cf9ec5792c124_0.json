{"sha": "3a8e68b5368f781ba723ab77702cf9ec5792c124", "log": "Fixed bugged test (pr #31860), added more R certified tests   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n /**\n  * Test cases for the TestStatistic class.\n  *\n- * @version $Revision: 1.1 $ $Date: 2004/10/08 05:08:20 $\n+ * @version $Revision: 1.2 $ $Date: 2004/10/24 06:30:01 $\n  */\n \n public final class SimpleRegressionTest extends TestCase {\n     private double[][] infData = { { 15.6, 5.2 }, {26.8, 6.1 }, {37.8, 8.7 }, {36.4, 8.5 },\n             {35.5, 8.8 }, {18.6, 4.9 }, {15.3, 4.5 }, {7.9, 2.5 }, {0.0, 1.1 }\n     };\n-\n+    \n     /*\n-     * From http://www.xycoon.com/simple_linear_regression.htm\n-     */\n-    private double[][] infData2 = { { 1, 3 }, {2, 5 }, {3, 7 }, {4, 14 }, {5, 11 }};\n+     * Data with bad linear fit\n+     */\n+    private double[][] infData2 = { { 1, 1 }, {2, 0 }, {3, 5 }, {4, 2 },\n+            {5, -1 }, {6, 12 }\n+    };\n \n     public SimpleRegressionTest(String name) {\n         super(name);\n         for (int i = 0; i < data.length; i++) {\n             regression.addData(data[i][1], data[i][0]);\n         }\n+        // Tests against certified values from  \n+        // http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Norris.dat\n         assertEquals(\"slope\", 1.00211681802045, regression.getSlope(), 10E-12);\n         assertEquals(\"slope std err\", 0.429796848199937E-03,\n                 regression.getSlopeStdErr(),10E-12);\n             regression.getMeanSquareError(), 10E-10);\n         assertEquals(\"SSE\", 26.6173985294224,\n             regression.getSumSquaredErrors(),10E-9);\n+        // ------------  End certified data tests\n+          \n         assertEquals( \"predict(0)\",  -0.262323073774029,\n             regression.predict(0), 10E-12);\n         assertEquals(\"predict(1)\", 1.00211681802045 - 0.262323073774029,\n     }\n \n     public void testInference() throws Exception {\n-\n-        SimpleRegression regression = new SimpleRegression();\n+        //----------  verified against R, version 1.8.1 -----\n+        // infData\n+        regression = new SimpleRegression();\n         regression.addData(infData);\n-        \n-        assertEquals(\"slope confidence interval\",  0.0271,\n-                regression.getSlopeConfidenceInterval(), 0.0001);\n-        assertEquals(\"slope std err\",0.01146,\n-                regression.getSlopeStdErr(), 0.0001);\n-   \n+        assertEquals(\"slope std err\", 0.011448491,\n+                regression.getSlopeStdErr(), 1E-10);\n+        assertEquals(\"std err intercept\", 0.286036932,\n+                regression.getInterceptStdErr(),1E-8);\n+        assertEquals(\"significance\", 4.596e-07,\n+                regression.getSignificance(),1E-8);    \n+        assertEquals(\"slope conf interval half-width\", 0.0270713794287, \n+                regression.getSlopeConfidenceInterval(),1E-8);\n+        // infData2\n         regression = new SimpleRegression();\n         regression.addData(infData2);\n-        assertEquals(\"significance\",0.023331,\n-                regression.getSignificance(),0.0001);\n+        assertEquals(\"slope std err\", 1.07260253,\n+                regression.getSlopeStdErr(), 1E-8);\n+        assertEquals(\"std err intercept\",4.17718672,\n+                regression.getInterceptStdErr(),1E-8);\n+        assertEquals(\"significance\", 0.26183,\n+                regression.getSignificance(),1E-5);    \n+        assertEquals(\"slope conf interval half-width\", 2.97802204827, \n+                regression.getSlopeConfidenceInterval(),1E-8);\n+        //------------- End R-verified tests -------------------------------\n         \n         //FIXME: get a real example to test against with alpha = .01\n         assertTrue(\"tighter means wider\",", "timestamp": 1098599401, "metainfo": ""}