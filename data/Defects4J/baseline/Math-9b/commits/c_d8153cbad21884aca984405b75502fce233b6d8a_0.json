{"sha": "d8153cbad21884aca984405b75502fce233b6d8a", "log": "Improved (?) javadoc (MATH-677).  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java\n+++ b/src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java\n     }\n \n     /**\n-     * The FHT (Fast Hadamard Transformation) which uses only subtraction and addition.\n-     * <br>\n-     * Requires <b>Nlog2N = n2</b><sup>n</sup> additions.\n-     * <br>\n-     * <br>\n-     * <b><u>Short Table of manual calculation for N=8:</u></b>\n+     * The FHT (Fast Hadamard Transformation) which uses only subtraction and\n+     * addition. Requires {@code N * log2(N) = n * 2^n} additions.\n+     *\n+     * <h3>Short Table of manual calculation for N=8</h3>\n      * <ol>\n-     * <li><b>x</b> is the input vector we want to transform</li>\n-     * <li><b>y</b> is the output vector which is our desired result</li>\n-     * <li>a and b are just helper rows</li>\n+     * <li><b>x</b> is the input vector to be transformed,</li>\n+     * <li><b>y</b> is the output vector (Fast Hadamard transform of <b>x</b>),</li>\n+     * <li>a and b are helper rows.</li>\n      * </ol>\n-     * <table border=\"1\" align=\"center\">\n+     * <table align=\"center\" border=\"1\" cellpadding=\"3\">\n+     * <tbody align=\"center\">\n      * <tr>\n      *     <th>x</th>\n      *     <th>a</th>\n      *     <th>y</th>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>0</sub></td>\n+     *     <th>x<sub>0</sub></th>\n      *     <td>a<sub>0</sub> = x<sub>0</sub> + x<sub>1</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>0</sub> + a<sub>1</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>0</sub >+ b<sub>1</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>1</sub></td>\n+     *     <th>x<sub>1</sub></th>\n      *     <td>a<sub>1</sub> = x<sub>2</sub> + x<sub>3</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>2</sub> + a<sub>3</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>2</sub> + b<sub>3</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>2</sub></td>\n+     *     <th>x<sub>2</sub></th>\n      *     <td>a<sub>2</sub> = x<sub>4</sub> + x<sub>5</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>4</sub> + a<sub>5</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>4</sub> + b<sub>5</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>3</sub></td>\n+     *     <th>x<sub>3</sub></th>\n      *     <td>a<sub>3</sub> = x<sub>6</sub> + x<sub>7</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>6</sub> + a<sub>7</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>6</sub> + b<sub>7</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>4</sub></td>\n+     *     <th>x<sub>4</sub></th>\n      *     <td>a<sub>0</sub> = x<sub>0</sub> - x<sub>1</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>0</sub> - a<sub>1</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>0</sub> - b<sub>1</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>5</sub></td>\n+     *     <th>x<sub>5</sub></th>\n      *     <td>a<sub>1</sub> = x<sub>2</sub> - x<sub>3</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>2</sub> - a<sub>3</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>2</sub> - b<sub>3</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>6</sub></td>\n+     *     <th>x<sub>6</sub></th>\n      *     <td>a<sub>2</sub> = x<sub>4</sub> - x<sub>5</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>4</sub> - a<sub>5</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>4</sub> - b<sub>5</sub></td>\n      * </tr>\n      * <tr>\n-     *     <td>x<sub>7</sub></td>\n+     *     <th>x<sub>7</sub></th>\n      *     <td>a<sub>3</sub> = x<sub>6</sub> - x<sub>7</sub></td>\n      *     <td>b<sub>0</sub> = a<sub>6</sub> - a<sub>7</sub></td>\n      *     <td>y<sub>0</sub> = b<sub>6</sub> - b<sub>7</sub></td>\n      * </tr>\n+     * </tbody>\n      * </table>\n      *\n-     * <b><u>How it works</u></b>\n+     * <h3>How it works</h3>\n      * <ol>\n-     * <li>Construct a matrix with N rows and n+1 columns<br>   <b>hadm[n+1][N]</b>\n-     * <br><i>(If I use [x][y] it always means [row-offset][column-offset] of a Matrix with n rows and m columns. Its entries go from M[0][0] to M[n][m])</i></li>\n-     * <li>Place the input vector <b>x[N]</b> in the first column of the matrix <b>hadm</b></li>\n-     * <li>The entries of the submatrix D<sub>top</sub> are calculated as follows.\n-     * <br>D<sub>top</sub> goes from entry [0][1] to [N/2-1][n+1].\n-     * <br>The columns of D<sub>top</sub> are the pairwise mutually exclusive sums of the previous column\n+     * <li>Construct a matrix with {@code N} rows and {@code n + 1} columns,\n+     * {@code hadm[n+1][N]}.<br/>\n+     * <em>(If I use [x][y] it always means [row-offset][column-offset] of a\n+     * Matrix with n rows and m columns. Its entries go from M[0][0]\n+     * to M[n][N])</em></li>\n+     * <li>Place the input vector {@code x[N]} in the first column of the\n+     * matrix {@code hadm}.</li>\n+     * <li>The entries of the submatrix {@code D_top} are calculated as follows\n+     *     <ul>\n+     *         <li>{@code D_top} goes from entry {@code [0][1]} to\n+     *         {@code [N / 2 - 1][n + 1]},</li>\n+     *         <li>the columns of {@code D_top} are the pairwise mutually\n+     *         exclusive sums of the previous column.</li>\n+     *     </ul>\n      * </li>\n-     * <li>The entries of the submatrix D<sub>bottom</sub> are calculated as follows.\n-     * <br>D<sub>bottom</sub> goes from entry [N/2][1] to [N][n+1].\n-     * <br>The columns of D<sub>bottom</sub> are the pairwise differences of the previous column\n+     * <li>The entries of the submatrix {@code D_bottom} are calculated as\n+     * follows\n+     *     <ul>\n+     *         <li>{@code D_bottom} goes from entry {@code [N / 2][1]} to\n+     *         {@code [N][n + 1]},</li>\n+     *         <li>the columns of {@code D_bottom} are the pairwise differences\n+     *         of the previous column.</li>\n+     *     </ul>\n      * </li>\n-     * <li>How D<sub>top</sub> and D<sub>bottom</sub> you can understand best with the example for N=8 above.\n-     * <li>The output vector y is now in the last column of <b>hadm</b></li>\n-     * <li><i>Algorithm from: http://www.archive.chipcenter.com/dsp/DSP000517F1.html</i></li>\n+     * <li>The consputation of {@code D_top} and {@code D_bottom} are best\n+     * understood with the above example (for {@code N = 8}).\n+     * <li>The output vector {@code y} is now in the last column of\n+     * {@code hadm}.</li>\n+     * <li><em>Algorithm from <a href=\"http://www.archive.chipcenter.com/dsp/DSP000517F1.html\">chipcenter</a>.</em></li>\n      * </ol>\n-     * <br>\n-     * <b><u>Visually</u></b>\n-     * <table border=\"1\" align=\"center\">\n-     * <tr>\n-     *     <td>0</td>\n-     *     <td>1</td>\n-     *     <td>2</td>\n-     *     <td>3</td>\n-     *     <td>...</td>\n-     *     <td>n + 1</td>\n-     * </tr>\n-     * <tr>\n-     *     <td>0</td>\n+     * <h3>Visually</h3>\n+     * <table border=\"1\" align=\"center\" cellpadding=\"3\">\n+     * <tbody align=\"center\">\n+     * <tr>\n+     *     <td></td><th>0</th><th>1</th><th>2</th><th>3</th>\n+     *     <th>&hellip;</th>\n+     *     <th>n + 1</th>\n+     * </tr>\n+     * <tr>\n+     *     <th>0</th>\n      *     <td>x<sub>0</sub></td>\n-     *     <td colspan=\"5\">&uarr;</td>\n-     * </tr>\n+     *     <td colspan=\"5\" rowspan=\"5\" align=\"center\" valign=\"middle\">\n+     *         &uarr;<br/>\n+     *         &larr; D<sub>top</sub> &rarr;<br/>\n+     *         &darr;\n+     *     </td>\n+     * </tr>\n+     * <tr><th>1</th><td>x<sub>1</sub></td></tr>\n+     * <tr><th>2</th><td>x<sub>2</sub></td></tr>\n+     * <tr><th>&hellip;</th><td>&hellip;</td></tr>\n+     * <tr><th>N / 2 - 1</th><td>x<sub>N/2-1</sub></td></tr>\n+     * <tr>\n+     *     <th>N / 2</th>\n+     *     <td>x<sub>N/2</sub></td>\n+     *     <td colspan=\"5\" rowspan=\"5\" align=\"center\" valign=\"middle\">\n+     *         &uarr;<br/>\n+     *         &larr; D<sub>bottom</sub> &rarr;<br/>\n+     *         &darr;\n+     *     </td>\n+     * </tr>\n+     * <tr><th>N / 2 + 1</th><td>x<sub>N/2+1</sub></td></tr>\n+     * <tr><th>N / 2 + 2</th><td>x<sub>N/2+2</sub></td></tr>\n+     * <tr><th>&hellip;</th><td>&hellip;</td></tr>\n+     * <tr><th>N</th><td>x<sub>N</sub></td></tr>\n+     * </tbody>\n      * </table>\n-     * <pre>\n-     *        +--------+---+---+---+-----+---+\n-     *        |   0    | 1 | 2 | 3 | ... |n+1|\n-     * +------+--------+---+---+---+-----+---+\n-     * |0     | x<sub>0</sub>     |       /\\            |\n-     * |1     | x<sub>1</sub>     |       ||            |\n-     * |2     | x<sub>2</sub>     |   <= D<sub>top</sub>  =>       |\n-     * |...   | ...    |       ||            |\n-     * |N/2-1 | x<sub>N/2-1</sub>  |       \\/            |\n-     * +------+--------+---+---+---+-----+---+\n-     * |N/2   | x<sub>N/2</sub>   |       /\\            |\n-     * |N/2+1 | x<sub>N/2+1</sub>  |       ||            |\n-     * |N/2+2 | x<sub>N/2+2</sub>  |  <= D<sub>bottom</sub>  =>      | which is in the last column of the matrix\n-     * |...   | ...    |       ||            |\n-     * |N     | x<sub>N/2</sub>   |        \\/           |\n-     * +------+--------+---+---+---+-----+---+\n-     * </pre>\n      *\n-     * @param x input vector\n-     * @return y output vector\n+     * @param x the input vector\n+     * @return the output vector, {@code y}\n      * @exception IllegalArgumentException if input array is not a power of 2\n      */\n     protected double[] fht(double[] x) throws IllegalArgumentException {", "timestamp": 1322725383, "metainfo": ""}