{"sha": "83f7428b00c65298559e4988142f36eb68bdb783", "log": "Formatting, javadoc, plus fix for toString to handle empty matrix.   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n  * is 0-based -- e.g., <code>getEntry(0, 0)</code>\n  * returns the element in the first row, first column of the matrix.</li></ul>\n  *\n- * @version $Revision: 1.31 $ $Date: 2004/10/10 05:23:16 $\n+ * @version $Revision: 1.32 $ $Date: 2004/10/10 18:00:33 $\n  */\n public class RealMatrixImpl implements RealMatrix, Serializable {\n     \n     }\n \n     /**\n-     * Create a new RealMatrix using the <code>data</code> as the underlying\n+     * Create a new RealMatrix using the input array as the underlying\n      * data array.\n      * <p>\n      * The input array is copied, not referenced.\n      *\n      * @param d data for new matrix\n-     * @throws IllegalArgumentException if data is not rectangular (not all\n-     *  rows have the same length) or data is empty\n-     * @throws NullPointerException if data is null\n+     * @throws IllegalArgumentException if <code>data</code> is not rectangular\n+     *  (not all rows have the same length) or empty\n+     * @throws NullPointerException if <code>data</code> is null\n      */\n     public RealMatrixImpl(double[][] d) {\n         int nRows = d.length;\n      */\n     public RealMatrix getSubMatrix(int startRow, int endRow, int startColumn,\n             int endColumn) throws MatrixIndexException {\n-        if (startRow < 0 || startRow > endRow || endRow > data.length\n-             || startColumn < 0 || startColumn > endColumn\n-             || endColumn > data[0].length ) {\n+        if (startRow < 0 || startRow > endRow || endRow > data.length ||\n+             startColumn < 0 || startColumn > endColumn ||\n+             endColumn > data[0].length ) {\n             throw new MatrixIndexException(\n                     \"invalid row or column index selection\");\n         }\n     public String toString() {\n         StringBuffer res = new StringBuffer();\n         res.append(\"RealMatrixImpl{\");\n-        for (int i = 0; i < data.length; i++) {\n-            if (i > 0)\n-                res.append(\",\");\n-            res.append(\"{\");\n-            for (int j = 0; j < data[0].length; j++) {\n-                if (j > 0)\n+        if (data != null) {\n+            for (int i = 0; i < data.length; i++) {\n+                if (i > 0)\n                     res.append(\",\");\n-                res.append(data[i][j]);\n-            } //for\n-            res.append(\"}\");\n-        } //for\n+                res.append(\"{\");\n+                for (int j = 0; j < data[0].length; j++) {\n+                    if (j > 0)\n+                        res.append(\",\");\n+                    res.append(data[i][j]);\n+                } \n+                res.append(\"}\");\n+            } \n+        }\n         res.append(\"}\");\n         return res.toString();\n-    } //toString\n+    } \n     \n     /**\n      * Returns true iff <code>object</code> is a ", "timestamp": 1097431233, "metainfo": ""}