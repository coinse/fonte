{"sha": "44fcbc79f1ad750573ca7a29c4c30d78092a0dfe", "log": "Added tests for AbstractUnivariateStatistic.   ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/math/stat/univariate/AbstractUnivariateStatisticTest.java\n+/*\n+ * \n+ * Copyright (coefficients) 2004 The Apache Software Foundation. All rights reserved.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ *  \n+ */\n+package org.apache.commons.math.stat.univariate;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.math.stat.univariate.moment.Mean;\n+\n+/**\n+ * Tests for AbstractUnivariateStatistic \n+ *\n+ * @version $Revision: 1.1 $ $Date: 2004/04/12 05:23:16 $\n+ */\n+public class AbstractUnivariateStatisticTest extends TestCase {\n+    \n+    public AbstractUnivariateStatisticTest(String name) {\n+        super(name);\n+    }\n+    \n+    public static Test suite() {\n+        TestSuite suite = new TestSuite(AbstractUnivariateStatisticTest.class);\n+        suite.setName(\"AbstractUnivariateStatistic Tests\");\n+        return suite;\n+    }\n+    \n+    protected double[] testArray = {0, 1, 2, 3, 4, 5};\n+    protected double[] nullArray = null;\n+    protected double[] singletonArray = {0};\n+    protected Mean testStatistic = new Mean();\n+    \n+    public void testTestPositive() {\n+        for (int j = 0; j < 5; j++) {\n+            for (int i = 1; i < (7 - j); i++) {\n+                assertTrue(testStatistic.test(testArray, 0, i));\n+            }  \n+        }\n+        assertTrue(testStatistic.test(singletonArray, 0, 1));\n+    }\n+    \n+    public void testTestNegative() {\n+        assertFalse(testStatistic.test(singletonArray, 0, 0));\n+        assertFalse(testStatistic.test(testArray, 0, 0));\n+        try {\n+            testStatistic.test(singletonArray, 2, 1);  // start past end\n+        } catch (IllegalArgumentException ex) {\n+            // expected\n+        }\n+        try {\n+            testStatistic.test(testArray, 0, 7);  // end past end\n+        } catch (IllegalArgumentException ex) {\n+            // expected\n+        }\n+        try {\n+            testStatistic.test(testArray, -1, 1);  // start negative\n+        } catch (IllegalArgumentException ex) {\n+            // expected\n+        }\n+        try {\n+            testStatistic.test(testArray, 0, -1);  // length negative\n+        } catch (IllegalArgumentException ex) {\n+            // expected\n+        }\n+        try {\n+            testStatistic.test(nullArray, 0, 1);  // null array\n+        } catch (IllegalArgumentException ex) {\n+            // expected\n+        }      \n+    } \n+}", "timestamp": 1081747396, "metainfo": ""}