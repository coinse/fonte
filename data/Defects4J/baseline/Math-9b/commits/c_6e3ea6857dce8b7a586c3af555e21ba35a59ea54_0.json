{"sha": "6e3ea6857dce8b7a586c3af555e21ba35a59ea54", "log": "Fixed parameter test in RandomDataImpl#nextExponential. JIRA: MATH-309.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n      * uniform deviates.\n      * </p>\n      *\n-     * @param mean\n-     *            the mean of the distribution\n+     * @param mean the mean of the distribution\n      * @return the random Exponential value\n      */\n     public double nextExponential(double mean) {\n-        if (mean < 0.0) {\n+        if (mean <= 0.0) {\n             throw MathRuntimeException.createIllegalArgumentException(\n                   \"mean must be positive ({0})\", mean);\n         }\n--- a/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n \t\t} catch (IllegalArgumentException ex) {\n \t\t\t// ignored\n \t\t}\n-\t\tassertEquals(\"0 mean\", 0, randomData.nextExponential(0), 10E-8);\n+        try {\n+            randomData.nextExponential(0);\n+            fail(\"zero mean -- expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException ex) {\n+            // ignored\n+        }\n \t\tlong cumFreq = 0;\n \t\tdouble v = 0;\n \t\tfor (int i = 0; i < largeSampleSize; i++) {", "timestamp": 1256956218, "metainfo": ""}