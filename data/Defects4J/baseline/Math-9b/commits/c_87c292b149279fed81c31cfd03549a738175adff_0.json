{"sha": "87c292b149279fed81c31cfd03549a738175adff", "log": "Use \"MathInternalError\" in an impossible \"default\" case of a \"switch\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n import org.apache.commons.math.exception.DimensionMismatchException;\n import org.apache.commons.math.exception.MathArithmeticException;\n import org.apache.commons.math.exception.MathIllegalArgumentException;\n+import org.apache.commons.math.exception.MathInternalError;\n import org.apache.commons.math.exception.NonMonotonousSequenceException;\n import org.apache.commons.math.exception.NotFiniteNumberException;\n import org.apache.commons.math.exception.NotPositiveException;\n                 break;\n             default:\n                 // Should never happen.\n-                throw new IllegalArgumentException();\n+                throw new MathInternalError();\n             }\n \n             previous = val[i];\n                 break;\n             default:\n                 // Should never happen.\n-                throw new IllegalArgumentException();\n+                throw new MathInternalError();\n             }\n             previous = val[i];\n         }\n                 break;\n             default:\n                 // Should never happen.\n-                throw new IllegalArgumentException();\n+                throw new MathInternalError();\n             }\n             previous = val[index];\n         }\n                 break;\n                 default:\n                     // Should never happen.\n-                    throw new IllegalArgumentException();\n+                    throw new MathInternalError();\n                 }\n                 return val;\n             }", "timestamp": 1316700998, "metainfo": ""}