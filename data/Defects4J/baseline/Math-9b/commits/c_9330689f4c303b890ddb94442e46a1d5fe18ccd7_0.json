{"sha": "9330689f4c303b890ddb94442e46a1d5fe18ccd7", "log": "Code and javadoc cleanup.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java\n     /**\n      * Compute a new point (in the original space) and a new direction\n      * vector, resulting from the line search.\n-     * The parameters {@code p} and {@code d} will be changed in-place.\n      *\n      * @param p Point used in the line search.\n      * @param d Direction used in the line search.\n                                             double[] d,\n                                             double optimum) {\n         final int n = p.length;\n-        final double[][] result = new double[2][n];\n-        final double[] nP = result[0];\n-        final double[] nD = result[1];\n+        final double[] nP = new double[n];\n+        final double[] nD = new double[n];\n         for (int i = 0; i < n; i++) {\n             nD[i] = d[i] * optimum;\n             nP[i] = p[i] + nD[i];\n         }\n+\n+        final double[][] result = new double[2][];\n+        result[0] = nP;\n+        result[1] = nD;\n+\n         return result;\n     }\n ", "timestamp": 1344527718, "metainfo": ""}