{"sha": "133b7ee9f5d62847c8417159f7fa6dc5d8f43459", "log": "Removing Dependency on BeanUtils   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java\n \n package org.apache.commons.math.stat.data;\n \n+import java.beans.Expression;\n+import java.beans.PropertyDescriptor;\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStreamReader;\n+import java.lang.reflect.Method;\n import java.net.URL;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n \n-import org.apache.commons.beanutils.PropertyUtils;\n+//import org.apache.commons.beanutils.PropertyUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.stat.univariate.DescriptiveStatistics;\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.2 $ $Date: 2004/04/12 02:27:50 $\n+ * @version $Revision: 1.3 $ $Date: 2004/06/01 22:15:51 $\n  */\n public abstract class CertifiedDataAbstractTest extends TestCase {\n \t\n \t\t\tString name = iter.next().toString();\n \t\t\tDouble expectedValue = (Double)certifiedValues.get(name);\n \t\t\ttry {\n-\t\t\t\tDouble summariesValue = (Double)PropertyUtils.getProperty(summaries, name);\n+\t\t\t\tDouble summariesValue = (Double)this.getProperty(summaries, name);\n \t\t\t\tTestUtils.assertEquals(\"summary value for \" + name + \" is incorrect.\",\n \t\t\t\t\t\tsummariesValue.doubleValue(), expectedValue.doubleValue(), getMaximumAbsoluteError());\n \t\t\t} catch (Exception ex) {\n \t\t\t}\n \t\t\t\n \t\t\ttry {\n-\t\t\t\tDouble descriptivesValue = (Double)PropertyUtils.getProperty(descriptives, name);\n+\t\t\t\tDouble descriptivesValue = (Double)this.getProperty(descriptives, name);\n \t\t\t\tTestUtils.assertEquals(\"descriptive value for \" + name + \" is incorrect.\",\n \t\t\t\t\t\tdescriptivesValue.doubleValue(), expectedValue.doubleValue(), getMaximumAbsoluteError());\n \t\t\t} catch (Exception ex) {\n \t\t\t}\n \t\t}\n  \t}\n+\t\n+\t\n+\tprotected Object getProperty(Object bean, String name){\n+\t    \n+\t    // Get the value of prop\n+\t    String prop = \"get\" + name.substring(0,1).toUpperCase() + name.substring(1);\n+\t    \n+        Expression expr = new Expression(bean, prop, new Object[0]);\n+        try {\n+            expr.execute();\n+            return expr.getValue();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        \n+        return null;\n+\t}\n }", "timestamp": 1086128151, "metainfo": ""}