{"sha": "95836d833482615c11d46e2e655f3eea06a641d7", "log": "added compareTo method with epsilon JIRA: MATH-247  ", "commit": "\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n         }\n \n         return logSum;      \n+    }\n+    \n+    /**\n+     * Compares two numbers given some amount of allowed error.\n+     * \n+     * @param x the first number\n+     * @param y the second number\n+     * @param eps the amount of error to allow when checking for equality\n+     * @return <ul><li>0 if  {@link #equals(double, double, double) equals(x, y, eps)}</li>\n+     *       <li>&lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} &amp;&amp; x &lt; y</li>\n+     *       <li>> 0 if !{@link #equals(double, double, double) equals(x, y, eps)} &amp;&amp; x > y</li></ul>\n+     */\n+    public static int compareTo(double x, double y, double eps) {\n+        if (equals(x, y, eps)) {\n+            return 0;\n+        } else if (x < y) {\n+          return -1;\n+        }\n+        return 1;\n     }\n     \n     /**\n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n             .isInfinite(x));\n     }\n \n+    public void testCompareTo() {\n+      assertEquals(0, MathUtils.compareTo(152.33, 152.32, .011));\n+      assertTrue(MathUtils.compareTo(152.308, 152.32, .011) < 0);\n+      assertTrue(MathUtils.compareTo(152.33, 152.318, .011) > 0);\n+    }\n+    \n     public void testCosh() {\n         double x = 3.0;\n         double expected = 10.06766;", "timestamp": 1235946082, "metainfo": ""}