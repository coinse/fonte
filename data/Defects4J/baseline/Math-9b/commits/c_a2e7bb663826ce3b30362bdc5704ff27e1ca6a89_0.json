{"sha": "a2e7bb663826ce3b30362bdc5704ff27e1ca6a89", "log": "MATH-795: removed unused imports.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n \n import java.io.Serializable;\n import java.util.Iterator;\n-import java.util.Random;\n-\n-import org.apache.commons.math3.TestUtils;\n+\n import org.apache.commons.math3.analysis.UnivariateFunction;\n-import org.apache.commons.math3.exception.DimensionMismatchException;\n-import org.apache.commons.math3.exception.MathArithmeticException;\n import org.apache.commons.math3.exception.MathIllegalArgumentException;\n-import org.apache.commons.math3.util.FastMath;\n import org.junit.Assert;\n import org.junit.Test;\n \n         }\n     }\n \n+    @Override\n+    public RealVector create(final double[] data) {\n+        return new ArrayRealVector(data, true);\n+    }\n+\n+    @Override\n+    public RealVector createAlien(double[] data) {\n+        return new RealVectorTestImpl(data);\n+    }\n+\n     @Test\n     public void testConstructors() {\n \n         Assert.assertEquals(0, new ArrayRealVector(new double[0], true).getDimension());\n         Assert.assertEquals(0, new ArrayRealVector(new double[0], false).getDimension());\n     }\n-\n-    @Override\n-    public RealVector create(final double[] data) {\n-        return new ArrayRealVector(data, true);\n-    }\n-\n-    @Override\n-    public RealVector createAlien(double[] data) {\n-        return new RealVectorTestImpl(data);\n-    }\n }\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n     }\n \n     @Override\n+    public RealVector create(final double[] data) {\n+        return new TestVectorImpl(data);\n+    }\n+\n+    @Override\n+    public RealVector createAlien(double[] data) {\n+        return new TestVectorImpl(data);\n+    }\n+\n+    @Override\n     public void testBasicFunctions() {\n         /*\n          *  TODO this test is huge, and some of the methods being tested are not\n     }\n \n     @Override\n-    public RealVector create(final double[] data) {\n-        return new TestVectorImpl(data);\n-    }\n-\n-    @Override\n-    public RealVector createAlien(double[] data) {\n-        return new TestVectorImpl(data);\n-    }\n-\n-    @Override\n     public void testDataInOut() {\n         /*\n          *  TODO Some of the tests carried out in testDataInOut() do not pass,\n--- a/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java\n \n import java.io.Serializable;\n import java.util.Iterator;\n+\n+import org.apache.commons.math3.analysis.UnivariateFunction;\n import org.junit.Assert;\n import org.junit.Test;\n-\n-import org.apache.commons.math3.TestUtils;\n-import org.apache.commons.math3.analysis.UnivariateFunction;\n-import org.apache.commons.math3.util.FastMath;\n-import org.apache.commons.math3.exception.MathIllegalArgumentException;\n \n /**\n  * Test cases for the {@link OpenMapRealVector} class.\n             throw unsupported();\n         }\n \n+    }\n+\n+    @Override\n+    public RealVector create(double[] data) {\n+        return new OpenMapRealVector(data);\n+    }\n+\n+    @Override\n+    public RealVector createAlien(double[] data) {\n+        return new SparseRealVectorTestImpl(data);\n     }\n \n     @Test\n         u.ebeMultiply(v1);\n         u.ebeDivide(v1);\n     }\n-\n-    @Override\n-    public RealVector create(double[] data) {\n-        return new OpenMapRealVector(data);\n-    }\n-\n-    @Override\n-    public RealVector createAlien(double[] data) {\n-        return new SparseRealVectorTestImpl(data);\n-    }\n }", "timestamp": 1338953019, "metainfo": ""}