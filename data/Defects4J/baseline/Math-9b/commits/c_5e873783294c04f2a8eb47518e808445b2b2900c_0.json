{"sha": "5e873783294c04f2a8eb47518e808445b2b2900c", "log": "MATH-493 FastMath min and max fail with (Infinity,-Infinity) (still to fix zero case)  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n      * @return a if a is lesser or equal to b, b otherwise\n      */\n     public static float min(final float a, final float b) {\n-        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);\n+        return (a <= b) ? a : ((a!=a||b!=b) ? Float.NaN : b);\n     }\n \n     /** Compute the minimum of two values\n      * @return a if a is lesser or equal to b, b otherwise\n      */\n     public static double min(final double a, final double b) {\n-        return (a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b);\n+        return (a <= b) ? a : ((a!=a||b!=b) ? Double.NaN : b);\n     }\n \n     /** Compute the maximum of two values\n      * @return b if a is lesser or equal to b, a otherwise\n      */\n     public static float max(final float a, final float b) {\n-        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);\n+        return (a < b) ? b : ((a!=a||b!=b) ? Float.NaN : a);\n     }\n \n     /** Compute the maximum of two values\n      * @return b if a is lesser or equal to b, a otherwise\n      */\n     public static double max(final double a, final double b) {\n-        return (a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);\n+        return (a <= b) ? b : ((a!=a||b!=b) ? Double.NaN : a);\n     }\n \n     /**\n     public static double hypot(double x, double y) {\n         return StrictMath.hypot(x, y); // TODO provide our own implementation\n     }\n+\n     /**\n      * Computes the remainder as prescribed by the IEEE 754 standard.\n      * The remainder value is mathematically equal to {@code x - y*n}", "timestamp": 1295646373, "metainfo": ""}