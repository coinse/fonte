{"sha": "d051a58bdcc1054c8d485f2b60493ec49c3d0c72", "log": "Function \"atan\": Cosmetic changes + \"final\" keyword.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n         }\n \n         /* Estimate the closest tabulated arctan value, compute eps = xa-tangentTable */\n-        if (xa < 1.0) {\n+        if (xa < 1) {\n             idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);\n         } else {\n-            double temp = 1.0/xa;\n-            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);\n+            final double oneOverXa = 1 / xa;\n+            idx = (int) (-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);\n         }\n         double epsA = xa - TANGENT_TABLE_A[idx];\n         double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);\n         if (idx == 0) {\n             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */\n             //double denom = 1.0 / (1.0 + xa*tangentTableA[idx] + xb*tangentTableA[idx] + xa*tangentTableB[idx] + xb*tangentTableB[idx]);\n-            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n+            final double denom = 1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));\n             //double denom = 1.0 / (1.0 + xa*tangentTableA[idx]);\n             ya = epsA * denom;\n             yb = epsB * denom;\n         } else {\n             double temp2 = xa * TANGENT_TABLE_A[idx];\n-            double za = 1.0 + temp2;\n-            double zb = -(za - 1.0 - temp2);\n+            double za = 1d + temp2;\n+            double zb = -(za - 1d - temp2);\n             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];\n             temp = za + temp2;\n             zb += -(temp - za - temp2);\n         epsB = yb;\n \n         /* Evaluate polynomial */\n-        double epsA2 = epsA*epsA;\n+        final double epsA2 = epsA * epsA;\n \n         /*\n     yb = -0.09001346640161823;\n         ya = temp;\n \n         /* Add in effect of epsB.   atan'(x) = 1/(1+x^2) */\n-        yb += epsB / (1.0 + epsA * epsA);\n-\n-        double result;\n-        double resultb;\n+        yb += epsB / (1d + epsA * epsA);\n \n         //result = yb + eighths[idx] + ya;\n         double za = EIGHTHS[idx] + ya;\n         zb += -(temp - za - yb);\n         za = temp;\n \n-        result = za + zb;\n-        resultb = -(result - za - zb);\n+        double result = za + zb;\n+        double resultb = -(result - za - zb);\n \n         if (leftPlane) {\n             // Result is in the left plane\n-            final double pia = 1.5707963267948966*2.0;\n-            final double pib = 6.123233995736766E-17*2.0;\n+            final double pia = 1.5707963267948966 * 2;\n+            final double pib = 6.123233995736766E-17 * 2;\n \n             za = pia - result;\n             zb = -(za - pia + result);", "timestamp": 1328799240, "metainfo": ""}