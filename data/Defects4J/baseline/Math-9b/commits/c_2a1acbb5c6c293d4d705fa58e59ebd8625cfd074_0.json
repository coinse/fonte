{"sha": "2a1acbb5c6c293d4d705fa58e59ebd8625cfd074", "log": "specialized exception for mismatched vectors or matrices dimensions  ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/DimensionMismatchException.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math;\n+\n+/**\n+ * Error thrown when two dimensions differ.\n+ * @version $Revision:$ $Date$\n+ */\n+public class DimensionMismatchException extends MathException {\n+    \n+    /** Serializable version identifier */\n+    private static final long serialVersionUID = -1316089546353786411L;\n+\n+    /**\n+     * Construct an exception from the mismatched dimensions\n+     * @param dimension1 first dimension\n+     * @param dimension2 second dimension\n+     */\n+    public DimensionMismatchException(int dimension1, int dimension2) {\n+        super(\"dimension mismatch {0} != {1}\",\n+              new Object[] {\n+                new Integer(dimension1), new Integer(dimension2)\n+              });\n+        this.dimension1 = dimension1;\n+        this.dimension2 = dimension2;\n+    }\n+\n+    /**\n+     * Get the first dimension\n+     * @return first dimension\n+     */\n+    public int getDimension1() {\n+        return dimension1;\n+    }\n+    \n+    /**\n+     * Get the second dimension\n+     * @return second dimension\n+     */\n+    public int getDimension2() {\n+        return dimension2;\n+    }\n+\n+    /** First dimension. */\n+    private int dimension1;\n+    \n+    /** Second dimension. */\n+    private int dimension2;\n+    \n+}", "timestamp": 1172531184, "metainfo": ""}