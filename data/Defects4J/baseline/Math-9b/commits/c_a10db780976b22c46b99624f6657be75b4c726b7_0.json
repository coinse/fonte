{"sha": "a10db780976b22c46b99624f6657be75b4c726b7", "log": "Added (trivial) tests for NaNs.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n         Assert.assertTrue(MathUtils.equals(-Float.MAX_VALUE, Float.NEGATIVE_INFINITY, 1));\n \n         Assert.assertFalse(MathUtils.equals(Float.NaN, Float.NaN, 1));\n+        Assert.assertFalse(MathUtils.equals(Float.NaN, Float.NaN, 0));\n+        Assert.assertFalse(MathUtils.equals(Float.NaN, 0, 0));\n+        Assert.assertFalse(MathUtils.equals(Float.NaN, Float.POSITIVE_INFINITY, 0));\n+        Assert.assertFalse(MathUtils.equals(Float.NaN, Float.NEGATIVE_INFINITY, 0));\n \n         Assert.assertFalse(MathUtils.equals(Float.NEGATIVE_INFINITY, Float.POSITIVE_INFINITY, 100000));\n     }\n         Assert.assertTrue(MathUtils.equals(-Double.MAX_VALUE, Double.NEGATIVE_INFINITY, 1));\n \n         Assert.assertFalse(MathUtils.equals(Double.NaN, Double.NaN, 1));\n+        Assert.assertFalse(MathUtils.equals(Double.NaN, Double.NaN, 0));\n+        Assert.assertFalse(MathUtils.equals(Double.NaN, 0, 0));\n+        Assert.assertFalse(MathUtils.equals(Double.NaN, Double.POSITIVE_INFINITY, 0));\n+        Assert.assertFalse(MathUtils.equals(Double.NaN, Double.NEGATIVE_INFINITY, 0));\n \n         Assert.assertFalse(MathUtils.equals(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 100000));\n     }", "timestamp": 1302802656, "metainfo": ""}