{"sha": "822aec70e9efc1d0bb3de1253ebcd00e7d587dba", "log": "Unnecessary casts  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java\n+++ b/src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java\n             int res = 0;\n             List<Integer> decoded = decode(sequence);\n             for (int i=0; i<decoded.size(); i++) {\n-                int value = (Integer) decoded.get(i);\n+                int value = decoded.get(i);\n                 if (value != i) {\n                     // bad position found\n                     res += Math.abs(value - i);\n--- a/src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java\n \n     public void testEqualsAndHashCode() {\n         BlockRealMatrix m = new BlockRealMatrix(testData);\n-        BlockRealMatrix m1 = (BlockRealMatrix) m.copy();\n-        BlockRealMatrix mt = (BlockRealMatrix) m.transpose();\n+        BlockRealMatrix m1 = m.copy();\n+        BlockRealMatrix mt = m.transpose();\n         assertTrue(m.hashCode() != mt.hashCode());\n         assertEquals(m.hashCode(), m1.hashCode());\n         assertEquals(m, m);\n--- a/src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java\n \n     public void testEqualsAndHashCode() {\n         OpenMapRealMatrix m = createSparseMatrix(testData);\n-        OpenMapRealMatrix m1 = (OpenMapRealMatrix) m.copy();\n+        OpenMapRealMatrix m1 = m.copy();\n         OpenMapRealMatrix mt = (OpenMapRealMatrix) m.transpose();\n         assertTrue(m.hashCode() != mt.hashCode());\n         assertEquals(m.hashCode(), m1.hashCode());", "timestamp": 1260326220, "metainfo": ""}