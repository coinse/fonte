{"sha": "b6889fc7451b3ea4c5b8c8271db0dc612df006b6", "log": "removed deprecated code  JIRA: MATH-438  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/ConvergenceException.java\n+++ b/src/main/java/org/apache/commons/math/ConvergenceException.java\n  */\n package org.apache.commons.math;\n \n-import org.apache.commons.math.exception.util.DummyLocalizable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n      */\n     public ConvergenceException() {\n         super(LocalizedFormats.CONVERGENCE_FAILED);\n-    }\n-\n-    /**\n-     * Constructs an exception with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @since 1.2\n-     * @deprecated as of 2.2 replaced by {@link #ConvergenceException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public ConvergenceException(String pattern, Object ... arguments) {\n-        this(new DummyLocalizable(pattern), arguments);\n     }\n \n     /**\n      * @param cause  the exception or error that caused this exception to be thrown\n      * @param pattern format specifier\n      * @param arguments format arguments\n-     * @since 1.2\n-     * @deprecated as of 2.2 replaced by {@link #ConvergenceException(Throwable, Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public ConvergenceException(Throwable cause, String pattern, Object ... arguments) {\n-        this(cause, new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs an exception with specified formatted detail message and root cause.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param cause  the exception or error that caused this exception to be thrown\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n      * @since 2.2\n      */\n     public ConvergenceException(Throwable cause, Localizable pattern, Object ... arguments) {\n--- a/src/main/java/org/apache/commons/math/MathException.java\n+++ b/src/main/java/org/apache/commons/math/MathException.java\n import java.io.PrintStream;\n import java.io.PrintWriter;\n import java.text.MessageFormat;\n+import java.util.Locale;\n import java.util.Set;\n-import java.util.Locale;\n \n import org.apache.commons.math.exception.MathThrowable;\n-import org.apache.commons.math.exception.util.DummyLocalizable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n      * Message formatting is delegated to {@link java.text.MessageFormat}.\n      * @param pattern format specifier\n      * @param arguments format arguments\n-     * @deprecated as of 2.2 replaced by {@link #MathException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public MathException(String pattern, Object ... arguments) {\n-      this(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>MathException</code> with specified\n-     * formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n      * @since 2.2\n      */\n     public MathException(Localizable pattern, Object ... arguments) {\n         super(rootCause);\n         this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;\n         this.arguments = new Object[] { (rootCause == null) ? \"\" : rootCause.getMessage() };\n-    }\n-\n-    /**\n-     * Constructs a new <code>MathException</code> with specified\n-     * formatted detail message and nested <code>Throwable</code> root cause.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param rootCause the exception or error that caused this exception\n-     * to be thrown.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @since 1.2\n-     * @deprecated as of 2.2 replaced by {@link #MathException(Throwable, Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public MathException(Throwable rootCause, String pattern, Object ... arguments) {\n-        this(rootCause, new DummyLocalizable(pattern), arguments);\n     }\n \n     /**\n     /** {@inheritDoc} */\n     public Set<String> getContextKeys() {\n         throw new UnsupportedOperationException(\"This class is deprecated; calling this method is a bug.\");\n-    }\n-\n-    /** Gets the pattern used to build the message of this throwable.\n-     *\n-     * @return the pattern used to build the message of this throwable\n-     * @since 1.2\n-     * @deprecated as of 2.2.\n-     */\n-    @Deprecated\n-    public String getPattern() {\n-        return pattern.getSourceString();\n     }\n \n     /** Gets the message in a specified locale.\n--- a/src/main/java/org/apache/commons/math/MathRuntimeException.java\n+++ b/src/main/java/org/apache/commons/math/MathRuntimeException.java\n import java.text.ParseException;\n import java.util.ConcurrentModificationException;\n import java.util.Locale;\n+import java.util.NoSuchElementException;\n import java.util.Set;\n-import java.util.NoSuchElementException;\n \n import org.apache.commons.math.exception.MathThrowable;\n-import org.apache.commons.math.exception.util.DummyLocalizable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n      * Message formatting is delegated to {@link java.text.MessageFormat}.\n      * @param pattern format specifier\n      * @param arguments format arguments\n-     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public MathRuntimeException(final String pattern, final Object ... arguments) {\n-        this(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>MathRuntimeException</code> with specified\n-     * formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n      * @since 2.2\n      */\n     public MathRuntimeException(final Localizable pattern, final Object ... arguments) {\n      * to be thrown.\n      * @param pattern format specifier\n      * @param arguments format arguments\n-     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Throwable, Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public MathRuntimeException(final Throwable rootCause,\n-                                final String pattern, final Object ... arguments) {\n-        this(rootCause, new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>MathRuntimeException</code> with specified\n-     * formatted detail message and nested <code>Throwable</code> root cause.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param rootCause the exception or error that caused this exception\n-     * to be thrown.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n      * @since 2.2\n      */\n     public MathRuntimeException(final Throwable rootCause,\n     private static String buildMessage(final Locale locale, final Localizable pattern,\n                                        final Object ... arguments) {\n         return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);\n-    }\n-\n-    /** Gets the pattern used to build the message of this throwable.\n-    *\n-    * @return the pattern used to build the message of this throwable\n-    * @deprecated as of 2.2\n-    */\n-    @Deprecated\n-    public String getPattern() {\n-        return pattern.getSourceString();\n     }\n \n     /** Gets the message in a specified locale.\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createArithmeticException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static ArithmeticException createArithmeticException(final String pattern,\n-                                                                final Object ... arguments) {\n-        return createArithmeticException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static ArithmeticException createArithmeticException(final Localizable pattern,\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createArrayIndexOutOfBoundsException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final String pattern,\n-                                                                                      final Object ... arguments) {\n-        return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final Localizable pattern,\n             }\n \n         };\n-    }\n-\n-    /**\n-     * Constructs a new <code>EOFException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createEOFException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static EOFException createEOFException(final String pattern,\n-                                                  final Object ... arguments) {\n-        return createEOFException(new DummyLocalizable(pattern), arguments);\n     }\n \n     /**\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createIllegalArgumentException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static IllegalArgumentException createIllegalArgumentException(final String pattern,\n-                                                                          final Object ... arguments) {\n-        return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static IllegalArgumentException createIllegalArgumentException(final Localizable pattern,\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createIllegalStateException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static IllegalStateException createIllegalStateException(final String pattern,\n-                                                                    final Object ... arguments) {\n-        return createIllegalStateException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>IllegalStateException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static IllegalStateException createIllegalStateException(final Localizable pattern,\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createConcurrentModificationException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static ConcurrentModificationException createConcurrentModificationException(final String pattern,\n-                                                                                        final Object ... arguments) {\n-        return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static ConcurrentModificationException createConcurrentModificationException(final Localizable pattern,\n      * @param pattern format specifier\n      * @param arguments format arguments\n      * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createNoSuchElementException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static NoSuchElementException createNoSuchElementException(final String pattern,\n-                                                                      final Object ... arguments) {\n-        return createNoSuchElementException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n      * @since 2.2\n      */\n     public static NoSuchElementException createNoSuchElementException(final Localizable pattern,\n             }\n \n         };\n-    }\n-\n-    /**\n-     * Constructs a new <code>UnsupportedOperationException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n-     * @since 2.2\n-     * @deprecated in 2.2. Please use {@link org.apache.commons.math.exception.MathUnsupportedOperationException}\n-     * instead.\n-     */\n-    @Deprecated\n-    public static UnsupportedOperationException createUnsupportedOperationException(final Localizable pattern,\n-                                                                                    final Object ... arguments) {\n-        return new UnsupportedOperationException() {\n-\n-            /** Serializable version identifier. */\n-            private static final long serialVersionUID = -4284649691002411505L;\n-\n-            /** {@inheritDoc} */\n-            @Override\n-            public String getMessage() {\n-                return buildMessage(Locale.US, pattern, arguments);\n-            }\n-\n-            /** {@inheritDoc} */\n-            @Override\n-            public String getLocalizedMessage() {\n-                return buildMessage(Locale.getDefault(), pattern, arguments);\n-            }\n-\n-        };\n-    }\n-\n-    /**\n-     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createNullPointerException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static NullPointerException createNullPointerException(final String pattern,\n-                                                                  final Object ... arguments) {\n-        return createNullPointerException(new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n-     * @since 2.2\n-     * @deprecated in 2.2. Checks for \"null\" must not be performed in Commons-Math.\n-     */\n-    @Deprecated\n-    public static NullPointerException createNullPointerException(final Localizable pattern,\n-                                                                  final Object ... arguments) {\n-        return new NullPointerException() {\n-\n-            /** Serializable version identifier. */\n-            private static final long serialVersionUID = 451965530686593945L;\n-\n-            /** {@inheritDoc} */\n-            @Override\n-            public String getMessage() {\n-                return buildMessage(Locale.US, pattern, arguments);\n-            }\n-\n-            /** {@inheritDoc} */\n-            @Override\n-            public String getLocalizedMessage() {\n-                return buildMessage(Locale.getDefault(), pattern, arguments);\n-            }\n-\n-        };\n-    }\n-\n-   /**\n-     * Constructs a new <code>ParseException</code> with specified\n-     * formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param offset offset at which error occurred\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n-     * @return built exception\n-     * @deprecated as of 2.2 replaced by {@link #createParseException(int, Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public static ParseException createParseException(final int offset,\n-                                                      final String pattern,\n-                                                      final Object ... arguments) {\n-        return createParseException(offset, new DummyLocalizable(pattern), arguments);\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java\n+++ b/src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java\n \n package org.apache.commons.math;\n \n-import org.apache.commons.math.ConvergenceException;\n-import org.apache.commons.math.exception.util.DummyLocalizable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n      * @param maxEvaluations the exceeded maximal number of evaluations\n      * @param pattern format specifier\n      * @param arguments format arguments\n-     * @deprecated as of 2.2 replaced by {@link #MaxEvaluationsExceededException(int, Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public MaxEvaluationsExceededException(final int maxEvaluations,\n-                                          final String pattern, final Object ... arguments) {\n-        this(maxEvaluations, new DummyLocalizable(pattern), arguments);\n-    }\n-\n-    /**\n-     * Constructs an exception with specified formatted detail message.\n-     * Message formatting is delegated to {@link java.text.MessageFormat}.\n-     * @param maxEvaluations the exceeded maximal number of evaluations\n-     * @param pattern format specifier\n-     * @param arguments format arguments\n      * @since 2.2\n      */\n     public MaxEvaluationsExceededException(final int maxEvaluations,\n--- a/src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java\n+++ b/src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java\n      * Build an exception by translating and formating a message\n      * @param specifier format specifier (to be translated)\n      * @param parts to insert in the format (no translation)\n-     * @deprecated as of 2.2 replaced by {@link #NotARotationMatrixException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public NotARotationMatrixException(String specifier, Object ... parts) {\n-        super(specifier, parts);\n-    }\n-\n-    /**\n-     * Simple constructor.\n-     * Build an exception by translating and formating a message\n-     * @param specifier format specifier (to be translated)\n-     * @param parts to insert in the format (no translation)\n      * @since 2.2\n      */\n     public NotARotationMatrixException(Localizable specifier, Object ... parts) {\n--- a/src/main/java/org/apache/commons/math/ode/IntegratorException.java\n+++ b/src/main/java/org/apache/commons/math/ode/IntegratorException.java\n      * Build an exception by translating and formating a message\n      * @param specifier format specifier (to be translated)\n      * @param parts to insert in the format (no translation)\n-     * @deprecated as of 2.2 replaced by {@link #IntegratorException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public IntegratorException(final String specifier, final Object ... parts) {\n-      super(specifier, parts);\n-    }\n-\n-    /** Simple constructor.\n-     * Build an exception by translating and formating a message\n-     * @param specifier format specifier (to be translated)\n-     * @param parts to insert in the format (no translation)\n      * @since 2.2\n      */\n     public IntegratorException(final Localizable specifier, final Object ... parts) {\n--- a/src/main/java/org/apache/commons/math/ode/events/EventException.java\n+++ b/src/main/java/org/apache/commons/math/ode/events/EventException.java\n      * Build an exception by translating and formating a message\n      * @param specifier format specifier (to be translated)\n      * @param parts to insert in the format (no translation)\n-     * @deprecated as of 2.2 replaced by {@link #EventException(Localizable, Object...)}\n-     */\n-     @Deprecated\n-    public EventException(final String specifier, final Object ... parts) {\n-        super(specifier, parts);\n-    }\n-\n-    /** Simple constructor.\n-     * Build an exception by translating and formating a message\n-     * @param specifier format specifier (to be translated)\n-     * @param parts to insert in the format (no translation)\n      * @since 2.2\n      */\n     public EventException(final Localizable specifier, final Object ... parts) {\n--- a/src/main/java/org/apache/commons/math/optimization/OptimizationException.java\n+++ b/src/main/java/org/apache/commons/math/optimization/OptimizationException.java\n      * Build an exception by translating and formating a message\n      * @param specifier format specifier (to be translated)\n      * @param parts to insert in the format (no translation)\n-     * @deprecated as of 2.2 replaced by {@link #OptimizationException(Localizable, Object...)}\n-     */\n-    @Deprecated\n-    public OptimizationException(String specifier, Object ... parts) {\n-        this(new DummyLocalizable(specifier), parts);\n-    }\n-\n-    /**\n-     * Simple constructor.\n-     * Build an exception by translating and formating a message\n-     * @param specifier format specifier (to be translated)\n-     * @param parts to insert in the format (no translation)\n      * @since 2.2\n      */\n     public OptimizationException(Localizable specifier, Object ... parts) {\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n             }\n         }\n         return ret;\n-    }\n-\n-    /**\n-     * Scale a number by 2<sup>scaleFactor</sup>.\n-     * <p>If {@code d} is 0 or NaN or Infinite, it is returned unchanged.</p>\n-     *\n-     * @param d base number\n-     * @param scaleFactor power of two by which d should be multiplied\n-     * @return d &times; 2<sup>scaleFactor</sup>\n-     * @since 2.0\n-     * @deprecated as of 2.2, replaced by {@link FastMath#scalb(double, int)}\n-     */\n-    @Deprecated\n-    public static double scalb(final double d, final int scaleFactor) {\n-        return FastMath.scalb(d, scaleFactor);\n     }\n \n     /**", "timestamp": 1300910014, "metainfo": ""}