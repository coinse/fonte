{"sha": "6ae7eb040dc8b2aef45695cf6bf657d44b1a7a4a", "log": "Improved error messages.  ", "commit": "\n--- a/src/test/org/apache/commons/math/TestUtils.java\n+++ b/src/test/org/apache/commons/math/TestUtils.java\n     /**\n      * Verifies that two double arrays have equal entries, up to tolerance\n      */\n-    public static void assertEquals(double a[], double b[], double tolerance) {\n-        Assert.assertEquals(a.length, b.length);\n-        for (int i = 0; i < a.length; i++) {\n-            Assert.assertEquals(a[i], b[i], tolerance);\n-        }\n+    public static void assertEquals(double expected[], double observed[], double tolerance) {\n+        assertEquals(\"Array comparison failure\", expected, observed, tolerance);\n     }\n     \n     /**\n     }\n     \n     /** verifies that two arrays are close (sup norm) */\n-    public static void assertEquals(String msg, double[] m, double[] n,\n+    public static void assertEquals(String msg, double[] expected, double[] observed,\n         double tolerance) {\n-        if (m.length != n.length) {\n-            Assert.fail(\"vectors not same length\");\n-        }\n-        for (int i = 0; i < m.length; i++) {\n-            Assert.assertEquals(msg + \" \" +  i + \" elements differ\", \n-                m[i],n[i],tolerance);\n+        StringBuffer out = new StringBuffer(msg);\n+        if (expected.length != observed.length) {\n+            out.append(\"\\n Arrays not same length. \\n\");\n+            out.append(\"expected has length \");\n+            out.append(expected.length);\n+            out.append(\" observed length = \");\n+            out.append(observed.length);\n+            Assert.fail(out.toString());\n+        }\n+        boolean failure = false;\n+        for (int i=0; i < expected.length; i++) {\n+            try {\n+                Assert.assertEquals(expected[i], observed[i], tolerance);\n+            } catch (AssertionFailedError ex) {\n+                failure = true;\n+                out.append(\"\\n Elements at index \");\n+                out.append(i);\n+                out.append(\" differ. \");\n+                out.append(\" expected = \");\n+                out.append(expected[i]);\n+                out.append(\" observed = \");\n+                out.append(observed[i]); \n+            }\n+        }\n+        if (failure) {\n+            Assert.fail(out.toString());\n         }\n     }\n     ", "timestamp": 1240766099, "metainfo": ""}