{"sha": "a5d4b8ec8fb4fe11b573b224093cd1a303d4f71e", "log": "Added tests for special values.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- * @version $Revision: 1.11 $ $Date: 2004/06/17 21:37:05 $\n+ * @version $Revision: 1.12 $ $Date: 2004/06/18 06:33:27 $\n  */\n public class SumLogTest extends StorelessUnivariateStatisticAbstractTest{\n \n     public double expectedValue() {\n         return this.sumLog;\n     }\n+    \n+    public void testSpecialValues() {\n+        SumOfLogs sum = new SumOfLogs();\n+        // empty\n+        assertTrue(Double.isNaN(sum.getResult()));\n+        \n+        // finite data\n+        sum.increment(1d);\n+        assertFalse(Double.isNaN(sum.getResult()));\n+        \n+        // add negative infinity\n+        sum.increment(0d);\n+        assertEquals(Double.NEGATIVE_INFINITY, sum.getResult(), 0);\n+        \n+        // add positive infinity -- should make NaN\n+        sum.increment(Double.POSITIVE_INFINITY);\n+        assertTrue(Double.isNaN(sum.getResult()));\n+        \n+        // clear\n+        sum.clear();\n+        assertTrue(Double.isNaN(sum.getResult()));\n+        \n+        // positive infinity by itself\n+        sum.increment(Double.POSITIVE_INFINITY);\n+        assertEquals(Double.POSITIVE_INFINITY, sum.getResult(), 0);\n+        \n+        // negative value -- should make NaN\n+        sum.increment(-2d);\n+        assertTrue(Double.isNaN(sum.getResult()));\n+    }\n \n }", "timestamp": 1087540407, "metainfo": ""}