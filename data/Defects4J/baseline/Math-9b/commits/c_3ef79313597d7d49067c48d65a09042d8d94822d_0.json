{"sha": "3ef79313597d7d49067c48d65a09042d8d94822d", "log": "[MATH-781] use epsilon criteria when deciding to drop columns after phase 1.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n         // positive cost non-artificial variables\n         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n             final double entry = tableau.getEntry(0, i);\n-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {\n                 columnsToDrop.add(i);\n             }\n         }\n--- a/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java\n+++ b/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java\n import org.junit.Test;\n \n public class SimplexSolverTest {\n+\n+    @Test\n+    public void testMath781() {\n+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 6, 7 }, 0);\n+\n+        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n+        constraints.add(new LinearConstraint(new double[] { 1, 2, 1 }, Relationship.LEQ, 2));\n+        constraints.add(new LinearConstraint(new double[] { -1, 1, 1 }, Relationship.LEQ, -1));\n+        constraints.add(new LinearConstraint(new double[] { 2, -3, 1 }, Relationship.LEQ, -1));\n+\n+        double epsilon = 1e-6;\n+        SimplexSolver solver = new SimplexSolver();\n+        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);\n+\n+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) > 0);\n+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) > 0);\n+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[2], 0.0d, epsilon) < 0);\n+        Assert.assertEquals(2.0d, solution.getValue(), epsilon);\n+    }\n \n     @Test\n     public void testMath713NegativeVariable() {", "timestamp": 1335983317, "metainfo": ""}