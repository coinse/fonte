{"sha": "c73c80b4e9aa2e7e4277d3d8554addae6f0b2e7b", "log": "MATH-757 Class was not thread-safe. Comment added to warn users that they must handle synchronization by themselves if they need it.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java\n+++ b/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java\n  * handles expanding and contracting its internal storage array as elements\n  * are added and removed.\n  * </p>\n+ * <h3>Important note: Usage should not assume that this class is thread-safe\n+ * even though some of the methods are {@code synchronized}.\n+ * This qualifier will be dropped in the next major release (4.0).</h3>\n  * <p>\n  * The internal storage array starts with capacity determined by the\n  * {@code initialCapacity} property, which can be set by the constructor.\n      * @return the result.\n      * @since 3.1\n      */\n-    public synchronized double compute(MathArrays.Function f) {\n+    public double compute(MathArrays.Function f) {\n         return f.evaluate(internalArray, startIndex, numElements);\n     }\n ", "timestamp": 1355618718, "metainfo": ""}