{"sha": "9967ac899eadab63172b35f209310f5988141341", "log": "removed unused method in private internal class  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n             return (isSequence(min, z.getReal(), max)) &&\n                 (FastMath.abs(z.getImaginary()) <= tolerance ||\n                  z.abs() <= getFunctionValueAccuracy());\n-        }\n-\n-        /**\n-         * Find all complex roots for the polynomial with the given\n-         * coefficients, starting from the given initial value.\n-         *\n-         * @param coefficients Polynomial coefficients.\n-         * @param initial Start value.\n-         * @return the point at which the function value is zero.\n-         * @throws org.apache.commons.math.exception.TooManyEvaluationsException\n-         * if the maximum number of evaluations is exceeded.\n-         * @throws NullArgumentException if the {@code coefficients} is\n-         * {@code null}.\n-         * @throws NoDataException if the {@code coefficients} array is empty.\n-         */\n-        public Complex[] solveAll(double coefficients[], double initial) {\n-            if (coefficients == null) {\n-                throw new NullArgumentException();\n-            }\n-            Complex c[] = new Complex[coefficients.length];\n-            Complex z = new Complex(initial, 0);\n-            for (int i = 0; i < c.length; i++) {\n-                c[i] = new Complex(coefficients[i], 0);\n-            }\n-            return solveAll(c, z);\n         }\n \n         /**", "timestamp": 1300890499, "metainfo": ""}