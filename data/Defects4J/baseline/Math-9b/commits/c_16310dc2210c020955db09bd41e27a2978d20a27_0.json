{"sha": "16310dc2210c020955db09bd41e27a2978d20a27", "log": "Changed implementation to return correct inverse probabilities for p=0,1 (per discussion on commons-dev).   ", "commit": "\n--- a/src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java\n /**\n  * The default implementation of {@link BinomialDistribution}.\n  *\n- * @version $Revision: 1.16 $ $Date: 2004/06/23 16:26:15 $\n+ * @version $Revision: 1.17 $ $Date: 2004/07/23 05:22:36 $\n  */\n public class BinomialDistributionImpl\n     extends AbstractDiscreteDistribution\n         }\n         return ret;\n     }\n+    \n+    /**\n+     * For this distribution, X, this method returns the largest x, such\n+     * that P(X &le; x) &le; <code>p</code>.\n+     *\n+     * @param p the desired probability\n+     * @return the largest x such that P(X &le; x) <= p\n+     * @throws MathException if the inverse cumulative probability can not be\n+     *            computed due to convergence or other numerical errors.\n+     * @throws IllegalArgumentException if p < 0 or p > 1\n+     */\n+    public int inverseCumulativeProbability(final double p) throws MathException {\n+        // handle extreme values explicitly\n+        if (p == 0) {\n+            return 0;\n+        } \n+        if (p == 1) {\n+            return Integer.MAX_VALUE; \n+        }\n+        \n+        // use default bisection impl\n+        return super.inverseCumulativeProbability(p);\n+    }\n }\n--- a/src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java\n  * Extends DiscreteDistributionAbstractTest.  See class javadoc for\n  * DiscreteDistributionAbstractTest for details.\n  * \n- * @version $Revision: 1.13 $ $Date: 2004/05/11 02:11:15 $\n+ * @version $Revision: 1.14 $ $Date: 2004/07/23 05:22:36 $\n  */\n public class BinomialDistributionTest extends DiscreteDistributionAbstractTest {\n     \n     \n     /** Creates the default inverse cumulative probability test input values */\n     public double[] makeInverseCumulativeTestPoints() {\n-        return new double[] {0.001d, 0.010d, 0.025d, 0.050d, 0.100d, 0.999d,\n-                0.990d, 0.975d, 0.950d, 0.900d}; \n+        return new double[] {0, 0.001d, 0.010d, 0.025d, 0.050d, 0.100d, 0.999d,\n+                0.990d, 0.975d, 0.950d, 0.900d,1}; \n         }\n     \n     /** Creates the default inverse cumulative probability density test expected values */\n     public int[] makeInverseCumulativeTestValues() {\n-        return new int[] {1, 2, 3, 4, 4, 9, 9, 9, 8, 8};\n+        return new int[] {0,1, 2, 3, 4, 4, 9, 9, 9, 8, 8, Integer.MAX_VALUE};\n     }\n \n     //----------------- Additional test cases ---------------------------------", "timestamp": 1090560156, "metainfo": ""}