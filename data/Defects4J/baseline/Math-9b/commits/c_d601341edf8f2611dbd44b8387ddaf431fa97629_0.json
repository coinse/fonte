{"sha": "d601341edf8f2611dbd44b8387ddaf431fa97629", "log": "Removed trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n     public EmpiricalDistributionImpl(int binCount) {\n         this(binCount, null);\n     }\n-    \n+\n     /**\n      * Creates a new EmpiricalDistribution with the specified bin count using the\n      * provided {@link RandomGenerator} as the source of random data.\n-     * \n+     *\n      * @param binCount number of bins\n      * @param generator random data generator (may be null, resulting in default JDK generator)\n      * @since 3.0\n     public boolean isLoaded() {\n         return loaded;\n     }\n-    \n+\n     /**\n      * Reseeds the random number generator used by {@link #getNextValue()}.\n-     * \n+     *\n      * @param seed random generator seed\n      * @since 3.0\n      */\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n      * Construct a RandomDataImpl using the supplied {@link RandomGenerator} as\n      * the source of (non-secure) random data.\n      *\n-     * @param rand the source of (non-secure) random data \n+     * @param rand the source of (non-secure) random data\n      * (may be null, resulting in default JDK-supplied generator)\n      * @since 1.1\n      */", "timestamp": 1312780894, "metainfo": ""}