{"sha": "663b0539f6b7fd2a68c9af5337acddf4f3a9e478", "log": "Fixed a wrong dimension check in SVD solver thanks to Dimitri for identifying and solving this  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java\n+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java\n  * Singular Value Decomposition of a real matrix.\n  * <p>The Singular Value Decomposition of matrix A is a set of three matrices:\n  * U, &Sigma; and V such that A = U &times; &Sigma; &times; V<sup>T</sup>.\n- * Let A be an m &times; n matrix, then U is an m &times; m orthogonal matrix,\n- * &Sigma; is a m &times; n diagonal matrix with positive diagonal elements,\n+ * Let A be an m &times; n matrix, then U is an m &times; n orthogonal matrix,\n+ * &Sigma; is a n &times; n diagonal matrix with positive diagonal elements,\n  * and V is an n &times; n orthogonal matrix.</p>\n  * <p>This interface is similar to the class with similar name from the\n  * <a href=\"http://math.nist.gov/javanumerics/jama/\">JAMA</a> library, with the\n--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n  * Calculates the Singular Value Decomposition of a matrix.\n  * <p>The Singular Value Decomposition of matrix A is a set of three matrices:\n  * U, &Sigma; and V such that A = U &times; &Sigma; &times; V<sup>T</sup>.\n- * Let A be an m &times; n matrix, then U is an m &times; m orthogonal matrix,\n- * &Sigma; is a m &times; n diagonal matrix with positive diagonal elements,\n+ * Let A be an m &times; n matrix, then U is an m &times; n orthogonal matrix,\n+ * &Sigma; is a n &times; n diagonal matrix with positive diagonal elements,\n  * and V is an n &times; n orthogonal matrix.</p>\n  *\n  * @version $Revision$ $Date$\n         public double[] solve(final double[] b)\n             throws IllegalArgumentException, InvalidMatrixException {\n \n-            if (b.length != singularValues.length) {\n+            if (b.length != uT.getColumnDimension()) {\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"vector length mismatch: got {0} but expected {1}\",\n-                        b.length, singularValues.length);\n+                        b.length, uT.getColumnDimension());\n             }\n \n             final double[] w = uT.operate(b);\n         public RealVector solve(final RealVector b)\n             throws IllegalArgumentException, InvalidMatrixException {\n \n-            if (b.getDimension() != singularValues.length) {\n+            if (b.getDimension() != uT.getColumnDimension()) {\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"vector length mismatch: got {0} but expected {1}\",\n-                         b.getDimension(), singularValues.length);\n+                         b.getDimension(), uT.getColumnDimension());\n             }\n \n             final RealVector w = uT.operate(b);", "timestamp": 1260999853, "metainfo": ""}