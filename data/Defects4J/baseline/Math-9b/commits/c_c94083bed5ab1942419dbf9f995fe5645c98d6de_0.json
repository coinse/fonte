{"sha": "c94083bed5ab1942419dbf9f995fe5645c98d6de", "log": "Javadoc only.  ", "commit": "\n--- a/src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n+++ b/src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n import org.apache.commons.math.linear.RealMatrix;\n import org.apache.commons.math.linear.RealMatrixImpl;\n \n-/** This class allows to generate random vectors with correlated components.\n-\n+/** \n+ * A {@link RandomVectorGenerator} that generates vectors with with \n+ * correlated components.\n  * <p>Random vectors with correlated components are built by combining\n- * the uncorrelated components of another random vector in such a way\n+ * the uncorrelated components of another random vector in such a way that\n  * the resulting correlations are the ones specified by a positive\n  * definite covariance matrix.</p>\n-\n  * <p>Sometimes, the covariance matrix for a given simulation is not\n  * strictly positive definite. This means that the correlations are\n  * not all independant from each other. In this case, however, the non\n  * more rows than columns. The number of columns of <code>B</code> is\n  * the rank of the covariance matrix, and it is the dimension of the\n  * uncorrelated random vector that is needed to compute the component\n- * of the correlated vector. This class does handle this situation\n+ * of the correlated vector. This class handles this situation\n  * automatically.</p>\n \n  * @version $Revision:$ $Date$", "timestamp": 1179689405, "metainfo": ""}