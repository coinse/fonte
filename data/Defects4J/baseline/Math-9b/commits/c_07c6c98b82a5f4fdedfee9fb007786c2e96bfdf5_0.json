{"sha": "07c6c98b82a5f4fdedfee9fb007786c2e96bfdf5", "log": "Replaced obsolete exception.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java\n \n package org.apache.commons.math.ode;\n \n-import org.apache.commons.math.MathRuntimeException;\n+import org.apache.commons.math.exception.MathIllegalArgumentException;\n import org.apache.commons.math.exception.MathIllegalStateException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n import org.apache.commons.math.linear.Array2DRowRealMatrix;\n         super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);\n \n         if (nSteps <= 1) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            throw new MathIllegalArgumentException(\n                   LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS,\n                   name);\n         }\n \n     /** Marker exception used ONLY to stop the starter integrator after first step. */\n     private static class InitializationCompletedMarkerException\n-        extends MathRuntimeException {\n+        extends RuntimeException {\n \n         /** Serializable version identifier. */\n         private static final long serialVersionUID = -1914085471038046418L;", "timestamp": 1317498292, "metainfo": ""}