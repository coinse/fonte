{"sha": "b8789b6e0983b49ed173bdabde6e9dcf005ae1b2", "log": "fixed missing error checks  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n                 throw MathRuntimeException.createIllegalStateException(\"first {0} columns are not initialized yet\",\n                                                                        new Object[] { column });\n             }\n-            data = new double[subMatrix.length][subMatrix[0].length];\n+            final int nRows = subMatrix.length;\n+            if (nRows == 0) {\n+                throw MathRuntimeException.createIllegalArgumentException(\"matrix must have at least one row\",\n+                                                                          null); \n+            }\n+\n+            final int nCols = subMatrix[0].length;\n+            if (nCols == 0) {\n+                throw MathRuntimeException.createIllegalArgumentException(\"matrix must have at least one column\",\n+                                                                          null); \n+            }\n+            data = new double[subMatrix.length][nCols];\n             for (int i = 0; i < data.length; ++i) {\n-                System.arraycopy(subMatrix[i], 0, data[i], 0, subMatrix[i].length);\n+                if (subMatrix[i].length != nCols) {\n+                    throw MathRuntimeException.createIllegalArgumentException(\"some rows have length {0} while others have length {1}\",\n+                                                                              new Object[] {\n+                                                                                  nCols, subMatrix[i].length\n+                                                                              }); \n+                }\n+                System.arraycopy(subMatrix[i], 0, data[i + row], column, nCols);\n             }\n         } else {\n             super.setSubMatrix(subMatrix, row, column);", "timestamp": 1228681065, "metainfo": ""}