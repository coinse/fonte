{"sha": "e6ec59b107f2a2afafcb5734cf91fa49d8036fd0", "log": "[MATH-759] cleanup unit test ListUnivariateImpl.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java\n+++ b/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java\n         // take into account only the last n elements of the list\n         // as definied by windowSize\n \n-        if (windowSize != DescriptiveStatistics.INFINITE_WINDOW &&\n-            windowSize < list.size())\n-        {\n-            length = list.size() - FastMath.max(0, list.size() - windowSize);\n+        final int wSize = getWindowSize();\n+        if (wSize != DescriptiveStatistics.INFINITE_WINDOW && wSize < list.size()) {\n+            length = list.size() - FastMath.max(0, list.size() - wSize);\n         }\n \n         // Create an array to hold all values\n \n         int calcIndex = index;\n \n-        if (windowSize != DescriptiveStatistics.INFINITE_WINDOW &&\n-            windowSize < list.size())\n-        {\n-            calcIndex = (list.size() - windowSize) + index;\n+        final int wSize = getWindowSize();\n+        if (wSize != DescriptiveStatistics.INFINITE_WINDOW && wSize < list.size()) {\n+            calcIndex = (list.size() - wSize) + index;\n         }\n \n \n     public long getN() {\n         int n = 0;\n \n-        if (windowSize != DescriptiveStatistics.INFINITE_WINDOW) {\n-            if (list.size() > windowSize) {\n-                n = windowSize;\n+        final int wSize = getWindowSize();\n+        if (wSize != DescriptiveStatistics.INFINITE_WINDOW) {\n+            if (list.size() > wSize) {\n+                n = wSize;\n             } else {\n                 n = list.size();\n             }\n \n     /** {@inheritDoc} */\n     @Override\n-    public synchronized void setWindowSize(int windowSize) {\n-        this.windowSize = windowSize;\n+    public void setWindowSize(int windowSize) {\n+        super.setWindowSize(windowSize);\n         //Discard elements from the front of the list if the windowSize is less than\n         // the size of the list.\n         int extra = list.size() - windowSize;\n         }\n     }\n \n-    /** {@inheritDoc} */\n-    @Override\n-    public synchronized int getWindowSize() {\n-        return windowSize;\n-    }\n-\n }", "timestamp": 1336225264, "metainfo": ""}