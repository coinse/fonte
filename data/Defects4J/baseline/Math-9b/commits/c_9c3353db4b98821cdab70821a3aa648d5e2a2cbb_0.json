{"sha": "9c3353db4b98821cdab70821a3aa648d5e2a2cbb", "log": "Adds the one sample, t-test statistic to TestStatistic and implementations. Also add unit tests. - BW  PR: Issue #20231 Obtained from: Bugzilla Submitted by: Brent Worden Reviewed by: Tim O'Brien   ", "commit": "\n--- a/src/java/org/apache/commons/math/TestStatistic.java\n+++ b/src/java/org/apache/commons/math/TestStatistic.java\n  * Interfaces for the following test statistics <ul>\n  * <li><a href = http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm>\n  *     Chi-Square</a></li>\n+ * <li><a href=\"http://www.itl.nist.gov/div898/handbook/eda/section3/eda352.htm\">\n+ *     One Sample t-test</a></li>\n  * </ul>\n+ * \n  * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/05/15 21:58:23 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/26 17:29:36 $\n  * \n-*/\n+ */\n public interface TestStatistic {\n     \n     /**\n      * or length is less than 2\n      */\n     public double chiSquare(double[] expected, double[] observed);\n+    \n+    /**\n+     * <strong>Description</strong>:\n+     * Computes one sample, t-test statistic given observed values <br/>\n+     * This statistic can be used to perform one sample tests for means.<br/>\n+     * <strong>Definition</strong>: \n+     * http://www.itl.nist.gov/div898/handbook/eda/section3/eda352.htm<br/>\n+     * <strong>Preconditions</strong>: <ul>\n+     * <li>The observed array length <i>must</i> be at least 2.</li>\n+     * </ul>\n+     * @param mu hypothesized mean value.\n+     * @param observed array of observed values\n+     * @throws IllegalArgumentException if input array length is less than 2\n+     */\n+    public double t(double mu, double[] observed);\n }\n \n--- a/src/java/org/apache/commons/math/TestStatisticImpl.java\n+++ b/src/java/org/apache/commons/math/TestStatisticImpl.java\n \n /**\n  * Implements the following test statistics <ul>\n- * <li><a href = http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm>\n- *     Chi-Square</a></li></ul>\n+ * <li>\n+ *   <a href = http://www.itl.nist.gov/div898/handbook/eda/section3/eda35f.htm>\n+ *   Chi-Square</a>\n+ * </li>\n+ * <li>\n+ *   <a href=\"http://www.itl.nist.gov/div898/handbook/eda/section3/eda352.htm\">\n+ *     One Sample t-test</a>\n+ * </li>\n+ * </ul>\n  * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/05/15 21:58:23 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/26 17:29:36 $\n  * \n-*/\n+ */\n public class TestStatisticImpl implements TestStatistic {\n     \n+    /**\n+     * Default constructor.\n+     */\n     public TestStatisticImpl() {\n     }\n     \n             throw new IllegalArgumentException\n                 (\"observed, expected array lengths incorrect\");\n         }\n-        for (int i = 0; i< observed.length; i++) {\n+        for (int i = 0; i < observed.length; i++) {\n             dev = (observed[i] - expected[i]);\n-            sumSq += dev*dev/expected[i];\n+            sumSq += dev * dev / expected[i];\n         }\n         \n-         for (int i = 0; i< observed.length; i++) {\n-        }\n         return sumSq;\n     }           \n \n+    /**\n+     * Computes t statistic given observed values<br/>\n+     * <strong>Algorithm</strong>: \n+     * http://www.itl.nist.gov/div898/handbook/eda/section3/eda352.htm<br/>\n+     * <strong>Numerical considerations</strong>: none <br>\n+     * @param mu hypothesized mean value.\n+     * @param observed array of observed values\n+     * @return t-test statistic for the hypothesized mean and observed values.\n+     * @throws IllegalArgumentException if input array length is less than 2\n+     */\n+\tpublic double t(double mu, double[] observed) {\n+        if((observed == null) || (observed.length < 2)) {\n+            throw new IllegalArgumentException\n+                (\"observed array length incorrect\");\n+        }\n+        \n+        // leverage Univariate to compute statistics\n+        Univariate univariate = new UnivariateImpl();\n+        for (int i = 0; i < observed.length; i++) {\n+\t\t\tunivariate.addValue(observed[i]);\n+\t\t}\n+        double n = univariate.getN();\n+        double xbar = univariate.getMean();\n+        double std = univariate.getStandardDeviation();\n+\n+        return (xbar - mu) / (std / Math.sqrt(n));\n+\t}\n }\n--- a/src/test/org/apache/commons/math/TestStatisticTest.java\n+++ b/src/test/org/apache/commons/math/TestStatisticTest.java\n  * Test cases for the TestStatistic class.\n  *\n  * @author Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/05/16 03:55:34 $\n+ * @version $Revision: 1.3 $ $Date: 2003/05/26 17:29:36 $\n  */\n \n public final class TestStatisticTest extends TestCase {\n     public void testChiSquare() {\n        double[] observed = {11,24,69,96};\n        double[] expected = {8.2,25.2,65.8,100.8};\n-       assertEquals(\"chi-square statistic\",\n+       assertEquals(\"chi-square statistic\", \n            1.39743495,testStatistic.chiSquare(expected,observed),10E-5);\n        \n        double[] tooShortObs = {0};\n        double[] tooShortEx = {1};\n        try {\n-           double x = testStatistic.chiSquare(tooShortObs,tooShortEx);\n+           testStatistic.chiSquare(tooShortObs,tooShortEx);\n            fail(\"arguments too short, IllegalArgumentException expected\");\n        } catch (IllegalArgumentException ex) {\n            ;\n        double[] unMatchedObs = {0,1,2,3};\n        double[] unMatchedEx = {1,1,2};\n        try {\n-           double x = testStatistic.chiSquare(unMatchedEx,unMatchedObs);\n+           testStatistic.chiSquare(unMatchedEx,unMatchedObs);\n            fail(\"arrays have different lengths, IllegalArgumentException expected\");\n        } catch (IllegalArgumentException ex) {\n            ;\n             testStatistic.chiSquare(expected,observed),Double.MIN_VALUE);\n     }\n        \n+    public void testT(){\n+\t\tdouble[] observed = {93.0, 103.0, 95.0, 101.0, 91.0, 105.0, 96.0,\n+            94.0, 101.0, 88.0, 98.0, 94.0, 101.0, 92.0, 95.0};\n+        double mu = 100.0;\n+        assertEquals(\"t statistic\", -2.82, testStatistic.t(mu, observed),\n+            10E-3);\n+        \n+        double[] nullObserved = null;\n+        try {\n+            testStatistic.t(mu, nullObserved);\n+            fail(\"arguments too short, IllegalArgumentException expected\");\n+        } catch (IllegalArgumentException ex) {\n+            ;\n+        }\n+        \n+        double[] emptyObs = {};\n+        try {\n+            testStatistic.t(mu, emptyObs);\n+            fail(\"arguments too short, IllegalArgumentException expected\");\n+        } catch (IllegalArgumentException ex) {\n+            ;\n+        }\n+        \n+        double[] tooShortObs = {1.0};\n+        try {\n+            testStatistic.t(mu, tooShortObs);\n+            fail(\"arguments too short, IllegalArgumentException expected\");\n+        } catch (IllegalArgumentException ex) {\n+            ;\n+        }\n+    }\n }\n ", "timestamp": 1053970176, "metainfo": ""}