{"sha": "dc3a7941d539e9e397b3dd39d5f6dc24b2b9d5fa", "log": "MATH-812: fixed a bug in RealVector.outerProduct(RealVector). Now loops through *all* entries of the vectors.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/RealVector.java\n+++ b/src/main/java/org/apache/commons/math3/linear/RealVector.java\n      * @return the matrix outer product between this instance and {@code v}.\n      */\n     public RealMatrix outerProduct(RealVector v) {\n-        RealMatrix product;\n+        final int m = this.getDimension();\n+        final int n = v.getDimension();\n+        final RealMatrix product;\n         if (v instanceof SparseRealVector || this instanceof SparseRealVector) {\n-            product = new OpenMapRealMatrix(this.getDimension(),\n-                                            v.getDimension());\n+            product = new OpenMapRealMatrix(m, n);\n         } else {\n-            product = new Array2DRowRealMatrix(this.getDimension(),\n-                                               v.getDimension());\n-        }\n-        Iterator<Entry> thisIt = sparseIterator();\n-        while (thisIt.hasNext()) {\n-            final Entry thisE = thisIt.next();\n-            Iterator<Entry> otherIt = v.sparseIterator();\n-            while (otherIt.hasNext()) {\n-                final Entry otherE = otherIt.next();\n-                product.setEntry(thisE.getIndex(), otherE.getIndex(),\n-                                 thisE.getValue() * otherE.getValue());\n-            }\n-        }\n-\n+            product = new Array2DRowRealMatrix(m, n);\n+        }\n+        for (int i = 0; i < m; i++) {\n+            for (int j = 0; j < n; j++) {\n+                product.setEntry(i, j, this.getEntry(i) * v.getEntry(j));\n+            }\n+        }\n         return product;\n-\n     }\n \n     /**", "timestamp": 1342099905, "metainfo": ""}