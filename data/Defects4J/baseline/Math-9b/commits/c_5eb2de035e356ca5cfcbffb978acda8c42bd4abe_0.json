{"sha": "5eb2de035e356ca5cfcbffb978acda8c42bd4abe", "log": "fixed javadoc warnings  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java\n \n     /** Test for events that occur at the exact same time, but due to numerical\n      * calculations occur very close together instead. Uses event type 0. See\n-     * {@link Event#g}.\n+     * {@link org.apache.commons.math.ode.events.EventHandler#g(double, double[])\n+     * EventHandler.g(double, double[])}.\n      * @throws EventException in case of event evaluation failure\n      * @throws IntegratorException in case of integration failure\n      * @throws MathUserException in case of derivative evaluation failure\n \n     /** Test for events that occur at the exact same time, but due to numerical\n      * calculations occur very close together instead. Uses event type 1. See\n-     * {@link Event#g}.\n+     * {@link org.apache.commons.math.ode.events.EventHandler#g(double, double[])\n+     * EventHandler.g(double, double[])}.\n      * @throws EventException in case of event evaluation failure\n      * @throws IntegratorException in case of integration failure\n      * @throws MathUserException in case of derivative evaluation failure\n \n     /** Test for events that occur at the exact same time, but due to numerical\n      * calculations occur very close together instead.\n-     * @param eventType the type of events to use. See {@link Event#g}\n+     * @param eventType the type of events to use. See\n+     * {@link org.apache.commons.math.ode.events.EventHandler#g(double, double[])\n+     * EventHandler.g(double, double[])}.\n      * @throws EventException in case of event evaluation failure\n      * @throws IntegratorException in case of integration failure\n      * @throws MathUserException in case of derivative evaluation failure", "timestamp": 1311954556, "metainfo": ""}