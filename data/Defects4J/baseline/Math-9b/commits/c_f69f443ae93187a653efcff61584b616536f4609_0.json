{"sha": "f69f443ae93187a653efcff61584b616536f4609", "log": "fixed a serialization-related array update error in DummyStepInterpolator  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/DummyStepHandler.java\n+++ b/src/java/org/apache/commons/math/ode/DummyStepHandler.java\n  */\n \n package org.apache.commons.math.ode;\n+\n+import java.io.Serializable;\n \n /**\n  * This class is a step handler that do nothing.\n  */\n \n public class DummyStepHandler\n-  implements StepHandler {\n+  implements StepHandler, Serializable {\n \n   /** Private constructor.\n    * The constructor is private to prevent users from creating\n   /** The only instance. */\n   private static DummyStepHandler instance = null;\n \n+  private static final long serialVersionUID = 2731635121223090252L;\n+\n }\n--- a/src/java/org/apache/commons/math/ode/DummyStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/DummyStepInterpolator.java\n     super(y, forward);\n   }\n \n-  /** Copy constructor.\n-\n-   * <p>The copied interpolator should have been finalized before the\n-   * copy, otherwise the copy will not be able to perform correctly\n-   * any interpolation and will throw a {@link NullPointerException}\n-   * later. Since we don't want this constructor to throw the\n-   * exceptions finalization may involve and since we don't want this\n-   * method to modify the state of the copied interpolator,\n-   * finalization is <strong>not</strong> done automatically, it\n-   * remains under user control.</p>\n-\n-   * <p>The copy is a deep copy: its arrays are separated from the\n-   * original arrays of the instance.</p>\n-\n-   * @param interpolator interpolator to copy from.\n-\n-   */\n-  protected DummyStepInterpolator(DummyStepInterpolator interpolator) {\n-    super(interpolator);\n-  }\n-\n   /** Compute the state at the interpolated time.\n    * In this class, this method does nothing: the interpolated state\n    * is always the state at the end of the current step.\n    */\n   protected void computeInterpolatedState(double theta, double oneMinusThetaH)\n     throws DerivativeException {\n+      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);\n   }\n     \n   public void writeExternal(ObjectOutput out)", "timestamp": 1191791954, "metainfo": ""}