{"sha": "d503a9472f496055201a017140946c44695755fb", "log": "updated step interpolators implementations to latest interface changes  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java\n \n     /** {@inheritDoc} */\n     @Override\n-    protected void computeInterpolatedState(final double theta,\n+    protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                             final double oneMinusThetaH)\n         throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java\n \n package org.apache.commons.math.ode.nonstiff;\n \n+import java.io.IOException;\n import java.io.ObjectInput;\n import java.io.ObjectOutput;\n-import java.io.IOException;\n-\n-import org.apache.commons.math.MathRuntimeException;\n+\n import org.apache.commons.math.ode.DerivativeException;\n import org.apache.commons.math.ode.sampling.AbstractStepInterpolator;\n import org.apache.commons.math.ode.sampling.StepInterpolator;\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n       }\n     }\n \n-    try {\n-      // we can now set the interpolated time and state\n-      setInterpolatedTime(t);\n-    } catch (DerivativeException e) {\n-      throw MathRuntimeException.createIOException(e);\n-    }\n+    // we can now set the interpolated time and state\n+    setInterpolatedTime(t);\n \n   }\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n     throws DerivativeException {\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java\n \n package org.apache.commons.math.ode.nonstiff;\n \n+import java.io.IOException;\n import java.io.ObjectInput;\n import java.io.ObjectOutput;\n-import java.io.IOException;\n \n-import org.apache.commons.math.MathRuntimeException;\n-import org.apache.commons.math.ode.DerivativeException;\n import org.apache.commons.math.ode.FirstOrderDifferentialEquations;\n import org.apache.commons.math.ode.sampling.AbstractStepInterpolator;\n \n     equations = null;\n \n     if (currentState != null) {\n-        try {\n-            // we can now set the interpolated time and state\n-            setInterpolatedTime(t);\n-        } catch (DerivativeException e) {\n-            throw MathRuntimeException.createIOException(e);\n-        }\n+        // we can now set the interpolated time and state\n+        setInterpolatedTime(t);\n     } else {\n         interpolatedTime = t;\n     }\n--- a/src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java\n \n   /** {@inheritDoc} */\n   @Override\n-  protected void computeInterpolatedState(final double theta,\n+  protected void computeInterpolatedStateAndDerivatives(final double theta,\n                                           final double oneMinusThetaH)\n       throws DerivativeException {\n ", "timestamp": 1244401706, "metainfo": ""}