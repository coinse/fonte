{"sha": "740e8348fbb7fcc7c8b6e0eaa3e345d646847b6d", "log": "Keep math-supplied statistics tied to their internal moments.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java\n     protected GeometricMean geoMean = new GeometricMean(sumLog);\n \n     /** mean of values that have been added */\n-    protected Mean mean = new Mean();\n+    protected Mean mean = new Mean(secondMoment);\n \n     /** variance of values that have been added */\n-    protected Variance variance = new Variance();\n+    protected Variance variance = new Variance(secondMoment);\n \n     /** Sum statistic implementation - can be reset by setter. */\n     private StorelessUnivariateStatistic sumImpl = sum;\n      * @return the mean\n      */\n     public double getMean() {\n-        if (mean == meanImpl) {\n-            return new Mean(secondMoment).getResult();\n-        } else {\n-            return meanImpl.getResult();\n-        }\n+        return meanImpl.getResult();\n     }\n \n     /**\n      * @return the variance\n      */\n     public double getVariance() {\n-        if (varianceImpl == variance) {\n-            return new Variance(secondMoment).getResult();\n-        } else {\n-            return varianceImpl.getResult();\n-        }\n+        return varianceImpl.getResult();\n     }\n \n     /**\n         MathUtils.checkNotNull(source);\n         MathUtils.checkNotNull(dest);\n         dest.maxImpl = source.maxImpl.copy();\n-        dest.meanImpl = source.meanImpl.copy();\n         dest.minImpl = source.minImpl.copy();\n         dest.sumImpl = source.sumImpl.copy();\n-        dest.varianceImpl = source.varianceImpl.copy();\n         dest.sumLogImpl = source.sumLogImpl.copy();\n         dest.sumsqImpl = source.sumsqImpl.copy();\n+        dest.secondMoment = source.secondMoment.copy();\n+        dest.n = source.n;\n+\n+        // Keep commons-math supplied statistics with embedded moments in synch\n+        if (source.getVarianceImpl() instanceof Variance) {\n+            dest.varianceImpl = new Variance(dest.secondMoment);\n+        } else {\n+            dest.varianceImpl = source.varianceImpl.copy();\n+        }\n+        if (source.meanImpl instanceof Mean) {\n+            dest.meanImpl = new Mean(dest.secondMoment);\n+        } else {\n+            dest.meanImpl = source.meanImpl.copy();\n+        }\n         if (source.getGeoMeanImpl() instanceof GeometricMean) {\n-            // Keep geoMeanImpl, sumLogImpl in synch\n             dest.geoMeanImpl = new GeometricMean((SumOfLogs) dest.sumLogImpl);\n         } else {\n             dest.geoMeanImpl = source.geoMeanImpl.copy();\n         }\n-        SecondMoment.copy(source.secondMoment, dest.secondMoment);\n-        dest.n = source.n;\n \n         // Make sure that if stat == statImpl in source, same\n         // holds in dest; otherwise copy stat", "timestamp": 1322324582, "metainfo": ""}