{"sha": "7dfa8e06a3de724f0a55ba8ee9e6056119968caf", "log": "Javadoc fixes.  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/QRDecomposition.java\n+++ b/src/java/org/apache/commons/math/linear/QRDecomposition.java\n  *   \n  * @see <a href=\"http://mathworld.wolfram.com/QRDecomposition.html\">MathWorld</a>\n  * @see <a href=\"http://en.wikipedia.org/wiki/QR_decomposition\">Wikipedia</a>\n+ * \n+ * @version $Revision$ $Date$\n  */\n public interface QRDecomposition {\n \n     /**\n      * Returns the matrix R of the decomposition. \n+     * \n+     * @return the R matrix\n      */\n     public abstract RealMatrix getR();\n \n     /**\n-     * Returbs the matrix Q of the decomposition.\n+     * Returns the matrix Q of the decomposition.\n+     * \n+     * @return the Q matrix\n      */\n     public abstract RealMatrix getQ();\n }\n--- a/src/java/org/apache/commons/math/linear/QRDecompositionImpl.java\n+++ b/src/java/org/apache/commons/math/linear/QRDecompositionImpl.java\n  *\n  * @see <a href=\"http://mathworld.wolfram.com/QRDecomposition.html\">MathWorld</a>\n  * @see <a href=\"http://en.wikipedia.org/wiki/QR_decomposition\">Wikipedia</a>\n+ * \n+ * @version $Revision$ $Date$\n  */\n public class QRDecompositionImpl implements QRDecomposition {\n \n     /**\n      * Calculates the QR decomposition of the given matrix. \n      * \n-     * @param matrix The matrix to factorize.\n+     * @param matrix The matrix to decompose.\n      */\n     public QRDecompositionImpl(RealMatrix matrix) {\n         m = matrix.getRowDimension();\n \n     /**\n      * Returns the matrix R of the QR-decomposition. \n+     * \n+     * @return the R matrix\n      */\n     public RealMatrix getR()\n     {\n \n     /**\n      * Returns the matrix Q of the QR-decomposition.\n+     * \n+     * @return the Q matrix\n      */\n     public RealMatrix getQ()\n     {", "timestamp": 1152047327, "metainfo": ""}