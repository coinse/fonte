{"sha": "1a9dd7d43e929fa42c238cbea4d6cb793edaaf08", "log": "JUnit testing of serialization of all StorelessUnivariates   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n  */\n package org.apache.commons.math.stat.univariate;\n \n+import org.apache.commons.math.TestUtils;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- * @version $Revision: 1.8 $ $Date: 2003/11/14 22:22:23 $\n+ * @version $Revision: 1.9 $ $Date: 2003/11/19 13:35:10 $\n  */\n public abstract class StorelessUnivariateStatisticAbstractTest\n     extends UnivariateStatisticAbstractTest {\n         }\n \n         assertEquals(expectedValue(), statistic.getResult(), getTolerance());\n-        \n+\n         statistic.clear();\n \n         assertTrue(Double.isNaN(statistic.getResult()));\n+\n+    }\n+\n+    public void testSerialization() throws Exception {\n+\n+        StorelessUnivariateStatistic statistic =\n+            (StorelessUnivariateStatistic) getUnivariateStatistic();\n+\n+        statistic.clear();\n+\n+        for (int i = 0; i < testArray.length; i++) {\n+            statistic.increment(testArray[i]);\n+            if(i % 5 == 0)\n+                statistic = (StorelessUnivariateStatistic)TestUtils.serializeAndRecover(statistic); \n+        }\n         \n+        assertEquals(expectedValue(), statistic.getResult(), getTolerance());\n+\n+        statistic.clear();\n+\n+        assertTrue(Double.isNaN(statistic.getResult()));\n+\n     }\n \n }", "timestamp": 1069248910, "metainfo": ""}