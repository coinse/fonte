{"sha": "ec4c52a56216055570ae9329f9984378e9d7eef2", "log": "added a specialized implementation of premultiply removed unneeded signatures with RelVectorImpl already handled efficiently by base class  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n         final int nRows = this.getRowDimension();\n         final int nCols = this.getColumnDimension();\n         if (v.length != nCols) {\n-            throw new IllegalArgumentException(\"vector has wrong length\");\n+            throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n+                                                                      \" got {0} but expected {1}\",\n+                                                                      new Object[] {\n+                                                                          v.length, nCols\n+                                                                      });\n         }\n         final double[] out = new double[nRows];\n         for (int row = 0; row < nRows; row++) {\n     }\n \n     /** {@inheritDoc} */\n-    public RealVector operate(final RealVector v)\n-        throws IllegalArgumentException {\n-        try {\n-            return operate((RealVectorImpl) v);\n-        } catch (ClassCastException cce) {\n-            return super.operate(v);\n-        }\n-    }\n-\n-    /**\n-     * Returns the result of multiplying this by the vector <code>v</code>.\n-     *\n-     * @param v the vector to operate on\n-     * @return this*v\n-     * @throws IllegalArgumentException if columnDimension != v.size()\n-     */\n-    public RealVectorImpl operate(final RealVectorImpl v)\n-        throws IllegalArgumentException {\n-        return new RealVectorImpl(operate(v.getDataRef()), false);\n+    public double[] preMultiply(final double[] v)\n+        throws IllegalArgumentException {\n+\n+        final int nRows = getRowDimension();\n+        final int nCols = getColumnDimension();\n+        if (v.length != nRows) {\n+            throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n+                                                                      \" got {0} but expected {1}\",\n+                                                                      new Object[] {\n+                                                                          v.length, nRows\n+                                                                      });\n+        }\n+\n+        final double[] out = new double[nCols];\n+        for (int col = 0; col < nCols; ++col) {\n+            double sum = 0;\n+            for (int i = 0; i < nRows; ++i) {\n+                sum += data[i][col] * v[i];\n+            }\n+            out[col] = sum;\n+        }\n+\n+        return out;\n+\n     }\n \n     /**", "timestamp": 1230074872, "metainfo": ""}