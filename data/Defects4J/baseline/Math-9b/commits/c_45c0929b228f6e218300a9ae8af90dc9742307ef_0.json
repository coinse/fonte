{"sha": "45c0929b228f6e218300a9ae8af90dc9742307ef", "log": "Using labeled loop to avoid code duplication.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n                                      boolean strict, boolean abort) {\n         double previous = val[0];\n         final int max = val.length;\n-        for (int i = 1; i < max; i++) {\n+\n+        int index;\n+        ITEM:\n+        for (index = 1; index < max; index++) {\n             switch (dir) {\n             case INCREASING:\n                 if (strict) {\n-                    if (val[i] <= previous) {\n-                        if (abort) {\n-                            throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);\n-                        }\n-                        return false;\n+                    if (val[index] <= previous) {\n+                        break ITEM;\n                     }\n                 } else {\n-                    if (val[i] < previous) {\n-                        if (abort) {\n-                            throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);\n-                        }\n-                        return false;\n+                    if (val[index] < previous) {\n+                        break ITEM;\n                     }\n                 }\n                 break;\n             case DECREASING:\n                 if (strict) {\n-                    if (val[i] >= previous) {\n-                        if (abort) {\n-                            throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);\n-                        }\n-                        return false;\n+                    if (val[index] >= previous) {\n+                        break ITEM;\n                     }\n                 } else {\n-                    if (val[i] > previous) {\n-                        if (abort) {\n-                            throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);\n-                        }\n-                        return false;\n+                    if (val[index] > previous) {\n+                        break ITEM;\n                     }\n                 }\n                 break;\n                 // Should never happen.\n                 throw new IllegalArgumentException();\n             }\n-            previous = val[i];\n-        }\n-        return true;\n+            previous = val[index];\n+        }\n+\n+        if (index == max) {\n+            // Loop completed.\n+            return true;\n+        }\n+\n+        // Loop early exit means wrong ordering.\n+        if (abort) {\n+            throw new NonMonotonousSequenceException(val[index], previous, index, dir, strict);\n+        } else {\n+            return false;\n+        }\n     }\n \n     /**", "timestamp": 1316700789, "metainfo": ""}