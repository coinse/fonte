{"sha": "df885f4232b1be6dc1100714cdc1af4f2c0238d9", "log": "Convert to Junit4  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionTest.java\n \n package org.apache.commons.math.distribution;\n \n-import junit.framework.TestCase;\n+import org.junit.Assert;\n+import org.junit.Test;\n \n /**\n  * Test cases for {@link KolmogorovSmirnovDistributionImpl}.\n  *\n  * @version $Revision$ $Date$\n  */\n-public class KolmogorovSmirnovDistributionTest extends TestCase {\n+public class KolmogorovSmirnovDistributionTest {\n     \n     private static final double TOLERANCE = 10e-10;\n \n+    @Test\n     public void testCumulativeDensityFunction() throws Exception {\n         \n         KolmogorovSmirnovDistributionImpl dist;\n          * 4.907829957616471622388047046469198862537e-86\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(200);\n-        assertEquals(4.907829957616471622388047046469198862537e-86, dist.cdf(0.005, false), TOLERANCE);\n+        Assert.assertEquals(4.907829957616471622388047046469198862537e-86, dist.cdf(0.005, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.02), n = as.integer(200), PACKAGE = \"stats\")$p, 40) gives\n          * 5.151982014280041957199687829849210629618e-06\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(200);\n-        assertEquals(5.151982014280041957199687829849210629618e-06, dist.cdf(0.02, false), TOLERANCE);\n+        Assert.assertEquals(5.151982014280041957199687829849210629618e-06, dist.cdf(0.02, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.031111), n = as.integer(200), PACKAGE = \"stats\")$p, 40) gives\n          * 0.01291614648162886340443389343590752105229\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(200);\n-        assertEquals(0.01291614648162886340443389343590752105229, dist.cdf(0.031111, false), TOLERANCE);\n+        Assert.assertEquals(0.01291614648162886340443389343590752105229, dist.cdf(0.031111, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.04), n = as.integer(200), PACKAGE = \"stats\")$p, 40) gives\n          * 0.1067137011362679355208626930107129737735\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(200);\n-        assertEquals(0.1067137011362679355208626930107129737735, dist.cdf(0.04, false), TOLERANCE);\n+        Assert.assertEquals(0.1067137011362679355208626930107129737735, dist.cdf(0.04, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.005), n = as.integer(341), PACKAGE = \"stats\")$p, 40) gives\n          * 1.914734701559404553985102395145063418825e-53\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(341);\n-        assertEquals(1.914734701559404553985102395145063418825e-53, dist.cdf(0.005, false), TOLERANCE);\n+        Assert.assertEquals(1.914734701559404553985102395145063418825e-53, dist.cdf(0.005, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.02), n = as.integer(341), PACKAGE = \"stats\")$p, 40) gives\n          * 0.001171328985781981343872182321774744195864\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(341);\n-        assertEquals(0.001171328985781981343872182321774744195864, dist.cdf(0.02, false), TOLERANCE);\n+        Assert.assertEquals(0.001171328985781981343872182321774744195864, dist.cdf(0.02, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.031111), n = as.integer(341), PACKAGE = \"stats\")$p, 40) gives\n          * 0.1142955196267499418105728636874118819833\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(341);\n-        assertEquals(0.1142955196267499418105728636874118819833, dist.cdf(0.031111, false), TOLERANCE);\n+        Assert.assertEquals(0.1142955196267499418105728636874118819833, dist.cdf(0.031111, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.04), n = as.integer(341), PACKAGE = \"stats\")$p, 40) gives\n          * 0.3685529520496805266915885113121476024389\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(341);\n-        assertEquals(0.3685529520496805266915885113121476024389, dist.cdf(0.04, false), TOLERANCE);\n+        Assert.assertEquals(0.3685529520496805266915885113121476024389, dist.cdf(0.04, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.005), n = as.integer(389), PACKAGE = \"stats\")$p, 40) gives\n          * 1.810657144595055888918455512707637574637e-47\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(389);\n-        assertEquals(1.810657144595055888918455512707637574637e-47, dist.cdf(0.005, false), TOLERANCE);\n+        Assert.assertEquals(1.810657144595055888918455512707637574637e-47, dist.cdf(0.005, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.02), n = as.integer(389), PACKAGE = \"stats\")$p, 40) gives\n          * 0.003068542559702356568168690742481885536108\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(389);\n-        assertEquals(0.003068542559702356568168690742481885536108, dist.cdf(0.02, false), TOLERANCE);\n+        Assert.assertEquals(0.003068542559702356568168690742481885536108, dist.cdf(0.02, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.031111), n = as.integer(389), PACKAGE = \"stats\")$p, 40) gives\n          * 0.1658291700122746237244797384846606291831\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(389);\n-        assertEquals(0.1658291700122746237244797384846606291831, dist.cdf(0.031111, false), TOLERANCE);\n+        Assert.assertEquals(0.1658291700122746237244797384846606291831, dist.cdf(0.031111, false), TOLERANCE);\n \n         /* formatC(.C(\"pkolmogorov2x\", p = as.double(0.04), n = as.integer(389), PACKAGE = \"stats\")$p, 40) gives\n          * 0.4513143712128902529379104180407011881471\n          */\n         dist = new KolmogorovSmirnovDistributionImpl(389);\n-        assertEquals(0.4513143712128902529379104180407011881471, dist.cdf(0.04, false), TOLERANCE);\n+        Assert.assertEquals(0.4513143712128902529379104180407011881471, dist.cdf(0.04, false), TOLERANCE);\n \n     }\n ", "timestamp": 1300742947, "metainfo": ""}