{"sha": "bc097a723c2fe881a7def4a4dbf2b4bc84ee6853", "log": "In TriangularDistribution, changed the value of the solver absolute accuracy, and updated Javadoc accordingly (MATH-731).  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/distribution/TriangularDistribution.java\n+++ b/src/main/java/org/apache/commons/math/distribution/TriangularDistribution.java\n         this.a = a;\n         this.c = c;\n         this.b = b;\n-        solverAbsoluteAccuracy = FastMath.ulp(c);\n+        solverAbsoluteAccuracy = FastMath.max(FastMath.ulp(a), FastMath.ulp(b));\n     }\n \n     /**\n         return c;\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * {@inheritDoc}\n+     *\n+     * <p>\n+     * For this distribution, the returned value is not really meaningful,\n+     * since exact formulas are implemented for the computation of the\n+     * {@link #inverseCumulativeProbability(double)} (no solver is invoked).\n+     * </p>\n+     * <p>\n+     * For lower limit {@code a} and upper limit {@code b}, the current\n+     * implementation returns {@code max(ulp(a), ulp(b)}.\n+     * </p>\n+     */\n     @Override\n     protected double getSolverAbsoluteAccuracy() {\n         return solverAbsoluteAccuracy;", "timestamp": 1327740609, "metainfo": ""}