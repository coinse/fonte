{"sha": "636dd19a9511e4a61a61780e873d27b81e2cd8df", "log": "MATH-561 Map a value to the interval [O, period).   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n      public static double normalizeAngle(double a, double center) {\n          return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);\n      }\n+\n+    /**\n+     * Reduce to the primary interval {@code [0 period)}.\n+     *\n+     * @param a Value to reduce.\n+     * @param period Period.\n+     * @param offset Value that will be mapped to {@code 0}.\n+     * @return the value, within the interval {@code [0 period)},\n+     * that corresponds to {@code a}.\n+     */\n+    public static double reduce(double a,\n+                                double period,\n+                                double offset) {\n+        final double p = Math.abs(period);\n+        return a - p * Math.floor((a - offset) / p) - offset;\n+    }\n \n      /**\n       * <p>Normalizes an array to make it sum to a specified value.\n--- a/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n     }\n \n     @Test\n+    public void testReduce() {\n+        final double period = -12.222;\n+        final double offset = 13;\n+\n+        final double delta = 1.5;\n+\n+        double orig = offset + 122456789 * period + delta;\n+        double expected = delta;\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, period, offset),\n+                            1e-7);\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, -period, offset),\n+                            1e-7);\n+\n+        orig = offset - 123356789 * period - delta;\n+        expected = Math.abs(period) - delta;\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, period, offset),\n+                            1e-6);\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, -period, offset),\n+                            1e-6);\n+\n+        orig = offset - 123446789 * period + delta;\n+        expected = delta;\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, period, offset),\n+                            1e-6);\n+        Assert.assertEquals(expected,\n+                            MathUtils.reduce(orig, -period, offset),\n+                            1e-6);\n+    }\n+\n+    @Test\n+    public void testReduceComparedWithNormalizeAngle() {\n+        final double tol = Math.ulp(1d);\n+        final double period = 2 * Math.PI;\n+        for (double a = -15; a <= 15; a += 0.5) {\n+            for (double center = -15; center <= 15; center += 1) {\n+                final double nA = MathUtils.normalizeAngle(a, center);\n+                final double offset = center - Math.PI;\n+                final double r = MathUtils.reduce(a, period, offset);\n+                Assert.assertEquals(nA, r + offset, tol);\n+            }\n+        }\n+    }\n+\n+    @Test\n     public void testNormalizeArray() {\n         double[] testValues1 = new double[] {1, 1, 2};\n         TestUtils.assertEquals(", "timestamp": 1303905256, "metainfo": ""}