{"sha": "a79c0bb281d208d40376dc53edc936321467a0e3", "log": "MATH-425   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/RealVectorFormat.java\n+++ b/src/main/java/org/apache/commons/math/linear/RealVectorFormat.java\n import java.util.Locale;\n \n import org.apache.commons.math.MathRuntimeException;\n+import org.apache.commons.math.exception.MathIllegalArgumentException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n import org.apache.commons.math.util.CompositeFormat;\n \n      *            offsets of the alignment field\n      * @return the value passed in as toAppendTo.\n      * @see java.text.Format#format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)\n-     * @throws IllegalArgumentException is <code>obj</code> is not a valid type.\n+     * @throws MathIllegalArgumentException is {@code obj} is not a valid type.\n      */\n     @Override\n     public StringBuffer format(Object obj, StringBuffer toAppendTo,\n                                FieldPosition pos) {\n \n         if (obj instanceof RealVector) {\n-            return format( (RealVector)obj, toAppendTo, pos);\n-        }\n-\n-        throw MathRuntimeException.createIllegalArgumentException(\n-              LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR,\n-              obj.getClass().getName());\n+            return format((RealVector) obj, toAppendTo, pos);\n+        }\n+\n+        throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR,\n+                                               obj.getClass().getName());\n \n     }\n ", "timestamp": 1291732816, "metainfo": ""}