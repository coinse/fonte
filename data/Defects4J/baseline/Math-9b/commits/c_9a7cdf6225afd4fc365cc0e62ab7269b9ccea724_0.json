{"sha": "9a7cdf6225afd4fc365cc0e62ab7269b9ccea724", "log": "Eliminated deprecated exception.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java\n import java.lang.reflect.InvocationTargetException;\n import java.util.Arrays;\n \n-import org.apache.commons.math.MathRuntimeException;\n+import org.apache.commons.math.exception.MathIllegalArgumentException;\n import org.apache.commons.math.exception.NullArgumentException;\n+import org.apache.commons.math.exception.MathIllegalStateException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n import org.apache.commons.math.stat.descriptive.moment.GeometricMean;\n import org.apache.commons.math.stat.descriptive.moment.Kurtosis;\n     public void setWindowSize(int windowSize) {\n         if (windowSize < 1) {\n             if (windowSize != INFINITE_WINDOW) {\n-                throw MathRuntimeException.createIllegalArgumentException(\n+                throw new MathIllegalArgumentException(\n                       LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE, windowSize);\n             }\n         }\n      * @return An estimate for the pth percentile of the stored data\n      * @throws IllegalStateException if percentile implementation has been\n      *  overridden and the supplied implementation does not support setQuantile\n-     * values\n      */\n     public double getPercentile(double p) {\n         if (percentileImpl instanceof Percentile) {\n                         new Class[] {Double.TYPE}).invoke(percentileImpl,\n                                 new Object[] {Double.valueOf(p)});\n             } catch (NoSuchMethodException e1) { // Setter guard should prevent\n-                throw MathRuntimeException.createIllegalArgumentException(\n+                throw new MathIllegalStateException(\n                       LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,\n                       percentileImpl.getClass().getName(), SET_QUANTILE_METHOD_NAME);\n             } catch (IllegalAccessException e2) {\n-                throw MathRuntimeException.createIllegalArgumentException(\n+                throw new MathIllegalStateException(\n                       LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD,\n                       SET_QUANTILE_METHOD_NAME, percentileImpl.getClass().getName());\n             } catch (InvocationTargetException e3) {\n-                throw MathRuntimeException.createIllegalArgumentException(e3.getCause());\n+                throw new IllegalStateException(e3.getCause());\n             }\n         }\n         return apply(percentileImpl);\n                     new Class[] {Double.TYPE}).invoke(percentileImpl,\n                             new Object[] {Double.valueOf(50.0d)});\n         } catch (NoSuchMethodException e1) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            throw new MathIllegalArgumentException(\n                   LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,\n                   percentileImpl.getClass().getName(), SET_QUANTILE_METHOD_NAME);\n         } catch (IllegalAccessException e2) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            throw new MathIllegalArgumentException(\n                   LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD,\n                   SET_QUANTILE_METHOD_NAME, percentileImpl.getClass().getName());\n         } catch (InvocationTargetException e3) {\n-            throw MathRuntimeException.createIllegalArgumentException(e3.getCause());\n+            throw new IllegalArgumentException(e3.getCause());\n         }\n         this.percentileImpl = percentileImpl;\n     }", "timestamp": 1322344580, "metainfo": ""}