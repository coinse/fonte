{"sha": "053c5e0d0dd276b5d0ee8d6c958c8fba88576f67", "log": "Changed getN() to return long.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java\n  * This interface is designed to be used for calculating statistics that can be computed in \n  * one pass through the data without storing the full array of sample values.\n  *\n- * @version $Revision: 1.17 $ $Date: 2004/07/04 22:03:03 $\n+ * @version $Revision: 1.18 $ $Date: 2004/07/10 17:09:08 $\n  */\n public interface StorelessUnivariateStatistic extends UnivariateStatistic {\n \n      * Returns the number of values that have been added.\n      * @return the number of values.\n      */\n-    double getN();\n+    long getN();\n \n     /**\n      * Clears all the internal state of the Statistic\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/FirstMoment.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/FirstMoment.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  *\n- * @version $Revision: 1.18 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.19 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class FirstMoment extends AbstractStorelessUnivariateStatistic \n     implements Serializable {\n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n \n--- a/src/java/org/apache/commons/math/stat/univariate/moment/Kurtosis.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/Kurtosis.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.26 $ $Date: 2004/07/04 22:06:07 $\n+ * @version $Revision: 1.27 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Kurtosis extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return moment.getN();\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/moment/Mean.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/Mean.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Mean extends AbstractStorelessUnivariateStatistic \n     implements Serializable {\n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return moment.getN();\n     }\n \n--- a/src/java/org/apache/commons/math/stat/univariate/moment/StandardDeviation.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/StandardDeviation.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 22:10:02 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class StandardDeviation extends AbstractStorelessUnivariateStatistic\n     implements Serializable {\n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return variance.getN();\n     }\n \n--- a/src/java/org/apache/commons/math/stat/univariate/moment/Variance.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/Variance.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.24 $ $Date: 2004/07/04 22:09:07 $\n+ * @version $Revision: 1.25 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Variance extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return moment.getN();\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/rank/Max.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/rank/Max.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.19 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.20 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Max extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/rank/Min.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/rank/Min.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Min extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/summary/Product.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/summary/Product.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Product extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/summary/Sum.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/summary/Sum.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.23 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.24 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class Sum extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/summary/SumOfLogs.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/summary/SumOfLogs.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class SumOfLogs extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     \n--- a/src/java/org/apache/commons/math/stat/univariate/summary/SumOfSquares.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/summary/SumOfSquares.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.20 $ $Date: 2004/07/04 09:02:36 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 17:09:08 $\n  */\n public class SumOfSquares extends AbstractStorelessUnivariateStatistic implements Serializable {\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getN()\n      */\n-    public double getN() {\n+    public long getN() {\n         return n;\n     }\n     ", "timestamp": 1089479348, "metainfo": ""}