{"sha": "480739d3a41cdd1f6ca653039e19296590ee1093", "log": "Fixed license header, added missing javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/StatisticalSummaryValues.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/StatisticalSummaryValues.java\n /*\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.stat.univariate;\n \n /**\n  *  Value object representing the results of a univariate statistical summary.\n  *\n- * @version $Revision: 1.1 $ $Date: 2004/05/18 04:17:29 $\n+ * @version $Revision: 1.2 $ $Date: 2004/06/20 01:50:18 $\n  */\n-public class StatisticalSummaryValues implements Serializable, StatisticalSummary {\n+public class StatisticalSummaryValues implements Serializable, \n+    StatisticalSummary {\n    \n     /** Serialization id */\n     static final long serialVersionUID = -5108854841843722536L;\n \n+    /** The sample mean */\n     private double mean = Double.NaN;\n+    \n+    /** The sample variance */\n     private double variance = Double.NaN;\n+    \n+    /** The number of observations in the sample */\n     private long n = 0;\n+    \n+    /** The maximum value */\n     private double max = Double.NaN;\n+    \n+    /** The minimum value */\n     private double min = Double.NaN;\n+    \n+    /** The sum of the sample values */\n     private double sum = Double.NaN;\n     \n     /**\n       * Constructor\n       * \n-      * @param mean\n-      * @param variance\n-      * @param n\n-      * @param max\n-      * @param min\n-      * @param sum\n+      * @param mean  the sample mean\n+      * @param variance  the sample variance\n+      * @param n  the number of observations in the sample \n+      * @param max  the maximum value\n+      * @param min  the minimum value\n+      * @param sum  the sum of the values\n      */\n     public StatisticalSummaryValues(double mean, double variance, long n,\n         double max, double min, double sum) {\n         this.sum = sum;\n     }\n     \n+    /** Private no argument contstructor */\n     private StatisticalSummaryValues() {\n         super();\n     }", "timestamp": 1087696218, "metainfo": ""}