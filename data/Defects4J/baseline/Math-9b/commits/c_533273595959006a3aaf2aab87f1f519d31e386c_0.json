{"sha": "533273595959006a3aaf2aab87f1f519d31e386c", "log": "fixed missing annotations preventing test to run   ", "commit": "\n--- a/src/test/java/org/apache/commons/math/dfp/DfpMathTest.java\n+++ b/src/test/java/org/apache/commons/math/dfp/DfpMathTest.java\n import org.junit.After;\n import org.junit.Assert;\n import org.junit.Before;\n+import org.junit.Test;\n \n public class DfpMathTest {\n \n     private Dfp pinf;\n     private Dfp ninf;\n     private Dfp nan;\n-    private Dfp snan;\n     private Dfp qnan;\n \n     @Before\n         pinf = factory.newDfp(\"1\").divide(factory.newDfp(\"0\"));\n         ninf = factory.newDfp(\"-1\").divide(factory.newDfp(\"0\"));\n         nan = factory.newDfp(\"0\").divide(factory.newDfp(\"0\"));\n-        snan = factory.newDfp((byte)1, Dfp.SNAN);\n         qnan = factory.newDfp((byte)1, Dfp.QNAN);\n         ninf.getField().clearIEEEFlags();\n \n         pinf = null;\n         ninf = null;\n         nan  = null;\n-        snan = null;\n         qnan = null;\n     }\n \n         x.getField().clearIEEEFlags();\n     }\n \n+    @Test\n     public void testPow()  \n     {\n         // Test special cases  exponent of zero\n              DfpField.FLAG_INEXACT, \"pow #88\");\n     }\n \n+    @Test\n     public void testSin()\n     {\n         test(DfpMath.sin(pinf),", "timestamp": 1283676476, "metainfo": ""}