{"sha": "29d5df5e1f75a870a6c5cbc751255531d80c1f0c", "log": "MATH-803 : deprecated RealVector.ebeMultiply() and RealVector.ebeDivide(), and updated unit tests accordingly.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/RealVector.java\n+++ b/src/main/java/org/apache/commons/math3/linear/RealVector.java\n      * @return a vector containing this[i] / v[i] for all i.\n      * @throws org.apache.commons.math3.exception.DimensionMismatchException\n      * if {@code v} is not the same size as this vector.\n-     */\n+     * @deprecated As of version 3.1, this method is deprecated, and will be\n+     * removed in version 4.0. This decision follows the discussion reported in\n+     * <a href=\"https://issues.apache.org/jira/browse/MATH-803?focusedCommentId=13399150#comment-13399150\">MATH-803</a>.\n+     * Uses of this method involving sparse implementations of\n+     * {@link RealVector} might lead to wrong results. Since there is no\n+     * satisfactory correction to this bug, this method is deprecated. Users who\n+     * want to preserve this feature are advised to implement\n+     * {@link RealVectorPreservingVisitor} (possibly ignoring corner cases for\n+     * the sake of efficiency).\n+     */\n+    @Deprecated\n     public abstract RealVector ebeDivide(RealVector v);\n \n     /**\n      * @return a vector containing this[i] * v[i] for all i.\n      * @throws org.apache.commons.math3.exception.DimensionMismatchException\n      * if {@code v} is not the same size as this vector.\n-     */\n+     * @deprecated As of version 3.1, this method is deprecated, and will be\n+     * removed in version 4.0. This decision follows the discussion reported in\n+     * <a href=\"https://issues.apache.org/jira/browse/MATH-803?focusedCommentId=13399150#comment-13399150\">MATH-803</a>.\n+     * Uses of this method involving sparse implementations of\n+     * {@link RealVector} might lead to wrong results. Since there is no\n+     * satisfactory correction to this bug, this method is deprecated. Users who\n+     * want to preserve this feature are advised to implement\n+     * {@link RealVectorPreservingVisitor} (possibly ignoring corner cases for\n+     * the sake of efficiency).\n+     */\n+    @Deprecated\n     public abstract RealVector ebeMultiply(RealVector v);\n \n     /**\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n import org.apache.commons.math3.util.FastMath;\n import org.apache.commons.math3.util.MathArrays;\n import org.junit.Assert;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n \n          *\n          * The values to be considered are: x, y, z, x * x.\n          *\n-         * Also to be considered NaN, POSITIVE_INFINITY, NEGATIVE_INFINITY.\n+         * Also to be considered NaN, POSITIVE_INFINITY, NEGATIVE_INFINITY,\n+         * +0.0, -0.0.\n          */\n-        final double[] values = {x, y, z, 2 * x, -x, 1 / x, x * x, x + y, x - y, y - x};\n+        final double[] values =\n+            {\n+                Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY,\n+                0d, -0d, x, y, z, 2 * x, -x, 1 / x, x * x, x + y, x - y, y - x\n+            };\n         final double[] data1 = new double[values.length * values.length];\n         final double[] data2 = new double[values.length * values.length];\n         int k = 0;\n         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.SUB);\n     }\n \n+    @Ignore(\"ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test\n     public void testEbeMultiplySameType() {\n         doTestEbeBinaryOperation(BinaryOperation.MUL, false);\n     }\n \n+    @Ignore(\"ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test\n     public void testEbeMultiplyMixedTypes() {\n         doTestEbeBinaryOperation(BinaryOperation.MUL, true);\n     }\n \n+    @Ignore(\"ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test(expected = DimensionMismatchException.class)\n     public void testEbeMultiplyDimensionMismatch() {\n         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.MUL);\n     }\n \n+    @Ignore(\"ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test\n     public void testEbeDivideSameType() {\n         doTestEbeBinaryOperation(BinaryOperation.DIV, false);\n     }\n \n+    @Ignore(\"ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test\n     public void testEbeDivideMixedTypes() {\n         doTestEbeBinaryOperation(BinaryOperation.DIV, true);\n     }\n \n+    @Ignore(\"ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.\")\n     @Test(expected = DimensionMismatchException.class)\n     public void testEbeDivideDimensionMismatch() {\n         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.DIV);\n--- a/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java\n         EXCLUDE.add(\"sparseIterator\");\n         EXCLUDE.add(\"walkInDefaultOrder\");\n         EXCLUDE.add(\"walkInOptimizedOrder\");\n+        EXCLUDE.add(\"ebeDivide\");\n+        EXCLUDE.add(\"ebeMultiply\");\n \n         // Excluded because they are inherited from \"Object\".\n         for (Method m : Object.class.getMethods()) {", "timestamp": 1340348788, "metainfo": ""}