{"sha": "6be65936bdcfd2a3e04a7e8d50848a3ef9d36567", "log": "Javadoc fixes in ODE.  JIRA: MATH-594  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java\n  * classical implementations are fixed step size. The value of state vector\n  * at step n+1 is a simple combination of the value at step n and of the\n  * derivatives at steps n+1, n, n-1 ... Since y'<sub>n+1</sub> is needed to\n- * compute y<sub>n+1</sub>,another method must be used to compute a first\n+ * compute y<sub>n+1</sub>, another method must be used to compute a first\n  * estimate of y<sub>n+1</sub>, then compute y'<sub>n+1</sub>, then compute\n  * a final estimate of y<sub>n+1</sub> using the following formulas. Depending\n  * on the number k of previous steps one wants to use for computing the next", "timestamp": 1308123845, "metainfo": ""}