{"sha": "544f8084509c6ce09843f5e1e2479a912b47e467", "log": "removed references to the StatisticalMultivariateSummaryValues class  ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n+++ b/src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n \n     }\n \n-    public void testGetSummary() throws DimensionMismatchException {\n-        MultivariateSummaryStatistics u = new MultivariateSummaryStatistics(2, true);\n-        StatisticalMultivariateSummary summary = u.getSummary();\n-        verifySummary(u, summary);\n-        u.addValue(new double[] { 1, 2 });\n-        summary = u.getSummary();\n-        verifySummary(u, summary);\n-        u.addValue(new double[] { 2, 5 });\n-        summary = u.getSummary();\n-        verifySummary(u, summary);\n-        u.addValue(new double[] { 2, 2 });\n-        summary = u.getSummary();\n-        verifySummary(u, summary);     \n-    }\n-\n     public void testSerialization() throws DimensionMismatchException {\n         MultivariateSummaryStatistics u = new MultivariateSummaryStatistics(2, true);\n         // Empty test\n         TestUtils.checkSerializedEquality(u);\n         MultivariateSummaryStatistics s = (MultivariateSummaryStatistics) TestUtils.serializeAndRecover(u);\n-        StatisticalMultivariateSummary summary = s.getSummary();\n-        verifySummary(u, summary);\n+        assertEquals(u, s);\n \n         // Add some data\n         u.addValue(new double[] { 2d, 1d });\n         // Test again\n         TestUtils.checkSerializedEquality(u);\n         s = (MultivariateSummaryStatistics) TestUtils.serializeAndRecover(u);\n-        summary = s.getSummary();\n-        verifySummary(u, summary);\n+        assertEquals(u, s);\n \n     }\n \n         assertEquals(emptyHash, u.hashCode());\n     }\n \n-    private void verifySummary(MultivariateSummaryStatistics u, StatisticalMultivariateSummary s) {\n-        assertEquals(s.getN(), u.getN());\n-        for (int i = 0; i < u.getDimension(); ++i) {\n-            checkValue(s.getSum()[i], u.getSum()[i], 1.0e-10);\n-            checkValue(s.getStandardDeviation()[i], u.getStandardDeviation()[i], 1.0e-10);\n-            checkValue(s.getMean()[i], u.getMean()[i], 1.0e-10);\n-            checkValue(s.getMin()[i], u.getMin()[i], 1.0e-10);\n-            checkValue(s.getMax()[i], u.getMax()[i], 1.0e-10);\n-            checkValue(s.getSumSq()[i], u.getSumSq()[i], 1.0e-10);\n-            checkValue(s.getSumLog()[i], u.getSumLog()[i], 1.0e-10);\n-            checkValue(s.getMax()[i], u.getMax()[i], 1.0e-10);\n-        }\n-    }\n-\n-    private void checkValue(double expected, double actual, double tolerance) {\n-        if (Double.isNaN(expected)) {\n-            assertTrue(Double.isNaN(actual));\n-        } else {\n-            assertEquals(expected, actual, tolerance);\n-        }\n-    }\n-\n }", "timestamp": 1202660930, "metainfo": ""}