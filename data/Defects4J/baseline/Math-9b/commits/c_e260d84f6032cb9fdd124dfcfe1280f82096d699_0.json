{"sha": "e260d84f6032cb9fdd124dfcfe1280f82096d699", "log": "MATH-493 FastMath min and max fail with (Infinity,-Infinity) and (0,0, -0.0) Fixing (0,0, -0.0) by using code from Harmony.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n      * @return a if a is lesser or equal to b, b otherwise\n      */\n     public static float min(final float a, final float b) {\n-        return (a <= b) ? a : ((a!=a||b!=b) ? Float.NaN : b);\n+        if (a > b) {\n+            return b;\n+        }\n+        if (a < b) {\n+            return a;\n+        }\n+        /* if either arg is NaN, return NaN */\n+        if (a != b) {\n+            return Float.NaN;\n+        }\n+        /* min(+0.0,-0.0) == -0.0 */\n+        /* 0x80000000 == Float.floatToRawIntBits(-0.0d) */\n+        int bits = Float.floatToRawIntBits(a);\n+        if (bits == 0x80000000) {\n+            return a;\n+        }\n+        return b;\n     }\n \n     /** Compute the minimum of two values\n      * @return a if a is lesser or equal to b, b otherwise\n      */\n     public static double min(final double a, final double b) {\n-        return (a <= b) ? a : ((a!=a||b!=b) ? Double.NaN : b);\n+        if (a > b) {\n+            return b;\n+        }\n+        if (a < b) {\n+            return a;\n+        }\n+        /* if either arg is NaN, return NaN */\n+        if (a != b) {\n+            return Double.NaN;\n+        }\n+        /* min(+0.0,-0.0) == -0.0 */\n+        /* 0x8000000000000000L == Double.doubleToRawLongBits(-0.0d) */\n+        long bits = Double.doubleToRawLongBits(a);\n+        if (bits == 0x8000000000000000L) {\n+            return a;\n+        }\n+        return b;\n     }\n \n     /** Compute the maximum of two values\n      * @return b if a is lesser or equal to b, a otherwise\n      */\n     public static float max(final float a, final float b) {\n-        return (a < b) ? b : ((a!=a||b!=b) ? Float.NaN : a);\n+        if (a > b) {\n+            return a;\n+        }\n+        if (a < b) {\n+            return b;\n+        }\n+        /* if either arg is NaN, return NaN */\n+        if (a != b) {\n+            return Float.NaN;\n+        }\n+        /* min(+0.0,-0.0) == -0.0 */\n+        /* 0x80000000 == Float.floatToRawIntBits(-0.0d) */\n+        int bits = Float.floatToRawIntBits(a);\n+        if (bits == 0x80000000) {\n+            return b;\n+        }\n+        return a;\n     }\n \n     /** Compute the maximum of two values\n      * @return b if a is lesser or equal to b, a otherwise\n      */\n     public static double max(final double a, final double b) {\n-        return (a <= b) ? b : ((a!=a||b!=b) ? Double.NaN : a);\n+        if (a > b) {\n+            return a;\n+        }\n+        if (a < b) {\n+            return b;\n+        }\n+        /* if either arg is NaN, return NaN */\n+        if (a != b) {\n+            return Double.NaN;\n+        }\n+        /* min(+0.0,-0.0) == -0.0 */\n+        /* 0x8000000000000000L == Double.doubleToRawLongBits(-0.0d) */\n+        long bits = Double.doubleToRawLongBits(a);\n+        if (bits == 0x8000000000000000L) {\n+            return b;\n+        }\n+        return a;\n     }\n \n     /**", "timestamp": 1295873243, "metainfo": ""}