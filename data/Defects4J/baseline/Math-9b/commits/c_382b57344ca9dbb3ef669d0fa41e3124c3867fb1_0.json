{"sha": "382b57344ca9dbb3ef669d0fa41e3124c3867fb1", "log": "Fixed threading issues with UnivariateRealSolverUtils factory Jira: MATH-254  ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\n         super();\n     }\n     \n-    /** Cached solver factory */\n-    private static UnivariateRealSolverFactory factory = null;\n-\n     /**\n      * Convenience method to find a zero of a univariate real function.  A default\n      * solver is used. \n     public static double solve(UnivariateRealFunction f, double x0, double x1)\n     throws ConvergenceException, FunctionEvaluationException {\n         setup(f);\n-        return factory.newDefaultSolver().solve(f, x0, x1);\n+        return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);\n     }\n \n     /**\n             FunctionEvaluationException {    \n        \n         setup(f);\n-        UnivariateRealSolver solver = factory.newDefaultSolver();\n+        UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();\n         solver.setAbsoluteAccuracy(absoluteAccuracy);\n         return solver.solve(f, x0, x1);\n     }\n     \n     /**\n      * Checks to see if f is null, throwing IllegalArgumentException if so.\n-     * Also initializes factory if factory is null.\n-     * \n      * @param f  input function\n      * @throws IllegalArgumentException if f is null\n      */\n     private static void setup(UnivariateRealFunction f) {\n-       \n         if (f == null) {\n             throw new IllegalArgumentException(\"function can not be null.\");    \n         }\n-        \n-        if (factory == null) {\n-            factory = UnivariateRealSolverFactory.newInstance();\n-        }       \n-    }\n+    }\n+\n+    /** Holder for the factory.\n+     * <p>We use here the Initialization On Demand Holder Idiom.</p>\n+     */\n+    private static class LazyHolder {\n+        /** Cached solver factory */\n+        private static final UnivariateRealSolverFactory FACTORY =\n+            UnivariateRealSolverFactory.newInstance();\n+    }\n+\n }", "timestamp": 1238944563, "metainfo": ""}