{"sha": "f485a1c7ebca34d5f365f870ddf0ff0e683bd769", "log": "Changed return type for FirstOrderIntegrator.getSwitchingFunctions() to a collection of SwitchingFunction instances. This better suits the intended use of the method and fixes a visibility error since the previous return type referenced the package private SwitchState class.  JIRA: MATH-210   ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java\n    * @see #addSwitchingFunction(SwitchingFunction, double, double, int)\n    * @see #clearSwitchingFunctions()\n    */\n-  public Collection<SwitchState> getSwitchingFunctions() {\n+  public Collection<SwitchingFunction> getSwitchingFunctions() {\n       return switchesHandler.getSwitchingFunctions();\n   }\n \n--- a/src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java\n    * @see #addSwitchingFunction(SwitchingFunction, double, double, int)\n    * @see #clearSwitchingFunctions()\n    */\n-  public Collection<SwitchState> getSwitchingFunctions();\n+  public Collection<SwitchingFunction> getSwitchingFunctions();\n \n   /** Remove all the switching functions that have been added to the integrator.\n    * @see #addSwitchingFunction(SwitchingFunction, double, double, int)\n--- a/src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java\n    * @see #addSwitchingFunction(SwitchingFunction, double, double, int)\n    * @see #clearSwitchingFunctions()\n    */\n-  public Collection<SwitchState> getSwitchingFunctions() {\n+  public Collection<SwitchingFunction> getSwitchingFunctions() {\n       return switchesHandler.getSwitchingFunctions();\n   }\n \n--- a/src/java/org/apache/commons/math/ode/SwitchState.java\n+++ b/src/java/org/apache/commons/math/ode/SwitchState.java\n     increasing        = true;\n     nextAction        = SwitchingFunction.CONTINUE;\n \n+  }\n+\n+  /** Get the underlying switching function.\n+   * @return underlying switching function\n+   */\n+  public SwitchingFunction getSwitchingFunction() {\n+      return function;\n   }\n \n   /** Reinitialize the beginning of the step.\n--- a/src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java\n+++ b/src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java\n    * @see #addSwitchingFunction(SwitchingFunction, double, double, int)\n    * @see #clearSwitchingFunctions()\n    */\n-  public Collection<SwitchState> getSwitchingFunctions() {\n-      return Collections.unmodifiableCollection(functions);\n+  public Collection<SwitchingFunction> getSwitchingFunctions() {\n+      List<SwitchingFunction> list = new ArrayList<SwitchingFunction>();\n+      for (SwitchState state : functions) {\n+          list.add(state.getSwitchingFunction());\n+      }\n+      return Collections.unmodifiableCollection(list);\n   }\n \n   /** Remove all the switching functions that have been added to the handler.", "timestamp": 1213959573, "metainfo": ""}