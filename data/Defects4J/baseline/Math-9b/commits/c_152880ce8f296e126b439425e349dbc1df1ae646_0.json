{"sha": "152880ce8f296e126b439425e349dbc1df1ae646", "log": "Increased precision of target values used in tests.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java\n+++ b/src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java\n /**\n  * Test cases for the ChiSquareTestImpl class.\n  *\n- * @version $Revision: 1.4 $ $Date: 2004/12/04 20:52:43 $\n+ * @version $Revision: 1.5 $ $Date: 2004/12/10 05:18:16 $\n  */\n \n public final class ChiSquareTestTest extends TestCase {\n         // Target values computed using R version 1.8.1 \n         // Some assembly required ;-)  \n         //      Use sum((obs - exp)^2/exp) for the chi-square statistic and\n-        //      1 - pchisq(sum((obs - exp)^2/exp), obs.length - 1) for the p-value\n+        //      1 - pchisq(sum((obs - exp)^2/exp), length(obs) - 1) for the p-value\n         \n         long[] observed = {10, 9, 11};\n         double[] expected = {10, 10, 10};\n         assertEquals(\"chi-square statistic\", 0.2,  testStatistic.chiSquare(expected, observed), 10E-12);\n-        assertEquals(\"chi-square p-value\", 0.9048374, testStatistic.chiSquareTest(expected, observed), 1E-7);\n+        assertEquals(\"chi-square p-value\", 0.904837418036, testStatistic.chiSquareTest(expected, observed), 1E-10);\n         \n         long[] observed1 = { 500, 623, 72, 70, 31 };\n         double[] expected1 = { 485, 541, 82, 61, 37 };\n-        assertEquals( \"chi-square test statistic\", 16.41311, testStatistic.chiSquare(expected1, observed1), 1E-5);\n+        assertEquals( \"chi-square test statistic\", 16.4131070362, testStatistic.chiSquare(expected1, observed1), 1E-10);\n         assertEquals(\"chi-square p-value\", 0.002512096, testStatistic.chiSquareTest(expected1, observed1), 1E-9);\n         assertTrue(\"chi-square test reject\", testStatistic.chiSquareTest(expected1, observed1, 0.003));\n         assertTrue(\"chi-square test accept\", !testStatistic.chiSquareTest(expected1, observed1, 0.002));\n         \n         long[][] counts = { {40, 22, 43}, {91, 21, 28}, {60, 10, 22}};\n         assertEquals( \"chi-square test statistic\", 22.709027688, testStatistic.chiSquare(counts), 1E-9);\n-        assertEquals(\"chi-square p-value\", 0.0001448, testStatistic.chiSquareTest(counts), 1E-7);\n+        assertEquals(\"chi-square p-value\", 0.000144751460134, testStatistic.chiSquareTest(counts), 1E-9);\n         assertTrue(\"chi-square test reject\", testStatistic.chiSquareTest(counts, 0.0002));\n         assertTrue(\"chi-square test accept\", !testStatistic.chiSquareTest(counts, 0.0001));    \n         \n         long[][] counts2 = {{10, 15}, {30, 40}, {60, 90} };\n-        assertEquals( \"chi-square test statistic\", 0.169, testStatistic.chiSquare(counts2), 1E-3);\n-        assertEquals(\"chi-square p-value\", 0.919, testStatistic.chiSquareTest(counts2), 1E-3);\n+        assertEquals( \"chi-square test statistic\", 0.168965517241, testStatistic.chiSquare(counts2), 1E-9);\n+        assertEquals(\"chi-square p-value\",0.918987499852, testStatistic.chiSquareTest(counts2), 1E-9);\n         assertTrue(\"chi-square test accept\", !testStatistic.chiSquareTest(counts2, 0.1)); \n         \n         // ragged input array\n             new org.apache.commons.math.stat.inference.ChiSquareTestImpl(); \n         double cst = csti.chiSquareTest(exp, obs); \n         assertEquals(\"chi-square p-value\", 0.0, cst, 1E-3);\n+        assertEquals( \"chi-square test statistic\", \n+                3624883.342907764, testStatistic.chiSquare(exp, obs), 1E-9);\n     }\n     \n     /** Contingency table containing zeros - PR # 32531 */\n--- a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n /**\n  * Test cases for the TestStatistic class.\n  *\n- * @version $Revision: 1.3 $ $Date: 2004/10/24 21:47:16 $\n+ * @version $Revision: 1.4 $ $Date: 2004/12/10 05:18:16 $\n  */\n \n public final class SimpleRegressionTest extends TestCase {\n         regression.addData(corrData);\n         assertEquals(\"number of observations\", 17, regression.getN());\n         assertEquals(\"r-square\", .896123, regression.getRSquare(), 10E-6);\n-        assertEquals(\"r\", -.946638, regression.getR(), 10E-6);\n+        assertEquals(\"r\", -0.94663767742, regression.getR(), 1E-10);\n     }\n \n     public void testNaNs() {\n                 regression.getSlopeStdErr(), 1E-8);\n         assertEquals(\"std err intercept\",4.17718672,\n                 regression.getInterceptStdErr(),1E-8);\n-        assertEquals(\"significance\", 0.26183,\n-                regression.getSignificance(),1E-5);    \n+        assertEquals(\"significance\", 0.261829133982,\n+                regression.getSignificance(),1E-11);    \n         assertEquals(\"slope conf interval half-width\", 2.97802204827, \n                 regression.getSlopeConfidenceInterval(),1E-8);\n         //------------- End R-verified tests -------------------------------", "timestamp": 1102655896, "metainfo": ""}