{"sha": "21cc381a5ac77aab6327d1fcf889ba9d998c0a4e", "log": "Added \"final\". Moved declaration of \"sum\" where it is used.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java\n     /** Default bound to determine effective singularity in LU decomposition. */\n     private static final double DEFAULT_TOO_SMALL = 1e-11;\n     /** Entries of LU decomposition. */\n-    private double lu[][];\n+    private final double lu[][];\n     /** Pivot permutation associated with LU decomposition */\n-    private int[] pivot;\n+    private final int[] pivot;\n     /** Parity of the permutation associated with the LU decomposition */\n     private boolean even;\n     /** Singularity indicator. */\n         // Loop over columns\n         for (int col = 0; col < m; col++) {\n \n-            double sum = 0;\n-\n             // upper\n             for (int row = 0; row < col; row++) {\n                 final double[] luRow = lu[row];\n-                sum = luRow[col];\n+                double sum = luRow[col];\n                 for (int i = 0; i < row; i++) {\n                     sum -= luRow[i] * lu[i][col];\n                 }\n             double largest = Double.NEGATIVE_INFINITY;\n             for (int row = col; row < m; row++) {\n                 final double[] luRow = lu[row];\n-                sum = luRow[col];\n+                double sum = luRow[col];\n                 for (int i = 0; i < col; i++) {\n                     sum -= luRow[i] * lu[i][col];\n                 }", "timestamp": 1315391689, "metainfo": ""}