{"sha": "d12cdafc48fdbe607304804ed8c65233d3ab6fc5", "log": "Fix generics  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/linear/FieldLUSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/FieldLUSolverTest.java\n     /** test solve singularity errors */\n     @Test\n     public void testSolveSingularityErrors() {\n-        FieldDecompositionSolver solver;\n-        solver = new FieldLUDecomposition(createFractionMatrix(singular))\n+        FieldDecompositionSolver<Fraction> solver;\n+        solver = new FieldLUDecomposition<Fraction>(createFractionMatrix(singular))\n             .getSolver();\n-        FieldMatrix b = createFractionMatrix(new int[2][2]);\n+        FieldMatrix<Fraction> b = createFractionMatrix(new int[2][2]);\n         try {\n             solver.solve(b);\n             Assert.fail(\"an exception should have been thrown\");\n     /** test solve */\n     @Test\n     public void testSolve() {\n-        FieldDecompositionSolver solver;\n+        FieldDecompositionSolver<Fraction> solver;\n         solver = new FieldLUDecomposition<Fraction>(createFractionMatrix(testData))\n             .getSolver();\n         FieldMatrix<Fraction> b = createFractionMatrix(new int[][] {", "timestamp": 1320402194, "metainfo": ""}