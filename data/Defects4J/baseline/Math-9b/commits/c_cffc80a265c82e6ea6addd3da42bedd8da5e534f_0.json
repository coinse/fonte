{"sha": "cffc80a265c82e6ea6addd3da42bedd8da5e534f", "log": "convergence checkers should not be serializable  ", "commit": "\n--- a/src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java\n+++ b/src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java\n \n package org.apache.commons.math.optimization;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.util.MathUtils;\n \n /** \n  * @version $Revision: 757180 $ $Date: 2009-03-22 13:54:45 +0100 (dim., 22 mars 2009) $\n  * @since 2.0\n  */\n-public class SimpleRealPointChecker implements RealConvergenceChecker, Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = 2490271385513842607L;\n+public class SimpleRealPointChecker implements RealConvergenceChecker {\n \n     /** Default relative threshold. */\n     private static final double DEFAULT_RELATIVE_THRESHOLD = 100 * MathUtils.EPSILON;\n--- a/src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java\n+++ b/src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java\n \n package org.apache.commons.math.optimization;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.util.MathUtils;\n \n /** \n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public class SimpleScalarValueChecker implements RealConvergenceChecker, Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = 2490271385513842607L;\n+public class SimpleScalarValueChecker implements RealConvergenceChecker {\n \n     /** Default relative threshold. */\n     private static final double DEFAULT_RELATIVE_THRESHOLD = 100 * MathUtils.EPSILON;\n--- a/src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java\n+++ b/src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java\n \n package org.apache.commons.math.optimization;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.util.MathUtils;\n \n /** \n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public class SimpleVectorialPointChecker implements VectorialConvergenceChecker, Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = 6571098732056285089L;\n+public class SimpleVectorialPointChecker implements VectorialConvergenceChecker {\n \n     /** Default relative threshold. */\n     private static final double DEFAULT_RELATIVE_THRESHOLD = 100 * MathUtils.EPSILON;\n--- a/src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java\n+++ b/src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java\n \n package org.apache.commons.math.optimization;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.util.MathUtils;\n \n /** \n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public class SimpleVectorialValueChecker implements VectorialConvergenceChecker, Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = -3892196630780700808L;\n+public class SimpleVectorialValueChecker implements VectorialConvergenceChecker {\n \n     /** Default relative threshold. */\n     private static final double DEFAULT_RELATIVE_THRESHOLD = 100 * MathUtils.EPSILON;", "timestamp": 1248118446, "metainfo": ""}