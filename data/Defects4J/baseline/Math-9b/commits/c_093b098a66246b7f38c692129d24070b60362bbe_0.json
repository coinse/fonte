{"sha": "093b098a66246b7f38c692129d24070b60362bbe", "log": "Use fixed locale for matrix formatter to prevent decimal point problems.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java\n package org.apache.commons.math3.linear;\n \n import java.util.ArrayList;\n+import java.util.Locale;\n \n import org.apache.commons.math3.exception.NoDataException;\n import org.apache.commons.math3.exception.NotStrictlyPositiveException;\n /**\n  * Basic implementation of RealMatrix methods regardless of the underlying storage.\n  * <p>All the methods implemented here use {@link #getEntry(int, int)} to access\n- * matrix elements. Derived class can provide faster implementations. </p>\n+ * matrix elements. Derived class can provide faster implementations.</p>\n  *\n  * @version $Id$\n  * @since 2.0\n     implements RealMatrix {\n \n     /** Default format. */\n-    private static final RealMatrixFormat DEFAULT_FORMAT = RealMatrixFormat.getInstance();\n+    private static final RealMatrixFormat DEFAULT_FORMAT = RealMatrixFormat.getInstance(Locale.US);\n     static {\n         // set the minimum fraction digits to 1 to keep compatibility\n         DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);", "timestamp": 1345055065, "metainfo": ""}