{"sha": "5b82c88097248ba7bda933c11b2b40838131e473", "log": "allow root search even in reverse direction  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/events/EventState.java\n+++ b/src/java/org/apache/commons/math/ode/events/EventState.java\n                     });\n                     solver.setAbsoluteAccuracy(convergence);\n                     solver.setMaximalIterationCount(maxIterationCount);\n-                    final double root = solver.solve(ta, tb);\n+                    final double root = (ta <= tb) ? solver.solve(ta, tb) : solver.solve(tb, ta);\n                     if (Double.isNaN(previousEventTime) ||\n                         (Math.abs(previousEventTime - root) > convergence)) {\n                         pendingEventTime = root;", "timestamp": 1215694194, "metainfo": ""}