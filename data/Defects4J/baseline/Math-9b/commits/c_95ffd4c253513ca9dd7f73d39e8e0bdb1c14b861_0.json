{"sha": "95ffd4c253513ca9dd7f73d39e8e0bdb1c14b861", "log": "Fixed PMD warnings.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java\n \n         this.parameters = parameters;\n         this.order      = order;\n-        this.sizes      = compileSizes(parameters, order, valueCompiler, derivativeCompiler);\n+        this.sizes      = compileSizes(parameters, order, valueCompiler);\n         this.derivativesIndirection =\n                 compileDerivativesIndirection(parameters, order,\n                                               valueCompiler, derivativeCompiler);\n         this.compIndirection =\n                 compileCompositionIndirection(parameters, order,\n                                               valueCompiler, derivativeCompiler,\n-                                              sizes, derivativesIndirection, lowerIndirection);\n+                                              sizes, derivativesIndirection);\n \n     }\n \n      * @param parameters number of free parameters\n      * @param order derivation order\n      * @param valueCompiler compiler for the value part\n-     * @param derivativeCompiler compiler for the derivative part\n      * @return sizes array\n      */\n     private static int[][] compileSizes(final int parameters, final int order,\n-                                        final DSCompiler valueCompiler,\n-                                        final DSCompiler derivativeCompiler) {\n+                                        final DSCompiler valueCompiler) {\n \n         final int[][] sizes = new int[parameters + 1][order + 1];\n         if (parameters == 0) {\n      * @param derivativeCompiler compiler for the derivative part\n      * @param sizes sizes array\n      * @param derivativesIndirection derivatives indirection array\n-     * @param lowerIndirection lower derivatives indirection array\n      * @return multiplication indirection array\n      */\n     private static int[][][] compileCompositionIndirection(final int parameters, final int order,\n                                                         final DSCompiler valueCompiler,\n                                                         final DSCompiler derivativeCompiler,\n                                                         final int[][] sizes,\n-                                                        final int[][] derivativesIndirection,\n-                                                        final int[] lowerIndirection) {\n+                                                        final int[][] derivativesIndirection) {\n \n         if ((parameters == 0) || (order == 0)) {\n             return new int[][][] { { { 1, 0 } } };", "timestamp": 1355500412, "metainfo": ""}