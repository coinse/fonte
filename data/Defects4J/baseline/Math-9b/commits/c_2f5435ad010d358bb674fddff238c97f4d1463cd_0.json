{"sha": "2f5435ad010d358bb674fddff238c97f4d1463cd", "log": "MATH-480 - Fix ulp(Infinity) to return Infinity rather than NaN MATH-478 - Adds ulp(float)  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n      * @param x number from which ulp is requested\n      * @return ulp(x)\n      */\n-\n     public static double ulp(double x) {\n+        if (Double.isInfinite(x)) {\n+            return Double.POSITIVE_INFINITY;\n+        }\n         return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));\n+    }\n+\n+    /**\n+     * Compute least significant bit (Unit in Last Position) for a number.\n+     * @param x number from which ulp is requested\n+     * @return ulp(x)\n+     */\n+    public static float ulp(float x) {\n+        if (Float.isInfinite(x)) {\n+            return Float.POSITIVE_INFINITY;\n+        }\n+        return abs(x - Float.intBitsToFloat(Float.floatToIntBits(x) ^ 1));\n     }\n \n     /**", "timestamp": 1295464651, "metainfo": ""}