{"sha": "9b5247c9f6a3a14a39300a8ada9d659bb1616149", "log": "Added a conversion from RotationDS to Rotation.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationDS.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationDS.java\n \n     }\n \n+    /** Convert to a constant vector without derivatives.\n+     * @return a constant vector\n+     */\n+    public Rotation toRotation() {\n+        return new Rotation(q0.getValue(), q1.getValue(), q2.getValue(), q3.getValue(), false);\n+    }\n+\n     /** Apply the rotation to a vector.\n      * @param u vector to apply the rotation to\n      * @return a new vector which is the image of u by the rotation\n--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationDSTest.java\n+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationDSTest.java\n         RotationDS r1       = new RotationDS(createVector(2, -3, 5), createAngle(1.7));\n         RotationDS r2       = new RotationDS(createVector(-1, 3, 2), createAngle(0.3));\n         RotationDS r3       = r2.applyTo(r1);\n-        RotationDS r3Double = r2.applyTo(new Rotation(r1.getQ0().getValue(),\n-                                                      r1.getQ1().getValue(),\n-                                                      r1.getQ2().getValue(),\n-                                                      r1.getQ3().getValue(),\n-                                                      false));\n+        RotationDS r3Double = r2.applyTo(r1.toRotation());\n \n         for (double x = -0.9; x < 0.9; x += 0.2) {\n             for (double y = -0.9; y < 0.9; y += 0.2) {\n         RotationDS r1 = new RotationDS(createVector(2, -3, 5), createAngle(1.7));\n         RotationDS r2 = new RotationDS(createVector(-1, 3, 2), createAngle(0.3));\n         RotationDS r3 = r2.applyInverseTo(r1);\n-        RotationDS r3Double = r2.applyInverseTo(new Rotation(r1.getQ0().getValue(),\n-                                                             r1.getQ1().getValue(),\n-                                                             r1.getQ2().getValue(),\n-                                                             r1.getQ3().getValue(),\n-                                                             false));\n+        RotationDS r3Double = r2.applyInverseTo(r1.toRotation());\n \n         for (double x = -0.9; x < 0.9; x += 0.2) {\n             for (double y = -0.9; y < 0.9; y += 0.2) {", "timestamp": 1361286424, "metainfo": ""}