{"sha": "ad61877c52e00a4917d020ab9e0b3ebb8a767a6a", "log": "Modified constructor added in the fix for JIRA: MATH-384 to copy, rather than reference the input array.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java\n+++ b/src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java\n     }\n \n     /**\n-     * Create a ResizableArray from an existing double[] with the \n-     * initial capacity and numElements corresponding to the size of \n-     * the supplied double[] array. If the supplied array is null, a \n-     * new empty array with the default initial capacity will be created. \n+     * Create a ResizableArray from an existing double[] with the\n+     * initial capacity and numElements corresponding to the size of\n+     * the supplied double[] array. If the supplied array is null, a\n+     * new empty array with the default initial capacity will be created.\n+     * The input array is copied, not referenced.\n      * Other properties take default values:\n      * <ul>\n      * <li><code>initialCapacity = 16</code></li>\n      * <li><code>expansionFactor = 2.5</code></li>\n      * <li><code>contractionFactor = 2.0</code></li>\n      * </ul>\n-     * \n+     *\n      * @param initialArray initial array\n+     * @since 2.2\n      */\n     public ResizableDoubleArray(double[] initialArray) {\n         if (initialArray == null) {\n-            internalArray = new double[initialCapacity];\n+            this.internalArray = new double[initialCapacity];\n         } else {\n-            internalArray = initialArray;\n+            this.internalArray = new double[initialArray.length];\n+            System.arraycopy(initialArray, 0, this.internalArray, 0, initialArray.length);\n             initialCapacity = initialArray.length;\n             numElements = initialArray.length;\n         }", "timestamp": 1293932782, "metainfo": ""}