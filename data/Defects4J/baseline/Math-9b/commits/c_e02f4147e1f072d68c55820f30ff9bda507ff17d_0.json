{"sha": "e02f4147e1f072d68c55820f30ff9bda507ff17d", "log": "added MathInternalError  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java\n+++ b/src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java\n     private static final long serialVersionUID = -6024911025449780478L;\n \n     /**\n+     * Simple constructor.\n      * @param specific Message pattern providing the specific context of\n      * the error.\n      * @param general Message pattern explaining the cause of the error.\n     public MathIllegalStateException(Localizable specific,\n                                      Localizable general,\n                                      Object ... args) {\n-        super(null, specific, general, args);\n+        super(null, null, specific, general, args);\n     }\n+\n     /**\n+     * Simple constructor.\n+     * @param cause root cause\n+     * @param specific Message pattern providing the specific context of\n+     * the error.\n+     * @param general Message pattern explaining the cause of the error.\n+     * @param args Arguments.\n+     */\n+    public MathIllegalStateException(Throwable cause,\n+                                     Localizable specific,\n+                                     Localizable general,\n+                                     Object ... args) {\n+        super(cause, null, specific, general, args);\n+    }\n+\n+    /**\n+     * Simple constructor.\n      * @param specific Message pattern explaining the cause of the error.\n      * @param args Arguments.\n      */\n     public MathIllegalStateException(Localizable specific,\n                                      Object ... args) {\n-        this(specific, LocalizedFormats.ILLEGAL_STATE, args);\n+        super(null, specific, LocalizedFormats.ILLEGAL_STATE, args);\n     }\n+\n+    /**\n+     * Simple constructor.\n+     * @param cause root cause\n+     * @param specific Message pattern explaining the cause of the error.\n+     * @param args Arguments.\n+     */\n+    public MathIllegalStateException(Throwable cause,\n+                                     Localizable specific,\n+                                     Object ... args) {\n+        super(cause, specific, LocalizedFormats.ILLEGAL_STATE, args);\n+    }\n+\n     /**\n      * @param args Arguments.\n      */\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/exception/MathInternalError.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.exception;\n+\n+import org.apache.commons.math.exception.util.LocalizedFormats;\n+\n+/**\n+ * Exception triggered when something that shouldn't happen does happen.\n+ *\n+ * @since 2.2\n+ * @version $Revision$ $Date$\n+ */\n+public class MathInternalError extends MathIllegalStateException {\n+\n+    /** Serializable version Id. */\n+    private static final long serialVersionUID = -6276776513966934846L;\n+\n+    /** URL for reporting problems. */\n+    private static final String REPORT_URL = \"https://issues.apache.org/jira/browse/MATH\";\n+\n+    /**\n+     * Simple constructor.\n+     */\n+    public MathInternalError() {\n+        super(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);\n+    }\n+\n+    /**\n+     * Simple constructor.\n+     * @param cause root cause\n+     */\n+    public MathInternalError(final Throwable cause) {\n+        super(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);\n+    }\n+\n+}\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n \n import java.io.Serializable;\n import java.security.MessageDigest;\n-import java.security.SecureRandom;\n import java.security.NoSuchAlgorithmException;\n import java.security.NoSuchProviderException;\n+import java.security.SecureRandom;\n import java.util.Collection;\n \n import org.apache.commons.math.MathException;\n-import org.apache.commons.math.MathRuntimeException;\n-import org.apache.commons.math.exception.util.LocalizedFormats;\n-import org.apache.commons.math.exception.NotStrictlyPositiveException;\n-import org.apache.commons.math.exception.NumberIsTooLargeException;\n import org.apache.commons.math.distribution.BetaDistributionImpl;\n import org.apache.commons.math.distribution.BinomialDistributionImpl;\n import org.apache.commons.math.distribution.CauchyDistributionImpl;\n import org.apache.commons.math.distribution.TDistributionImpl;\n import org.apache.commons.math.distribution.WeibullDistributionImpl;\n import org.apache.commons.math.distribution.ZipfDistributionImpl;\n+import org.apache.commons.math.exception.MathInternalError;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.exception.NumberIsTooLargeException;\n+import org.apache.commons.math.exception.util.LocalizedFormats;\n+import org.apache.commons.math.util.FastMath;\n import org.apache.commons.math.util.MathUtils;\n-import org.apache.commons.math.util.FastMath;\n \n /**\n  * Implements the {@link RandomData} interface using a {@link RandomGenerator}\n             alg = MessageDigest.getInstance(\"SHA-1\");\n         } catch (NoSuchAlgorithmException ex) {\n             // this should never happen\n-            throw MathRuntimeException.createInternalError(ex);\n+            throw new MathInternalError(ex);\n         }\n         alg.reset();\n \n--- a/src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java\n+++ b/src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java\n import java.util.Iterator;\n import java.util.List;\n \n-import org.apache.commons.math.MathRuntimeException;\n+import org.apache.commons.math.exception.MathInternalError;\n import org.apache.commons.math.random.RandomData;\n import org.apache.commons.math.random.RandomDataImpl;\n import org.apache.commons.math.random.RandomGenerator;\n                 nanPositions = getNanPositions(ranks);\n                 break;\n             default: // this should not happen unless NaNStrategy enum is changed\n-                throw MathRuntimeException.createInternalError(null);\n+                throw new MathInternalError();\n         }\n \n         // Sort the IntDoublePairs\n                 }\n                 break;\n             default: // this should not happen unless TiesStrategy enum is changed\n-                throw MathRuntimeException.createInternalError(null);\n+                throw new MathInternalError();\n         }\n     }\n ", "timestamp": 1295555574, "metainfo": ""}