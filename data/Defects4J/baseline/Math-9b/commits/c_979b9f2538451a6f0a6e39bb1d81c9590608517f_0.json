{"sha": "979b9f2538451a6f0a6e39bb1d81c9590608517f", "log": "Added consistency checks for constructor parameters.   ", "commit": "\n--- a/src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java\n /**\n  * The default implementation of {@link HypergeometricDistribution}.\n  * \n- * @version $Revision: 1.11 $ $Date: 2004/04/08 20:45:59 $\n+ * @version $Revision: 1.12 $ $Date: 2004/05/11 02:07:58 $\n  */\n public class HypergeometricDistributionImpl extends AbstractDiscreteDistribution\n     implements HypergeometricDistribution, Serializable \n      * @param sampleSize the sample size.\n      */\n     public HypergeometricDistributionImpl(int populationSize,\n-        int numberOfSuccesses, int sampleSize)\n-    {\n+        int numberOfSuccesses, int sampleSize) {\n         super();\n+        if (numberOfSuccesses > populationSize) {\n+            throw new IllegalArgumentException(\n+            \"number of successes must be less than or equal to population size\");\n+        }\n+        if (sampleSize > populationSize) {\n+            throw new IllegalArgumentException(\n+            \"sample size must be less than or equal to population size\");\n+        }\n         setPopulationSize(populationSize);\n         setSampleSize(sampleSize);\n         setNumberOfSuccesses(numberOfSuccesses);\n      * @param size the new sample size.\n      */\n     public void setSampleSize(int size) {\n-        if(size < 0){\n+        if (size < 0) {\n             throw new IllegalArgumentException(\n                 \"sample size must be non-negative.\");\n-        }\n+        }    \n         sampleSize = size;\n     }\n }", "timestamp": 1084241278, "metainfo": ""}