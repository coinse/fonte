{"sha": "5a3083c1e91b109637d6d2a15cb5d8411e16ead4", "log": "fixed another set of warnings identified by recent findbugs versions  ", "commit": "\n--- a/src/test/org/apache/commons/math/genetics/RandomKeyTest.java\n+++ b/src/test/org/apache/commons/math/genetics/RandomKeyTest.java\n     public void testRandomPermutation() {\n         // never generate an invalid one\n         for (int i=0; i<10; i++) {\n-            @SuppressWarnings(\"unused\")\n             DummyRandomKey drk = new DummyRandomKey(RandomKey.randomPermutation(20));\n+            assertNotNull(drk);\n         }\n     }\n \n--- a/src/test/org/apache/commons/math/linear/BigMatrixImplTest.java\n+++ b/src/test/org/apache/commons/math/linear/BigMatrixImplTest.java\n         assertEquals(\"nonsingular  R test 2\",-1d,m.getDeterminant().doubleValue(),normTolerance);\n \n         try {\n-            new BigMatrixImpl(testData2).getDeterminant().doubleValue();\n-            fail(\"Expecting InvalidMatrixException\");\n+            double d = new BigMatrixImpl(testData2).getDeterminant().doubleValue();\n+            fail(\"Expecting InvalidMatrixException, got \" + d);\n         } catch (InvalidMatrixException ex) {\n             // ignored\n         }      \n         assertEquals(\"identity trace\",3d,m.getTrace().doubleValue(),entryTolerance);\n         m = new BigMatrixImpl(testData2);\n         try {\n-            m.getTrace().doubleValue();\n-            fail(\"Expecting NonSquareMatrixException\");\n+            double t = m.getTrace().doubleValue();\n+            fail(\"Expecting NonSquareMatrixException, got \" + t);\n         } catch (NonSquareMatrixException ex) {\n             // ignored\n         }      ", "timestamp": 1246481299, "metainfo": ""}