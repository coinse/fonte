{"sha": "5cc5ae1ac70dfa5f2a8a8d44bcbbb6e0dd28eec9", "log": "Replaced deprecated \"RandomDataImpl\" with \"RandomDataGenerator\". Added private constructor.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java\n     /** upper bounds of subintervals in (0,1) \"belonging\" to the bins */\n     private double[] upperBounds = null;\n \n-    /** RandomDataImpl instance to use in repeated calls to getNext() */\n-    private final RandomDataImpl randomData;\n+    /** RandomDataGenerator instance to use in repeated calls to getNext() */\n+    private final RandomDataGenerator randomData;\n \n     /**\n      * Creates a new EmpiricalDistribution with the default bin count.\n      */\n     public EmpiricalDistribution() {\n-        this(DEFAULT_BIN_COUNT, new RandomDataImpl());\n+        this(DEFAULT_BIN_COUNT);\n     }\n \n     /**\n      * @param binCount number of bins\n      */\n     public EmpiricalDistribution(int binCount) {\n-        this(binCount, new RandomDataImpl());\n+        this(binCount, new RandomDataGenerator());\n     }\n \n     /**\n      * @since 3.0\n      */\n     public EmpiricalDistribution(int binCount, RandomGenerator generator) {\n-        this.binCount = binCount;\n-        randomData = new RandomDataImpl(generator);\n-        binStats = new ArrayList<SummaryStatistics>();\n+        this(binCount, new RandomDataGenerator(generator));\n     }\n \n     /**\n      */\n     @Deprecated\n     public EmpiricalDistribution(int binCount, RandomDataImpl randomData) {\n+        this(binCount, randomData.getDelegate());\n+    }\n+\n+    /**\n+     * Creates a new EmpiricalDistribution with default bin count using the\n+     * provided {@link RandomDataImpl} as the source of random data.\n+     *\n+     * @param randomData random data generator (may be null, resulting in default JDK generator)\n+     * @since 3.0\n+     * @deprecated As of 3.1. Please use {@link #EmpiricalDistribution(RandomGenerator)} instead.\n+     */\n+    @Deprecated\n+    public EmpiricalDistribution(RandomDataImpl randomData) {\n+        this(DEFAULT_BIN_COUNT, randomData);\n+    }\n+\n+    /**\n+     * Private constructor to allow lazy initialisation of the RNG contained\n+     * in the {@link #randomData} instance variable.\n+     *\n+     * @param binCount number of bins\n+     * @param randomData Random data generator.\n+     */\n+    private EmpiricalDistribution(int binCount,\n+                                  RandomDataGenerator randomData) {\n+        super(null);\n         this.binCount = binCount;\n         this.randomData = randomData;\n         binStats = new ArrayList<SummaryStatistics>();\n     }\n \n     /**\n-     * Creates a new EmpiricalDistribution with default bin count using the\n-     * provided {@link RandomDataImpl} as the source of random data.\n-     *\n-     * @param randomData random data generator (may be null, resulting in default JDK generator)\n-     * @since 3.0\n-     * @deprecated As of 3.1. Please use {@link #EmpiricalDistribution(RandomGenerator)} instead.\n-     */\n-    @Deprecated\n-    public EmpiricalDistribution(RandomDataImpl randomData) {\n-        this(DEFAULT_BIN_COUNT, randomData);\n-    }\n-\n-     /**\n      * Computes the empirical distribution from the provided\n      * array of numbers.\n      *", "timestamp": 1355523154, "metainfo": ""}