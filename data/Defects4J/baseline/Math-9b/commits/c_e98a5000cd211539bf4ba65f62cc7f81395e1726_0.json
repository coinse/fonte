{"sha": "e98a5000cd211539bf4ba65f62cc7f81395e1726", "log": "Fixed case of unconstrained variables that still occur in the objective function in simplex solver.  Patch provided by Thomas Neidhart  Jira: MATH-713  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n             continue;\n           }\n           Integer basicRow = getBasicRow(colIndex);\n-          if (basicRows.contains(basicRow)) {\n+          if (basicRow != null && basicRow == 0) {\n+              // if the basic row is found to be the objective function row\n+              // set the coefficient to 0 -> this case handles unconstrained \n+              // variables that are still part of the objective function\n+              coefficients[i] = 0;\n+          } else if (basicRows.contains(basicRow)) {\n               // if multiple variables can take a given value\n               // then we choose the first and set the rest equal to 0\n               coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);\n--- a/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n import org.junit.Test;\n \n public class SimplexSolverTest {\n+\n+    @Test\n+    public void testMath713NegativeVariable() {\n+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);\n+        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n+        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));\n+\n+        double epsilon = 1e-6;\n+        SimplexSolver solver = new SimplexSolver();\n+        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n+\n+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);\n+        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);\n+    }\n \n     @Test\n     public void testMath434NegativeVariable() {", "timestamp": 1322511388, "metainfo": ""}