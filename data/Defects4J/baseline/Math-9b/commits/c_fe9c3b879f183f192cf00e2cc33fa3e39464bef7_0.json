{"sha": "fe9c3b879f183f192cf00e2cc33fa3e39464bef7", "log": "Move Serializable from interface to implementations  ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/MultivariateRealFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/MultivariateRealFunction.java\n \n package org.apache.commons.math.analysis;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n \n /** \n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public interface MultivariateRealFunction extends Serializable {\n+public interface MultivariateRealFunction {\n \n     /** \n      * Compute the value for the function at the given point.\n--- a/src/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java\n \n package org.apache.commons.math.analysis;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n \n /** \n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public interface MultivariateVectorialFunction extends Serializable {\n+public interface MultivariateVectorialFunction {\n \n     /** \n      * Compute the value for the function at the given point.\n--- a/src/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java\n  */\n package org.apache.commons.math.analysis;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public interface UnivariateMatrixFunction extends Serializable {\n+public interface UnivariateMatrixFunction {\n     /**\n      * Compute the value for the function.\n      * @param x the point for which the function value should be computed\n--- a/src/java/org/apache/commons/math/analysis/UnivariateRealFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateRealFunction.java\n  */\n package org.apache.commons.math.analysis;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  *  \n  * @version $Revision$ $Date$\n  */\n-public interface UnivariateRealFunction extends Serializable {\n+public interface UnivariateRealFunction {\n     /**\n      * Compute the value for the function.\n      * @param x the point for which the function value should be computed\n--- a/src/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java\n  */\n package org.apache.commons.math.analysis;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public interface UnivariateVectorialFunction extends Serializable {\n+public interface UnivariateVectorialFunction {\n     /**\n      * Compute the value for the function.\n      * @param x the point for which the function value should be computed\n--- a/src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java\n+++ b/src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java\n  */\n \n package org.apache.commons.math.optimization;\n+\n+import java.io.Serializable;\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.MathRuntimeException;\n  * @since 2.0\n  */\n \n-public class LeastSquaresConverter implements MultivariateRealFunction {\n+public class LeastSquaresConverter implements MultivariateRealFunction, Serializable {\n+    // TODO: Add Serializable documentation\n+    // TODO: Check Serializable implementation\n \n     /** Serializable version identifier. */\n     private static final long serialVersionUID = -4369653306135732243L;\n--- a/src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java\n+++ b/src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java\n \n package org.apache.commons.math.optimization.general;\n \n+import java.io.Serializable;\n+\n import org.apache.commons.math.ConvergenceException;\n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n      * extremum along the search direction.\n      * </p>\n      */\n-    private class LineSearchFunction implements UnivariateRealFunction {\n+    private class LineSearchFunction implements UnivariateRealFunction, Serializable {\n+        // TODO: Add Serializable documentation\n+        // TODO: Check Serializable implementation\n \n         /** Serializable version identifier. */\n         private static final long serialVersionUID = 8184683950487801424L;\n--- a/src/test/org/apache/commons/math/analysis/Expm1Function.java\n+++ b/src/test/org/apache/commons/math/analysis/Expm1Function.java\n  */\n package org.apache.commons.math.analysis;\n \n+import java.io.Serializable;\n+\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  *\n  * @version $Revision$ $Date$\n  */\n-public class Expm1Function implements DifferentiableUnivariateRealFunction {\n+public class Expm1Function implements DifferentiableUnivariateRealFunction, Serializable {\n \n     private static final long serialVersionUID = 1410052725961159179L;\n \n--- a/src/test/org/apache/commons/math/analysis/MonitoredFunction.java\n+++ b/src/test/org/apache/commons/math/analysis/MonitoredFunction.java\n  */\n package org.apache.commons.math.analysis;\n \n+import java.io.Serializable;\n+\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  *\n  * @version $Revision$ $Date$ \n  */\n-public class MonitoredFunction implements UnivariateRealFunction {\n+public class MonitoredFunction implements UnivariateRealFunction, Serializable {\n \n     private static final long serialVersionUID = -8403645545888892674L;\n \n--- a/src/test/org/apache/commons/math/analysis/SinFunction.java\n+++ b/src/test/org/apache/commons/math/analysis/SinFunction.java\n  */\n package org.apache.commons.math.analysis;\n \n+import java.io.Serializable;\n+\n import org.apache.commons.math.FunctionEvaluationException;\n \n /**\n  * \n  * @version $Revision$ $Date$\n  */\n-public class SinFunction implements DifferentiableUnivariateRealFunction {\n+public class SinFunction implements DifferentiableUnivariateRealFunction, Serializable {\n \n     private static final long serialVersionUID = 6422911699694536977L;\n \n--- a/src/test/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n+++ b/src/test/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n package org.apache.commons.math.optimization.general;\n \n import java.awt.geom.Point2D;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n \n \n     }\n \n-    private static class LinearProblem implements DifferentiableMultivariateVectorialFunction {\n+    private static class LinearProblem implements DifferentiableMultivariateVectorialFunction, Serializable {\n \n         private static final long serialVersionUID = -8804268799379350190L;\n         final RealMatrix factors;\n \n     }\n \n-    private static class Circle implements DifferentiableMultivariateVectorialFunction {\n+    private static class Circle implements DifferentiableMultivariateVectorialFunction, Serializable {\n \n         private static final long serialVersionUID = -7165774454925027042L;\n         private ArrayList<Point2D.Double> points;\n--- a/src/test/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n+++ b/src/test/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n package org.apache.commons.math.optimization.general;\n \n import java.awt.geom.Point2D;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n     }\n \n-    private static class LinearProblem implements DifferentiableMultivariateVectorialFunction {\n+    private static class LinearProblem implements DifferentiableMultivariateVectorialFunction, Serializable {\n \n         private static final long serialVersionUID = 703247177355019415L;\n         final RealMatrix factors;\n \n     }\n \n-    private static class Circle implements DifferentiableMultivariateVectorialFunction {\n+    private static class Circle implements DifferentiableMultivariateVectorialFunction, Serializable {\n \n         private static final long serialVersionUID = -4711170319243817874L;\n \n \n     }\n \n-    private static class QuadraticProblem implements DifferentiableMultivariateVectorialFunction {\n+    private static class QuadraticProblem implements DifferentiableMultivariateVectorialFunction, Serializable {\n \n         private static final long serialVersionUID = 7072187082052755854L;\n         private List<Double> x;\n--- a/src/test/org/apache/commons/math/optimization/general/MinpackTest.java\n+++ b/src/test/org/apache/commons/math/optimization/general/MinpackTest.java\n \n package org.apache.commons.math.optimization.general;\n \n+import java.io.Serializable;\n import java.util.Arrays;\n \n import junit.framework.Test;\n   }\n \n   private static abstract class MinpackFunction\n-      implements DifferentiableMultivariateVectorialFunction {\n+      implements DifferentiableMultivariateVectorialFunction, Serializable {\n  \n       private static final long serialVersionUID = -6209760235478794233L;\n       protected int      n;\n--- a/src/test/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java\n+++ b/src/test/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java\n package org.apache.commons.math.optimization.general;\n \n import java.awt.geom.Point2D;\n+import java.io.Serializable;\n import java.util.ArrayList;\n \n import junit.framework.Test;\n         assertEquals(48.135167894, center.y, 1.0e-8);\n     }\n \n-    private static class LinearProblem implements DifferentiableMultivariateRealFunction {\n+    private static class LinearProblem implements DifferentiableMultivariateRealFunction, Serializable {\n \n         private static final long serialVersionUID = 703247177355019415L;\n         final RealMatrix factors;\n \n     }\n \n-    private static class Circle implements DifferentiableMultivariateRealFunction {\n+    private static class Circle implements DifferentiableMultivariateRealFunction, Serializable {\n \n         private static final long serialVersionUID = -4711170319243817874L;\n ", "timestamp": 1243079041, "metainfo": ""}