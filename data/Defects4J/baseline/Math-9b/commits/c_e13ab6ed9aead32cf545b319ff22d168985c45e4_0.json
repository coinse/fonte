{"sha": "e13ab6ed9aead32cf545b319ff22d168985c45e4", "log": "Added some parameter javadoc comments.   ", "commit": "\n--- a/src/java/org/apache/commons/math/special/Beta.java\n+++ b/src/java/org/apache/commons/math/special/Beta.java\n  * This is a utility class that provides computation methods related to the\n  * Beta family of functions.\n  * \n- * @version $Revision: 1.17 $ $Date: 2004/02/18 03:24:20 $\n+ * @version $Revision: 1.18 $ $Date: 2004/04/23 19:30:47 $\n  */\n public class Beta implements Serializable {\n     /** Maximum allowed numerical error. */\n     }\n \n     /**\n-     * Returns the regularized beta function I(x, a, b).\n-     * \n-     * @param x ???\n-     * @param a ???\n-     * @param b ???\n+     * Returns the\n+     * <a href=\"http://mathworld.wolfram.com/RegularizedBetaFunction.html\">\n+     * regularized beta function</a> I(x, a, b).\n+     * \n+     * @param x the value.\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @return the regularized beta function I(x, a, b)\n      * @throws MathException if the algorithm fails to converge.\n      */\n     }\n \n     /**\n-     * Returns the regularized beta function I(x, a, b).\n-     * \n-     * @param x ???\n-     * @param a ???\n-     * @param b ???\n+     * Returns the\n+     * <a href=\"http://mathworld.wolfram.com/RegularizedBetaFunction.html\">\n+     * regularized beta function</a> I(x, a, b).\n+     * \n+     * @param x the value.\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @param epsilon When the absolute value of the nth item in the\n      *                series is less than epsilon the approximation ceases\n      *                to calculate further elements in the series.\n     /**\n      * Returns the regularized beta function I(x, a, b).\n      * \n-     * @param x ???\n-     * @param a ???\n-     * @param b ???\n+     * @param x the value.\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @param maxIterations Maximum number of \"iterations\" to complete. \n      * @return the regularized beta function I(x, a, b)\n      * @throws MathException if the algorithm fails to converge.\n      * Regularized Beta Function</a>.</li>\n      * </ul>\n      * \n-     * @param x ???\n-     * @param a ???\n-     * @param b ???\n+     * @param x the value.\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @param epsilon When the absolute value of the nth item in the\n      *                series is less than epsilon the approximation ceases\n      *                to calculate further elements in the series.\n     /**\n      * Returns the natural logarithm of the beta function B(a, b).\n      * \n-     * @param a ???\n-     * @param b ???\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @return log(B(a, b))\n      */\n     public static double logBeta(double a, double b) {\n      * Beta Function</a>, equation (1).</li>\n      * </ul>\n      * \n-     * @param a ???\n-     * @param b ???\n+     * @param a the a parameter.\n+     * @param b the b parameter.\n      * @param epsilon When the absolute value of the nth item in the\n      *                series is less than epsilon the approximation ceases\n      *                to calculate further elements in the series.\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n  * This is a utility class that provides computation methods related to the\n  * Gamma family of functions.\n  * \n- * @version $Revision: 1.17 $ $Date: 2004/02/21 21:35:15 $\n+ * @version $Revision: 1.18 $ $Date: 2004/04/23 19:30:47 $\n  */\n public class Gamma implements Serializable{\n     /** Maximum allowed numerical error. */\n     /**\n      * Returns the regularized gamma function P(a, x).\n      * \n-     * @param a ???\n-     * @param x ???\n+     * @param a the a parameter.\n+     * @param x the value.\n      * @return the regularized gamma function P(a, x)\n      * @throws MathException if the algorithm fails to converge.\n      */\n      * </li>\n      * </ul>\n      * \n-     * @param a ???\n-     * @param x ???\n+     * @param a the a parameter.\n+     * @param x the value.\n      * @param epsilon When the absolute value of the nth item in the\n      *                series is less than epsilon the approximation ceases\n      *                to calculate further elements in the series.\n      * </a></li>\n      * </ul>\n      * \n-     * @param x ???\n+     * @param x the value.\n      * @return log(&#915;(x))\n      */\n     public static double logGamma(double x) {\n         return ret;\n     }\n }\n-", "timestamp": 1082748647, "metainfo": ""}