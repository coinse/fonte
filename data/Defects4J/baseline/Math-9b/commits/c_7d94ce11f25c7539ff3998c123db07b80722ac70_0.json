{"sha": "7d94ce11f25c7539ff3998c123db07b80722ac70", "log": "remove pre Java 1.4 emulation stuff as we now need at least Java 5  ", "commit": "\n--- a/src/java/org/apache/commons/math/MathException.java\n+++ b/src/java/org/apache/commons/math/MathException.java\n     private final Object[] arguments;\n \n     /**\n-     * Root cause of the exception\n-     */\n-    private final Throwable rootCause;\n-    \n-    /**\n      * Translate a string to a given locale.\n      * @param s string to translate\n      * @param locale locale into which to translate the string\n      * @return a message string\n      */\n     private static String buildMessage(String pattern, Object[] arguments, Locale locale) {\n-        // do it the hard way, for Java 1.3. compatibility\n-        MessageFormat mf = new MessageFormat(translate(pattern, locale));\n-        mf.setLocale(locale);\n-        return mf.format(arguments);        \n+        return new MessageFormat(translate(pattern, locale), locale).format(arguments);        \n     }\n \n     /**\n         super();\n         this.pattern   = null;\n         this.arguments = new Object[0];\n-        this.rootCause = null;\n     }\n     \n     /**\n       super(buildMessage(pattern, arguments, Locale.US));\n       this.pattern   = pattern;\n       this.arguments = (Object[]) arguments.clone();\n-      this.rootCause = null;\n     }\n \n     /**\n      *                   to be thrown.\n      */\n     public MathException(Throwable rootCause) {\n-        super((rootCause == null ? null : rootCause.getMessage()));\n+        super(rootCause);\n         this.pattern   = getMessage();\n         this.arguments = new Object[0];\n-        this.rootCause = rootCause;\n     }\n     \n     /**\n      * @since 1.2\n      */\n     public MathException(String pattern, Object[] arguments, Throwable rootCause) {\n-      super(buildMessage(pattern, arguments, Locale.US));\n+      super(buildMessage(pattern, arguments, Locale.US), rootCause);\n       this.pattern   = pattern;\n       this.arguments = (Object[]) arguments.clone();\n-      this.rootCause = rootCause;\n     }\n \n     /** Gets the pattern used to build the message of this throwable.\n         return (pattern == null) ? null : buildMessage(pattern, arguments, locale);\n     }\n \n-    /**\n-     * Gets the cause of this throwable.\n-     * \n-     * @return  the cause of this throwable, or <code>null</code>\n-     */\n-    public Throwable getCause() {\n-        return rootCause;\n-    }\n-    \n+    /** {@inheritDoc} */\n+    public String getLocalizedMessage() {\n+        return getMessage(Locale.getDefault());\n+    }\n+\n     /**\n      * Prints the stack trace of this exception to the standard error stream.\n      */\n         }\n     }\n     \n-    /**\n-     * Prints the stack trace of this exception to the specified writer.\n-     *\n-     * @param out  the <code>PrintWriter</code> to use for output\n-     */\n-    public void printStackTrace(PrintWriter out) {\n-        synchronized (out) {\n-            super.printStackTrace(out);\n-            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {\n-                out.print(\"Caused by: \");\n-                rootCause.printStackTrace(out);\n-            }\n-        }\n-    }\n-\n }", "timestamp": 1225747715, "metainfo": ""}