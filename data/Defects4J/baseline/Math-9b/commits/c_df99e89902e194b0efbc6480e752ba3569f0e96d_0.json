{"sha": "df99e89902e194b0efbc6480e752ba3569f0e96d", "log": "Added algorithm convergence throws clauses to OneWayAnova classes as replacement of the generic MathException. JIRA: MATH-488  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java\n+++ b/src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java\n  */\n package org.apache.commons.math.stat.inference;\n \n+import org.apache.commons.math.exception.ConvergenceException;\n import org.apache.commons.math.exception.DimensionMismatchException;\n+import org.apache.commons.math.exception.MaxCountExceededException;\n import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.exception.OutOfRangeException;\n \n      * @throws DimensionMismatchException if the length of the <code>categoryData</code>\n      * array is less than 2 or a contained <code>double[]</code> array does not have\n      * at least two values\n+     * @throws ConvergenceException if the p-value can not be computed due to a convergence error\n+     * @throws MaxCountExceededException if the maximum number of iterations is exceeded\n      */\n     double anovaPValue(Collection<double[]> categoryData)\n-        throws NullArgumentException, DimensionMismatchException;\n+        throws NullArgumentException, DimensionMismatchException,\n+        ConvergenceException, MaxCountExceededException;\n \n     /**\n      * Performs an ANOVA test, evaluating the null hypothesis that there\n      * array is less than 2 or a contained <code>double[]</code> array does not have\n      * at least two values\n      * @throws OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]\n+     * @throws ConvergenceException if the p-value can not be computed due to a convergence error\n+     * @throws MaxCountExceededException if the maximum number of iterations is exceeded\n      */\n     boolean anovaTest(Collection<double[]> categoryData, double alpha)\n-        throws NullArgumentException, DimensionMismatchException, OutOfRangeException;\n+        throws NullArgumentException, DimensionMismatchException, OutOfRangeException,\n+        ConvergenceException, MaxCountExceededException;\n \n }\n--- a/src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java\n+++ b/src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java\n import java.util.Collection;\n \n import org.apache.commons.math.distribution.FDistribution;\n+import org.apache.commons.math.exception.ConvergenceException;\n import org.apache.commons.math.exception.DimensionMismatchException;\n-import org.apache.commons.math.exception.MathIllegalArgumentException;\n+import org.apache.commons.math.exception.MaxCountExceededException;\n import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.exception.OutOfRangeException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n      * here</a></p>\n      */\n     public double anovaFValue(Collection<double[]> categoryData)\n-        throws MathIllegalArgumentException {\n+        throws NullArgumentException, DimensionMismatchException {\n+\n         AnovaStats a = anovaStats(categoryData);\n         return a.F;\n+\n     }\n \n     /**\n      * is the commons-math implementation of the F distribution.</p>\n      */\n     public double anovaPValue(Collection<double[]> categoryData)\n-        throws NullArgumentException, DimensionMismatchException {\n+        throws NullArgumentException, DimensionMismatchException,\n+        ConvergenceException, MaxCountExceededException {\n+\n         AnovaStats a = anovaStats(categoryData);\n         FDistribution fdist = new FDistribution(a.dfbg, a.dfwg);\n         return 1.0 - fdist.cumulativeProbability(a.F);\n+\n     }\n \n     /**\n      * <p>True is returned iff the estimated p-value is less than alpha.</p>\n      */\n     public boolean anovaTest(Collection<double[]> categoryData, double alpha)\n-        throws NullArgumentException, DimensionMismatchException, OutOfRangeException {\n+        throws NullArgumentException, DimensionMismatchException, OutOfRangeException,\n+        ConvergenceException, MaxCountExceededException {\n+\n         if ((alpha <= 0) || (alpha > 0.5)) {\n             throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,\n                                           alpha, 0, 0.5);\n         }\n         return anovaPValue(categoryData) < alpha;\n+\n     }\n \n ", "timestamp": 1328649753, "metainfo": ""}