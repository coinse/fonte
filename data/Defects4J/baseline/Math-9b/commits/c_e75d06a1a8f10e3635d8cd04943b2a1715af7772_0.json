{"sha": "e75d06a1a8f10e3635d8cd04943b2a1715af7772", "log": "Raw types  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java\n         underlying.setMaxEvaluations(300);\n         JDKRandomGenerator g = new JDKRandomGenerator();\n         g.setSeed(44428400075l);\n-        MultiStartUnivariateRealOptimizer optimizer =\n-            new MultiStartUnivariateRealOptimizer(underlying, 10, g);\n+        MultiStartUnivariateRealOptimizer<UnivariateRealFunction> optimizer =\n+            new MultiStartUnivariateRealOptimizer<UnivariateRealFunction>(underlying, 10, g);\n         optimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);\n         UnivariateRealPointValuePair[] optima = optimizer.getOptima();\n         for (int i = 1; i < optima.length; ++i) {\n         underlying.setMaxEvaluations(300);\n         JDKRandomGenerator g = new JDKRandomGenerator();\n         g.setSeed(4312000053L);\n-        MultiStartUnivariateRealOptimizer optimizer =\n-            new MultiStartUnivariateRealOptimizer(underlying, 5, g);\n+        MultiStartUnivariateRealOptimizer<UnivariateRealFunction> optimizer =\n+            new MultiStartUnivariateRealOptimizer<UnivariateRealFunction>(underlying, 5, g);\n \n         UnivariateRealPointValuePair optimum\n             = optimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);", "timestamp": 1285951495, "metainfo": ""}