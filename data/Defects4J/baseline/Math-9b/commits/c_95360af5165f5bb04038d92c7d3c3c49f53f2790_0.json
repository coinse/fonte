{"sha": "95360af5165f5bb04038d92c7d3c3c49f53f2790", "log": "Correction of Javadoc errors that end up propigating into UnivarImpl and other implementations.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/Univariate.java\n+++ b/src/java/org/apache/commons/math/stat/Univariate.java\n  * @author Phil Steitz\n  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n  * @author Mark Diggory\n- * @version $Revision: 1.1 $ $Date: 2003/05/29 20:35:45 $\n+ * @version $Revision: 1.2 $ $Date: 2003/06/16 20:58:53 $\n  * \n */\n public interface Univariate {\n \n     /** \n      * Returns the <a href=http://www.xycoon.com/arithmetic_mean.htm>\n-     * arithmetic mean </a> of the available values <p>\n-     *\n-     * Will return Double.NaN if no values have been added when\n-     * this method is invoked.\n-     *\n-     * @return mean value\n+     * arithmetic mean </a> of the available values \n+     * @return mean value, Double.NaN if no values have been added.\n      */\n     abstract double getMean();\n \n     /** \n      * Returns the <a href=http://www.xycoon.com/geometric_mean.htm>\n-     * geometric mean </a> of the available values <p>\n-     *\n-     * Will return Double.NaN if no values have been added or the product\n+     * geometric mean </a> of the available values\n+     * @return The mean value, Double.NaN if no values have been added, or the product\n      * of the available values is less than or equal to 0.\n-     *\n-     * @return mean value\n      */\n     abstract double getGeometricMean();\n \n     /** \n-     * Returns the product of the available values <p>\n-     * Will return Double.NaN if no values have been added.\n-     *\n-     * @return product of all values\n+     * Returns the product of the available values\n+     * @return product of all values or Double.NaN if no values have been added.\n      */\n     abstract double getProduct();\n \n     /** \n-     * Returns the variance of the available values. <p>\n-     * Double.NaN is returned for an empty set of values and 0.0 is \n-     * returned for a single value set. \n-     *\n-     * @return The variance of a set of values.  \n+     * Returns the variance of the available values.\n+     * @return The variance of a set of values, an empty set of values and 0.0 is \n+     * returned for a single value set, or Double.NaN if no values have been added.  \n      */\n     abstract double getVariance();\n \n     /** \n-     * Returns the variance of the available values. <p>\n-     * Double.NaN is returned for an empty set of values and 0.0 is \n-     * returned for a single value set. \n-     *\n-     * @return standard deviation value\n+     * Returns the variance of the available values.\n+     * @return standard deviation value, Double.NaN is returned for an empty set \n+     * of values and 0.0 is returned for a single value set. \n      */\n     abstract double getStandardDeviation();\n \n \t/**\n      * Returns the skewness of a given distribution.  Skewness is a \n-     * measure of the assymetry of a given distribution. <p>\n-\t * Double.NaN is returned for an empty set of values and 0.0 is \n-\t * returned for a value set &lt;=2. \n-\t * \n-\t * @return Value of property skewness.\n+     * measure of the assymetry of a given distribution.\n+\t * @return skewness, Double.NaN is returned for an empty set of values \n+     * and 0.0 is returned for a value set &lt;=2. \n \t */\n \tabstract double getSkewness();\n \t\n \t/**\n      * Returns the Kurtosis of the available values. Kurtosis is a \n-     * measure of the \"peakedness\" of a distribution <p>\n-     * Double.NaN is returned for an empty set of values and 0.0 is \n+     * measure of the \"peakedness\" of a distribution\n+     * @return kurtosis, Double.NaN is returned in no values have been added, and 0.0 is \n      * returned for a value set &lt;=3. \n-     * \n-     * @return Value of property kurtosis.\n \t */\n \tabstract double getKurtosis();\n \t\t\n     /** \n-     * Returns the maximum of the available values <p>\n-     * Double.NaN is returned in no values have been added\n-     *\n-     * @return Value of property max.\n+     * Returns the maximum of the available values\n+     * @return Value of property max, Double.NaN is returned in no values have been added.\n      */\n     abstract double getMax();\n \n      /** \n-     * Returns the minimum of the available values <p>\n-     * Double.NaN is returned in no values have been added\n-     *\n-     * @return Value of property min.\n+     * Returns the minimum of the available values\n+     * @return Value of property min, Double.NaN is returned in no values have been added.\n      */\n     abstract double getMin();\n \n     abstract int getN();\n \n     /**\n-     * Returns the sum of the available values <p>\n-     * Returns 0 if no values have been added.\n-     *\n-     * @return the sum of the available values\n+     * Returns the sum of the values that have been added to Univariate.\n+     * @return the sum of the available values or Double.NaN if no values have been added\n      */\n     abstract double getSum();\n \n     /**\n      * Returns the sum of the squares of the available values.\n      * Returns 0 if no values have been added.\n-     *\n      * @return the sum of the squares of the available values.\n      */\n     abstract double getSumsq();", "timestamp": 1055797133, "metainfo": ""}