{"sha": "ff0352df4a4f8c2a1480f3d6f877beb909bcc025", "log": "Javadoc fixes  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/RealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/RealVector.java\n      * Specialized implementations may choose to not iterate over all dimensions, either because those values are\n      * unset, or are equal to defaultValue(), or are small enough to be ignored for the purposes of iteration.\n      * No guarantees are made about order of iteration.\n-     * In dense implementations, this method will often delegate to {@see #iterator() }\n+     * In dense implementations, this method will often delegate to {@link #iterator()}\n      * @return a sparse iterator\n      */\n     Iterator<Entry> sparseIterator();\n--- a/src/main/java/org/apache/commons/math/ode/events/EventHandler.java\n+++ b/src/main/java/org/apache/commons/math/ode/events/EventHandler.java\n \n    * <p>The scheduling between this method and the {@link\n    * org.apache.commons.math.ode.sampling.StepHandler StepHandler} method {@link\n-   * org.apache.commons.math.ode.sampling.StepNormalizerStepHandler#handleStep(\n+   * org.apache.commons.math.ode.sampling.StepHandler#handleStep(\n    * org.apache.commons.math.ode.sampling.StepInterpolator, boolean)\n    * handleStep(interpolator, isLast)} is to call this method first and\n    * <code>handleStep</code> afterwards. This scheduling allows the integrator to\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n      * <code>0L</code>.</li>\n      * </ul>\n      * \n-     * @param u any number\n-     * @param v any number\n+     * @param p any number\n+     * @param q any number\n      * @return the greatest common divisor, never negative\n      * @throws ArithmeticException if the result cannot be represented as a nonnegative long\n      * value", "timestamp": 1264185628, "metainfo": ""}