{"sha": "2569f0687e8ef28d2c4f39191f23079bfeb46f85", "log": "Added throw declarations for package dfp.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java\n+++ b/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java\n import org.apache.commons.math3.analysis.solvers.AllowedSolution;\n import org.apache.commons.math3.exception.MathInternalError;\n import org.apache.commons.math3.exception.NoBracketingException;\n+import org.apache.commons.math3.exception.NullArgumentException;\n import org.apache.commons.math3.exception.NumberIsTooSmallException;\n import org.apache.commons.math3.util.Incrementor;\n import org.apache.commons.math3.util.MathUtils;\n      * @param allowedSolution The kind of solutions that the root-finding algorithm may\n      * accept as solutions.\n      * @return a value where the function is zero.\n-     * @throws org.apache.commons.math3.exception.MathIllegalArgumentException\n-     * if the arguments do not satisfy the requirements specified by the solver.\n-     * @throws org.apache.commons.math3.exception.TooManyEvaluationsException if\n-     * the allowed number of evaluations is exceeded.\n+     * @exception NullArgumentException if f is null.\n+     * @exception NoBracketingException if root cannot be bracketed\n      */\n     public Dfp solve(final int maxEval, final UnivariateDfpFunction f,\n-                     final Dfp min, final Dfp max, final AllowedSolution allowedSolution) {\n+                     final Dfp min, final Dfp max, final AllowedSolution allowedSolution)\n+        throws NullArgumentException, NoBracketingException {\n         return solve(maxEval, f, min, max, min.add(max).divide(2), allowedSolution);\n     }\n \n      * @param allowedSolution The kind of solutions that the root-finding algorithm may\n      * accept as solutions.\n      * @return a value where the function is zero.\n-     * @throws org.apache.commons.math3.exception.MathIllegalArgumentException\n-     * if the arguments do not satisfy the requirements specified by the solver.\n-     * @throws org.apache.commons.math3.exception.TooManyEvaluationsException if\n-     * the allowed number of evaluations is exceeded.\n+     * @exception NullArgumentException if f is null.\n+     * @exception NoBracketingException if root cannot be bracketed\n      */\n     public Dfp solve(final int maxEval, final UnivariateDfpFunction f,\n                      final Dfp min, final Dfp max, final Dfp startValue,\n-                     final AllowedSolution allowedSolution) {\n+                     final AllowedSolution allowedSolution)\n+        throws NullArgumentException, NoBracketingException {\n \n         // Checks.\n         MathUtils.checkNotNull(f);", "timestamp": 1346869828, "metainfo": ""}