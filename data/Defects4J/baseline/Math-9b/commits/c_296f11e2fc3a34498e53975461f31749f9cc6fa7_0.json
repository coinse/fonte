{"sha": "296f11e2fc3a34498e53975461f31749f9cc6fa7", "log": "Space police.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java\n      * absolute accuracy of the solver and {@code v} is a value returned by\n      * one of the {@code solve} methods, then a root of the function should\n      * exist somewhere in the interval ({@code v} - &epsilon;, {@code v} + &epsilon;).\n-     * \n+     *\n      * @return the absolute accuracy.\n      */\n     double getAbsoluteAccuracy();\n-    \n+\n     /**\n      * Get the relative accuracy of the solver.  The contract for relative\n-     * accuracy is the same as {@link #getAbsoluteAccuracy()}, but using \n+     * accuracy is the same as {@link #getAbsoluteAccuracy()}, but using\n      * relative, rather than absolute error.  If &rho; is the relative accuracy\n      * configured for a solver and {@code v} is a value returned, then a root\n      * of the function should exist somewhere in the interval\n      * ({@code v} - &rho; {@code v}, {@code v} + &rho; {@code v}).\n-     * \n+     *\n      * @return the relative accuracy.\n      */\n     double getRelativeAccuracy();\n-    \n+\n     /**\n      * Get the function value accuracy of the solver.  If {@code v} is\n      * a value returned by the solver for a function {@code f},\n      * then by contract, {@code |f(v)|} should be less than or equal to\n      * the function value accuracy configured for the solver.\n-     * \n+     *\n      * @return the function value accuracy.\n      */\n     double getFunctionValueAccuracy();\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n     /**\n      * Returns the SecureRandom used to generate secure random data.\n      * <p>\n-     * Creates and initializes if null.  Uses \n+     * Creates and initializes if null.  Uses\n      * {@code System.currentTimeMillis() + System.identityHashCode(this)} as the default seed.\n      * </p>\n      *", "timestamp": 1320532844, "metainfo": ""}