{"sha": "4850e8849830763b0bc886d39c69a603cd1c36cd", "log": "Javadoc fixes.  ", "commit": "\n--- a/src/java/org/apache/commons/math/util/CompositeFormat.java\n+++ b/src/java/org/apache/commons/math/util/CompositeFormat.java\n \n     /**\n      * Create a default number format.  The default number format is based on\n-     * {@link NumberFormat#getInstance()} with the only customizing is the\n-     * maximum number of fraction digits, which is set to 2.  \n+     * {@link NumberFormat#getInstance()} with the only customizing that the\n+     * maximum number of fraction digits is set to 2.  \n      * @return the default number format.\n      */\n     protected static NumberFormat getDefaultNumberFormat() {\n     /**\n      * Create a default number format.  The default number format is based on\n      * {@link NumberFormat#getInstance(java.util.Locale)} with the only\n-     * customizing is the maximum number of fraction digits, which is set to 2.  \n+     * customizing that the maximum number of fraction digits is set to 2.  \n      * @param locale the specific locale used by the format.\n      * @return the default number format specific to the given locale.\n      */\n     }\n \n     /**\n-     * Parses <code>source</code> for a special double values.  These values\n+     * Parses <code>source</code> for special double values.  These values\n      * include Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY.\n      *\n      * @param source the string to parse", "timestamp": 1217185893, "metainfo": ""}