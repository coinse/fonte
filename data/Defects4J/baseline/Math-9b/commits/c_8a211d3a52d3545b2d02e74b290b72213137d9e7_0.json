{"sha": "8a211d3a52d3545b2d02e74b290b72213137d9e7", "log": "Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java\n+++ b/src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java\n      * @throws DimensionMismatchException if {@code m}, {@code b} or {@code x0}\n      * have dimensions inconsistent with {@code a}.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public RealVector solve(final RealLinearOperator a,\n      * @throws DimensionMismatchException if {@code m} or {@code b} have\n      * dimensions inconsistent with {@code a}.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public RealVector solve(RealLinearOperator a,\n      * @throws DimensionMismatchException if {@code m}, {@code b} or {@code x0}\n      * have dimensions inconsistent with {@code a}.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public abstract RealVector solveInPlace(RealLinearOperator a,\n--- a/src/main/java/org/apache/commons/math/linear/SymmLQ.java\n+++ b/src/main/java/org/apache/commons/math/linear/SymmLQ.java\n      * definite.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override\n      * definite.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public RealVector solve(final RealLinearOperator a,\n      * definite.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override\n      * {@code true}, and {@code a} is not self-adjoint.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override\n      * {@code true}, and {@code a} is not self-adjoint.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public RealVector solve(final RealLinearOperator a, final RealVector b,\n      * {@code true}, and {@code a} is not self-adjoint.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override\n      * definite.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override\n      * definite.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     public RealVector solveInPlace(final RealLinearOperator a,\n      * {@code true}, and {@code a} or {@code m} is not self-adjoint.\n      * @throws IllConditionedOperatorException if {@code a} is ill-conditioned.\n      * @throws MaxCountExceededException at exhaustion of the iteration count,\n-     * unless a custom {@link MaxCountExceededCallback callback} has been set at\n+     * unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at\n      * construction.\n      */\n     @Override", "timestamp": 1320400922, "metainfo": ""}