{"sha": "907d55ee00e256bf26376c0ac3ae918f30130510", "log": "Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.  JIRA: MATH-609 Reported and patched by Dave Brosius  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n          * @return {@code true} if z is a real zero.\n          */\n         public boolean isRoot(double min, double max, Complex z) {\n-            double tolerance = FastMath.max(getRelativeAccuracy() * z.abs(), getAbsoluteAccuracy());\n-            return (isSequence(min, z.getReal(), max)) &&\n-                (FastMath.abs(z.getImaginary()) <= tolerance ||\n-                 z.abs() <= getFunctionValueAccuracy());\n+            if (isSequence(min, z.getReal(), max)) {\n+                double tolerance = FastMath.max(getRelativeAccuracy() * z.abs(), getAbsoluteAccuracy());\n+                return ((FastMath.abs(z.getImaginary()) <= tolerance) ||\n+                     (z.abs() <= getFunctionValueAccuracy()));\n+            }\n+            return false;\n         }\n \n         /**\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n             throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, mean);\n         }\n \n-        final RandomGenerator generator = getRan();\n-\n         final double pivot = 40.0d;\n         if (mean < pivot) {\n+            final RandomGenerator generator = getRan();\n             double p = FastMath.exp(-mean);\n             long n = 0;\n             double r = 1.0d;\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n      * @return log(1 + x)\n      */\n     public static double log1p(final double x) {\n-        double xpa = 1.0 + x;\n-        double xpb = -(xpa - 1.0 - x);\n \n         if (x == -1) {\n             return x/0.0;   // -Infinity\n         }\n \n         if (x>1e-6 || x<-1e-6) {\n+            double xpa = 1.0 + x;\n+            double xpb = -(xpa - 1.0 - x);\n+\n             double hiPrec[] = new double[2];\n \n             final double lores = log(xpa, hiPrec);", "timestamp": 1310346895, "metainfo": ""}