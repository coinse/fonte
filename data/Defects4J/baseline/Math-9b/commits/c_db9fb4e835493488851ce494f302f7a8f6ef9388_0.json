{"sha": "db9fb4e835493488851ce494f302f7a8f6ef9388", "log": "Clarify parse test messages  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java\n \n     public void testForgottenPrefix() {\n         ParsePosition pos = new ParsePosition(0);\n-        assertNull(new RealVectorFormat().parse(\"1; 1; 1}\", pos));\n+        final String source = \"1; 1; 1}\";\n+        assertNull(\"Should not parse <\"+source+\">\",new RealVectorFormat().parse(source, pos));\n         assertEquals(0, pos.getErrorIndex());\n     }\n \n     public void testForgottenSeparator() {\n         ParsePosition pos = new ParsePosition(0);\n-        assertNull(new RealVectorFormat().parse(\"{1; 1 1}\", pos));\n+        final String source = \"{1; 1 1}\";\n+        assertNull(\"Should not parse <\"+source+\">\",new RealVectorFormat().parse(source, pos));\n         assertEquals(6, pos.getErrorIndex());\n     }\n \n     public void testForgottenSuffix() {\n         ParsePosition pos = new ParsePosition(0);\n-        assertNull(new RealVectorFormat().parse(\"{1; 1; 1 \", pos));\n+        final String source = \"{1; 1; 1 \";\n+        assertNull(\"Should not parse <\"+source+\">\",new RealVectorFormat().parse(source, pos));\n         assertEquals(8, pos.getErrorIndex());\n     }\n ", "timestamp": 1252272378, "metainfo": ""}