{"sha": "0dfcb4f19d76ea36e0eaaca8d3ae90956e76f7ef", "log": "Fis some problems with equals for OpenInttoDoubleHashmap.   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/SparseRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealVector.java\n      */\n     @Override\n     public boolean equals(Object obj) {\n-        System.out.println(\"Checking equality of \"+obj);\n         if (this == obj)\n             return true;\n         if (obj == null)\n             return false;\n         if (!(obj instanceof SparseRealVector))\n             return false;\n-        System.out.println(\"is a sparse vector\");\n         SparseRealVector other = (SparseRealVector) obj;\n         if (entries == null) {\n             if (other.entries != null)\n                 return false;\n         } else if (!entries.equals(other.entries)){\n-            System.out.println(\"no entries match\");\n             return false;\n         }if (Double.doubleToLongBits(epsilon) != Double\n                 .doubleToLongBits(other.epsilon))\n--- a/src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\n+++ b/src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\n         final int prime = 31;\n         int result = 1;\n         result = prime * result + Arrays.hashCode(keys);\n-        result = prime * result + mask;\n         long temp;\n         temp = Double.doubleToLongBits(missingEntries);\n         result = prime * result + (int) (temp ^ (temp >>> 32));\n         OpenIntToDoubleHashMap other = (OpenIntToDoubleHashMap) obj;\n         if (!Arrays.equals(keys, other.keys))\n             return false;\n-        if (mask != other.mask)\n-            return false;\n         if (Double.doubleToLongBits(missingEntries) != Double\n                 .doubleToLongBits(other.missingEntries))\n             return false;\n         if (size != other.size)\n             return false;\n         if (!Arrays.equals(states, other.states)){\n-            System.out.println(\"states not match:\" );\n-            for(byte e : states){\n-                System.out.print(e+\" \");\n-            }\n-            System.out.println();\n-            for(byte e : other.states){\n-                System.out.print(e+\" \");\n-            }\n             return false;\n         }\n         if (!Arrays.equals(values, other.values)){\n-            System.out.println(\"values don't match\");\n             return false;\n         }\n         return true;", "timestamp": 1234183280, "metainfo": ""}