{"sha": "39f47ff0e9880ad47f7f5f7b5933e04b1d17c2cb", "log": "MATH-795: in RealVectorAbstractTest, extracted testIsInfinite() from testPredicates().   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n     }\n \n     @Test\n+    public void testIsInfinite() {\n+        final RealVector v = create(new double[] { 0, 1, 2 });\n+\n+        Assert.assertFalse(v.isInfinite());\n+        v.setEntry(0, Double.POSITIVE_INFINITY);\n+        Assert.assertTrue(v.isInfinite());\n+        v.setEntry(1, Double.NaN);\n+        Assert.assertFalse(v.isInfinite());\n+    }\n+\n+    @Test\n     public void testDataInOut() {\n         final RealVector v1 = create(vec1);\n         final RealVector v2 = create(vec2);\n     @Test\n     public void testPredicates() {\n         final RealVector v = create(new double[] { 0, 1, 2 });\n-\n-        Assert.assertFalse(v.isNaN());\n-        v.setEntry(1, Double.NaN);\n-        Assert.assertTrue(v.isNaN());\n-\n-        Assert.assertFalse(v.isInfinite());\n-        v.setEntry(0, Double.POSITIVE_INFINITY);\n-        Assert.assertFalse(v.isInfinite());\n-        v.setEntry(1, 1);\n-        Assert.assertTrue(v.isInfinite());\n \n         v.setEntry(0, 0);\n         Assert.assertEquals(v, create(new double[] { 0, 1, 2 }));\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n     }\n \n     @Test\n+    @Ignore(\"Abstract class RealVector does not implement isNaN()\")\n+    @Override\n+    public void testIsInfinite() {\n+        // Do nothing\n+    }\n+\n+    @Test\n     @Ignore\n     @Override\n     public void testBasicFunctions() {", "timestamp": 1339186690, "metainfo": ""}