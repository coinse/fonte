{"sha": "205f072d46ee6de572597ed68007543233ac96d9", "log": "replaced calls to deprecated SummaryStatistics.newInstance() method  ", "commit": "\n--- a/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n     \n     private void tstGen(double tolerance)throws Exception {\n         empiricalDistribution.load(url);   \n-        SummaryStatistics stats = SummaryStatistics.newInstance();\n+        SummaryStatistics stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             stats.addValue(empiricalDistribution.getNextValue());\n         }\n \n     private void tstDoubleGen(double tolerance)throws Exception {\n         empiricalDistribution2.load(dataArray);   \n-        SummaryStatistics stats = SummaryStatistics.newInstance();\n+        SummaryStatistics stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             stats.addValue(empiricalDistribution2.getNextValue());\n         }\n--- a/src/test/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/org/apache/commons/math/random/RandomDataTest.java\n         } catch (IllegalArgumentException ex) {\n             ;\n         }\n-        SummaryStatistics u = SummaryStatistics.newInstance();\n+        SummaryStatistics u = new SummaryStatistics();\n         for (int i = 0; i<largeSampleSize; i++) {\n             u.addValue(randomData.nextGaussian(0,1));\n         }\n--- a/src/test/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/org/apache/commons/math/random/ValueServerTest.java\n         vs.computeDistribution();\n         assertTrue(\"empirical distribution property\", \n             vs.getEmpiricalDistribution() != null);\n-        SummaryStatistics stats = SummaryStatistics.newInstance();\n+        SummaryStatistics stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             next = vs.getNext();\n             stats.addValue(next);\n             tolerance);\n         \n         vs.computeDistribution(500);\n-        stats = SummaryStatistics.newInstance();\n+        stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             next = vs.getNext();\n             stats.addValue(next);", "timestamp": 1199972809, "metainfo": ""}