{"sha": "6f311353290e589854729616477f3088ede10efa", "log": "Added interfaces for differentiable multidimensional functions.  ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math3.analysis.differentiation;\n+\n+import org.apache.commons.math3.analysis.MultivariateFunction;\n+import org.apache.commons.math3.exception.DimensionMismatchException;\n+import org.apache.commons.math3.exception.MathIllegalArgumentException;\n+\n+/**\n+ * Extension of {@link MultivariateFunction} representing a\n+ * multivariate differentiable real function.\n+ * @version $Id$\n+ * @since 3.1\n+ */\n+public interface MultivariateDifferentiableFunction extends MultivariateFunction {\n+\n+    /**\n+     * Compute the value for the function at the given point.\n+     *\n+     * @param point Point at which the function must be evaluated.\n+     * @return the function value for the given point.\n+     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n+     * if the parameter's dimension is wrong for the function being evaluated.\n+     * @throws  org.apache.commons.math3.exception.MathIllegalArgumentException\n+     * when the activated method itself can ascertain that preconditions,\n+     * specified in the API expressed at the level of the activated method,\n+     * have been violated.  In the vast majority of cases where Commons Math\n+     * throws this exception, it is the result of argument checking of actual\n+     * parameters immediately passed to a method.\n+     */\n+    DerivativeStructure value(DerivativeStructure[] point)\n+        throws DimensionMismatchException, MathIllegalArgumentException;\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math3.analysis.differentiation;\n+\n+import org.apache.commons.math3.analysis.MultivariateVectorFunction;\n+import org.apache.commons.math3.exception.DimensionMismatchException;\n+\n+\n+/**\n+ * Extension of {@link MultivariateVectorFunction} representing a\n+ * multivariate differentiable vectorial function.\n+ * @version $Id$\n+ * @since 3.1\n+ */\n+public interface MultivariateDifferentiableVectorFunction\n+    extends MultivariateVectorFunction {\n+\n+    /**\n+     * Compute the value for the function at the given point.\n+     * @param point point at which the function must be evaluated\n+     * @return function value for the given point\n+     * @exception DimensionMismatchException if points dimension is wrong\n+     */\n+    DerivativeStructure[] value(DerivativeStructure[] point)\n+        throws DimensionMismatchException;\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDiferentiableMatrixFunction.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math3.analysis.differentiation;\n+\n+import org.apache.commons.math3.analysis.UnivariateMatrixFunction;\n+\n+/**\n+ * Extension of {@link UnivariateMatrixFunction} representing a univariate differentiable matrix function.\n+ *\n+ * @version $Id$\n+ * @since 3.1\n+ */\n+public interface UnivariateDiferentiableMatrixFunction\n+    extends UnivariateMatrixFunction {\n+\n+    /**\n+     * Compute the value for the function.\n+     * @param x the point for which the function value should be computed\n+     * @return the value\n+     */\n+    DerivativeStructure[][] value(DerivativeStructure x);\n+\n+}\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math3.analysis.differentiation;\n+\n+import org.apache.commons.math3.analysis.UnivariateVectorFunction;\n+\n+/**\n+ * Extension of {@link UnivariateVectorFunction} representing a univariate differentiable vectorial function.\n+ *\n+ * @version $Id$\n+ * @since 3.1\n+ */\n+public interface UnivariateDifferentiableVectorFunction\n+    extends UnivariateVectorFunction {\n+\n+    /**\n+     * Compute the value for the function.\n+     * @param x the point for which the function value should be computed\n+     * @return the value\n+     */\n+    DerivativeStructure[] value(DerivativeStructure x);\n+\n+}\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java\n  *   interface. Any differentiable function should implement this interface.\n  * </p>\n  * <p>\n+ *   Similar interfaces also exist for multivariate functions and for vector or\n+ *   matrix valued functions.\n+ * </p>\n+ * <p>\n  *   The {@link UnivariateDifferentiator} interface defines a way to differentiation\n  *   a simple {@link org.apache.commons.math3.analysis.UnivariateFunction\n  *   univariate function} and get a {@link differential function}.", "timestamp": 1347377590, "metainfo": ""}