{"sha": "0c84b28c3542f3340f7ec0dffc34c60dff66604e", "log": "MATH-259 - check for Comparable when adding values  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n      * </p>\n      * \n      * @param v the value to add.\n-     * @throws IllegalArgumentException if <code>v</code> is not comparable.\n-     */\n+     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries\n+     * @throws ClassCastException if <code>v</code> is not Comparable\n+     * @deprecated use {@link #addValue(Comparable)} instead\n+     */\n+    @Deprecated\n     public void addValue(Object v) {\n+        addValue((Comparable<?>) v);\n+    }\n+    \n+    /**\n+     * Adds 1 to the frequency count for v.\n+     * <p>\n+     * If other objects have already been added to this Frequency, v must\n+     * be comparable to those that have already been added.\n+     * </p>\n+     * \n+     * @param v the value to add.\n+     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries\n+     */\n+    public void addValue(Comparable<?>v){\n         Object obj = v;\n         if (v instanceof Integer) {\n            obj = Long.valueOf(((Integer) v).longValue());\n--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java\n+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java\n         }\n     }\n     \n+    // Check what happens when non-Comparable objects are added\n+    public void testAddNonComparable(){\n+        try {\n+            f.addValue(new Object()); // This was OK\n+            fail(\"Expected ClassCastException\");\n+        } catch (ClassCastException expected) {\n+        }\n+        f.clear();\n+        f.addValue(1);\n+        try {\n+            f.addValue(new Object());\n+            fail(\"Expected ClassCastException\"); // Previously would have been IllegalArgument\n+        } catch (ClassCastException expected) {\n+        }\n+    }\n+\n     /** test empty table */\n     public void testEmptyTable() {\n         assertEquals(\"freq sum, empty table\", 0, f.getSumFreq());", "timestamp": 1239975299, "metainfo": ""}