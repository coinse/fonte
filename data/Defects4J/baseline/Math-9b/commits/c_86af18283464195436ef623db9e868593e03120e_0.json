{"sha": "86af18283464195436ef623db9e868593e03120e", "log": "Fix equals and hashcode to do exact comparisons  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/SparseRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealVector.java\n         return getData();\n     }\n \n-    /** {@inheritDoc} */\n+    /** {@inheritDoc} \n+     * <p> Implementation Note: This works on exact values, and as a result\n+     * it is possible for {@code a.subtract(b)} to be the zero vector, while\n+     * {@code a.hashCode() != b.hashCode()}.</p>\n+     */\n     @Override\n     public int hashCode() {\n         final int prime = 31;\n         temp = Double.doubleToLongBits(epsilon);\n         result = prime * result + (int) (temp ^ (temp >>> 32));\n         result = prime * result + virtualSize;\n+        Iterator iter = entries.iterator();\n+        while (iter.hasNext()) {\n+            iter.advance();\n+            temp = Double.doubleToLongBits(iter.value());\n+            result = prime * result + (int) (temp ^ (temp >>32));\n+        }\n         return result;\n     }\n \n-    /** {@inheritDoc} */\n+    /**  \n+     * <p> Implementation Note: This performs an exact comparison, and as a result\n+     * it is possible for {@code a.subtract(b}} to be the zero vector, while \n+     * {@code  a.equals(b) == false}.</p>\n+     * {@inheritDoc}\n+     */\n     @Override\n     public boolean equals(Object obj) {\n         if (this == obj) {\n         Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n-            double test = iter.value() - other.getEntry(iter.key());\n-            if (Math.abs(test) > epsilon) {\n+            double test = other.getEntry(iter.key());\n+            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {\n                 return false;\n             }\n         }\n         iter = other.getEntries().iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n-            double test = iter.value() - getEntry(iter.key());\n-            if (!isZero(test)) {\n+            double test = iter.value();\n+            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {\n                 return false;\n             }\n         }", "timestamp": 1240459767, "metainfo": ""}