{"sha": "30686a1d42510a55d6d1ad043baa4d80d81e1bc6", "log": "added missing @since  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java\n      * {@code false} before they start integration, so a proper lazy\n      * initialization is done automatically on the first step.</p>\n      * @param stateInitialized new value for the flag\n+     * @since 2.2\n      */\n     protected void setStateInitialized(final boolean stateInitialized) {\n         this.statesInitialized = stateInitialized;\n      * @param tEnd final integration time\n      * @return time at end of step\n      * @exception IntegratorException if the value of one event state cannot be evaluated\n+     * @since 2.2\n      */\n     protected double acceptStep(final AbstractStepInterpolator interpolator,\n                                 final double[] y, final double[] yDot, final double tEnd)", "timestamp": 1298365547, "metainfo": ""}