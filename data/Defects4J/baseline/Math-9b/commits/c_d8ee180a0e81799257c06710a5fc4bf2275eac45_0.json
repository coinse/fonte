{"sha": "d8ee180a0e81799257c06710a5fc4bf2275eac45", "log": "removed deprecated exceptions constructors  ", "commit": "\n--- a/src/java/org/apache/commons/math/ConvergenceException.java\n+++ b/src/java/org/apache/commons/math/ConvergenceException.java\n         super(pattern, arguments, cause);\n     }\n     \n-    /**\n-     * Constructs a new <code>ConvergenceException</code> with specified\n-     * detail message and nested <code>Throwable</code> root cause.\n-     *\n-     * @param msg  the error message.\n-     * @param rootCause  the exception or error that caused this exception\n-     * to be thrown.\n-     * @deprecated as of 1.2, replaced by \n-     * {@link #ConvergenceException(String, Object[], Throwable)}\n-     */\n-    public ConvergenceException(String msg, Throwable rootCause) {\n-        super(msg, rootCause);\n-    }\n-    \n-    /**\n-     * Constructs a new <code>ConvergenceException</code> with specified\n-     * detail message.\n-     *\n-     * @param msg  the error message.\n-     * @deprecated as of 1.2, replaced by \n-     * {@link #ConvergenceException(String, Object[])}\n-     */\n-    public ConvergenceException(String msg) {\n-        super(msg);\n-    }\n-\n }\n--- a/src/java/org/apache/commons/math/FunctionEvaluationException.java\n+++ b/src/java/org/apache/commons/math/FunctionEvaluationException.java\n public class FunctionEvaluationException extends MathException  {\n     \n     /** Serializable version identifier. */\n-    private static final long serialVersionUID = -7619974756160279127L;\n+    private static final long serialVersionUID = -2193260774031645876L;\n \n     /** Argument causing function evaluation failure */\n     private double argument = Double.NaN;\n     }\n     \n     /**\n-     * Construct an exception using the given argument and message\n-     * text.\n-     * \n-     * @param argument  the failing function argument \n-     * @param message  the exception message text\n-     * @deprecated as of 1.2, replaced by {@link #FunctionEvaluationException(double, String, Object[])}\n-     */\n-    public FunctionEvaluationException(double argument, String message) {\n-        super(message);\n-        this.argument = argument;\n-    }\n-\n-    /**\n      * Constructs an exception with specified formatted detail message.\n      * Message formatting is delegated to {@link java.text.MessageFormat}.\n      * @param argument  the failing function argument \n     public FunctionEvaluationException(double argument,\n                                        String pattern, Object[] arguments) {\n         super(pattern, arguments);\n-        this.argument = argument;\n-    }\n-\n-    /**\n-     * Construct an exception with the given argument, message and root cause.\n-     * \n-     * @param argument  the failing function argument \n-     * @param message descriptive error message\n-     * @param cause root cause.\n-     * @deprecated as of 1.2, replaced by {@link #FunctionEvaluationException(double, String, Object[], Throwable)}\n-     */\n-    public FunctionEvaluationException(double argument,\n-                                       String message, Throwable cause) {\n-        super(message, cause);\n         this.argument = argument;\n     }\n \n--- a/src/java/org/apache/commons/math/MathConfigurationException.java\n+++ b/src/java/org/apache/commons/math/MathConfigurationException.java\n public class MathConfigurationException extends MathException implements Serializable{\n \n     /** Serializable version identifier */\n-    private static final long serialVersionUID = -4056541384141349722L;\n+    private static final long serialVersionUID = 5261476508226103366L;\n+\n     /**\n      * Default constructor.\n      */\n         super();\n     }\n     \n-    /**\n-     * Construct an exception with the given message.\n-     * @param message descriptive error message\n-     * @deprecated as of 1.2, replaced by {@link #MathConfigurationException(String, Object[])}\n-     */\n-    public MathConfigurationException(String message) {\n-        super(message);\n-    }\n-\n     /**\n      * Constructs an exception with specified formatted detail message.\n      * Message formatting is delegated to {@link java.text.MessageFormat}.\n      */\n     public MathConfigurationException(String pattern, Object[] arguments) {\n         super(pattern, arguments);\n-    }\n-\n-    /**\n-     * Construct an exception with the given message and root cause.\n-     * @param message descriptive error message\n-     * @param cause  the exception or error that caused this exception to be thrown\n-     * @deprecated as of 1.2, replaced by {@link #MathConfigurationException(String, Object[], Throwable)}\n-     */\n-    public MathConfigurationException(String message, Throwable cause) {\n-        super(message, cause);\n     }\n \n     /**\n--- a/src/java/org/apache/commons/math/MathException.java\n+++ b/src/java/org/apache/commons/math/MathException.java\n public class MathException extends Exception {\n     \n     /** Serializable version identifier */\n-    private static final long serialVersionUID = -8602234299177097102L;\n+    private static final long serialVersionUID = 1428666635974829194L;\n \n     /**\n      * Does JDK support nested exceptions?\n     \n     /**\n      * Constructs a new <code>MathException</code> with specified\n-     * detail message.\n-     *\n-     * @param msg  the error message.\n-     * @deprecated as of 1.2, replaced by {@link #MathException(String, Object[])}\n-     */\n-    public MathException(String msg) {\n-        super(msg);\n-        this.pattern   = msg;\n-        this.arguments = new Object[0];\n-        this.rootCause = null;\n-    }\n-\n-    /**\n-     * Constructs a new <code>MathException</code> with specified\n      * formatted detail message.\n      * Message formatting is delegated to {@link java.text.MessageFormat}.\n      * @param pattern format specifier\n         this.rootCause = rootCause;\n     }\n     \n-    /**\n-     * Constructs a new <code>MathException</code> with specified\n-     * detail message and nested <code>Throwable</code> root cause.\n-     *\n-     * @param msg  the error message.\n-     * @param rootCause  the exception or error that caused this exception\n-     *                   to be thrown.\n-     * @deprecated as of 1.2, replaced by {@link #MathException(String, Object[], Throwable)}\n-     */\n-    public MathException(String msg, Throwable rootCause) {\n-        super(msg);\n-        this.pattern   = msg;\n-        this.arguments = new Object[0];\n-        this.rootCause = rootCause;\n-    }\n-\n     /**\n      * Constructs a new <code>MathException</code> with specified\n      * formatted detail message and nested <code>Throwable</code> root cause.\n--- a/src/java/org/apache/commons/math/linear/MatrixIndexException.java\n+++ b/src/java/org/apache/commons/math/linear/MatrixIndexException.java\n public class MatrixIndexException extends RuntimeException {\n \n     /** Serializable version identifier */\n-    private static final long serialVersionUID = -1341109412864309526L;\n-\n-    /**\n-     * Default constructor.\n-     * @deprecated as of 1.2 replaced by #MatrixIndexException(String)\n-     */\n-    public MatrixIndexException() {\n-        this(null);\n-    }\n+    private static final long serialVersionUID = 3728473373420246054L;\n \n     /**\n      * Construct an exception with the given message and root cause.", "timestamp": 1209043050, "metainfo": ""}