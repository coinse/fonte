{"sha": "88f944e1aada536e9a70b041387bb328d61490cd", "log": "MATH-767 Fixed unbalanced use of code tags in javadoc. Thanks to Dennis Hendriks for reporting it.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/genetics/Chromosome.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/Chromosome.java\n     }\n \n     /**\n-     * Returns <code>true<code> iff <code>another</code> has the same\n+     * Returns <code>true</code> iff <code>another</code> has the same\n      * representation and therefore the same fitness. By default, it returns\n      * false -- override it in your implementation if you need it.\n      * @param another chromosome to compare\n--- a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n     }\n \n     /**\n-     * Start the population for the next generation. The <code>{@link #elitismRate}<code>\n+     * Start the population for the next generation. The <code>{@link #elitismRate}</code>\n      * percents of the best chromosomes are directly copied to the next generation.\n      *\n      * @return the beginnings of the next generation.\n--- a/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java\n+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java\n  *\n  * Abstract implementation of the {@link StorelessUnivariateStatistic} interface.\n  * <p>\n- * Provides default <code>evaluate()</code> and <code>incrementAll(double[])<code>\n+ * Provides default <code>evaluate()</code> and <code>incrementAll(double[])</code>\n  * implementations.</p>\n  * <p>\n  * <strong>Note that these implementations are not synchronized.</strong></p>\n--- a/src/main/java/org/apache/commons/math3/stat/inference/TTest.java\n+++ b/src/main/java/org/apache/commons/math3/stat/inference/TTest.java\n      * </p><p>\n      * <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>\n      * </p><p>\n-     * with <strong><code>var1<code></strong> the variance of the first sample and\n+     * with <strong><code>var1</code></strong> the variance of the first sample and\n      * <strong><code>var2</code></strong> the variance of the second sample.\n      * </p><p>\n      * <strong>Preconditions</strong>: <ul>\n      * </p><p>\n      * <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>\n      * </p><p>\n-     * with <strong><code>var1<code></strong> the variance of the first sample and\n+     * with <strong><code>var1</code></strong> the variance of the first sample and\n      * <strong><code>var2</code></strong> the variance of the second sample.\n      * </p><p>\n      * <strong>Preconditions</strong>: <ul>\n--- a/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java\n+++ b/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java\n     }\n \n     /**\n-     * Discards the <code>i<code> initial elements of the array.  For example,\n+     * Discards the <code>i</code> initial elements of the array.  For example,\n      * if the array contains the elements 1,2,3,4, invoking\n      * <code>discardFrontElements(2)</code> will cause the first two elements\n      * to be discarded, leaving 3,4 in the array.  Throws illegalArgumentException\n     }\n \n     /**\n-     * Discards the <code>i<code> last elements of the array.  For example,\n+     * Discards the <code>i</code> last elements of the array.  For example,\n      * if the array contains the elements 1,2,3,4, invoking\n      * <code>discardMostRecentElements(2)</code> will cause the last two elements\n      * to be discarded, leaving 1,2 in the array.  Throws illegalArgumentException\n     }\n \n     /**\n-     * Discards the <code>i<code> first or last elements of the array,\n+     * Discards the <code>i</code> first or last elements of the array,\n      * depending on the value of <code>front</code>.\n      * For example, if the array contains the elements 1,2,3,4, invoking\n      * <code>discardExtremeElements(2,false)</code> will cause the last two elements", "timestamp": 1333302423, "metainfo": ""}