{"sha": "94e260fdcdabca4d6fe908d5b7ee5e31287b8702", "log": "Use fixed seeds in random data generation tests.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n import java.net.URL;\n import java.util.ArrayList;\n \n-import org.apache.commons.math.RetryRunner;\n import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.stat.descriptive.SummaryStatistics;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n \n /**\n  * Test cases for the EmpiricalDistribution class\n  * @version $Id$\n  */\n \n-@RunWith(RetryRunner.class)\n public final class EmpiricalDistributionTest {\n \n     protected EmpiricalDistributionImpl empiricalDistribution = null;\n-    protected EmpiricalDistribution empiricalDistribution2 = null;\n+    protected EmpiricalDistributionImpl empiricalDistribution2 = null;\n     protected File file = null;\n     protected URL url = null;\n     protected double[] dataArray = null;\n \n     private void tstGen(double tolerance)throws Exception {\n         empiricalDistribution.load(url);\n+        empiricalDistribution.reSeed(1000);\n         SummaryStatistics stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             stats.addValue(empiricalDistribution.getNextValue());\n \n     private void tstDoubleGen(double tolerance)throws Exception {\n         empiricalDistribution2.load(dataArray);\n+        empiricalDistribution2.reSeed(1000);\n         SummaryStatistics stats = new SummaryStatistics();\n         for (int i = 1; i < 1000; i++) {\n             stats.addValue(empiricalDistribution2.getNextValue());", "timestamp": 1312156065, "metainfo": ""}