{"sha": "480a0aa8123ad447186e40f33fb0605c69a845f6", "log": "MATH-840 Fixed invalid argument to \"asin\" and \"acos\".   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java\n+++ b/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java\n         double x = 0;\n         long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n-            x += StrictMath.asin(i / 10000000.0);\n-        long strictTime = System.nanoTime() - time;\n-\n-        x = 0;\n-        time = System.nanoTime();\n-        for (int i = 0; i < RUNS; i++)\n-            x += FastMath.asin(i / 10000000.0);\n-        long fastTime = System.nanoTime() - time;\n-\n-        x = 0;\n-        time = System.nanoTime();\n-        for (int i = 0; i < RUNS; i++)\n-            x += Math.asin(i / 10000000.0);\n+            x += StrictMath.asin(i / (double) RUNS);\n+        long strictTime = System.nanoTime() - time;\n+\n+        x = 0;\n+        time = System.nanoTime();\n+        for (int i = 0; i < RUNS; i++)\n+            x += FastMath.asin(i / (double) RUNS);\n+        long fastTime = System.nanoTime() - time;\n+\n+        x = 0;\n+        time = System.nanoTime();\n+        for (int i = 0; i < RUNS; i++)\n+            x += Math.asin(i / (double) RUNS);\n         long mathTime = System.nanoTime() - time;\n \n         report(\"asin\",strictTime,fastTime,mathTime);\n         double x = 0;\n         long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n-            x += StrictMath.acos(i / 10000000.0);\n-        long strictTime = System.nanoTime() - time;\n-\n-        x = 0;\n-        time = System.nanoTime();\n-        for (int i = 0; i < RUNS; i++)\n-            x += FastMath.acos(i / 10000000.0);\n-        long fastTime = System.nanoTime() - time;\n-\n-        x = 0;\n-        time = System.nanoTime();\n-        for (int i = 0; i < RUNS; i++)\n-            x += Math.acos(i / 10000000.0);\n+            x += StrictMath.acos(i / (double) RUNS);\n+        long strictTime = System.nanoTime() - time;\n+\n+        x = 0;\n+        time = System.nanoTime();\n+        for (int i = 0; i < RUNS; i++)\n+            x += FastMath.acos(i / (double) RUNS);\n+        long fastTime = System.nanoTime() - time;\n+\n+        x = 0;\n+        time = System.nanoTime();\n+        for (int i = 0; i < RUNS; i++)\n+            x += Math.acos(i / (double) RUNS);\n         long mathTime = System.nanoTime() - time;\n         report(\"acos\",strictTime,fastTime,mathTime);\n         Assert.assertTrue(!Double.isNaN(x));", "timestamp": 1344134235, "metainfo": ""}