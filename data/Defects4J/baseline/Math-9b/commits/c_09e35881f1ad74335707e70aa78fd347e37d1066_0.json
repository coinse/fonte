{"sha": "09e35881f1ad74335707e70aa78fd347e37d1066", "log": "MATH-645 Iterate on the original vector, not on the copy that is modified.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\n     public OpenMapRealVector ebeDivide(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));\n     public OpenMapRealVector ebeDivide(double[] v) {\n         checkVectorDimensions(v.length);\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() / v[iter.key()]);\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n     public OpenMapRealVector ebeMultiply(double[] v) {\n         checkVectorDimensions(v.length);\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v[iter.key()]);\n--- a/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n             Assert.assertEquals(msg + \" \" +  i + \" elements differ\", m[i],n[i],tolerance);\n         }\n     }\n+\n+    /* Check that the operations do not throw an exception (cf. MATH-645). */\n+    @Test\n+    public void testConcurrentModification() {\n+        final RealVector u = new OpenMapRealVector(3, 1e-6);\n+        u.setEntry(0, 1);\n+        u.setEntry(1, 0);\n+        u.setEntry(2, 2);\n+\n+        final RealVector v1 = new OpenMapRealVector(3, 1e-6);\n+        final double[] v2 = new double[3];\n+        v1.setEntry(0, 0);\n+        v2[0] = 0;\n+        v1.setEntry(1, 3);\n+        v2[1] = 3;\n+        v1.setEntry(2, 0);\n+        v2[2] = 0;\n+\n+        RealVector w;\n+\n+        w = u.ebeMultiply(v1);\n+        w = u.ebeMultiply(v2);\n+\n+        w = u.ebeDivide(v1);\n+        w = u.ebeDivide(v2);\n+    }\n }", "timestamp": 1313259013, "metainfo": ""}