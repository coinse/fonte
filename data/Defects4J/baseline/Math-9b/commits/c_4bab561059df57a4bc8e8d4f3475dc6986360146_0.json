{"sha": "4bab561059df57a4bc8e8d4f3475dc6986360146", "log": "Made numerator and denominator final in Fraction and deprecated protected real and imaginary parts fields in Complex, making Fraction immutable and preparing Complex to become fully immutable in 2.0. JIRA: MATH-188 Reported and patched by Sebastian Bazley   ", "commit": "\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n     /** A complex number representing \"0.0 + 0.0i\" */    \n     public static final Complex ZERO = new Complex(0.0, 0.0);\n     \n-    /** The imaginary part */\n+    /** \n+     * The imaginary part \n+     * @deprecated to be made final and private in 2.0\n+     */\n     protected double imaginary;\n     \n-    /** The real part */\n+    /** \n+     * The real part \n+     * @deprecated to be made final and private in 2.0\n+     */\n     protected double real;\n     \n     /**\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n     private static final long serialVersionUID = -8958519416450949235L;\n     \n     /** The denominator. */\n-    private int denominator;\n+    private final int denominator;\n     \n     /** The numerator. */\n-    private int numerator;\n+    private final int numerator;\n \n     /**\n      * Create a fraction given the double value.\n             num = -num;\n             den = -den;\n         }\n+        // reduce numerator and denominator by greatest common denominator.\n+        int d = MathUtils.gcd(num, den);\n+        if (d > 1) {\n+            num /= d;\n+            den /= d;\n+        }\n+        \n+        // move sign to numerator.\n+        if (den < 0) {\n+            num *= -1;\n+            den *= -1;\n+        }\n         this.numerator = num;\n         this.denominator = den;\n-        reduce();\n     }\n     \n     /**\n         denominator /= gcd;\n         return new Fraction(numerator, denominator);\n     }\n-    \n-    /**\n-     * Reduce this fraction to lowest terms.  This is accomplished by dividing\n-     * both numerator and denominator by their greatest common divisor.\n-     */\n-    private void reduce() {\n-        // reduce numerator and denominator by greatest common denominator.\n-        int d = MathUtils.gcd(numerator, denominator);\n-        if (d > 1) {\n-            numerator /= d;\n-            denominator /= d;\n-        }\n-\n-        // move sign to numerator.\n-        if (denominator < 0) {\n-            numerator *= -1;\n-            denominator *= -1;\n-        }\n-    }\n }", "timestamp": 1202692719, "metainfo": ""}