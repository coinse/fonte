{"sha": "dbe78425b5941b5fb44aee74f3d04e68f5e81896", "log": "Remove unnecessary semi-colons  ", "commit": "\n--- a/src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java\n+++ b/src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java\n             m.add(m2);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n             m.subtract(new DenseRealMatrix(testData2));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n    \n             m.getTrace();\n             fail(\"Expecting NonSquareMatrixException\");\n         } catch (NonSquareMatrixException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n     \n             m.operate(testVector);\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n \n             m.preMultiply(testVector);\n             fail(\"expecting IllegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n             m.preMultiply(new DenseRealMatrix(bigSingular));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n     \n             m.getRow(10);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n         try {\n             m.getColumn(-1);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n         public int getCount() {\n             return count;\n         }\n-    };\n+    }\n \n     //--------------- -----------------Protected methods\n         \n--- a/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n+++ b/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n             m.add(m2);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n             m.subtract(new RealMatrixImpl(testData2));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n    \n             m.multiply(new RealMatrixImpl(bigSingular));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }   \n     \n             m.getTrace();\n             fail(\"Expecting NonSquareMatrixException\");\n         } catch (NonSquareMatrixException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n     \n             m.operate(testVector);\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n \n             m.preMultiply(testVector);\n             fail(\"expecting IllegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n             m.preMultiply(new RealMatrixImpl(bigSingular));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }      \n     }\n     \n             m.getRow(10);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n         try {\n             m.getColumn(-1);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n         public int getCount() {\n             return count;\n         }\n-    };\n+    }\n \n     //--------------- -----------------Protected methods\n     \n--- a/src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n+++ b/src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n       throws DerivativeException {\n           throw new DerivativeException(null);\n       }\n-  };\n+  }\n \n \n   public void testSerializationError()\n--- a/src/test/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n+++ b/src/test/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n             testGenerator.nextInt(-1);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n         Frequency freq = new Frequency();\n         int value = 0;\n--- a/src/test/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/org/apache/commons/math/random/ValueServerTest.java\n         try {\n             vs.getNext();\n             fail(\"Expecting IllegalStateException\");\n-        } catch (IllegalStateException ex) {;}\n+        } catch (IllegalStateException ex) {}\n     }\n \n     public void testEmptyReplayFile() {\n             vs.getNext();\n             fail(\"bad mode, expecting IllegalStateException\");\n         } catch (IllegalStateException ex) {\n-            ;\n+            // ignored\n         }\n     }\n     \n--- a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java\n             regression.getSlopeConfidenceInterval(1);\n             fail(\"expecting IllegalArgumentException for alpha = 1\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }  \n \n     }", "timestamp": 1239709900, "metainfo": ""}