{"sha": "f27f087466f834092e537777c9f91e47c87f024a", "log": "MathUtils.safeNorm (translation of enorm.f from Minpack) added  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n             checkOrder(val, OrderDirection.DECREASING, strict);\n         }\n     }\n+\n+\t/**\n+\t * Returns the Cartesian norm (2-norm), handling both overflow and underflow.\n+\t * Translation of the minpack enorm subroutine.\n+\t *\n+\t * The redistribution policy for MINPACK is available <a\n+\t * href=\"http://www.netlib.org/minpack/disclaimer\">here</a>, for convenience, it\n+\t * is reproduced below.</p>\n+\t *\n+\t * <table border=\"0\" width=\"80%\" cellpadding=\"10\" align=\"center\" bgcolor=\"#E0E0E0\">\n+\t * <tr><td>\n+\t *    Minpack Copyright Notice (1999) University of Chicago.\n+\t *    All rights reserved\n+\t * </td></tr>\n+\t * <tr><td>\n+\t * Redistribution and use in source and binary forms, with or without\n+\t * modification, are permitted provided that the following conditions\n+\t * are met:\n+\t * <ol>\n+\t *  <li>Redistributions of source code must retain the above copyright\n+\t *      notice, this list of conditions and the following disclaimer.</li>\n+\t * <li>Redistributions in binary form must reproduce the above\n+\t *     copyright notice, this list of conditions and the following\n+\t *     disclaimer in the documentation and/or other materials provided\n+\t *     with the distribution.</li>\n+\t * <li>The end-user documentation included with the redistribution, if any,\n+\t *     must include the following acknowledgment:\n+\t *     <code>This product includes software developed by the University of\n+\t *           Chicago, as Operator of Argonne National Laboratory.</code>\n+\t *     Alternately, this acknowledgment may appear in the software itself,\n+\t *     if and wherever such third-party acknowledgments normally appear.</li>\n+\t * <li><strong>WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED \"AS IS\"\n+\t *     WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE\n+\t *     UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND\n+\t *     THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR\n+\t *     IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES\n+\t *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE\n+\t *     OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY\n+\t *     OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR\n+\t *     USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF\n+\t *     THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)\n+\t *     DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION\n+\t *     UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL\n+\t *     BE CORRECTED.</strong></li>\n+\t * <li><strong>LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT\n+\t *     HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF\n+\t *     ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,\n+\t *     INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF\n+\t *     ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF\n+\t *     PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER\n+\t *     SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT\n+\t *     (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,\n+\t *     EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE\n+\t *     POSSIBILITY OF SUCH LOSS OR DAMAGES.</strong></li>\n+\t * <ol></td></tr>\n+\t * </table>\n+\t *\n+\t * @param v vector of doubles\n+\t * @return the 2-norm of the vector\n+\t */\n+\tpublic static double safeNorm(double[] v) {\n+    double rdwarf = 3.834e-20;\n+    double rgiant = 1.304e+19;\n+    double s1=0.0;\n+    double s2=0.0;\n+    double s3=0.0;\n+    double x1max = 0.0;\n+    double x3max = 0.0;\n+    double floatn = (double)v.length;\n+    double agiant = rgiant/floatn;\n+    for (int i=0;i<v.length;i++) {\n+        double xabs = Math.abs(v[i]);\n+        if (xabs<rdwarf || xabs>agiant) {\n+            if (xabs>rdwarf) {\n+                if (xabs>x1max) {\n+                    double r=x1max/xabs;\n+                    s1=1.0+s1*r*r;\n+                    x1max=xabs;\n+                } else {\n+                    double r=xabs/x1max;\n+                    s1+=r*r;\n+                }\n+            } else {\n+                if (xabs>x3max) {\n+                 double r=x3max/xabs;\n+                 s3=1.0+s3*r*r;\n+                 x3max=xabs;\n+                } else {\n+                    if (xabs!=0.0) {\n+                        double r=xabs/x3max;\n+                        s3+=r*r;\n+                    }\n+                }\n+            }\n+        } else {\n+         s2+=xabs*xabs;   \n+        }\n+    }\n+    double norm;\n+    if (s1!=0.0) {\n+        norm = x1max*Math.sqrt(s1+(s2/x1max)/x1max);\n+    } else {\n+        if (s2==0.0) {\n+            norm = x3max*Math.sqrt(s3);\n+        } else {\n+            if (s2>=x3max) {\n+                norm = Math.sqrt(s2*(1.0+(x3max/s2)*(x3max*s3)));\n+            } else {\n+                norm = Math.sqrt(x3max*((s2/x3max)+(x3max*s3)));\n+            }\n+        }\n+    }\n+    return norm;\n }\n+\t\n+}", "timestamp": 1281542114, "metainfo": ""}