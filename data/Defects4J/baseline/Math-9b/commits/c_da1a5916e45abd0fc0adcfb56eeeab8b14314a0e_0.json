{"sha": "da1a5916e45abd0fc0adcfb56eeeab8b14314a0e", "log": "added Fraction.toString() Jira: MATH-256  ", "commit": "\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n         return new Fraction(numerator, denominator);\n     }\n \n+    /**\n+     * <p>\n+     * Returns the <code>String</code> representing this fraction, ie\n+     * \"num / dem\" or just \"num\" if the denominator is one.\n+     * </p>\n+     * \n+     * @return a string representation of the fraction.\n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        String str = null;\n+        if (denominator == 1) {\n+            str = Integer.toString(numerator);\n+        } else if (numerator == 0) {\n+            str = \"0\";\n+        } else {\n+            str = numerator + \" / \" + denominator;\n+        }\n+        return str;\n+    }\n+\n }\n--- a/src/test/org/apache/commons/math/fraction/FractionTest.java\n+++ b/src/test/org/apache/commons/math/fraction/FractionTest.java\n         assertEquals(Fraction.getReducedFraction\n                 (1, -1).getNumerator(), -1);\n     }\n+\n+    public void testToString() {\n+        assertEquals(\"0\", new Fraction(0, 3).toString());\n+        assertEquals(\"3\", new Fraction(6, 2).toString());\n+        assertEquals(\"2 / 3\", new Fraction(18, 27).toString());\n+    }\n }", "timestamp": 1238941743, "metainfo": ""}