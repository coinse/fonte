{"sha": "d877581e783f778f6204e1b607cd29f16b897a3e", "log": "Fixed some checkstyle warnings.  Changed checkstyle settings to use APL 2.0.   ", "commit": "\n--- a/src/java/org/apache/commons/math/ConvergenceException.java\n+++ b/src/java/org/apache/commons/math/ConvergenceException.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math;\n \n  * Error thrown when a numerical computation can not be performed because the\n  * numerical result failed to converge to a finite value.\n  * \n- * @version $Revision: 1.11 $ $Date: 2004/04/08 20:46:00 $\n+ * @version $Revision: 1.12 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class ConvergenceException extends MathException implements Serializable{\n     /**\n--- a/src/java/org/apache/commons/math/MathConfigurationException.java\n+++ b/src/java/org/apache/commons/math/MathConfigurationException.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math;\n \n \n /**\n  * Signals a configuration problem with any of the factory methods.\n- * @version $Revision: 1.15 $ $Date: 2004/02/18 03:24:19 $\n+ * @version $Revision: 1.16 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class MathConfigurationException extends MathException implements Serializable {\n \n--- a/src/java/org/apache/commons/math/MathException.java\n+++ b/src/java/org/apache/commons/math/MathException.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math;\n \n \n /**\n  * A generic exception indicating problems in the math package.\n- * @version $Revision: 1.14 $ $Date: 2004/02/18 03:24:19 $\n+ * @version $Revision: 1.15 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class MathException extends NestableException implements Serializable {\n \n--- a/src/java/org/apache/commons/math/analysis/BisectionSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BisectionSolver.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * Implements the <a href=\"http://mathworld.wolfram.com/Bisection.html\">bisection algorithm</a>\n  *  for finding zeros of univariate real functions.  This algorithm will find only one zero in the given interval.\n  * The function should be continuous but not necessarily smooth.\n- * @version $Revision: 1.13 $ $Date: 2004/04/08 21:19:17 $\n+ * @version $Revision: 1.14 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class BisectionSolver extends UnivariateRealSolverImpl implements Serializable {\n     /**\n--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * functions. This algorithm will find only one zero in the given interval. \n  * The function should be continuous but not necessarily smooth.\n  *  \n- * @version $Revision: 1.13 $ $Date: 2004/02/20 06:22:39 $\n+ * @version $Revision: 1.14 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class BrentSolver extends UnivariateRealSolverImpl implements Serializable {\n     /**\n--- a/src/java/org/apache/commons/math/analysis/NewtonSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/NewtonSolver.java\n /*\n- *\n- * Copyright 2004 The Apache Software Foundation\n- *\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n+ * Copyright 2004 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n package org.apache.commons.math.analysis;\n  * algorithm will find only one zero in the given interval.  The function should\n  * be continuous but not necessarily smooth.\n  *\n- * @version $Revision: 1.2 $ $Date: 2004/04/26 19:15:48 $\n+ * @version $Revision: 1.3 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class NewtonSolver extends UnivariateRealSolverImpl implements Serializable {\n     \n--- a/src/java/org/apache/commons/math/analysis/PolynomialFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/PolynomialFunction.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * <a href=\"http://mathworld.wolfram.com/HornersMethod.html\">Horner's Method</a>\n  *  is used to evaluate the function.   \n  * \n- * @version $Revision: 1.8 $ $Date: 2004/04/02 21:08:48 $\n+ * @version $Revision: 1.9 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class PolynomialFunction implements DifferentiableUnivariateRealFunction, Serializable {\n \n--- a/src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java\n+++ b/src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * <li> Let <code>j</code> be the index of the largest knot point that is less than or equal to <code>x</code>. \n  *  The value returned is <br> <code>polynomials[j](x - knot[j])</code></li></ol>\n  * \n- * @version $Revision: 1.3 $ $Date: 2004/04/23 18:16:06 $\n+ * @version $Revision: 1.4 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class PolynomialSplineFunction implements UnivariateRealFunction, Serializable {\n    \n--- a/src/java/org/apache/commons/math/analysis/SecantSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/SecantSolver.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * <p>\n  * The function is supposed to be continuous but not necessarily smooth.\n  *  \n- * @version $Revision: 1.13 $ $Date: 2004/02/22 22:01:29 $\n+ * @version $Revision: 1.14 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class SecantSolver extends UnivariateRealSolverImpl implements Serializable {\n     /**\n--- a/src/java/org/apache/commons/math/analysis/SplineInterpolator.java\n+++ b/src/java/org/apache/commons/math/analysis/SplineInterpolator.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.analysis;\n \n  * The cubic spline interpolation algorithm implemented is as described in R.L. Burden, J.D. Faires, \n  * <u>Numerical Analysis</u>, 4th Ed., 1989, PWS-Kent, ISBN 0-53491-585-X, pp 126-131.\n  *\n- * @version $Revision: 1.15 $ $Date: 2004/04/02 21:16:21 $\n+ * @version $Revision: 1.16 $ $Date: 2004/04/27 04:37:58 $\n  *\n  */\n public class SplineInterpolator implements UnivariateRealInterpolator, Serializable {\n--- a/src/java/org/apache/commons/math/complex/ComplexFormat.java\n+++ b/src/java/org/apache/commons/math/complex/ComplexFormat.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * can be configured.\n  *\n  * @author Apache Software Foundation\n- * @version $Revision: 1.4 $\n+ * @version $Revision: 1.5 $ $Date: 2004/04/27 04:37:59 $\n  */\n public class ComplexFormat {\n \n--- a/src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java\n /**\n  * The default implementation of {@link BinomialDistribution}.\n  * \n- * @version $Revision: 1.12 $ $Date: 2004/04/08 20:45:59 $\n+ * @version $Revision: 1.13 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class BinomialDistributionImpl\n     extends AbstractDiscreteDistribution\n             ret = 1.0;\n         } else {\n             ret =\n-                1.0\n-                    - Beta.regularizedBeta(\n+                1.0 - Beta.regularizedBeta(\n                         getProbabilityOfSuccess(),\n                         x + 1.0,\n                         getNumberOfTrials() - x);\n         if (x < 0 || x > getNumberOfTrials()) {\n             ret = 0.0;\n         } else {\n-            ret =\n-                MathUtils.binomialCoefficientDouble(getNumberOfTrials(), x)\n-                    * Math.pow(getProbabilityOfSuccess(), x)\n-                    * Math.pow(\n-                        1.0 - getProbabilityOfSuccess(),\n-                        getNumberOfTrials() - x);\n+            ret = MathUtils.binomialCoefficientDouble(\n+            \t\tgetNumberOfTrials(), x) *\n+\t\t\t\t  Math.pow(getProbabilityOfSuccess(), x) *\n+\t\t\t\t  Math.pow(1.0 - getProbabilityOfSuccess(),\n+\t\t\t\t  \t\tgetNumberOfTrials() - x);\n         }\n         return ret;\n     }\n--- a/src/java/org/apache/commons/math/distribution/NormalDistribution.java\n+++ b/src/java/org/apache/commons/math/distribution/NormalDistribution.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * </ul>\n  * </p>\n  * \n- * @version $Revision: 1.4 $ $Date: 2004/04/26 19:15:48 $\n+ * @version $Revision: 1.5 $ $Date: 2004/04/27 04:37:58 $\n  */\n public interface NormalDistribution extends ContinuousDistribution {\n \t/**\n--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You can choose the algorithm used to calculate cumulative probability\n  * using method {@link #setCdfAlgorithm}. The deafault is the Cody algorithm \n  * {@link org.apache.commons.math.distribution.NormalCDFPreciseAlgorithm}\n+ * \n+ * @version $Revision: 1.5 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class NormalDistributionImpl extends AbstractContinuousDistribution \n \t\timplements NormalDistribution, Serializable {\n \t * deviation equal to one. \n \t */\n \tpublic NormalDistributionImpl(){\n-\t\tsuper();\n-\t\tsetMean(0.0);\n-\t\tsetStandardDeviation(1.0);\n+\t\tthis(0.0, 1.0);\n \t}\t\n \t/**\n \t * Access the mean.\n \tpublic double cumulativeProbability(double x) {\n \t\tdouble z = x;\n \t\tif(standardDeviation > 0){\n-\t\t\tz = (x - mean)/standardDeviation;\n+\t\t\tz = (x - mean) / standardDeviation;\n \t\t}else{\n \t\t\treturn 0.0;\n \t\t}\n \t */\n \tpublic double inverseCumulativeProbability(double p) {\n \t\tif (p < 0.0 || p > 1.0) {\n-\t\t\tthrow new IllegalArgumentException(\"p must be between 0.0 and 1.0, inclusive.\");\n+\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\"p must be between 0.0 and 1.0, inclusive.\");\n \t\t}\n \t\t\n \t\t//TODO is this ok?\n \t\t\t\t\t   21213.794301586595867) * r + 5394.1960214247511077) * r +\n \t\t\t\t\t 687.1870074920579083) * r + 42.313330701600911252) * r + 1.);\n \t\t}else { //closer than 0.075 from {0,1} boundary\n-\t\tif (q > 0)\n+\t\tif (q > 0) {\n \t\t\tr = 1 - p;\n-\t\telse\n+\t\t} else {\n \t\t\tr = p;\n+\t\t}\n \t\tr = Math.sqrt(- Math.log(r));\n \t\tif (r <= 5.0) {\n \t\t\tr += -1.6;\n \t\t\t\t\t  0.0012426609473880784386) * r + 0.026532189526576123093) *\n \t\t\t\t\tr + 0.29656057182850489123) * r +\n \t\t\t\t   1.7848265399172913358) * r + 5.4637849111641143699) *\n-\t\t\t\t r + 6.6579046435011037772)\n-\t\t\t\t/ (((((((r *\n+\t\t\t\t r + 6.6579046435011037772) /\n+\t\t\t\t (((((((r *\n \t\t\t\t\t\t 2.04426310338993978564e-15 + 1.4215117583164458887e-7)*\n \t\t\t\t\t\tr + 1.8463183175100546818e-5) * r +\n-\t\t\t\t\t   7.868691311456132591e-4) * r + 0.0148753612908506148525)\n-\t\t\t\t\t * r + 0.13692988092273580531) * r +\n+\t\t\t\t\t   7.868691311456132591e-4) * r + 0.0148753612908506148525) *\n+\t\t\t\t\t   r + 0.13692988092273580531) * r +\n \t\t\t\t\t0.59983220655588793769) * r + 1.0);\n \t\t}\n \t\tif(q < 0.0)\n \t\t\tval = -val;\n \t\t}\n-\t\treturn mean + standardDeviation*val;\n+\t\treturn mean + standardDeviation * val;\n \t}\n \n \n \tprotected double getInitialDomain(double p) {\n \t\treturn 0.0;\n \t}\n-\n-\n }\n--- a/src/java/org/apache/commons/math/linear/InvalidMatrixException.java\n+++ b/src/java/org/apache/commons/math/linear/InvalidMatrixException.java\n /*\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n package org.apache.commons.math.linear;\n  * Thrown when a system attempts an operation on a matrix, and\n  * that matrix does not satisfy the preconditions for the\n  * aforementioned operation.\n- * @version $Revision: 1.3 $ $Date: 2004/04/08 20:46:01 $\n+ * @version $Revision: 1.4 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class InvalidMatrixException extends NestableRuntimeException {\n     /**\n--- a/src/java/org/apache/commons/math/linear/MatrixIndexException.java\n+++ b/src/java/org/apache/commons/math/linear/MatrixIndexException.java\n /*\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n package org.apache.commons.math.linear;\n /**\n  * Thrown when an operation addresses a matrix coordinate (row,col)\n  * which is outside of the dimensions of a matrix.\n- * @version $Revision: 1.3 $ $Date: 2004/04/08 20:46:01 $\n+ * @version $Revision: 1.4 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class MatrixIndexException extends NestableRuntimeException {\n     /**\n--- a/src/java/org/apache/commons/math/linear/RealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrix.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n package org.apache.commons.math.linear;\n \n /**\n  * Interface defining a real-valued matrix with basic algebraic operations\n- * @version $Revision: 1.15 $ $Date: 2004/04/11 19:00:45 $\n+ * @version $Revision: 1.16 $ $Date: 2004/04/27 04:37:58 $\n  */\n public interface RealMatrix {\n \n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n /*\n+ * Copyright 2003-2004 The Apache Software Foundation.\n  * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n package org.apache.commons.math.linear;\n  * explicitly invoke <code>LUDecompose()</code> to recompute the decomposition\n  * before using any of the methods above.\n  *\n- * @version $Revision: 1.18 $ $Date: 2004/04/11 19:00:45 $\n+ * @version $Revision: 1.19 $ $Date: 2004/04/27 04:37:58 $\n  */\n public class RealMatrixImpl implements RealMatrix, Serializable {\n \n \t * @exception  IllegalArgumentException if m is not the same size as this\n \t */\n \tpublic RealMatrix add(RealMatrix m) throws IllegalArgumentException {\n-\t\tif (this.getColumnDimension() != m.getColumnDimension()\n-\t\t\t|| this.getRowDimension() != m.getRowDimension()) {\n+\t\tif (this.getColumnDimension() != m.getColumnDimension() ||\n+\t\t\t\tthis.getRowDimension() != m.getRowDimension()) {\n \t\t\tthrow new IllegalArgumentException(\"matrix dimension mismatch\");\n \t\t}\n \t\tint rowCount = this.getRowDimension();\n \t * @exception  IllegalArgumentException if m is not the same size as *this\n \t */\n \tpublic RealMatrix subtract(RealMatrix m) throws IllegalArgumentException {\n-\t\tif (this.getColumnDimension() != m.getColumnDimension()\n-\t\t\t|| this.getRowDimension() != m.getRowDimension()) {\n+\t\tif (this.getColumnDimension() != m.getColumnDimension() ||\n+\t\t\t\tthis.getRowDimension() != m.getRowDimension()) {\n \t\t\tthrow new IllegalArgumentException(\"matrix dimension mismatch\");\n \t\t}\n \t\tint rowCount = this.getRowDimension();\n \t/**\n \t * Tests a given coordinate as being valid or invalid\n \t *\n+\t * @param row the row index.\n+\t * @param col the column index.\n \t * @return true if the coordinate is with the current dimensions\n \t */\n \tprivate boolean isValidCoordinate(int row, int col) {\n--- a/src/java/org/apache/commons/math/special/Beta.java\n+++ b/src/java/org/apache/commons/math/special/Beta.java\n /*\n- * \n- * Copyright (c) 2003-2004 The Apache Software Foundation. All rights reserved.\n- * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy\n- * of the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n+ * Copyright 2003-2004 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  * \n  * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- *  \n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.commons.math.special;\n \n  * This is a utility class that provides computation methods related to the\n  * Beta family of functions.\n  * \n- * @version $Revision: 1.18 $ $Date: 2004/04/23 19:30:47 $\n+ * @version $Revision: 1.19 $ $Date: 2004/04/27 04:37:59 $\n  */\n public class Beta implements Serializable {\n     /** Maximum allowed numerical error. */\n--- a/src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n /**\n  *  Reporting interface for basic univariate statistics.\n  * \n-  * @version $Revision: 1.1 $ $Date: 2004/04/12 02:27:49 $\n+  * @version $Revision: 1.2 $ $Date: 2004/04/27 04:37:59 $\n  */\n public interface StatisticalSummary {\n \t/** \n--- a/src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n /**\n  * Abstract factory class for univariate statistical summaries.\n  * \n- * @version $Revision: 1.2 $ $Date: 2004/04/23 19:50:27 $\n+ * @version $Revision: 1.3 $ $Date: 2004/04/27 04:37:59 $\n  */\n public abstract class SummaryStatistics implements Serializable, StatisticalSummary{\n \n--- a/src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n /**\n  * Provides a default {@link SummaryStatistics} implementation.\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/04/12 02:27:49 $  \n+ * @version $Revision: 1.2 $ $Date: 2004/04/27 04:37:59 $  \n  */\n public class SummaryStatisticsImpl extends SummaryStatistics {\n \n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n /*\n  * Copyright 2003-2004 The Apache Software Foundation.\n- *\n+ * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n+ * \n  *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n /**\n  * Some useful additions to the built-in functions in {@link Math}.\n  *\n- * @version $Revision: 1.14 $ $Date: 2004/04/08 20:46:01 $\n+ * @version $Revision: 1.15 $ $Date: 2004/04/27 04:37:59 $\n  */\n public final class MathUtils {\n     \n--- a/src/test/org/apache/commons/math/complex/ComplexFormatTest.java\n+++ b/src/test/org/apache/commons/math/complex/ComplexFormatTest.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n--- a/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/NormalDistributionTest.java\n /*\n- * Copyright 2004,2004 The Apache Software Foundation.\n+ * Copyright 2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.", "timestamp": 1083040679, "metainfo": ""}