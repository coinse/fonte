{"sha": "d4e2da4f81253d4163d979196d8a53a73a718831", "log": "Restored some double casts to improve ensure correctness does not depend on order of operations or literal conversion, dropped uneccesary parens.  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n         } else {\n             double dx = x - xbar;\n             double dy = y - ybar;\n-            sumXX += dx * dx * n / (n + 1.0);\n-            sumYY += dy * dy * n / (n + 1.0);\n-            sumXY += dx * dy * n / (n + 1.0);\n+            sumXX += dx * dx * (double) n / (n + 1d);\n+            sumYY += dy * dy * (double) n / (n + 1d);\n+            sumXY += dx * dy * (double) n / (n + 1d);\n             xbar += dx / (n + 1.0);\n             ybar += dy / (n + 1.0);\n         }\n         if (n > 0) {\n             double dx = x - xbar;\n             double dy = y - ybar;\n-            sumXX -= dx * dx * n / (n - 1.0);\n-            sumYY -= dy * dy * n / (n - 1.0);\n-            sumXY -= dx * dy * n / (n - 1.0);\n+            sumXX -= dx * dx * (double) n / (n - 1d);\n+            sumYY -= dy * dy * (double) n / (n - 1d);\n+            sumXY -= dx * dy * (double) n / (n - 1d);\n             xbar -= dx / (n - 1.0);\n             ybar -= dy / (n - 1.0);\n             sumX -= x;\n      */\n     public double getInterceptStdErr() {\n         return Math.sqrt(\n-            getMeanSquareError() * ((1d / n) + (xbar * xbar) / sumXX));\n+            getMeanSquareError() * ((1d / (double) n) + (xbar * xbar) / sumXX));\n     }\n \n     /**\n     * @return the intercept of the regression line\n     */\n     private double getIntercept(double slope) {\n-        return (sumY - slope * sumX) / (n);\n+        return (sumY - slope * sumX) / n;\n     }\n \n     /**", "timestamp": 1239463802, "metainfo": ""}