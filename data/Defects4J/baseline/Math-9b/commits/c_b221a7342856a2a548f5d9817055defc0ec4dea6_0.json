{"sha": "b221a7342856a2a548f5d9817055defc0ec4dea6", "log": "MATH-904. Fixed wrong assumption in \"pow\" method.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math3/util/FastMath.java\n \n     /** 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite */\n     private static final double TWO_POWER_52 = 4503599627370496.0;\n+    /** 2^53 - double numbers this large must be even. */\n+    private static final double TWO_POWER_53 = 2 * TWO_POWER_52;\n \n     /** Constant: {@value}. */\n     private static final double F_1_3 = 1d / 3d;\n         /* Handle special case x<0 */\n         if (x < 0) {\n             // y is an even integer in this case\n-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {\n+            if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {\n                 return pow(-x, y);\n             }\n \n--- a/src/test/java/org/apache/commons/math3/util/FastMathTest.java\n+++ b/src/test/java/org/apache/commons/math3/util/FastMathTest.java\n     }\n \n     @Test\n+    public void testMath904() {\n+        final double x = -1;\n+        final double y = (5 + 1e-15) * 1e15;\n+        Assert.assertEquals(Math.pow(x, y),\n+                            FastMath.pow(x, y), 0);\n+        Assert.assertEquals(Math.pow(x, -y),\n+                            FastMath.pow(x, -y), 0);\n+    }\n+\n+    @Test\n     public void testMath905LargePositive() {\n         final double start = StrictMath.log(Double.MAX_VALUE);\n         final double endT = StrictMath.sqrt(2) * StrictMath.sqrt(Double.MAX_VALUE);", "timestamp": 1353970949, "metainfo": ""}