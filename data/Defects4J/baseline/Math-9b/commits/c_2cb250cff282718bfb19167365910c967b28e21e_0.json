{"sha": "2cb250cff282718bfb19167365910c967b28e21e", "log": "MATH-734 Initialize \"final\" fields at point of declaration.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/ISAACRandom.java\n+++ b/src/main/java/org/apache/commons/math/random/ISAACRandom.java\n     /** The golden ratio */\n     private static final int GLD_RATIO = 0x9e3779b9;\n     /** The results given to the user */\n-    private int[] rsl;\n+    private final int[] rsl = new int[SIZE];\n     /** The internal state */\n-    private int[] mem;\n+    private final int[] mem = new int[SIZE];\n     /** Count through the results in rsl[] */\n     private int count;\n     /** Accumulator */\n     /** Counter, guarantees cycle is at least 2^40 */\n     private int isaacC;\n     /** Service variable. */\n-    private transient int[] arr;\n+    private final transient int[] arr = new int[8];\n     /** Service variable. */\n     private transient int isaacX;\n     /** Service variable. */\n      * current time and system hash code of the instance as the seed.\n      */\n     public ISAACRandom() {\n-        allocArrays();\n         setSeed(System.currentTimeMillis() + System.identityHashCode(this));\n     }\n \n      * @param seed Initial seed.\n      */\n     public ISAACRandom(long seed) {\n-        allocArrays();\n         setSeed(seed);\n     }\n \n      * to the current time.\n      */\n     public ISAACRandom(int[] seed) {\n-        allocArrays();\n         setSeed(seed);\n-    }\n-\n-    /** Allocate the pools arrays. */\n-    private void allocArrays() {\n-        rsl = new int[SIZE];\n-        mem = new int[SIZE];\n-        arr = new int[8];\n     }\n \n     /** {@inheritDoc} */", "timestamp": 1328199075, "metainfo": ""}