{"sha": "9893a19af5809f9f40c1b51ec283885a3d910d2a", "log": "MATH-873 Removed usage of \"maximum number of evaluations\" in a place where it altered the algorithm's core behaviour (whereas it should only serve as a processing time limit).   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n         cs = (mueff + 2.) / (dimension + mueff + 3.);\n         damps = (1. + 2. * Math.max(0, Math.sqrt((mueff - 1.) /\n                 (dimension + 1.)) - 1.)) *\n-                Math.max(0.3, 1. - dimension /\n-                        (1e-6 + Math.min(maxIterations, getMaxEvaluations() /\n-                                lambda))) + cs; // minor increment\n+                Math.max(0.3,\n+                         1. - dimension / (1e-6 + maxIterations)) + cs; // minor increment\n         ccov1 = 2. / ((dimension + 1.3) * (dimension + 1.3) + mueff);\n         ccovmu = Math.min(1 - ccov1, 2. * (mueff - 2. + 1. / mueff) /\n                 ((dimension + 2.) * (dimension + 2.) + mueff));", "timestamp": 1350308023, "metainfo": ""}