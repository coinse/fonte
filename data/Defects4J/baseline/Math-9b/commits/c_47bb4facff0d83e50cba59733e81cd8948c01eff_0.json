{"sha": "47bb4facff0d83e50cba59733e81cd8948c01eff", "log": "Let's not waste semi-colons ...  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java\n+++ b/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java\n     if (c <= inPlaneThreshold * k.getNorm() * u2Prime.getNorm()) {\n       // the (q1, q2, q3) vector is also close to the (u1, u3) plane,\n       // it is almost aligned with u1: we try (u2, u3) and (v2, v3)\n-      k = v2Su2.crossProduct(v3Su3);;\n-      c = k.dotProduct(u2.crossProduct(u3));;\n+      k = v2Su2.crossProduct(v3Su3);\n+      c = k.dotProduct(u2.crossProduct(u3));\n \n       if (c <= 0) {\n         // the (q1, q2, q3) vector is aligned with everything\n--- a/src/test/java/org/apache/commons/math/ode/events/EventStateTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/events/EventStateTest.java\n             y[0] += 1.0;\n         }\n \n-    };\n+    }\n \n \n }\n--- a/src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java\n             }\n             return this.gradient;\n         }\n-    };\n+    }\n }", "timestamp": 1320401019, "metainfo": ""}