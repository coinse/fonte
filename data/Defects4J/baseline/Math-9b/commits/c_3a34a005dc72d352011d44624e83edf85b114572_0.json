{"sha": "3a34a005dc72d352011d44624e83edf85b114572", "log": "Javadoc.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n      * themselves is +1.</p>\n      * @param parameters number of free parameters\n      * @param order derivation order\n-     * @param index index of the variable (from 0 to {@code variables - 1})\n+     * @param index index of the variable (from 0 to {@code parameters - 1})\n      * @param value value of the variable\n-     * @exception NumberIsTooLargeException if index is equal to variables or larger\n+     * @exception NumberIsTooLargeException if {@code index >= parameters}.\n      * @see #DerivativeStructure(int, int, double)\n      */\n     public DerivativeStructure(final int parameters, final int order,\n         }\n \n         if (order > 0) {\n-            // the derivative of the variable with respect to itself is 1.0\n+            // the derivative of the variable with respect to itself is 1.\n             data[DSCompiler.getCompiler(index, order).getSize()] = 1.0;\n         }\n ", "timestamp": 1354195630, "metainfo": ""}