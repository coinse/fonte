{"sha": "3771443378c6221f1a79b9ceac9efb20c659e4bd", "log": "MATH-795: final clean-up of ArrayRealVectorTest.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n  */\n package org.apache.commons.math3.linear;\n \n-import java.io.Serializable;\n-\n-import org.apache.commons.math3.analysis.UnivariateFunction;\n import org.apache.commons.math3.exception.MathIllegalArgumentException;\n import org.junit.Assert;\n import org.junit.Test;\n     }\n \n     @Test\n-    public void testDataInOut() {\n-        final double[] vec1 = {1d, 2d, 3d};\n-        final double[] vec3 = {7d, 8d, 9d};\n-\n-        ArrayRealVector v1 = new ArrayRealVector(vec1);\n-\n-        RealVector v_copy = v1.copy();\n-        Assert.assertEquals(\"testData len\", 3, v_copy.getDimension());\n-        Assert.assertNotSame(\"testData not same object \", v1.getDataRef(), v_copy.toArray());\n-\n-        double[] a_double = v1.toArray();\n-        Assert.assertEquals(\"testData len\", 3, a_double.length);\n-        Assert.assertNotSame(\"testData not same object \", v1.getDataRef(), a_double);\n+    public void testGetDataRef() {\n+        final double[] data = {1d, 2d, 3d, 4d};\n+        final ArrayRealVector v = new ArrayRealVector(data);\n+        v.getDataRef()[0] = 0d;\n+        Assert.assertEquals(\"\", 0d, v.getEntry(0), 0);\n     }\n \n     @Test\n     public void testPredicates() {\n-\n-        final ArrayRealVector v = (ArrayRealVector) create(new double[] { 0, 1, 2 });\n-        Assert.assertFalse(v.equals(v.getDataRef()));\n \n         Assert.assertEquals(create(new double[] { Double.NaN, 1, 2 }).hashCode(),\n                      create(new double[] { 0, Double.NaN, 2 }).hashCode());", "timestamp": 1341603060, "metainfo": ""}