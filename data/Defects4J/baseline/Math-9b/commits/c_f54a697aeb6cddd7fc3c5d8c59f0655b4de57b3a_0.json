{"sha": "f54a697aeb6cddd7fc3c5d8c59f0655b4de57b3a", "log": "[MATH-235] Added a hasComplexEigenvalues method.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java\n+++ b/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java\n     }\n \n     /**\n+     * Returns whether the calculated eigen values are complex or real.\n+     * <p>The method performs a zero check for each element of the\n+     * {@link #getImagEigenvalues()} array and returns {@code true} if any\n+     * element is not equal to zero.\n+     *\n+     * @return {@code true} if the eigen values are complex, {@code false} otherwise\n+     * @since 3.1\n+     */\n+    public boolean hasComplexEigenvalues() {\n+        for (int i = 0; i < imagEigenvalues.length; i++) {\n+            if (!Precision.equals(imagEigenvalues[i], 0.0, epsilon)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n      * Gets a copy of the real parts of the eigenvalues of the original matrix.\n      *\n      * @return a copy of the real parts of the eigenvalues of the original matrix.\n      * complex eigenvalues\n      */\n     public DecompositionSolver getSolver() {\n-        for (int i = 0; i < imagEigenvalues.length; i++) {\n-            if (imagEigenvalues[i] != 0.0) {\n-                throw new MathUnsupportedOperationException();\n-            }\n+        if (hasComplexEigenvalues()) {\n+            throw new MathUnsupportedOperationException();\n         }\n         return new Solver(realEigenvalues, imagEigenvalues, eigenvectors);\n     }", "timestamp": 1343074792, "metainfo": ""}