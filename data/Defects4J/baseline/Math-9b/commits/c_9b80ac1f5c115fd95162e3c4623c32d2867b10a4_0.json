{"sha": "9b80ac1f5c115fd95162e3c4623c32d2867b10a4", "log": "Make some private fields final  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java\n+++ b/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java\n     /**\n      * Interpolating points (abscissas).\n      */\n-    private double x[];\n+    private final double x[];\n \n     /**\n      * Function values at interpolating points.\n      */\n-    private double y[];\n+    private final double y[];\n \n     /**\n      * Whether the polynomial coefficients are available.\n--- a/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java\n+++ b/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java\n     /**\n      * Centers of the Newton polynomial.\n      */\n-    private double c[];\n+    private final double c[];\n \n     /**\n      * When all c[i] = 0, a[] becomes normal polynomial coefficients,\n      * i.e. a[i] = coefficients[i].\n      */\n-    private double a[];\n+    private final double a[];\n \n     /**\n      * Whether the polynomial coefficients are available.\n--- a/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java\n+++ b/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java\n     implements DifferentiableUnivariateRealFunction {\n \n     /** Spline segment interval delimiters (knots).   Size is n+1 for n segments. */\n-    private double knots[];\n+    private final double knots[];\n \n     /**\n      * The polynomial functions that make up the spline.  The first element\n      * evaluating these functions at <code>(x - knot[i])</code> where i is the\n      * knot segment to which x belongs.\n      */\n-    private PolynomialFunction polynomials[] = null;\n+    private final PolynomialFunction polynomials[];\n \n     /**\n      * Number of spline segments = number of polynomials\n      *  = number of partition points - 1\n      */\n-    private int n = 0;\n+    private final int n;\n \n \n     /**\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java\n      * @deprecated as of 2.0 the function is not stored anymore in the instance\n      */\n     @Deprecated\n-    private PolynomialFunction p;\n+    private final PolynomialFunction p;\n \n     /**\n      * Construct a solver for the given function.\n      */\n     public LaguerreSolver() {\n         super(100, 1E-6);\n+        p = null;\n     }\n \n     /**", "timestamp": 1268529347, "metainfo": ""}