{"sha": "ef69daf8123c2f85e7e82912946e02180eba8862", "log": "Added checkstyle filter for exceptional catch of RuntimeException.  These catch occur in multi-start optimizers. The exceptions are caught and stored, and if all restarts fail, then one of the stored RuntimeException is rethrown. The purpose of multi-start is both to allow some trials to fail and to avoid being trapped in a local extremum. Catching RuntimeException is therefore mandatory here, and not dangerous since we rethrow them as needed.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java\n \n         // Multi-start loop.\n         for (int i = 0; i < starts; ++i) {\n+            // CHECKSTYLE: stop IllegalCatch\n             try {\n                 optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, goal,\n                                                i == 0 ? startPoint : generator.nextVector());\n                 lastException = mue;\n                 optima[i] = null;\n             }\n+            // CHECKSTYLE: resume IllegalCatch\n \n             totalEvaluations += optimizer.getEvaluations();\n         }\n--- a/src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java\n         // Multi-start loop.\n         for (int i = 0; i < starts; ++i) {\n \n+            // CHECKSTYLE: stop IllegalCatch\n             try {\n                 optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, target, weights,\n                                                i == 0 ? startPoint : generator.nextVector());\n                 lastException = mue;\n                 optima[i] = null;\n             }\n+            // CHECKSTYLE: resume IllegalCatch\n \n             totalEvaluations += optimizer.getEvaluations();\n         }\n--- a/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java\n \n         // Multi-start loop.\n         for (int i = 0; i < starts; ++i) {\n+            // CHECKSTYLE: stop IllegalCatch\n             try {\n                 final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);\n                 optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, goal, min, max, s);\n                 lastException = mue;\n                 optima[i] = null;\n             }\n+            // CHECKSTYLE: resume IllegalCatch\n \n             totalEvaluations += optimizer.getEvaluations();\n         }", "timestamp": 1317972351, "metainfo": ""}