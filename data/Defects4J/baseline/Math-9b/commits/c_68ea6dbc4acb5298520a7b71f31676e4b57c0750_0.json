{"sha": "68ea6dbc4acb5298520a7b71f31676e4b57c0750", "log": "improved test coverage  ", "commit": "\n--- a/src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java\n       TestProblem1 pb = new TestProblem1();\n       double minStep = 0.1 * (pb.getFinalTime() - pb.getInitialTime());\n       double maxStep = pb.getFinalTime() - pb.getInitialTime();\n-      double scalAbsoluteTolerance = 1.0e-15;\n-      double scalRelativeTolerance = 1.0e-15;\n+      double[] vecAbsoluteTolerance = { 1.0e-15, 1.0e-16 };\n+      double[] vecRelativeTolerance = { 1.0e-15, 1.0e-16 };\n \n       FirstOrderIntegrator integ = new DormandPrince54Integrator(minStep, maxStep,\n-                                                                 scalAbsoluteTolerance,\n-                                                                 scalRelativeTolerance);\n+                                                                 vecAbsoluteTolerance,\n+                                                                 vecRelativeTolerance);\n       TestProblemHandler handler = new TestProblemHandler(pb);\n       integ.setStepHandler(handler);\n       integ.integrate(pb,\n--- a/src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java\n       TestProblem1 pb = new TestProblem1();\n       double minStep = 0.1 * (pb.getFinalTime() - pb.getInitialTime());\n       double maxStep = pb.getFinalTime() - pb.getInitialTime();\n-      double scalAbsoluteTolerance = 1.0e-15;\n-      double scalRelativeTolerance = 1.0e-15;\n+      double[] vecAbsoluteTolerance = { 1.0e-15, 1.0e-16 };\n+      double[] vecRelativeTolerance = { 1.0e-15, 1.0e-16 };\n \n       FirstOrderIntegrator integ = new DormandPrince853Integrator(minStep, maxStep,\n-                                                                  scalAbsoluteTolerance,\n-                                                                  scalRelativeTolerance);\n+                                                                  vecAbsoluteTolerance,\n+                                                                  vecRelativeTolerance);\n       TestProblemHandler handler = new TestProblemHandler(pb);\n       integ.setStepHandler(handler);\n       integ.integrate(pb,\n--- a/src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java\n       TestProblem1 pb  = new TestProblem1();\n       double minStep   = 0.1 * (pb.getFinalTime() - pb.getInitialTime());\n       double maxStep   = pb.getFinalTime() - pb.getInitialTime();\n-      double absTolerance = 1.0e-20;\n-      double relTolerance = 1.0e-20;\n+      double[] vecAbsoluteTolerance = { 1.0e-20, 1.0e-21 };\n+      double[] vecRelativeTolerance = { 1.0e-20, 1.0e-21 };\n \n       FirstOrderIntegrator integ =\n         new GraggBulirschStoerIntegrator(minStep, maxStep,\n-                                         absTolerance, relTolerance);\n+                                         vecAbsoluteTolerance, vecRelativeTolerance);\n       TestProblemHandler handler = new TestProblemHandler(pb);\n       integ.setStepHandler(handler);\n       integ.integrate(pb,\n--- a/src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java\n       TestProblem1 pb = new TestProblem1();\n       double minStep = 0.1 * (pb.getFinalTime() - pb.getInitialTime());\n       double maxStep = pb.getFinalTime() - pb.getInitialTime();\n-      double scalAbsoluteTolerance = 1.0e-15;\n-      double scalRelativeTolerance = 1.0e-15;\n+      double[] vecAbsoluteTolerance = { 1.0e-15, 1.0e-16 };\n+      double[] vecRelativeTolerance = { 1.0e-15, 1.0e-16 };\n \n       FirstOrderIntegrator integ = new HighamHall54Integrator(minStep, maxStep,\n-                                                              scalAbsoluteTolerance,\n-                                                              scalRelativeTolerance);\n+                                                              vecAbsoluteTolerance,\n+                                                              vecRelativeTolerance);\n       TestProblemHandler handler = new TestProblemHandler(pb);\n       integ.setStepHandler(handler);\n       integ.integrate(pb,", "timestamp": 1193411195, "metainfo": ""}