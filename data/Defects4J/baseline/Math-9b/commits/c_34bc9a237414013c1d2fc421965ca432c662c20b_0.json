{"sha": "34bc9a237414013c1d2fc421965ca432c662c20b", "log": "Added load(URL). Addressing PR #25972, reported by Bill Barker.   ", "commit": "\n--- a/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n \n import java.io.IOException;\n import java.io.File;\n+import java.net.URL;\n import java.util.ArrayList;\n \n import org.apache.commons.math.stat.DescriptiveStatistics;\n  * build grouped frequnecy histograms representing the input data or to\n  * generate random values \"like\" those in the input file -- i.e., the values\n  * generated will follow the distribution of the values in the file.\n- * @version $Revision: 1.10 $ $Date: 2003/11/15 16:01:37 $\n+ * @version $Revision: 1.11 $ $Date: 2004/01/11 07:19:52 $\n  */\n public interface EmpiricalDistribution {\n     \n     /**\n-     * Computes the empirical distribution from the input file\n+     * Computes the empirical distribution from the input file.\n      * @param filePath fully qualified name of a file in the local file system\n      * @throws IOException if an IO error occurs\n      */\n     void load(String filePath) throws IOException; \n     \n     /**\n-     * Computes the empirical distribution from the input file\n+     * Computes the empirical distribution from the input file.\n+     * @param file the input file\n+     * @throws IOException if an IO error occurs\n+     */\n+    void load(File file) throws IOException;\n+    \n+    /**\n+     * Computes the empirical distribution using data read from a URL.\n      * @param file url of the input file\n      * @throws IOException if an IO error occurs\n      */\n-    void load(File file) throws IOException;\n+    void load(URL url) throws IOException;\n     \n     /** \n      * Generates a random value from this distribution.", "timestamp": 1073805592, "metainfo": ""}