{"sha": "715bce682f1469fade8b5160ab6e022a0ca9bcbf", "log": "MATH-874 Added \"@Deprecated\" annotation.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public abstract class AbstractConvergenceChecker<PAIR>\n     implements ConvergenceChecker<PAIR> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class BaseMultivariateMultiStartOptimizer<FUNC extends MultivariateFunction>\n     implements BaseMultivariateOptimizer<FUNC> {\n     /** Underlying classical optimizer. */\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface BaseMultivariateOptimizer<FUNC extends MultivariateFunction>\n     extends BaseOptimizer<PointValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface BaseMultivariateSimpleBoundsOptimizer<FUNC extends MultivariateFunction>\n     extends BaseMultivariateOptimizer<FUNC> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class BaseMultivariateVectorMultiStartOptimizer<FUNC extends MultivariateVectorFunction>\n     implements BaseMultivariateVectorOptimizer<FUNC> {\n     /** Underlying classical optimizer. */\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface BaseMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>\n     extends BaseOptimizer<PointVectorValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface BaseOptimizer<PAIR> {\n     /**\n      * Get the maximal number of function evaluations.\n--- a/src/main/java/org/apache/commons/math3/optimization/ConvergenceChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/ConvergenceChecker.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface ConvergenceChecker<PAIR> {\n     /**\n      * Check if the optimization algorithm has converged.\n--- a/src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java\n  * @since 2.0\n  * @deprecated as of 3.1 replaced by {@link MultivariateDifferentiableMultiStartOptimizer}\n  */\n+@Deprecated\n public class DifferentiableMultivariateMultiStartOptimizer\n     extends BaseMultivariateMultiStartOptimizer<DifferentiableMultivariateFunction>\n     implements DifferentiableMultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/GoalType.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/GoalType.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public enum GoalType implements Serializable {\n \n     /** Maximization goal. */\n--- a/src/main/java/org/apache/commons/math3/optimization/InitialGuess.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/InitialGuess.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class InitialGuess implements OptimizationData {\n     /** Initial guess. */\n     private final double[] init;\n--- a/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java\n  * @since 2.0\n  */\n \n+@Deprecated\n public class LeastSquaresConverter implements MultivariateFunction {\n \n     /** Underlying vectorial function. */\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class MultivariateDifferentiableMultiStartOptimizer\n     extends BaseMultivariateMultiStartOptimizer<MultivariateDifferentiableFunction>\n     implements MultivariateDifferentiableOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public interface MultivariateDifferentiableOptimizer\n     extends BaseMultivariateOptimizer<MultivariateDifferentiableFunction> {}\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class MultivariateDifferentiableVectorMultiStartOptimizer\n     extends BaseMultivariateVectorMultiStartOptimizer<MultivariateDifferentiableVectorFunction>\n     implements MultivariateDifferentiableVectorOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public interface MultivariateDifferentiableVectorOptimizer\n     extends BaseMultivariateVectorOptimizer<MultivariateDifferentiableVectorFunction> {}\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class MultivariateMultiStartOptimizer\n     extends BaseMultivariateMultiStartOptimizer<MultivariateFunction>\n     implements MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/MultivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/MultivariateOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public interface MultivariateOptimizer\n     extends BaseMultivariateOptimizer<MultivariateFunction> {}\n--- a/src/main/java/org/apache/commons/math3/optimization/OptimizationData.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/OptimizationData.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public interface OptimizationData {}\n--- a/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class PointValuePair extends Pair<double[], Double> implements Serializable {\n \n     /** Serializable UID. */\n--- a/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class PointVectorValuePair extends Pair<double[], double[]> implements Serializable {\n \n     /** Serializable UID. */\n--- a/src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class SimpleBounds implements OptimizationData {\n     /** Lower bounds. */\n     private final double[] lower;\n--- a/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class SimplePointChecker<PAIR extends Pair<double[], ? extends Object>>\n     extends AbstractConvergenceChecker<PAIR> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class SimpleValueChecker\n     extends AbstractConvergenceChecker<PointValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class SimpleVectorValueChecker\n     extends AbstractConvergenceChecker<PointVectorValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/Target.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/Target.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class Target implements OptimizationData {\n     /** Target values (of the objective vector function). */\n     private final double[] target;\n--- a/src/main/java/org/apache/commons/math3/optimization/Weight.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/Weight.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class Weight implements OptimizationData {\n     /** Weight matrix. */\n     private final RealMatrix weightMatrix;\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public abstract class AbstractSimplex implements OptimizationData {\n     /** Simplex. */\n     private PointValuePair[] simplex;\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class BOBYQAOptimizer\n     extends BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction>\n     implements MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java\n  * @version $Id$\n  * @since 2.2\n  */\n+@Deprecated\n public abstract class BaseAbstractMultivariateOptimizer<FUNC extends MultivariateFunction>\n     implements BaseMultivariateOptimizer<FUNC> {\n     /** Evaluations counter. */\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public abstract class BaseAbstractMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>\n     implements BaseMultivariateVectorOptimizer<FUNC> {\n     /** Evaluations counter. */\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n  * @since 3.0\n  */\n \n+@Deprecated\n public class CMAESOptimizer\n     extends BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction>\n     implements MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class MultiDirectionalSimplex extends AbstractSimplex {\n     /** Default value for {@link #khi}: {@value}. */\n     private static final double DEFAULT_KHI = 2;\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java\n  * @since 3.0\n  */\n \n+@Deprecated\n public class MultivariateFunctionMappingAdapter implements MultivariateFunction {\n \n     /** Underlying bounded function. */\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java\n  * @since 3.0\n  */\n \n+@Deprecated\n public class MultivariateFunctionPenaltyAdapter implements MultivariateFunction {\n \n     /** Underlying bounded function. */\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class NelderMeadSimplex extends AbstractSimplex {\n     /** Default value for {@link #rho}: {@value}. */\n     private static final double DEFAULT_RHO = 1;\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java\n  * @version $Id$\n  * @since 2.2\n  */\n+@Deprecated\n public class PowellOptimizer\n     extends BaseAbstractMultivariateOptimizer<MultivariateFunction>\n     implements MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class SimplexOptimizer\n     extends BaseAbstractMultivariateOptimizer<MultivariateFunction>\n     implements MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class CurveFitter<T extends ParametricUnivariateFunction> {\n \n     /** Optimizer to use for the fitting.\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java\n  * @since 2.2\n  * @version $Id$\n  */\n+@Deprecated\n public class GaussianFitter extends CurveFitter<Gaussian.Parametric> {\n     /**\n      * Constructs an instance using the specified optimizer.\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {\n     /**\n      * Simple constructor.\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class PolynomialFitter extends CurveFitter<PolynomialFunction.Parametric> {\n     /** Polynomial degree.\n      * @deprecated\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class WeightedObservedPoint implements Serializable {\n \n     /** Serializable version id. */\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public abstract class AbstractDifferentiableOptimizer\n     extends BaseAbstractMultivariateOptimizer<MultivariateDifferentiableFunction> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java\n  * @version $Id$\n  * @since 1.2\n  */\n+@Deprecated\n public abstract class AbstractLeastSquaresOptimizer\n     extends BaseAbstractMultivariateVectorOptimizer<DifferentiableMultivariateVectorFunction>\n     implements DifferentiableMultivariateVectorOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optimization/general/ConjugateGradientFormula.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/ConjugateGradientFormula.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public enum ConjugateGradientFormula {\n \n     /** Fletcher-Reeves formula. */\n--- a/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java\n  * @since 2.0\n  *\n  */\n+@Deprecated\n public class GaussNewtonOptimizer extends AbstractLeastSquaresOptimizer {\n     /** Indicator for using LU decomposition. */\n     private final boolean useLU;\n--- a/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java\n  * @since 2.0\n  *\n  */\n+@Deprecated\n public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {\n     /** Number of solved point. */\n     private int solvedCols;\n--- a/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java\n  * @since 2.0\n  *\n  */\n+@Deprecated\n public class NonLinearConjugateGradientOptimizer\n     extends AbstractScalarDifferentiableOptimizer {\n     /** Update formula for the beta parameter. */\n--- a/src/main/java/org/apache/commons/math3/optimization/general/Preconditioner.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/general/Preconditioner.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public interface Preconditioner {\n     /**\n      * Precondition a search direction.\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public abstract class AbstractLinearOptimizer implements LinearOptimizer {\n \n     /** Default maximal number of iterations allowed. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class LinearConstraint implements Serializable {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class LinearObjectiveFunction implements Serializable {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public interface LinearOptimizer {\n \n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class NoFeasibleSolutionException extends MathIllegalStateException {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public enum Relationship {\n \n     /** Equality relationship. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class SimplexSolver extends AbstractLinearOptimizer {\n \n     /** Default amount of error to accept for algorithm convergence. */\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class UnboundedSolutionException extends MathIllegalStateException {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public abstract class BaseAbstractUnivariateOptimizer\n     implements UnivariateOptimizer {\n     /** Convergence checker. */\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface BaseUnivariateOptimizer<FUNC extends UnivariateFunction>\n     extends BaseOptimizer<UnivariatePointValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java\n  * @version $Id$\n  * @since 2.2\n  */\n+@Deprecated\n public class BracketFinder {\n     /** Tolerance to avoid division by zero. */\n     private static final double EPS_MIN = 1e-21;\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java\n  * @version $Id$\n  * @since 2.0\n  */\n+@Deprecated\n public class BrentOptimizer extends BaseAbstractUnivariateOptimizer {\n     /**\n      * Golden section.\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java\n  * @version $Id$\n  * @since 3.1\n  */\n+@Deprecated\n public class SimpleUnivariateValueChecker\n     extends AbstractConvergenceChecker<UnivariatePointValuePair> {\n     /**\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class UnivariateMultiStartOptimizer<FUNC extends UnivariateFunction>\n     implements BaseUnivariateOptimizer<FUNC> {\n     /** Underlying classical optimizer. */\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateOptimizer.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public interface UnivariateOptimizer\n     extends BaseUnivariateOptimizer<UnivariateFunction> {}\n--- a/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java\n  * @version $Id$\n  * @since 3.0\n  */\n+@Deprecated\n public class UnivariatePointValuePair implements Serializable {\n     /** Serializable version identifier. */\n     private static final long serialVersionUID = 1003888396256744753L;", "timestamp": 1355571155, "metainfo": ""}