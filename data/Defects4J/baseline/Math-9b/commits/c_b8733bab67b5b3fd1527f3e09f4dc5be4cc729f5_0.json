{"sha": "b8733bab67b5b3fd1527f3e09f4dc5be4cc729f5", "log": "Javadoc.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java\n+++ b/src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java\n /**\n  * This interface specifies how to check if an optimization algorithm has\n  * converged.\n+ * <br/>\n  * Deciding if convergence has been reached is a problem-dependent issue. The\n  * user should provide a class implementing this interface to allow the\n  * optimization algorithm to stop its search according to the problem at hand.\n+ * <br/>\n+ * For convenience, three implementations that fit simple needs are already\n+ * provided: {@link SimpleValueChecker}, {@link SimpleVectorValueChecker} and\n+ * {@link SimplePointChecker}. The first two consider that convergence is\n+ * reached when the objective function value does not change much anymore, it\n+ * does not use the point set at all.\n+ * The third one considers that convergence is reached when the input point\n+ * set does not change much anymore, it does not use objective function value\n+ * at all.\n  *\n  * @param <PAIR> Type of the (point, objective value) pair.\n  *\n+ * @see org.apache.commons.math.optimization.SimplePointChecker\n  * @see org.apache.commons.math.optimization.SimpleValueChecker\n- * @see org.apache.commons.math.optimization.SimplePointChecker<PointValuePair>\n+ * @see org.apache.commons.math.optimization.SimpleVectorValueChecker\n  *\n  * @version $Id$\n  * @since 3.0\n--- a/src/main/java/org/apache/commons/math/optimization/SimplePointChecker.java\n+++ b/src/main/java/org/apache/commons/math/optimization/SimplePointChecker.java\n  * smaller than another threshold.\n  *\n  * @param <PAIR> Type of the (point, value) pair.\n- * @param <V> Type of the \"value\" part of the pair (not used by this class).\n+ * The type of the \"value\" part of the pair (not used by this class).\n  *\n  * @version $Id$\n  * @since 3.0", "timestamp": 1329141631, "metainfo": ""}