{"sha": "862e1b88bf4216eb1ed83504606ef4346dfc2cfa", "log": "removed the deprecated getIdentity method  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n     //------------------------ Protected methods\n     \n     /**\n-     * Returns <code>dimension x dimension</code> identity matrix.\n-     *\n-     * @param dimension dimension of identity matrix to generate\n-     * @return identity matrix\n-     * @throws IllegalArgumentException if dimension is not positive\n-     * @deprecated  use {@link MatrixUtils#createBigIdentityMatrix}\n-     */\n-    protected BigMatrix getIdentity(int dimension) {\n-        return MatrixUtils.createBigIdentityMatrix(dimension);\n-    }\n-    \n-    /**\n      *  Returns the LU decomposition as a BigMatrix.\n      *  Returns a fresh copy of the cached LU matrix if this has been computed; \n      *  otherwise the composition is computed and cached for use by other methods.   \n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n     //------------------------ Protected methods\n \n     /**\n-     * Returns <code>dimension x dimension</code> identity matrix.\n-     *\n-     * @param dimension dimension of identity matrix to generate\n-     * @return identity matrix\n-     * @throws IllegalArgumentException  if dimension is not positive\n-     * @deprecated use {@link MatrixUtils#createRealIdentityMatrix}\n-     */\n-    protected RealMatrix getIdentity(int dimension) {\n-        return MatrixUtils.createRealIdentityMatrix(dimension);\n-    }\n-\n-    /**\n      *  Returns the LU decomposition as a RealMatrix.\n      *  Returns a fresh copy of the cached LU matrix if this has been computed;\n      *  otherwise the composition is computed and cached for use by other methods.", "timestamp": 1209043334, "metainfo": ""}