{"sha": "34a8ad180e803fa664494e61d6c735c89d9b8593", "log": "improved test coverage  ", "commit": "\n--- a/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java\n+++ b/src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.MathException;\n+import org.apache.commons.math.MaxIterationsExceededException;\n import org.apache.commons.math.analysis.QuinticFunction;\n import org.apache.commons.math.analysis.SinFunction;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n     }\n \n     @Test\n+    public void testQuinticMax() throws MathException {\n+        // The quintic function has zeros at 0, +-0.5 and +-1.\n+        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,\n+        UnivariateRealFunction f = new QuinticFunction();\n+        UnivariateRealOptimizer minimizer = new BrentOptimizer();\n+        assertEquals(0.27195613, minimizer.optimize(f, GoalType.MAXIMIZE, 0.2, 0.3), 1.0e-8);\n+        minimizer.setMaximalIterationCount(30);\n+        try {\n+            minimizer.optimize(f, GoalType.MAXIMIZE, 0.2, 0.3);\n+            fail(\"an exception should have been thrown\");\n+        } catch (MaxIterationsExceededException miee) {\n+            // expected\n+        } catch (Exception e) {\n+            fail(\"wrong exception caught\");\n+        }\n+    }\n+\n+    @Test\n     public void testMinEndpoints() throws Exception {\n         UnivariateRealFunction f = new SinFunction();\n         UnivariateRealOptimizer solver = new BrentOptimizer();", "timestamp": 1248540118, "metainfo": ""}