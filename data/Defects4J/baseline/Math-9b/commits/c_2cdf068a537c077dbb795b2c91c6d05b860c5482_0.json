{"sha": "2cdf068a537c077dbb795b2c91c6d05b860c5482", "log": "Added log function. JIRA: MATH-158    ", "commit": "\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n         }\n         return result;\n     }\n-\n+    \n+    /** \n+     * <p>Returns the \n+     * <a href=\"http://mathworld.wolfram.com/Logarithm.html\">logarithm</a>\n+     * for base <code>b</code> of <code>x</code>.\n+     * </p>\n+     * <p>Returns <code>NaN<code> if either argument is negative.  If \n+     * <code>base</code> is 0 and <code>x</code> is positive, 0 is returned.\n+     * If <code>base</code> is positive and <code>x</code> is 0, \n+     * <code>Double.NEGATIVE_INFINITY</code> is returned.  If both arguments\n+     * are 0, the result is <code>NaN</code>.</p>\n+     * \n+     * @param base the base of the logarithm, must be greater than 0\n+     * @param x argument, must be greater than 0\n+     * @return the value of the logarithm - the number y such that base^y = x.\n+     */ \n+    public static double log(double base, double x) {\n+    \treturn Math.log(x)/Math.log(base);\n+    }\n+    \n     /**\n      * Returns a <code>double</code> representation of the <a\n      * href=\"http://mathworld.wolfram.com/BinomialCoefficient.html\"> Binomial\n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n         } \n     }\n     \n+    public void testLog() {\n+    \tassertEquals(2.0, MathUtils.log(2,4), 0);\n+    \tassertEquals(3.0, MathUtils.log(2,8), 0);\n+        assertTrue(Double.isNaN(MathUtils.log(-1, 1)));\n+        assertTrue(Double.isNaN(MathUtils.log(1, -1)));\n+        assertTrue(Double.isNaN(MathUtils.log(0, 0)));\n+        assertEquals(0, MathUtils.log(0, 10), 0);\n+        assertEquals(Double.NEGATIVE_INFINITY, MathUtils.log(10, 0), 0);\n+    }\n+    \n     public void testGcd() {\n         int a = 30;\n         int b = 50;", "timestamp": 1182382790, "metainfo": ""}