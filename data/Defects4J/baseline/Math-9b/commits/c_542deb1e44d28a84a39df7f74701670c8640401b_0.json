{"sha": "542deb1e44d28a84a39df7f74701670c8640401b", "log": "Removed dead code.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n /**\n  * Implements Chi-Square test statistics defined in the {@link ChiSquareTest} interface.\n  *\n- * @version $Revision: 1.8 $ $Date: 2004/06/23 16:26:14 $\n+ * @version $Revision: 1.9 $ $Date: 2004/06/26 21:20:21 $\n  */\n public class ChiSquareTestImpl implements ChiSquareTest {\n     \n      * @return true if all entries of the array are non-negative\n      * @throws NullPointerException if input array is null\n      */\n-    private boolean isNonNegative(double[] in) {\n-        for (int i = 0; i < in.length; i ++) {\n-            if (in[i] < 0) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-    \n-    /**\n-     * Returns true iff all entries of the input array are > 0.\n-     * Returns true if the array is non-null, but empty\n-     * \n-     * @param in array to be tested\n-     * @return true if all entries of the array are positive\n-     * @throws NullPointerException if input array is null\n-     */\n-    private boolean isPositive(long[] in) {\n-        for (int i = 0; i < in.length; i ++) {\n-            if (in[i] <= 0) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-    \n-    /**\n-     * Returns true iff all entries of the input array are >= 0.\n-     * Returns true if the array is non-null, but empty\n-     * \n-     * @param in array to be tested\n-     * @return true if all entries of the array are non-negative\n-     * @throws NullPointerException if input array is null\n-     */\n     private boolean isNonNegative(long[] in) {\n         for (int i = 0; i < in.length; i ++) {\n             if (in[i] < 0) {", "timestamp": 1088284821, "metainfo": ""}