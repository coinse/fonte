{"sha": "4924022077e6f6270191e07248e90b43ab3158a1", "log": "added a test case and documentation for the new contract about roots bracketing in univariate real solvers (roots exactly at endpoints are now accepted) JIRA: MATH-280  ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java\n \n     /**\n      * Solve for a zero root in the given interval.\n-     * A solver may require that the interval brackets a single zero root.\n+     * <p>A solver may require that the interval brackets a single zero root.\n+     * Solvers that do require bracketing should be able to handle the case\n+     * where one of the endpoints is itself a root.</p>\n      * \n      * @param min the lower bound for the interval.\n      * @param max the upper bound for the interval.\n \n     /**\n      * Solve for a zero root in the given interval.\n-     * A solver may require that the interval brackets a single zero root.\n+     * <p>A solver may require that the interval brackets a single zero root.\n+     * Solvers that do require bracketing should be able to handle the case\n+     * where one of the endpoints is itself a root.</p>\n      * \n      * @param f the function to solve.\n      * @param min the lower bound for the interval.\n \n     /**\n      * Solve for a zero in the given interval, start at startValue.\n-     * A solver may require that the interval brackets a single zero root.\n+     * <p>A solver may require that the interval brackets a single zero root.\n+     * Solvers that do require bracketing should be able to handle the case\n+     * where one of the endpoints is itself a root.</p>\n      * \n      * @param min the lower bound for the interval.\n      * @param max the upper bound for the interval.\n \n     /**\n      * Solve for a zero in the given interval, start at startValue.\n-     * A solver may require that the interval brackets a single zero root.\n+     * <p>A solver may require that the interval brackets a single zero root.\n+     * Solvers that do require bracketing should be able to handle the case\n+     * where one of the endpoints is itself a root.</p>\n      * \n      * @param f the function to solve.\n      * @param min the lower bound for the interval.\n--- a/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java\n+++ b/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java\n         assertTrue(sin.value(result[1]) > 0);\n     }\n     \n+    public void testBracketEndpointRoot() throws MathException {\n+        double[] result = UnivariateRealSolverUtils.bracket(sin, 1.5, 0, 2.0);\n+        assertEquals(0.0, sin.value(result[0]), 1.0e-15);\n+        assertTrue(sin.value(result[1]) > 0);\n+    }\n+    \n     public void testBadParameters() throws MathException {\n         try { // null function\n             UnivariateRealSolverUtils.bracket(null, 1.5, 0, 2.0);", "timestamp": 1246973960, "metainfo": ""}