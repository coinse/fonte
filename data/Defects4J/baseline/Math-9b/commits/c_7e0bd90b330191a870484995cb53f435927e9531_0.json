{"sha": "7e0bd90b330191a870484995cb53f435927e9531", "log": "improved test coverage  ", "commit": "\n--- a/src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java\n \n     assertTrue(handler.getLastError() < 2.0e-13);\n     assertTrue(handler.getMaximalError() < 4.0e-12);\n-\n+    assertEquals(\"classical Runge-Kutta\", integ.getName());\n   }\n \n   public void testBigStep()\n--- a/src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java\n                     pb.getInitialTime(), pb.getInitialState(),\n                     pb.getFinalTime(), new double[pb.getDimension()]);\n     assertTrue(handler.wasLastSeen());\n+    assertEquals(\"Dormand-Prince 5(4)\", integ.getName());\n \n   }\n \n--- a/src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java\n     integ.integrate(pb,\n                     pb.getInitialTime(), pb.getInitialState(),\n                     pb.getFinalTime(), new double[pb.getDimension()]);\n+    assertEquals(\"Dormand-Prince 8 (5, 3)\", integ.getName());\n   }\n \n   public void testNoDenseOutput()\n--- a/src/test/org/apache/commons/math/ode/EulerIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/EulerIntegratorTest.java\n \n    assertTrue(handler.getLastError() < 2.0e-4);\n    assertTrue(handler.getMaximalError() < 1.0e-3);\n+   assertEquals(\"Euler\", integ.getName());\n \n   }\n \n--- a/src/test/org/apache/commons/math/ode/GillIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/GillIntegratorTest.java\n \n     assertTrue(handler.getLastError() < 2.0e-13);\n     assertTrue(handler.getMaximalError() < 4.0e-12);\n+    assertEquals(\"Gill\", integ.getName());\n \n   }\n \n--- a/src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java\n     integ.integrate(pb,\n                     pb.getInitialTime(), pb.getInitialState(),\n                     pb.getFinalTime(), new double[pb.getDimension()]);\n+    assertEquals(\"Gragg-Bulirsch-Stoer\", integ.getName());\n   }\n \n   public void testUnstableDerivative()\n--- a/src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java\n     integ.integrate(pb,\n                     pb.getInitialTime(), pb.getInitialState(),\n                     pb.getFinalTime(), new double[pb.getDimension()]);\n+    assertEquals(\"Higham-Hall 5(4)\", integ.getName());\n   }\n \n   private static class KeplerHandler implements StepHandler {\n--- a/src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java\n \n     assertTrue(handler.getLastError() < 2.0e-7);\n     assertTrue(handler.getMaximalError() < 1.0e-6);\n+    assertEquals(\"midpoint\", integ.getName());\n \n   }\n \n--- a/src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java\n+++ b/src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java\n \n     assertTrue(handler.getLastError() < 2.0e-13);\n     assertTrue(handler.getMaximalError() < 4.0e-12);\n+    assertEquals(\"3/8\", integ.getName());\n \n   }\n ", "timestamp": 1193407993, "metainfo": ""}