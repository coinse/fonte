{"sha": "f2dde14f3369c85040d3882de0020827abda8d09", "log": "fixed exception messages arguments types  ", "commit": "\n--- a/src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java\n+++ b/src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java\n    * @param specifier format specifier (to be translated)\n    * @param parts to insert in the format (no translation)\n    */\n-  public NotARotationMatrixException(String specifier, String[] parts) {\n+  public NotARotationMatrixException(String specifier, Object[] parts) {\n     super(specifier, parts);\n   }\n \n--- a/src/java/org/apache/commons/math/geometry/Rotation.java\n+++ b/src/java/org/apache/commons/math/geometry/Rotation.java\n         (m[1].length != 3) || (m[2].length != 3)) {\n       throw new NotARotationMatrixException(\"a {0}x{1} matrix\" +\n                                             \" cannot be a rotation matrix\",\n-                                            new String[] {\n+                                            new Object[] {\n                                               Integer.toString(m.length),\n                                               Integer.toString(m[0].length)\n                                             });\n     if (det < 0.0) {\n       throw new NotARotationMatrixException(\"the closest orthogonal matrix\" +\n                                             \" has a negative determinant {0}\",\n-                                            new String[] {\n+                                            new Object[] {\n                                               Double.toString(det)\n                                             });\n     }\n     // the algorithm did not converge after 10 iterations\n     throw new NotARotationMatrixException(\"unable to orthogonalize matrix\" +\n                                           \" in {0} iterations\",\n-                                          new String[] {\n+                                          new Object[] {\n                                             Integer.toString(i - 1)\n                                           });\n   }", "timestamp": 1203070565, "metainfo": ""}