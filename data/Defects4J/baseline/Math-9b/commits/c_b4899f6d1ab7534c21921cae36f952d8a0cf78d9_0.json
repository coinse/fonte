{"sha": "b4899f6d1ab7534c21921cae36f952d8a0cf78d9", "log": "Really make poissonConsistencyTest use a fixed seed.  Complete intent of r949613.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n     }\n \n     public void testNextPoissonConsistency() throws Exception {\n+        \n+        // Reseed randomGenerator to get fixed sequence\n+        randomData.reSeed(1000);  \n+        \n         // Small integral means\n         for (int i = 1; i < 100; i++) {\n             checkNextPoissonConsistency(i);\n         }\n         // non-integer means\n-        RandomData randomData = new RandomDataImpl();\n         for (int i = 1; i < 10; i++) {\n             checkNextPoissonConsistency(randomData.nextUniform(1, 1000));\n         }\n         final int minExpectedCount = 7;     // Minimum size of expected bin count\n         long maxObservedValue = 0;\n         final double alpha = 0.001;         // Probability of false failure\n-        randomData.reSeed(1000);            // Reseed randomGenerator to get fixed sequence\n         Frequency frequency = new Frequency();\n         for (int i = 0; i < sampleSize; i++) {\n             long value = randomData.nextPoisson(mean);", "timestamp": 1276649165, "metainfo": ""}