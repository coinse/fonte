{"sha": "4c2ddfce919a53f14a47e951a661080e5ef6b3c5", "log": "Document some magic numbers; trailing spaces; other doc tweaks  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n         Double.NaN,\n     };\n \n-    private static final int EXP_FRAC_TABLE_LEN = 1025;\n+    private static final int TWO_POWER_10 = 1024;\n+    private static final int EXP_FRAC_TABLE_LEN = TWO_POWER_10 + 1; // 0, 1/1024, ... 1024/1024\n \n     /** Exponential over the range of 0 - 1 in increments of 2^-10\n      * exp(x/1024) =  expFracTableA[x] + expFracTableB[x].\n+     * 1024 = 2^10\n      */\n     private static final double EXP_FRAC_TABLE_A[] = \n         {\n         +2.0922789888E13d,            \n         +3.55687428096E14d,           \n         +6.402373705728E15d,          \n-        +1.21645100408832E17d,        \n+        +1.21645100408832E17d,\n     };\n             \n \n-    private static final int LN_MANT_LEN = 1024;\n+    private static final int LN_MANT_LEN = 1024; // MAGIC NUMBER\n \n     /** Extended precision logarithm table over the range 1 - 2 in increments of 2^-10. */\n     private static final double LN_MANT[][] =     { \n         {-0.16624879837036133, -2.6033824355191673E-8}\n     };\n \n-    private static final int SINE_TABLE_LEN = 14;\n+    private static final int SINE_TABLE_LEN = 14; // MAGIC NUMBER\n     \n     /** Sine table (high bits). */\n     private static final double SINE_TABLE_A[] =\n \n         // Populate expFracTable\n         for (i = 0; i < EXP_FRAC_TABLE_A.length; i++) {\n-            slowexp(i/1024.0, tmp);\n+            slowexp(i/1024.0, tmp); // TWO_POWER_10\n             EXP_FRAC_TABLE_A[i] = tmp[0];\n             EXP_FRAC_TABLE_B[i] = tmp[1];\n         }\n         printarray(\"COSINE_TABLE_A\", SINE_TABLE_LEN, COSINE_TABLE_A);\n         printarray(\"COSINE_TABLE_B\", SINE_TABLE_LEN, COSINE_TABLE_B);\n         printarray(\"TANGENT_TABLE_A\", SINE_TABLE_LEN, TANGENT_TABLE_A);\n-        printarray(\"TANGENT_TABLE_B\", SINE_TABLE_LEN, TANGENT_TABLE_B);        \n+        printarray(\"TANGENT_TABLE_B\", SINE_TABLE_LEN, TANGENT_TABLE_B);\n     }\n \n     private static void printarray(String string, int expectedLen, double[][] array2d) {\n           return x;\n       }\n \n+      // cosh[z] = (exp(z) + exp(-z))/2\n+\n+      // for numbers with magnitude 20 or so, \n+      // exp(-z) can be ignored in comparison with exp(z)\n+\n       if (x > 20.0) {\n           return exp(x)/2.0;\n       }\n           return x;\n       }\n \n+      // sinh[z] = (exp(z) - exp(-z) / 2\n+      \n+      // for values of z larger than about 20, \n+      // exp(-z) can be ignored in comparison with exp(z)\n+      \n       if (x > 20.0) {\n           return exp(x)/2.0;\n       }\n       if (x != x) {\n           return x;\n       }\n+\n+      // tanh[z] = sinh[z] / cosh[z] \n+      // = (exp(z) - exp(-z)) / (exp(z) + exp(-z))\n+      // = (exp(2x) - 1) / (exp(2x) + 1)\n+      \n+      // for magnitude > 20, sinh[z] == cosh[z] in double precision\n \n       if (x > 20.0) {\n           return 1.0;\n         split(x, xs);\n         ys[0] = ys[1] = 0.0;\n \n-        for (int i = 19; i >= 0; i--) {\n+        for (int i = FACT_LEN-1; i >= 0; i--) {\n             splitMult(xs, ys, as);\n             ys[0] = as[0];\n             ys[1] = as[1];\n         final double c = a[0] + a[1];\n         final double d = -(c - a[0] - a[1]);\n \n-        if (c < 8e298 && c > -8e298) {\n+        if (c < 8e298 && c > -8e298) { // MAGIC NUMBER\n             double z = c * HEX_40000000;\n             a[0] = (c + z) - z;\n             a[1] = c - a[0] + d;", "timestamp": 1315347441, "metainfo": ""}