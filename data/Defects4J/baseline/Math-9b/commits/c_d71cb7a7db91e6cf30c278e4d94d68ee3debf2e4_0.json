{"sha": "d71cb7a7db91e6cf30c278e4d94d68ee3debf2e4", "log": "Improved javadoc, implementation.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/GeometricMean.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/GeometricMean.java\n \n /**\n  * Returns the <a href=\"http://www.xycoon.com/geometric_mean.htm\">\n- * geometric mean </a> of the available values\n- * @version $Revision: 1.18 $ $Date: 2004/04/27 16:42:30 $\n+ * geometric mean </a> of the available values.\n+ * <p>\n+ * Uses {@link SumOfLogs} superclass to compute sum of logs and returns\n+ * <code> exp( 1/n  (sum of logs) ).</code>  Therefore,\n+ * <ul>\n+ * <li>If any of values are < 0, the result is <code>NaN.</code></li>\n+ * <li>If all values are non-negative and less than <code>Double.POSITIVE_INFINITY</code>, \n+ * but at least one value is 0, the result is <code>0.</code></li>\n+ * <li>If both <code>Double.POSITIVE_INFINITY</code> and \n+ * <code>Double.NEGATIVE_INFINITY</code> are among the values, the result is\n+ * <code>NaN.</code></li>\n+ * </ul>\n+ * \n+ * \n+ * @version $Revision: 1.19 $ $Date: 2004/06/18 07:03:40 $\n  */\n public class GeometricMean extends SumOfLogs implements Serializable{\n \n     /** Serializable version identifier */\n     static final long serialVersionUID = -8178734905303459453L;  \n       \n-    /** */\n+    /**Number of values that have been added */\n     protected long n = 0;\n-\n-    /** */\n-    private double geoMean = Double.NaN;\n-\n-    /** */\n-    private double lastSum = 0.0;\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#increment(double)\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getResult()\n      */\n     public double getResult() {\n-        if (lastSum != super.getResult() || n == 1) {\n-            lastSum = super.getResult();\n-            geoMean = Math.exp(lastSum / (double) n);\n+        if (n > 0) {\n+            return Math.exp(super.getResult() / (double) n);\n+        } else {\n+            return Double.NaN;\n         }\n-        return geoMean;\n     }\n \n     /**\n      */\n     public void clear() {\n         super.clear();\n-        lastSum = 0.0;\n-        geoMean = Double.NaN;\n         n = 0;\n     }\n ", "timestamp": 1087542220, "metainfo": ""}