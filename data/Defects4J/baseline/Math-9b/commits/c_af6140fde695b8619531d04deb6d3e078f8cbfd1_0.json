{"sha": "af6140fde695b8619531d04deb6d3e078f8cbfd1", "log": "Added implementation for paired t-test boolean method.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n /**\n  * Implements t-test statistics defined in the {@link TTest} interface.\n  *\n- * @version $Revision: 1.3 $ $Date: 2004/05/24 05:29:05 $\n+ * @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $\n  */\n public class TTestImpl implements TTest, Serializable {\n \n                 (double) sample1.length);\n     }\n \n-    /* (non-Javadoc)\n-     * @see org.apache.commons.math.stat.inference.TTest#pairedTTest(double[], double[], double)\n-     */\n-    public boolean pairedTTest(\n-        double[] sample1,\n-        double[] sample2,\n-        double alpha)\n+    /**\n+     * Performs a paired t-test</a> evaluating that null hypothesis that the \n+     * mean of the paired differences between <code>sample1</code> and\n+     * <code>sample2</code> is 0 in favor of the two-sided alternative that the \n+     * mean paired difference is not equal to 0, with significance level \n+     * <code>alpha</code>.\n+     * <p>\n+     * Returns <code>true</code> iff the null hypothesis can be rejected with \n+     * confidence <code>1 - alpha</code>.  To perform a 1-sided test, use \n+     * <code>alpha / 2</code>\n+     * <p>\n+     * <strong>Usage Note:</strong><br>\n+     * The validity of the test depends on the assumptions of the parametric\n+     * t-test procedure, as discussed \n+     * <a href=\"http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html\">\n+     * here</a>\n+     * <p>\n+     * <strong>Preconditions</strong>: <ul>\n+     * <li>The input array lengths must be the same and their common length \n+     * must be at least 2.\n+     * </li>\n+     * <li> <code> 0 < alpha < 0.5 </code>\n+     * </li></ul>\n+     *\n+     * @param sample1 array of sample data values\n+     * @param sample2 array of sample data values\n+     * @param alpha significance level of the test\n+     * @return true if the null hypothesis can be rejected with \n+     * confidence 1 - alpha\n+     * @throws IllegalArgumentException if the preconditions are not met\n+     * @throws MathException if an error occurs performing the test\n+     */\n+    public boolean pairedTTest(double[] sample1, double[] sample2, double alpha)\n         throws IllegalArgumentException, MathException {\n-        // TODO Auto-generated method stub\n-        return false;\n+        if ((alpha <= 0) || (alpha > 0.5)) {\n+            throw new IllegalArgumentException(\"bad significance level: \" + alpha);\n+        }\n+        return (pairedTTest(sample1, sample2) < alpha);\n     }\n \n     /**\n--- a/src/test/org/apache/commons/math/stat/inference/TTestTest.java\n+++ b/src/test/org/apache/commons/math/stat/inference/TTestTest.java\n /**\n  * Test cases for the TTestImpl class.\n  *\n- * @version $Revision: 1.3 $ $Date: 2004/05/24 05:34:30 $\n+ * @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $\n  */\n \n public final class TTestTest extends TestCase {\n     public void testPaired() throws Exception {\n         double[] sample1 = {1d, 3d, 5d, 7d};\n         double[] sample2 = {0d, 6d, 11d, 2d};\n-        double[] sample3 = {0d, 2d};\n+        double[] sample3 = {5d, 7d, 8d, 10d};\n+        double[] sample4 = {0d, 2d};\n         \n         // Target values computed using R, version 1.8.1 (linux version)\n         assertEquals(-0.3133, testStatistic.pairedT(sample1, sample2), 1E-4);\n         assertEquals(0.774544295819, testStatistic.pairedTTest(sample1, sample2), 1E-10);\n-        \n+        assertEquals(0.001208, testStatistic.pairedTTest(sample1, sample3), 1E-6);\n+        assertFalse(testStatistic.pairedTTest(sample1, sample3, .001));\n+        assertTrue(testStatistic.pairedTTest(sample1, sample3, .002));    \n     }\n }", "timestamp": 1086050664, "metainfo": ""}