{"sha": "c15c50245c3fe726b27e2656f1672085959d19da", "log": "Catch NoClassDefFound Error when DiscoverClass not present, eliminating runtime dependency on [discovery], [logging]   ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java\n  * <code>UnivariateRealSolverFactory.newInstance().</code>  The default is\n  * {@link UnivariateRealSolverFactoryImpl}.\n  *\n- * @version $Revision: 1.15 $ $Date: 2004/06/23 16:26:14 $\n+ * @version $Revision: 1.16 $ $Date: 2004/07/10 15:59:14 $\n  */\n public abstract class UnivariateRealSolverFactory {\n     /**\n             factory = (UnivariateRealSolverFactory) dc.newInstance(\n                 UnivariateRealSolverFactory.class,\n                 \"org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl\");\n-        } catch(Exception ex) {\n-            // ignore as default implementation will be used.\n+        } catch(Throwable t) {\n+            return new UnivariateRealSolverFactoryImpl();\n         }\n         return factory;\n     }\n--- a/src/java/org/apache/commons/math/distribution/DistributionFactory.java\n+++ b/src/java/org/apache/commons/math/distribution/DistributionFactory.java\n  * ChiSquaredDistribution chi = factory.createChiSquareDistribution(5.0);\n  * </pre>\n  *\n- * @version $Revision: 1.20 $ $Date: 2004/06/23 16:26:15 $\n+ * @version $Revision: 1.21 $ $Date: 2004/07/10 15:59:14 $\n  */\n public abstract class DistributionFactory {\n     /**\n             factory = (DistributionFactory) dc.newInstance(\n                 DistributionFactory.class,\n                 \"org.apache.commons.math.distribution.DistributionFactoryImpl\");\n-        } catch(Exception ex) {\n-            // ignore as default implementation will be used.\n+        } catch(Throwable t) {\n+            return new DistributionFactoryImpl();\n         }\n         return factory;\n     }", "timestamp": 1089475154, "metainfo": ""}