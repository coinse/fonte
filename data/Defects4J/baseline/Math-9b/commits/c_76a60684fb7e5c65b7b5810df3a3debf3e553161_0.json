{"sha": "76a60684fb7e5c65b7b5810df3a3debf3e553161", "log": "MATH-581 Made accessors \"abstract\" (a per the conclusion of the thread \"RealLinearOperator and AbstractRealMatrix\" on the dev ML). Removed constructors.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java\n+++ b/src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java\n  */\n public abstract class InvertibleRealLinearOperator extends RealLinearOperator {\n     /**\n-     * Creates a new instance of this class with the specified dimension.\n-     *\n-     * @param dim Common dimension of the domain and codomain.\n-     */\n-    public InvertibleRealLinearOperator(final int dim) {\n-        super(dim, dim);\n-    }\n-\n-    /**\n      * Computes the matrix-vector product of the inverse of this instance\n      * with {@code b} and returns the result.\n      *\n--- a/src/main/java/org/apache/commons/math/linear/RealLinearOperator.java\n+++ b/src/main/java/org/apache/commons/math/linear/RealLinearOperator.java\n  * <dl>\n  *  <dt><a name=\"BARR1994\">Barret et al. (1994)</a></dt>\n  *  <dd>\n- *   R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra, V.\n- *   Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,\n+ *   R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra,\n+ *   V. Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,\n  *   <em>Templates for the Solution of Linear Systems: Building Blocks for\n- *   Iterative Methods</em>, SIAM</dd>\n+ *   Iterative Methods</em>, SIAM\n+ *  </dd>\n  * </dl>\n  *\n  * @version $Id$\n  */\n public abstract class RealLinearOperator {\n-    /** The dimension of the codomain. */\n-    private final int rowDimension;\n-    /** The dimension of the domain. */\n-    private final int columnDimension;\n-\n-    /**\n-     * Creates a new instance of this class, with specified dimensions\n-     * of the domain and codomain.\n-     *\n-     * @param rowDimension Dimension of the codomain (number of rows).\n-     * @param columnDimension Dimension of the domain (number of columns).\n-     */\n-    public RealLinearOperator(final int rowDimension, final int columnDimension) {\n-        this.columnDimension = columnDimension;\n-        this.rowDimension = rowDimension;\n-    }\n-\n     /**\n      * Returns the dimension of the codomain of this operator.\n      *\n      * @return the number of rows of the underlying matrix.\n      */\n-    public final int getRowDimension() {\n-        return rowDimension;\n-    }\n+    public abstract int getRowDimension();\n \n     /**\n      * Returns the dimension of the domain of this operator.\n      *\n      * @return the number of columns of the underlying matrix.\n      */\n-    public final int getColumnDimension() {\n-        return columnDimension;\n-    }\n+    public abstract int getColumnDimension();\n \n     /**\n      * Returns the result of multiplying {@code this} by the vector {@code x}.", "timestamp": 1310726789, "metainfo": ""}