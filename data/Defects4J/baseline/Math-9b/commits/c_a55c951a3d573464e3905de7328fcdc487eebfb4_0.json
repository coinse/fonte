{"sha": "a55c951a3d573464e3905de7328fcdc487eebfb4", "log": "Use a TreeSet instead of an ArrayList when dropping columns after phase 1 of the simplex solver to improve performance.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import java.util.TreeSet;\n \n import org.apache.commons.math3.linear.Array2DRowRealMatrix;\n import org.apache.commons.math3.linear.MatrixUtils;\n             return;\n         }\n \n-        List<Integer> columnsToDrop = new ArrayList<Integer>();\n+        Set<Integer> columnsToDrop = new TreeSet<Integer>();\n         columnsToDrop.add(0);\n \n         // positive cost non-artificial variables\n \n         // non-basic artificial variables\n         for (int i = 0; i < getNumArtificialVariables(); i++) {\n-          int col = i + getArtificialVariableOffset();\n-          if (getBasicRow(col) == null) {\n-            columnsToDrop.add(col);\n-          }\n+            int col = i + getArtificialVariableOffset();\n+            if (getBasicRow(col) == null) {\n+                columnsToDrop.add(col);\n+            }\n         }\n \n         double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n         for (int i = 1; i < getHeight(); i++) {\n-          int col = 0;\n-          for (int j = 0; j < getWidth(); j++) {\n-            if (!columnsToDrop.contains(j)) {\n-              matrix[i - 1][col++] = tableau.getEntry(i, j);\n-            }\n-          }\n-        }\n-\n-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n-          columnLabels.remove((int) columnsToDrop.get(i));\n+            int col = 0;\n+            for (int j = 0; j < getWidth(); j++) {\n+                if (!columnsToDrop.contains(j)) {\n+                    matrix[i - 1][col++] = tableau.getEntry(i, j);\n+                }\n+            }\n+        }\n+\n+        // remove the columns in reverse order so the indices are correct\n+        Integer[] drop = columnsToDrop.toArray(new Integer[columnsToDrop.size()]);\n+        for (int i = drop.length - 1; i >= 0; i--) {\n+            columnLabels.remove((int) drop[i]);\n         }\n \n         this.tableau = new Array2DRowRealMatrix(matrix);", "timestamp": 1343675225, "metainfo": ""}