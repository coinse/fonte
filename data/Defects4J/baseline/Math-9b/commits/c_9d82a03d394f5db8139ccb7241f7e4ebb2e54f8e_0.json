{"sha": "9d82a03d394f5db8139ccb7241f7e4ebb2e54f8e", "log": "MATH-795: extracted testGetSubVector() from RealVectorAbstractTest.testDataInOut().   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n     }\n \n     @Test\n+    public void testGetSubvector() {\n+        final double x = getPreferredEntryValue();\n+        final double[] data = {x, x, x, 1d, x, 2d, x, x, 3d, x, x, x, 4d, x, x, x};\n+        final int index = 1;\n+        final int n = data.length - 5;\n+        final RealVector actual = create(data).getSubVector(index, n);\n+        final double[] expected = new double[n];\n+        System.arraycopy(data, index, expected, 0, n);\n+        TestUtils.assertEquals(\"\", expected, actual, 0d);\n+    }\n+\n+    @Test\n     public void testDataInOut() {\n         final RealVector v1 = create(vec1);\n         final RealVector v2 = create(vec2);\n         final RealVector v4 = create(vec4);\n         final RealVector v2_t = createAlien(vec2);\n \n-        final RealVector vout5 = v4.getSubVector(3, 3);\n-        Assert.assertEquals(\"testData len\", 3, vout5.getDimension());\n-        Assert.assertEquals(\"testData is 4.0 \", 5.0, vout5.getEntry(1), 0);\n         try {\n             v4.getSubVector(3, 7);\n             Assert.fail(\"OutOfRangeException expected\");\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java\n     }\n \n     @Test\n+    @Ignore(\"Abstract class RealVector does not implement getSubvector(int, int)\")\n+    @Override\n+    public void testGetSubvector() {\n+        // Do nothing\n+    }\n+\n+    @Test\n     @Ignore\n     @Override\n     public void testBasicFunctions() {", "timestamp": 1339125841, "metainfo": ""}