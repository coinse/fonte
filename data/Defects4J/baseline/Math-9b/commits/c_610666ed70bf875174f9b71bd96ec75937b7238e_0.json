{"sha": "610666ed70bf875174f9b71bd96ec75937b7238e", "log": "document some exceptions that may be thrown by derived classes  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java\n \n import org.apache.commons.math.analysis.UnivariateRealFunction;\n import org.apache.commons.math.exception.MaxCountExceededException;\n+import org.apache.commons.math.exception.NoBracketingException;\n import org.apache.commons.math.exception.TooManyEvaluationsException;\n import org.apache.commons.math.util.Incrementor;\n import org.apache.commons.math.util.MathUtils;\n      * @throws TooManyEvaluationsException if the maximal number of evaluations\n      * is exceeded.\n      */\n-    protected double computeObjectiveValue(double point) {\n+    protected double computeObjectiveValue(double point)\n+        throws TooManyEvaluationsException {\n         incrementEvaluationCount();\n         return function.value(point);\n     }\n      * @return the root.\n      * @throws TooManyEvaluationsException if the maximal number of evaluations\n      * is exceeded.\n-     */\n-    protected abstract double doSolve();\n+     * @throws NoBracketingException if the initial search interval does not bracket\n+     * a root and the solver requires it.\n+     */\n+    protected abstract double doSolve()\n+        throws TooManyEvaluationsException, NoBracketingException;\n \n     /**\n      * Check whether the function takes opposite signs at the endpoints.", "timestamp": 1311953719, "metainfo": ""}