{"sha": "924445035e0e8d6c2231b51fc60bf2b7fff62aab", "log": "optimizers should not be serializable  ", "commit": "\n--- a/src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java\n+++ b/src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java\n  * performed by the derived classes according to the implemented\n  * algorithms.</p>\n  *\n- * implements MultivariateRealOptimizer, Serializable since 2.0\n+ * implements MultivariateRealOptimizer since 2.0\n  * \n  * @see MultivariateRealFunction\n  * @see NelderMead\n--- a/src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java\n+++ b/src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java\n \n package org.apache.commons.math.optimization.direct;\n \n-import java.io.Serializable;\n import java.util.Comparator;\n \n import org.apache.commons.math.FunctionEvaluationException;\n /** \n  * This class implements the multi-directional direct search method.\n  *\n- * implements Serializable since 2.0\n- * \n  * @version $Revision$ $Date$\n  * @see NelderMead\n  * @since 1.2\n  */\n-public class MultiDirectional extends DirectSearchOptimizer implements Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = -5347711305645019145L;\n+public class MultiDirectional extends DirectSearchOptimizer {\n \n     /** Expansion coefficient. */\n     private final double khi;\n--- a/src/java/org/apache/commons/math/optimization/direct/NelderMead.java\n+++ b/src/java/org/apache/commons/math/optimization/direct/NelderMead.java\n \n package org.apache.commons.math.optimization.direct;\n \n-import java.io.Serializable;\n import java.util.Comparator;\n \n import org.apache.commons.math.FunctionEvaluationException;\n /** \n  * This class implements the Nelder-Mead direct search method.\n  *\n- * implements Serializable since 2.0\n- * \n  * @version $Revision$ $Date$\n  * @see MultiDirectional\n  * @since 1.2\n  */\n-public class NelderMead extends DirectSearchOptimizer implements Serializable {\n-    // TODO: Add Serializable documentation\n-    // TODO: Check Serializable implementation\n-\n-    /** Serializable version identifier. */\n-    private static final long serialVersionUID = -5810365844886183056L;\n+public class NelderMead extends DirectSearchOptimizer {\n \n     /** Reflection coefficient. */\n     private final double rho;\n--- a/src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java\n+++ b/src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java\n \n package org.apache.commons.math.optimization.general;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.FunctionEvaluationException;\n+import org.apache.commons.math.linear.BlockRealMatrix;\n import org.apache.commons.math.linear.DecompositionSolver;\n-import org.apache.commons.math.linear.BlockRealMatrix;\n import org.apache.commons.math.linear.InvalidMatrixException;\n import org.apache.commons.math.linear.LUDecompositionImpl;\n import org.apache.commons.math.linear.QRDecompositionImpl;\n  *\n  */\n \n-public class GaussNewtonOptimizer extends AbstractLeastSquaresOptimizer implements Serializable {\n-\n-    /** Serializable version identifier */\n-    private static final long serialVersionUID = 7011643996279553223L;\n+public class GaussNewtonOptimizer extends AbstractLeastSquaresOptimizer {\n \n     /** Indicator for using LU decomposition. */\n     private final boolean useLU;\n--- a/src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java\n+++ b/src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java\n  */\n package org.apache.commons.math.optimization.general;\n \n-import java.io.Serializable;\n import java.util.Arrays;\n \n import org.apache.commons.math.FunctionEvaluationException;\n  * @since 2.0\n  *\n  */\n-public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer implements Serializable {\n-\n-    /** Serializable version identifier */\n-    private static final long serialVersionUID = 8851282236194244323L;\n+public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {\n \n     /** Number of solved point. */\n     private int solvedCols;", "timestamp": 1248119828, "metainfo": ""}