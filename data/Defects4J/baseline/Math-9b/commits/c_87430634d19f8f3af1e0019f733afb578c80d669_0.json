{"sha": "87430634d19f8f3af1e0019f733afb578c80d669", "log": "Added \"vararg\" parameter to allow \"specific\" meessage patterns to make use of additional information.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java\n+++ b/src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java\n      *\n      * @param specific Specific contexte pattern.\n      * @param max Maximum.\n+     * @param args Additional arguments.\n      */\n     public MaxCountExceededException(Localizable specific,\n-                                     Number max) {\n-        super(specific, LocalizedFormats.MAX_COUNT_EXCEEDED, max);\n+                                     Number max,\n+                                     Object ... args) {\n+        super(specific, LocalizedFormats.MAX_COUNT_EXCEEDED, max, args);\n         this.max = max;\n     }\n \n--- a/src/main/java/org/apache/commons/math/exception/NoBracketingException.java\n+++ b/src/main/java/org/apache/commons/math/exception/NoBracketingException.java\n                                  double fLo, double fHi) {\n         this(null, lo, hi, fLo, fHi);\n     }\n-    /**\n-     * Construct the exception with a specific context.\n-     *\n-     * @param specific Contextual information on what caused the exception.\n-     * @param lo Lower end of the interval.\n-     * @param hi Higher end of the interval.\n-     * @param fLo Value at lower end of the interval.\n-     * @param fHi Value at higher end of the interval.\n-     */\n-    public NoBracketingException(Localizable specific,\n-                                 double lo, double hi,\n-                                 double fLo, double fHi) {\n-        super(specific, LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, lo, hi, fLo, fHi);\n-        this.lo = lo;\n-        this.hi = hi;\n-        this.fLo = fLo;\n-        this.fHi = fHi;\n-    }\n+\n     /**\n      * Construct the exception with a specific context.\n      *\n--- a/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n+++ b/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n     NUMBER_OF_TRIALS(\"number of trials ({0})\"),\n     NEGATIVE_ROBUSTNESS_ITERATIONS(\"the number of robustness iterations must be non-negative, but got {0}\"),\n     START_POSITION(\"start position ({0})\"), /* keep */\n-    NON_CONVERGENT_CONTINUED_FRACTION(\"Continued fraction convergents failed to converge for value {0}\"),\n+    NON_CONVERGENT_CONTINUED_FRACTION(\"Continued fraction convergents failed to converge (in less than {0} iterations) for value {1}\"),\n     NON_POSITIVE_MICROSPHERE_ELEMENTS(\"number of microsphere elements must be positive, but got {0}\"),\n     NON_POSITIVE_POLYNOMIAL_DEGREE(\"polynomial degree must be positive: degree={0}\"),\n     NON_REAL_FINITE_ABSCISSA(\"all abscissae must be finite real numbers, but {0}-th is {1}\"),", "timestamp": 1290994992, "metainfo": ""}