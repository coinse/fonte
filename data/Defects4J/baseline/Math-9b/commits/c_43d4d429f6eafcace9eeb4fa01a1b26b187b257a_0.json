{"sha": "43d4d429f6eafcace9eeb4fa01a1b26b187b257a", "log": "renamed UnivariateDifferential into UnivariateDifferentiable  ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiable.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math3.analysis.differentiation;\n+\n+import org.apache.commons.math3.analysis.UnivariateFunction;\n+\n+/** Interface for univariate functions derivatives.\n+ * <p>This interface represents a simple function which computes\n+ * both the value and the first derivative of a mathematical function.\n+ * The derivative is computed with respect to the input variable.</p>\n+ * @see UnivariateDifferentiable\n+ * @see UnivariateDifferentiator\n+ * @since 3.1\n+ * @version $Id$\n+ */\n+public interface UnivariateDifferentiable extends UnivariateFunction {\n+\n+    /** Simple mathematical function.\n+     * <p>{@link UnivariateDifferentiable} classes compute both the\n+     * value and the first derivative of the function.</p>\n+     * @param t function input value\n+     * @return function result\n+     */\n+    DerivativeStructure value(DerivativeStructure t);\n+\n+}\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiator.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiator.java\n      * @param function function to differentiate\n      * @return differential function\n      */\n-    UnivariateDifferential differentiate(UnivariateFunction function);\n+    UnivariateDifferentiable differentiate(UnivariateFunction function);\n \n }\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java\n  *   The core class is {@link DerivativeStructure} which holds the value and\n  *   the differentials of a function. This class handles some arbitrary number\n  *   of free parameters and arbitrary derivation order. It is used both as\n- *   the input and the output type for the {@link UnivariateDifferential}\n+ *   the input and the output type for the {@link UnivariateDifferentiable}\n  *   interface. Any differentiable function should implement this interface.\n  * </p>\n  * <p>\n- *   The {@link UnivariateDifferentiator} interface defines a way to differentation\n+ *   The {@link UnivariateDifferentiator} interface defines a way to differentiation\n  *   a simple {@link org.apache.commons.math3.analysis.UnivariateFunction\n  *   univariate function} and get a {@link differential function}.\n  * </p>", "timestamp": 1345313337, "metainfo": ""}