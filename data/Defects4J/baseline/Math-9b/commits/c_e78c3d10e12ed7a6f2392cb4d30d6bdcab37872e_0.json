{"sha": "e78c3d10e12ed7a6f2392cb4d30d6bdcab37872e", "log": "removed references to compact SVD and truncated SVD  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java\n+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java\n /**\n  * An interface to classes that implement an algorithm to calculate the\n  * Singular Value Decomposition of a real matrix.\n- * <p>The Singular Value Decomposition of matrix A is a set of three matrices:\n- * U, &Sigma; and V such that A = U &times; &Sigma; &times; V<sup>T</sup>.\n- * Let A be a m &times; n matrix, then U is a m &times; p orthogonal matrix,\n- * &Sigma; is a p &times; p diagonal matrix with positive diagonal elements,\n- * V is a n &times; p orthogonal matrix (hence V<sup>T</sup> is a p &times; n\n- * orthogonal matrix). The size p depends on the chosen algorithm:\n- * <ul>\n- *   <li>for full SVD, p is n,</li>\n- *   <li>for compact SVD, p is the rank r of the matrix\n- *       (i. e. the number of positive singular values),</li>\n- *   <li>for truncated SVD p is min(r, t) where t is user-specified.</li>\n- * </ul>\n+ * <p>\n+ * The Singular Value Decomposition of matrix A is a set of three matrices: U,\n+ * &Sigma; and V such that A = U &times; &Sigma; &times; V<sup>T</sup>. Let A be\n+ * a m &times; n matrix, then U is a m &times; p orthogonal matrix, &Sigma; is a\n+ * p &times; p diagonal matrix with positive or null elements, V is a p &times;\n+ * n orthogonal matrix (hence V<sup>T</sup> is also orthogonal) where\n+ * p=min(m,n).\n  * </p>\n  * <p>This interface is similar to the class with similar name from the\n  * <a href=\"http://math.nist.gov/javanumerics/jama/\">JAMA</a> library, with the", "timestamp": 1269642998, "metainfo": ""}