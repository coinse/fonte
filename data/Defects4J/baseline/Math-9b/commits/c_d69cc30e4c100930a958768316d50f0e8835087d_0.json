{"sha": "d69cc30e4c100930a958768316d50f0e8835087d", "log": "Fixed an error in BigFraction multiplication for large numerators that don't fit in a primitive int.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/fraction/BigFraction.java\n+++ b/src/main/java/org/apache/commons/math/fraction/BigFraction.java\n      *             if the fraction is <code>null</code>.\n      */\n     public BigFraction multiply(final BigFraction fraction) {\n-        BigFraction ret = ZERO;\n-\n-        if (getNumeratorAsInt() != 0 && fraction.getNumeratorAsInt() != 0) {\n-            ret = new BigFraction(numerator.multiply(fraction.numerator), denominator.multiply(fraction.denominator));\n-        }\n-\n-        return ret;\n+        if (numerator.equals(BigInteger.ZERO) ||\n+            fraction.numerator.equals(BigInteger.ZERO)) {\n+            return ZERO;\n+        }\n+        return new BigFraction(numerator.multiply(fraction.numerator),\n+                               denominator.multiply(fraction.denominator));\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java\n+++ b/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java\n         assertEquals(new BigFraction(1594323, 8192), new BigFraction(2, 3).pow(BigInteger.valueOf(-13l)));\n     }\n \n+    public void testMath340() {\n+        BigFraction fractionA = new BigFraction(0.00131);\n+        BigFraction fractionB = new BigFraction(.37).reciprocal();\n+        BigFraction errorResult = fractionA.multiply(fractionB);\n+        BigFraction correctResult = new BigFraction(fractionA.getNumerator().multiply(fractionB.getNumerator()),\n+                                                    fractionA.getDenominator().multiply(fractionB.getDenominator()));\n+        assertEquals(correctResult, errorResult);\n+    }\n+\n     public void testSerial() throws FractionConversionException {\n         BigFraction[] fractions = {\n             new BigFraction(3, 4), BigFraction.ONE, BigFraction.ZERO,", "timestamp": 1265231994, "metainfo": ""}