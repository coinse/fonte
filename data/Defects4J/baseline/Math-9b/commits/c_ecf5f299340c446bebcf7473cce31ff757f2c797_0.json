{"sha": "ecf5f299340c446bebcf7473cce31ff757f2c797", "log": "Added a few unit tests.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java\n+++ b/src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java\n     }\n \n     @Test\n+    public void testParseOne1() {\n+        String source = \"1 / 1\";\n+        Fraction c = properFormat.parse(source);\n+        Assert.assertNotNull(c);\n+        Assert.assertEquals(1, c.getNumerator());\n+        Assert.assertEquals(1, c.getDenominator());\n+    }\n+\n+    @Test\n+    public void testParseOne2() {\n+        String source = \"10 / 10\";\n+        Fraction c = properFormat.parse(source);\n+        Assert.assertNotNull(c);\n+        Assert.assertEquals(1, c.getNumerator());\n+        Assert.assertEquals(1, c.getDenominator());\n+    }\n+\n+    @Test\n+    public void testParseZero1() {\n+        String source = \"0 / 1\";\n+        Fraction c = properFormat.parse(source);\n+        Assert.assertNotNull(c);\n+        Assert.assertEquals(0, c.getNumerator());\n+        Assert.assertEquals(1, c.getDenominator());\n+    }\n+\n+    @Test\n+    public void testParseZero2() {\n+        String source = \"-0 / 1\";\n+        Fraction c = properFormat.parse(source);\n+        Assert.assertNotNull(c);\n+        Assert.assertEquals(0, c.getNumerator());\n+        Assert.assertEquals(1, c.getDenominator());\n+        // This test shows that the sign is not preserved.\n+        Assert.assertEquals(Double.POSITIVE_INFINITY, 1d / c.doubleValue(), 0);\n+    }\n+\n+    @Test\n     public void testParseInvalid() {\n         String source = \"a\";\n         String msg = \"should not be able to parse '10 / a'.\";", "timestamp": 1322753119, "metainfo": ""}