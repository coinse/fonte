{"sha": "3531f01cf943fe4681326652f8854730cdc26b6b", "log": "Formatting to make checkstyle happy.  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n             data = new BigDecimal[nRows][nCols];\n             System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);          \n         }   \n-        if (((nRows + row) > this.getRowDimension())\n-        || (nCols + column > this.getColumnDimension()))\n+        if (((nRows + row) > this.getRowDimension()) ||\n+            (nCols + column > this.getColumnDimension()))\n             throw new MatrixIndexException(\n             \"invalid row or column index selection\");                   \n         for (int i = 0; i < nRows; i++) {\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n             data = new double[nRows][nCols];\n             System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);          \n         }   \n-        if (((nRows + row) > this.getRowDimension())\n-                || (nCols + column > this.getColumnDimension()))\n+        if (((nRows + row) > this.getRowDimension()) ||\n+            (nCols + column > this.getColumnDimension()))\n             throw new MatrixIndexException(\n                     \"invalid row or column index selection\");                   \n         for (int i = 0; i < nRows; i++) {", "timestamp": 1117986516, "metainfo": ""}