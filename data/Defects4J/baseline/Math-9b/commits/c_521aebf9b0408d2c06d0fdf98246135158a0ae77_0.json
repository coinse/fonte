{"sha": "521aebf9b0408d2c06d0fdf98246135158a0ae77", "log": "Added tests for indicator functions. Contributed by: Christopher Schuck Pr #28343   ", "commit": "\n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n /**\n  * Test cases for the MathUtils class.\n  *\n- * @version $Revision: 1.10 $ $Date: 2004/02/21 21:35:18 $\n+ * @version $Revision: 1.11 $ $Date: 2004/04/12 04:03:39 $\n  */\n \n public final class MathUtilsTest extends TestCase {\n         return result;\n     }\n \n-\n     public void testSignDouble() {\n         double delta = 0.0 ;\n         assertEquals( 1.0, MathUtils.indicator( 2.0 ), delta ) ;\n         assertEquals( -1.0, MathUtils.indicator( -2.0 ), delta ) ;\n     }\n \n-\n     public void testSignFloat() {\n         float delta = 0.0F ;\n         assertEquals( 1.0F, MathUtils.indicator( 2.0F ), delta ) ;\n         assertEquals( -1.0F, MathUtils.indicator( -2.0F ), delta ) ;\n     }\n \n-\n     public void testSignByte() {\n         assertEquals( (byte)1, MathUtils.indicator( (byte)2 ) ) ;\n         assertEquals( (byte)(-1), MathUtils.indicator( (byte)(-2) ) ) ;\n     }\n \n-\n     public void testSignShort() {\n         assertEquals( (short)1, MathUtils.indicator( (short)2 ) ) ;\n         assertEquals( (short)(-1), MathUtils.indicator( (short)(-2) ) ) ;\n     }\n \n-\n     public void testSignInt() {\n         assertEquals( (int)1, MathUtils.indicator( (int)(2) ) ) ;\n         assertEquals( (int)(-1), MathUtils.indicator( (int)(-2) ) ) ;\n     }\n \n-\n     public void testSignLong() {\n         assertEquals( 1L, MathUtils.indicator( 2L ) ) ;\n         assertEquals( -1L, MathUtils.indicator( -2L ) ) ;\n     }\n+   \n+\tpublic void testIndicatorDouble() {\n+\t\t double delta = 0.0 ;\n+\t\t assertEquals( 1.0, MathUtils.indicator( 2.0 ), delta ) ;\n+\t\t assertEquals( 1.0, MathUtils.indicator( 0.0 ), delta ) ;\n+\t\t assertEquals( -1.0, MathUtils.indicator( -2.0 ), delta ) ;\n+\t }\n+\n+\t public void testIndicatorFloat() {\n+\t\t float delta = 0.0F ;\n+\t\t assertEquals( 1.0F, MathUtils.indicator( 2.0F ), delta ) ;\n+\t\t assertEquals( 1.0F, MathUtils.indicator( 0.0F ), delta ) ;\n+\t\t assertEquals( -1.0F, MathUtils.indicator( -2.0F ), delta ) ;\n+\t }\n+\n+\t public void testIndicatorByte() {\n+\t\t assertEquals( (byte)1, MathUtils.indicator( (byte)2 ) ) ;\n+\t\t assertEquals( (byte)1, MathUtils.indicator( (byte)0 ) ) ;\n+\t\t assertEquals( (byte)(-1), MathUtils.indicator( (byte)(-2) ) ) ;\n+\t }\n+\n+\t public void testIndicatorShort() {\n+\t\t assertEquals( (short)1, MathUtils.indicator( (short)2 ) ) ;\n+\t\t assertEquals( (short)1, MathUtils.indicator( (short)0 ) ) ;\n+\t\t assertEquals( (short)(-1), MathUtils.indicator( (short)(-2) ) ) ;\n+\t }\n+\n+\t public void testIndicatorInt() {\n+\t\t assertEquals( (int)1, MathUtils.indicator( (int)(2) ) ) ;\n+\t\t assertEquals( (int)1, MathUtils.indicator( (int)(0) ) ) ;\n+\t\t assertEquals( (int)(-1), MathUtils.indicator( (int)(-2) ) ) ;\n+\t }\n+\n+\t public void testIndicatorLong() {\n+\t\t assertEquals( 1L, MathUtils.indicator( 2L ) ) ;\n+\t\t assertEquals( 1L, MathUtils.indicator( 0L ) ) ;\n+\t\t assertEquals( -1L, MathUtils.indicator( -2L ) ) ;\n+\t }\n     \n     public void testCosh() {\n         double x = 3.0;", "timestamp": 1081742619, "metainfo": ""}