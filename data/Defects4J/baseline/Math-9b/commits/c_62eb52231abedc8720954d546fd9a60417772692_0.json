{"sha": "62eb52231abedc8720954d546fd9a60417772692", "log": "Added a test method that uses \"PerfTestUtils\" to do the benchmark.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n  */\n package org.apache.commons.math.util;\n \n+import org.apache.commons.math.PerfTestUtils;\n+\n import org.junit.BeforeClass;\n import org.junit.Test;\n import org.junit.Assert;\n         report(\"abs\",strictTime,fastTime,mathTime);\n         Assert.assertTrue(!Double.isNaN(x));\n     }\n+\n+    @Test\n+    public void testSimpleBenchmark() {\n+        final String SM = \"StrictMath\";\n+        final String M = \"Math\";\n+        final String FM = \"FastMath\";\n+\n+        final int numStat = 100;\n+        final int numCall = RUNS / numStat;\n+\n+        final double x = Math.random();\n+        final double y = Math.random();\n+\n+        PerfTestUtils.timeAndReport(\"log\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.log(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.log(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.log(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"log10\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.log10(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.log10(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.log10(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"log1p\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.log1p(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.log1p(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.log1p(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"pow\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.pow(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.pow(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.pow(x, y);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"exp\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.exp(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.exp(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.exp(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"sin\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.sin(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.sin(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.sin(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"asin\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.asin(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.asin(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.asin(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"cos\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.cos(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.cos(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.cos(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"acos\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.acos(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.acos(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.acos(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"tan\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.tan(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.tan(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.tan(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"atan\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.atan(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.atan(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.atan(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"atan2\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.atan2(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.atan2(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.atan2(x, y);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"hypot\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.hypot(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.hypot(x, y);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.hypot(x, y);\n+                                        }\n+                                    });\n+\n+\n+        PerfTestUtils.timeAndReport(\"cbrt\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.cbrt(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.cbrt(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.cbrt(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"sqrt\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.sqrt(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.sqrt(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.sqrt(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"cosh\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.cosh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.cosh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.cosh(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"sinh\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.sinh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.sinh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.sinh(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"tanh\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.tanh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.tanh(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.tanh(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"expm1\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.expm1(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.expm1(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.expm1(x);\n+                                        }\n+                                    });\n+\n+        PerfTestUtils.timeAndReport(\"abs\",\n+                                    numCall,\n+                                    numStat,\n+                                    false,\n+                                    new PerfTestUtils.RunTest(SM) {\n+                                        public Double call() throws Exception {\n+                                            return StrictMath.abs(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(M) {\n+                                        public Double call() throws Exception {\n+                                            return Math.abs(x);\n+                                        }\n+                                    },\n+                                    new PerfTestUtils.RunTest(FM) {\n+                                        public Double call() throws Exception {\n+                                            return FastMath.abs(x);\n+                                        }\n+                                    });\n+    }\n }", "timestamp": 1318809743, "metainfo": ""}