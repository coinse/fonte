{"sha": "62b3877f953dd47c4d301be35c77446e2cf55311", "log": "MATH-259 - throw IllegalArgument rather than ClassCast to better retain original behaviour  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n      * </p>\n      * \n      * @param v the value to add.\n-     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries\n-     * @throws ClassCastException if <code>v</code> is not Comparable\n+     * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n+     *         or is not comparable with previous entries\n      * @deprecated use {@link #addValue(Comparable)} instead\n      */\n     @Deprecated\n     public void addValue(Object v) {\n-        addValue((Comparable<?>) v);\n+        if (v instanceof Comparable<?>){\n+            addValue((Comparable<?>) v);            \n+        } else {\n+            throw new IllegalArgumentException(\"Object must implement Comparable\");\n+        }\n     }\n     \n     /**\n--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java\n+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java\n     // Check what happens when non-Comparable objects are added\n     public void testAddNonComparable(){\n         try {\n-            f.addValue(new Object()); // This was OK\n-            fail(\"Expected ClassCastException\");\n-        } catch (ClassCastException expected) {\n+            f.addValue(new Object()); // This was previously OK\n+            fail(\"Expected IllegalArgumentException\");\n+        } catch (IllegalArgumentException expected) {\n         }\n         f.clear();\n         f.addValue(1);\n         try {\n             f.addValue(new Object());\n-            fail(\"Expected ClassCastException\"); // Previously would have been IllegalArgument\n-        } catch (ClassCastException expected) {\n+            fail(\"Expected IllegalArgumentException\");\n+        } catch (IllegalArgumentException expected) {\n         }\n     }\n ", "timestamp": 1239975886, "metainfo": ""}