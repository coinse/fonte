{"sha": "c93d8d4ff4624834bfa500ad3070e0a6cd2afc86", "log": "Checkstyle fix wrt unused imports.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/util/IterationManager.java\n+++ b/src/main/java/org/apache/commons/math3/util/IterationManager.java\n import java.util.concurrent.CopyOnWriteArrayList;\n \n import org.apache.commons.math3.exception.MaxCountExceededException;\n-import org.apache.commons.math3.exception.NullArgumentException;\n \n /**\n  * This abstract class provides a general framework for managing iterative\n      * @param maxIterations the maximum number of iterations\n      * @param callBack the function to be called when the maximum number of\n      * iterations has been reached\n-     * @throws NullArgumentException if {@code callBack} is {@code null}\n+     * @throws org.apache.commons.math3.exception.NullArgumentException if {@code callBack} is {@code null}\n      */\n     public IterationManager(final int maxIterations,\n                             final Incrementor.MaxCountExceededCallback callBack) {", "timestamp": 1342971045, "metainfo": ""}