{"sha": "5a27ee819e33ef932dbe93f38edfb7cc9deae07e", "log": "Renamed the USE_PRECOMPUTED_TABLES constant into RECOMPUTE_TABLES_AT_RUNTIME.  The previous name was in fact the exact opposite of what was really done.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n \n     private static final int TWO_POWER_10 = 1024;\n \n-    /** Indicator for precomputed tables.\n+    /** Indicator for tables initialization.\n      * <p>\n      * This compile-time constant should be set to true only if one explicitly\n      * wants to compute the tables at class loading time instead of using the\n      * already computed ones provided as literal arrays below.\n      * </p>\n      */\n-    private static final boolean USE_PRECOMPUTED_TABLES = false;\n+    private static final boolean RECOMPUTE_TABLES_AT_RUNTIME = false;\n \n     /** log(2) (high bits). */\n     private static final double LN_2_A = 0.693147063255310059;\n     /** 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite */\n     private static final double TWO_POWER_52 = 4503599627370496.0;\n     \n-    // Initialize tables\n-    // static {\n-    //   if (USE_PRECOMPUTED_TABLES) { // suppress table initialisation as now hard-coded\n-    //     int i;\n-\n-    //     // Build the sine and cosine tables\n-    //     buildSinCosTables();\n-    //   }\n-    // }\n-\n     /**\n      * Private Constructor\n      */\n         private static final double[] EXP_INT_TABLE_B;\n \n         static {\n-            if (FastMath.USE_PRECOMPUTED_TABLES) {\n+            if (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {\n                 EXP_INT_TABLE_A = new double[FastMath.EXP_INT_TABLE_LEN];\n                 EXP_INT_TABLE_B = new double[FastMath.EXP_INT_TABLE_LEN];\n \n         private static final double[] EXP_FRAC_TABLE_B;\n \n         static {\n-            if (FastMath.USE_PRECOMPUTED_TABLES) {\n+            if (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {\n                 EXP_FRAC_TABLE_A = new double[FastMath.EXP_FRAC_TABLE_LEN];\n                 EXP_FRAC_TABLE_B = new double[FastMath.EXP_FRAC_TABLE_LEN];\n \n         private static final double[][] LN_MANT;\n \n         static {\n-            if (FastMath.USE_PRECOMPUTED_TABLES) {\n+            if (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {\n                 LN_MANT = new double[FastMath.LN_MANT_LEN][];\n \n                 // Populate lnMant table", "timestamp": 1316335923, "metainfo": ""}