{"sha": "6e04e251c40cc8589adf347487a3b8d2d797fe13", "log": "minor javadoc cleanup   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/summary/Sum.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/summary/Sum.java\n  */\n package org.apache.commons.math.stat.univariate.summary;\n \n-import org.apache.commons.collections.primitives.DoubleIterator;\n-import org\n-    .apache\n-    .commons\n-    .math\n-    .stat\n-    .univariate\n-    .AbstractStorelessUnivariateStatistic;\n+import org.apache.commons.math.stat.univariate.AbstractStorelessUnivariateStatistic;\n \n /**\n- * @version $Revision: 1.7 $ $Date: 2003/07/15 03:37:11 $\n+ * @version $Revision: 1.8 $ $Date: 2003/07/15 03:38:50 $\n  */\n public class Sum extends AbstractStorelessUnivariateStatistic {\n \n     private double value = Double.NaN;\n \n     /**\n-     * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#increment(double)\n+     * @see org.apache.commons.math.stat.univariate.\n+     * StorelessUnivariateStatistic#increment(double)\n      */\n     public void increment(double d) {\n         if (Double.isNaN(value)) {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getValue()\n+     * @see org.apache.commons.math.stat.univariate.\n+     * StorelessUnivariateStatistic#getValue()\n      */\n     public double getResult() {\n         return value;\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#clear()\n+     * @see org.apache.commons.math.stat.univariate.\n+     * StorelessUnivariateStatistic#clear()\n      */\n     public void clear() {\n         value = Double.NaN;\n      * @param begin processing at this point in the array\n      * @param length processing at this point in the array\n      * @return the sum of the values or Double.NaN if the array is empty\n-     * @see org.apache.commons.math.stat.univariate.UnivariateStatistic#evaluate(double[], int, int)\n+     * @see org.apache.commons.math.stat.univariate.\n+     * UnivariateStatistic#evaluate(double[], int, int)\n      */\n     public double evaluate(double[] values, int begin, int length) {\n         double sum = Double.NaN;", "timestamp": 1058240330, "metainfo": ""}