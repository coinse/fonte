{"sha": "9d3a3ad3e670e8b90e17d68506ec9faf77f1743c", "log": "Fix thread-safety issues - code failed to use synch. read - code could potentially use two different random Generators if another thread changed it  ", "commit": "\n--- a/src/java/org/apache/commons/math/genetics/GeneticAlgorithm.java\n+++ b/src/java/org/apache/commons/math/genetics/GeneticAlgorithm.java\n  * of the algorithm can be configured for a specific problem.\n  *\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class GeneticAlgorithm {\n \n      * Use {@link #setRandomGenerator(RandomGenerator)} to supply an alternative\n      * to the default JDK-provided PRNG.\n      */\n+    //@GuardedBy(\"this\")\n     private static RandomGenerator randomGenerator = new JDKRandomGenerator();\n     \n     /**\n      * @param crossoverRate The crossover rate as a percentage (0-1 inclusive)\n      * @param mutationPolicy The {@link MutationPolicy}\n      * @param mutationRate The mutation rate as a percentage (0-1 inclusive)\n-     * @param selectionPolicy The {@link selectionPolicy}\n+     * @param selectionPolicy The {@link SelectionPolicy}\n      */\n     public GeneticAlgorithm(\n             CrossoverPolicy crossoverPolicy, double crossoverRate,\n     public Population nextGeneration(Population current) {\n         Population nextGeneration = current.nextGeneration();\n \n+        RandomGenerator randGen = getRandomGenerator();\n+        \n         while (nextGeneration.getPopulationSize() < nextGeneration.getPopulationLimit()) {\n             // select parent chromosomes\n             ChromosomePair pair = getSelectionPolicy().select(current);\n \n             // crossover?\n-            if (randomGenerator.nextDouble() < getCrossoverRate()) {\n+            if (randGen.nextDouble() < getCrossoverRate()) {\n                 // apply crossover policy to create two offspring\n                 pair = getCrossoverPolicy().crossover(pair.getFirst(), pair.getSecond());\n             }\n \n             // mutation?\n-            if (randomGenerator.nextDouble() < getMutationRate()) {\n+            if (randGen.nextDouble() < getMutationRate()) {\n                 // apply mutation policy to the chromosomes\n                 pair = new ChromosomePair(\n                     getMutationPolicy().mutate(pair.getFirst()),", "timestamp": 1245536256, "metainfo": ""}