{"sha": "4e6ce1508bb1a9e9f6b1809ea1dbb3ed075b2b42", "log": "fixed corner cases when events occur right at integration start (which in fact always happen when a resetting event forces a restart just after the event has occurred)  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/events/EventState.java\n+++ b/src/java/org/apache/commons/math/ode/events/EventState.java\n                     final BrentSolver solver = new BrentSolver();\n                     solver.setAbsoluteAccuracy(convergence);\n                     solver.setMaximalIterationCount(maxIterationCount);\n-                    final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);\n-                    if (Math.abs(root - ta) <= convergence) {\n-                        // we have found (again ?) a past event, we simply ignore it\n+                    double root;\n+                    try {\n+                        root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);\n+                    } catch (IllegalArgumentException iae) {\n+                        // the interval did not really bracket a root\n+                        root = Double.NaN;\n+                    }\n+                    if (Double.isNaN(root) ||\n+                        ((Math.abs(root - ta) <= convergence) &&\n+                         (Math.abs(root - previousEventTime) <= convergence))) {\n+                        // we have either found nothing or found (again ?) a past event, we simply ignore it\n                         ta = tb;\n                         ga = gb;\n                     } else if (Double.isNaN(previousEventTime) ||\n-                        (Math.abs(previousEventTime - root) > convergence)) {\n+                               (Math.abs(previousEventTime - root) > convergence)) {\n                         pendingEventTime = root;\n                         if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {\n                             // we were already waiting for this event which was", "timestamp": 1243975335, "metainfo": ""}