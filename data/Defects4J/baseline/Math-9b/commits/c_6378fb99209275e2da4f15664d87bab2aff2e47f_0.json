{"sha": "6378fb99209275e2da4f15664d87bab2aff2e47f", "log": "No code change.  Fixed spelling errors in comments.  ", "commit": "\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n     private static long addAndCheck(long a, long b, String msg) {\n         long ret;\n         if (a > b) {\n-            // use symmetry to reduce boundry cases\n+            // use symmetry to reduce boundary cases\n             ret = addAndCheck(b, a, msg);\n         } else {\n             // assert a <= b\n                         throw new ArithmeticException(msg);\n                     }\n                 } else {\n-                    // oppisite sign addition is always safe\n+                    // opposite sign addition is always safe\n                     ret = a + b;\n                 }\n             } else {\n         long ret;\n         String msg = \"overflow: multiply\";\n         if (a > b) {\n-            // use symmetry to reduce boundry cases\n+            // use symmetry to reduce boundary cases\n             ret = mulAndCheck(b, a);\n         } else {\n             if (a < 0) {", "timestamp": 1232400345, "metainfo": ""}