{"sha": "cc79efb1b2997cf941afe125229058f17ae51d67", "log": "Purified tests introduced in MATH-385 such that NaNs and infinites are handled properly  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/distribution/CauchyDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/distribution/CauchyDistributionTest.java\n     }\n \n     public void testMomonts() {\n-        final double tol = 1e-9;\n         CauchyDistribution dist;\n         \n-        dist = new CauchyDistributionImpl(10.2, 0.15);\n-        assertEquals(dist.getNumericalMean(), Double.NaN, tol);\n-        assertEquals(dist.getNumericalVariance(), Double.NaN, tol); \n+        dist = new CauchyDistributionImpl(10.2, 0.15);        \n+        assertTrue(Double.isNaN(dist.getNumericalMean()));\n+        assertTrue(Double.isNaN(dist.getNumericalVariance()));\n         \n         dist = new CauchyDistributionImpl(23.12, 2.12);\n-        assertEquals(dist.getNumericalMean(), Double.NaN, tol);\n-        assertEquals(dist.getNumericalVariance(), Double.NaN, tol);\n+        assertTrue(Double.isNaN(dist.getNumericalMean()));\n+        assertTrue(Double.isNaN(dist.getNumericalVariance()));\n     }\n }\n--- a/src/test/java/org/apache/commons/math/distribution/FDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/distribution/FDistributionTest.java\n         FDistribution dist;\n         \n         dist = new FDistributionImpl(1, 2);\n-        assertEquals(dist.getNumericalMean(), Double.NaN, tol);\n-        assertEquals(dist.getNumericalVariance(), Double.NaN, tol); \n+        assertTrue(Double.isNaN(dist.getNumericalMean()));\n+        assertTrue(Double.isNaN(dist.getNumericalVariance()));\n         \n         dist = new FDistributionImpl(1, 3);\n         assertEquals(dist.getNumericalMean(), 3d / (3d - 2d), tol);\n-        assertEquals(dist.getNumericalVariance(), Double.NaN, tol);\n+        assertTrue(Double.isNaN(dist.getNumericalVariance()));\n         \n         dist = new FDistributionImpl(1, 5);\n         assertEquals(dist.getNumericalMean(), 5d / (5d - 2d), tol);\n--- a/src/test/java/org/apache/commons/math/distribution/TDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/distribution/TDistributionTest.java\n         TDistribution dist;\n         \n         dist = new TDistributionImpl(1);\n-        assertEquals(dist.getNumericalMean(), Double.NaN, tol);\n-        assertEquals(dist.getNumericalVariance(), Double.NaN, tol); \n+        assertTrue(Double.isNaN(dist.getNumericalMean()));\n+        assertTrue(Double.isNaN(dist.getNumericalVariance()));\n         \n         dist = new TDistributionImpl(1.5);\n         assertEquals(dist.getNumericalMean(), 0, tol);\n-        assertEquals(dist.getNumericalVariance(), Double.POSITIVE_INFINITY, tol);\n+        assertTrue(Double.isInfinite(dist.getNumericalVariance()));\n         \n         dist = new TDistributionImpl(5);\n         assertEquals(dist.getNumericalMean(), 0, tol);", "timestamp": 1293574774, "metainfo": ""}