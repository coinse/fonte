{"sha": "06ce74bd016b683009f2dfbd5612079981377d41", "log": "Replaced call to FieldDecompositionSolver<T>.solve(T[]) by FieldDecompositionSolver<T>.solve(FieldVector<T>). The code works, but might be improved (replace T[] with FieldVector<T> all over?).  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java\n import org.apache.commons.math.fraction.BigFraction;\n import org.apache.commons.math.linear.Array2DRowFieldMatrix;\n import org.apache.commons.math.linear.Array2DRowRealMatrix;\n+import org.apache.commons.math.linear.ArrayFieldVector;\n import org.apache.commons.math.linear.FieldDecompositionSolver;\n import org.apache.commons.math.linear.FieldLUDecompositionImpl;\n import org.apache.commons.math.linear.FieldMatrix;\n \n         BigFraction[] u = new BigFraction[nSteps];\n         Arrays.fill(u, BigFraction.ONE);\n-        BigFraction[] bigC1 = pSolver.solve(u);\n+        BigFraction[] bigC1 = pSolver\n+            .solve(new ArrayFieldVector<BigFraction>(u, false)).toArray();\n \n         // update coefficients are computed by combining transform from\n         // Nordsieck to multistep, then shifting rows to represent step advance", "timestamp": 1316412953, "metainfo": ""}