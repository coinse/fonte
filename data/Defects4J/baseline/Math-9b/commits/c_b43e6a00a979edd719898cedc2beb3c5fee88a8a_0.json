{"sha": "b43e6a00a979edd719898cedc2beb3c5fee88a8a", "log": "Formatting (MATH-677).  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java\n+++ b/src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java\n public class FastHadamardTransformer implements RealTransformer {\n \n     /** {@inheritDoc} */\n-    public double[] transform(double f[])\n+    public double[] transform(double[] f)\n         throws IllegalArgumentException {\n         return fht(f);\n     }\n     }\n \n     /** {@inheritDoc} */\n-    public double[] inverseTransform(double f[])\n+    public double[] inverseTransform(double[] f)\n     throws IllegalArgumentException {\n         return FastFourierTransformer.scaleArray(fht(f), 1.0 / f.length);\n    }\n      * @return the integer transformed array (spectrum)\n      * @throws IllegalArgumentException if any parameters are invalid\n      */\n-    public int[] transform(int f[])\n+    public int[] transform(int[] f)\n         throws IllegalArgumentException {\n         return fht(f);\n     }\n      * @return y output vector\n      * @exception IllegalArgumentException if input array is not a power of 2\n      */\n-    protected double[] fht(double x[]) throws IllegalArgumentException {\n+    protected double[] fht(double[] x) throws IllegalArgumentException {\n \n         // n is the row count of the input vector x\n         final int n     = x.length;\n      * @return y output vector\n      * @exception IllegalArgumentException if input array is not a power of 2\n      */\n-    protected int[] fht(int x[]) throws IllegalArgumentException {\n+    protected int[] fht(int[] x) throws IllegalArgumentException {\n \n         // n is the row count of the input vector x\n         final int n     = x.length;", "timestamp": 1322710765, "metainfo": ""}