{"sha": "b2ddd1d660875c28930302763be54ce02a6a9667", "log": "PR: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=21005 Submitted by:\tphil@steitz.com   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/RealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrix.java\n /**\n  * Interface defining a real-valued matrix with basic algebraic operations\n  * @author  Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:57 $\n+ * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n  */\n public interface RealMatrix {\n \n      * to solve\n      * @return matrix of solution vectors\n      * @throws IllegalArgumentException if rowDimension != row dimension of b\n-     * or this is singular\n+     * or this is not square or singular\n      */\n     RealMatrix solve(RealMatrix b) throws IllegalArgumentException;\n }\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n  * before using any of the methods above.\n  *\n  * @author  Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:57 $\n+ * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n  */\n public class RealMatrixImpl implements RealMatrix, Serializable {\n \n      * do not match.\n      */\n     public RealMatrix solve(RealMatrix b) throws IllegalArgumentException {\n+        if (!this.isSquare()) {\n+            throw new IllegalArgumentException\n+                (\"coefficient matrix is not square\");\n+        }\n         if (b.getRowDimension() != this.getRowDimension()) {\n             throw new IllegalArgumentException(\"Incorrect row dimension\");\n         }\n     public void LUDecompose() throws IllegalArgumentException {\n         int nRows = this.getRowDimension();\n         int nCols = this.getColumnDimension();\n+        if (nRows < nCols) {\n+            throw new IllegalArgumentException\n+              (\"LU decomposition requires row dimension >= column dimension\");\n+        }\n         lu = this.getData();\n         \n         // Initialize pivot array and parity\n--- a/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n+++ b/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n  * Test cases for the {@link RealMatrixImpl} class.\n  *\n  * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:57 $\n+ * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n  */\n \n public final class RealMatrixImplTest extends TestCase {\n         assertEquals(\"testData2 row dimension\",m2.getRowDimension(),2);\n         assertEquals(\"testData2 column dimension\",m2.getColumnDimension(),3);\n         assertTrue(\"testData2 is not square\",!m2.isSquare());\n+        RealMatrixImpl m3 = new RealMatrixImpl();\n+        m3.setData(testData);\n     } \n     \n     /** test copy functions */\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n             ;\n-        }      \n+        }\n+        try {\n+            RealMatrix a = (new RealMatrixImpl(testData2)).solve(bs);\n+            fail(\"Expecting illegalArgumentException\");\n+        } catch (IllegalArgumentException ex) {\n+            ;\n+        } \n+        try {\n+            (new RealMatrixImpl(testData2)).LUDecompose();\n+            fail(\"Expecting illegalArgumentException\");\n+        } catch (IllegalArgumentException ex) {\n+            ;\n+        }  \n     }\n     \n     /** test determinant */", "timestamp": 1056505176, "metainfo": ""}