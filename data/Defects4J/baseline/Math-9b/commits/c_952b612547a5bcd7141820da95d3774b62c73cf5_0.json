{"sha": "952b612547a5bcd7141820da95d3774b62c73cf5", "log": "removed commented out code  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n+++ b/src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n         final int fourN1  = 4 * (n - 1);\n         double sumDiag    = 0;\n         double sumOffDiag = 0;\n-//        qMax = Double.NEGATIVE_INFINITY;\n-//        eMin = Double.POSITIVE_INFINITY;\n         for (int i = 0; i < n - 1; ++i) {\n             final int fourI = 4 * i;\n             final double qi = work[fourI];\n             final double ei = work[fourI + 2];\n-//            qMax = Math.max(qMax, qi);\n-//            eMin = Math.min(eMin, ei);\n             sumDiag    += qi;\n             sumOffDiag += ei;\n         }\n         final double qi = work[fourN1];\n-//        qMax = Math.max(qMax, qi);\n         sumDiag += qi;\n \n         if (sumOffDiag == 0) {\n                     for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {\n                         if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&\n                             (work[i + 2] <= TOLERANCE_2 * sigma)) {\n-                            // insert a split here\n+                            // insert a split\n                             work[i + 2]  = -sigma;\n                             split        = i / 4;\n                             qMax         = 0;\n             }\n \n             // apply dqd plus Li's forward test.\n-//            eMin = work[4 + pingPong];\n             d = work[pingPong];\n             for (int i = 2 + pingPong; i < 4 * n - 2; i += 4) {\n                 final int j = i - 2 * pingPong - 1;\n                     work[j + 2] = work[i + 2] * (work[i] / work[j]);\n                     d *= work[i + 2] / work[j];\n                }\n-//               eMin = Math.min(eMin, work[j + 2]);\n             }\n             work[4 * n - 3 - pingPong] = d;\n-\n-//            // find qMax\n-//            qMax = Double.NEGATIVE_INFINITY;\n-//            for (int i = 1 - pingPong; i < 4 * n; i += 4) {\n-//                qMax = Math.max(qMax, work[i]);\n-//            }\n \n             // from ping to pong\n             pingPong = 1 - pingPong;", "timestamp": 1228228379, "metainfo": ""}