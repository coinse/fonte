{"sha": "92576cc2818158ff207b0b5ca51654424c8f8430", "log": "Further unit tests of Gamma.logGammaSum(double, double): preconditions.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/special/GammaTest.java\n+++ b/src/test/java/org/apache/commons/math3/special/GammaTest.java\n import org.apache.commons.math3.TestUtils;\n import org.apache.commons.math3.exception.NumberIsTooLargeException;\n import org.apache.commons.math3.exception.NumberIsTooSmallException;\n+import org.apache.commons.math3.exception.OutOfRangeException;\n import org.apache.commons.math3.util.FastMath;\n-\n+import org.junit.Assert;\n import org.junit.Test;\n-import org.junit.Assert;\n \n /**\n  * @version $Id$\n         }\n     }\n \n+    @Test(expected = OutOfRangeException.class)\n+    public void testLogGammaSumPrecondition1() {\n+\n+        Gamma.logGammaSum(0.0, 1.0);\n+    }\n+\n+    @Test(expected = OutOfRangeException.class)\n+    public void testLogGammaSumPrecondition2() {\n+\n+        Gamma.logGammaSum(3.0, 1.0);\n+    }\n+\n+    @Test(expected = OutOfRangeException.class)\n+    public void testLogGammaSumPrecondition3() {\n+\n+        Gamma.logGammaSum(1.0, 0.0);\n+    }\n+\n+    @Test(expected = OutOfRangeException.class)\n+    public void testLogGammaSumPrecondition4() {\n+\n+        Gamma.logGammaSum(1.0, 3.0);\n+    }\n+\n     private static final double[][] LOG_GAMMA_MINUS_LOG_GAMMA_SUM_REF = {\n         { 0.0 , 8.0 , 0.0 },\n         { 0.0 , 9.0 , 0.0 },", "timestamp": 1353859557, "metainfo": ""}