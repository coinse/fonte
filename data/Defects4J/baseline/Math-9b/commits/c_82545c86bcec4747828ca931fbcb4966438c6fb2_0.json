{"sha": "82545c86bcec4747828ca931fbcb4966438c6fb2", "log": "added a test parsing very large integers  ", "commit": "\n--- a/src/test/org/apache/commons/math/fraction/BigFractionFormatTest.java\n+++ b/src/test/org/apache/commons/math/fraction/BigFractionFormatTest.java\n \n package org.apache.commons.math.fraction;\n \n+import java.math.BigDecimal;\n import java.math.BigInteger;\n import java.text.NumberFormat;\n import java.text.ParseException;\n             // expected\n         }\n     }\n+\n+    public void testParseBig() throws ParseException {\n+        BigFraction f1 =\n+            improperFormat.parse(\"167213075789791382630275400487886041651764456874403\" +\n+                                 \" / \" +\n+                                 \"53225575123090058458126718248444563466137046489291\");\n+        assertEquals(Math.PI, f1.doubleValue(), 0.0);\n+        BigFraction f2 =\n+            properFormat.parse(\"3 \" +\n+                               \"7536350420521207255895245742552351253353317406530\" +\n+                               \" / \" +\n+                               \"53225575123090058458126718248444563466137046489291\");\n+        assertEquals(Math.PI, f2.doubleValue(), 0.0);\n+        assertEquals(f1, f2);\n+        BigDecimal pi =\n+            new BigDecimal(\"3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068\");\n+        assertEquals(pi, f1.bigDecimalValue(99, BigDecimal.ROUND_HALF_EVEN));\n+    }\n     \n     public void testNumeratorFormat() {\n         NumberFormat old = properFormat.getNumeratorFormat();", "timestamp": 1238346609, "metainfo": ""}