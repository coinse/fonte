{"sha": "4020136a4c3ff42348cd97e76758cab001288ac9", "log": "MATH-438 Removed deprecated class. Updated affected files to use the new \"NonPositiveDefiniteMatrixException\" defined in package \"exception\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n+++ b/src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n package org.apache.commons.math.random;\n \n import org.apache.commons.math.DimensionMismatchException;\n+import org.apache.commons.math.exception.NonPositiveDefiniteMatrixException;\n import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.NotPositiveDefiniteMatrixException;\n import org.apache.commons.math.linear.RealMatrix;\n import org.apache.commons.math.util.FastMath;\n \n      * components\n      * @exception IllegalArgumentException if there is a dimension\n      * mismatch between the mean vector and the covariance matrix\n-     * @exception NotPositiveDefiniteMatrixException if the\n+     * @exception NonPositiveDefiniteMatrixException if the\n      * covariance matrix is not strictly positive definite\n      * @exception DimensionMismatchException if the mean and covariance\n      * arrays dimensions don't match\n     public CorrelatedRandomVectorGenerator(double[] mean,\n                                            RealMatrix covariance, double small,\n                                            NormalizedRandomGenerator generator)\n-    throws NotPositiveDefiniteMatrixException, DimensionMismatchException {\n+    throws DimensionMismatchException {\n \n         int order = covariance.getRowDimension();\n         if (mean.length != order) {\n      * considered to be dependent on previous ones and are discarded\n      * @param generator underlying generator for uncorrelated normalized\n      * components\n-     * @exception NotPositiveDefiniteMatrixException if the\n+     * @exception NonPositiveDefiniteMatrixException if the\n      * covariance matrix is not strictly positive definite\n      */\n     public CorrelatedRandomVectorGenerator(RealMatrix covariance, double small,\n-                                           NormalizedRandomGenerator generator)\n-    throws NotPositiveDefiniteMatrixException {\n-\n+                                           NormalizedRandomGenerator generator) {\n         int order = covariance.getRowDimension();\n         mean = new double[order];\n         for (int i = 0; i < order; ++i) {\n      * @param covariance covariance matrix\n      * @param small diagonal elements threshold under which  column are\n      * considered to be dependent on previous ones and are discarded\n-     * @exception NotPositiveDefiniteMatrixException if the\n+     * @exception NonPositiveDefiniteMatrixException if the\n      * covariance matrix is not strictly positive definite\n      */\n-    private void decompose(RealMatrix covariance, double small)\n-    throws NotPositiveDefiniteMatrixException {\n-\n+    private void decompose(RealMatrix covariance, double small) {\n         int order = covariance.getRowDimension();\n         double[][] c = covariance.getData();\n         double[][] b = new double[order][order];\n             if (c[ir][ir] < small) {\n \n                 if (rank == 0) {\n-                    throw new NotPositiveDefiniteMatrixException();\n+                    throw new NonPositiveDefiniteMatrixException(ir, small);\n                 }\n \n                 // check remaining diagonal elements\n                     if (c[index[i]][index[i]] < -small) {\n                         // there is at least one sufficiently negative diagonal element,\n                         // the covariance matrix is wrong\n-                        throw new NotPositiveDefiniteMatrixException();\n+                        throw new NonPositiveDefiniteMatrixException(i, small);\n                     }\n                 }\n \n--- a/src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n import junit.framework.TestCase;\n \n import org.apache.commons.math.DimensionMismatchException;\n+import org.apache.commons.math.exception.NonPositiveDefiniteMatrixException;\n import org.apache.commons.math.linear.MatrixUtils;\n-import org.apache.commons.math.linear.NotPositiveDefiniteMatrixException;\n import org.apache.commons.math.linear.RealMatrix;\n import org.apache.commons.math.stat.descriptive.moment.VectorialCovariance;\n import org.apache.commons.math.stat.descriptive.moment.VectorialMean;\n     }\n \n     public void testMath226()\n-        throws DimensionMismatchException, NotPositiveDefiniteMatrixException {\n+        throws DimensionMismatchException {\n         double[] mean = { 1, 1, 10, 1 };\n         double[][] cov = {\n                 { 1, 3, 2, 6 },\n                                                             rawGenerator);\n         } catch (DimensionMismatchException e) {\n             fail(e.getMessage());\n-        } catch (NotPositiveDefiniteMatrixException e) {\n+        } catch (NonPositiveDefiniteMatrixException e) {\n             fail(\"not positive definite matrix\");\n         }\n     }", "timestamp": 1289518592, "metainfo": ""}