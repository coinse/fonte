{"sha": "b1d89deddef03a6a3401b4cbf14608fe46a359ad", "log": "fixed an error introduced by a recent change in PolynomialsFunction (the coefficients array is automatically reduced if high degree coefficients are null)  ", "commit": "\n--- a/src/test/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java\n+++ b/src/test/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java\n         \n         // Verify coefficients using analytical values\n         PolynomialFunction polynomials[] = ((PolynomialSplineFunction) f).getPolynomials();\n-        double target[] = {y[0], 1d, 0d, 0d};\n-        TestUtils.assertEquals(polynomials[0].getCoefficients(), target, coefficientTolerance);\n-        target = new double[]{y[1], 1d, 0d, 0d};\n+        double target[] = {y[0], 1d};\n+        TestUtils.assertEquals(polynomials[0].getCoefficients(), target, coefficientTolerance);\n+        target = new double[]{y[1], 1d};\n         TestUtils.assertEquals(polynomials[1].getCoefficients(), target, coefficientTolerance);\n         \n         // Check interpolation\n         \n         // Verify coefficients using analytical values\n         PolynomialFunction polynomials[] = ((PolynomialSplineFunction) f).getPolynomials();\n-        double target[] = {y[0], 1d, 0d, 0d};\n-        TestUtils.assertEquals(polynomials[0].getCoefficients(), target, coefficientTolerance);\n-        target = new double[]{y[1], 1d, 0d, 0d};\n+        double target[] = {y[0], 1d};\n+        TestUtils.assertEquals(polynomials[0].getCoefficients(), target, coefficientTolerance);\n+        target = new double[]{y[1], 1d};\n         TestUtils.assertEquals(polynomials[1].getCoefficients(), target, coefficientTolerance);\n-        target = new double[]{y[2], 1d, 0d, 0d};\n+        target = new double[]{y[2], 1d};\n         TestUtils.assertEquals(polynomials[2].getCoefficients(), target, coefficientTolerance);\n         \n         // Check interpolation", "timestamp": 1233522415, "metainfo": ""}