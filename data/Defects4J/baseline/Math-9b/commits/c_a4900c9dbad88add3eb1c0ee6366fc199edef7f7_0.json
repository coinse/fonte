{"sha": "a4900c9dbad88add3eb1c0ee6366fc199edef7f7", "log": "Simplify code by using doubleHighPart  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n           return Math.PI/2; // so return the appropriate value\n       }\n \n-      if (abs(r) < Double.MAX_VALUE/HEX_40000000){ // is it safe to split r ?\n-          temp = r * HEX_40000000;\n-      } else {\n-          temp = 0.0;\n-      }\n-\n-      double ra = r + temp - temp;\n+      double ra = doubleHighPart(r);\n       double rb = r - ra;\n \n       rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division\n         final double facta = 0.01745329052209854;\n         final double factb = 1.997844754509471E-9;\n \n-        double temp = 0;\n-        if (abs(x) < Double.MAX_VALUE/HEX_40000000) { // prevent overflow to infinity\n-            temp = x * HEX_40000000;\n-        }\n-        double xa = x + temp - temp;\n+        double xa = doubleHighPart(x);\n         double xb = x - xa;\n \n         double result = xb * factb + xb * facta + xa * factb + xa * facta;\n         final double facta = 57.2957763671875;\n         final double factb = 3.145894820876798E-6;\n \n-        double temp = 0;\n-        if (abs(x) < Double.MAX_VALUE/HEX_40000000) { // prevent overflow to infinity\n-            temp = x * HEX_40000000;\n-        }\n-        double xa = x + temp - temp;\n+        double xa = doubleHighPart(x);\n         double xb = x - xa;\n \n         return xb * factb + xb * facta + xa * factb + xa * facta;", "timestamp": 1295727971, "metainfo": ""}