{"sha": "25c9eb834dd8fb71a089c154637353281ff71094", "log": "Replaced unnecessary bin search with direct computation.   ", "commit": "\n--- a/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n  *    entry per line.</li>\n  * </ol></p>\n  *\n- * @version $Revision: 1.14 $ $Date: 2004/01/25 21:30:41 $\n+ * @version $Revision: 1.15 $ $Date: 2004/01/29 06:26:14 $\n  */\n public class EmpiricalDistributionImpl implements Serializable, EmpiricalDistribution {\n \n         String str = null;\n         double val = 0.0d;\n         while ((str = in.readLine()) != null) {\n-            val = new Double(str).doubleValue();\n-            \n-            // Find bin and add value to binStats for the bin\n-            boolean found = false;\n-            int i = 0;\n-            while (!found) {\n-                if (i >= binCount) {\n-                    throw new RuntimeException(\"bin alignment error\");\n-                }\n-                if (val <= binUpperBounds[i]) {\n-                    found = true;\n-                    SummaryStatistics stats = (SummaryStatistics)binStats.get(i);\n-                    stats.addValue(val);\n-                }\n-                i++;\n-            }\n-        }\n+           val = Double.parseDouble(str);\n+           SummaryStatistics stats = \n+            (SummaryStatistics) binStats.get(Math.max((int)Math.ceil((val - min) / delta) - 1, 0));\n+           stats.addValue(val);        \n+        }\n+        \n         in.close();\n         in = null;\n         ", "timestamp": 1075357574, "metainfo": ""}