{"sha": "cfc6701de6f21b7464a3f1b94546ced7beea8441", "log": "Added missing @since tags.  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/BigMatrixImpl.java\n      * @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular\n      *  (not all rows have the same length) or empty\n      * @throws NullPointerException if <code>subMatrix</code> is null\n+     * @since 1.1\n      */\n     public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) \n     throws MatrixIndexException {\n--- a/src/java/org/apache/commons/math/linear/MatrixUtils.java\n+++ b/src/java/org/apache/commons/math/linear/MatrixUtils.java\n      * @param dimension dimension of identity matrix to generate\n      * @return identity matrix\n      * @throws IllegalArgumentException if dimension is not positive\n+     * @since 1.1\n      */\n     public static RealMatrix createRealIdentityMatrix(int dimension) {\n         RealMatrixImpl out = new RealMatrixImpl(dimension, dimension);\n      * @param dimension dimension of identity matrix to generate\n      * @return identity matrix\n      * @throws IllegalArgumentException if dimension is not positive\n+     * @since 1.1\n      */\n     public static BigMatrix createBigIdentityMatrix(int dimension) {\n         BigMatrixImpl out = new BigMatrixImpl(dimension, dimension);\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n      * @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular\n      *  (not all rows have the same length) or empty\n      * @throws NullPointerException if <code>subMatrix</code> is null\n+     * @since 1.1\n      */\n     public void setSubMatrix(double[][] subMatrix, int row, int column) \n         throws MatrixIndexException {\n--- a/src/java/org/apache/commons/math/stat/inference/TestFactory.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TestFactory.java\n /**\n  * Abstract factory to create inference test instances.\n  *\n+ * @since 1.1\n  * @version $Revision$ $Date$ \n  */\n public abstract class TestFactory {\n--- a/src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java\n  * A concrete inference test factory.  This is the default factory used by\n  * Commons-Math.\n  *  \n+ * @since 1.1\n  * @version $Revision$ $Date$\n  */\n public class TestFactoryImpl extends TestFactory {\n--- a/src/java/org/apache/commons/math/stat/inference/TestUtils.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TestUtils.java\n  * A collection of static methods to create inference test instances or to\n  * perform inference tests.\n  *\n+ * @since 1.1\n  * @version $Revision$ $Date$ \n  */\n public class TestUtils  {", "timestamp": 1120515408, "metainfo": ""}