{"sha": "0b954c55d91d02491f6a5ba6cacec1f40ae7a908", "log": "MATH-468 Forgot to commit that file!   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n import org.apache.commons.math.exception.MathIllegalArgumentException;\n import org.apache.commons.math.exception.MathRuntimeException;\n import org.apache.commons.math.exception.NumberIsTooLargeException;\n+import org.apache.commons.math.exception.NotFiniteNumberException;\n \n /**\n  * Some useful additions to the built-in functions in {@link Math}.\n     }\n \n     /**\n+     * Check that the argument is a real number.\n+     *\n+     * @param x Argument.\n+     * @throws NotFiniteNumberException if {@code x} is not a\n+     * finite real number.\n+     */\n+    public static void checkFinite(final double x) {\n+        if (Double.isInfinite(x) || Double.isNaN(x)) {\n+            throw new NotFiniteNumberException(x);\n+        }\n+    }\n+\n+    /**\n+     * Check that all the elements are real number.\n+     *\n+     * @param val Arguments.\n+     * @throws NotFiniteNumberException if any values of the array is not a\n+     * finite real number.\n+     */\n+    public static void checkFinite(final double[] val) {\n+        for (int i = 0; i < val.length; i++) {\n+            final double x = val[i];\n+            if (Double.isInfinite(x) || Double.isNaN(x)) {\n+                throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);\n+            }\n+        }\n+    }\n+\n+    /**\n      * Returns the Cartesian norm (2-norm), handling both overflow and underflow.\n      * Translation of the minpack enorm subroutine.\n      *", "timestamp": 1294330645, "metainfo": ""}