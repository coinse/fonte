{"sha": "1186b56f09c2e899f16dcebc7619183f0e9ca41e", "log": "Added \"final\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n      * @param strict Whether the order should be strict.\n      * @return {@code true} if sorted, {@code false} otherwise\n      */\n-    public static boolean isMonotone(Comparable[] val, OrderDirection dir,\n-            boolean strict){\n+    public static boolean isMonotone(Comparable[] val,\n+                                     OrderDirection dir,\n+                                     boolean strict){\n         Comparable previous = val[0];\n-        int max = val.length;\n+        final int max = val.length;\n         int comp;\n         for (int i = 1; i < max; i++) {\n             switch (dir) {\n      * @param strict Whether the order should be strict.\n      * @return {@code true} if sorted, {@code false} otherwise\n      */\n-    public static boolean isMonotone(double[] val, OrderDirection dir,\n+    public static boolean isMonotone(double[] val,\n+                                     OrderDirection dir,\n                                      boolean strict){\n         double previous = val[0];\n-        int max = val.length;\n+        final int max = val.length;\n         for (int i = 1; i < max; i++) {\n             switch (dir) {\n             case INCREASING:\n     public static boolean checkOrder(double[] val, OrderDirection dir,\n                                      boolean strict, boolean abort) {\n         double previous = val[0];\n-        int max = val.length;\n+        final int max = val.length;\n         for (int i = 1; i < max; i++) {\n             switch (dir) {\n             case INCREASING:", "timestamp": 1316685302, "metainfo": ""}