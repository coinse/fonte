{"sha": "7ed9bad780c2d7e1a3dc99f4dd5efa8d4d4fb6b0", "log": "replaced a Java6 specific signature with its Java5 counterpart (Array.newInstance(Class<T>, int ...)  --> (Array.newInstance(Class<T>, int[])  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java\n             return (T[][]) Array.newInstance(dummyRow.getClass(), rows);            \n         }\n         T[][] array =\n-            (T[][]) Array.newInstance(field.getZero().getClass(), rows, columns);\n+            (T[][]) Array.newInstance(field.getZero().getClass(), new int[] { rows, columns });\n         for (int i = 0; i < array.length; ++i) {\n             Arrays.fill(array[i], field.getZero());\n         }\n--- a/src/java/org/apache/commons/math/linear/MatrixUtils.java\n+++ b/src/java/org/apache/commons/math/linear/MatrixUtils.java\n         createFieldIdentityMatrix(final Field<T> field, final int dimension) {\n         final T zero = field.getZero();\n         final T one  = field.getOne();\n-        final T[][] d = (T[][]) Array.newInstance(zero.getClass(), dimension, dimension);\n+        final T[][] d = (T[][]) Array.newInstance(zero.getClass(), new int[] { dimension, dimension });\n         for (int row = 0; row < dimension; row++) {\n             final T[] dRow = d[row];\n             Arrays.fill(dRow, zero);", "timestamp": 1240393197, "metainfo": ""}