{"sha": "003bfee8e69da8a102b670997bfd6b4846523e8a", "log": "Fixed bug found by PMD.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/complex/Quaternion.java\n+++ b/src/main/java/org/apache/commons/math3/complex/Quaternion.java\n         if (v.length != 3) {\n             throw new DimensionMismatchException(v.length, 3);\n         }\n-        this.q0 = 0;\n+        this.q0 = scalar;\n         this.q1 = v[0];\n         this.q2 = v[1];\n         this.q3 = v[2];\n--- a/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java\n+++ b/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java\n         Assert.assertEquals(q3, vP[2], 0);\n     }\n \n+    @Test\n+    public final void testAccessors3() {\n+        final double q0 = 2;\n+        final double q1 = 5.4;\n+        final double q2 = 17;\n+        final double q3 = 0.0005;\n+        final Quaternion q = new Quaternion(q0, new double[] { q1, q2, q3 });\n+\n+        final double sP = q.getScalarPart();\n+        final double[] vP = q.getVectorPart();\n+\n+        Assert.assertEquals(q0, sP, 0);\n+        Assert.assertEquals(q1, vP[0], 0);\n+        Assert.assertEquals(q2, vP[1], 0);\n+        Assert.assertEquals(q3, vP[2], 0);\n+    }\n+\n     @Test(expected=DimensionMismatchException.class)\n     public void testWrongDimension() {\n         new Quaternion(new double[] { 1, 2 });", "timestamp": 1355401923, "metainfo": ""}