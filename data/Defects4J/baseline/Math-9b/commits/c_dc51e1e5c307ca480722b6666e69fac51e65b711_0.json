{"sha": "dc51e1e5c307ca480722b6666e69fac51e65b711", "log": "Added missing throws declarations, suppressed warnings. JIRA: MATH-854.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math3/stat/Frequency.java\n      * Adds 1 to the frequency count for v.\n      *\n      * @param v the value to add.\n-     */\n-    public void addValue(int v) {\n+     * @throws MathIllegalArgumentException if the table contains entries not\n+     * comparable to Integer\n+     */\n+    public void addValue(int v) throws MathIllegalArgumentException {\n         addValue(Long.valueOf(v));\n     }\n \n      * Adds 1 to the frequency count for v.\n      *\n      * @param v the value to add.\n-     */\n-    public void addValue(long v) {\n+     * @throws MathIllegalArgumentException if the table contains entries not\n+     * comparable to Long\n+     */\n+    public void addValue(long v) throws MathIllegalArgumentException {\n         addValue(Long.valueOf(v));\n     }\n \n      * Adds 1 to the frequency count for v.\n      *\n      * @param v the value to add.\n-     */\n-    public void addValue(char v) {\n+     * @throws MathIllegalArgumentException if the table contains entries not\n+     * comparable to Char\n+     */\n+    public void addValue(char v) throws MathIllegalArgumentException {\n         addValue(Character.valueOf(v));\n     }\n \n      * @param v the value to lookup.\n      * @return the proportion of values equal to v\n      */\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     public long getCumFreq(Comparable<?> v) {\n         if (getSumFreq() == 0) {\n             return 0;\n         if (v instanceof Integer) {\n             return getCumFreq(((Integer) v).longValue());\n         }\n-        @SuppressWarnings(\"unchecked\") // OK, freqTable is Comparable<?>\n         Comparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();\n         if (c == null) {\n             c = new NaturalComparator();", "timestamp": 1347155254, "metainfo": ""}