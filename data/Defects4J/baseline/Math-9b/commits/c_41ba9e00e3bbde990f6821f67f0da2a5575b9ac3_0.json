{"sha": "41ba9e00e3bbde990f6821f67f0da2a5575b9ac3", "log": "Modified ProperFractionFormat to reject embedded minus signs. JIRA: MATH-60 Reported by Nhung Nnguyen   ", "commit": "\n--- a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java\n+++ b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java\n /**\n  * Formats a Fraction number in proper format.  The number format for each of\n  * the whole number, numerator and, denominator can be configured.\n+ * <p>\n+ * Minus signs are only allowed in the whole number part - i.e.,\n+ * \"-3 1/2\" is legitimate and denotes -7/2, but \"-3 -1/2\" is invalid and\n+ * will result in a <code>ParseException</code>.\n  * \n  * @since 1.1\n  * @version $Revision$ $Date$\n     /**\n      * Parses a string to produce a {@link Fraction} object.  This method\n      * expects the string to be formatted as a proper fraction.\n+     * <p>\n+     * Minus signs are only allowed in the whole number part - i.e.,\n+     * \"-3 1/2\" is legitimate and denotes -7/2, but \"-3 -1/2\" is invalid and\n+     * will result in a <code>ParseException</code>.\n+     * \n      * @param source the string to parse\n      * @param pos input/ouput parsing parameter.\n      * @return the parsed {@link Fraction} object.\n             // invalid integer number\n             // set index back to initial, error index should already be set\n             // character examined.\n+            pos.setIndex(initialIndex);\n+            return null;\n+        }\n+        \n+        if (num.intValue() < 0) {\n+            // minus signs should be leading, invalid expression\n             pos.setIndex(initialIndex);\n             return null;\n         }\n             pos.setIndex(initialIndex);\n             return null;\n         }\n+        \n+        if (den.intValue() < 0) {\n+            // minus signs must be leading, invalid\n+            pos.setIndex(initialIndex);\n+            return null;\n+        }\n \n         int w = whole.intValue();\n         int n = num.intValue();\n--- a/src/test/org/apache/commons/math/fraction/FractionFormatTest.java\n+++ b/src/test/org/apache/commons/math/fraction/FractionFormatTest.java\n         }\n     }\n     \n+    public void testParseProperInvalidMinus() {\n+        String source = \"2 -2 / 3\";\n+        try {\n+            Fraction c = properFormat.parse(source);\n+            fail(\"invalid minus in improper fraction.\");\n+        } catch (ParseException ex) {\n+            // expected\n+        }\n+        source = \"2 2 / -3\";\n+        try {\n+            Fraction c = properFormat.parse(source);\n+            fail(\"invalid minus in improper fraction.\");\n+        } catch (ParseException ex) {\n+            // expected\n+        }\n+    }\n+    \n     public void testNumeratorFormat() {\n     \tNumberFormat old = properFormat.getNumeratorFormat();\n         NumberFormat nf = NumberFormat.getInstance();", "timestamp": 1149476812, "metainfo": ""}