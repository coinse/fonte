{"sha": "95ba92b94dfd4436e268ceb11dd326710e870998", "log": "replaced use of deprecated method  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/events/EventState.java\n+++ b/src/java/org/apache/commons/math/ode/events/EventState.java\n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.BrentSolver;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n-import org.apache.commons.math.analysis.UnivariateRealSolver;\n import org.apache.commons.math.ode.DerivativeException;\n import org.apache.commons.math.ode.sampling.StepInterpolator;\n \n                     // variation direction, with respect to the integration direction\n                     increasing = (gb >= ga);\n \n-                    final UnivariateRealSolver solver = new BrentSolver(new UnivariateRealFunction() {\n+                    final UnivariateRealFunction f = new UnivariateRealFunction() {\n                         public double value(final double t) throws FunctionEvaluationException {\n                             try {\n                                 interpolator.setInterpolatedTime(t);\n                                 throw new FunctionEvaluationException(t, e);\n                             }\n                         }\n-                    });\n+                    };\n+                    final BrentSolver solver = new BrentSolver();\n                     solver.setAbsoluteAccuracy(convergence);\n                     solver.setMaximalIterationCount(maxIterationCount);\n-                    final double root = (ta <= tb) ? solver.solve(ta, tb) : solver.solve(tb, ta);\n+                    final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);\n                     if (Math.abs(root - ta) <= convergence) {\n                         // we have found (again ?) a past event, we simply ignore it\n                         ta = tb;", "timestamp": 1230119742, "metainfo": ""}