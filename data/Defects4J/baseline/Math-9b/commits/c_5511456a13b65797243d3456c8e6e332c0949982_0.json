{"sha": "5511456a13b65797243d3456c8e6e332c0949982", "log": "Track name change in r1172224  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java\n \n     private static int LOOPS = 10;\n     private static boolean MAX = false;\n-    private static boolean compute = false;\n+    private static boolean compute = true;\n \n     public static void main(String[] args) throws Exception {\n         if (args.length>0) MAX = Boolean.valueOf(args[0]);\n         if (args.length>1) compute = Boolean.valueOf(args[1]);\n         if (args.length>2) LOOPS = Integer.valueOf(args[2]);\n         p(\"Using \"+ (MAX ? \"max(0,0)\" : \"exp(100)\") + \"; compute=\" + compute+\"\\n\");\n-        Field usePrecompute = FastMath.class.getDeclaredField(\"USE_PRECOMPUTED_TABLES\");\n+        Field usePrecompute = FastMath.class.getDeclaredField(\"RECOMPUTE_TABLES_AT_RUNTIME\");\n         usePrecompute.setAccessible(true);\n         if (usePrecompute.getBoolean(null) != compute) {\n             usePrecompute.setBoolean(null, compute);\n         test();\n     }\n     private static void test(){\n-        p(\"new\");\n+        p(\"times\");\n         for(int i=0; i< LOOPS; i++){\n             p(\" \");\n             long t1 = System.nanoTime();", "timestamp": 1316339371, "metainfo": ""}