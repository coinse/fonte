{"sha": "96eca83048dfa6759382e3f4942e0ebfcf2db635", "log": "MATH-361   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java\n+++ b/src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java\n import java.io.Serializable;\n import java.util.Arrays;\n \n-import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.exception.NoDataException;\n import org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n import org.apache.commons.math.util.LocalizedFormats;\n      *\n      * @param c polynomial coefficients\n      * @throws NullPointerException if c is null\n-     * @throws NotStrictlyPositiveException if c is empty\n+     * @throws NoDataException if c is empty\n      */\n     public PolynomialFunction(double c[]) {\n         super();\n-        if (c.length < 1) {\n-            throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY,\n-                                                   c.length);\n-        }\n-        int l = c.length;\n-        while ((l > 1) && (c[l - 1] == 0)) {\n-            --l;\n-        }\n-        this.coefficients = new double[l];\n-        System.arraycopy(c, 0, this.coefficients, 0, l);\n+        int n = c.length;\n+        if (n == 0) {\n+            throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n+        }\n+        while ((n > 1) && (c[n - 1] == 0)) {\n+            --n;\n+        }\n+        this.coefficients = new double[n];\n+        System.arraycopy(c, 0, this.coefficients, 0, n);\n     }\n \n     /**\n      * @param coefficients  the coefficients of the polynomial to evaluate\n      * @param argument  the input value\n      * @return  the value of the polynomial\n-     * @throws NotStrictlyPositiveException if coefficients is empty\n+     * @throws NoDataException if coefficients is empty\n      * @throws NullPointerException if coefficients is null\n      */\n     protected static double evaluate(double[] coefficients, double argument) {\n         int n = coefficients.length;\n-        if (n < 1) {\n-            throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY,\n-                                                   n);\n+        if (n == 0) {\n+            throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n         }\n         double result = coefficients[n - 1];\n         for (int j = n -2; j >=0; j--) {\n      *\n      * @param coefficients  the coefficients of the polynomial to differentiate\n      * @return the coefficients of the derivative or null if coefficients has length 1.\n-     * @throws NotStrictlyPositiveException if coefficients is empty\n+     * @throws NoDataException if coefficients is empty\n      * @throws NullPointerException if coefficients is null\n      */\n     protected static double[] differentiate(double[] coefficients) {\n         int n = coefficients.length;\n-        if (n < 1) {\n-            throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY,\n-                                                   n);\n+        if (n == 0) {\n+            throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n         }\n         if (n == 1) {\n             return new double[]{0};\n--- a/src/main/java/org/apache/commons/math/exception/NoDataException.java\n+++ b/src/main/java/org/apache/commons/math/exception/NoDataException.java\n  */\n package org.apache.commons.math.exception;\n \n+import org.apache.commons.math.util.Localizable;\n import org.apache.commons.math.util.LocalizedFormats;\n \n /**\n      * Construct the exception.\n      */\n     public NoDataException() {\n-        super(LocalizedFormats.NO_DATA, null);\n+        this(null);\n+    }\n+    /**\n+     * Construct the exception with a specific context.\n+     *\n+     * @param specific Contextual information on what caused the exception.\n+     */\n+    public NoDataException(Localizable specific) {\n+        super(specific, LocalizedFormats.NO_DATA, null);\n     }\n }", "timestamp": 1278711619, "metainfo": ""}