{"sha": "8dd6c42c4ab6157f9126ac5430b33fd6ce262429", "log": "Typo in constant name  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n      * This is used by sinQ, because its faster to do a table lookup than\n      * a multiply in this time-critical routine\n      */\n-    private static final double EIGHTHES[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};\n+    private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};\n \n     /** Table of 2^((n+2)/3) */\n     private static final double CBRTTWO[] = { 0.6299605249474366,\n      */\n     private static double sinQ(double xa, double xb) {\n         int idx = (int) ((xa * 8.0) + 0.5);\n-        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;\n+        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;\n \n         // Table lookups\n         final double sintA = SINE_TABLE_A[idx];\n     private static double tanQ(double xa, double xb, boolean cotanFlag) {\n \n         int idx = (int) ((xa * 8.0) + 0.5);\n-        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;\n+        final double epsilon = xa - EIGHTHS[idx]; //idx*0.125;\n \n         // Table lookups\n         final double sintA = SINE_TABLE_A[idx];\n         double resultb;\n \n         //result = yb + eighths[idx] + ya;\n-        double za = EIGHTHES[idx] + ya;\n-        double zb = -(za - EIGHTHES[idx] - ya);\n+        double za = EIGHTHS[idx] + ya;\n+        double zb = -(za - EIGHTHS[idx] - ya);\n         temp = za + yb;\n         zb += -(temp - za - yb);\n         za = temp;", "timestamp": 1295584618, "metainfo": ""}