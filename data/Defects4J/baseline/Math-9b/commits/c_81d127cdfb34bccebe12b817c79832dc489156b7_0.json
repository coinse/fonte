{"sha": "81d127cdfb34bccebe12b817c79832dc489156b7", "log": "Added a check for too few data in linear regression JIRA: MATH-279  ", "commit": "\n--- a/src/java/org/apache/commons/math/MessagesResources_fr.java\n+++ b/src/java/org/apache/commons/math/MessagesResources_fr.java\n     // org.apache.commons.math.ode.MultistepIntegrator\n     { \"{0} method needs at least one previous point\",\n       \"la m\\u00e9thode {0} n\\u00e9cessite au moins un point pr\\u00e9c\\u00e9dent\" },\n-\n-    // org.apache.commons.math.ode.stiff.BDFIntegrator\n-    { \"unsupported order {0} for BDF methods, must be between {1} and {2}\",\n-      \"ordre {0} non support\\u00e9 pour les m\\u00e9thodes BDF, doit \\u00eatre entre {1} et {2}\" },\n-    { \"corrector failed to converge after {0} iterations at t = {1}\",\n-      \"\\u00e9chec de convergence du correcteur apr\\u00e8s {0} it\\u00e9rations \\u00e0 t = {1}\" },\n \n     // org.apache.commons.math.ode.ContinuousOutputModel\n     // org.apache.commons.math.optimization.direct.DirectSearchOptimizer\n    { \"matrix is not upper-triangular, entry ({0}, {1}) = {2} is too large\",\n      \"matrice non triangulaire sup\\u00e9rieure, l''\\u00e9l\\u00e9ment ({0}, {1}) = {2} est trop grand\" },\n \n+   // org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression\n+   { \"not enough data ({0} rows) for this many predictors ({1} predictors)\",\n+     \"pas assez de donn\\u00e9es ({0} lignes) pour {1} pr\\u00e9dicteurs\" },\n+\n    // org.apache.commons.math.distribution.AbstractContinuousDistribution\n    // org.apache.commons.math.distribution.AbstractIntegerDistribution\n    // org.apache.commons.math.distribution.ExponentialDistributionImpl\n--- a/src/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java\n                   \"dimension mismatch {0} != {1}\",\n                   (x == null) ? 0 : x.length,\n                   (y == null) ? 0 : y.length);\n+        } else if ((x.length > 0) && (x[0].length > x.length)) {\n+            throw MathRuntimeException.createIllegalArgumentException(\n+                  \"not enough data ({0} rows) for this many predictors ({1} predictors)\",\n+                  x.length, x[0].length);\n         }\n     }\n \n--- a/src/test/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java\n     }\n     \n     @Test(expected=IllegalArgumentException.class)\n+    public void notEnoughData() {\n+        double[]   reducedY = new double[y.length - 1];\n+        double[][] reducedX = new double[x.length - 1][];\n+        double[][] reducedO = new double[omega.length - 1][];\n+        System.arraycopy(y,     0, reducedY, 0, reducedY.length);\n+        System.arraycopy(x,     0, reducedX, 0, reducedX.length);\n+        System.arraycopy(omega, 0, reducedO, 0, reducedO.length);\n+        createRegression().newSampleData(reducedY, reducedX, reducedO);\n+    }\n+    \n+    @Test(expected=IllegalArgumentException.class)\n     public void cannotAddCovarianceDataWithSampleSizeMismatch() {\n         double[] y = new double[]{1.0, 2.0};\n         double[][] x = new double[2][];", "timestamp": 1246800577, "metainfo": ""}