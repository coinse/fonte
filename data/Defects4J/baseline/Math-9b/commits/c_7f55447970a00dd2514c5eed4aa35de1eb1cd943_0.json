{"sha": "7f55447970a00dd2514c5eed4aa35de1eb1cd943", "log": "MATH-795: factored out testAddToEntry().   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java\n         }\n     }\n \n-    @Test\n-    public void testAddToEntry() {\n-        final double[] v = new double[] { 1, 2, 3 };\n-        final ArrayRealVector x = new ArrayRealVector(v);\n-        final double inc = 7;\n-        for (int i = 0; i < x.getDimension(); i++) {\n-            x.addToEntry(i, inc);\n-        }\n-        for (int i = 0; i < x.getDimension(); i++) {\n-            Assert.assertEquals(v[i] + inc, x.getEntry(i), 0);\n-        }\n-    }\n-\n     @Override\n     public RealVector create(final double[] data) {\n         return new ArrayRealVector(data, true);\n--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java\n         Assert.assertEquals(v,TestUtils.serializeAndRecover(v));\n     }\n \n+\n+    @Test\n+    public void testAddToEntry() {\n+        final double[] v = new double[] { 1, 2, 3 };\n+        final RealVector x = create(v);\n+        final double inc = 7;\n+        for (int i = 0; i < x.getDimension(); i++) {\n+            x.addToEntry(i, inc);\n+        }\n+        for (int i = 0; i < x.getDimension(); i++) {\n+            Assert.assertEquals(v[i] + inc, x.getEntry(i), 0);\n+        }\n+    }\n+\n     /*\n      * TESTS OF THE VISITOR PATTERN\n      */", "timestamp": 1338875141, "metainfo": ""}