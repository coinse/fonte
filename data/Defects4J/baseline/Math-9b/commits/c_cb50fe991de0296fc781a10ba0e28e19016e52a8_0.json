{"sha": "cb50fe991de0296fc781a10ba0e28e19016e52a8", "log": "MATH-361. Added a check to avoid triggering a \"NullPointerException\" if the argument list is \"null\". Added unit tests.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java\n+++ b/src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java\n      */\n     private List<Object> flatten(Object[] array) {\n         final List<Object> list = new ArrayList<Object>();\n-        for (Object o : array) {\n-            if (o instanceof Object[]) {\n-                list.addAll(flatten((Object[]) o));\n-            } else {\n-                list.add(o);\n+        if (array != null) {\n+            for (Object o : array) {\n+                if (o instanceof Object[]) {\n+                    list.addAll(flatten((Object[]) o));\n+                } else {\n+                    list.add(o);\n+                }\n             }\n         }\n         return list;\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/exception/DimensionMismatchExceptionTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.exception;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for {@link DimensionMismatchException}.\n+ * \n+ * @version $Revision$ $Date$ \n+ */\n+public class DimensionMismatchExceptionTest {\n+    @Test\n+    public void testAccessors() {\n+        final DimensionMismatchException e = new DimensionMismatchException(1, 2);\n+        Assert.assertEquals(1, e.getArgument());\n+        Assert.assertEquals(2, e.getDimension());\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.exception;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for {@link NotPositiveException}.\n+ * \n+ * @version $Revision$ $Date$ \n+ */\n+public class NotPositiveExceptionTest {\n+    @Test\n+    public void testAccessors() {\n+        final NotPositiveException e = new NotPositiveException(-1);\n+        Assert.assertEquals(-1, e.getArgument());\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.exception;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for {@link NotStrictlyPositiveException}.\n+ * \n+ * @version $Revision$ $Date$ \n+ */\n+public class NotStrictlyPositiveExceptionTest {\n+    @Test\n+    public void testAccessors() {\n+        final NotStrictlyPositiveException e = new NotStrictlyPositiveException(0);\n+        Assert.assertEquals(0, e.getArgument());\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/exception/OutOfRangeExceptionTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.exception;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for {@link OutOfRangeException}.\n+ * \n+ * @version $Revision$ $Date$ \n+ */\n+public class OutOfRangeExceptionTest {\n+    @Test\n+    public void testAccessors() {\n+        final OutOfRangeException e = new OutOfRangeException(-1, 0, 2);\n+        Assert.assertEquals(-1, e.getArgument());\n+        Assert.assertEquals(0, e.getLo());\n+        Assert.assertEquals(2, e.getHi());\n+    }\n+}", "timestamp": 1277726495, "metainfo": ""}