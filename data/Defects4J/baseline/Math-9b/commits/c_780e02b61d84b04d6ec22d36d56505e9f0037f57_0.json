{"sha": "780e02b61d84b04d6ec22d36d56505e9f0037f57", "log": "Changing DenseRealMatrix to return a specific type, instead of interface type.  I beleive the consensus is to leave RealMatrixImpl and RealVectorImpl alone for now (since they were in 1.2), so that's what I'm doing.   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/DenseRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/DenseRealMatrix.java\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix createMatrix(final int rowDimension, final int columnDimension)\n+    public DenseRealMatrix createMatrix(final int rowDimension, final int columnDimension)\n         throws IllegalArgumentException {\n         return new DenseRealMatrix(rowDimension, columnDimension);\n     }\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix copy() {\n+    public DenseRealMatrix copy() {\n \n         // create an empty matrix\n         DenseRealMatrix copied = new DenseRealMatrix(rows, columns);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix add(final RealMatrix m)\n+    public DenseRealMatrix add(final RealMatrix m)\n         throws IllegalArgumentException {\n         try {\n             return add((DenseRealMatrix) m);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix subtract(final RealMatrix m)\n+    public DenseRealMatrix subtract(final RealMatrix m)\n         throws IllegalArgumentException {\n         try {\n             return subtract((DenseRealMatrix) m);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix scalarAdd(final double d)\n+    public DenseRealMatrix scalarAdd(final double d)\n         throws IllegalArgumentException {\n \n         final DenseRealMatrix out = new DenseRealMatrix(rows, columns);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix multiply(final RealMatrix m)\n+    public DenseRealMatrix multiply(final RealMatrix m)\n         throws IllegalArgumentException {\n         try {\n             return multiply((DenseRealMatrix) m);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix getSubMatrix(final int startRow, final int endRow,\n+    public DenseRealMatrix getSubMatrix(final int startRow, final int endRow,\n                                    final int startColumn, final int endColumn)\n         throws MatrixIndexException {\n \n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix getRowMatrix(final int row)\n+    public DenseRealMatrix getRowMatrix(final int row)\n         throws MatrixIndexException {\n \n         MatrixUtils.checkRowIndex(this, row);\n     \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix getColumnMatrix(final int column)\n+    public DenseRealMatrix getColumnMatrix(final int column)\n         throws MatrixIndexException {\n \n         MatrixUtils.checkColumnIndex(this, column);\n \n     /** {@inheritDoc} */\n     @Override\n-    public RealMatrix transpose() {\n+    public DenseRealMatrix transpose() {\n \n         final int nRows = getRowDimension();\n         final int nCols = getColumnDimension();", "timestamp": 1242876283, "metainfo": ""}