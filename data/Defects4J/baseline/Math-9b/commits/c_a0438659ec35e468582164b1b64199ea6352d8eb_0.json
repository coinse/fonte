{"sha": "a0438659ec35e468582164b1b64199ea6352d8eb", "log": "MATH-629 Direct call to the overloaded method that actually implements the functionality.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java\n     @Override\n     public RealVector add(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return add((ArrayRealVector) v);\n+            return add(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double[] out = data.clone();\n     @Override\n     public RealVector subtract(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return subtract((ArrayRealVector) v);\n+            return subtract(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double[] out = data.clone();\n     /** {@inheritDoc} */\n     public RealVector ebeMultiply(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return ebeMultiply((ArrayRealVector) v);\n+            return ebeMultiply(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double[] out = data.clone();\n     /** {@inheritDoc} */\n     public RealVector ebeDivide(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return ebeDivide((ArrayRealVector) v);\n+            return ebeDivide(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double[] out = data.clone();\n     @Override\n     public double dotProduct(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return dotProduct((ArrayRealVector) v);\n+            return dotProduct(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double dot = 0;\n     @Override\n     public double getDistance(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return getDistance((ArrayRealVector) v);\n+            return getDistance(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double sum = 0;\n     @Override\n     public double getL1Distance(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return getL1Distance((ArrayRealVector) v);\n+            return getL1Distance(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double sum = 0;\n     @Override\n     public double getLInfDistance(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return getLInfDistance((ArrayRealVector) v);\n+            return getLInfDistance(((ArrayRealVector) v).data);\n         } else {\n             checkVectorDimensions(v);\n             double max = 0;\n     @Override\n     public RealMatrix outerProduct(RealVector v) {\n         if (v instanceof ArrayRealVector) {\n-            return outerProduct((ArrayRealVector) v);\n+            return outerProduct(((ArrayRealVector) v).data);\n         } else {\n             final int m = data.length;\n             final int n = v.getDimension();", "timestamp": 1311375097, "metainfo": ""}