{"sha": "f0d243d3af0023a2bad35687e95c4b24a88d46a0", "log": "Modified tests to reflect changes addressing PR #25972.   ", "commit": "\n--- a/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n /**\n  * Test cases for the EmpiricalDistribution class\n  *\n- * @version $Revision: 1.7 $ $Date: 2003/11/15 16:01:40 $\n+ * @version $Revision: 1.8 $ $Date: 2004/01/11 07:26:51 $\n  */\n \n public final class EmpiricalDistributionTest extends TestCase {\n \n-    private EmpiricalDistribution empiricalDistribution = null;\n-    private File file = null;\n+    protected EmpiricalDistribution empiricalDistribution = null;\n+    protected File file = null;\n+    protected URL url = null; \n     \n     public EmpiricalDistributionTest(String name) {\n         super(name);\n \n     public void setUp() {\n         empiricalDistribution = new EmpiricalDistributionImpl(100);\n-        URL url = getClass().getResource(\"testData.txt\");\n+        url = getClass().getResource(\"testData.txt\");\n         file = new File(url.getFile());\n     }\n \n      * the sample data file.\n      */\n     public void testLoad() throws Exception {\n-        empiricalDistribution.load(file);   \n+        empiricalDistribution.load(url);   \n         // testData File has 10000 values, with mean ~ 5.0, std dev ~ 1\n         // Make sure that loaded distribution matches this\n         assertEquals(empiricalDistribution.getSampleStats().getN(),1000,10E-7);\n         assertEquals\n          (\"std dev\", stats.getStandardDeviation(),1.0173699343977738,tolerance);\n     }\n-        \n-        \n-       \n-        \n+                    \n }\n--- a/src/test/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/org/apache/commons/math/random/ValueServerTest.java\n /**\n  * Test cases for the ValueServer class.\n  *\n- * @version $Revision: 1.8 $ $Date: 2003/11/15 16:01:40 $\n+ * @version $Revision: 1.9 $ $Date: 2004/01/11 07:26:51 $\n  */\n \n public final class ValueServerTest extends TestCase {\n         vs.setMode(ValueServer.DIGEST_MODE);\n         try {\n             URL url = getClass().getResource(\"testData.txt\");\n-            vs.setValuesFileURL(url.toExternalForm()); \n+            vs.setValuesFileURL(url); \n         } catch (Exception ex) {\n             fail(\"malformed test URL\");\n         }\n     }\n     \n     /**\n-      * Make sure exception thrown if nextReplay() is attempted\n-      * before opening replay file.\n-      */\n-    public void testNextReplayFail() throws Exception {\n-        try {\n-            vs.setMode(ValueServer.REPLAY_MODE);\n-            vs.getNext();\n-            fail(\"Expecting IllegalStateException\");\n-        } catch (IllegalStateException ex) {;}\n-    }\n-    \n-    /**\n      * Test ValueServer REPLAY_MODE using values in testData file.<br> \n      * Check that the values 1,2,1001,1002 match data file values 1 and 2.\n      * the sample data file.\n         vs.setMode(ValueServer.CONSTANT_MODE);\n         assertEquals(\"mode test\",ValueServer.CONSTANT_MODE,vs.getMode());\n         vs.setValuesFileURL(\"http://www.apache.org\");\n-        String s = vs.getValuesFileURL();\n-        assertEquals(\"valuesFileURL test\",\"http://www.apache.org\",s);\n-    }\n-        \n-        \n-        \n-        \n-        \n-        \n+        URL url = vs.getValuesFileURL();\n+        assertEquals(\"valuesFileURL test\",\"http://www.apache.org\",url.toString());\n+    }\n+                          \n }", "timestamp": 1073806011, "metainfo": ""}