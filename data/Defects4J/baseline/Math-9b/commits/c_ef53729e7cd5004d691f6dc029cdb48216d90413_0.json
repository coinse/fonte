{"sha": "ef53729e7cd5004d691f6dc029cdb48216d90413", "log": "Added some initial tests for regression parameters and residuals.  ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java\n package org.apache.commons.math.stat.regression;\n \n import org.junit.Before;\n+import org.junit.Test;\n+import org.apache.commons.math.TestUtils;\n \n public class OLSMultipleLinearRegressionTest extends AbstractMultipleLinearRegressionTest {\n \n     protected int getSampleSize() {\n         return y.length;\n     }\n-\n+    \n+    @Test\n+    public void testPerfectFit() {\n+        double[] betaHat = regression.estimateRegressionParameters();\n+        TestUtils.assertEquals(betaHat, \n+          new double[]{11.0,0.5,0.666666666666667,0.75,0.8,0.8333333333333333},\n+                1e-12);\n+        double[] residuals = regression.estimateResiduals();\n+        TestUtils.assertEquals(residuals, new double[]{0d,0d,0d,0d,0d,0d},\n+                      1e-12);\n+        double[][] errors = regression.estimateRegressionParametersVariance();\n+        // TODO: translate this into standard error vector and check\n+    }\n+    \n+    \n+    /**\n+     * Test Longley dataset against certified values provided by NIST.\n+     * Data Source: J. Longley (1967) \"An Appraisal of Least Squares\n+     * Programs for the Electronic Computer from the Point of View of the User\"\n+     * Journal of the American Statistical Association, vol. 62. September,\n+     * pp. 819-841.\n+     * \n+     * Certified values (and data) are from NIST:\n+     * http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Longley.dat\n+     */\n+    @Test\n+    public void testLongly() {\n+        // Y values are first, then independent vars\n+        // Each row is one observation\n+        double[] design = new double[] {\n+            60323,83.0,234289,2356,1590,107608,1947,\n+            61122,88.5,259426,2325,1456,108632,1948,\n+            60171,88.2,258054,3682,1616,109773,1949,\n+            61187,89.5,284599,3351,1650,110929,1950,\n+            63221,96.2,328975,2099,3099,112075,1951,\n+            63639,98.1,346999,1932,3594,113270,1952,\n+            64989,99.0,365385,1870,3547,115094,1953,\n+            63761,100.0,363112,3578,3350,116219,1954,\n+            66019,101.2,397469,2904,3048,117388,1955,\n+            67857,104.6,419180,2822,2857,118734,1956,\n+            68169,108.4,442769,2936,2798,120445,1957,\n+            66513,110.8,444546,4681,2637,121950,1958,\n+            68655,112.6,482704,3813,2552,123366,1959,\n+            69564,114.2,502601,3931,2514,125368,1960,\n+            69331,115.7,518173,4806,2572,127852,1961,\n+            70551,116.9,554894,4007,2827,130081,1962\n+        };\n+        \n+        // Transform to Y and X required by interface\n+        double[] y = new double[16];\n+        double[][] x = new double[16][7];\n+        int pointer = 0;\n+        for (int i = 0; i < 16; i++) {\n+            y[i] = design[pointer++];\n+            x[i][0] = 1.0d;\n+            for (int j = 1; j < 7; j++) {\n+                x[i][j] = design[pointer++];\n+            }\n+        }\n+        \n+        // Estimate the model\n+        MultipleLinearRegression model = new OLSMultipleLinearRegression();\n+        model.addData(y, x, null);\n+        \n+        // Check expected beta values from NIST\n+        double[] betaHat = model.estimateRegressionParameters();\n+        TestUtils.assertEquals(betaHat, \n+          new double[]{-3482258.63459582, 15.0618722713733,\n+                -0.358191792925910E-01,-2.02022980381683,\n+                -1.03322686717359,-0.511041056535807E-01,\n+                 1829.15146461355}, 1E-1); // <- UGH! need better accuracy!\n+        \n+        // Check expected residuals from R\n+        double[] residuals = model.estimateResiduals();\n+        TestUtils.assertEquals(residuals, new double[]{\n+                267.340029759711,-94.0139423988359,46.28716775752924,\n+                -410.114621930906,309.7145907602313,-249.3112153297231,\n+                -164.0489563956039,-13.18035686637081,14.30477260005235,\n+                 455.394094551857,-17.26892711483297,-39.0550425226967,\n+                -155.5499735953195,-85.6713080421283,341.9315139607727,\n+                -206.7578251937366},\n+                      1E-2); // <- UGH again! need better accuracy!\n+        \n+        // Check standard errors from NIST\n+        double[][] errors = model.estimateRegressionParametersVariance();\n+        //TODO:  translate this into std error vector and check\n+        \n+    }\n }", "timestamp": 1212976662, "metainfo": ""}