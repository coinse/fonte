{"sha": "f2288dd9227835f300a131f501c4420fa3f2d928", "log": "Removed LocalizedFormats.ENTRY previously introduced in r1383747, as LocalizedFormats.INDEX will do nicely.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\n+++ b/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java\n     EMPTY_SELECTED_ROW_INDEX_ARRAY(\"empty selected row index array\"),\n     EMPTY_STRING_FOR_IMAGINARY_CHARACTER(\"empty string for imaginary character\"),\n     ENDPOINTS_NOT_AN_INTERVAL(\"endpoints do not specify an interval: [{0}, {1}]\"),\n-    ENTRY(\"entry {0}\"),\n     EQUAL_VERTICES_IN_SIMPLEX(\"equal vertices {0} and {1} in simplex configuration\"),\n     EULER_ANGLES_SINGULARITY(\"Euler angles singularity\"),\n     EVALUATION(\"evaluation\"), /* keep */\n--- a/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java\n+++ b/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java\n             try {\n                 out[i] = one.divide(data[i]);\n             } catch (final MathArithmeticException e) {\n-                throw new MathArithmeticException(LocalizedFormats.ENTRY, i);\n+                throw new MathArithmeticException(LocalizedFormats.INDEX, i);\n             }\n         }\n         return new ArrayFieldVector<T>(field, out, false);\n             try {\n                 data[i] = one.divide(data[i]);\n             } catch (final MathArithmeticException e) {\n-                throw new MathArithmeticException(LocalizedFormats.ENTRY, i);\n+                throw new MathArithmeticException(LocalizedFormats.INDEX, i);\n             }\n         }\n         return this;\n                 try {\n                     out[i] = data[i].divide(v.getEntry(i));\n                 } catch (final MathArithmeticException e) {\n-                    throw new MathArithmeticException(LocalizedFormats.ENTRY, i);\n+                    throw new MathArithmeticException(LocalizedFormats.INDEX, i);\n                 }\n             }\n             return new ArrayFieldVector<T>(field, out, false);\n             try {\n                 out[i] = data[i].divide(v.data[i]);\n             } catch (final MathArithmeticException e) {\n-                throw new MathArithmeticException(LocalizedFormats.ENTRY, i);\n+                throw new MathArithmeticException(LocalizedFormats.INDEX, i);\n             }\n         }\n         return new ArrayFieldVector<T>(field, out, false);\n--- a/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java\n+++ b/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java\n \n     @Test\n     public void testMessageNumber() {\n-        Assert.assertEquals(311, LocalizedFormats.values().length);\n+        Assert.assertEquals(310, LocalizedFormats.values().length);\n     }\n \n     @Test", "timestamp": 1347425018, "metainfo": ""}