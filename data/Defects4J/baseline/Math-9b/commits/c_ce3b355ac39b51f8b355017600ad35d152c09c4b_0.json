{"sha": "ce3b355ac39b51f8b355017600ad35d152c09c4b", "log": "Added test for getN() and evaluate/getResult consistency test for small samples.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n \n /**\n  * Test cases for {@link StorelessUnivariateStatistic} classes.\n- * @version $Revision: 1.15 $ $Date: 2004/07/07 12:50:50 $\n+ * @version $Revision: 1.16 $ $Date: 2004/07/10 17:14:15 $\n  */\n public abstract class StorelessUnivariateStatisticAbstractTest\n     extends UnivariateStatisticAbstractTest {\n     public StorelessUnivariateStatisticAbstractTest(String name) {\n         super(name);\n     }\n+    \n+    /** Small sample arrays */\n+    protected double[][] smallSamples = {{}, {1}, {1,2}, {1,2,3}, {1,2,3,4}};\n \n     /** Return a new instance of the statistic */\n     public abstract UnivariateStatistic getUnivariateStatistic();\n         }\n \n         assertEquals(expectedValue(), statistic.getResult(), getTolerance());\n-        //TODO:  add test for getN() once type is fixed\n+        assertEquals(testArray.length, statistic.getN());\n \n         statistic.clear();\n \n         assertTrue(Double.isNaN(statistic.getResult()));\n+        assertEquals(0, statistic.getN());\n \n     }\n \n         StorelessUnivariateStatistic stat = (StorelessUnivariateStatistic) getUnivariateStatistic();\n         stat.incrementAll(testArray);\n         assertEquals(stat.getResult(), stat.evaluate(testArray), getTolerance());\n+        for (int i = 0; i < smallSamples.length; i++) {\n+            stat.clear();\n+            for (int j =0; j < smallSamples[i].length; j++) {\n+                stat.increment(smallSamples[i][j]);\n+            }\n+            TestUtils.assertEquals(stat.getResult(), stat.evaluate(smallSamples[i]), getTolerance());\n+        }\n     }\n \n }", "timestamp": 1089479655, "metainfo": ""}