{"sha": "5453711fb8097a0d750338f15f18f1868294dd78", "log": "Fixing GeoMean and adding appropriate test.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/GeometricMean.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/GeometricMean.java\n  */\n package org.apache.commons.math.stat.univariate.moment;\n \n-import org.apache.commons.math.stat.univariate.AbstractStorelessUnivariateStatistic;\n import org.apache.commons.math.stat.univariate.summary.SumOfLogs;\n \n /**\n  * @author Mark Diggory\n  *\n  */\n-public class GeometricMean extends AbstractStorelessUnivariateStatistic {\n+public class GeometricMean extends SumOfLogs {\n  \n-    private SumOfLogs sumLog = new SumOfLogs();\n+    //private SumOfLogs sumLog = new SumOfLogs();\n     \n-    private double value = Double.NaN;\n+    private double geoMean = Double.NaN;\n     \n     private int n = 0;\n     \n      */\n     public double increment(double d) {\n         n++;\n-        return Math.exp( sumLog.increment(d) / (double)n );\n+        return geoMean = Math.exp( super.increment(d) / (double)n );\n     }\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#getValue()\n      */\n     public double getValue() {\n-        return value;\n+        return geoMean;\n     }\n \n     /**\n      * @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#clear()\n      */\n     public void clear() {\n-        value = Double.NaN;\n-        sumLog.clear();\n+        super.clear();\n+        geoMean = Double.NaN;\n         n = 0;\n     }\n     \n      * @see org.apache.commons.math.stat.univariate.UnivariateStatistic#evaluate(double[], int, int)\n      */\n     public double evaluate(double[] values, int begin, int length) {\n-        return Math.exp(sumLog.evaluate(values, begin, length) / (double) length );\n+        return Math.exp(super.evaluate(values, begin, length) / (double) length );\n     }\n \n \n--- /dev/null\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.univariate.moment;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n+import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n+import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n+\n+/**\n+ * Test cases for the {@link UnivariateStatistic} class.\n+ *\n+ * @author Mark Diggory\n+ */\n+public class GeometricMeanTest extends StorelessUnivariateStatisticAbstractTest{\n+\n+    protected GeometricMean stat;\n+    \n+    /**\n+     * @param name\n+     */\n+    public GeometricMeanTest(String name) {\n+        super(name);\n+    }\n+\n+    public static Test suite() {\n+        TestSuite suite = new TestSuite(GeometricMeanTest.class);\n+        suite.setName(\"Mean  Tests\");\n+        return suite;\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest#getUnivariateStatistic()\n+     */\n+    public UnivariateStatistic getUnivariateStatistic() {\n+       \n+        if(stat == null)\n+            stat = new GeometricMean();\n+            \n+        return stat;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest#expectedValue()\n+     */\n+    public double expectedValue() {\n+        return this.geoMean;\n+    }\n+\n+}", "timestamp": 1057597053, "metainfo": ""}