{"sha": "34b2aeef97f6e0c4ade981ce86e9225e5e3e23e6", "log": "Implemented addValue(double) using DynaBeans.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java\n import java.util.List;\n \n import org.apache.commons.beanutils.PropertyUtils;\n+import org.apache.commons.beanutils.DynaBean;\n+import org.apache.commons.beanutils.BasicDynaClass;\n+import org.apache.commons.beanutils.DynaProperty;\n import org.apache.commons.math.MathException;\n import org.apache.commons.math.util.NumberTransformer;\n \n  * univariate statistics for a List of Java Beans by property.  This \n  * implementation uses beanutils' PropertyUtils to get a simple, nested,\n  * indexed, mapped, or combined property from an element of a List.\n- * @version $Revision: 1.1 $ $Date: 2004/04/20 21:02:35 $\n+ * @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $\n  */\n public class BeanListUnivariateImpl extends ListUnivariateImpl {\n \n \t}\n \n \t/**\n-\t  * @see org.apache.commons.math.stat.Univariate#addValue(double)\n+\t  *  Creates a {@link org.apache.commons.beanutils.DynaBean} with a \n+\t  *  {@link org.apache.commons.beanutils.DynaProperty} named \n+\t  *  <code>propertyName,</code> sets the value of the property to <code>v</code>\n+\t  *  and adds the DynaBean to the underlying list.\n+\t  *\n \t  */\n-\tpublic void addValue(double v) {\n-\t\tString msg =\n-\t\t\t\"The BeanListUnivariateImpl does not accept values \"\n-\t\t\t\t+ \"through the addValue method.  Because elements of this list \"\n-\t\t\t\t+ \"are JavaBeans, one must be sure to set the 'propertyName' \"\n-\t\t\t\t+ \"property and add new Beans to the underlying list via the \"\n-\t\t\t\t+ \"addBean(Object bean) method\";\n-\t\tthrow new UnsupportedOperationException(msg);\n+\tpublic void addValue(double v)  {\n+\t    DynaProperty[] props = new DynaProperty[] {\n+\t            new DynaProperty(propertyName, Double.class)\n+\t    };\n+\t    BasicDynaClass dynaClass = new BasicDynaClass(null, null, props);\n+\t    DynaBean dynaBean = null;\n+\t    try {\n+\t        dynaBean = dynaClass.newInstance();\n+\t    } catch (Exception ex) {              // InstantiationException, IllegalAccessException\n+\t        throw new RuntimeException(ex);   // should never happen\n+\t    }\n+\t\tdynaBean.set(propertyName, new Double(v));\n+\t\taddObject(dynaBean);\n \t}\n \n \t/**\n--- a/src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n \n-import org.apache.commons.math.beans.*;\n-import org.apache.commons.math.stat.multivariate.*;\n+import org.apache.commons.math.stat.StatUtils;\n+import org.apache.commons.math.beans.VitalStats;\n+import org.apache.commons.math.beans.Patient;\n \n /**\n  * Test cases for the {@link BeanListUnivariateImpl} class.\n  *\n- * @version $Revision: 1.1 $ $Date: 2004/04/12 02:27:50 $\n+ * @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $\n  */\n \n public final class BeanListUnivariateImplTest extends TestCase {\n     }\n     \n     /** test stats */\n-    public void testStats() {\n-    \t\n-        DescriptiveStatistics u = new BeanListUnivariateImpl( patientList ); \n-\n+    public void testStats() {\t\n+        DescriptiveStatistics u = new BeanListUnivariateImpl( patientList, \"age\" ); \n+        double[] values = {35d, 23d, 42d};\n         assertEquals(\"total count\",3,u.getN(),tolerance);\n-\n+        assertEquals(\"mean\", StatUtils.mean(values), u.getMean(), tolerance);\n+        assertEquals(\"min\", StatUtils.min(values), u.getMin(), tolerance);\n+        assertEquals(\"max\", StatUtils.max(values), u.getMax(), tolerance);\n+        assertEquals(\"var\", StatUtils.variance(values), u.getVariance(), tolerance);       \n         u.clear();\n         assertEquals(\"total count\",0,u.getN(),tolerance);    \n-    }     \n+    }   \n     \n     public void testPropStats() {\n \n         DescriptiveStatistics heartU = new BeanListUnivariateImpl( patientList,\n-                                          \"vitalStats.heartRate\" );\n-\n-        \n+                                          \"vitalStats.heartRate\" );       \n \n         assertEquals( \"Mean heart rate unexpected\", 93.333, \n                       heartU.getMean(), 0.001 );\n         u.setPropertyName(expected);\n         assertEquals(expected, u.getPropertyName());\n     }\n+    \n+    public void testAddValue() {\n+        DescriptiveStatistics u = new BeanListUnivariateImpl( patientList, \"age\" ); \n+        u.addValue(10);\n+        double[] values = {35d, 23d, 42d, 10d};\n+        assertEquals(\"total count\",4,u.getN(),tolerance);\n+        assertEquals(\"mean\", StatUtils.mean(values), u.getMean(), tolerance);\n+        assertEquals(\"min\", StatUtils.min(values), u.getMin(), tolerance);\n+        assertEquals(\"max\", StatUtils.max(values), u.getMax(), tolerance);\n+        assertEquals(\"var\", StatUtils.variance(values), u.getVariance(), tolerance);       \n+        u.clear();\n+        assertEquals(\"total count\",0,u.getN(),tolerance);      \n+    }\n }\n ", "timestamp": 1082843006, "metainfo": ""}