{"sha": "f0b12de79724b4684a42409023cff476a8b64a58", "log": "Replaced reference to DecompositionSolver.solve(double[]) by DecompositionSolver.solve(RealVector) (see MATH-653)  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java\n \n package org.apache.commons.math.optimization.general;\n \n+import org.apache.commons.math.exception.ConvergenceException;\n import org.apache.commons.math.exception.MathUserException;\n-import org.apache.commons.math.exception.ConvergenceException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n+import org.apache.commons.math.linear.ArrayRealVector;\n import org.apache.commons.math.linear.BlockRealMatrix;\n import org.apache.commons.math.linear.DecompositionSolver;\n import org.apache.commons.math.linear.LUDecompositionImpl;\n import org.apache.commons.math.linear.QRDecompositionImpl;\n import org.apache.commons.math.linear.RealMatrix;\n+import org.apache.commons.math.linear.RealVector;\n import org.apache.commons.math.linear.SingularMatrixException;\n-import org.apache.commons.math.optimization.VectorialPointValuePair;\n import org.apache.commons.math.optimization.ConvergenceChecker;\n import org.apache.commons.math.optimization.SimpleVectorialValueChecker;\n+import org.apache.commons.math.optimization.VectorialPointValuePair;\n \n /**\n  * Gauss-Newton least-squares solver.\n                 DecompositionSolver solver = useLU ?\n                         new LUDecompositionImpl(mA).getSolver() :\n                         new QRDecompositionImpl(mA).getSolver();\n-                final double[] dX = solver.solve(b);\n-\n+                final RealVector dummy = solver.solve(new ArrayRealVector(b, false));\n+                final double[] dX;\n+                if (dummy instanceof ArrayRealVector){\n+                    dX = ((ArrayRealVector) dummy).getDataRef();\n+                }else{\n+                    dX = dummy.getData();\n+                }\n                 // update the estimated parameters\n                 for (int i = 0; i < cols; ++i) {\n                     point[i] += dX[i];", "timestamp": 1314981281, "metainfo": ""}