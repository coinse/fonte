{"sha": "9f0be7504ede0d2f9a290f17e3bbc4f9a16a9707", "log": "Javadoc only.  ", "commit": "\n--- a/src/java/org/apache/commons/math/random/RandomVectorGenerator.java\n+++ b/src/java/org/apache/commons/math/random/RandomVectorGenerator.java\n \n package org.apache.commons.math.random;\n \n-/** This interface represent a random generator for whole vectors.\n+/** This interface represents a random generator for whole vectors.\n \n  * @version $Id: RandomVectorGenerator.java 1705 2006-09-17 19:57:39Z luc $\n  * @author L. Maisonobe\n--- a/src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java\n+++ b/src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java\n \n import java.util.Arrays;\n \n-/** This class allows to generate random vectors with uncorrelated components.\n- * @version $Id:$\n+/** \n+ * A {@link RandomVectorGenerator} that generates vectors with uncorrelated\n+ * components. Components of generated vectors follow (independent) Gaussian\n+ * distributions, with parameters supplied in the constructor.\n+ * \n+ * @version $Revision$\n  */\n \n public class UncorrelatedRandomVectorGenerator\n     this.generator = generator;\n   }\n \n-  /** Generate a correlated random vector.\n+  /** Generate an uncorrelated random vector.\n    * @return a random vector as a newly built array of double\n    */\n   public double[] nextVector() {", "timestamp": 1179640080, "metainfo": ""}