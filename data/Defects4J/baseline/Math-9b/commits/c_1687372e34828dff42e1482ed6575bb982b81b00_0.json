{"sha": "1687372e34828dff42e1482ed6575bb982b81b00", "log": "MATH-432 fixed  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n         }\n         realEigenvalues[n - 1] = main[n - 1];\n         e[n - 1] = 0.0;\n+\n+        // Determine the largest main and secondary value in absolute term.\n+        double maxAbsoluteValue=0.0;\n+        for (int i = 0; i < n; i++) {\n+            if (Math.abs(realEigenvalues[i])>maxAbsoluteValue) {\n+                maxAbsoluteValue=Math.abs(realEigenvalues[i]);\n+            }\n+            if (Math.abs(e[i])>maxAbsoluteValue) {\n+                maxAbsoluteValue=Math.abs(e[i]);\n+            }\n+        }\n+        // Make null any main and secondary value too small to be significant\n+        if (maxAbsoluteValue!=0.0) {\n+            for (int i=0; i < n; i++) {\n+                if (Math.abs(realEigenvalues[i])<=MathUtils.EPSILON*maxAbsoluteValue) {\n+                    realEigenvalues[i]=0.0;\n+                }\n+                if (Math.abs(e[i])<=MathUtils.EPSILON*maxAbsoluteValue) {\n+                    e[i]=0.0;\n+                }\n+            }\n+        }\n+\n         for (int j = 0; j < n; j++) {\n             int its = 0;\n             int m;\n         }\n \n         // Determine the largest eigen value in absolute term.\n-        double maxAbsoluteValue=0.0;\n+        maxAbsoluteValue=0.0;\n         for (int i = 0; i < n; i++) {\n             if (Math.abs(realEigenvalues[i])>maxAbsoluteValue) {\n                 maxAbsoluteValue=Math.abs(realEigenvalues[i]);\n--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n         // create A^T*A\n         //\n         for (int i = 0; i < n; i++) {\n-            for (int j = 0; j < n; j++) {\n+            for (int j = i; j < n; j++) {\n                 matATA[i][j] = 0.0;\n                 for (int k = 0; k < m; k++) {\n                     matATA[i][j] += localcopy[k][i] * localcopy[k][j];\n                 }\n+                matATA[j][i]=matATA[i][j];\n             }\n         }\n \n         // create A*A^T\n         //\n         for (int i = 0; i < m; i++) {\n-            for (int j = 0; j < m; j++) {\n+            for (int j = i; j < m; j++) {\n                 matAAT[i][j] = 0.0;\n                 for (int k = 0; k < n; k++) {\n                     matAAT[i][j] += localcopy[i][k] * localcopy[j][k];\n                 }\n+                matAAT[j][i]=matAAT[i][j];\n             }\n         }\n         int p;", "timestamp": 1266788772, "metainfo": ""}