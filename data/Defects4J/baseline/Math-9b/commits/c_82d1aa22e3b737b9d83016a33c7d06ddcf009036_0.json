{"sha": "82d1aa22e3b737b9d83016a33c7d06ddcf009036", "log": "Serializable changes to util  ", "commit": "\n--- a/src/java/org/apache/commons/math/special/Beta.java\n+++ b/src/java/org/apache/commons/math/special/Beta.java\n         } else {\n             ContinuedFraction fraction = new ContinuedFraction() {\n \n-                private static final long serialVersionUID = -7658917278956100597L;\n-\n                 @Override\n                 protected double getB(int n, double x) {\n                     double ret;\n--- a/src/java/org/apache/commons/math/special/Gamma.java\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n             // create continued fraction\n             ContinuedFraction cf = new ContinuedFraction() {\n \n-                private static final long serialVersionUID = 5378525034886164398L;\n-\n                 @Override\n                 protected double getA(int n, double x) {\n                     return ((2.0 * n) + 1.0) - a + x;\n--- a/src/java/org/apache/commons/math/util/ContinuedFraction.java\n+++ b/src/java/org/apache/commons/math/util/ContinuedFraction.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.util;\n-\n-import java.io.Serializable;\n \n import org.apache.commons.math.ConvergenceException;\n import org.apache.commons.math.MathException;\n  *\n  * @version $Revision$ $Date$\n  */\n-public abstract class ContinuedFraction implements Serializable {\n-    \n-    /** Serialization UID */\n-    private static final long serialVersionUID = 1768555336266158242L;\n+public abstract class ContinuedFraction {\n     \n     /** Maximum allowed numerical error. */\n     private static final double DEFAULT_EPSILON = 10e-9;\n--- a/src/test/org/apache/commons/math/util/ContinuedFractionTest.java\n+++ b/src/test/org/apache/commons/math/util/ContinuedFractionTest.java\n \n     public void testGoldenRatio(){\n         ContinuedFraction cf = new ContinuedFraction() {\n-            private static final long serialVersionUID = 4696264881688589546L;\n-\n+            \n             @Override\n             public double getA(int n, double x) {\n                 return 1.0;", "timestamp": 1243290290, "metainfo": ""}