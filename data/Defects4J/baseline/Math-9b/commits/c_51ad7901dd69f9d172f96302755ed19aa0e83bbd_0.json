{"sha": "51ad7901dd69f9d172f96302755ed19aa0e83bbd", "log": "Javadoc improvements.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java\n  */\n public interface BaseUnivariateRealSolver<FUNC extends UnivariateRealFunction> {\n     /**\n-     * Get the maximal number of function evaluations.\n+     * Get the maximum number of function evaluations.\n      *\n-     * @return the maximal number of function evaluations.\n+     * @return the maximum number of function evaluations.\n      */\n     int getMaxEvaluations();\n \n     int getEvaluations();\n \n     /**\n+     * Get the absolute accuracy of the solver.  Solutions returned by the\n+     * solver should be accurate to this tolerance, i.e., if &epsilon; is the\n+     * absolute accuracy of the solver and {@code v} is a value returned by\n+     * one of the {@code solve} methods, then a root of the function should\n+     * exist somewhere in the interval ({@code v} - &epsilon;, {@code v} + &epsilon;).\n+     * \n      * @return the absolute accuracy.\n      */\n     double getAbsoluteAccuracy();\n+    \n     /**\n+     * Get the relative accuracy of the solver.  The contract for relative\n+     * accuracy is the same as {@link #getAbsoluteAccuracy()}, but using \n+     * relative, rather than absolute error.  If &rho; is the relative accuracy\n+     * configured for a solver and {@code v} is a value returned, then a root\n+     * of the function should exist somewhere in the interval\n+     * ({@code v} - &rho; {@code v}, {@code v} + &rho; {@code v}).\n+     * \n      * @return the relative accuracy.\n      */\n     double getRelativeAccuracy();\n+    \n     /**\n+     * Get the function value accuracy of the solver.  If {@code v} is\n+     * a value returned by the solver for a function {@code f},\n+     * then by contract, {@code |f(v)|} should be less than or equal to\n+     * the function value accuracy configured for the solver.\n+     * \n      * @return the function value accuracy.\n      */\n     double getFunctionValueAccuracy();", "timestamp": 1320532026, "metainfo": ""}