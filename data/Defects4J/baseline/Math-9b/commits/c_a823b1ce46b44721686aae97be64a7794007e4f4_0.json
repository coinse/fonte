{"sha": "a823b1ce46b44721686aae97be64a7794007e4f4", "log": "Improved efficiency of evaluate method.  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java\n                 var = 0.0;\n             } else if (length > 1) {\n                 double accum = 0.0;\n+                double dev = 0.0;\n                 double accum2 = 0.0;\n                 for (int i = begin; i < begin + length; i++) {\n-                    accum += Math.pow((values[i] - mean), 2.0);\n-                    accum2 += (values[i] - mean);\n+                    dev = values[i] - mean;\n+                    accum += dev * dev;\n+                    accum2 += dev;\n                 }\n+                double len = (double) length;            \n                 if (isBiasCorrected) {\n-                    var = (accum - (Math.pow(accum2, 2) / ((double) length))) /\n-                    (double) (length - 1);\n+                    var = (accum - (accum2 * accum2 / len)) / (len - 1.0);\n                 } else {\n-                    var = (accum - (Math.pow(accum2, 2) / ((double) length))) /\n-                    (double) length;\n+                    var = (accum - (accum2 * accum2 / len)) / len;\n                 }\n             }\n         }", "timestamp": 1174843595, "metainfo": ""}