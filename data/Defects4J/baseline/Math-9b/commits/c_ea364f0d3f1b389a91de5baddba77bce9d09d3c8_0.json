{"sha": "ea364f0d3f1b389a91de5baddba77bce9d09d3c8", "log": "Don't catch Exception and fail(); let JUnit handle it  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n           fail(\"an IllegalArgumentException was expected\");\n         } catch (IllegalArgumentException iae) {\n             // expected behaviour\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught: \" + e.getMessage());\n         }\n \n         // bad guess\n--- a/src/test/java/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n       fail(\"an exception should have been caught\");\n     } catch (EstimationException ee) {\n       // expected behavior\n-    } catch (Exception e) {\n-      fail(\"wrong exception type caught\");\n     }\n   }\n \n         fail(\"an exception should have been caught\");\n     } catch (EstimationException ee) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n     }\n \n   }\n         fail(\"an exception should have been caught\");\n     } catch (EstimationException ee) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n     }\n \n   }\n         fail(\"an exception should have been caught\");\n       } catch (EstimationException ee) {\n         // expected behavior\n-      } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n       }\n     }\n \n         fail(\"an exception should have been caught\");\n     } catch (EstimationException ee) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n     }\n }\n \n--- a/src/test/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n+++ b/src/test/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n         fail(\"an exception should have been thrown\");\n     } catch (EstimationException ee) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception caught\");\n     }\n     assertEquals(1.5,\n                  problem.getUnboundParameters()[0].getEstimate(),\n         fail(\"an exception should have been thrown\");\n     } catch (EstimationException ee) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception caught\");\n     }\n    double dJ0 = 2 * (m[0].getResidual() * m[0].getPartial(p[0])\n                     + m[1].getResidual() * m[1].getPartial(p[0])\n         assertTrue(! shouldFail);\n       } catch (EstimationException ee) {\n         assertTrue(shouldFail);\n-      } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n       }\n     }\n \n--- a/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java\n+++ b/src/test/java/org/apache/commons/math/fraction/BigFractionTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (ConvergenceException ce) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/fraction/FractionTest.java\n+++ b/src/test/java/org/apache/commons/math/fraction/FractionTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (ConvergenceException ce) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (ConvergenceException ce) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/geometry/RotationTest.java\n+++ b/src/test/java/org/apache/commons/math/geometry/RotationTest.java\n       new Rotation(new Vector3D(0, 0, 0), 2 * FastMath.PI / 3);\n       fail(\"an exception should have been thrown\");\n     } catch (ArithmeticException e) {\n-    } catch (Exception e) {\n-      fail(\"unexpected exception\");\n     }\n \n     r = new Rotation(Vector3D.PLUS_K, 1.5 * FastMath.PI);\n     try {\n         new Rotation(u, Vector3D.ZERO);\n         fail(\"an exception should have been thrown\");\n-      } catch (IllegalArgumentException e) {\n+    } catch (IllegalArgumentException e) {\n         // expected behavior\n-      } catch (Exception e) {\n-        fail(\"unexpected exception\");\n     }\n \n   }\n         fail(\"an exception should have been thrown\");\n     } catch (IllegalArgumentException e) {\n       // expected behavior\n-    } catch (Exception e) {\n-        fail(\"unexpected exception\");\n     }\n \n   }\n       fail(\"Expecting NotARotationMatrixException\");\n     } catch (NotARotationMatrixException nrme) {\n       // expected behavior\n-    } catch (Exception e) {\n-      fail(\"wrong exception caught: \" + e.getMessage());\n     }\n \n     try {\n       fail(\"Expecting NotARotationMatrixException\");\n     } catch (NotARotationMatrixException nrme) {\n       // expected behavior\n-    } catch (Exception e) {\n-      fail(\"wrong exception caught: \" + e.getMessage());\n     }\n \n     try {\n         fail(\"Expecting NotARotationMatrixException\");\n       } catch (NotARotationMatrixException nrme) {\n         // expected behavior\n-      } catch (Exception e) {\n-        fail(\"wrong exception caught: \" + e.getMessage());\n       }\n \n     checkRotation(new Rotation(new double[][] {\n       fail(\"got \" + r + \", should have caught an exception\");\n     } catch (NotARotationMatrixException e) {\n       // expected\n-    } catch (Exception e) {\n-      fail(\"wrong exception caught\");\n     }\n \n   }\n           fail(\"an exception should have been caught\");\n         } catch (CardanEulerSingularityException cese) {\n           // expected behavior\n-        } catch (Exception e) {\n-          fail(\"wrong exception caught: \" + e.getMessage());\n         }\n       }\n     }\n           fail(\"an exception should have been caught\");\n         } catch (CardanEulerSingularityException cese) {\n           // expected behavior\n-        } catch (Exception e) {\n-          fail(\"wrong exception caught: \" + e.getMessage());\n         }\n       }\n     }\n--- a/src/test/java/org/apache/commons/math/geometry/Vector3DTest.java\n+++ b/src/test/java/org/apache/commons/math/geometry/Vector3DTest.java\n         fail(\"an exception should have been thrown\");\n     } catch (ArithmeticException ae) {\n         // expected behavior\n-    } catch (Exception e) {\n-        fail(\"wrong exception caught: \" + e.getMessage());\n     }\n   }\n \n           fail(\"an exception should have been thrown\");\n       } catch (ArithmeticException ae) {\n           // expected behavior\n-      } catch (Exception e) {\n-          fail(\"wrong exception caught: \" + e.getMessage());\n       }\n   }\n \n          fail(\"an exception should have been thrown\");\n      } catch (ArithmeticException ae) {\n          // expected behavior\n-     } catch (Exception e) {\n-         fail(\"wrong exception caught: \" + e.getMessage());\n      }\n   }\n \n--- a/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         FieldVector<Fraction> v5_i = new ArrayFieldVector<Fraction>(dvec1);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayFieldVector<Fraction> v7 = new ArrayFieldVector<Fraction>(v1);\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayFieldVector<Fraction> v_set1 = (ArrayFieldVector<Fraction>) v1.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayFieldVector<Fraction> v_set2 = (ArrayFieldVector<Fraction>) v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayFieldVector<Fraction> v_set3 = (ArrayFieldVector<Fraction>) v1.copy();\n             fail(\"ArrayIndexOutOfBoundsException expected\");\n         } catch (ArrayIndexOutOfBoundsException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayFieldVector<Fraction> v_set4 = (ArrayFieldVector<Fraction>) v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n \n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n        try {\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         try {\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n     }\n--- a/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         RealVector v5_i = new ArrayRealVector(dvec1);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v7 = new ArrayRealVector(v1);\n             fail(\"expected exception\");\n         } catch (NullPointerException npe) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         try {\n             fail(\"expected exception\");\n         } catch (IllegalArgumentException iae) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n    }\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_set1 = (ArrayRealVector) v1.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_set2 = (ArrayRealVector) v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_set3 = (ArrayRealVector) v1.copy();\n             fail(\"ArrayIndexOutOfBoundsException expected\");\n         } catch (ArrayIndexOutOfBoundsException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_set4 = (ArrayRealVector) v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n \n             fail(\"Expecting ArithmeticException\");\n         } catch (ArithmeticException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_unitize = (ArrayRealVector)v1.copy();\n             fail(\"Expecting ArithmeticException\");\n         } catch (ArithmeticException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         ArrayRealVector v_projection = v1.projection(v2);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n        try {\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         try {\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n     }\n--- a/src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/EigenSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/EigenSolverTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             es.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             es.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java\n             }));\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java\n             fail(\"Expecting InvalidMatrixException\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/LUSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/LUSolverTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumnVector(0));\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/QRSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/QRSolverTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumnVector(0));\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumnVector(0));\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java\n             fail(\"Expecting ParseException\");\n         } catch (ParseException pe) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java\n             Assert.fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            Assert.fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(b.getColumn(0));\n             Assert.fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            Assert.fail(\"wrong exception caught\");\n         }\n         try {\n             solver.solve(new ArrayRealVectorTest.RealVectorTestImpl(b.getColumn(0)));\n             Assert.fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected behavior\n-        } catch (Exception e) {\n-            Assert.fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n \n--- a/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n         //    fail(\"IllegalArgumentException expected\");\n         //} catch (IllegalArgumentException ex) {\n             // expected behavior\n-        //} catch (Exception e) {\n-        //    fail(\"wrong exception caught\");\n         //}\n \n         RealVector v5_i = new OpenMapRealVector(dvec1);\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         OpenMapRealVector v_set1 = v1.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         OpenMapRealVector v_set2 = v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         OpenMapRealVector v_set3 = v1.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         OpenMapRealVector v_set4 = v4.copy();\n             fail(\"MatrixIndexException expected\");\n         } catch (MatrixIndexException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n \n             fail(\"Expecting ArithmeticException\");\n         } catch (ArithmeticException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         OpenMapRealVector v_unitize = v1.copy();\n             fail(\"Expecting ArithmeticException\");\n         } catch (ArithmeticException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         RealVector v_projection = v1.projection(v2);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n \n--- a/src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (InvalidMatrixException ime) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java\n     super(name);\n   }\n \n-  public void testWrongDerivative() {\n-    try {\n+  public void testWrongDerivative() throws Exception {\n       HighamHall54Integrator integrator =\n           new HighamHall54Integrator(0.0, 1.0, 1.0e-10, 1.0e-10);\n       FirstOrderDifferentialEquations equations =\n         // expected behavior\n       }\n \n-    } catch (Exception e) {\n-      fail(\"wrong exception caught: \" + e.getMessage());\n-    }\n   }\n \n   public void testMinStep() {\n \n   }\n \n-  public void testEventsErrors() {\n+  public void testEventsErrors() throws Exception {\n \n       final TestProblem1 pb = new TestProblem1();\n       double minStep = 0;\n         fail(\"an exception should have been thrown\");\n       } catch (IntegratorException ie) {\n         // expected behavior\n-      } catch (Exception e) {\n-        fail(\"wrong exception type caught\");\n-      }\n-\n-  }\n-\n-  public void testEventsNoConvergence() {\n+      }\n+\n+  }\n+\n+  public void testEventsNoConvergence() throws Exception {\n \n     final TestProblem1 pb = new TestProblem1();\n     double minStep = 0;\n     } catch (IntegratorException ie) {\n        assertTrue(ie.getCause() != null);\n        assertTrue(ie.getCause() instanceof ConvergenceException);\n-    } catch (Exception e) {\n-      fail(\"wrong exception type caught\");\n     }\n \n }\n \n-  public void testSanityChecks() {\n-    try {\n+  public void testSanityChecks() throws Exception {\n       final TestProblem3 pb  = new TestProblem3(0.9);\n       double minStep = 0;\n       double maxStep = pb.getFinalTime() - pb.getInitialTime();\n         // expected behavior\n       }\n \n-    } catch (Exception e) {\n-      fail(\"wrong exception caught: \" + e.getMessage());\n-    }\n   }\n \n   public void testKepler()\n--- a/src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n+++ b/src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n     } catch (IOException ioe) {\n         // expected behavior\n         assertEquals(0, ioe.getMessage().length());\n-    } catch (Exception e) {\n-        fail(\"wrong exception caught\");\n     }\n \n   }\n--- a/src/test/java/org/apache/commons/math/optimization/direct/MultiDirectionalTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/direct/MultiDirectionalTest.java\n       } catch (FunctionEvaluationException ce) {\n           // expected behavior\n           Assert.assertNull(ce.getCause());\n-      } catch (Exception e) {\n-          Assert.fail(\"wrong exception caught: \" + e.getMessage());\n       }\n       try {\n           MultiDirectional optimizer = new MultiDirectional(0.9, 1.9);\n       } catch (FunctionEvaluationException ce) {\n           // expected behavior\n           Assert.assertNotNull(ce.getCause());\n-      } catch (Exception e) {\n-          Assert.fail(\"wrong exception caught: \" + e.getMessage());\n       }\n   }\n \n--- a/src/test/java/org/apache/commons/math/optimization/direct/NelderMeadTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/direct/NelderMeadTest.java\n         } catch (FunctionEvaluationException ce) {\n             // expected behavior\n             assertNull(ce.getCause());\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught: \" + e.getMessage());\n         }\n         try {\n             NelderMead optimizer = new NelderMead(0.9, 1.9, 0.4, 0.6);\n         } catch (FunctionEvaluationException ce) {\n             // expected behavior\n             assertNotNull(ce.getCause());\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught: \" + e.getMessage());\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java\n \n     }\n \n-    public void testNonInversible() {\n+    public void testNonInversible() throws Exception {\n \n         LinearProblem problem = new LinearProblem(new double[][] {\n                 {  1, 2, -3 },\n             fail(\"an exception should have been caught\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n         }\n     }\n \n \n     }\n \n-    public void testMoreEstimatedParametersSimple() {\n+    public void testMoreEstimatedParametersSimple() throws Exception {\n \n         LinearProblem problem = new LinearProblem(new double[][] {\n                 { 3.0, 2.0,  0.0, 0.0 },\n             fail(\"an exception should have been caught\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n-        }\n-\n-    }\n-\n-    public void testMoreEstimatedParametersUnsorted() {\n+        }\n+\n+    }\n+\n+    public void testMoreEstimatedParametersUnsorted() throws Exception {\n         LinearProblem problem = new LinearProblem(new double[][] {\n                  { 1.0, 1.0,  0.0,  0.0, 0.0,  0.0 },\n                  { 0.0, 0.0,  1.0,  1.0, 1.0,  0.0 },\n             fail(\"an exception should have been caught\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (DimensionMismatchException oe) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         try {\n             fail(\"an exception should have been thrown\");\n         } catch (FunctionEvaluationException oe) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n-        }\n-\n-    }\n-\n-    public void testMaxEvaluations() {\n+        }\n+\n+    }\n+\n+    public void testMaxEvaluations() throws Exception {\n         Circle circle = new Circle();\n         circle.addPoint( 30.0,  68.0);\n         circle.addPoint( 50.0,  -6.0);\n             fail(\"an exception should have been caught\");\n         } catch (TooManyEvaluationsException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n         }\n     }\n \n             fail(\"an exception should have been caught\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n         }\n \n         VectorialPointValuePair optimum =\n--- a/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n         assertEquals(1.5, optimum.getPoint()[0], 1.0e-10);\n         assertEquals(3.0, optimum.getValue()[0], 1.0e-10);\n             fail(\"an exception should have been thrown\");\n         } catch (ConvergenceException ee) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (DimensionMismatchException oe) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n \n         try {\n             fail(\"an exception should have been thrown\");\n         } catch (FunctionEvaluationException oe) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             assertTrue(shouldFail);\n         } catch (TooManyEvaluationsException ee) {\n             assertTrue(shouldFail);\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (TooManyEvaluationsException fee) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"an exception should have been thrown\");\n         } catch (TooManyEvaluationsException miee) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java\n             fail(\"Expecting IllegalStateException\");\n         } catch (IllegalStateException ex) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"load((double[]) null) expected NullPointerException\");\n         } catch (NullPointerException e) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"load((URL) null) expected NullPointerException\");\n         } catch (NullPointerException e) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n             fail(\"load((File) null) expected NullPointerException\");\n         } catch (NullPointerException e) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/java/org/apache/commons/math/random/RandomDataTest.java\n         }\n         Frequency f = new Frequency();\n         for (int i = 0; i < largeSampleSize; i++) {\n-            try {\n-                f.addValue(randomData.nextPoisson(4.0d));\n-            } catch (Exception ex) {\n-                fail(ex.getMessage());\n-            }\n+            f.addValue(randomData.nextPoisson(4.0d));\n         }\n         long cumFreq = f.getCount(0) + f.getCount(1) + f.getCount(2)\n                 + f.getCount(3) + f.getCount(4) + f.getCount(5);\n--- a/src/test/java/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/java/org/apache/commons/math/random/ValueServerTest.java\n     @Override\n     public void setUp() {\n         vs.setMode(ValueServer.DIGEST_MODE);\n-        try {\n-            URL url = getClass().getResource(\"testData.txt\");\n-            vs.setValuesFileURL(url);\n-        } catch (Exception ex) {\n-            fail(\"malformed test URL\");\n-        }\n+        URL url = getClass().getResource(\"testData.txt\");\n+        vs.setValuesFileURL(url);\n     }\n \n     /**\n         } catch (IllegalStateException ex) {}\n     }\n \n-    public void testEmptyReplayFile() {\n+    public void testEmptyReplayFile() throws Exception {\n         try {\n             URL url = getClass().getResource(\"emptyFile.txt\");\n             vs.setMode(ValueServer.REPLAY_MODE);\n             fail(\"an exception should have been thrown\");\n         } catch (EOFException eof) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n-    public void testEmptyDigestFile() {\n+    public void testEmptyDigestFile() throws Exception {\n         try {\n             URL url = getClass().getResource(\"emptyFile.txt\");\n             vs.setMode(ValueServer.DIGEST_MODE);\n             fail(\"an exception should have been thrown\");\n         } catch (EOFException eof) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java\n             fail(\"an exception should have been thrown\");\n         } catch (IllegalArgumentException iae) {\n             // expected\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught: \" + e.getMessage());\n         }\n         assertEquals(300, stats.getWindowSize());\n         stats.setWindowSize(50);\n--- a/src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java\n             fail(\"Expecting DimensionMismatchException\");\n         } catch (DimensionMismatchException dme) {\n             // expected behavior\n-        } catch (Exception e) {\n-            fail(\"wrong exception caught\");\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java\n         } catch (DimensionMismatchException dme) {\n             assertEquals(5, dme.getDimension1());\n             assertEquals(8, dme.getDimension2());\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught: \" + e.getClass().getName());\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java\n+++ b/src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java\n         } catch (DimensionMismatchException dme) {\n             assertEquals(5, dme.getDimension1());\n             assertEquals(8, dme.getDimension2());\n-        } catch (Exception e) {\n-            fail(\"wrong exception type caught: \" + e.getClass().getName());\n         }\n     }\n ", "timestamp": 1285948119, "metainfo": ""}