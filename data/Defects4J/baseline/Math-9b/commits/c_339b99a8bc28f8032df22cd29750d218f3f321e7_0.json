{"sha": "339b99a8bc28f8032df22cd29750d218f3f321e7", "log": "Contributions from Brent Worden - Bugzilla Issue 20279  * a distribution factory following the abstract factory pattern. The value being, if users want to swap out the default distribution implementations with their own, why stop them.  The factory is responsible for create the distribution instances (only continuous ones for now).  * Each distribution has a cummulativeProbabilty method which returns the value of the CDF for a given value.  By default, via the abstract distribution base class, an inverseCummulativeProbability method is all provided for all distributions.  It's implementation is generically handled by applying root finding techniques to the cummulativeProbability method.  That way, when new distributions are added, authors only need to create the CDF method and the inverse is provided automatically.  * Currenty, the only distributions are Chi-Squared and Gamma (one actually since Chi-Squared is a specialized Gamma) but more are planned.   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/ConvergenceException.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math;\n+\n+/**\n+ * Error thrown when a numerical computation can not be performed because the\n+ * numerical result failed to converge to a finite value.\n+ * \n+ * @author Brent Worden\n+ */\n+public class ConvergenceException extends RuntimeException {\n+\n+\t/**\n+\t * \n+\t */\n+\tpublic ConvergenceException(String message) {\n+\t\tsuper(message);\n+\t}\n+\n+\t/**\n+\t * \n+\t */\n+\tpublic ConvergenceException(String message, Throwable cause) {\n+\t\tsuper(message, cause);\n+\t}\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/RootFinding.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math;\n+\n+/**\n+ * Utility class comprised of root finding techniques.\n+ * \n+ * @author Brent Worden\n+ */\n+public class RootFinding {\n+    /** Maximum allowed numerical error. */\n+    private static final double EPSILON = 10e-9;\n+\n+\t/**\n+\t * Default constructor. Prohibit construction.\n+\t */\n+\tprivate RootFinding(){\n+\t\tsuper();\n+\t}\n+\n+    /**\n+     * For a function, f, this method returns two values, a and b that bracket\n+     * a root of f.  That is to say, there exists a value c between a and b\n+     * such that f(c) = 0.\n+     * \n+     * @param function the function\n+     * @param initial midpoint of the returned range.\n+     * @param lowerBound for numerical safety, a never is less than this value.\n+     * @param upperBound for numerical safety, b never is greater than this value.\n+     * @return a two element array holding {a, b}.\n+     */\n+    public static double[] bracket(UnivariateFunction function, \n+                                   double initial, \n+                                   double lowerBound, \n+                                   double upperBound){\n+        double a = initial;\n+        double b = initial;\n+        double fa;\n+        double fb;\n+                \n+        do {        \n+            a = Math.max(a - 1.0, lowerBound);\n+            b = Math.min(b + 1.0, upperBound);\n+            fa = function.evaluate(a);\n+            fb = function.evaluate(b);\n+        } while(fa * fb > 0.0);\n+        \n+        return new double[]{a, b};  \n+    }\n+    \n+    /**\n+     * For a function, f, this method returns a root c that lies between a and\n+     * b, and satisfies f(c) = 0.\n+     * \n+     * @param function the function\n+     * @param a lower bound of a root\n+     * @param b upper bound of a root\n+     * @return a root of f\n+     */\n+    public static double bisection(UnivariateFunction function, \n+                                   double a, \n+                                   double b){\n+        double m;\n+        double fm;\n+        double fa;\n+        double fb;\n+        \n+        while(Math.abs(a - b) > EPSILON){\n+            fa = function.evaluate(a);\n+            fb = function.evaluate(b);\n+            \n+            m = a + (b - a) / 2.0;  // midpoint\n+            fm = function.evaluate(m);\n+\n+            if(fm * fa > 0.0){\n+                fa = fm;\n+                a  = m;\n+            } else {\n+                fb = fm;\n+                b  = m;\n+            }\n+        }\n+        \n+        return a + (b - a) / 2.0;\n+    }\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/UnivariateFunction.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math;\n+\n+/**\n+ * @author Brent Worden\n+ */\n+public interface UnivariateFunction {\n+    // TODO: More documentation\n+\n+    /**\n+     * \n+     */\n+    double evaluate(double x);\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+import org.apache.commons.math.RootFinding;\n+import org.apache.commons.math.UnivariateFunction;\n+\n+/**\n+ * Base class for various continuous distributions.  It provides default\n+ * implementations for some of the methods that do not vary from distribution\n+ * to distribution.\n+ *  \n+ * @author Brent Worden\n+ */\n+public abstract class AbstractContinuousDistribution\n+    implements ContinuousDistribution {\n+        \n+    /**\n+     * Default constructor.\n+     */\n+    protected AbstractContinuousDistribution() {\n+        super();\n+    }\n+\n+    /**\n+     * For this disbution, X, this method returns P(x0 &lt; X &lt; x1).  This\n+     * is accomplished by using the equality P(x0 &lt; X &lt; x1) =\n+     * P(X &lt; x1) - P(X &lt; x0).\n+     * \n+     * @param x0 the lower bound\n+     * @param x1 the upper bound\n+     * @return the cummulative probability. \n+     */\n+    public double cummulativeProbability(double x0, double x1) {\n+        return cummulativeProbability(x1) - cummulativeProbability(x0);\n+    }\n+    \n+    /**\n+     * \n+     */\n+    public double inverseCummulativeProbability(final double p){\n+        if(p < 0.0 || p > 1.0){\n+            throw new IllegalArgumentException(\"p must be between 0.0 and 1.0 inclusive.\");\n+        }\n+        \n+        // by default, do simple root finding using bracketing and bisection.\n+        // subclasses can overide if there is a better method.\n+        UnivariateFunction rootFindingFunction = new UnivariateFunction() {\n+\t\t\tpublic double evaluate(double x) {\n+\t\t\t\treturn cummulativeProbability(x) - p;\n+\t\t\t}\n+\t\t};\n+        \n+        // bracket root\n+        double[] bracket = RootFinding.bracket(rootFindingFunction, getMean(), getDomainLowerBound(), getDomainUpperBound());\n+        \n+        // find root\n+        double root = RootFinding.bisection(rootFindingFunction, bracket[0], bracket[1]);\n+        \n+        return root;\n+    }\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+/**\n+ * The Chi-Squared Distribution defined by\n+ * http://mathworld.wolfram.com/Chi-SquaredDistribution.html.\n+ * \n+ * Instances of ChiSquaredDistribution objects should be created using\n+ * {@link DistributionFactory#createChiSquareDistribution(double)}\n+ * \n+ * @author Brent Worden\n+ */\n+public interface ChiSquaredDistribution extends ContinuousDistribution {\n+    /**\n+     * Modify the degrees of freedom.\n+     * @param degreesOfFreedom the new degrees of freedom.\n+     */\n+    void setDegreesOfFreedom(double degreesOfFreedom);\n+    \n+    /**\n+     * Access the degrees of freedom.\n+     * @return the degrees of freedom.\n+     */\n+    double getDegreesOfFreedom();\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+/**\n+ * @author Brent Worden\n+ */\n+public class ChiSquaredDistributionImpl\n+\textends AbstractContinuousDistribution\n+\timplements ChiSquaredDistribution {\n+        \n+    private GammaDistribution gamma;\n+    \n+    public ChiSquaredDistributionImpl(double degreesOfFreedom){\n+        super();\n+        setGamma(DistributionFactory.newInstance().createGammaDistribution(degreesOfFreedom / 2.0, 2.0));\n+    }\n+    public void setDegreesOfFreedom(double degreesOfFreedom) {\n+        getGamma().setAlpha(degreesOfFreedom / 2.0);\n+    }\n+        \n+    public double getDegreesOfFreedom() {\n+        return getGamma().getAlpha() * 2.0;\n+    }\n+        \n+    public double cummulativeProbability(double x) {\n+        return getGamma().cummulativeProbability(x);\n+    }\n+        \n+    public double getDomainLowerBound() {\n+        return Double.MIN_VALUE * getGamma().getBeta();\n+    }\n+\n+    public double getDomainUpperBound() {\n+        return Double.MAX_VALUE;\n+    }\n+\n+    public double getMean() {\n+        return getDegreesOfFreedom();\n+    }\n+\n+\tprivate void setGamma(GammaDistribution gamma) {\n+\t\tthis.gamma = gamma;\n+\t}\n+\n+\tprivate GammaDistribution getGamma() {\n+\t\treturn gamma;\n+\t}\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/ContinuousDistribution.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+/**\n+ * Base interface for various continuous distributions.\n+ * \n+ * @author Brent Worden\n+ */\n+public interface ContinuousDistribution {\n+    /**\n+     * For this disbution, X, this method returns P(X &lt; x).\n+     * @param x the value at which the CDF is evaluated.\n+     * @return CDF for this distribution. \n+     */\n+    double cummulativeProbability(double x);\n+\n+    /**\n+     * For this disbution, X, this method returns P(x0 &lt; X &lt; x1).\n+     * @param x0 the lower bound\n+     * @param x1 the upper bound\n+     * @return the cummulative probability. \n+     */\n+    double cummulativeProbability(double x0, double x1);\n+    \n+    /**\n+     * For this disbution, X, this method returns x such that P(X &lt; x) = p.\n+     * @param p the cummulative probability.\n+     * @return x. \n+     */\n+    double inverseCummulativeProbability(double p);\n+    \n+    /**\n+     * \n+     */\n+    double getMean();\n+    \n+    /**\n+     * \n+     */\n+    double getDomainLowerBound();\n+    \n+    /**\n+     * \n+     */\n+    double getDomainUpperBound();\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/DistributionFactory.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+/**\n+ * This factory provids the means to create common statistical distributions.\n+ * The following distributions are supported:<ul>\n+ * <li>Chi-Square</li>\n+ * <li>Gamma</li>\n+ * </ul>\n+ * \n+ * Common usage:<pre>\n+ * DistributionFactory factory = DistributionFactory.newInstance();\n+ * \n+ * // create a Chi-Square distribution with 5 degrees of freedom.\n+ * ChiSquaredDistribution chi = factory.createChiSquareDistribution(5.0);\n+ * </pre>\n+ * \n+ * @author Brent Worden\n+ */\n+public abstract class DistributionFactory {\n+    /**\n+     * Default constructor.\n+     */\n+    protected DistributionFactory() {\n+        super();\n+    }\n+    \n+    /**\n+     * Create an instance of a <code>DistributionFactory</code>\n+     * @return a new factory. \n+     */\n+    public static DistributionFactory newInstance() {\n+        // for now, return the only concrete factory.\n+        // later, allow for a plugable implementation, possible using SPI and\n+        // commons-discovery.\n+        return new DistributionFactoryImpl();\n+    }\n+    \n+    /**\n+     * Create a new chi-square distribution with the given degrees of freedom.\n+     * @param degreesOfFreedom degrees of freedom.\n+     * @return a new chi-square distribution.  \n+     */\n+    public abstract ChiSquaredDistribution createChiSquareDistribution(\n+        double degreesOfFreedom\n+    );\n+    \n+    /**\n+     * Create a new gamma distribution with the given alpha and beta values.\n+     * @param alpha the shape parameter.\n+     * @param beta the scale parameter.\n+     * @return a new gamma distribution.  \n+     */\n+    public abstract GammaDistribution createGammaDistribution(\n+        double alpha, double beta);\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+\n+/**\n+ * A concrete distribution factory.  This is the default factory used by\n+ * Commons-Math.\n+ *  \n+ * @author Brent Worden\n+ */\n+public class DistributionFactoryImpl extends DistributionFactory {\n+    /**\n+     * Default constructor.  Package scope to prevent unwanted instantiation. \n+     */\n+    DistributionFactoryImpl() {\n+        super();\n+    }\n+    \n+    /**\n+     * Create a new chi-square distribution with the given degrees of freedom.\n+     * @param degreesOfFreedom degrees of freedom.\n+     * @return a new chi-square distribution.  \n+     */\n+    public ChiSquaredDistribution createChiSquareDistribution(\n+        final double degreesOfFreedom) {\n+            \n+        return new ChiSquaredDistributionImpl(degreesOfFreedom);\n+    }\n+    \n+    /**\n+     * Create a new gamma distribution the given alpha and beta values.\n+     * @param alpha the shape parameter.\n+     * @param beta the scale parameter.\n+     * @return a new gamma distribution.  \n+     */\n+    public GammaDistribution createGammaDistribution(\n+        double alpha, double beta) {\n+\n+        return new GammaDistributionImpl(alpha, beta);\n+    }\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/GammaDistribution.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+/**\n+ * The Gamma Distribution defined by\n+ * http://mathworld.wolfram.com/GammaDistribution.html.\n+ * \n+ * Instances of GammaDistribution objects should be created using\n+ * {@link DistributionFactory#createGammaDistribution(double, double)}\n+ *  \n+ * @author Brent Worden\n+ */\n+public interface GammaDistribution extends ContinuousDistribution {\n+    /**\n+     * Modify the shape parameter, alpha.\n+     * @param alpha the new shape parameter.\n+     */\n+    void setAlpha(double alpha);\n+    \n+    /**\n+     * Access the shape parameter, alpha\n+     * @return alpha.\n+     */\n+    double getAlpha();\n+    \n+    /**\n+     * Modify the scale parameter, beta.\n+     * @param beta the new scale parameter.\n+     */\n+    void setBeta(double beta);\n+    \n+    /**\n+     * Access the scale parameter, beta\n+     * @return beta.\n+     */\n+    double getBeta();\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.distribution;\n+\n+import org.apache.commons.math.special.Gamma;\n+\n+/**\n+ * The Gamma Distribution defined by\n+ * http://mathworld.wolfram.com/GammaDistribution.html.\n+ * <br/>\n+ * Along with the Gamma Distribution, this class can be used as a Chi-Squared\n+ * Distribution defined by\n+ * http://mathworld.wolfram.com/Chi-SquaredDistribution.html\n+ * \n+ * @author Brent Worden\n+ */\n+public class GammaDistributionImpl extends AbstractContinuousDistribution\n+    implements GammaDistribution {\n+\n+    /** The shape parameter. */\n+    private double alpha;\n+    \n+    /** The scale parameter. */\n+    private double beta;\n+    \n+    /**\n+     * Create a new gamma distribution with the given alpha and beta values.\n+     * @param alpha the shape parameter.\n+     * @param beta the scale parameter.\n+     */\n+    public GammaDistributionImpl(double alpha, double beta) {\n+        super();\n+        setAlpha(alpha);\n+        setBeta(beta);\n+    }\n+    \n+    /**\n+     * For this disbution, X, this method returns P(X &lt; x).  This\n+     * implementation is based on the formulas found in Abramowitz and Stegun,\n+     * \"Handbook of Mathematical Functions.\"\n+     * @param x the value at which the CDF is evaluated.\n+     * @return CDF for this distribution. \n+     */\n+    public double cummulativeProbability(double x) {\n+        double ret;\n+    \n+        if (x <= 0.0) {\n+            ret = 0.0;\n+        } else {\n+            ret = Gamma.regularizedGammaP(getAlpha(), x / getBeta());\n+        }\n+    \n+        return ret;\n+    }\n+    \n+    /**\n+     * Modify the shape parameter, alpha.\n+     * @param alpha the new shape parameter.\n+     */\n+    public void setAlpha(double alpha) {\n+        if (alpha <= 0.0) {\n+            throw new IllegalArgumentException(\"alpha must be positive\");\n+        }\n+        this.alpha = alpha;\n+    }\n+    \n+    /**\n+     * Access the shape parameter, alpha\n+     * @return alpha.\n+     */\n+    public double getAlpha() {\n+        return alpha;\n+    }\n+    \n+    /**\n+     * Modify the scale parameter, beta.\n+     * @param beta the new scale parameter.\n+     */\n+    public void setBeta(double beta) {\n+        if (beta <= 0.0) {\n+            throw new IllegalArgumentException(\"beta must be positive\");\n+        }\n+        this.beta = beta;\n+    }\n+    \n+    /**\n+     * Access the scale parameter, beta\n+     * @return beta.\n+     */\n+    public double getBeta() {\n+        return beta;\n+    }\n+    \n+\t/**\n+\t * @return\n+\t */\n+\tpublic double getDomainLowerBound() {\n+\t\treturn Double.MIN_VALUE;\n+\t}\n+\n+\t/**\n+\t * @return\n+\t */\n+\tpublic double getDomainUpperBound() {\n+\t\treturn Double.MAX_VALUE;\n+\t}\n+\n+\t/**\n+\t * @return\n+\t */\n+\tpublic double getMean() {\n+\t\treturn getAlpha() * getBeta();\n+\t}\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/math/special/Gamma.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.special;\n+\n+import org.apache.commons.math.ConvergenceException;\n+\n+/**\n+ * This is a utility class that provides computation methods related to the\n+ * Gamma family of functions.\n+ * \n+ * @author Brent Worden\n+ */\n+public class Gamma {\n+    /** Maximum number of iteration allowed for iterative methods. */\n+    private static final int MAXIMUM_ITERATIONS = 100;\n+\n+    /** Maximum allowed numerical error. */\n+    private static final double EPSILON = 10e-9;\n+\n+    /**\n+     * Default constructor.  Prohibit instantiation.\n+     */\n+    private Gamma() {\n+        super();\n+    }\n+\n+    /**\n+     * Returns the regularized gamma function P(a, x) defined by\n+     * http://mathworld.wolfram.com/RegularizedGammaFunction.html. \n+     *\n+     * This implementation is based on the formulas and descriptions presented\n+     * in Press, et. al. \"Numerical Recipes in C.\"  This implementation uses\n+     * the series representation of the regularized gamma function for all\n+     * values a and x.  Later on, this method can be improved upon for certain\n+     * values of a and x using continuous fractions as the series converges\n+     * slowly for x >> a.\n+     * \n+     * @param a ???\n+     * @param x ???\n+     * @return the regularized gamma function P(a, x)\n+     */\n+    public static double regularizedGammaP(double a, double x) {\n+        double ret;\n+\n+        if (a <= 0.0) {\n+            throw new IllegalArgumentException(\"a must be positive\");\n+        } else if (x <= 0.0) {\n+            throw new IllegalArgumentException(\"x must be non-negative\");\n+        } else {\n+            // calculate series\n+            double n = 0.0; // current element index\n+            double an = 1.0 / a; // n-th element in the series\n+            double sum = an; // partial sum\n+            while (Math.abs(an) > EPSILON && n < MAXIMUM_ITERATIONS) {\n+                // compute next element in the series\n+                n = n + 1.0;\n+                an = an * (x / (a + n));\n+\n+                // update partial sum\n+                sum = sum + an;\n+            }\n+            if (n >= MAXIMUM_ITERATIONS) {\n+                throw new ConvergenceException(\n+                    \"maximum number of iterations reached\");\n+            } else {\n+                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;\n+            }\n+        }\n+\n+        return ret;\n+    }\n+\n+    /**\n+     * Returns the natural logarithm of the gamma function &#915;(x) defined\n+     * by http://mathworld.wolfram.com/GammaFunction.html\n+     *\n+     * This implementation is based on the formulas and descriptions presented\n+     * in Press, et. al. \"Numerical Recipes in C\" and the Lanczos coefficient\n+     * research conducted by Paul Godfrey.\n+     * \n+     * @param x ???\n+     * @return log(&#915;(x))\n+     */\n+    public static double logGamma(double x) {\n+        double ret;\n+\n+        if (x <= 0.0) {\n+            throw new IllegalArgumentException(\n+                \"x must be non-negative\");\n+        } else {\n+            double g = 607.0 / 128.0;\n+\n+            // Lanczos coefficients\n+            double[] c =\n+                {\n+                    0.99999999999999709182,\n+                    57.156235665862923517,\n+                    -59.597960355475491248,\n+                    14.136097974741747174,\n+                    -0.49191381609762019978,\n+                    .33994649984811888699e-4,\n+                    .46523628927048575665e-4,\n+                    -.98374475304879564677e-4,\n+                    .15808870322491248884e-3,\n+                    -.21026444172410488319e-3,\n+                    .21743961811521264320e-3,\n+                    -.16431810653676389022e-3,\n+                    .84418223983852743293e-4,\n+                    -.26190838401581408670e-4,\n+                    .36899182659531622704e-5,\n+                    };\n+\n+            double sum = 0.0;\n+            for (int i = 1; i < c.length; ++i) {\n+                sum = sum + (c[i] / (x + i));\n+            }\n+            sum = sum + c[0];\n+\n+            double tmp = x + g + .5;\n+            ret =\n+                (x + .5) * Math.log(tmp)\n+                    - tmp\n+                    + (.5 * Math.log(2.0 * Math.PI))\n+                    + Math.log(sum / x);\n+        }\n+\n+        return ret;\n+    }\n+}", "timestamp": 1054236878, "metainfo": ""}