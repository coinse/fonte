{"sha": "e1df5f5486f10ac521dfc3dc20d1bfe508e67aa8", "log": "Fixed a comparison error when two different fractions evaluate to the same double due to limited precision. Jira: MATH-252   ", "commit": "\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n      *         than <tt>object</tt>, 0 if they are equal.\n      */\n     public int compareTo(Fraction object) {\n-        int ret = 0;\n-        \n-        if (this != object) { \n-            double first = doubleValue();\n-            double second = object.doubleValue();\n-            \n-            if (first < second) {\n-                ret = -1;\n-            } else if (first > second) {\n-                ret = 1;\n-            }\n-        }\n-        \n-        return ret;\n+        long nOd = ((long) numerator) * object.denominator;\n+        long dOn = ((long) denominator) * object.numerator;\n+        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);\n     }\n     \n     /**\n--- a/src/test/org/apache/commons/math/fraction/FractionTest.java\n+++ b/src/test/org/apache/commons/math/fraction/FractionTest.java\n         assertEquals(0, first.compareTo(third));\n         assertEquals(1, first.compareTo(second));\n         assertEquals(-1, second.compareTo(first));\n+\n+        // these two values are different approximations of PI\n+        // the first  one is approximately PI - 3.07e-18\n+        // the second one is approximately PI + 1.936e-17\n+        Fraction pi1 = new Fraction(1068966896, 340262731);\n+        Fraction pi2 = new Fraction( 411557987, 131002976);\n+        assertEquals(-1, pi1.compareTo(pi2));\n+        assertEquals( 1, pi2.compareTo(pi1));\n+        assertEquals(0.0, pi1.doubleValue() - pi2.doubleValue(), 1.0e-20);\n     }\n     \n     public void testDoubleValue() {", "timestamp": 1238345508, "metainfo": ""}