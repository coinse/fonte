{"sha": "7855e7c65a5ecc769bbd984643abd55fce34d373", "log": "MATH-601 Replaced call to \"max\" with the already known result \"m\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java\n     private final RealMatrix cachedV;\n     /** Cached value of transposed V matrix. */\n     private RealMatrix cachedVt;\n-    /** Tolerance value for small singular values, calculated once we have populated singularValues **/\n+    /**\n+     * Tolerance value for small singular values, calculated once we have\n+     * populated \"singularValues\".\n+     **/\n     private final double tol;\n \n     /**\n         }\n \n         // Set the small value tolerance used to calculate rank and pseudo-inverse\n-        tol = FastMath.max(FastMath.max(m, n) * singularValues[0] * EPS,\n-                FastMath.sqrt( MathUtils.SAFE_MIN));\n+        tol = FastMath.max(m * singularValues[0] * EPS,\n+                           FastMath.sqrt(MathUtils.SAFE_MIN));\n \n         if (!transposed) {\n             cachedU = MatrixUtils.createRealMatrix(U);", "timestamp": 1313220218, "metainfo": ""}