{"sha": "b45652977d317211bcd02e01446796d664bc96f5", "log": "Simplified code, eliminated unecessary parameters in private methods.  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\n      * @return sum of squared errors associated with the regression model\n      */\n     public double getSumSquaredErrors() {\n-        return getSumSquaredErrors(getSlope());\n+        return sumYY - sumXY * sumXY / sumXX;\n     }\n \n     /**\n      */\n     public double getR() {\n         double b1 = getSlope();\n-        double result = Math.sqrt(getRSquare(b1));\n+        double result = Math.sqrt(getRSquare());\n         if (b1 < 0) {\n             result = -result;\n         }\n      * @return r-square\n      */\n     public double getRSquare() {\n-        return getRSquare(getSlope());\n+        double ssto = getTotalSumSquares();\n+        return (ssto - getSumSquaredErrors()) / ssto;\n     }\n \n     /**\n     }\n \n     /**\n-     * Returns the sum of squared errors associated with the regression \n-     * model, using the slope of the regression line. \n-     * <p> \n-     * Returns NaN if the slope is NaN.\n-     * \n-     * @param b1 current slope\n-     * @return sum of squared errors associated with the regression model\n-     */\n-    private double getSumSquaredErrors(double b1) {\n-        return sumYY - sumXY * sumXY / sumXX;\n-    }\n-\n-    /** \n-     * Computes r-square from the slope.\n-     * <p>\n-     * will return NaN if slope is Nan.\n-     *\n-     * @param b1 current slope\n-     * @return r-square\n-     */\n-    private double getRSquare(double b1) {\n-        double ssto = getTotalSumSquares();\n-        return (ssto - getSumSquaredErrors(b1)) / ssto;\n-    }\n-\n-    /**\n      * Computes SSR from b1.\n      * \n      * @param slope regression slope estimate", "timestamp": 1136181330, "metainfo": ""}