{"sha": "79782b0df0788c6146c1dcbfe028629fb863f485", "log": "Javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/StandardDeviation.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/StandardDeviation.java\n  * one of the threads invokes the <code>increment()</code> or \n  * <code>clear()</code> method, it must be synchronized externally.\n  * \n- * @version $Revision: 1.23 $ $Date: 2004/09/01 15:54:39 $\n+ * @version $Revision: 1.24 $ $Date: 2004/09/01 16:23:11 $\n  */\n public class StandardDeviation extends AbstractStorelessUnivariateStatistic\n     implements Serializable {\n      * @param values the input array\n      * @param mean the precomputed mean value\n      * @return the standard deviation of the values or Double.NaN if length = 0\n-     * @throws IllegalArgumentException if the array is null or the array index\n-     *  parameters are not valid\n+     * @throws IllegalArgumentException if the array is null\n      */\n     public double evaluate(final double[] values, final double mean)  {\n         return Math.sqrt(variance.evaluate(values, mean));", "timestamp": 1094055791, "metainfo": ""}