{"sha": "d504ad57f7c1f9e07db9df1a70f2573a8ec3a12e", "log": "Javadoc; changed string double generator to use valueOf.  ", "commit": "\n--- a/src/java/org/apache/commons/math/random/ValueServer.java\n+++ b/src/java/org/apache/commons/math/random/ValueServer.java\n     /**\n      * Gets next sequential value from the <code>valuesFileURL</code>.\n      * <p>\n-     * Throws an IOException if the read fails.\n+     * Throws an IOException if the read fails.</p>\n      * <p>\n      * This method will open the <code>valuesFileURL</code> if there is no\n-     * replay file open.\n+     * replay file open.</p>\n      * <p>\n      * The <code>valuesFileURL</code> will be closed and reopened to wrap around\n-     * from EOF to BOF if EOF is encountered.\n+     * from EOF to BOF if EOF is encountered.</p>\n      *\n      * @return next value from the replay file\n      * @throws IOException if there is a problem reading from the file\n+     * @throws NumberFormatException if an invalid numeric string is\n+     *   encountered in the file\n      */\n     private double getNextReplay() throws IOException {\n         String str = null;\n             resetReplayFile();\n             str = filePointer.readLine();\n         }\n-        return new Double(str).doubleValue();\n+        return Double.valueOf(str).doubleValue();\n     }\n \n     /**", "timestamp": 1180598312, "metainfo": ""}