{"sha": "3fd6780f1d91200ad904f4dc45b91d5b3c555d4e", "log": "removed reference to Java 1.6 Math.nextUp method JIRA: MATH-398  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n         assertTrue(MathUtils.equals(1.0, 1 + Math.ulp(1d), 1));\n         assertFalse(MathUtils.equals(1.0, 1 + 2 * Math.ulp(1d), 1));\n \n-        final double nUp1 = Math.nextUp(1d);\n-        final double nnUp1 = Math.nextUp(nUp1);\n+        final double nUp1 = MathUtils.nextAfter(1d, Double.POSITIVE_INFINITY);\n+        final double nnUp1 = MathUtils.nextAfter(nUp1, Double.POSITIVE_INFINITY);\n         assertTrue(MathUtils.equals(1.0, nUp1, 1));\n         assertTrue(MathUtils.equals(nUp1, nnUp1, 1));\n         assertFalse(MathUtils.equals(1.0, nnUp1, 1));\n         assertTrue(MathUtils.equalsIncludingNaN(1.0, 1 + Math.ulp(1d), 1));\n         assertFalse(MathUtils.equalsIncludingNaN(1.0, 1 + 2 * Math.ulp(1d), 1));\n \n-        final double nUp1 = Math.nextUp(1d);\n-        final double nnUp1 = Math.nextUp(nUp1);\n+        final double nUp1 = MathUtils.nextAfter(1d, Double.POSITIVE_INFINITY);\n+        final double nnUp1 = Math.nextAfter(nUp1, Double.POSITIVE_INFINITY);\n         assertTrue(MathUtils.equalsIncludingNaN(1.0, nUp1, 1));\n         assertTrue(MathUtils.equalsIncludingNaN(nUp1, nnUp1, 1));\n         assertFalse(MathUtils.equalsIncludingNaN(1.0, nnUp1, 1));", "timestamp": 1280342848, "metainfo": ""}