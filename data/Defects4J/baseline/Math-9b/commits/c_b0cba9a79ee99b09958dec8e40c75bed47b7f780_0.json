{"sha": "b0cba9a79ee99b09958dec8e40c75bed47b7f780", "log": "Clarified definition of isSupportXxxBoundInclusive in RealDistribution interface, made code consistent with the definition, and deprecated these methods, marking for removal in 4.0. JIRA: MATH-859   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\n \n     /** {@inheritDoc} */\n     public boolean isSupportLowerBoundInclusive() {\n-        return true;\n+        return false;\n     }\n \n     /** {@inheritDoc} */\n--- a/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java\n     double getSupportUpperBound();\n \n     /**\n-     * Use this method to get information about whether the lower bound\n-     * of the support is inclusive or not.\n+     * Whether or not the lower bound of support is in the domain of the density\n+     * function.  Returns true iff {@code getSupporLowerBound()} is finite and\n+     * {@code density(getSupportLowerBound())} returns a non-NaN, non-infinite\n+     * value.\n      *\n-     * @return whether the lower bound of the support is inclusive or not\n+     * @return true if the lower bound of support is finite and the density \n+     * function returns a non-NaN, non-infinite value there\n+     * @deprecated to be removed in 4.0\n      */\n     boolean isSupportLowerBoundInclusive();\n \n     /**\n-     * Use this method to get information about whether the upper bound\n-     * of the support is inclusive or not.\n+     * Whether or not the upper bound of support is in the domain of the density\n+     * function.  Returns true iff {@code getSupportUpperBound()} is finite and\n+     * {@code density(getSupportUpperBound())} returns a non-NaN, non-infinite\n+     * value.\n      *\n-     * @return whether the upper bound of the support is inclusive or not\n+     * @return true if the upper bound of support is finite and the density \n+     * function returns a non-NaN, non-infinite value there\n+     * @deprecated to be removed in 4.0\n      */\n     boolean isSupportUpperBoundInclusive();\n \n--- a/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java\n                                     integrationTestPoints.get(i)), tol);\n         }\n     }\n+    \n+    /**\n+     * Verify that isSupportLowerBoundInclusvie returns true iff the lower bound\n+     * is finite and density is non-NaN, non-infinite there.\n+     */\n+    @Test\n+    public void testIsSupportLowerBoundInclusive() {\n+        final double lowerBound = distribution.getSupportLowerBound();\n+        double result = Double.NaN;\n+        result = distribution.density(lowerBound);\n+        Assert.assertEquals(\n+                !Double.isInfinite(lowerBound) && !Double.isNaN(result) &&\n+                !Double.isInfinite(result),\n+                distribution.isSupportLowerBoundInclusive());\n+         \n+    }\n+    \n+    /**\n+     * Verify that isSupportUpperBoundInclusvie returns true iff the upper bound\n+     * is finite and density is non-NaN, non-infinite there.\n+     */\n+    @Test\n+    public void testIsSupportUpperBoundInclusive() {\n+        final double upperBound = distribution.getSupportUpperBound();\n+        double result = Double.NaN;\n+        result = distribution.density(upperBound);\n+        Assert.assertEquals(\n+                !Double.isInfinite(upperBound) && !Double.isNaN(result) &&\n+                !Double.isInfinite(result),\n+                distribution.isSupportUpperBoundInclusive());\n+         \n+    }\n \n     //------------------ Getters / Setters for test instance data -----------\n     /**", "timestamp": 1347142532, "metainfo": ""}