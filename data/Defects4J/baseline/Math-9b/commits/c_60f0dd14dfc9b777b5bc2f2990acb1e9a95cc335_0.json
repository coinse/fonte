{"sha": "60f0dd14dfc9b777b5bc2f2990acb1e9a95cc335", "log": "Eliminated pluggability of ChiSquaredDistribution used by ChiSquaredDistributionTest.  JIRA: MATH-506.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n  */\n public class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {\n \n-    /** Distribution used to compute inference statistics. */\n-    private ChiSquaredDistribution distribution;\n-\n     /**\n      * Construct a ChiSquareTestImpl\n      */\n     public ChiSquareTestImpl() {\n-        this(new ChiSquaredDistributionImpl(1.0));\n-    }\n-\n-    /**\n-     * Create a test instance using the given distribution for computing\n-     * inference statistics.\n-     * @param x distribution used to compute inference statistics.\n-     * @since 1.2\n-     */\n-    public ChiSquareTestImpl(ChiSquaredDistribution x) {\n         super();\n-        setDistribution(x);\n-    }\n+    }\n+\n      /**\n      * {@inheritDoc}\n      * <p><strong>Note: </strong>This implementation rescales the\n      */\n     public double chiSquareTest(double[] expected, long[] observed)\n         throws MathException {\n-        distribution = new ChiSquaredDistributionImpl(expected.length - 1.0);\n+        ChiSquaredDistribution distribution =\n+            new ChiSquaredDistributionImpl(expected.length - 1.0);\n         return 1.0 - distribution.cumulativeProbability(\n             chiSquare(expected, observed));\n     }\n     throws MathException {\n         checkArray(counts);\n         double df = ((double) counts.length -1) * ((double) counts[0].length - 1);\n-        distribution = new ChiSquaredDistributionImpl(df);\n+        ChiSquaredDistribution distribution = new ChiSquaredDistributionImpl(df);\n         return 1 - distribution.cumulativeProbability(chiSquare(counts));\n     }\n \n      */\n     public double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)\n         throws MathException {\n-        distribution = new ChiSquaredDistributionImpl((double) observed1.length - 1);\n+        ChiSquaredDistribution distribution =\n+            new ChiSquaredDistributionImpl((double) observed1.length - 1);\n         return 1 - distribution.cumulativeProbability(\n                 chiSquareDataSetsComparison(observed1, observed2));\n     }\n             }\n         }\n     }\n-\n-    /**\n-     * Modify the distribution used to compute inference statistics.\n-     *\n-     * @param value\n-     *            the new distribution\n-     * @since 1.2\n-     */\n-    public void setDistribution(ChiSquaredDistribution value) {\n-        distribution = value;\n-    }\n }", "timestamp": 1313874514, "metainfo": ""}