{"sha": "924b6d76a2d44baf858c3aee46ab1439c9641959", "log": "Added a MathUtils method to check equality given some error bounds JIRA: MATH-247  ", "commit": "\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n         return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);\n     }\n \n+    /**\n+     * Returns true iff both arguments are equal or within the range of allowed\n+     * error (inclusive).\n+     * \n+     * @param x first value\n+     * @param y second value\n+     * @param eps the amount of absolute error to allow\n+     * @return true if the values are equal or within range of each other\n+     */\n+    public static boolean equals(double x, double y, double eps) {\n+      return x == y || (x < y && (x + eps) >= y) || (x > y && x <= (y + eps));\n+    }\n+    \n     /**\n      * Returns true iff both arguments are null or have same dimensions\n      * and all their elements are {@link #equals(double,double) equals}\n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n         }\n     }\n \n+    public void testEqualsWithAllowedDelta() {\n+        assertTrue(MathUtils.equals(153.0000, 153.0000, .0001));\n+        assertTrue(MathUtils.equals(153.0000, 153.0001, .0001));\n+        assertTrue(MathUtils.equals(152.9999, 153.0000, .0001));\n+        assertFalse(MathUtils.equals(153.0000, 153.0001, .00001));\n+        assertFalse(MathUtils.equals(152.9998, 153.0000, .0001));\n+    }\n+    \n     public void testArrayEquals() {\n         assertFalse(MathUtils.equals(new double[] { 1d }, null));\n         assertFalse(MathUtils.equals(null, new double[] { 1d }));", "timestamp": 1235223368, "metainfo": ""}