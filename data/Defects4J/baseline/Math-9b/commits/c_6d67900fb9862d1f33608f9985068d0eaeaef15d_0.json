{"sha": "6d67900fb9862d1f33608f9985068d0eaeaef15d", "log": "Cached DistributionFactory instance.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n  */\n package org.apache.commons.math.stat.inference;\n \n-import java.io.Serializable;\n-\n import org.apache.commons.math.MathException;\n import org.apache.commons.math.distribution.DistributionFactory;\n import org.apache.commons.math.distribution.ChiSquaredDistribution;\n /**\n  * Implements Chi-Square test statistics defined in the {@link ChiSquareTest} interface.\n  *\n- * @version $Revision: 1.4 $ $Date: 2004/06/05 20:11:06 $\n+ * @version $Revision: 1.5 $ $Date: 2004/06/06 23:14:09 $\n  */\n public class ChiSquareTestImpl implements ChiSquareTest {\n+    \n+    /** Cached DistributionFactory used to create ChiSquaredDistribution instances */\n+    private DistributionFactory distributionFactory = null;\n   \n     public ChiSquareTestImpl() {\n         super();\n     public double chiSquareTest(double[] expected, long[] observed)\n         throws IllegalArgumentException, MathException {\n         ChiSquaredDistribution chiSquaredDistribution =\n-            DistributionFactory.newInstance().createChiSquareDistribution((double) expected.length - 1);\n+            getDistributionFactory().createChiSquareDistribution((double) expected.length - 1);\n         return 1 - chiSquaredDistribution.cumulativeProbability(chiSquare(expected, observed));\n     }\n \n         checkArray(counts);\n         double df = ((double) counts.length -1) * ((double) counts[0].length - 1);\n         ChiSquaredDistribution chiSquaredDistribution =\n-            DistributionFactory.newInstance().createChiSquareDistribution(df);\n+            getDistributionFactory().createChiSquareDistribution(df);\n         return 1 - chiSquaredDistribution.cumulativeProbability(chiSquare(counts));\n     }\n \n         \n     }\n     \n+    //---------------------  Protected methods ---------------------------------\n+    /**\n+     * Gets a DistributionFactory to use in creating ChiSquaredDistribution instances.\n+     */\n+    protected DistributionFactory getDistributionFactory() {\n+        if (distributionFactory == null) {\n+            distributionFactory = DistributionFactory.newInstance();\n+        }\n+        return distributionFactory;\n+    }\n+    \n     //---------------------  Private array methods -- should find a utility home for these\n     \n     /**", "timestamp": 1086563649, "metainfo": ""}