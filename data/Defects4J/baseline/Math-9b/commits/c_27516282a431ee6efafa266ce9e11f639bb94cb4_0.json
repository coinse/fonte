{"sha": "27516282a431ee6efafa266ce9e11f639bb94cb4", "log": "Added tests for special values.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- * @version $Revision: 1.10 $ $Date: 2004/06/17 21:37:05 $\n+ * @version $Revision: 1.11 $ $Date: 2004/06/18 07:04:20 $\n  */\n public class GeometricMeanTest extends StorelessUnivariateStatisticAbstractTest{\n \n     public double expectedValue() {\n         return this.geoMean;\n     }\n+    \n+    public void testSpecialValues() {\n+        GeometricMean mean = new GeometricMean();\n+        // empty\n+        assertTrue(Double.isNaN(mean.getResult()));\n+        \n+        // finite data\n+        mean.increment(1d);\n+        assertFalse(Double.isNaN(mean.getResult()));\n+        \n+        // add 0 -- makes log sum blow to minus infinity, should make 0\n+        mean.increment(0d);\n+        assertEquals(0d, mean.getResult(), 0);\n+        \n+        // add positive infinity - note the minus infinity above\n+        mean.increment(Double.POSITIVE_INFINITY);\n+        assertTrue(Double.isNaN(mean.getResult()));\n+        \n+        // clear\n+        mean.clear();\n+        assertTrue(Double.isNaN(mean.getResult()));\n+        \n+        // positive infinity by itself\n+        mean.increment(Double.POSITIVE_INFINITY);\n+        assertEquals(Double.POSITIVE_INFINITY, mean.getResult(), 0);\n+        \n+        // negative value -- should make NaN\n+        mean.increment(-2d);\n+        assertTrue(Double.isNaN(mean.getResult()));\n+    }\n \n }", "timestamp": 1087542260, "metainfo": ""}