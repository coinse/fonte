{"sha": "fec595ba5a40a3ef5e6917d278d0ce7c1799ff70", "log": "cleaned more subversion properties  ", "commit": "\n--- a/src/java/org/apache/commons/math/genetics/AbstractListChromosome.java\n+++ b/src/java/org/apache/commons/math/genetics/AbstractListChromosome.java\n  * Chromosome represented by an immutable list of a fixed length.\n  * \n  * @param <T> type of the representation list\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public abstract class AbstractListChromosome<T> extends Chromosome {\n--- a/src/java/org/apache/commons/math/genetics/BinaryChromosome.java\n+++ b/src/java/org/apache/commons/math/genetics/BinaryChromosome.java\n /**\n  * Chromosome represented by a vector of 0s and 1s.\n  * \n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public abstract class BinaryChromosome extends AbstractListChromosome<Integer> {\n--- a/src/java/org/apache/commons/math/genetics/BinaryMutation.java\n+++ b/src/java/org/apache/commons/math/genetics/BinaryMutation.java\n /**\n  * Mutation for {@link BinaryChromosome}s. Randomly changes one gene.\n  *\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class BinaryMutation implements MutationPolicy {\n--- a/src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java\n+++ b/src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java\n  * Population of chromosomes which uses elitism (certain percentace of the best\n  * chromosomes is directly copied to the next generation).\n  * \n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class ElitisticListPopulation extends ListPopulation {\n--- a/src/java/org/apache/commons/math/genetics/FixedGenerationCount.java\n+++ b/src/java/org/apache/commons/math/genetics/FixedGenerationCount.java\n  * <code>maxGenerations</code> value, {@link #isSatisfied(Population)} returns\n  * true.\n  * \n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class FixedGenerationCount implements StoppingCondition {\n--- a/src/java/org/apache/commons/math/genetics/InvalidRepresentationException.java\n+++ b/src/java/org/apache/commons/math/genetics/InvalidRepresentationException.java\n /**\n  * Exception indicating that the representation of a chromosome is not valid.\n  * \n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class InvalidRepresentationException extends Exception {\n--- a/src/java/org/apache/commons/math/genetics/ListPopulation.java\n+++ b/src/java/org/apache/commons/math/genetics/ListPopulation.java\n  * Population of chromosomes represented by a {@link List}.\n  *\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public abstract class ListPopulation implements Population {\n     \n--- a/src/java/org/apache/commons/math/genetics/OnePointCrossover.java\n+++ b/src/java/org/apache/commons/math/genetics/OnePointCrossover.java\n  * \n  * @param <T> generic type of the {@link AbstractListChromosome}s for crossover\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * \n  */\n public class OnePointCrossover<T> implements CrossoverPolicy {\n--- a/src/java/org/apache/commons/math/genetics/PermutationChromosome.java\n+++ b/src/java/org/apache/commons/math/genetics/PermutationChromosome.java\n  * @param <T>\n  *            type of the permuted objects\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public interface PermutationChromosome<T> {\n \n--- a/src/java/org/apache/commons/math/genetics/RandomKey.java\n+++ b/src/java/org/apache/commons/math/genetics/RandomKey.java\n  * @param <T>\n  *            type of the permuted objects\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public abstract class RandomKey<T> extends AbstractListChromosome<Double> implements PermutationChromosome<T> {\n     \n--- a/src/java/org/apache/commons/math/genetics/RandomKeyMutation.java\n+++ b/src/java/org/apache/commons/math/genetics/RandomKeyMutation.java\n  * of the array representation to a random value uniformly distributed in [0,1].\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class RandomKeyMutation implements MutationPolicy {\n \n--- a/src/java/org/apache/commons/math/genetics/TournamentSelection.java\n+++ b/src/java/org/apache/commons/math/genetics/TournamentSelection.java\n  * fittest chromosome among them. \n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class TournamentSelection implements SelectionPolicy {\n     \n--- a/src/java/org/apache/commons/math/linear/OpenMapRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/OpenMapRealVector.java\n \n /**\n  * This class implements the {@link RealVector} interface with a {@link OpenIntToDoubleHashMap} backing store.\n- * @version $Revision: 728186 $ $Date$\n+ * @version $Revision$ $Date$\n  * @since 2.0\n */\n public class OpenMapRealVector implements SparseRealVector, Serializable {\n--- a/src/java/org/apache/commons/math/linear/SparseFieldMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/SparseFieldMatrix.java\n  * Sparse matrix implementation based on an open addressed map.\n  * \n  * @param <T> the type of the field elements\n- * @version $Revision: 762117 $ $Date: 2009-04-05 09:53:35 -0700 (Sun, 05 Apr 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class SparseFieldMatrix<T extends FieldElement<T>> extends AbstractFieldMatrix<T> {\n--- a/src/java/org/apache/commons/math/linear/SparseFieldVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseFieldVector.java\n /**\n  * This class implements the {@link FieldVector} interface with a {@link OpenIntToFieldHashMap} backing store.\n  * @param <T> the type of the field elements\n- * @version $Revision: 728186 $ $Date: 2009-04-25 12:39:38 -0700 (Sat, 25 Apr 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class SparseFieldVector<T extends FieldElement<T>> implements FieldVector<T>, Serializable {\n--- a/src/java/org/apache/commons/math/linear/SparseRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealMatrix.java\n /**\n  * Marker interface for {@link RealMatrix} implementations that require sparse backing storage\n  * \n- * @version $Revision: 775768 $ $Date: 2009-05-17 15:12:50 -0700 (Sun, 17 May 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  *\n  */\n--- a/src/java/org/apache/commons/math/linear/SparseRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealVector.java\n \n /**\n  * Marker interface for RealVectors that require sparse backing storage\n- * @version $Revision: 728186 $ $Date: 2009-05-17 15:12:50 -0700 (Sun, 17 May 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  *\n  */\n--- a/src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java\n+++ b/src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java\n  * or if either the absolute difference between the point coordinates are\n  * smaller than another threshold.\n  * </p>\n- * @version $Revision: 757180 $ $Date: 2009-03-22 13:54:45 +0100 (dim., 22 mars 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class SimpleRealPointChecker implements RealConvergenceChecker {\n--- a/src/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java\n+++ b/src/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java\n  * The ranking algorithm can be set using a constructor argument.</p>\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n \n public class SpearmansCorrelation {   \n--- a/src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java\n  * to avoid unecessary computation and synchronization delays.</p>\n  *\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  * \n  */\n public class AggregateSummaryStatistics implements StatisticalSummary,\n--- a/src/java/org/apache/commons/math/stat/ranking/NaNStrategy.java\n+++ b/src/java/org/apache/commons/math/stat/ranking/NaNStrategy.java\n  * </ul>\n  *\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public enum NaNStrategy {\n     \n--- a/src/java/org/apache/commons/math/stat/ranking/NaturalRanking.java\n+++ b/src/java/org/apache/commons/math/stat/ranking/NaturalRanking.java\n  * <td>(6, 5, 7, 8, 5, 9, 2, 2, 5)</td></tr></table></p>\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class NaturalRanking implements RankingAlgorithm {\n    \n--- a/src/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java\n+++ b/src/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java\n  * Interface representing a rank transformation.\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public interface RankingAlgorithm {\n     /**\n--- a/src/java/org/apache/commons/math/stat/ranking/TiesStrategy.java\n+++ b/src/java/org/apache/commons/math/stat/ranking/TiesStrategy.java\n  * </ul>\n  *\n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public enum TiesStrategy {\n     \n--- a/src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java\n+++ b/src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java\n  * <code>ConcurrentModificationException</code> when they detect the map has been\n  * modified during iteration.</p>\n  * @param <T> the type of the field elements\n- * @version $Revision: 746578 $ $Date: 2009-02-21 12:01:14 -0800 (Sat, 21 Feb 2009) $\n+ * @version $Revision$ $Date$\n  * @since 2.0\n  */\n public class OpenIntToFieldHashMap<T extends FieldElement<T>> implements Serializable {\n--- a/src/test/org/apache/commons/math/linear/SparseFieldMatrixTest.java\n+++ b/src/test/org/apache/commons/math/linear/SparseFieldMatrixTest.java\n /**\n  * Test cases for the {@link SparseFieldMatrix} class.\n  *\n- * @version $Revision: 728186 $ $Date: 2009-04-20 11:42:11 -0700 (Mon, 20 Apr 2009) $\n+ * @version $Revision$ $Date$\n  */\n public class SparseFieldMatrixTest extends TestCase {\n     // 3 x 3 identity matrix\n--- a/src/test/org/apache/commons/math/linear/SparseFieldVectorTest.java\n+++ b/src/test/org/apache/commons/math/linear/SparseFieldVectorTest.java\n /**\n  * Test cases for the {@link SparseFieldVector} class.\n  *\n- * @version $Revision: 728186 $ $Date: 2009-04-20 11:42:11 -0700 (Mon, 20 Apr 2009) $\n+ * @version $Revision$ $Date$\n  */\n public class SparseFieldVectorTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/org/apache/commons/math/linear/SparseRealVectorTest.java\n /**\n  * Test cases for the {@link OpenMapRealVector} class.\n  *\n- * @version $Revision: 728186 $ $Date$\n+ * @version $Revision$ $Date$\n  */\n public class SparseRealVectorTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/stat/correlation/SpearmansRankCorrelationTest.java\n+++ b/src/test/org/apache/commons/math/stat/correlation/SpearmansRankCorrelationTest.java\n  * Test cases for Spearman's rank correlation\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class SpearmansRankCorrelationTest extends PearsonsCorrelationTest {\n \n--- a/src/test/org/apache/commons/math/stat/ranking/NaturalRankingTest.java\n+++ b/src/test/org/apache/commons/math/stat/ranking/NaturalRankingTest.java\n  * Test cases for NaturalRanking class\n  * \n  * @since 2.0\n- * @version $Revision:$ $Date:$\n+ * @version $Revision$ $Date$\n  */\n public class NaturalRankingTest extends TestCase {\n ", "timestamp": 1249132032, "metainfo": ""}