{"sha": "f335e5a33487c97808f0fc81dbe0b3afbf744a5f", "log": "fixed weird spacing as per last patch from Ben  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n         matrix[zIndex][zIndex] = maximize ? 1 : -1;\n         RealVector objectiveCoefficients =\n             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n-            copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n-            matrix[zIndex][width - 1] =\n-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n-\n-                if (!restrictToNonNegative) {\n-                    matrix[zIndex][getSlackVariableOffset() - 1] =\n-                        getInvertedCoeffiecientSum(objectiveCoefficients);\n-                }\n-\n-                // initialize the constraint rows\n-                int slackVar = 0;\n-                int artificialVar = 0;\n-                for (int i = 0; i < constraints.size(); i++) {\n-                    LinearConstraint constraint = constraints.get(i);\n-                    int row = getNumObjectiveFunctions() + i;\n-\n-                    // decision variable coefficients\n-                    copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n-\n-                    // x-\n-                    if (!restrictToNonNegative) {\n-                        matrix[row][getSlackVariableOffset() - 1] =\n-                            getInvertedCoeffiecientSum(constraint.getCoefficients());\n-                    }\n-\n-                    // RHS\n-                    matrix[row][width - 1] = constraint.getValue();\n-\n-                    // slack variables\n-                    if (constraint.getRelationship() == Relationship.LEQ) {\n-                        matrix[row][getSlackVariableOffset() + slackVar++] = 1;  // slack\n-                    } else if (constraint.getRelationship() == Relationship.GEQ) {\n-                        matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess\n-                    }\n-\n-                    // artificial variables\n-                    if ((constraint.getRelationship() == Relationship.EQ) ||\n-                        (constraint.getRelationship() == Relationship.GEQ)) {\n-                        matrix[0][getArtificialVariableOffset() + artificialVar] = 1; \n-                        matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; \n-                    }\n-                }\n-\n-                return matrix;\n+        copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n+        matrix[zIndex][width - 1] =\n+            maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n+\n+        if (!restrictToNonNegative) {\n+            matrix[zIndex][getSlackVariableOffset() - 1] =\n+                getInvertedCoeffiecientSum(objectiveCoefficients);\n+        }\n+\n+        // initialize the constraint rows\n+        int slackVar = 0;\n+        int artificialVar = 0;\n+        for (int i = 0; i < constraints.size(); i++) {\n+            LinearConstraint constraint = constraints.get(i);\n+            int row = getNumObjectiveFunctions() + i;\n+\n+            // decision variable coefficients\n+            copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n+\n+            // x-\n+            if (!restrictToNonNegative) {\n+                matrix[row][getSlackVariableOffset() - 1] =\n+                    getInvertedCoeffiecientSum(constraint.getCoefficients());\n+            }\n+\n+            // RHS\n+            matrix[row][width - 1] = constraint.getValue();\n+\n+            // slack variables\n+            if (constraint.getRelationship() == Relationship.LEQ) {\n+                matrix[row][getSlackVariableOffset() + slackVar++] = 1;  // slack\n+            } else if (constraint.getRelationship() == Relationship.GEQ) {\n+                matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess\n+            }\n+\n+            // artificial variables\n+            if ((constraint.getRelationship() == Relationship.EQ) ||\n+                    (constraint.getRelationship() == Relationship.GEQ)) {\n+                matrix[0][getArtificialVariableOffset() + artificialVar] = 1; \n+                matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; \n+            }\n+        }\n+\n+        return matrix;\n+\n     }\n \n     /** Get the number of variables.", "timestamp": 1251276882, "metainfo": ""}