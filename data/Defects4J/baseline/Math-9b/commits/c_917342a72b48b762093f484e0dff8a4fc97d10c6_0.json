{"sha": "917342a72b48b762093f484e0dff8a4fc97d10c6", "log": "Improved javadoc.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/ValueServer.java\n+++ b/src/main/java/org/apache/commons/math/random/ValueServer.java\n         sigma = empiricalDistribution.getSampleStats().getStandardDeviation();\n     }\n \n-    /** Getter for property mode.\n+    /**\n+     * Returns the data generation mode. See {@link ValueServer the class javadoc}\n+     * for description of the valid values of this property.\n+     *\n      * @return Value of property mode.\n      */\n     public int getMode() {\n         return mode;\n     }\n \n-    /** Setter for property mode.\n-     * @param mode New value of property mode.\n+    /**\n+     * Sets the data generation mode.\n+     *\n+     * @param mode New value of the data generation mode.\n      */\n     public void setMode(int mode) {\n         this.mode = mode;\n     }\n \n     /**\n-     * Getter for <code>valuesFileURL<code>\n-     * @return Value of property valuesFileURL.\n+     * Returns the URL for the file used to build the empirical distribution\n+     * when using {@link #DIGEST_MODE}.\n+     *\n+     * @return Values file URL.\n      */\n     public URL getValuesFileURL() {\n         return valuesFileURL;\n     }\n \n     /**\n-     * Sets the <code>valuesFileURL</code> using a string URL representation\n+     * Sets the {@link #getValuesFileURL() values file URL} using a string\n+     * URL representation.\n+     *\n      * @param url String representation for new valuesFileURL.\n      * @throws MalformedURLException if url is not well formed\n      */\n     }\n \n     /**\n-     * Sets the <code>valuesFileURL</code>\n-     * @param url New value of property valuesFileURL.\n+     * Sets the the {@link #getValuesFileURL() values file URL}.\n+     *\n+     * @param url URL of the values file.\n      */\n     public void setValuesFileURL(URL url) {\n         this.valuesFileURL = url;\n     }\n \n-    /** Getter for property empiricalDistribution.\n-     * @return Value of property empiricalDistribution.\n+    /**\n+     * Returns the {@link EmpiricalDistribution} used when operating in {@value #DIGEST_MODE}.\n+     *\n+     * @return EmpircalDistribution built by {@link #computeDistribution()}\n      */\n     public EmpiricalDistribution getEmpiricalDistribution() {\n         return empiricalDistribution;\n     }\n \n     /**\n-     * Closes <code>valuesFileURL</code> after use in REPLAY_MODE.\n+     * Closes {@code valuesFileURL} after use in REPLAY_MODE.\n      *\n      * @throws IOException if an error occurs closing the file\n      */\n         }\n     }\n \n-    /** Getter for property mu.\n-     * @return Value of property mu.\n+    /**\n+     * Returns the mean used when operating in {@link #GAUSSIAN_MODE}, {@link #EXPONENTIAL_MODE}\n+     * or {@link #UNIFORM_MODE}.  When operating in {@link #CONSTANT_MODE}, this is the constant\n+     * value always returned.  Calling {@link #computeDistribution()} sets this value to the\n+     * overall mean of the values in the {@link #getValuesFileURL() values file}.\n+     *\n+     * @return Mean used in data generation.\n      */\n     public double getMu() {\n         return mu;\n     }\n \n-    /** Setter for property mu.\n-     * @param mu New value of property mu.\n+    /**\n+     * Sets the {@link #getMu() mean} used in data generation.  Note that calling this method\n+     * after {@link #computeDistribution()} has been called will have no effect on data\n+     * generated in {@link #DIGEST_MODE}.\n+     *\n+     * @param mu new Mean value.\n      */\n     public void setMu(double mu) {\n         this.mu = mu;\n     }\n \n-    /** Getter for property sigma.\n-     * @return Value of property sigma.\n+    /**\n+     * Returns the standard deviation used when operating in {@link #GAUSSIAN_MODE}.\n+     * Calling {@link #computeDistribution()} sets this value to the overall standard\n+     * deviation of the values in the {@link #getValuesFileURL() values file}.  This\n+     * property has no effect when the data generation mode is not\n+     * {@link #GAUSSIAN_MODE}.\n+     *\n+     * @return Standard deviation used when operating in {@link #GAUSSIAN_MODE}.\n      */\n     public double getSigma() {\n         return sigma;\n     }\n \n-    /** Setter for property sigma.\n-     * @param sigma New value of property sigma.\n+    /**\n+     * Sets the {@link #getSigma() standard deviation} used in {@link #GAUSSIAN_MODE}.\n+     *\n+     * @param sigma New standard deviation.\n      */\n     public void setSigma(double sigma) {\n         this.sigma = sigma;", "timestamp": 1314857853, "metainfo": ""}