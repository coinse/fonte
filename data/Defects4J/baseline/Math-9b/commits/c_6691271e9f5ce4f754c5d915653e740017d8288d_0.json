{"sha": "6691271e9f5ce4f754c5d915653e740017d8288d", "log": "MATH-849: Gamma.gamma(double) returns NaN if called on negative integer.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/special/Gamma.java\n+++ b/src/main/java/org/apache/commons/math3/special/Gamma.java\n      */\n     public static double gamma(final double x) {\n \n-        // TODO Check whether x is a negative integer\n+        if ((x == FastMath.rint(x)) && (x <= 0.0)) {\n+            return Double.NaN;\n+        }\n \n         final double ret;\n         final double absX = FastMath.abs(x);\n--- a/src/test/java/org/apache/commons/math3/special/GammaTest.java\n+++ b/src/test/java/org/apache/commons/math3/special/GammaTest.java\n         }\n     }\n \n+    @Test\n+    public void testGammaNegativeInteger() {\n+\n+        for (int i = -100; i <= 0; i++) {\n+            Assert.assertTrue(Integer.toString(i), Double.isNaN(Gamma.gamma(i)));\n+        }\n+    }\n+\n     /**\n      * Reference data for the {@link Gamma#logGammaSum(double, double)}\n      * function. This data was generated with the following", "timestamp": 1353959152, "metainfo": ""}