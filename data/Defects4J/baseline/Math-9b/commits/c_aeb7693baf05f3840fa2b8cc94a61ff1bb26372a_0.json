{"sha": "aeb7693baf05f3840fa2b8cc94a61ff1bb26372a", "log": "fixed a block width computation error  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/DenseRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/DenseRealMatrix.java\n                 final int      outIndex = iBlock * out.blockColumns + jBlock;\n                 final double[] outBlock = out.blocks[outIndex];\n                 final int      index    = pBlock * blockColumns + qBlock;\n-                final int      width    = blockWidth(index);\n+                final int      width    = blockWidth(qBlock);\n \n                 final int heightExcess = iHeight + rowsShift - BLOCK_SIZE;\n                 final int widthExcess  = jWidth + columnsShift - BLOCK_SIZE;\n                     // the submatrix block spans on two blocks rows from the original matrix\n                     if (widthExcess > 0) {\n                         // the submatrix block spans on two blocks columns from the original matrix\n-                        final int width2 = blockWidth(index + 1);\n+                        final int width2 = blockWidth(qBlock + 1);\n                         copyBlockPart(blocks[index], width,\n                                       rowsShift, BLOCK_SIZE,\n                                       columnsShift, BLOCK_SIZE,\n                     // the submatrix block spans on one block row from the original matrix\n                     if (widthExcess > 0) {\n                         // the submatrix block spans on two blocks columns from the original matrix\n-                        final int width2 = blockWidth(index + 1);\n+                        final int width2 = blockWidth(qBlock + 1);\n                         copyBlockPart(blocks[index], width,\n                                       rowsShift, iHeight + rowsShift,\n                                       columnsShift, BLOCK_SIZE,", "timestamp": 1231085674, "metainfo": ""}