{"sha": "12643c4a91cd155f1230591936e430064d152903", "log": "Fixed error in TTestImpl.homoscedasticTtest. Implementation was incorrectly using heteroscedastic t statistic. Also improved sensitivity of test cases. BZ #34677 Reported by: Gilles Gaillard   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n     protected double homoscedasticTTest(double m1, double m2, double v1,\n             double v2, double n1, double n2)\n     throws MathException {\n-        double t = Math.abs(t(m1, m2, v1, v2, n1, n2));\n+        double t = Math.abs(homoscedasticT(m1, m2, v1, v2, n1, n2));\n         double degreesOfFreedom = 0;\n             degreesOfFreedom = (double) (n1 + n2 - 2);\n         TDistribution tDistribution =\n--- a/src/test/org/apache/commons/math/stat/inference/TTestTest.java\n+++ b/src/test/org/apache/commons/math/stat/inference/TTestTest.java\n /*\n- * Copyright 2004 The Apache Software Foundation.\n+ * Copyright 2004-2005 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n             sampleStats.addValue(observed[i]);\n         }\n \n-        assertEquals(\"t statistic\", -2.82, testStatistic.t(mu, observed), 10E-3);\n-        assertEquals(\"t statistic\", -2.82, testStatistic.t(mu, sampleStats), 10E-3);\n+        // Target comparison values computed using R version 1.8.1 (Linux version)\n+        assertEquals(\"t statistic\",  -2.81976445346,\n+                testStatistic.t(mu, observed), 10E-10);\n+        assertEquals(\"t statistic\",  -2.81976445346,\n+                testStatistic.t(mu, sampleStats), 10E-10);\n+        assertEquals(\"p value\", 0.0136390585873,\n+                testStatistic.tTest(mu, observed), 10E-10);\n+        assertEquals(\"p value\", 0.0136390585873,\n+                testStatistic.tTest(mu, sampleStats), 10E-10);\n \n         try {\n             testStatistic.t(mu, nullObserved);\n         for (int i = 0; i < oneSidedP.length; i++) {\n             oneSidedPStats.addValue(oneSidedP[i]);\n         }\n-        assertEquals(\"one sample t stat\", 3.86, testStatistic.t(0d, oneSidedP), 0.01);\n-        assertEquals(\"one sample t stat\", 3.86, testStatistic.t(0d, oneSidedPStats), 0.01);\n-        assertEquals(\"one sample p value\", 0.00052, testStatistic.tTest(0d, oneSidedP) / 2d, 10E-5);\n-        assertEquals(\"one sample p value\", 0.00052, testStatistic.tTest(0d, oneSidedPStats) / 2d, 10E-5);\n+        // Target comparison values computed using R version 1.8.1 (Linux version)\n+        assertEquals(\"one sample t stat\", 3.86485535541, \n+                testStatistic.t(0d, oneSidedP), 10E-10);\n+        assertEquals(\"one sample t stat\", 3.86485535541, \n+                testStatistic.t(0d, oneSidedPStats),1E-10);\n+        assertEquals(\"one sample p value\", 0.000521637019637,\n+                testStatistic.tTest(0d, oneSidedP) / 2d, 10E-10);\n+        assertEquals(\"one sample p value\", 0.000521637019637,\n+                testStatistic.tTest(0d, oneSidedPStats) / 2d, 10E-5);\n         assertTrue(\"one sample t-test reject\", testStatistic.tTest(0d, oneSidedP, 0.01));\n         assertTrue(\"one sample t-test reject\", testStatistic.tTest(0d, oneSidedPStats, 0.01));\n         assertTrue(\"one sample t-test accept\", !testStatistic.tTest(0d, oneSidedP, 0.0001));\n         }\n          \n         // Target comparison values computed using R version 1.8.1 (Linux version)\n-        assertEquals(\"two sample heteroscedastic t stat\", 1.603717, \n-                testStatistic.t(sample1, sample2), 1E-6);\n-        assertEquals(\"two sample heteroscedastic t stat\", 1.603717, \n-                testStatistic.t(sampleStats1, sampleStats2), 1E-6);\n-        assertEquals(\"two sample heteroscedastic p value\", 0.1288394, \n-                testStatistic.tTest(sample1, sample2), 1E-7);\n-        assertEquals(\"two sample heteroscedastic p value\", 0.1288394, \n-                testStatistic.tTest(sampleStats1, sampleStats2), 1E-7);     \n+        assertEquals(\"two sample heteroscedastic t stat\", 1.60371728768, \n+                testStatistic.t(sample1, sample2), 1E-10);\n+        assertEquals(\"two sample heteroscedastic t stat\", 1.60371728768, \n+                testStatistic.t(sampleStats1, sampleStats2), 1E-10);\n+        assertEquals(\"two sample heteroscedastic p value\", 0.128839369622, \n+                testStatistic.tTest(sample1, sample2), 1E-10);\n+        assertEquals(\"two sample heteroscedastic p value\", 0.128839369622, \n+                testStatistic.tTest(sampleStats1, sampleStats2), 1E-10);     \n         assertTrue(\"two sample heteroscedastic t-test reject\", \n                 testStatistic.tTest(sample1, sample2, 0.2));\n         assertTrue(\"two sample heteroscedastic t-test reject\", \n         }\n     }\n     public void testTwoSampleTHomoscedastic() throws Exception {\n-        double[] sample1 ={2, 4, 6, 8, 10};\n+        double[] sample1 ={2, 4, 6, 8, 10, 97};\n         double[] sample2 = {4, 6, 8, 10, 16};\n         SummaryStatistics sampleStats1 = SummaryStatistics.newInstance();  \n         for (int i = 0; i < sample1.length; i++) {\n         }\n         \n         // Target comparison values computed using R version 1.8.1 (Linux version)\n-       assertEquals(\"two sample homoscedastic t stat\", -1.120897, \n-              testStatistic.homoscedasticT(sample1, sample2), 10E-6);\n-        assertEquals(\"two sample homoscedastic p value\", 0.2948490, \n-                testStatistic.homoscedasticTTest(sampleStats1, sampleStats2), 1E-6);     \n+        assertEquals(\"two sample homoscedastic t stat\", 0.73096310086, \n+              testStatistic.homoscedasticT(sample1, sample2), 10E-11);\n+        assertEquals(\"two sample homoscedastic p value\", 0.4833963785, \n+                testStatistic.homoscedasticTTest(sampleStats1, sampleStats2), 1E-10);     \n         assertTrue(\"two sample homoscedastic t-test reject\", \n-                testStatistic.homoscedasticTTest(sample1, sample2, 0.3));\n+                testStatistic.homoscedasticTTest(sample1, sample2, 0.49));\n         assertTrue(\"two sample homoscedastic t-test accept\", \n-                !testStatistic.homoscedasticTTest(sample1, sample2, 0.2));\n+                !testStatistic.homoscedasticTTest(sample1, sample2, 0.48));\n     }\n     \n     public void testSmallSamples() throws Exception {\n         double[] sample2 = {4d, 5d};        \n         \n         // Target values computed using R, version 1.8.1 (linux version)\n-        assertEquals(-2.2361, testStatistic.t(sample1, sample2), 1E-4);\n-        assertEquals(0.1987, testStatistic.tTest(sample1, sample2), 1E-4);\n+        assertEquals(-2.2360679775, testStatistic.t(sample1, sample2),\n+                1E-10);\n+        assertEquals(0.198727388935, testStatistic.tTest(sample1, sample2),\n+                1E-10);\n     }\n     \n     public void testPaired() throws Exception {", "timestamp": 1115010889, "metainfo": ""}