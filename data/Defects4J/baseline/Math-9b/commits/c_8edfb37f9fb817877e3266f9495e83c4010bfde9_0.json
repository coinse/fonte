{"sha": "8edfb37f9fb817877e3266f9495e83c4010bfde9", "log": "Modified addValue(Object) to convert Integers to Longs, completing (hopefully ;-) fix of problem with integral type conversions reported to commons-dev by Jon Langlois.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n  * The values are ordered using the default (natural order), unless a  \n  * <code>Comparator</code> is supplied in the constructor.\n  *\n- * @version $Revision: 1.28 $ $Date: 2004/09/19 22:47:27 $\n+ * @version $Revision: 1.29 $ $Date: 2004/09/21 03:02:34 $\n  */\n public class Frequency implements Serializable {\n     \n      * @throws IllegalArgumentException if <code>v</code> is not comparable.\n      */\n     public void addValue(Object v) {\n+        Object obj = v;\n+        if (v instanceof Integer) {\n+           obj = new Long(((Integer) v).longValue());\n+        }\n         try {\n-            Long count = (Long) freqTable.get(v);\n+            Long count = (Long) freqTable.get(obj);\n             if (count == null) {\n-                freqTable.put(v, new Long(1));\n+                freqTable.put(obj, new Long(1));\n             } else {\n-                freqTable.put(v, new Long(count.longValue() + 1));\n+                freqTable.put(obj, new Long(count.longValue() + 1));\n             }\n         } catch (ClassCastException ex) {   \n             //TreeMap will throw ClassCastException if v is not comparable", "timestamp": 1095735754, "metainfo": ""}