{"sha": "95d9854a37e740655c86b673c40a0e326562a438", "log": "use direct array access where possible  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/AbstractRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/AbstractRealMatrix.java\n     /** {@inheritDoc} */\n     public RealVector operate(final RealVector v)\n         throws IllegalArgumentException {\n-\n-        final int nRows = getRowDimension();\n-        final int nCols = getColumnDimension();\n-        if (v.getDimension() != nCols) {\n-            throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n-                                                                      \" got {0} but expected {1}\",\n-                                                                      new Object[] {\n-                                                                          v.getDimension(), nCols\n-                                                                      });\n-        }\n-\n-        final double[] out = new double[nRows];\n-        for (int row = 0; row < nRows; ++row) {\n-            double sum = 0;\n-            for (int i = 0; i < nCols; ++i) {\n-                sum += getEntry(row, i) * v.getEntry(i);\n-            }\n-            out[row] = sum;\n-        }\n-\n-        return new RealVectorImpl(out, false);\n-\n+        try {\n+            return new RealVectorImpl(operate(((RealVectorImpl) v).getDataRef()), false);\n+        } catch (ClassCastException cce) {\n+            final int nRows = getRowDimension();\n+            final int nCols = getColumnDimension();\n+            if (v.getDimension() != nCols) {\n+                throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n+                                                                          \" got {0} but expected {1}\",\n+                                                                          new Object[] {\n+                                                                              v.getDimension(), nCols\n+                                                                          });\n+            }\n+\n+            final double[] out = new double[nRows];\n+            for (int row = 0; row < nRows; ++row) {\n+                double sum = 0;\n+                for (int i = 0; i < nCols; ++i) {\n+                    sum += getEntry(row, i) * v.getEntry(i);\n+                }\n+                out[row] = sum;\n+            }\n+\n+            return new RealVectorImpl(out, false);\n+        }\n     }\n \n     /** {@inheritDoc} */\n     /** {@inheritDoc} */\n     public RealVector preMultiply(final RealVector v)\n         throws IllegalArgumentException {\n-\n-        final int nRows = getRowDimension();\n-        final int nCols = getColumnDimension();\n-        if (v.getDimension() != nRows) {\n-            throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n-                                                                      \" got {0} but expected {1}\",\n-                                                                      new Object[] {\n-                                                                          v.getDimension(), nRows\n-                                                                      });\n-        }\n-\n-        final double[] out = new double[nCols];\n-        for (int col = 0; col < nCols; ++col) {\n-            double sum = 0;\n-            for (int i = 0; i < nRows; ++i) {\n-                sum += getEntry(i, col) * v.getEntry(i);\n-            }\n-            out[col] = sum;\n-        }\n-\n-        return new RealVectorImpl(out);\n-\n+        try {\n+            return new RealVectorImpl(preMultiply(((RealVectorImpl) v).getDataRef()), false);\n+        } catch (ClassCastException cce) {\n+\n+            final int nRows = getRowDimension();\n+            final int nCols = getColumnDimension();\n+            if (v.getDimension() != nRows) {\n+                throw MathRuntimeException.createIllegalArgumentException(\"vector length mismatch:\" +\n+                                                                          \" got {0} but expected {1}\",\n+                                                                          new Object[] {\n+                                                                              v.getDimension(), nRows\n+                                                                          });\n+            }\n+\n+            final double[] out = new double[nCols];\n+            for (int col = 0; col < nCols; ++col) {\n+                double sum = 0;\n+                for (int i = 0; i < nRows; ++i) {\n+                    sum += getEntry(i, col) * v.getEntry(i);\n+                }\n+                out[col] = sum;\n+            }\n+\n+            return new RealVectorImpl(out);\n+\n+        }\n     }\n \n     /** {@inheritDoc} */", "timestamp": 1230074731, "metainfo": ""}