{"sha": "efe535568ab2138f45b21836680f308a62564f8a", "log": "improved max errors computations: previously, NaN values induces the error update to be skipped, thus leading to artificially good results  ", "commit": "\n--- a/src/test/org/apache/commons/math/ode/nonstiff/TestProblemHandler.java\n+++ b/src/test/org/apache/commons/math/ode/nonstiff/TestProblemHandler.java\n       double[] theoreticalY  = problem.computeTheoreticalState(cT);\n       for (int i = 0; i < interpolatedY.length; ++i) {\n         double error = Math.abs(interpolatedY[i] - theoreticalY[i]);\n-        if (error > lastError) {\n-          lastError = error;\n-        }\n+        lastError = Math.max(error, lastError);\n       }\n       lastTime = cT;\n     }\n       // update the errors\n       for (int i = 0; i < interpolatedY.length; ++i) {\n         double error = errorScale[i] * Math.abs(interpolatedY[i] - theoreticalY[i]);\n-        if (error > maxValueError) {\n-          maxValueError = error;\n-        }\n+        maxValueError = Math.max(error, maxValueError);\n       }\n-\n     }\n   }\n ", "timestamp": 1244401938, "metainfo": ""}