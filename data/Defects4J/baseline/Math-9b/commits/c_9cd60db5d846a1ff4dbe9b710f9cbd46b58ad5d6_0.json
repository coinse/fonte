{"sha": "9cd60db5d846a1ff4dbe9b710f9cbd46b58ad5d6", "log": "MATH-623 Slightly more efficient implementation of some methods (due to Arne Pl\u00f6se).   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java\n     /** {@inheritDoc} */\n     @Override\n     public RealVector subtract(double[] v) {\n-        checkVectorDimensions(v.length);\n-        double[] out = data.clone();\n-        for (int i = 0; i < data.length; i++) {\n-            out[i] -= v[i];\n-        }\n-        return new ArrayRealVector(out, false);\n+        final int dim = v.length;\n+        checkVectorDimensions(dim);\n+        ArrayRealVector result = new ArrayRealVector(dim);\n+        double[] resultData = result.data;\n+        for (int i = 0; i < dim; i++) {\n+            resultData[i] = data[i] - v[i];\n+        }\n+        return result;\n     }\n \n     /**\n     /** {@inheritDoc} */\n     @Override\n     public RealVector ebeMultiply(double[] v) {\n-        checkVectorDimensions(v.length);\n-        double[] out = data.clone();\n-        for (int i = 0; i < data.length; i++) {\n-            out[i] *= v[i];\n-        }\n-        return new ArrayRealVector(out, false);\n+        final int dim = v.length;\n+        checkVectorDimensions(dim);\n+        ArrayRealVector result = new ArrayRealVector(dim);\n+        double[] resultData = result.data;\n+        for (int i = 0; i < dim; i++) {\n+            resultData[i] = data[i] * v[i];\n+        }\n+        return result;\n     }\n \n     /**\n     /** {@inheritDoc} */\n     @Override\n     public RealVector ebeDivide(double[] v) {\n-        checkVectorDimensions(v.length);\n-        double[] out = data.clone();\n-        for (int i = 0; i < data.length; i++) {\n-                out[i] /= v[i];\n-        }\n-        return new ArrayRealVector(out, false);\n+        final int dim = v.length;\n+        checkVectorDimensions(dim);\n+        ArrayRealVector result = new ArrayRealVector(dim);\n+        double[] resultData = result.data;\n+        for (int i = 0; i < dim; i++) {\n+            resultData[i] = data[i] / v[i];\n+        }\n+        return result;\n     }\n \n     /**", "timestamp": 1311290272, "metainfo": ""}