{"sha": "287bc0e5ae3dd953eef8893177d81324b9aa34ad", "log": "Add header line Allow run count to be specified as system property Use nanoTime for more accurate measurement Scale time by number of runs  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n  */\n package org.apache.commons.math.util;\n \n+import org.junit.BeforeClass;\n import org.junit.Test;\n-import org.junit.Ignore;\n \n /**\n  * Performance tests for FastMath.\n- * Not enabled by default, as the class does not have Test in its name.\n+ * Not enabled by default, as the class does not end in Test.\n  * \n- * Invoke by running {@code mvn test -Dtest=FastMathTestPerformance}\n+ * Invoke by running<br/>\n+ * {@code mvn test -Dtest=FastMathTestPerformance}<br/>\n+ * or by running<br/>\n+ * {@code mvn test -Dtest=FastMathTestPerformance -DargLine=\"-DtestRuns=1234 -server\"}<br/>\n  */\n public class FastMathTestPerformance {\n-    private static final int RUNS = 10000000;\n-\n+    private static final int RUNS = Integer.parseInt(System.getProperty(\"testRuns\",\"10000000\"));\n+\n+    @BeforeClass\n+    public static void header() {\n+        System.out.println(String.format(\"%-5s %13s %13s %13s Runs=%d %s %s %s\",\n+                \"Name\",\"StrictMath\",\"FastMath\",\"Math\",RUNS,\n+                System.getProperty(\"java.vm.version\"),\n+                System.getProperty(\"java.vm.vendor\"),\n+                System.getProperty(\"java.vm.name\")));\n+    }\n     private void print(String funcName) {\n-        System.out.print(funcName + \" \");\n+        System.out.print(String.format(\"%-5s \",funcName));\n     }\n     private void print(long time, long unitTime) {\n         final double ratio = time / (double) unitTime;\n-        System.out.print(time + \" \" + ratio + \" \");\n+        System.out.print(String.format(\"%6d %6.2f \", time/RUNS, ratio));\n     }\n     private void println(long time, long unitTime) {\n         print(time, unitTime);\n     public void testLog() {\n         print(\"log\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.log(Math.PI + i/* 1.0 + i/1e9 */);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testPow() {\n         print(\"pow\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.pow(Math.PI + i / 1e6, i / 1e6);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.pow(Math.PI + i / 1e6, i / 1e6);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.pow(Math.PI + i / 1e6, i / 1e6);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testExp() {\n         print(\"exp\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.exp(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.exp(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.exp(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testSin() {\n         print(\"sin\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.sin(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.sin(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.sin(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testAsin() {\n         print(\"asin\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.asin(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.asin(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.asin(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testCos() {\n         print(\"cos\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.cos(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.cos(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.cos(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n             \n     public void testAcos() {\n         print(\"acos\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.acos(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.acos(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.acos(i / 10000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testTan() {\n         print(\"tan\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.tan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.tan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.tan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testAtan() {\n         print(\"atan\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.atan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.atan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.atan(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n      \n     public void testCbrt() {\n         print(\"cbrt\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.cbrt(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.cbrt(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.cbrt(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testCosh() {\n         print(\"cosh\");        \n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.cosh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.cosh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.cosh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testSinh() {\n         print(\"sinh\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.sinh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.sinh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.sinh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n \n     public void testTanh() {\n         print(\"tanh\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.tanh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.tanh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.tanh(i / 1000000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n      \n     public void testExpm1() {\n         print(\"expm1\");\n         double x = 0;\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += StrictMath.expm1(-i / 100000.0);\n-        time = System.currentTimeMillis() - time;\n-        long unitTime = time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        long unitTime = time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += FastMath.expm1(-i / 100000.0);\n-        time = System.currentTimeMillis() - time;\n-        print(time, unitTime);\n-\n-        x = 0;\n-        time = System.currentTimeMillis();\n+        time = System.nanoTime() - time;\n+        print(time, unitTime);\n+\n+        x = 0;\n+        time = System.nanoTime();\n         for (int i = 0; i < RUNS; i++)\n             x += Math.expm1(-i / 100000.0);\n-        time = System.currentTimeMillis() - time;\n+        time = System.nanoTime() - time;\n         println(time, unitTime);\n     }\n }", "timestamp": 1295912362, "metainfo": ""}