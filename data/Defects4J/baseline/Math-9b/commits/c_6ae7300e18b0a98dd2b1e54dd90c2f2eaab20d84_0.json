{"sha": "6ae7300e18b0a98dd2b1e54dd90c2f2eaab20d84", "log": "Javadoc.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n     /** Serializable version identifier */\n     private static final long serialVersionUID = -626730818244969716L;\n \n-    /** Used when generating Exponential samples\n-     * [1] writes:\n-     * One table containing the constants\n+    /** \n+     * Used when generating Exponential samples.\n+     * Table containing the constants\n      * q_i = sum_{j=1}^i (ln 2)^j/j! = ln 2 + (ln 2)^2/2 + ... + (ln 2)^i/i!\n      * until the largest representable fraction below 1 is exceeded.\n      *\n      * Note that\n      * 1 = 2 - 1 = exp(ln 2) - 1 = sum_{n=1}^infty (ln 2)^n / n!\n      * thus q_i -> 1 as i -> infty,\n-     * so the higher 1, the closer to one we get (the series is not alternating).\n+     * so the higher i, the closer to one we get (the series is not alternating).\n      *\n      * By trying, n = 16 in Java is enough to reach 1.0.\n      */", "timestamp": 1324420699, "metainfo": ""}