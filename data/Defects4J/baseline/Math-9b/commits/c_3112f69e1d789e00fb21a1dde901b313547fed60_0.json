{"sha": "3112f69e1d789e00fb21a1dde901b313547fed60", "log": "removed commented out code  ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/minimization/UnivariateRealMinimizer.java\n+++ b/src/java/org/apache/commons/math/analysis/minimization/UnivariateRealMinimizer.java\n  * @since 2.0\n  */\n public interface UnivariateRealMinimizer extends ConvergingAlgorithm {\n-\n-//    /**\n-//     * Set the function value accuracy.\n-//     * <p>\n-//     * This is used to determine when an evaluated function value or some other\n-//     * value which is used as divisor is zero.</p>\n-//     * <p>\n-//     * This is a safety guard and it shouldn't be necessary to change this in\n-//     * general.</p>\n-//     * \n-//     * @param accuracy the accuracy.\n-//     * @throws IllegalArgumentException if the accuracy can't be achieved by\n-//     * the minimizer or is otherwise deemed unreasonable. \n-//     */\n-//    void setFunctionValueAccuracy(double accuracy);\n-//\n-//    /**\n-//     * Get the actual function value accuracy.\n-//     * @return the accuracy\n-//     */\n-//    double getFunctionValueAccuracy();\n-//\n-//    /**\n-//     * Reset the actual function accuracy to the default.\n-//     * The default value is provided by the minimizer implementation.\n-//     */\n-//    void resetFunctionValueAccuracy();\n \n     /**\n      * Find a minimum in the given interval.", "timestamp": 1232312982, "metainfo": ""}