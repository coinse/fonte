{"sha": "26c81be3c7143734b26b2cb8fdec32896d81effe", "log": "javadoc typos  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java\n /**\n  * Implementation of\n  * {@link org.apache.commons.math.stat.descriptive.DescriptiveStatistics} that\n- * is safe to use in a mulithreaded environment.  Multiple threads can safely\n+ * is safe to use in a multithreaded environment.  Multiple threads can safely\n  * operate on a single instance without causing runtime exceptions due to race\n  * conditions.  In effect, this implementation makes modification and access\n- * methods atomic operations for a signle instance.  That is to say, as one\n+ * methods atomic operations for a single instance.  That is to say, as one\n  * thread is computing a statistic from the instance, no other thread can modify\n  * the instance nor compute another statistic. \n  *", "timestamp": 1199450781, "metainfo": ""}