{"sha": "75f5c92aeb47e264c196a8c38a495adac89f493c", "log": "Fixed a wrong check for basic variables JIRA: MATH-273  ", "commit": "\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n     private Integer getBasicRow(final int col) {\n         Integer row = null;\n         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-                if (row == null) {\n-                    row = i;\n-                } else {\n-                    return null;\n-                }\n+            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {\n+                row = i;\n+            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+                return null;\n             }\n         }\n         return row;\n--- a/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n+++ b/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java\n         assertEquals(57.0, solution.getValue(), 0.0);\n     }\n \n+    @Test\n+    public void testSingleVariableAndConstraint() throws OptimizationException {\n+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);\n+        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n+        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));\n+\n+        SimplexSolver solver = new SimplexSolver();\n+        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);\n+        assertEquals(10.0, solution.getPoint()[0], 0.0);\n+        assertEquals(30.0, solution.getValue(), 0.0);\n+    }\n+    \n     /**\n      * With no artificial variables needed (no equals and no greater than\n      * constraints) we can go straight to Phase 2.", "timestamp": 1244019968, "metainfo": ""}