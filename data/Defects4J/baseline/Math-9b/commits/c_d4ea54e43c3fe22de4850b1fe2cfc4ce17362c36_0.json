{"sha": "d4ea54e43c3fe22de4850b1fe2cfc4ce17362c36", "log": "MATH-566 Removed \"MathThrowable\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/MathException.java\n+++ b/src/main/java/org/apache/commons/math/MathException.java\n import java.util.Locale;\n import java.util.Set;\n \n-import org.apache.commons.math.exception.MathThrowable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n *\n * @version $Id$\n */\n-public class MathException extends Exception implements MathThrowable {\n+public class MathException extends Exception {\n \n     /** Serializable version identifier. */\n     private static final long serialVersionUID = 7428019509644517071L;\n       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Sets a message.\n+     *\n+     * @param pat Message pattern.\n+     * @param args Values for replacing the placeholders in the message\n+     * pattern.\n+     */\n     public void addMessage(Localizable pat,\n                            Object ... args) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Sets the context (key, value) pair.\n+     * Keys are assumed to be unique within an instance. If the same key is\n+     * assigned a new value, the previous one will be lost.\n+     *\n+     * @param key Context key (not null).\n+     * @param value Context value.\n+     */\n     public void setContext(String key, Object value) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the value associated to the given context key.\n+     *\n+     * @param key Context key.\n+     * @return the context value or {@code null} if the key does not exist.\n+     */\n     public Object getContext(String key) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets all the keys stored in the exception\n+     *\n+     * @return the set of keys.\n+     */\n     public Set<String> getContextKeys() {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n         return \"\";\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the message in a conventional US locale.\n+     *\n+     * @return localized message\n+     */\n     @Override\n     public String getMessage() {\n         return getMessage(Locale.US);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the message in the system default locale.\n+     *\n+     * @return localized message\n+     */\n     @Override\n     public String getLocalizedMessage() {\n         return getMessage(Locale.getDefault());\n--- a/src/main/java/org/apache/commons/math/MathRuntimeException.java\n+++ b/src/main/java/org/apache/commons/math/MathRuntimeException.java\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n-import org.apache.commons.math.exception.MathThrowable;\n import org.apache.commons.math.exception.util.Localizable;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n \n * @version $Id$\n * @since 2.0\n */\n-public class MathRuntimeException extends RuntimeException implements MathThrowable {\n+public class MathRuntimeException extends RuntimeException {\n \n     /** Serializable version identifier. */\n     private static final long serialVersionUID = 9058794795027570002L;\n         this.arguments = (arguments == null) ? new Object[0] : arguments.clone();\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Sets a message.\n+     *\n+     * @param pat Message pattern.\n+     * @param args Values for replacing the placeholders in the message\n+     * pattern.\n+     */\n     public void addMessage(Localizable pat,\n                            Object ... args) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Sets the context (key, value) pair.\n+     * Keys are assumed to be unique within an instance. If the same key is\n+     * assigned a new value, the previous one will be lost.\n+     *\n+     * @param key Context key (not null).\n+     * @param value Context value.\n+     */\n     public void setContext(String key, Object value) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the value associated to the given context key.\n+     *\n+     * @param key Context key.\n+     * @return the context value or {@code null} if the key does not exist.\n+     */\n     public Object getContext(String key) {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets all the keys stored in the exception\n+     *\n+     * @return the set of keys.\n+     */\n     public Set<String> getContextKeys() {\n         throw new UnsupportedOperationException(DEPRECATION_MESSAGE);\n     }\n         return \"\";\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the message in a conventional US locale.\n+     *\n+     * @return localized message\n+     */\n     @Override\n     public String getMessage() {\n         return getMessage(Locale.US);\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * Gets the message in the system default locale.\n+     *\n+     * @return localized message\n+     */\n     @Override\n     public String getLocalizedMessage() {\n         return getMessage(Locale.getDefault());", "timestamp": 1315483696, "metainfo": ""}