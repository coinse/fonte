{"sha": "e999ff71fdffdb1273bc8063450ce31091f5aa60", "log": "Fixed bugs in AbstractRandomGenerator nextInt() and nextLong() default implementations.  Prior to the fix for this issue, these methods generated only positive values.  JIRA: MATH-640  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java\n+++ b/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java\n      *  value from this random number generator's sequence\n      */\n     public int nextInt() {\n-        return (int) (nextDouble() * Integer.MAX_VALUE);\n+        return (int) ((2d * nextDouble() - 1d) * Integer.MAX_VALUE);\n     }\n \n     /**\n      *value from this random number generator's sequence\n      */\n     public long nextLong() {\n-        return (long) (nextDouble() * Long.MAX_VALUE);\n+        return (long) ((2d * nextDouble() - 1d) * Long.MAX_VALUE);\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n+++ b/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java\n  */\n \n public class AbstractRandomGeneratorTest extends RandomGeneratorAbstractTest {\n-    \n-    @Override\n-    public void testNextInt2() {\n-        // Currently broken.  Remove this stub when MATH-640 is resolved\n-    }\n-    \n-    @Override\n-    public void testNextLong2() {\n-        // Currently broken.  Remove this stub when MATH-640 is resolved\n-    }\n \n     public AbstractRandomGeneratorTest() {\n         super();\n     \n     protected RandomGenerator makeGenerator() {\n         RandomGenerator generator = new TestRandomGenerator();\n-        generator.setSeed(1000);\n+        generator.setSeed(1001);\n         return generator;\n     }\n     ", "timestamp": 1312344983, "metainfo": ""}