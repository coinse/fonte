{"sha": "d4702397ec34c308d4acf2c5ed843604012cb42a", "log": "MATH-621 Matrix/vector operators.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java\n import org.apache.commons.math.optimization.MultivariateRealOptimizer;\n import org.apache.commons.math.optimization.RealPointValuePair;\n import org.apache.commons.math.util.MathUtils;\n+import org.apache.commons.math.linear.RealVector;\n import org.apache.commons.math.linear.ArrayRealVector;\n import org.apache.commons.math.linear.Array2DRowRealMatrix;\n \n                     ih++;\n                 }\n             }\n+            final RealVector tmp = xpt.operate(s).ebeMultiply(pq);\n             for (int k = 0; k < npt; k++) {\n                 if (pq.getEntry(k) != ZERO) {\n-                    temp = ZERO;\n-                    for (int j = 0; j < n; j++) {\n-                        temp += xpt.getEntry(k, j) * s.getEntry(j);\n-                    }\n-                    temp *= pq.getEntry(k);\n                     for (int i = 0; i < n; i++) {\n-                        hs.setEntry(i, hs.getEntry(i) + temp * xpt.getEntry(k, i));\n-                    }\n+                        hs.setEntry(i, hs.getEntry(i) + tmp.getEntry(k) * xpt.getEntry(k, i));\n+                    } \n                 }\n             }\n             if (crvmin != ZERO) {", "timestamp": 1313619103, "metainfo": ""}