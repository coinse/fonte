{"sha": "40c365e5cfaf905286ef478ab1362afbf4c8b53b", "log": "Replaced size adjustment of all steps of fixed steps Runge-Kutta integrators by a truncation of the last step only. JIRA: MATH-214  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/AbstractIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/AbstractIntegrator.java\n \n import org.apache.commons.math.ode.events.CombinedEventsManager;\n import org.apache.commons.math.ode.events.EventHandler;\n+import org.apache.commons.math.ode.events.EventState;\n import org.apache.commons.math.ode.sampling.StepHandler;\n \n /**\n \n     }\n \n+    /** Add an event handler for end time checking.\n+     * <p>This method can be used to simplify handling of integration end time.\n+     * It leverages the nominal stop condition with the exceptional stop\n+     * conditions.</p>\n+     * @param endTime desired end time\n+     * @param manager manager containing the user-defined handlers\n+     * @return a new manager containing all the user-defined handlers plus a\n+     * dedicated manager triggering a stop event at entTime\n+     */\n+    protected CombinedEventsManager addEndTimeChecker(final double endTime,\n+                                                      final CombinedEventsManager manager) {\n+        CombinedEventsManager newManager = new CombinedEventsManager();\n+        for (final EventState state : manager.getEventsStates()) {\n+            newManager.addEventHandler(state.getEventHandler(),\n+                                       state.getMaxCheckInterval(),\n+                                       state.getConvergence(),\n+                                       state.getMaxIterationCount());\n+        }\n+        newManager.addEventHandler(new EndTimeChecker(endTime),\n+                                   Double.POSITIVE_INFINITY, Math.ulp(endTime), 10);\n+        return newManager;\n+    }\n+\n+    /** Specialized event handler to stop integration. */\n+    private static class EndTimeChecker implements EventHandler {\n+\n+        /** Serializable version identifier. */\n+        private static final long serialVersionUID = -5211782540446301964L;\n+\n+        /** DEsiredt end time. */\n+        private final double endTime;\n+\n+        /** Build an instance.\n+         * @param endTime desired time\n+         */\n+        public EndTimeChecker(final double endTime) {\n+            this.endTime = endTime;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public int eventOccurred(double t, double[] y) {\n+            return STOP;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public double g(double t, double[] y) {\n+            return t - endTime;\n+        }\n+\n+        /** {@inheritDoc} */\n+        public void resetState(double t, double[] y) {\n+        }\n+        \n+    }\n+\n }", "timestamp": 1215693750, "metainfo": ""}