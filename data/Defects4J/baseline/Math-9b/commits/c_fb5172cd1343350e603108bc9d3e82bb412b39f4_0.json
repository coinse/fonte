{"sha": "fb5172cd1343350e603108bc9d3e82bb412b39f4", "log": "MATH-440 \"MathUserException\": Using \"Localizable\" argument in constructor.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java\n+++ b/src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java\n      * Get the message in a specified locale.\n      *\n      * @param locale Locale in which the message should be translated.\n-     *\n      * @return the localized message.\n      */\n     public String getMessage(final Locale locale) {\n--- a/src/main/java/org/apache/commons/math/exception/MathUserException.java\n+++ b/src/main/java/org/apache/commons/math/exception/MathUserException.java\n  */\n package org.apache.commons.math.exception;\n \n+import java.util.Locale;\n+\n+import org.apache.commons.math.exception.util.ArgUtils;\n+import org.apache.commons.math.exception.util.MessageFactory;\n+import org.apache.commons.math.exception.util.Localizable;\n+import org.apache.commons.math.exception.util.LocalizedFormats;\n+\n /**\n  * This class is intended as a sort of communication channel between\n  * layers of <em>user</em> code separated from each other by calls to\n  * @version $Revision$ $Date$\n  */\n public class MathUserException extends RuntimeException {\n+    /** Serializable version Id. */\n+    private static final long serialVersionUID = -6024911025449780478L;\n+    /**\n+     * Pattern used to build the message (problem description).\n+     */\n+    private final Localizable pattern;\n+    /**\n+     * Arguments used to build the message.\n+     */\n+    private final Object[] arguments;\n+\n     /**\n      * Default constructor.\n      */\n-    public MathUserException() {}\n-\n-    /**\n-     * @param msg Error message.\n-     */\n-    public MathUserException(String msg) {\n-        super(msg);\n-    }\n-\n-    /**\n-     * @param msg Error message.\n-     * @param cause Cause of the error.\n-     */\n-    public MathUserException(String msg,\n-                             Throwable cause) {\n-        super(msg, cause);\n+    public MathUserException() {\n+        this(null);\n     }\n \n     /**\n      * @param cause Cause of the error.\n+     * @param args Arguments.\n      */\n-    public MathUserException(Throwable cause) {\n-        super(cause);\n+    public MathUserException(Throwable cause,\n+                             Object ... args) {\n+        this(null, cause, args);\n+    }\n+\n+    /**\n+     * @param pattern Message pattern explaining the cause of the error.\n+     * @param cause Cause of the error.\n+     * @param args Arguments.\n+     */\n+    public MathUserException(Localizable pattern,\n+                             Throwable cause,\n+                             Object ... args) {\n+        this.pattern  = pattern;\n+        arguments = ArgUtils.flatten(args);\n+    }\n+\n+    /**\n+     * Get the message in a specified locale.\n+     *\n+     * @param locale Locale in which the message should be translated.\n+     * @return the localized message.\n+     */\n+    public String getMessage(final Locale locale) {\n+        return MessageFactory.buildMessage(locale,\n+                                           pattern,\n+                                           LocalizedFormats.USER_EXCEPTION,\n+                                           arguments);\n+    }\n+\n+   /** {@inheritDoc} */\n+    @Override\n+    public String getMessage() {\n+        return getMessage(Locale.US);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public String getLocalizedMessage() {\n+        return getMessage(Locale.getDefault());\n     }\n }\n--- a/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n+++ b/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n     UNPARSEABLE_REAL_VECTOR(\"unparseable real vector: \\\"{0}\\\"\"),\n     UNSUPPORTED_EXPANSION_MODE(\"unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})\"),\n     UNSUPPORTED_OPERATION(\"unsupported operation\"), /* keep */\n+    USER_EXCEPTION(\"exception generated in user code\"), /* keep */\n     URL_CONTAINS_NO_DATA(\"URL {0} contains no data\"),\n     VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC(\"{0} values have been added before statistic is configured\"),\n     VECTOR_LENGTH_MISMATCH(\"vector length mismatch: got {0} but expected {1}\"),", "timestamp": 1289605262, "metainfo": ""}