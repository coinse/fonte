{"sha": "e44b04396d94e91d35fd44381f7ac5c4f2ff2ee9", "log": "deprecated an old style exception that was forgotten  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java\n+++ b/src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java\n      */\n     protected void checkRowIndex(final int row) {\n         if (row < 0 || row >= getRowDimension()) {\n-            throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\",\n+            throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE,\n                                            row, 0, getRowDimension() - 1);\n         }\n     }\n     protected void checkColumnIndex(final int column)\n         throws MatrixIndexException {\n         if (column < 0 || column >= getColumnDimension()) {\n-            throw new MatrixIndexException(\"column index {0} out of allowed range [{1}, {2}]\",\n+            throw new MatrixIndexException(LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE,\n                                            column, 0, getColumnDimension() - 1);\n         }\n     }\n--- a/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\n     protected void checkIndex(final int index)\n         throws MatrixIndexException {\n         if (index < 0 || index >= getDimension()) {\n-            throw new MatrixIndexException(\n-                  \"index {0} out of allowed range [{1}, {2}]\",\n-                  index, 0, getDimension() - 1);\n+            throw new MatrixIndexException(LocalizedFormats.INDEX_OUT_OF_RANGE,\n+                                           index, 0, getDimension() - 1);\n         }\n     }\n \n--- a/src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java\n     private void checkIndex(final int index)\n         throws MatrixIndexException {\n         if (index < 0 || index >= getDimension()) {\n-            throw new MatrixIndexException(\n-                    \"index {0} out of allowed range [{1}, {2}]\",\n-                    index, 0, getDimension() - 1);\n+            throw new MatrixIndexException(LocalizedFormats.INDEX_OUT_OF_RANGE,\n+                                           index, 0, getDimension() - 1);\n         }\n     }\n \n--- a/src/main/java/org/apache/commons/math/linear/MatrixIndexException.java\n+++ b/src/main/java/org/apache/commons/math/linear/MatrixIndexException.java\n      * Constructs a new instance with specified formatted detail message.\n      * @param pattern format specifier\n      * @param arguments format arguments\n+     * @deprecated as of 2.2 replaced by {@link #MatrixIndexException(Localizable, Object...)}\n      */\n+    @Deprecated\n     public MatrixIndexException(final String pattern, final Object ... arguments) {\n       this(new DummyLocalizable(pattern), arguments);\n     }\n--- a/src/main/java/org/apache/commons/math/linear/MatrixUtils.java\n+++ b/src/main/java/org/apache/commons/math/linear/MatrixUtils.java\n      */\n     public static void checkRowIndex(final AnyMatrix m, final int row) {\n         if (row < 0 || row >= m.getRowDimension()) {\n-            throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\",\n+            throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE,\n                                            row, 0, m.getRowDimension() - 1);\n         }\n     }\n     public static void checkColumnIndex(final AnyMatrix m, final int column)\n         throws MatrixIndexException {\n         if (column < 0 || column >= m.getColumnDimension()) {\n-            throw new MatrixIndexException(\"column index {0} out of allowed range [{1}, {2}]\",\n+            throw new MatrixIndexException(LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE,\n                                            column, 0, m.getColumnDimension() - 1);\n         }\n     }\n--- a/src/main/java/org/apache/commons/math/linear/SparseFieldVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/SparseFieldVector.java\n      */\n     private void checkIndex(final int index) throws MatrixIndexException {\n         if (index < 0 || index >= getDimension()) {\n-            throw new MatrixIndexException(\n-                    \"index {0} out of allowed range [{1}, {2}]\",\n-                    index, 0, getDimension() - 1);\n+            throw new MatrixIndexException(LocalizedFormats.INDEX_OUT_OF_RANGE,\n+                                           index, 0, getDimension() - 1);\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/math/linear/MatrixIndexExceptionTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/MatrixIndexExceptionTest.java\n \n package org.apache.commons.math.linear;\n \n+import org.apache.commons.math.util.LocalizedFormats;\n+\n import junit.framework.TestCase;\n \n /**\n     /**\n      *\n      */\n-    public void testConstructorMessage(){\n-        String msg = \"message\";\n-        MatrixIndexException ex = new MatrixIndexException(msg);\n-        assertEquals(msg, ex.getMessage());\n+    public void testParameter(){\n+        MatrixIndexException ex = new MatrixIndexException(LocalizedFormats.INDEX_OUT_OF_RANGE, 12, 0, 5);\n+        assertEquals(12, ex.getArguments()[0]);\n+        assertEquals(0,  ex.getArguments()[1]);\n+        assertEquals(5,  ex.getArguments()[2]);\n     }\n }", "timestamp": 1280675814, "metainfo": ""}