{"sha": "a08439459a8a559007f51e8540f045200511176f", "log": "Fixed some typos, formatting.   ", "commit": "\n--- a/src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java\n+++ b/src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java\n  * Abstract base class for {@link ContinuousDistribution} tests.\n  * <p>\n  * To create a concrete test class for a continuous distribution implementation,\n- *  implement makeDistribution() to return a distribution instance to use in \n- *  tests and each of the test data generation methods below.  In each case, the\n- *  test points and test values arrays returned represent parallel arrays of \n- *  inputs and expected values for the distribution returned by makeDistribution().\n+ * implement makeDistribution() to return a distribution instance to use in \n+ * tests and each of the test data generation methods below.  In each case, the\n+ * test points and test values arrays returned represent parallel arrays of \n+ * inputs and expected values for the distribution returned by makeDistribution().\n  *  <p>\n- *  makeCumulativeTestPoints() -- arguments used to test cumulative probabilities\n- *  makeCumulativeTestValues() -- expected cumulative probabilites\n- *  makeInverseCumulativeTestPoints() -- arguments used to test inverse cdf evaluation\n- *  makeInverseCumulativeTestValues() -- expected inverse cdf values\n+ * makeCumulativeTestPoints() -- arguments used to test cumulative probabilities\n+ * makeCumulativeTestValues() -- expected cumulative probabilites\n+ * makeInverseCumulativeTestPoints() -- arguments used to test inverse cdf evaluation\n+ * makeInverseCumulativeTestValues() -- expected inverse cdf values\n  * <p>\n- *  To implement additional test cases with different distribution instances and test data,\n- *  use the setXxx methods for the instance data in test cases and call the verifyXxx methods\n- *  to verify results. \n+ * To implement additional test cases with different distribution instances and test data,\n+ * use the setXxx methods for the instance data in test cases and call the verifyXxx methods\n+ * to verify results. \n  * <p>\n- *  Error tolerance can be overriden by implementing getTolerance().\n+ * Error tolerance can be overriden by implementing getTolerance().\n  * \n- * @version $Revision: 1.1 $ $Date: 2004/05/29 22:51:32 $\n+ * @version $Revision: 1.2 $ $Date: 2004/05/30 03:08:00 $\n  */\n public abstract class ContinuousDistributionAbstractTest extends TestCase {\n     \n //-------------------- Private test instance data -------------------------\n-    /** Discrete distribution instance used to perform tests */\n+    /**  Distribution instance used to perform tests */\n     private ContinuousDistribution distribution;\n     \n     /** Tolerance used in comparing expected and returned values */\n     //-------------------------------------------------------------------------\n     \n     /**\n-     * Constructor for DiscreteDistributionAbstractTest.\n+     * Constructor for ContinuousDistributionAbstractTest.\n      * @param name\n      */\n     public ContinuousDistributionAbstractTest(String name) {\n     }\n     \n     /**\n-     * Verifies that inverse cumulative probability density calculations match exptected values\n+     * Verifies that inverse cumulative probability density calculations match expected values\n      * using current test instance data\n      */\n     protected void verifyInverseCumulativeProbabilities() throws Exception {\n     //------------------------ Default test cases -----------------------------\n     \n     /**\n-     * Verifies that cumulative probability density calculations match exptected values\n+     * Verifies that cumulative probability density calculations match expected values\n      * using default test instance data\n      */\n     public void testCumulativeProbabilities() throws Exception {\n     }\n     \n     /**\n-     * Verifies that inverse cumulative probability density calculations match exptected values\n+     * Verifies that inverse cumulative probability density calculations match expected values\n      * using default test instance data\n      */\n     public void testInverseCumulativeProbabilities() throws Exception {", "timestamp": 1085886480, "metainfo": ""}