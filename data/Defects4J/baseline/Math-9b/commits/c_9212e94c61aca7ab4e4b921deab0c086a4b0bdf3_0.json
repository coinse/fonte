{"sha": "9212e94c61aca7ab4e4b921deab0c086a4b0bdf3", "log": "improved test coverage  ", "commit": "\n--- a/src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n+++ b/src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java\n     GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);\n     estimator.estimate(problem);\n     assertEquals(0, estimator.getRMS(problem), 1.0e-10);\n-    assertEquals(2.0, p[0].getEstimate(), 1.0e-10);\n-    assertEquals(1.0, p[1].getEstimate(), 1.0e-10);\n+    EstimatedParameter[] all = problem.getAllParameters();\n+    for (int i = 0; i < all.length; ++i) {\n+        assertEquals(all[i].getName().equals(\"p0\") ? 2.0 : 1.0,\n+                     all[i].getEstimate(), 1.0e-10);\n+    }\n \n   }\n \n--- a/src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n+++ b/src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java\n       circle.addPoint(110.0, -20.0);\n       circle.addPoint( 35.0,  15.0);\n       circle.addPoint( 45.0,  97.0);\n-      checkEstimate(circle, 100.0, 1000, 1.0e-10, 1.0e-10, 1.0e-10, false);\n-      checkEstimate(circle, 1.0e-12, 10, 1.0e-20, 1.0e-20, 1.0e-20, true);\n+      checkEstimate(circle, 0.1, 10, 1.0e-14, 1.0e-16, 1.0e-10, false);\n+      checkEstimate(circle, 0.1, 10, 1.0e-15, 1.0e-17, 1.0e-10, true);\n+      checkEstimate(circle, 0.1,  5, 1.0e-15, 1.0e-16, 1.0e-10, true);\n+      circle.addPoint(300, -300);\n+      checkEstimate(circle, 0.1, 20, 1.0e-18, 1.0e-16, 1.0e-10, true);\n   }\n \n   private void checkEstimate(EstimationProblem problem,\n         estimator.estimate(problem);\n         assertTrue(! shouldFail);\n       } catch (EstimationException ee) {\n-          System.out.println(ee.getClass().getName() + \" \" + ee.getMessage());\n         assertTrue(shouldFail);\n       } catch (Exception e) {\n         fail(\"wrong exception type caught\");", "timestamp": 1194433012, "metainfo": ""}