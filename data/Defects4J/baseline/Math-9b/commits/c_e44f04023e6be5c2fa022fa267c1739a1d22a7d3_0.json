{"sha": "e44f04023e6be5c2fa022fa267c1739a1d22a7d3", "log": "Remove unnecessary casts and unnecessary semi-colons  ", "commit": "\n--- a/src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java\n+++ b/src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java\n         SparseRealMatrix m1 = createSparseMatrix(testData);\n         RealMatrix m2 = m1.copy();\n         assertTrue(m2 instanceof SparseRealMatrix);\n-        assertEquals(((SparseRealMatrix) m2), m1);\n+        assertEquals((m2), m1);\n         SparseRealMatrix m3 = createSparseMatrix(testData);\n         RealMatrix m4 = m3.copy();\n         assertTrue(m4 instanceof SparseRealMatrix);\n-        assertEquals(((SparseRealMatrix) m4), m3);\n+        assertEquals((m4), m3);\n     }\n \n     /** test add */\n             m.add(m2);\n             fail(\"IllegalArgumentException expected\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.subtract(createSparseMatrix(testData2));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.multiply(createSparseMatrix(bigSingular));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.getTrace();\n             fail(\"Expecting NonSquareMatrixException\");\n         } catch (NonSquareMatrixException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.operate(testVector);\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.preMultiply(testVector);\n             fail(\"expecting IllegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.preMultiply(createSparseMatrix(bigSingular));\n             fail(\"Expecting illegalArgumentException\");\n         } catch (IllegalArgumentException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n             m.getRow(10);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n         try {\n             m.getColumn(-1);\n             fail(\"expecting MatrixIndexException\");\n         } catch (MatrixIndexException ex) {\n-            ;\n+            // ignored\n         }\n     }\n \n \n         // javadoc example\n         SparseRealMatrix matrix = \n-            (SparseRealMatrix) createSparseMatrix(new double[][] { \n-            { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 0, 1, 2 } });\n+            createSparseMatrix(new double[][] { \n+        { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 0, 1, 2 } });\n         matrix.setSubMatrix(new double[][] { { 3, 4 }, { 5, 6 } }, 1, 1);\n         expected = createSparseMatrix(new double[][] {\n                 { 1, 2, 3, 4 }, { 5, 3, 4, 8 }, { 9, 5, 6, 2 } });", "timestamp": 1238950672, "metainfo": ""}