{"sha": "231e2e584f0fa919f74485519f8b8faba5a3d58f", "log": "Changed the equals() methods from RealMatrixImpl, RealVectorImpl and Vector3D so that they consider +0 and -0 are equal, as required by IEEE-754 standard. These were bugs similar to MATH-221 for Complex.  ", "commit": "\n--- a/src/java/org/apache/commons/math/geometry/Vector3D.java\n+++ b/src/java/org/apache/commons/math/geometry/Vector3D.java\n \n     try {\n \n-        Vector3D rhs = (Vector3D)other;\n+      final Vector3D rhs = (Vector3D)other;\n       if (rhs.isNaN()) {\n           return this.isNaN();\n       }\n \n-      return (Double.doubleToRawLongBits(x) == Double.doubleToRawLongBits(rhs.x)) &&\n-             (Double.doubleToRawLongBits(y) == Double.doubleToRawLongBits(rhs.y)) &&\n-             (Double.doubleToRawLongBits(z) == Double.doubleToRawLongBits(rhs.z)); \n+      return (x == rhs.x) && (y == rhs.y) && (z == rhs.z); \n \n     } catch (ClassCastException ex) {\n         // ignore exception\n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n     /**\n      * Returns true iff <code>object</code> is a \n      * <code>RealMatrixImpl</code> instance with the same dimensions as this\n-     * and all corresponding matrix entries are equal.  Corresponding entries\n-     * are compared using {@link java.lang.Double#doubleToLongBits(double)}\n+     * and all corresponding matrix entries are equal.\n      * \n      * @param object the object to test equality against.\n      * @return true if object equals this\n         for (int row = 0; row < nRows; row++) {\n             final double[] dataRow = data[row];\n             for (int col = 0; col < nCols; col++) {\n-                if (Double.doubleToLongBits(dataRow[col]) != \n-                    Double.doubleToLongBits(m.getEntry(row, col))) {\n+                if (dataRow[col] != m.getEntry(row, col)) {\n                     return false;\n                 }\n             }\n--- a/src/java/org/apache/commons/math/linear/RealVectorImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealVectorImpl.java\n           }\n \n           for (int i = 0; i < data.length; ++i) {\n-              if (Double.doubleToRawLongBits(data[i]) !=\n-                  Double.doubleToRawLongBits(rhs.getEntry(i))) {\n+              if (data[i] != rhs.getEntry(i)) {\n                   return false;\n               }\n           }", "timestamp": 1220026653, "metainfo": ""}