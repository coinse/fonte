{"sha": "9d1f2f80766ad5433183edb5d9b01e058ceafcb3", "log": "I've thought about this and I like the idea of getting some of this code available in the cvs for experimentation, I'm going ahead and adding it for others to look at and consider.  This directory will not get compiled into the regular build process or future distributions. We can work on an ant script to provide easy build of this if others think it neccessary.   ", "commit": "\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/analysis/DerivativeOperatorFactory.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.analysis;\n+\n+public class DerivativeOperatorFactory {\n+    \n+     public static DerivativeOperatorFactory newInstance() {\n+         return null;\n+     }\n+\n+     public FunctionOperator getDefaultDerivativeOperator() {\n+         return null;\n+     }\n+\n+     public FunctionOperator getCenteredDifferenceDerivativeOperator(){\n+         return null;\n+     }\n+\n+     // and so on for other implementations of numerical deriv's\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/analysis/DerivativeOperatorFactoryTest.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.analysis;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public class DerivativeOperatorFactoryTest extends TestCase {\n+\n+    /**\n+     * Constructor for DerivativeOperatorFactoryTest.\n+     * @param arg0\n+     */\n+    public DerivativeOperatorFactoryTest(String arg0) {\n+        super(arg0);\n+    }\n+    \n+    //UnivariateRealFunction f = new SomeUserDefinedFunction();\n+    //FunctionOperator derivative =  \n+    //  DerivativeOperatorFactory.newInstance().getDefaultDerivativeOperator();\n+\n+    //UnivariateRealFunction g = derivative.evaluate( f );\n+\n+    // to obtain the value of f'(0.0) use\n+    //double fprime_at_0 = g.value( 0.0 );\n+\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/analysis/FunctionOperator.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.analysis;\n+\n+import org.apache.commons.math.MathException;\n+\n+public interface FunctionOperator {\n+\n+\n+    /**\n+     * Evaluate the Function Operator for a given real single variable function.\n+     *\n+     * @param f the function which should be evaluated\n+     * @return the resultant function\n+     * @throws MathException if the function couldn't be evaluated\n+     */\n+    public UnivariateRealFunction evaluate(UnivariateRealFunction f) throws MathException;\n+\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/Compilable.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public interface Compilable {\n+    \n+    public abstract Evaluation compile(EvaluationContext context)\n+        throws EvaluationException;\n+               \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/DefaultContext.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public class DefaultContext implements EvaluationContext {\n+\n+    /**\n+     * \n+     */\n+    public DefaultContext() {\n+        super();\n+        // TODO Auto-generated constructor stub\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#doubleValue(org.apache.archimedes.Evaluation)\n+     */\n+    public double doubleValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).doubleValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#floatValue(org.apache.archimedes.Evaluation)\n+     */\n+    public float floatValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).floatValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#intValue(org.apache.archimedes.Evaluation)\n+     */\n+    public int intValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).intValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#longValue(org.apache.archimedes.Evaluation)\n+     */\n+    public long longValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).longValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#shortValue(org.apache.archimedes.Evaluation)\n+     */\n+    public short shortValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).shortValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#byteValue(org.apache.archimedes.Evaluation)\n+     */\n+    public byte byteValue(Evaluation argument) throws EvaluationException {\n+        // TODO Auto-generated method stub\n+        return ((DefaultValue)argument.evaluate(this)).byteValue();\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(double)\n+     */\n+    public Evaluation evaluate(double d) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(d);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(float)\n+     */\n+    public Evaluation evaluate(float f) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(f);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(int)\n+     */\n+    public Evaluation evaluate(int i) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(long)\n+     */\n+    public Evaluation evaluate(long l) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(l);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(short)\n+     */\n+    public Evaluation evaluate(short s) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(s);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.EvaluationContext#evaluate(byte)\n+     */\n+    public Evaluation evaluate(byte b) {\n+        // TODO Auto-generated method stub\n+        return new DefaultValue(b);\n+    }\n+\n+    public class DefaultValue extends Number implements Evaluation {\n+\n+        Number value;\n+\n+        /**\n+         * \n+         */\n+        DefaultValue() {\n+            super();\n+            // TODO Auto-generated constructor stub\n+        }\n+\n+        DefaultValue(Number n) {\n+            value = n;\n+        }\n+                \n+        DefaultValue(double d) {\n+            value = new Double(d);\n+        }\n+\n+        DefaultValue(float f) {\n+            value = new Float(f);\n+        }\n+\n+        DefaultValue(int i) {\n+            value = new Integer(i);\n+        }\n+\n+        DefaultValue(long l) {\n+            value = new Long(l);\n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.apache.archimedes.Evaluation#evaluate(org.apache.archimedes.EvaluationContext)\n+         */\n+        public Evaluation evaluate(EvaluationContext context)\n+            throws EvaluationException {\n+            return this;\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#intValue()\n+         */\n+        public int intValue() {\n+            // TODO Auto-generated method stub\n+            return value.intValue();\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#longValue()\n+         */\n+        public long longValue() {\n+            // TODO Auto-generated method stub\n+            return value.longValue();\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#floatValue()\n+         */\n+        public float floatValue() {\n+            // TODO Auto-generated method stub\n+            return value.floatValue();\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#doubleValue()\n+         */\n+        public double doubleValue() {\n+            // TODO Auto-generated method stub\n+            return value.doubleValue();\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#byteValue()\n+         */\n+        public byte byteValue() {\n+            // TODO Auto-generated method stub\n+            return value.byteValue();\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Number#shortValue()\n+         */\n+        public short shortValue() {\n+            // TODO Auto-generated method stub\n+            return value.shortValue();\n+        }\n+\n+    }\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/Evaluation.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public interface Evaluation {\n+    \n+    public abstract Evaluation evaluate(EvaluationContext context)\n+        throws EvaluationException;\n+       \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/EvaluationContext.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public interface EvaluationContext {\n+    \n+    public abstract double doubleValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract float floatValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract int intValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract long longValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract short shortValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract byte byteValue(Evaluation argument) throws EvaluationException ;\n+    \n+    public abstract Evaluation evaluate(double d);\n+    \n+    public abstract Evaluation evaluate(float f);\n+    \n+    public abstract Evaluation evaluate(int i);\n+    \n+    public abstract Evaluation evaluate(long l);\n+    \n+    public abstract Evaluation evaluate(short s);\n+    \n+    public abstract Evaluation evaluate(byte b);\n+\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/EvaluationException.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public class EvaluationException extends Exception {\n+\n+    /**\n+     * \n+     */\n+    public EvaluationException() {\n+        super();\n+        // TODO Auto-generated constructor stub\n+    }\n+\n+    /**\n+     * @param message\n+     */\n+    public EvaluationException(String message) {\n+        super(message);\n+        // TODO Auto-generated constructor stub\n+    }\n+\n+    /**\n+     * @param message\n+     * @param cause\n+     */\n+    public EvaluationException(String message, Throwable cause) {\n+        super(message, cause);\n+        // TODO Auto-generated constructor stub\n+    }\n+\n+    /**\n+     * @param cause\n+     */\n+    public EvaluationException(Throwable cause) {\n+        super(cause);\n+        // TODO Auto-generated constructor stub\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/Variable.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Variable implements Evaluation, Serializable {\n+\n+    public Evaluation evaluate(EvaluationContext context)\n+        throws EvaluationException {\n+\t\treturn null;\n+        \n+        //context.evaluate(value.doubleValue());\n+\t}\n+    \n+    public String toString() {\n+    \treturn \"Variable\";\n+\t}\t\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Add.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.Compilable;\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Add implements Evaluation, Serializable {\n+\n+\tprivate Evaluation left;\n+\n+\tprivate Evaluation right;\n+\n+\tpublic void setLeftOperand(Evaluation left) {\n+\t\tthis.left = left;\n+\t}\n+\n+\tpublic void setRightOperand(Evaluation right) {\n+\t\tthis.right = right;\n+\t}\n+\n+    public Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            context.doubleValue(left) + context.doubleValue(right)\n+        );\n+    }\n+    \n+    \n+    public String toString() {\n+        return \"Add\";\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Divide.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Divide implements Evaluation, Serializable {\n+\n+    private Evaluation left;\n+\n+    private Evaluation right;\n+\n+    public void setLeftOperand(Evaluation left) {\n+        this.left = left;\n+    }\n+\n+    public void setRightOperand(Evaluation right) {\n+        this.right = right;\n+    }\n+\n+    public Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            context.doubleValue(left) / context.doubleValue(right)\n+        );\n+    }\n+\n+    public String toString() {\n+        return \"Divide\";\n+    }\n+\n+    \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Equals.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationContext;\n+\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Equals implements Evaluation, Serializable {\n+\n+\tprivate Evaluation left;\n+\n+\tprivate Evaluation right;\n+\n+\tpublic void setLeftOperand(Evaluation left) {\n+\t\tthis.left = left;\n+\t}\n+\n+\tpublic void setRightOperand(Evaluation right) {\n+\t\tthis.right = right;\n+\t}\n+    \n+\tpublic Evaluation evaluate(EvaluationContext context) {\n+\n+\t\treturn null;\n+\t}\n+    \n+    public String toString() {\n+        return \"Equals\";\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Multiply.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Multiply implements Evaluation, Serializable {\n+\n+\tprivate Evaluation left;\n+\n+\tprivate Evaluation right;\n+\n+\tpublic void setLeftOperand(Evaluation left) {\n+\t\tthis.left = left;\n+\t}\n+\n+\tpublic void setRightOperand(Evaluation right) {\n+\t\tthis.right = right;\n+\t}\n+\n+    public Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            context.doubleValue(left) * context.doubleValue(right)\n+        );\n+    }\n+    \n+    public String toString() {\n+        return \"Multiply\";\n+    }\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Power.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Power implements Evaluation, Serializable {\n+\n+\tprivate Evaluation argument;\n+\n+\tprivate Evaluation power;\n+\t\n+\tpublic void setOperand(Evaluation argument) {\n+\t\tthis.argument = argument;\n+\t}\n+\n+\tpublic void setPower(Evaluation power) {\n+\t\tthis.power = power;\n+\t}\n+\t\t\n+\tpublic Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            Math.pow(\n+                context.doubleValue(argument),\n+                context.doubleValue(power)\n+            )\n+        );\n+\t}\n+    \n+    public String toString() {\n+        return \"Power\";\n+    }\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Sqrt.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Sqrt implements Evaluation, Serializable {\n+\n+    private Evaluation argument;\n+\n+    public void setOperand(Evaluation argument) {\n+        this.argument = argument;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.archimedes.NumericFunction#evaluate(org.apache.archimedes.EvaluationContext)\n+     */\n+    public Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            Math.sqrt(context.doubleValue(argument)));\n+\n+    }\n+\n+    public String toString() {\n+        return \"Square Root\";\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/function/simple/Subtract.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their name without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.function.simple;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.math.function.EvaluationContext;\n+import org.apache.commons.math.function.Evaluation;\n+import org.apache.commons.math.function.EvaluationException;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window - Preferences - Java - Code Generation - Code and Comments\n+ */\n+public class Subtract implements Evaluation, Serializable {\n+\n+\tprivate Evaluation left;\n+\n+\tprivate Evaluation right;\n+\n+\tpublic void setLeftOperand(Evaluation left) {\n+\t\tthis.left = left;\n+\t}\n+\n+\tpublic void setRightOperand(Evaluation right) {\n+\t\tthis.right = right;\n+\t}\n+\n+    public Evaluation evaluate(EvaluationContext context) throws EvaluationException {\n+        return context.evaluate(\n+            context.doubleValue(left) - context.doubleValue(right)\n+        );\n+    }\n+    \n+    public String toString() {\n+        return \"Subtract\";\n+    }\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/linear/Decomposer.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.linear;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public interface Decomposer {\n+\n+    Decomposition decompose(RealMatrix);\n+    \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/linear/Decomposition.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.linear;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public interface Decomposition {\n+\n+      // solve A*x=b\n+      RealVector solve(RealVector b);\n+\n+\n+      // solve matrix equation\n+      RealMatrix solve(RealMatrix b);\n+\n+\n+      RealMatrix invert();\n+    \n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/linear/DecompositionFactory.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.linear;\n+\n+/**\n+ * @author Administrator\n+ *\n+ * To change the template for this generated type comment go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+public abstract  class DecompositionFactory {\n+\n+    /*\n+     * get a matrix specific decomposer factory\n+     * class RealMatrix {\n+     *     DecompositionFactory getDecompositionFactory();\n+     *  }\n+     */\n+     \n+    // get overall default factory\n+    public static DecompositionFactory newInstance(){\n+        return null;\n+    }\n+\n+    // construct a new default decomposer\n+    public abstract Decomposer newDecomposer();\n+\n+    // example for a specific decomposer (Householder or QR)\n+    public abstract Decomposer newQRDecopmposer();\n+}\n--- /dev/null\n+++ b/src/experimental/org/apache/commons/math/linear/RealVector.java\n+/*\n+ * Created on Nov 19, 2003\n+ *\n+ * To change the template for this generated file go to\n+ * Window>Preferences>Java>Code Generation>Code and Comments\n+ */\n+package org.apache.commons.math.linear;\n+\n+\n+public class RealVector {\n+\n+\n+}", "timestamp": 1069302137, "metainfo": ""}