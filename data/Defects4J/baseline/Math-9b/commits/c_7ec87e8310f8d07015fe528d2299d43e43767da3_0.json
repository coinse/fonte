{"sha": "7ec87e8310f8d07015fe528d2299d43e43767da3", "log": "removed static imports  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTest.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.util;\n-\n-import static org.junit.Assert.*;\n \n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n     \tif (x == x)\n     \t\tthrow new RuntimeException(\"acos(-1.1) should NaN\");\n \n-    \tassertEquals(FastMath.acos(-1.0), FastMath.PI, Double.MIN_VALUE);\n-\n-    \tassertEquals(FastMath.acos(1.0), 0.0, Double.MIN_VALUE);\n-\n-    \tassertEquals(FastMath.acos(0.0), FastMath.PI / 2.0, Double.MIN_VALUE);\n+    \tAssert.assertEquals(FastMath.acos(-1.0), FastMath.PI, Double.MIN_VALUE);\n+\n+    \tAssert.assertEquals(FastMath.acos(1.0), 0.0, Double.MIN_VALUE);\n+\n+    \tAssert.assertEquals(FastMath.acos(0.0), FastMath.PI / 2.0, Double.MIN_VALUE);\n     }\n \n     /**\n     \tif (x == x)\n     \t\tthrow new RuntimeException(\"asin(-1.1) should NaN\");\n \n-    \tassertEquals(FastMath.asin(1.0), FastMath.PI / 2.0, Double.MIN_VALUE);\n-\n-    \tassertEquals(FastMath.asin(-1.0), -FastMath.PI / 2.0, Double.MIN_VALUE);\n-\n-    \tassertEquals(FastMath.asin(0.0), 0.0, Double.MIN_VALUE);\n+    \tAssert.assertEquals(FastMath.asin(1.0), FastMath.PI / 2.0, Double.MIN_VALUE);\n+\n+    \tAssert.assertEquals(FastMath.asin(-1.0), -FastMath.PI / 2.0, Double.MIN_VALUE);\n+\n+    \tAssert.assertEquals(FastMath.asin(0.0), 0.0, Double.MIN_VALUE);\n     }\n \n     private Dfp cosh(Dfp x) {", "timestamp": 1315510393, "metainfo": ""}