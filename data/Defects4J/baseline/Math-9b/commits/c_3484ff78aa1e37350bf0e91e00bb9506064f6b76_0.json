{"sha": "3484ff78aa1e37350bf0e91e00bb9506064f6b76", "log": "Got rid of a number of those pesky \"Auto-generated catch block\" comments from test code. PR: Obtained from: Submitted by:\t Reviewed by:\t CVS: ---------------------------------------------------------------------- CVS: PR: CVS:   If this change addresses a PR in the problem report tracking CVS:   database, then enter the PR number(s) here. CVS: Obtained from: CVS:   If this change has been taken from another system, such as NCSA, CVS:   then name the system in this line, otherwise delete it. CVS: Submitted by: CVS:   If this code has been contributed to Apache by someone else; i.e., CVS:   they sent us a patch or a new module, then include their name/email CVS:   address here. If this is your work then delete this line. CVS: Reviewed by: CVS:   If we are doing pre-commit code reviews and someone else has CVS:   reviewed your changes, include their name(s) here. CVS:   If you have not had it reviewed then delete this line.   ", "commit": "\n--- a/src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.12 $ $Date: 2004/02/21 21:35:17 $\n+ * @version $Revision: 1.13 $ $Date: 2004/05/23 00:33:40 $\n  */\n public class ExponentialDistributionTest extends TestCase {\n     private ExponentialDistribution exp;\n             double actual = exp.cumulativeProbability(0.25, 0.75);\n             assertEquals(0.0905214, actual, 10e-4);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n \n             double actual = exp.cumulativeProbability(x);\n             TestUtils.assertEquals(expected, actual, 10e-4);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n             double actual = exp.inverseCumulativeProbability(p);\n             TestUtils.assertEquals(expected, actual, 10e-4);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n--- a/src/test/org/apache/commons/math/distribution/FDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/FDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.11 $ $Date: 2004/02/21 21:35:17 $\n+ * @version $Revision: 1.12 $ $Date: 2004/05/23 00:33:40 $\n  */\n public class FDistributionTest extends TestCase {\n     private FDistribution f;\n             double actual = f.cumulativeProbability(x);\n             assertEquals(\"probability for \" + x, expected, actual, 1e-3);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n             double actual = f.inverseCumulativeProbability(p);\n             assertEquals(\"value for \" + p, expected, actual, 1e-2);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n--- a/src/test/org/apache/commons/math/distribution/GammaDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/GammaDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.14 $ $Date: 2004/02/21 21:35:17 $\n+ * @version $Revision: 1.15 $ $Date: 2004/05/23 00:33:40 $\n  */\n public class GammaDistributionTest extends TestCase {\n     public void testProbabilities() {\n                     .cumulativeProbability(x);\n             assertEquals(\"probability for \" + x, expected, actual, 10e-4);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n                     .inverseCumulativeProbability(p);\n             assertEquals(\"critical value for \" + p, expected, actual, 10e-4);\n         } catch (MathException e) {\n-            // TODO Auto-generated catch block\n             e.printStackTrace();\n         }\n     }\n--- a/src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java\n import org.apache.commons.math.util.NumberTransformer;\n \n /**\n- * @version $Revision: 1.2 $ $Date: 2004/04/24 21:41:02 $\n+ * @version $Revision: 1.3 $ $Date: 2004/05/23 00:33:41 $\n  */\n public class ListUnivariateImpl extends AbstractDescriptiveStatistics {\n \n         try {\n \t\t\tvalue = transformer.transform(list.get(calcIndex));\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n         \n--- a/src/test/org/apache/commons/math/util/BeanTransformerTest.java\n+++ b/src/test/org/apache/commons/math/util/BeanTransformerTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.9 $ $Date: 2004/02/21 21:35:18 $\n+ * @version $Revision: 1.10 $ $Date: 2004/05/23 00:33:41 $\n  */\n public class BeanTransformerTest extends TestCase {\n     \n \t\ttry {\n \t\t\tvalue = b.transform(target);\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\tTestUtils.assertEquals(1.0, value, 1.0e-2);\n             try {\n \t\t\t\tb.transform(target);\n \t\t\t} catch (MathException e) {\n-\t\t\t\t// TODO Auto-generated catch block\n \t\t\t\te.printStackTrace();\n \t\t\t}\n             fail(\"Expecting ClassCastException\");\n--- a/src/test/org/apache/commons/math/util/DefaultTransformerTest.java\n+++ b/src/test/org/apache/commons/math/util/DefaultTransformerTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.10 $ $Date: 2004/05/23 00:30:01 $\n+ * @version $Revision: 1.11 $ $Date: 2004/05/23 00:33:41 $\n  */\n public class DefaultTransformerTest extends TestCase {\n     /**\n         try {\n \t\t\tassertEquals(expected, t.transform(input), 1.0e-4);\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n     }\n         try {\n \t\t\tassertEquals(expected, t.transform(input), 1.0e-4);\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n     }        \n         try {\n \t\t\tassertEquals(expected, t.transform(input), 1.0e-4);\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n     }        \n         try {\n \t\t\tassertEquals(expected, t.transform(input), 1.0e-4);\n \t\t} catch (MathException e) {\n-\t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n     }", "timestamp": 1085272421, "metainfo": ""}