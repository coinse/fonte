{"sha": "c306762496444929a7de46b3925ff5600c0b78c5", "log": "Add test cases for Serialization of subclasses of Complex  ", "commit": "\n--- a/src/test/org/apache/commons/math/complex/ComplexTest.java\n+++ b/src/test/org/apache/commons/math/complex/ComplexTest.java\n  */\n public class ComplexTest extends TestCase {\n     \n+\n     private double inf = Double.POSITIVE_INFINITY;\n     private double neginf = Double.NEGATIVE_INFINITY;\n     private double nan = Double.NaN;\n         Complex infcmplx = (Complex)TestUtils.serializeAndRecover(infInf);\n         assertEquals(infInf, infcmplx);\n         assertTrue(infcmplx.isInfinite());\n+        TestComplex tz = new TestComplex(3.0, 4.0);\n+        assertEquals(tz, TestUtils.serializeAndRecover(tz));\n+        TestComplex ntcmplx = (TestComplex)TestUtils.serializeAndRecover(new TestComplex(oneNaN));\n+        assertEquals(nanZero, ntcmplx);\n+        assertTrue(ntcmplx.isNaN());\n+        TestComplex inftcmplx = (TestComplex)TestUtils.serializeAndRecover(new TestComplex(infInf));\n+        assertEquals(infInf, inftcmplx);\n+        assertTrue(inftcmplx.isInfinite());\n+    }\n+    \n+    /**\n+     * Class to test extending Complex\n+     */\n+    public static class TestComplex extends Complex {\n+\n+        /**\n+         * Serialization identifier.\n+         */\n+        private static final long serialVersionUID = 3268726724160389237L;\n+\n+        public TestComplex(double real, double imaginary) {\n+            super(real, imaginary);\n+        }\n+        \n+        public TestComplex(Complex other){\n+            this(other.getReal(), other.getImaginary());\n+        }\n+        \n+        protected TestComplex createComplex(double real, double imaginary){\n+            return new TestComplex(real, imaginary);\n+        }\n+\n     }\n \n }", "timestamp": 1245724550, "metainfo": ""}