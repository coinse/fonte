{"sha": "78bc8d3860c9f3fe1e5e73974605b2215fc210be", "log": "MATH-854: fill the \"throws\" clause of RealVector.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/RealVector.java\n+++ b/src/main/java/org/apache/commons/math3/linear/RealVector.java\n                 }\n             }\n \n-            /** {@inheritDoc} */\n-            public void remove() {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all circumstances.\n+             */\n+            public void remove() throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n         };\n      * </p>\n      * <p>\n      * This method <em>must</em> be overriden by concrete subclasses of\n-     * {@link RealVector}.\n+     * {@link RealVector} (the current implementation throws an exception).\n      * </p>\n      *\n      * @param other Object to test for equality.\n      * @return {@code true} if two vector objects are equal, {@code false} if\n      * {@code other} is null, not an instance of {@code RealVector}, or\n      * not equal to this {@code RealVector} instance.\n+     * @throws MathUnsupportedOperationException if this method is not\n+     * overridden.\n      */\n     @Override\n-    public boolean equals(Object other) {\n+    public boolean equals(Object other)\n+        throws MathUnsupportedOperationException {\n         throw new MathUnsupportedOperationException();\n     }\n \n     /**\n      * {@inheritDoc}. This method <em>must</em> be overriden by concrete\n-     * subclasses of {@link RealVector}.\n+     * subclasses of {@link RealVector} (current implementation throws an\n+     * exception).\n+     *\n+     * @throws MathUnsupportedOperationException if this method is not\n+     * overridden.\n      */\n     @Override\n-    public int hashCode() {\n+    public int hashCode() throws MathUnsupportedOperationException {\n         throw new MathUnsupportedOperationException();\n     }\n \n             return current;\n         }\n \n-        /** {@inheritDoc} */\n-        public void remove() {\n+        /**\n+         * {@inheritDoc}\n+         *\n+         * @throws MathUnsupportedOperationException in all circumstances.\n+         */\n+        public void remove() throws MathUnsupportedOperationException {\n             throw new MathUnsupportedOperationException();\n         }\n     }\n          * that {@link UnmodifiableVector} is <em>not</em> immutable.\n          */\n         return new RealVector() {\n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector mapToSelf(UnivariateFunction function) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all circumstances.\n+             */\n+            @Override\n+            public RealVector mapToSelf(UnivariateFunction function)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                         return e;\n                     }\n \n-                    /** {@inheritDoc} */\n-                    public void remove() {\n+                    /**\n+                     * {@inheritDoc}\n+                     *\n+                     * @throws MathUnsupportedOperationException in all\n+                     * circumstances.\n+                     */\n+                    public void remove() throws MathUnsupportedOperationException {\n                         throw new MathUnsupportedOperationException();\n                     }\n                 };\n                         return e;\n                     }\n \n-                    /** {@inheritDoc} */\n-                    public void remove() {\n+                    /**\n+                     * {@inheritDoc}\n+                     *\n+                     * @throws MathUnsupportedOperationException in all\n+                     * circumstances.\n+                     */\n+                    public void remove()\n+                        throws MathUnsupportedOperationException {\n                         throw new MathUnsupportedOperationException();\n                     }\n                 };\n                 return v.mapAdd(d);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector mapAddToSelf(double d) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public RealVector mapAddToSelf(double d)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.mapSubtract(d);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector mapSubtractToSelf(double d) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public RealVector mapSubtractToSelf(double d)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.mapMultiply(d);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector mapMultiplyToSelf(double d) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public RealVector mapMultiplyToSelf(double d)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.mapDivide(d);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector mapDivideToSelf(double d) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public RealVector mapDivideToSelf(double d)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.unitVector();\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public void unitize() {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public void unitize() throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.getEntry(index);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public void setEntry(int index, double value) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public void setEntry(int index, double value)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public void addToEntry(int index, double value) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public void addToEntry(int index, double value)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.getSubVector(index, n);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public void setSubVector(int index, RealVector w) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public void setSubVector(int index, RealVector w)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public void set(double value) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public void set(double value)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                 return v.combine(a, b, y);\n             }\n \n-            /** {@inheritDoc} */\n-            @Override\n-            public RealVector combineToSelf(double a, double b, RealVector y) {\n+            /**\n+             * {@inheritDoc}\n+             *\n+             * @throws MathUnsupportedOperationException in all\n+             * circumstances.\n+             */\n+            @Override\n+            public RealVector combineToSelf(double a, double b, RealVector y)\n+                throws MathUnsupportedOperationException {\n                 throw new MathUnsupportedOperationException();\n             }\n \n                     return v.getEntry(getIndex());\n                 }\n \n-                /** {@inheritDoc} */\n+                /**\n+                 * {@inheritDoc}\n+                 *\n+                 * @throws MathUnsupportedOperationException in all\n+                 * circumstances.\n+                 */\n                 @Override\n-                public void setValue(double value) {\n+                public void setValue(double value)\n+                    throws MathUnsupportedOperationException {\n                     throw new MathUnsupportedOperationException();\n                 }\n             }", "timestamp": 1347419926, "metainfo": ""}