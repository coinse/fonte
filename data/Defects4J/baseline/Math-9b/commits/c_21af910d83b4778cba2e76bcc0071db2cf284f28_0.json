{"sha": "21af910d83b4778cba2e76bcc0071db2cf284f28", "log": "Formatting.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/special/Gamma.java\n+++ b/src/main/java/org/apache/commons/math3/special/Gamma.java\n      *     approximation</a></li>\n      * </ul>\n      *\n-     * @param x argument.\n+     * @param x Argument.\n      * @return the value of {@code log(Gamma(x))}, {@code Double.NaN} if\n      * {@code x <= 0.0}.\n      */\n      * where {@code g} is a constant, returned by {@link #getLanczosG()}.\n      * </p>\n      *\n-     * @param x the argument\n-     * @return the Lanczos approximation\n+     * @param x Argument.\n+     * @return The Lanczos approximation.\n      * @see <a href=\"http://mathworld.wolfram.com/LanczosApproximation.html\">Lanczos Approximation</a>\n      * equations (1) through (5), and Paul Godfrey's\n      * <a href=\"http://my.fit.edu/~gabdo/gamma.txt\">Note on the computation\n      * implementation in the <em>NSWC Library of Mathematics Subroutines</em>,\n      * {@code DGAM1}.\n      *\n-     * @param x the argument\n-     * @return the value of {@code 1.0 / Gamma(1.0 + x) - 1.0}\n+     * @param x Argument.\n+     * @return The value of {@code 1.0 / Gamma(1.0 + x) - 1.0}.\n      * @throws NumberIsTooSmallException if {@code x < -0.5}\n      * @throws NumberIsTooLargeException if {@code x > 1.5}\n      */\n      * This implementation is based on the double precision implementation in\n      * the <em>NSWC Library of Mathematics Subroutines</em>, {@code DGMLN1}.\n      *\n-     * @param x the argument\n-     * @return the value of {@code log(Gamma(1 + x))}\n-     * @throws NumberIsTooSmallException if {@code x < -0.5}\n-     * @throws NumberIsTooLargeException if {@code x > 1.5}\n-     */\n-    public static double logGamma1p(final double x) {\n+     * @param x Argument.\n+     * @return The value of {@code log(Gamma(1 + x))}.\n+     * @throws NumberIsTooSmallException if {@code x < -0.5}.\n+     * @throws NumberIsTooLargeException if {@code x > 1.5}.\n+     */\n+    public static double logGamma1p(final double x)\n+        throws NumberIsTooSmallException, NumberIsTooLargeException {\n \n         if (x < -0.5) {\n             throw new NumberIsTooSmallException(x, -0.5, true);", "timestamp": 1346377999, "metainfo": ""}