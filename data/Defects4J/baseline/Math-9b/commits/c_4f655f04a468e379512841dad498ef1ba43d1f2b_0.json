{"sha": "4f655f04a468e379512841dad498ef1ba43d1f2b", "log": "Naming of variable.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java\n     implements MultivariateRealOptimizer {\n     /** Default value for {@link #checkFeasableCount}: {@value}. */\n     public static final int DEFAULT_CHECKFEASABLECOUNT = 0;\n-    /** Default value for {@link #stopfitness}: {@value}. */\n+    /** Default value for {@link #stopFitness}: {@value}. */\n     public static final double DEFAULT_STOPFITNESS = 0;\n     /** Default value for {@link #isActiveCMA}: {@value}. */\n     public static final boolean DEFAULT_ISACTIVECMA = true;\n     /** Maximal number of iterations allowed. */\n     private int maxIterations;\n     /** Limit for fitness value. */\n-    private double stopfitness;\n+    private double stopFitness;\n     /** Stop if x-changes larger stopTolUpX. */\n     private double stopTolUpX;\n     /** Stop if x-change smaller stopTolX. */\n             }\n         }\n         this.maxIterations = maxIterations;\n-        this.stopfitness = stopFitness;\n+        this.stopFitness = stopFitness;\n         this.isActiveCMA = isActiveCMA;\n         this.diagonalOnly = diagonalOnly;\n         this.checkFeasableCount = checkFeasableCount;\n                 }\n                 // handle termination criteria\n                 // Break, if fitness is good enough\n-                if (stopfitness != 0) { // only if stopfitness is defined\n-                    if (bestFitness < (isMinimize ? stopfitness : -stopfitness)) {\n+                if (stopFitness != 0) { // only if stopFitness is defined\n+                    if (bestFitness < (isMinimize ? stopFitness : -stopFitness)) {\n                         break generationLoop;\n                     }\n                 }", "timestamp": 1320235673, "metainfo": ""}