{"sha": "eea1a9d95d1e63e5aefd5897e9aeabcb552f1185", "log": "fixed wrong loop bounds  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n+++ b/src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n \n                     // approximate contribution to norm squared from i < nn-1.\n                     a2 = a2 + b2;\n-                    for (int i4 = np; i4 >= 4 * start - 1 + pingPong; i4 -= 4) {\n+                    for (int i4 = np; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {\n                         if(b2 == 0.0) {\n                             break;\n                         }\n                 if (end - start > 2) {\n                     b2 = work[nn - 13] / work[nn - 15];\n                     a2 = a2 + b2;\n-                    for (int i4 = nn - 17; i4 >= 4 * start - 1 + pingPong; i4 -= 4) {\n+                    for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {\n                         if (b2 == 0.0) {\n                             break;\n                         }\n                 double b1 = work[nn - 5] / work[nn - 7];\n                 double b2 = b1;\n                 if (b2 != 0.0) {\n-                    for (int i4 = 4 * end - 9 + pingPong; i4 >= 4 * start - 1 + pingPong; i4 -= 4) {\n+                    for (int i4 = 4 * end - 10 + pingPong; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {\n                         final double oldB1 = b1;\n                         if (work[i4] > work[i4 - 2]) {\n                             return;\n                 double b1 = work[nn - 5] / work[nn - 7];\n                 double b2 = b1;\n                 if (b2 != 0.0){\n-                    for (int i4 = 4 * end - 9 + pingPong; i4 >= 4 * start - 1 + pingPong; i4 -= 4) {\n+                    for (int i4 = 4 * end - 9 + pingPong; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {\n                         if (work[i4] > work[i4 - 2]) {\n                             return;\n                         }", "timestamp": 1227864338, "metainfo": ""}