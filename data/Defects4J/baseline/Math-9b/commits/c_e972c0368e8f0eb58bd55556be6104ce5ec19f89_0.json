{"sha": "e972c0368e8f0eb58bd55556be6104ce5ec19f89", "log": "Add missing svn:keywords properties.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java\n  *\n  * @param <PAIR> Type of (point, value) pair.\n  *\n- * @version $Id: AbstractConvergenceChecker.java 1370215 2012-08-07 12:38:59Z sebb $\n+ * @version $Id$\n  * @since 3.0\n  */\n public abstract class AbstractConvergenceChecker<PAIR>\n--- a/src/main/java/org/apache/commons/math3/optim/ConvergenceChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/ConvergenceChecker.java\n  * @see org.apache.commons.math3.optim.SimpleValueChecker\n  * @see org.apache.commons.math3.optim.SimpleVectorValueChecker\n  *\n- * @version $Id: ConvergenceChecker.java 1364392 2012-07-22 18:27:12Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public interface ConvergenceChecker<PAIR> {\n--- a/src/main/java/org/apache/commons/math3/optim/InitialGuess.java\n+++ b/src/main/java/org/apache/commons/math3/optim/InitialGuess.java\n  * <br/>\n  * Immutable class.\n  *\n- * @version $Id: InitialGuess.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public class InitialGuess implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/OptimizationData.java\n+++ b/src/main/java/org/apache/commons/math3/optim/OptimizationData.java\n  * arguments and perform the appropriate cast in order to access the data\n  * they need.\n  *\n- * @version $Id: OptimizationData.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public interface OptimizationData {}\n--- a/src/main/java/org/apache/commons/math3/optim/PointValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optim/PointValuePair.java\n  *\n  * @see PointVectorValuePair\n  * @see org.apache.commons.math3.analysis.MultivariateFunction\n- * @version $Id: PointValuePair.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class PointValuePair extends Pair<double[], Double> implements Serializable {\n--- a/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java\n  *\n  * @see PointValuePair\n  * @see org.apache.commons.math3.analysis.MultivariateVectorFunction\n- * @version $Id: PointVectorValuePair.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class PointVectorValuePair extends Pair<double[], double[]> implements Serializable {\n--- a/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java\n+++ b/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java\n  * <br/>\n  * Immutable class.\n  *\n- * @version $Id: SimpleBounds.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public class SimpleBounds implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java\n  * @param <PAIR> Type of the (point, value) pair.\n  * The type of the \"value\" part of the pair (not used by this class).\n  *\n- * @version $Id: SimplePointChecker.java 1413127 2012-11-24 04:37:30Z psteitz $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class SimplePointChecker<PAIR extends Pair<double[], ? extends Object>>\n--- a/src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java\n  * method will also return {@code true} if the number of iterations has been set\n  * (see {@link #SimpleValueChecker(double,double,int) this constructor}).\n  *\n- * @version $Id: SimpleValueChecker.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class SimpleValueChecker\n--- a/src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java\n  * method will also return {@code true} if the number of iterations has been set\n  * (see {@link #SimpleVectorValueChecker(double,double,int) this constructor}).\n  *\n- * @version $Id: SimpleVectorValueChecker.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class SimpleVectorValueChecker\n--- a/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java\n  * are the coordinates of the current point and v is the value of the constraint.\n  * </p>\n  *\n- * @version $Id: LinearConstraint.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class LinearConstraint implements Serializable {\n--- a/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java\n  * the x<sub>i</sub> are the coordinates of the current point.\n  * </p>\n  *\n- * @version $Id: LinearObjectiveFunction.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class LinearObjectiveFunction\n--- a/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java\n /**\n  * Base class for implementing linear optimizers.\n  *\n- * @version $Id: AbstractLinearOptimizer.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public abstract class LinearOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/linear/NoFeasibleSolutionException.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/NoFeasibleSolutionException.java\n /**\n  * This class represents exceptions thrown by optimizers when no solution fulfills the constraints.\n  *\n- * @version $Id: NoFeasibleSolutionException.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class NoFeasibleSolutionException extends MathIllegalStateException {\n--- a/src/main/java/org/apache/commons/math3/optim/linear/Relationship.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/Relationship.java\n /**\n  * Types of relationships between two cells in a Solver {@link LinearConstraint}.\n  *\n- * @version $Id: Relationship.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public enum Relationship {\n--- a/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java\n /**\n  * Solves a linear problem using the \"Two-Phase Simplex\" method.\n  *\n- * @version $Id: SimplexSolver.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class SimplexSolver extends LinearOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java\n  * a1: Artificial variable</br>\n  * RHS: Right hand side</br>\n  * </p>\n- * @version $Id: SimplexTableau.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n class SimplexTableau implements Serializable {\n--- a/src/main/java/org/apache/commons/math3/optim/linear/UnboundedSolutionException.java\n+++ b/src/main/java/org/apache/commons/math3/optim/linear/UnboundedSolutionException.java\n /**\n  * This class represents exceptions thrown by optimizers when a solution escapes to infinity.\n  *\n- * @version $Id: UnboundedSolutionException.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class UnboundedSolutionException extends MathIllegalStateException {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GoalType.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GoalType.java\n  * Goal type for an optimization problem (minimization or maximization of\n  * a scalar function.\n  *\n- * @version $Id: GoalType.java 1364392 2012-07-22 18:27:12Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public enum GoalType implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java\n   *\n  * @see MultivariateFunction\n  * @see MultivariateVectorFunction\n- * @version $Id: LeastSquaresConverter.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n \n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java\n  *\n  * @see MultivariateFunctionPenaltyAdapter\n  *\n- * @version $Id: MultivariateFunctionMappingAdapter.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class MultivariateFunctionMappingAdapter\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapter.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapter.java\n  *\n  * @see MultivariateFunctionMappingAdapter\n  *\n- * @version $Id: MultivariateFunctionPenaltyAdapter.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class MultivariateFunctionPenaltyAdapter\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java\n  * It also supports optional preconditioning.\n  * </p>\n  *\n- * @version $Id: NonLinearConjugateGradientOptimizer.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class NonLinearConjugateGradientOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner.java\n /**\n  * This interface represents a preconditioner for differentiable scalar\n  * objective function optimizers.\n- * @version $Id: Preconditioner.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public interface Preconditioner {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java\n  * this class.\n  *\n  * @see SimplexOptimizer\n- * @version $Id: AbstractSimplex.java 1397759 2012-10-13 01:12:58Z erans $\n+ * @version $Id$\n  * @since 3.0\n  */\n public abstract class AbstractSimplex implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java\n  * derivative-based optimizer when the derivatives are approximated by\n  * finite differences.\n  *\n- * @version $Id: BOBYQAOptimizer.java 1413131 2012-11-24 04:44:02Z psteitz $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class BOBYQAOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java\n  *  <li><a href=\"http://en.wikipedia.org/wiki/CMA-ES\">Wikipedia</a></li>\n  * </ul>\n  *\n- * @version $Id: CMAESOptimizer.java 1400108 2012-10-19 14:20:16Z erans $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class CMAESOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java\n /**\n  * This class implements the multi-directional direct search method.\n  *\n- * @version $Id: MultiDirectionalSimplex.java 1364392 2012-07-22 18:27:12Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class MultiDirectionalSimplex extends AbstractSimplex {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java\n /**\n  * This class implements the Nelder-Mead simplex algorithm.\n  *\n- * @version $Id: NelderMeadSimplex.java 1364392 2012-07-22 18:27:12Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class NelderMeadSimplex extends AbstractSimplex {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java\n  * The internal line search optimizer is a {@link BrentOptimizer} with a\n  * convergence checker set to {@link SimpleUnivariateValueChecker}.\n  *\n- * @version $Id: PowellOptimizer.java 1413594 2012-11-26 13:16:39Z erans $\n+ * @version $Id$\n  * @since 2.2\n  */\n public class PowellOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java\n  *  MultivariateFunctionPenaltyAdapter}.\n  * </p>\n  *\n- * @version $Id: SimplexOptimizer.java 1397759 2012-10-13 01:12:58Z erans $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class SimplexOptimizer extends MultivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java\n  * <br/>\n  * Immutable class.\n  *\n- * @version $Id: Target.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public class Target implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java\n  * <br/>\n  * Immutable class.\n  *\n- * @version $Id: Weight.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 3.1\n  */\n public class Weight implements OptimizationData {\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java\n  * is faster but QR decomposition is more robust for difficult problems.\n  * </p>\n  *\n- * @version $Id: GaussNewtonOptimizer.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  *\n  */\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java\n  * <ol></td></tr>\n  * </table>\n  *\n- * @version $Id: LevenbergMarquardtOptimizer.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class LevenbergMarquardtOptimizer\n--- a/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java\n+++ b/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java\n  * This code is based on a Python implementation (from <em>SciPy</em>,\n  * module {@code optimize.py} v0.5).\n  *\n- * @version $Id: BracketFinder.java 1413186 2012-11-24 13:47:59Z erans $\n+ * @version $Id$\n  * @since 2.2\n  */\n public class BracketFinder {\n--- a/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java\n  *  <li>to ensure that the best point encountered is the one returned.</li>\n  * </ul>\n  *\n- * @version $Id: BrentOptimizer.java 1416643 2012-12-03 19:37:14Z tn $\n+ * @version $Id$\n  * @since 2.0\n  */\n public class BrentOptimizer extends UnivariateOptimizer {\n--- a/src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java\n+++ b/src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java\n  * has been set (see {@link #SimpleUnivariateValueChecker(double,double,int)\n  * this constructor}).\n  *\n- * @version $Id: SimpleUnivariateValueChecker.java 1413171 2012-11-24 11:11:10Z erans $\n+ * @version $Id$\n  * @since 3.1\n  */\n public class SimpleUnivariateValueChecker\n--- a/src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java\n+++ b/src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java\n  * point.\n  * This is a simple immutable container.\n  *\n- * @version $Id: UnivariatePointValuePair.java 1364392 2012-07-22 18:27:12Z tn $\n+ * @version $Id$\n  * @since 3.0\n  */\n public class UnivariatePointValuePair implements Serializable {", "timestamp": 1358602044, "metainfo": ""}