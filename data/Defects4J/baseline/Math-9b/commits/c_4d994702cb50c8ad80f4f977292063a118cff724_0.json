{"sha": "4d994702cb50c8ad80f4f977292063a118cff724", "log": "MATH-689 Method \"log(double base, double x)\" moved from \"MathUtils\" to \"FastMath\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n     }\n \n     /**\n+     * Computes the <a href=\"http://mathworld.wolfram.com/Logarithm.html\">\n+     * logarithm</a> in a given base.\n+     *\n+     * Returns {@code NaN} if either argument is negative.\n+     * If {@code base} is 0 and {@code x} is positive, 0 is returned.\n+     * If {@code base} is positive and {@code x} is 0,\n+     * {@code Double.NEGATIVE_INFINITY} is returned.\n+     * If both arguments are 0, the result is {@code NaN}.\n+     *\n+     * @param base Base of the logarithm, must be greater than 0.\n+     * @param x Argument, must be greater than 0.\n+     * @return the value of the logarithm, i.e. the number {@code y} such that\n+     * <code>base<sup>y</sup> = x</code>.\n+     * @since 1.2 (previously in {@code MathUtils}, moved as of version 3.0)\n+     */\n+    public static double log(double base, double x) {\n+        return log(x) / log(base);\n+    }\n+\n+    /**\n      * Power function.  Compute x^y.\n      *\n      * @param x   a double\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n      */\n     public static short indicator(final short x) {\n         return (x >= ZS) ? PS : NS;\n-    }\n-\n-    /**\n-     * <p>Returns the\n-     * <a href=\"http://mathworld.wolfram.com/Logarithm.html\">logarithm</a>\n-     * for base {@code b} of {@code x}.\n-     * </p>\n-     * <p>Returns {@code NaN} if either argument is negative. If\n-     * {@code base} is 0 and {@code x} is positive, 0 is returned.\n-     * If {@code base} is positive and {@code x} is 0,\n-     * {@code Double.NEGATIVE_INFINITY} is returned.  If both arguments\n-     * are 0, the result is {@code NaN}.</p>\n-     *\n-     * @param base the base of the logarithm, must be greater than 0\n-     * @param x argument, must be greater than 0\n-     * @return the value of the logarithm - the number y such that base^y = x.\n-     * @since 1.2\n-     */\n-    public static double log(double base, double x) {\n-        return FastMath.log(x)/FastMath.log(base);\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/math/util/FastMathTest.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTest.java\n         Assert.assertEquals(-1.0F, FastMath.signum(-2.0F), delta);\n         TestUtils.assertSame(Float.NaN, FastMath.signum(Float.NaN));\n     }\n+\n+    @Test\n+    public void testLogWithBase() {\n+        Assert.assertEquals(2.0, FastMath.log(2, 4), 0);\n+        Assert.assertEquals(3.0, FastMath.log(2, 8), 0);\n+        Assert.assertTrue(Double.isNaN(FastMath.log(-1, 1)));\n+        Assert.assertTrue(Double.isNaN(FastMath.log(1, -1)));\n+        Assert.assertTrue(Double.isNaN(FastMath.log(0, 0)));\n+        Assert.assertEquals(0, FastMath.log(0, 10), 0);\n+        Assert.assertEquals(Double.NEGATIVE_INFINITY, FastMath.log(10, 0), 0);\n+    }\n }\n--- a/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/java/org/apache/commons/math/util/MathUtilsTest.java\n     }\n \n     @Test\n-    public void testLog() {\n-        Assert.assertEquals(2.0, MathUtils.log(2, 4), 0);\n-        Assert.assertEquals(3.0, MathUtils.log(2, 8), 0);\n-        Assert.assertTrue(Double.isNaN(MathUtils.log(-1, 1)));\n-        Assert.assertTrue(Double.isNaN(MathUtils.log(1, -1)));\n-        Assert.assertTrue(Double.isNaN(MathUtils.log(0, 0)));\n-        Assert.assertEquals(0, MathUtils.log(0, 10), 0);\n-        Assert.assertEquals(Double.NEGATIVE_INFINITY, MathUtils.log(10, 0), 0);\n-    }\n-\n-    @Test\n     public void testNormalizeAngle() {\n         for (double a = -15.0; a <= 15.0; a += 0.1) {\n             for (double b = -15.0; b <= 15.0; b += 0.2) {", "timestamp": 1319581619, "metainfo": ""}