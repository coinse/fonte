{"sha": "87af8395994971b41698fd93f2be177ae3872fd8", "log": "Removed double[] solve(double[]) from EigenDecompositionImpl.Solver  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\n             this.realEigenvalues = realEigenvalues;\n             this.imagEigenvalues = imagEigenvalues;\n             this.eigenvectors = eigenvectors;\n-        }\n-\n-        /**\n-         * Solve the linear equation A &times; X = B for symmetric matrices A.\n-         * <p>\n-         * This method only find exact linear solutions, i.e. solutions for\n-         * which ||A &times; X - B|| is exactly 0.\n-         * </p>\n-         * @param b Right-hand side of the equation A &times; X = B\n-         * @return a Vector X that minimizes the two norm of A &times; X - B\n-         * @throws DimensionMismatchException if the matrices dimensions do not match.\n-         * @throws SingularMatrixException if the decomposed matrix is singular.\n-         */\n-        public double[] solve(final double[] b) {\n-\n-            if (!isNonSingular()) {\n-                throw new SingularMatrixException();\n-            }\n-\n-            final int m = realEigenvalues.length;\n-            if (b.length != m) {\n-                throw new DimensionMismatchException(b.length, m);\n-            }\n-\n-            final double[] bp = new double[m];\n-            final ArrayRealVector bVector = new ArrayRealVector(b, false);\n-            for (int i = 0; i < m; ++i) {\n-                final ArrayRealVector v = eigenvectors[i];\n-                final double[] vData = v.getDataRef();\n-                final double s = v.dotProduct(bVector) / realEigenvalues[i];\n-                for (int j = 0; j < m; ++j) {\n-                    bp[j] += s * vData[j];\n-                }\n-            }\n-\n-            return bp;\n-\n         }\n \n         /**", "timestamp": 1315289858, "metainfo": ""}