{"sha": "1b539aede8441fa34ae05c39d1ddc1f2b6e821d5", "log": "Split testPerformance() into new class  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTest.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTest.java\n         compareClassMethods( FastMath.class, StrictMath.class);\n     }\n \n-    @Ignore\n-    @Test\n-    public void testPerformance() {\n-        final int numberOfRuns = 10000000;\n-        for (int j = 0; j < 10; j++) {\n-            double x = 0;\n-            long time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.log \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.log \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.pow(Math.PI + i / 1e6, i / 1e6);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.pow \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.pow(Math.PI + i / 1e6, i / 1e6);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.pow \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.exp(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.exp \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.exp(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.exp \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.sin(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.sin \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.sin(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.sin \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.asin(i / 10000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.asin \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.asin(i / 10000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.asin \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.cos(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.cos \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.cos(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.cos \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.acos(i / 10000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.acos \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.acos(i / 10000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.acos \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.tan(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.tan \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.tan(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.tan \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.atan(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.atan \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.atan(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.atan \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.cbrt(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.cbrt \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.cbrt(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.cbrt \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.cosh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.cosh \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.cosh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.cosh \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.sinh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.sinh \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.sinh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.sinh \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.tanh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.tanh \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.tanh(i / 1000000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.tanh \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += StrictMath.expm1(-i / 100000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.print(\"StrictMath.expm1 \" + time + \"\\t\" + x + \"\\t\");\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.expm1(-i / 100000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.expm1 \" + time + \"\\t\" + x);\n-\n-            x = 0;\n-            time = System.currentTimeMillis();\n-            for (int i = 0; i < numberOfRuns; i++)\n-                x += FastMath.expm1(-i / 100000.0);\n-            time = System.currentTimeMillis() - time;\n-            System.out.println(\"FastMath.expm1 \" + time + \"\\t\" + x);\n-\n-        }\n-    }\n-\n }\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.math.util;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Performance tests for FastMath.\n+ * Not enabled by default, as the class does not have Test in its name.\n+ * \n+ * Invoke by running {@code mvn test -Dtest=FastMathTestPerformance}\n+ */\n+public class FastMathTestPerformance {\n+    @Test\n+    public void testPerformance() {\n+        final int numberOfRuns = 10000000;\n+        for (int j = 0; j < 10; j++) {\n+            double x = 0;\n+            long time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.log \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.log(Math.PI + i/* 1.0 + i/1e9 */);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.log \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.pow(Math.PI + i / 1e6, i / 1e6);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.pow \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.pow(Math.PI + i / 1e6, i / 1e6);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.pow \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.exp(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.exp \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.exp(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.exp \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.sin(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.sin \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.sin(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.sin \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.asin(i / 10000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.asin \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.asin(i / 10000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.asin \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.cos(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.cos \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.cos(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.cos \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.acos(i / 10000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.acos \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.acos(i / 10000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.acos \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.tan(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.tan \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.tan(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.tan \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.atan(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.atan \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.atan(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.atan \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.cbrt(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.cbrt \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.cbrt(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.cbrt \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.cosh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.cosh \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.cosh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.cosh \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.sinh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.sinh \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.sinh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.sinh \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.tanh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.tanh \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.tanh(i / 1000000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.tanh \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += StrictMath.expm1(-i / 100000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.print(\"StrictMath.expm1 \" + time + \"\\t\" + x + \"\\t\");\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.expm1(-i / 100000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.expm1 \" + time + \"\\t\" + x);\n+\n+            x = 0;\n+            time = System.currentTimeMillis();\n+            for (int i = 0; i < numberOfRuns; i++)\n+                x += FastMath.expm1(-i / 100000.0);\n+            time = System.currentTimeMillis() - time;\n+            System.out.println(\"FastMath.expm1 \" + time + \"\\t\" + x);\n+\n+        }\n+    }\n+    \n+}", "timestamp": 1295797472, "metainfo": ""}