{"sha": "a12ed0e81638d51913b3dfc7a099c80ed2e7eab0", "log": "Javadoc formatting cleanup.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java\n+++ b/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java\n      * @param measMatrix the measurement matrix\n      * @param measNoise the measurement noise matrix\n      */\n-    public DefaultMeasurementModel(final double[][] measMatrix,\n-            final double[][] measNoise) {\n-        this(new Array2DRowRealMatrix(measMatrix),\n-                new Array2DRowRealMatrix(measNoise));\n+    public DefaultMeasurementModel(final double[][] measMatrix, final double[][] measNoise) {\n+        this(new Array2DRowRealMatrix(measMatrix), new Array2DRowRealMatrix(measNoise));\n     }\n \n     /**\n      * @param measMatrix the measurement matrix\n      * @param measNoise the measurement noise matrix\n      */\n-    public DefaultMeasurementModel(final RealMatrix measMatrix,\n-            final RealMatrix measNoise) {\n+    public DefaultMeasurementModel(final RealMatrix measMatrix, final RealMatrix measNoise) {\n         this.measurementMatrix = measMatrix;\n         this.measurementNoise = measNoise;\n     }\n--- a/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java\n+++ b/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java\n     private RealMatrix errorCovariance;\n \n     /**\n-     * Creates a new Kalman filter with the given process and measurement\n-     * models.\n+     * Creates a new Kalman filter with the given process and measurement models.\n      *\n      * @param process\n      *            the model defining the underlying process dynamics", "timestamp": 1346872937, "metainfo": ""}