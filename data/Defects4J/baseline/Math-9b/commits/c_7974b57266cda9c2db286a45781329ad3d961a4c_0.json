{"sha": "7974b57266cda9c2db286a45781329ad3d961a4c", "log": "Added chisquare test assertion.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/TestUtils.java\n+++ b/src/test/java/org/apache/commons/math/TestUtils.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n+import java.text.DecimalFormat;\n \n import junit.framework.Assert;\n import junit.framework.AssertionFailedError;\n import org.apache.commons.math.complex.ComplexFormat;\n import org.apache.commons.math.linear.FieldMatrix;\n import org.apache.commons.math.linear.RealMatrix;\n+import org.apache.commons.math.stat.inference.ChiSquareTest;\n+import org.apache.commons.math.stat.inference.ChiSquareTestImpl;\n \n /**\n  * @version $Revision$ $Date$\n         }\n         return sumsq;\n     }\n+    \n+    /**\n+     * Asserts the null hypothesis for a ChiSquare test.  Fails and dumps arguments and test\n+     * statistics if the null hypothesis can be rejected with confidence 100 * (1 - alpha)%\n+     * \n+     * @param valueLabels\n+     * @param expected expected counts\n+     * @param observed observed counts\n+     * @param alpha significance level of the test\n+     */\n+    public static void assertChiSquareAccept(String[] valueLabels, double[] expected, long[] observed, double alpha) throws Exception {\n+        ChiSquareTest chiSquareTest = new ChiSquareTestImpl();\n+        try {\n+            // Fail if we can reject null hypothesis that distributions are the same\n+            Assert.assertFalse(chiSquareTest.chiSquareTest(expected, observed, alpha));\n+        } catch (AssertionFailedError ex) {\n+            StringBuffer msgBuffer = new StringBuffer();\n+            DecimalFormat df = new DecimalFormat(\"#.##\");\n+            msgBuffer.append(\"Chisquare test failed\");\n+            msgBuffer.append(\" p-value = \");\n+            msgBuffer.append(chiSquareTest.chiSquareTest(expected, observed));\n+            msgBuffer.append(\" chisquare statistic = \");\n+            msgBuffer.append(chiSquareTest.chiSquare(expected, observed));\n+            msgBuffer.append(\". \\n\");\n+            msgBuffer.append(\"value\\texpected\\tobserved\\n\");\n+            for (int i = 0; i < expected.length; i++) {\n+                msgBuffer.append(valueLabels[i]);\n+                msgBuffer.append(\"\\t\");\n+                msgBuffer.append(df.format(expected[i]));\n+                msgBuffer.append(\"\\t\\t\");\n+                msgBuffer.append(observed[i]);\n+                msgBuffer.append(\"\\n\");\n+            }\n+            msgBuffer.append(\"This test can fail randomly due to sampling error with probability \");\n+            msgBuffer.append(alpha);\n+            msgBuffer.append(\".\");\n+            Assert.fail(msgBuffer.toString());\n+        }   \n+    }\n+    \n+    /**\n+     * Asserts the null hypothesis for a ChiSquare test.  Fails and dumps arguments and test\n+     * statistics if the null hypothesis can be rejected with confidence 100 * (1 - alpha)%\n+     * \n+     * @param values\n+     * @param expected expected counts\n+     * @param observed observed counts\n+     * @param alpha significance level of the test\n+     */\n+    public static void assertChiSquareAccept(int[] values, double[] expected, long[] observed, double alpha) throws Exception {\n+        String[] labels = new String[values.length];\n+        for (int i = 0; i < values.length; i++) {\n+            labels[i] = Integer.toString(values[i]);\n+        }\n+        assertChiSquareAccept(labels, expected, observed, alpha);\n+    }\n+    \n+    /**\n+     * Asserts the null hypothesis for a ChiSquare test.  Fails and dumps arguments and test\n+     * statistics if the null hypothesis can be rejected with confidence 100 * (1 - alpha)%\n+     * \n+     * @param values\n+     * @param expected expected counts\n+     * @param observed observed counts\n+     * @param alpha significance level of the test\n+     */\n+    public static void assertChiSquareAccept(double[] values, double[] expected, long[] observed, double alpha) throws Exception {\n+        String[] labels = new String[values.length];\n+        for (int i = 0; i < values.length; i++) {\n+            labels[i] = Double.toString(values[i]);\n+        }\n+        assertChiSquareAccept(labels, expected, observed, alpha);\n+    }\n \n }", "timestamp": 1275239007, "metainfo": ""}