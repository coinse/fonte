{"sha": "1bf4ee0c04235edea27dc7878b6763b9d12834e4", "log": "MATH-697 Check that the given starting point is within the bounds.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java\n      * if the maximal number of evaluations is exceeded.\n      * @throws org.apache.commons.math.exception.NullArgumentException if\n      * {@code f}, {@code goalType} or {@code startPoint} is {@code null}.\n+     * @throws org.apache.commons.math.exception.OutOfRangeException if any\n+     * of the initial values is out of bounds.\n      */\n     RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,\n                                 double[] startPoint,\n--- a/src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java\n import org.apache.commons.math.exception.TooManyEvaluationsException;\n import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.exception.DimensionMismatchException;\n+import org.apache.commons.math.exception.OutOfRangeException;\n import org.apache.commons.math.analysis.MultivariateRealFunction;\n import org.apache.commons.math.optimization.BaseMultivariateRealOptimizer;\n import org.apache.commons.math.optimization.GoalType;\n             upper.length != dim) {\n             throw new DimensionMismatchException(upper.length, dim);\n         }\n+        for (int i = 0; i < dim; i++) {\n+            final double v = startPoint[i];\n+            final double lo = lower[i];\n+            final double hi = upper[i];\n+            if (v < lo ||\n+                v > hi) {\n+                throw new OutOfRangeException(v, lo, hi);\n+            }\n+        }\n \n         // Reset.\n         evaluations.setMaximalCount(maxEval);", "timestamp": 1319846072, "metainfo": ""}