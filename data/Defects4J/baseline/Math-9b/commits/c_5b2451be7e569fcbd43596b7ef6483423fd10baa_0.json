{"sha": "5b2451be7e569fcbd43596b7ef6483423fd10baa", "log": "MATH-566 Removed unused \"MathRuntimeException\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java\n+++ b/src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java\n      * @param xval Arguments for the interpolation points.\n      * @param yval Values for the interpolation points.\n      * @return a function which interpolates the dataset.\n-     * @throws org.apache.commons.math.exception.MathRuntimeException if the\n-     * arguments violate assumptions made by the interpolation algorithm.\n+     * @throws org.apache.commons.math.exception.MathIllegalArgumentException\n+     * if the arguments violate assumptions made by the interpolation\n+     * algorithm.\n      */\n     UnivariateRealFunction interpolate(double xval[], double yval[]);\n }\n--- a/src/main/java/org/apache/commons/math/exception/MathThrowable.java\n+++ b/src/main/java/org/apache/commons/math/exception/MathThrowable.java\n *\n * @version $Id$\n * @since 2.2\n+* @deprecated To be removed in 3.0. Not deleted right-away because\n+* the Javadoc is inherited in old \"o.a.c.math.MathException\" and\n+* \"o.a.c.math.MathRuntimeException\" classes.\n */\n public interface MathThrowable {\n     /**\n--- a/src/test/java/org/apache/commons/math/RetryRunnerTest.java\n+++ b/src/test/java/org/apache/commons/math/RetryRunnerTest.java\n \n import java.util.Random;\n \n-import org.apache.commons.math.exception.MathRuntimeException;\n+import org.apache.commons.math.exception.MathIllegalStateException;\n \n import org.junit.Test;\n import org.junit.runner.RunWith;\n     /**\n      * Shows that an always failing test will fail even if it is retried.\n      */\n-    @Test(expected=MathRuntimeException.class)\n+    @Test(expected=MathIllegalStateException.class)\n     @Retry\n     public void testRetryFailAlways() {\n-        throw new MathRuntimeException();\n+        throw new MathIllegalStateException();\n     }\n \n     /**\n     @Retry(100)\n     public void testRetryFailSometimes() {\n         if (rng.nextBoolean()) {\n-            throw new MathRuntimeException();\n+            throw new MathIllegalStateException();\n         }\n     }\n }", "timestamp": 1310570901, "metainfo": ""}