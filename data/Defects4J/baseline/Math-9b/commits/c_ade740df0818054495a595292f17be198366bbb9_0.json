{"sha": "ade740df0818054495a595292f17be198366bbb9", "log": "Removed dependency on ordering of roots using TestUtils.assertContains.  ", "commit": "\n--- a/src/test/org/apache/commons/math/analysis/LaguerreSolverTest.java\n+++ b/src/test/org/apache/commons/math/analysis/LaguerreSolverTest.java\n package org.apache.commons.math.analysis;\n \n import org.apache.commons.math.MathException;\n+import org.apache.commons.math.TestUtils;\n import org.apache.commons.math.complex.Complex;\n import junit.framework.TestCase;\n \n         LaguerreSolver solver = new LaguerreSolver(f);\n         result = solver.solveAll(coefficients, initial);\n \n-        // The order of roots returned by solveAll() depends on\n-        // initial value, solveAll() does no sorting.\n         expected = new Complex(0.0, -2.0);\n         tolerance = Math.max(solver.getAbsoluteAccuracy(),\n                     Math.abs(expected.abs() * solver.getRelativeAccuracy()));\n-        assertEquals(0.0, (expected.subtract(result[0])).abs(), tolerance);\n+        TestUtils.assertContains(result, expected, tolerance);\n \n         expected = new Complex(0.0, 2.0);\n         tolerance = Math.max(solver.getAbsoluteAccuracy(),\n                     Math.abs(expected.abs() * solver.getRelativeAccuracy()));\n-        assertEquals(0.0, (expected.subtract(result[1])).abs(), tolerance);\n+        TestUtils.assertContains(result, expected, tolerance);\n \n         expected = new Complex(0.5, 0.5 * Math.sqrt(3.0));\n         tolerance = Math.max(solver.getAbsoluteAccuracy(),\n                     Math.abs(expected.abs() * solver.getRelativeAccuracy()));\n-        assertEquals(0.0, (expected.subtract(result[3])).abs(), tolerance);\n+        TestUtils.assertContains(result, expected, tolerance);\n \n         expected = new Complex(-1.0, 0.0);\n         tolerance = Math.max(solver.getAbsoluteAccuracy(),\n                     Math.abs(expected.abs() * solver.getRelativeAccuracy()));\n-        assertEquals(0.0, (expected.subtract(result[4])).abs(), tolerance);\n-\n+        TestUtils.assertContains(result, expected, tolerance);\n+        \n         expected = new Complex(0.5, -0.5 * Math.sqrt(3.0));\n         tolerance = Math.max(solver.getAbsoluteAccuracy(),\n                     Math.abs(expected.abs() * solver.getRelativeAccuracy()));\n-        assertEquals(0.0, (expected.subtract(result[2])).abs(), tolerance);\n+        TestUtils.assertContains(result, expected, tolerance);\n     }\n \n     /**", "timestamp": 1135627254, "metainfo": ""}