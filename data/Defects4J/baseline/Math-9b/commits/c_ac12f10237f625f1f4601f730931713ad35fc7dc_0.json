{"sha": "ac12f10237f625f1f4601f730931713ad35fc7dc", "log": "reduced test size  ", "commit": "\n--- a/src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java\n+++ b/src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java\n     }\n \n     public void testOperateLarge() {\n-        int p = (3 * DenseFieldMatrix.BLOCK_SIZE) / 2;\n-        int q = (5 * DenseFieldMatrix.BLOCK_SIZE) / 2;\n-        int r =  2 * DenseFieldMatrix.BLOCK_SIZE;\n+        int p = (11 * DenseFieldMatrix.BLOCK_SIZE) / 10;\n+        int q = (11 * DenseFieldMatrix.BLOCK_SIZE) / 10;\n+        int r =  DenseFieldMatrix.BLOCK_SIZE / 2;\n         Random random = new Random(111007463902334l);\n         FieldMatrix<Fraction> m1 = createRandomMatrix(random, p, q);\n         FieldMatrix<Fraction> m2 = createRandomMatrix(random, q, r);\n     }\n \n     public void testOperatePremultiplyLarge() {\n-        int p = (3 * DenseFieldMatrix.BLOCK_SIZE) / 2;\n-        int q = (5 * DenseFieldMatrix.BLOCK_SIZE) / 2;\n-        int r =  2 * DenseFieldMatrix.BLOCK_SIZE;\n+        int p = (11 * DenseFieldMatrix.BLOCK_SIZE) / 10;\n+        int q = (11 * DenseFieldMatrix.BLOCK_SIZE) / 10;\n+        int r =  DenseFieldMatrix.BLOCK_SIZE / 2;\n         Random random = new Random(111007463902334l);\n         FieldMatrix<Fraction> m1 = createRandomMatrix(random, p, q);\n         FieldMatrix<Fraction> m2 = createRandomMatrix(random, q, r);", "timestamp": 1240842745, "metainfo": ""}