{"sha": "6cb6e91df66f822a8077ef6ed3c88970fd6c893b", "log": "Fixed javadoc errors. One-sided t-test significance adjustment was reversed in javadoc for boolean-valued test methods. BZ #34448 Reported by: Gilles Gaillard   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/TTest.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TTest.java\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be rejected with \n      * confidence <code>1 - alpha</code>.  To perform a 1-sided test, use \n-     * <code>alpha / 2</code>\n+     * <code>alpha * 2</code>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * The validity of the test depends on the assumptions of the parametric\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be \n      * rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2</code>\n+     * perform a 1-sided test, use <code>alpha * 2</code>\n      * <p>\n      * <strong>Examples:</strong><br><ol>\n      * <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at\n      * <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>\n      * at the 99% level, first verify that the measured sample mean is less \n      * than <code>mu</code> and then use \n-     * <br><code>tTest(mu, sample, 0.005) </code>\n+     * <br><code>tTest(mu, sample, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be rejected with\n      * confidence <code>1 - alpha</code>.  To  perform a 1-sided test, use\n-     * <code>alpha / 2.</code>\n+     * <code>alpha * 2.</code>\n      * <p>\n      * <strong>Examples:</strong><br><ol>\n      * <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at\n      * <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>\n      * at the 99% level, first verify that the measured sample mean is less \n      * than <code>mu</code> and then use \n-     * <br><code>tTest(mu, sampleStats, 0.005) </code>\n+     * <br><code>tTest(mu, sampleStats, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis that the means are\n      * equal can be rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2</code>\n+     * perform a 1-sided test, use <code>alpha * 2</code>\n      * <p>\n      * See {@link #t(double[], double[])} for the formula used to compute the\n      * t-statistic.  Degrees of freedom are approximated using the\n      * <br><code>tTest(sample1, sample2, 0.05). </code>\n      * </li>\n      * <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>,\n-     * first verify that the measured  mean of <code>sample 1</code> is less\n-     * than the mean of <code>sample 2</code> and then use \n-     * <br><code>tTest(sample1, sample2, 0.005) </code>\n+     * at the 99% level, first verify that the measured  mean of <code>sample 1</code>\n+     * is less than the mean of <code>sample 2</code> and then use \n+     * <br><code>tTest(sample1, sample2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis that the means are\n      * equal can be rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2.</code>  To perform the test\n+     * perform a 1-sided test, use <code>alpha * 2.</code>  To perform the test\n      * without the assumption of equal subpopulation variances, use \n      * {@link #tTest(double[], double[], double)}.\n      * <p>\n      * at the 99% level, first verify that the measured mean of \n      * <code>sample 1</code> is less than the mean of <code>sample 2</code>\n      * and then use\n-     * <br><code>tTest(sample1, sample2, 0.005) </code>\n+     * <br><code>tTest(sample1, sample2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis that the means are\n      * equal can be rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2</code>\n+     * perform a 1-sided test, use <code>alpha * 2</code>\n      * <p>\n      * See {@link #t(double[], double[])} for the formula used to compute the\n      * t-statistic.  Degrees of freedom are approximated using the\n      * at the 99% level,  first verify that the measured mean of  \n      * <code>sample 1</code> is less than  the mean of <code>sample 2</code>\n      * and then use \n-     * <br><code>tTest(sampleStats1, sampleStats2, 0.005) </code>\n+     * <br><code>tTest(sampleStats1, sampleStats2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n--- a/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TTestImpl.java\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be rejected with \n      * confidence <code>1 - alpha</code>.  To perform a 1-sided test, use \n-     * <code>alpha / 2</code>\n+     * <code>alpha * 2</code>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * The validity of the test depends on the assumptions of the parametric\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be \n      * rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2</code>\n+     * perform a 1-sided test, use <code>alpha * 2</code>\n      * <p>\n      * <strong>Examples:</strong><br><ol>\n      * <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at\n      * <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>\n      * at the 99% level, first verify that the measured sample mean is less \n      * than <code>mu</code> and then use \n-     * <br><code>tTest(mu, sample, 0.005) </code>\n+     * <br><code>tTest(mu, sample, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis can be rejected with\n      * confidence <code>1 - alpha</code>.  To  perform a 1-sided test, use\n-     * <code>alpha / 2.</code>\n+     * <code>alpha * 2.</code>\n      * <p>\n      * <strong>Examples:</strong><br><ol>\n      * <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at\n      * <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>\n      * at the 99% level, first verify that the measured sample mean is less \n      * than <code>mu</code> and then use \n-     * <br><code>tTest(mu, sampleStats, 0.005) </code>\n+     * <br><code>tTest(mu, sampleStats, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * the 95% level,  use \n      * <br><code>tTest(sample1, sample2, 0.05). </code>\n      * </li>\n-     * <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>,\n-     * first verify that the measured  mean of <code>sample 1</code> is less\n-     * than the mean of <code>sample 2</code> and then use \n-     * <br><code>tTest(sample1, sample2, 0.005) </code>\n+     * <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code> at\n+     * the 99% level, first verify that the measured  mean of <code>sample 1</code>\n+     * is less than the mean of <code>sample 2</code> and then use \n+     * <br><code>tTest(sample1, sample2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis that the means are\n      * equal can be rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2.</code>  To perform the test\n+     * perform a 1-sided test, use <code>alpha * 2.</code>  To perform the test\n      * without the assumption of equal subpopulation variances, use \n      * {@link #tTest(double[], double[], double)}.\n      * <p>\n      * at the 99% level, first verify that the measured mean of \n      * <code>sample 1</code> is less than the mean of <code>sample 2</code>\n      * and then use\n-     * <br><code>tTest(sample1, sample2, 0.005) </code>\n+     * <br><code>tTest(sample1, sample2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>\n      * <p>\n      * Returns <code>true</code> iff the null hypothesis that the means are\n      * equal can be rejected with confidence <code>1 - alpha</code>.  To \n-     * perform a 1-sided test, use <code>alpha / 2</code>\n+     * perform a 1-sided test, use <code>alpha * 2</code>\n      * <p>\n      * See {@link #t(double[], double[])} for the formula used to compute the\n      * t-statistic.  Degrees of freedom are approximated using the\n      * at the 99% level,  first verify that the measured mean of  \n      * <code>sample 1</code> is less than  the mean of <code>sample 2</code>\n      * and then use \n-     * <br><code>tTest(sampleStats1, sampleStats2, 0.005) </code>\n+     * <br><code>tTest(sampleStats1, sampleStats2, 0.02) </code>\n      * </li></ol>\n      * <p>\n      * <strong>Usage Note:</strong><br>", "timestamp": 1113688185, "metainfo": ""}