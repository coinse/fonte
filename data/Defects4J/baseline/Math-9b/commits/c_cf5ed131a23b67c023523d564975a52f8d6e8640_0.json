{"sha": "cf5ed131a23b67c023523d564975a52f8d6e8640", "log": "removed tabs  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java\n+++ b/src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java\n             nordsieck = new Array2DRowRealMatrix(interpolator.nordsieck.getDataRef(), true);\n         }\n         if (interpolator.stateVariation != null) {\n-        \tstateVariation = interpolator.stateVariation.clone();\n+            stateVariation = interpolator.stateVariation.clone();\n         }\n     }\n \n      */\n     public double[] getInterpolatedStateVariation()\n         throws DerivativeException {\n-    \t// compute and ignore interpolated state\n-    \t// to make sure state variation is computed as a side effect\n-    \tgetInterpolatedState();\n-    \treturn stateVariation;\n+        // compute and ignore interpolated state\n+        // to make sure state variation is computed as a side effect\n+        getInterpolatedState();\n+        return stateVariation;\n     }\n \n     /** {@inheritDoc} */\n         }\n \n         for (int j = 0; j < currentState.length; ++j) {\n-        \tstateVariation[j] += scaled[j] * normalizedAbscissa;\n-        \tinterpolatedState[j] = currentState[j] + stateVariation[j];\n+            stateVariation[j] += scaled[j] * normalizedAbscissa;\n+            interpolatedState[j] = currentState[j] + stateVariation[j];\n             interpolatedDerivatives[j] =\n                 (interpolatedDerivatives[j] + scaled[j] * normalizedAbscissa) / x;\n         }", "timestamp": 1246950443, "metainfo": ""}