{"sha": "cc6b08fa03d3d28fce99ba7ba78b6912e13e18ad", "log": "added getExponent methods to FastMath JIRA: MATH-497  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n  * The following methods are found in StrictMath since 1.6 only\n  * <ul>\n  * <li>{@link #copySign(double, double)}</li>\n+ * <li>{@link #getExponent(double)}</li>\n  * <li>{@link #nextAfter(double,double)}</li>\n  * <li>{@link #nextUp(double)}</li>\n  * <li>{@link #copySign(float, float)}</li>\n+ * <li>{@link #getExponent(float)}</li>\n  * <li>{@link #nextUp(float)}</li>\n  * </ul>\n  * @version $Revision$ $Date$\n         }\n         return -magnitude; // flip sign\n     }\n+\n+    /**\n+     * Return the exponent of a double number, removing the bias.\n+     * <p>\n+     * For double numbers of the form 2<sup>x</sup>, the unbiased\n+     * exponent is exactly x.\n+     * </p>\n+     * @param d number from which exponent is requested\n+     * @return exponent for d in IEEE754 representation, without bias\n+     */\n+    public static int getExponent(final double d) {\n+        return (int) ((Double.doubleToLongBits(d) >>> 52) & 0x7ff) - 1023;\n+    }\n+\n+    /**\n+     * Return the exponent of a float number, removing the bias.\n+     * <p>\n+     * For float numbers of the form 2<sup>x</sup>, the unbiased\n+     * exponent is exactly x.\n+     * </p>\n+     * @param f number from which exponent is requested\n+     * @return exponent for d in IEEE754 representation, without bias\n+     */\n+    public static int getExponent(final float f) {\n+        return (int) ((Float.floatToIntBits(f) >>> 23) & 0xff) - 127;\n+    }\n+\n }", "timestamp": 1295778524, "metainfo": ""}