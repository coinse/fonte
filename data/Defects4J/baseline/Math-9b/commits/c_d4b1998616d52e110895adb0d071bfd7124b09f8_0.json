{"sha": "d4b1998616d52e110895adb0d071bfd7124b09f8", "log": "Removed unnecessary return statements, reported by pmd.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java\n+++ b/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java\n import org.apache.commons.math3.util.MathArrays;\n \n /**\n- * <p>This class is a concrete implementation of the {@link UpdatingMultipleLinearRegression} interface.</p>\n+ * This class is a concrete implementation of the {@link UpdatingMultipleLinearRegression} interface.\n  *\n  * <p>The algorithm is described in: <pre>\n  * Algorithm AS 274: Least Squares Routines to Supplement Those of Gentleman\n         } else {\n             this.epsilon = -errorTolerance;\n         }\n-        return;\n     }\n \n     /**\n             include(tmp, 1.0, y);\n         }\n         ++nobs;\n-        return;\n \n     }\n \n         for (int i = 0; i < x.length; i++) {\n             this.addObservation(x[i], y[i]);\n         }\n-        return;\n     }\n \n     /**\n             }\n         }\n         sserr = smartAdd(sserr, w * y * y);\n-        return;\n     }\n \n     /**\n         this.sumsqy = 0.0;\n         this.rss_set = false;\n         this.tol_set = false;\n-        return;\n     }\n \n     /**\n             tol[col] = eps * total;\n         }\n         tol_set = true;\n-        return;\n     }\n \n     /**\n                 }\n             }\n         }\n-        return;\n     }\n \n     /**\n             rss[i - 1] = total;\n         }\n         rss_set = true;\n-        return;\n     }\n \n     /**\n                 pos -= nreq - row;\n             }\n         }\n-        return;\n     }\n \n     /**", "timestamp": 1342977562, "metainfo": ""}