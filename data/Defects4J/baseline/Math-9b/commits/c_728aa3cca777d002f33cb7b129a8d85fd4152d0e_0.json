{"sha": "728aa3cca777d002f33cb7b129a8d85fd4152d0e", "log": "Added test cases corresponding to examples in the User Guide.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java\n+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java\n /**\n  * Test cases for the {@link Frequency} class.\n  *\n- * @version $Revision: 1.11 $ $Date: 2004/02/21 21:35:17 $\n+ * @version $Revision: 1.12 $ $Date: 2004/03/07 00:57:11 $\n  */\n \n public final class FrequencyTest extends TestCase {\n         assertEquals(\"zero cumulative frequency\", 0, f.getCumFreq(0));\n         assertEquals(\"one cumulative frequency\", 3,  f.getCumFreq(1));\n         assertEquals(\"two cumulative frequency\", 4,  f.getCumFreq(2));\n-        assertEquals(\"two cumulative frequency\", 4,  f.getCumFreq(5));\n-        assertEquals(\"two cumulative frequency\", 0,  f.getCumFreq(\"foo\"));\n+        assertEquals(\"five cumulative frequency\", 4,  f.getCumFreq(5));\n+        assertEquals(\"foo cumulative frequency\", 0,  f.getCumFreq(\"foo\"));\n+        \n         f.clear();\n         assertEquals(\"total count\",0,f.getSumFreq());\n+        \n+        // userguide examples -------------------------------------------------------------------\n+        f.addValue(\"one\");\n+        f.addValue(\"One\");\n+        f.addValue(\"oNe\");\n+        f.addValue(\"Z\");\n+        assertEquals(\"one cumulative frequency\", 1 ,  f.getCount(\"one\"));\n+        assertEquals(\"Z cumulative pct\", 0.5,  f.getCumPct(\"Z\"), tolerance);\n+        assertEquals(\"z cumulative pct\", 1.0,  f.getCumPct(\"z\"), tolerance);\n+        assertEquals(\"Ot cumulative pct\", 0.25,  f.getCumPct(\"Ot\"), tolerance);\n+        f.clear();\n+        \n+        f = null;\n+        f = new Frequency(String.CASE_INSENSITIVE_ORDER);\n+        f.addValue(\"one\");\n+        f.addValue(\"One\");\n+        f.addValue(\"oNe\");\n+        f.addValue(\"Z\");\n+        assertEquals(\"one count\", 3 ,  f.getCount(\"one\"));\n+        assertEquals(\"Z cumulative pct -- case insensitive\", 1 ,  f.getCumPct(\"Z\"), tolerance);\n+        assertEquals(\"z cumulative pct -- case insensitive\", 1 ,  f.getCumPct(\"z\"), tolerance);\n     }     \n     \n     /** test pcts */", "timestamp": 1078621031, "metainfo": ""}