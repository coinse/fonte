{"sha": "b768aa10c3f734a2560e46722ca14526760337b3", "log": "MATH-839 Created new method \"probability(double,double)\" in implementations were it it overridden, and deprecated \"cumulativeProbability(double,double)\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java\n         return 0.5 + 0.5 * Erf.erf(dev / (shape * SQRT2));\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     *\n+     * @deprecated See {@link RealDistribution#cumulativeProbability(double,double)}\n+     */\n+    @Override@Deprecated\n+    public double cumulativeProbability(double x0, double x1)\n+        throws NumberIsTooLargeException {\n+        return probability(x0, x1);\n+    }\n+\n     /** {@inheritDoc} */\n     @Override\n-    public double cumulativeProbability(double x0, double x1)\n+    public double probability(double x0,\n+                              double x1)\n         throws NumberIsTooLargeException {\n         if (x0 > x1) {\n             throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                 x0, x1, true);\n         }\n         if (x0 <= 0 || x1 <= 0) {\n-            return super.cumulativeProbability(x0, x1);\n+            return super.probability(x0, x1);\n         }\n         final double denom = shape * SQRT2;\n         final double v0 = (FastMath.log(x0) - scale) / denom;\n--- a/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java\n         return 0.5 * (1 + Erf.erf(dev / (standardDeviation * SQRT2)));\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     *\n+     * @deprecated See {@link RealDistribution#cumulativeProbability(double,double)}\n+     */\n+    @Override@Deprecated\n+    public double cumulativeProbability(double x0, double x1)\n+        throws NumberIsTooLargeException {\n+        return probability(x0, x1);\n+    }\n+\n     /** {@inheritDoc} */\n     @Override\n-    public double cumulativeProbability(double x0, double x1)\n+    public double probability(double x0,\n+                              double x1)\n         throws NumberIsTooLargeException {\n         if (x0 > x1) {\n             throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,", "timestamp": 1344108296, "metainfo": ""}