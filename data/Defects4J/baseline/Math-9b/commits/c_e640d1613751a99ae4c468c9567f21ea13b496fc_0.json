{"sha": "e640d1613751a99ae4c468c9567f21ea13b496fc", "log": "Fixed an error in CorrelatedRandomVectorGenerator leading to a component of the generated vector being constant JIRA: MATH-226  ", "commit": "\n--- a/src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n+++ b/src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java\n         // build the root matrix\n         root = new RealMatrixImpl(order, rank);\n         for (int i = 0; i < order; ++i) {\n-            System.arraycopy(b[i], 0, root.getDataRef()[swap[i]], 0, rank);\n+            System.arraycopy(b[i], 0, root.getDataRef()[index[i]], 0, rank);\n         }\n \n     }\n--- a/src/test/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n+++ b/src/test/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java\n \n     public void testRank() {\n         assertEquals(3, generator.getRank());\n+    }\n+\n+    public void testMath226()\n+        throws DimensionMismatchException, NotPositiveDefiniteMatrixException {\n+        double[] mean = { 1, 1, 10, 1 };\n+        double[][] cov = {\n+                { 1, 3, 2, 6 },\n+                { 3, 13, 16, 2 },\n+                { 2, 16, 38, -1 },\n+                { 6, 2, -1, 197 }\n+        };\n+        RealMatrix covRM = new RealMatrixImpl(cov, false);\n+        JDKRandomGenerator jg = new JDKRandomGenerator();\n+        jg.setSeed(5322145245211l);\n+        NormalizedRandomGenerator rg = new GaussianRandomGenerator(jg);\n+        CorrelatedRandomVectorGenerator sg =\n+            new CorrelatedRandomVectorGenerator(mean, covRM, 0.00001, rg);\n+\n+        for (int i = 0; i < 10; i++) {\n+            double[] generated = sg.nextVector();\n+            assertTrue(Math.abs(generated[0] - 1) > 0.1);\n+        }\n+\n     }\n \n     public void testRootMatrix() {", "timestamp": 1221598828, "metainfo": ""}