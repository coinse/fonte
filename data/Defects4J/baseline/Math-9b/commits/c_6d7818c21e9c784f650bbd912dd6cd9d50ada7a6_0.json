{"sha": "6d7818c21e9c784f650bbd912dd6cd9d50ada7a6", "log": "fixed misleading number formats in error messages for adaptive stepsize integrators JIRA: MATH-291  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/MessagesResources_fr.java\n+++ b/src/main/java/org/apache/commons/math/MessagesResources_fr.java\n       \"impossible de rendre la matrice orthogonale en {0} it\\u00e9rations\" },\n \n     // org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator\n-    { \"minimal step size ({0}) reached, integration needs {1}\",\n-      \"pas minimal ({0}) atteint, l''int\\u00e9gration n\\u00e9cessite {1}\" },\n+    { \"minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}\",\n+      \"pas minimal ({0,number,0.00E00}) atteint, l''int\\u00e9gration n\\u00e9cessite {1,number,0.00E00}\" },\n     { \"dimensions mismatch: state vector has dimension {0},\" +\n       \" absolute tolerance vector has dimension {1}\",\n       \"incompatibilit\\u00e9 de dimensions entre le vecteur d''\\u00e9tat ({0}),\" +\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java\n               filteredH = forward ? minStep : -minStep;\n           } else {\n               throw new IntegratorException(\n-                      \"minimal step size ({0}) reached, integration needs {1}\",\n+                      \"minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}\",\n                       minStep, Math.abs(h));\n           }\n       }", "timestamp": 1252057494, "metainfo": ""}