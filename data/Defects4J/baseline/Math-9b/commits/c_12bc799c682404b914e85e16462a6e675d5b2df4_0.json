{"sha": "12bc799c682404b914e85e16462a6e675d5b2df4", "log": "Changed Fraction(double) to correctly handle near-integral arguments. PR # 35434 Submitted by: J\u00f6rg Weimar   ", "commit": "\n--- a/src/java/org/apache/commons/math/fraction/Fraction.java\n+++ b/src/java/org/apache/commons/math/fraction/Fraction.java\n     {\n         double r0 = value;\n         int a0 = (int)Math.floor(r0);\n+\n+        // check for (almost) integer arguments, which should not go\n+        // to iterations.\n+        if (Math.abs(a0 - value) < epsilon) {\n+            this.numerator = a0;\n+            this.denominator = 1;\n+            return;\n+        }\n         \n         int p0 = 1;\n         int q0 = 0;\n--- a/src/test/org/apache/commons/math/fraction/FractionTest.java\n+++ b/src/test/org/apache/commons/math/fraction/FractionTest.java\n         } catch (ArithmeticException ex) {\n             // success\n         }\n+        try {        \n+            assertFraction(0, 1, new Fraction(0.00000000000001));\n+            assertFraction(2, 5, new Fraction(0.40000000000001));\n+            assertFraction(15, 1, new Fraction(15.0000000000001));\n+            \n+        } catch (ConvergenceException ex) {\n+            fail(ex.getMessage());\n+        }\n     }\n     \n     public void testCompareTo() {", "timestamp": 1119750757, "metainfo": ""}