{"sha": "513f76a1e773c29daea59c22f0465a333fa3964c", "log": "Added tests for methods computing variance from mean, removed obsolete tests.   ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/StatUtilsTest.java\n+++ b/src/test/org/apache/commons/math/stat/StatUtilsTest.java\n \n /**\n  * Test cases for the {@link StatUtils} class.\n- * @version $Revision: 1.17 $ $Date: 2004/05/24 05:33:42 $\n+ * @version $Revision: 1.18 $ $Date: 2004/07/11 18:42:07 $\n  */\n \n public final class StatUtilsTest extends TestCase {\n         assertEquals(\"sum\", sum, StatUtils.sum(values), tolerance);\n         assertEquals(\"sumsq\", sumSq, StatUtils.sumSq(values), tolerance);\n         assertEquals(\"var\", var, StatUtils.variance(values), tolerance);\n+        assertEquals(\"var with mean\", var, StatUtils.variance(values, mean), tolerance);\n         assertEquals(\"mean\", mean, StatUtils.mean(values), tolerance);\n         assertEquals(\"min\", min, StatUtils.min(values), tolerance);\n         assertEquals(\"max\", max, StatUtils.max(values), tolerance);\n         assertTrue(\n             \"Variance of n = 1 set should be zero\",\n             StatUtils.variance(values) == 0);\n-    }\n-\n-    public void testSkewAndKurtosis() {\n-\n-        double[] values =\n-            {\n-                12.5,\n-                12,\n-                11.8,\n-                14.2,\n-                14.9,\n-                14.5,\n-                21,\n-                8.2,\n-                10.3,\n-                11.3,\n-                14.1,\n-                9.9,\n-                12.2,\n-                12,\n-                12.1,\n-                11,\n-                19.8,\n-                11,\n-                10,\n-                8.8,\n-                9,\n-                12.3 };\n-\n-        assertEquals(\"mean\", 12.40455, StatUtils.mean(values), 0.0001);\n-        assertEquals(\"variance\", 10.00236, StatUtils.variance(values), 0.0001);\n-    }\n-\n-    public void testProductAndGeometricMean() throws Exception {\n-        double[] values = { 1.0, 2.0, 3.0, 4.0 };\n-\n-        assertEquals(\n-            \"Product not expected\",\n-            24.0,\n-            StatUtils.product(values),\n-            Double.MIN_VALUE);\n     }\n \n     public void testArrayIndexConditions() throws Exception {\n         // test many\n         x = new double[] {one, two, two, three};\n         TestUtils.assertEquals(0.5, StatUtils.variance(x, 2, 2), tolerance);\n+        \n+        // test precomputed mean\n+        x = new double[] {one, two, two, three};\n+        TestUtils.assertEquals(0.5, StatUtils.variance(x,2.5, 2, 2), tolerance);\n     }\n     \n     public void testMax() {", "timestamp": 1089571327, "metainfo": ""}