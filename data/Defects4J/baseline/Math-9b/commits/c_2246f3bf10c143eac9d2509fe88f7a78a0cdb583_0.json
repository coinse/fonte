{"sha": "2246f3bf10c143eac9d2509fe88f7a78a0cdb583", "log": "I've made SparseRealVector and SparseRealMatrix to be empty marker interfaces.  I've left OpenMapRealVector.getSparcity, since I'd like to use it for benchmarking, and it doesn't hurt anyone else now.   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java\n         return row * columnDimension + column;\n     }\n \n-    /** {@inheritDoc} */\n-    public MatrixShape getShape() {\n-        return MatrixShape.Any;\n-    }\n \n }\n--- a/src/java/org/apache/commons/math/linear/OpenMapRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/OpenMapRealVector.java\n         return true;\n     }\n \n-    /** {@inheritDoc} */\n+    /**\n+     * \n+     * @return the percentage of none zero elements as a decimal percent.\n+     */\n     public double getSparcity() {\n         return (double)entries.size()/(double)getDimension();\n     }\n--- a/src/java/org/apache/commons/math/linear/SparseRealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealMatrix.java\n  *\n  */\n public interface SparseRealMatrix extends RealMatrix {\n-\n-    /**\n-     * Type to identify the shape of the matrix \n-     */\n-    public static enum MatrixShape  {Any};\n-    \n-    /**\n-     * \n-     * @return the shape of the matrix\n-     */\n-    MatrixShape getShape();\n     \n }\n--- a/src/java/org/apache/commons/math/linear/SparseRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealVector.java\n  */\n public interface SparseRealVector extends RealVector {\n     \n-    /**\n-     * \n-     * @return the percentage of none zero elements as a decimal percent.\n-     */\n-    double getSparcity ();\n-\n }", "timestamp": 1242959592, "metainfo": ""}