{"sha": "64f6c0c933ef63310a7529cf1e1ba76677504c68", "log": "Fixed javadoc.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java\n+++ b/src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java\n      * Calculates the Cholesky decomposition of the given matrix.\n      * <p>\n      * Calling this constructor is equivalent to call {@link\n-     * #CholeskyDecompositionImpl(RealMatrix, double, double)} with the\n+     * #CholeskyDecomposition(RealMatrix, double, double)} with the\n      * thresholds set to the default values {@link\n      * #DEFAULT_RELATIVE_SYMMETRY_THRESHOLD} and {@link\n      * #DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD}\n      * @throws NonSymmetricMatrixException if the matrix is not symmetric.\n      * @throws NonPositiveDefiniteMatrixException if the matrix is not\n      * strictly positive definite.\n-     * @see #CholeskyDecompositionImpl(RealMatrix, double, double)\n+     * @see #CholeskyDecomposition(RealMatrix, double, double)\n      * @see #DEFAULT_RELATIVE_SYMMETRY_THRESHOLD\n      * @see #DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD\n      */\n      * @throws NonSymmetricMatrixException if the matrix is not symmetric.\n      * @throws NonPositiveDefiniteMatrixException if the matrix is not\n      * strictly positive definite.\n-     * @see #CholeskyDecompositionImpl(RealMatrix)\n+     * @see #CholeskyDecomposition(RealMatrix)\n      * @see #DEFAULT_RELATIVE_SYMMETRY_THRESHOLD\n      * @see #DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD\n      */\n--- a/src/main/java/org/apache/commons/math/linear/SparseFieldVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/SparseFieldVector.java\n      * Zero-length vectors may be used to initialize construction of vectors\n      * by data gathering. We start with zero-length and use either the {@link\n      * #SparseFieldVector(SparseFieldVector, int)} constructor\n-     * or one of the {@code append} method ({@link #append(FieldElement)},\n-     * {@link #append(FieldElement[])}, {@link #append(FieldVector)},\n+     * or one of the {@code append} method ({@link #append(FieldVector)} or\n      * {@link #append(SparseFieldVector)}) to gather data into this vector.\n      *\n      * @param field Field to which the elements belong.", "timestamp": 1317550694, "metainfo": ""}