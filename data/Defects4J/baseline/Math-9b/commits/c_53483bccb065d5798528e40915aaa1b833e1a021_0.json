{"sha": "53483bccb065d5798528e40915aaa1b833e1a021", "log": "Added OneWayAnova methods to TestUtils and updated User Guide to cover One-way Anova tests. JIRA: MATH-173   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/inference/TestUtils.java\n+++ b/src/java/org/apache/commons/math/stat/inference/TestUtils.java\n  */\n package org.apache.commons.math.stat.inference;\n \n+import java.util.Collection;\n import org.apache.commons.math.MathException;\n import org.apache.commons.math.stat.descriptive.StatisticalSummary;\n \n     private static UnknownDistributionChiSquareTest unknownDistributionChiSquareTest = \n         new ChiSquareTestImpl();\n     \n+    /** Singleton OneWayAnova instance using default implementation. */\n+    private static OneWayAnova oneWayAnova =\n+        new OneWayAnovaImpl();\n+    \n     /**\n      * Set the (singleton) TTest instance.\n      * \n     }\n     \n     /**\n+     * Set the (singleton) OneWayAnova instance\n+     * \n+     * @param oneWayAnova the new instance to use\n+     * @since 1.2\n+     */\n+    public static void setOneWayAnova(OneWayAnova oneWayAnova) {\n+        TestUtils.oneWayAnova = oneWayAnova;\n+    }\n+    \n+    /**\n+     * Return a (singleton) OneWayAnova instance.  Does not create a new instance.\n+     * \n+     * @return a OneWayAnova instance\n+     * @since 1.2\n+     */\n+    public static OneWayAnova getOneWayAnova() {\n+        return oneWayAnova;\n+    }\n+    \n+    \n+    /**\n      * @see org.apache.commons.math.stat.inference.TTest#homoscedasticT(double[], double[])\n      */\n     public static double homoscedasticT(double[] sample1, double[] sample2)\n \n     /**\n      * @see org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest#chiSquareDataSetsComparison(long[], long[])\n+     *\n+     * @since 1.2\n      */\n     public static double chiSquareDataSetsComparison(long[] observed1, long[] observed2)\n         throws IllegalArgumentException {\n \n     /**\n      * @see org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest#chiSquareTestDataSetsComparison(long[], long[])\n+     *\n+     * @since 1.2\n      */\n     public static double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)\n         throws IllegalArgumentException, MathException {\n \n     /**\n      * @see org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest#chiSquareTestDataSetsComparison(long[], long[], double)\n+     *\n+     * @since 1.2\n      */\n     public static boolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2,\n         double alpha)\n         throws IllegalArgumentException, MathException {\n         return unknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(observed1, observed2, alpha);\n     }\n-\n+    \n+    /**\n+     * @see org.apache.commons.math.stat.inference.OneWayAnova#anovaFValue(Collection)\n+     *\n+     * @since 1.2\n+     */\n+    public static double oneWayAnovaFValue(Collection categoryData)\n+    throws IllegalArgumentException, MathException {\n+        return oneWayAnova.anovaFValue(categoryData);\n+    }\n+    \n+    /**\n+     * @see org.apache.commons.math.stat.inference.OneWayAnova#anovaPValue(Collection)\n+     * \n+     * @since 1.2\n+     */\n+    public static double oneWayAnovaPValue(Collection categoryData)\n+    throws IllegalArgumentException, MathException {\n+        return oneWayAnova.anovaPValue(categoryData);\n+    }\n+    \n+    /**\n+     * @see org.apache.commons.math.stat.inference.OneWayAnova#anovaTest(Collection,double)\n+     *\n+     * @since 1.2\n+     */\n+    public static boolean oneWayAnovaTest(Collection categoryData, double alpha)\n+    throws IllegalArgumentException, MathException {\n+        return oneWayAnova.anovaTest(categoryData, alpha);\n+    }\n \n }\n--- a/src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java\n+++ b/src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java\n  */\n package org.apache.commons.math.stat.inference;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n         assertFalse(TestUtils.pairedTTest(sample1, sample3, .001));\n         assertTrue(TestUtils.pairedTTest(sample1, sample3, .002));    \n     }\n+    \n+    private double[] classA =\n+      {93.0, 103.0, 95.0, 101.0};\n+    private double[] classB =\n+      {99.0, 92.0, 102.0, 100.0, 102.0};\n+    private double[] classC =\n+      {110.0, 115.0, 111.0, 117.0, 128.0};\n+    \n+    private List classes = new ArrayList();\n+    private OneWayAnova oneWayAnova = new OneWayAnovaImpl();\n+    \n+    public void testOneWayAnovaUtils() throws Exception {\n+        classes.add(classA);\n+        classes.add(classB);\n+        classes.add(classC);\n+        assertEquals(oneWayAnova.anovaFValue(classes), \n+                TestUtils.oneWayAnovaFValue(classes), 10E-12);\n+        assertEquals(oneWayAnova.anovaPValue(classes), \n+                TestUtils.oneWayAnovaPValue(classes), 10E-12);\n+        assertEquals(oneWayAnova.anovaTest(classes, 0.01), \n+                TestUtils.oneWayAnovaTest(classes, 0.01));   \n+    } \n }", "timestamp": 1202078918, "metainfo": ""}