{"sha": "c14e02b7877e91f0faf79bc91f34df4e0ebea56f", "log": "use different exception to be consistent with EigenDecomposition, use Precision.EPSILON for comparison instead of 2^-52 as in JAMA.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java\n+++ b/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java\n \n package org.apache.commons.math3.linear;\n \n+import org.apache.commons.math3.exception.MaxCountExceededException;\n import org.apache.commons.math3.exception.TooManyEvaluationsException;\n+import org.apache.commons.math3.exception.util.LocalizedFormats;\n import org.apache.commons.math3.util.FastMath;\n import org.apache.commons.math3.util.Precision;\n \n     private RealMatrix cachedPt;\n \n     /** Maximum allowed iterations for convergence of the transformation. */\n-    private final int maxIterations = 40;\n-\n-    /** Epsilon criteria taken from JAMA code (2^-52). */\n-    private final double epsilon = 2.220446049250313E-16;\n+    private final int maxIterations = 100;\n+\n+    /** Epsilon criteria taken from JAMA code (originally was 2^-52). */\n+    private final double epsilon = Precision.EPSILON;\n \n     /**\n      * Build the transformation to Schur form of a general real matrix.\n \n     /**\n      * Transform original matrix to Schur form.\n-     * @throws TooManyEvaluationsException if the transformation does not converge\n+     * @throws MaxCountExceededException if the transformation does not converge\n      */\n     private void transform() {\n         final int n = matrixT.length;\n \n                 // stop transformation after too many iterations\n                 if (++iteration > maxIterations) {\n-                    throw new TooManyEvaluationsException(maxIterations);\n+                    throw new MaxCountExceededException(LocalizedFormats.CONVERGENCE_FAILED,\n+                                                        maxIterations);\n                 }\n \n                 // Look for two consecutive small sub-diagonal elements", "timestamp": 1336332542, "metainfo": ""}