{"sha": "e2efec0993811efb7d50612b0aea83ed13094a2f", "log": "Unnecessary casts  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n             // expected behavior\n         }\n \n-        ArrayRealVector v_set1 = (ArrayRealVector) v1.copy();\n+        ArrayRealVector v_set1 = v1.copy();\n         v_set1.setEntry(1, 11.0);\n         Assert.assertEquals(\"testData is 11.0 \", 11.0, v_set1.getEntry(1), 0);\n         try {\n             // expected behavior\n         }\n \n-        ArrayRealVector v_set2 = (ArrayRealVector) v4.copy();\n+        ArrayRealVector v_set2 = v4.copy();\n         v_set2.set(3, v1);\n         Assert.assertEquals(\"testData is 1.0 \", 1.0, v_set2.getEntry(3), 0);\n         Assert.assertEquals(\"testData is 7.0 \", 7.0, v_set2.getEntry(6), 0);\n             // expected behavior\n         }\n \n-        ArrayRealVector v_set3 = (ArrayRealVector) v1.copy();\n+        ArrayRealVector v_set3 = v1.copy();\n         v_set3.set(13.0);\n         Assert.assertEquals(\"testData is 13.0 \", 13.0, v_set3.getEntry(2), 0);\n \n             // expected behavior\n         }\n \n-        ArrayRealVector v_set4 = (ArrayRealVector) v4.copy();\n+        ArrayRealVector v_set4 = v4.copy();\n         v_set4.setSubVector(3, v2_t);\n         Assert.assertEquals(\"testData is 1.0 \", 4.0, v_set4.getEntry(3), 0);\n         Assert.assertEquals(\"testData is 7.0 \", 7.0, v_set4.getEntry(6), 0);\n         }\n \n \n-        ArrayRealVector vout10 = (ArrayRealVector) v1.copy();\n-        ArrayRealVector vout10_2 = (ArrayRealVector) v1.copy();\n+        ArrayRealVector vout10 = v1.copy();\n+        ArrayRealVector vout10_2 = v1.copy();\n         Assert.assertEquals(vout10, vout10_2);\n         vout10_2.setEntry(0, 1.1);\n         Assert.assertNotSame(vout10, vout10_2);\n             // expected behavior\n         }\n \n-        ArrayRealVector v_unitize = (ArrayRealVector)v1.copy();\n+        ArrayRealVector v_unitize = v1.copy();\n         v_unitize.unitize();\n         assertClose(\"compare vect\" ,v_unitVector_2.getData(),v_unitize.getData(),normTolerance);\n         try {", "timestamp": 1291577297, "metainfo": ""}