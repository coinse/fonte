{"sha": "72cf3eaa2e9ebdd845e17aa4cca6bcd36ecdc3f3", "log": "fixed unused variable warnings, by really using the computed value  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java\n  */\n package org.apache.commons.math.util;\n \n+import junit.framework.Assert;\n+\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n         long mathTime = System.nanoTime() - time;\n \n         report(\"log\",strictMath,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"log10\",strictMath,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"log1p\",strictMath,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n             x += Math.pow(Math.PI + i * F1, i * F1);\n         long mathTime = System.nanoTime() - time;\n         report(\"pow\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"exp\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"sin\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"asin\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"cos\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n             \n     @Test\n             x += Math.acos(i / 10000000.0);\n         long mathTime = System.nanoTime() - time;\n         report(\"acos\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"tan\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"atan\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"atan2\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"hypot\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n      \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"cbrt\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"sqrt\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"cosh\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"sinh\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"tanh\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n      \n     @Test\n             x += Math.expm1(-i * F1);\n         long mathTime = System.nanoTime() - time;\n         report(\"expm1\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n \n     @Test\n         long mathTime = System.nanoTime() - time;\n \n         report(\"abs\",strictTime,fastTime,mathTime);\n+        Assert.assertTrue(!Double.isNaN(x));\n     }\n }", "timestamp": 1309512759, "metainfo": ""}