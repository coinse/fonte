{"sha": "526956b3d938c45d24df7000bb0184837cf332e2", "log": "Stopped header comments from confusing javadoc tool.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n  * The values are ordered using the default (natural order), unless a  <code>Comparator</code>\n  *  is supplied in the constructor.\n  * \n- * @version $Revision: 1.12 $ $Date: 2004/02/08 19:51:25 $\n+ * @version $Revision: 1.13 $ $Date: 2004/02/16 06:32:47 $\n  */\n public class Frequency implements Serializable {\n     \n     }\n     \n     /**\n-     * Returns an Iterator over the set of values that have been added\n+     * Returns an Iterator over the set of values that have been added.\n      * @return values Iterator\n      */\n     public Iterator valuesIterator() {\n     \n      /**\n      * Returns the cummulative percentatge of values less than or equal to v\n-     * (as a proportion -- i.e. between 0 and 1).\n+     * (as a proportion between 0 and 1).\n      * <p>\n      * Returns 0 if v is not comparable to the values set.\n      * \n     \n     /**\n      * Returns the cummulative percentatge of values less than or equal to v\n-     * (as a proportion -- i.e. between 0 and 1).\n+     * (as a proportion between 0 and 1).\n      * <p>\n      * Returns 0 if v is not comparable to the values set.\n      * \n     \n     /**\n      * Returns the cummulative percentatge of values less than or equal to v\n-     * (as a proportion -- i.e. between 0 and 1).\n+     * (as a proportion between 0 and 1).\n      * <p>\n      * Returns 0 if v is not comparable to the values set.\n      * \n     \n     /**\n      * Returns the cummulative percentatge of values less than or equal to v\n-     * (as a proportion -- i.e. between 0 and 1).\n+     * (as a proportion between 0 and 1).\n      * <p>\n      * Returns 0 if v is not comparable to the values set.\n      * ", "timestamp": 1076913167, "metainfo": ""}