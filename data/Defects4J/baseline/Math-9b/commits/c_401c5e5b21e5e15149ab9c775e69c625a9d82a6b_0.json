{"sha": "401c5e5b21e5e15149ab9c775e69c625a9d82a6b", "log": "added missing serialVersionUID  ", "commit": "\n--- a/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java\n+++ b/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java\n \n public abstract class WeightedMeasurement implements Serializable {\n \n-  /** \n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = 4360046376796901941L;\n+\n+    /** \n    * Simple constructor.\n    * Build a measurement with the given parameters, and set its ignore\n    * flag to false.\n--- a/src/java/org/apache/commons/math/ode/AbstractIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/AbstractIntegrator.java\n  */\n public abstract class AbstractIntegrator implements FirstOrderIntegrator {\n \n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = 5771479854166853494L;\n+\n     /** Name of the method. */\n     private final String name;\n \n--- a/src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java\n \n public abstract class AdaptiveStepsizeIntegrator\n   extends AbstractIntegrator {\n+\n+  /** Serializable version identifier. */\n+  private static final long serialVersionUID = -6883579828273958419L;\n \n   /** Build an integrator with the given stepsize bounds.\n    * The default step handler does nothing.\n--- a/src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n public abstract class EmbeddedRungeKuttaIntegrator\n   extends AdaptiveStepsizeIntegrator {\n \n+  /** Serializable version identifier. */\n+  private static final long serialVersionUID = -8436701741819010959L;\n+\n   /** Build a Runge-Kutta integrator with the given Butcher array.\n    * @param name name of the method\n    * @param fsal indicate that the method is an <i>fsal</i>\n--- a/src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java\n  * @since 2.0\n  */\n public abstract class MultistepIntegrator extends AbstractIntegrator {\n+\n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = -1705864253238417163L;\n \n     /** Starter integrator. */\n     private FirstOrderIntegrator starter;\n--- a/src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java\n  */\n \n public abstract class RungeKuttaIntegrator extends AbstractIntegrator {\n+\n+  /** Serializable version identifier. */\n+  private static final long serialVersionUID = -5346558921715095559L;\n \n   /** Simple constructor.\n    * Build a Runge-Kutta integrator with the given\n--- a/src/java/org/apache/commons/math/random/AbstractRandomGenerator.java\n+++ b/src/java/org/apache/commons/math/random/AbstractRandomGenerator.java\n  */\n public abstract class AbstractRandomGenerator implements RandomGenerator {\n     \n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = 7026539017027693474L;\n+\n     /** \n      * Cached random normal value.  The default implementation for \n      * {@link #nextGaussian} generates pairs of values and this field caches the\n--- a/src/java/org/apache/commons/math/util/CompositeFormat.java\n+++ b/src/java/org/apache/commons/math/util/CompositeFormat.java\n  * @version $Revision$ $Date$\n  */\n public abstract class CompositeFormat extends Format {\n+\n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = 5358685519349262494L;\n \n     /**\n      * Create a default number format.  The default number format is based on\n--- a/src/test/org/apache/commons/math/ode/nonstiff/TestProblemAbstract.java\n+++ b/src/test/org/apache/commons/math/ode/nonstiff/TestProblemAbstract.java\n  */\n public abstract class TestProblemAbstract\n   implements FirstOrderDifferentialEquations, Cloneable {\n+\n+  /** Serializable version identifier. */\n+  private static final long serialVersionUID = -8521928974502839379L;\n \n   /** Dimension of the problem. */\n   protected int n;", "timestamp": 1224161353, "metainfo": ""}