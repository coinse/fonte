{"sha": "ae23a7f0a868cd2d29118fa1fde4f6a269a4ea29", "log": "fixed missing throw  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java\n+++ b/src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java\n                                             UnitSphereRandomVectorGenerator rand)\n         throws DimensionMismatchException, IllegalArgumentException {\n         if (xval.length == 0 || xval[0] == null) {\n-            MathRuntimeException.createIllegalArgumentException(\"no data\");\n+            throw MathRuntimeException.createIllegalArgumentException(\"no data\");\n         }\n \n         if (xval.length != yval.length) {\n--- a/src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java\n+++ b/src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java\n      */\n     public void setBrightnessExponent(final int brightnessExponent) {\n         if (brightnessExponent < 0) {\n-            MathRuntimeException.createIllegalArgumentException(\n+            throw MathRuntimeException.createIllegalArgumentException(\n                 \"brightness exponent should be positive or null, but got {0}\",\n                 brightnessExponent);\n         }\n      */\n     public void setMicropshereElements(final int microsphereElements) {\n         if (microsphereElements < 0) {\n-            MathRuntimeException.createIllegalArgumentException(\n+            throw MathRuntimeException.createIllegalArgumentException(\n                 \"number of microsphere elements must be positive, but got {0}\",\n                 microsphereElements);\n         }", "timestamp": 1254855237, "metainfo": ""}