{"sha": "21cc8139c4fb4f124cd8a7930371d2c3368128f0", "log": "MATH-494 Allow for sufficiently close numbers but still detect +/- 0 difference  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/util/FastMathTest.java\n+++ b/src/test/java/org/apache/commons/math/util/FastMathTest.java\n     \n     private static void check(Method mathMethod, Object[] params, Object expected, Object actual, int[] entries){\n         if (!expected.equals(actual)){\n+            if (expected instanceof Double) {\n+                double exp = (Double) expected;\n+                // Need to discount 0 otherwise +0.0 == -0.0\n+                if (exp != 0 && MathUtils.equals(exp, (Double) actual, 1)) {\n+                    return;\n+                }\n+            } else {\n+                float exp = (Float) expected;\n+                // Need to discount 0 otherwise +0.0 == -0.0\n+                if (exp != 0 && MathUtils.equals(exp, ((Float) actual), 1)) {\n+                    return;\n+                }\n+            }\n             StringBuilder sb = new StringBuilder();\n             sb.append(mathMethod.getName());\n             sb.append(\"(\");", "timestamp": 1295660697, "metainfo": ""}