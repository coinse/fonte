{"sha": "b7e82a7fb16273d890186bb08b95452ab41f2e97", "log": "Added rint and round to DerivativeStructure.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n                                        FastMath.floor(data[0]));\n     }\n \n+    /** Get the whole number that is the nearest to the instance, or the even one if x is exactly half way between two integers.\n+     * @return a double number r such that r is an integer r - 0.5 <= this <= r + 0.5\n+     */\n+    public DerivativeStructure rint() {\n+        return new DerivativeStructure(compiler.getFreeParameters(),\n+                                       compiler.getOrder(),\n+                                       FastMath.rint(data[0]));\n+    }\n+\n+    /** Get the closest long to instance value.\n+     * @return closest long to {@link #getValue()}\n+     */\n+    public long round() {\n+        return FastMath.round(data[0]);\n+    }\n+\n     /**\n      * Returns the instance with the sign of the argument.\n      * A NaN {@code sign} argument is treated as positive.\n--- a/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java\n+++ b/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java\n     }\n \n     @Test\n-    public void testCeilFloor() {\n+    public void testCeilFloorRintLong() {\n \n         DerivativeStructure x = new DerivativeStructure(1, 1, 0, -1.5);\n         Assert.assertEquals(-1.5, x.getPartialDerivative(0), 1.0e-15);\n         Assert.assertEquals(+0.0, x.ceil().getPartialDerivative(1), 1.0e-15);\n         Assert.assertEquals(-2.0, x.floor().getPartialDerivative(0), 1.0e-15);\n         Assert.assertEquals(+0.0, x.floor().getPartialDerivative(1), 1.0e-15);\n+        Assert.assertEquals(-2.0, x.rint().getPartialDerivative(0), 1.0e-15);\n+        Assert.assertEquals(+0.0, x.rint().getPartialDerivative(1), 1.0e-15);\n+        Assert.assertEquals(-2.0, x.subtract(x.getField().getOne()).rint().getPartialDerivative(0), 1.0e-15);\n+        Assert.assertEquals(-1l, x.round());\n \n     }\n ", "timestamp": 1345111662, "metainfo": ""}