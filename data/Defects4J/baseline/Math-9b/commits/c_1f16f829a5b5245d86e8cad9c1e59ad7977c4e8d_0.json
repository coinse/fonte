{"sha": "1f16f829a5b5245d86e8cad9c1e59ad7977c4e8d", "log": "Eliminated advertised exceptions that are no longer thrown.  ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/LUDecompositionImpl.java\n+++ b/src/java/org/apache/commons/math/linear/LUDecompositionImpl.java\n          * <p>The A matrix is implicit here. It is </p>\n          * @param b right-hand side of the equation A &times; X = B\n          * @return a vector X such that A &times; X = B\n-         * @exception IllegalStateException if {@link #decompose(RealMatrix) decompose}\n-         * has not been called\n          * @exception IllegalArgumentException if matrices dimensions don't match\n          * @exception InvalidMatrixException if decomposed matrix is singular\n          */\n         public RealVectorImpl solve(RealVectorImpl b)\n-        throws IllegalStateException, IllegalArgumentException, InvalidMatrixException {\n+        throws IllegalArgumentException, InvalidMatrixException {\n             return new RealVectorImpl(solve(b.getDataRef()), false);\n         }\n \n         /** {@inheritDoc} */\n         public RealMatrix solve(RealMatrix b)\n-        throws IllegalStateException, IllegalArgumentException, InvalidMatrixException {\n+        throws IllegalArgumentException, InvalidMatrixException {\n \n             final int m = pivot.length;\n             if (b.getRowDimension() != m) {", "timestamp": 1232822313, "metainfo": ""}