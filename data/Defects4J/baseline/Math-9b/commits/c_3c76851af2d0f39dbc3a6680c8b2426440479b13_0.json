{"sha": "3c76851af2d0f39dbc3a6680c8b2426440479b13", "log": "removed obsolete MultiStepInterpolator  ", "commit": "\n--- a/src/java/org/apache/commons/math/ode/MultistepIntegrator.java\n+++ b/src/java/org/apache/commons/math/ode/MultistepIntegrator.java\n import org.apache.commons.math.ode.events.EventState;\n import org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator;\n import org.apache.commons.math.ode.sampling.FixedStepHandler;\n-import org.apache.commons.math.ode.sampling.MultistepStepInterpolator;\n import org.apache.commons.math.ode.sampling.StepHandler;\n import org.apache.commons.math.ode.sampling.StepInterpolator;\n import org.apache.commons.math.ode.sampling.StepNormalizer;\n  * This class is the base class for multistep integrators for Ordinary\n  * Differential Equations.\n  *\n- * @see org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator\n- * @see org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator\n+ * @see org.apache.commons.math.ode.nonstiff.AdamsIntegrator\n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n     private double resetTime;\n \n     /** Prototype of the step interpolator. */\n-    protected MultistepStepInterpolator prototype;\n+    protected StepInterpolator prototype;\n                                            \n     /**\n      * Build a multistep integrator with the given number of steps.\n      * @param prototype prototype of the step interpolator to use\n      */\n     protected MultistepIntegrator(final String name, final int k,\n-                                  final MultistepStepInterpolator prototype) {\n+                                  final StepInterpolator prototype) {\n         super(name);\n         starter = new DormandPrince853Integrator(1.0e-6, 1.0e6, 1.0e-5, 1.0e-6);\n         previousT = new double[k];", "timestamp": 1243807802, "metainfo": ""}