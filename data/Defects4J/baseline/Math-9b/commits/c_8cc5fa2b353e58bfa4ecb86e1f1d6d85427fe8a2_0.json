{"sha": "8cc5fa2b353e58bfa4ecb86e1f1d6d85427fe8a2", "log": "fixed wrong javadoc links  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#addValue(double[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#addValue(double[])\n      */\n     public synchronized void addValue(double[] value)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getDimension()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getDimension()\n      */\n     public synchronized int getDimension() {\n         return super.getDimension();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getN()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getN()\n      */\n     public synchronized long getN() {\n         return super.getN();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSum()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSum()\n      */\n     public synchronized double[] getSum() {\n         return super.getSum();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSummSq()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSumSq()\n      */\n     public synchronized double[] getSumSq() {\n         return super.getSumSq();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSumLog()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSumLog()\n      */\n     public synchronized double[] getSumLog() {\n         return super.getSumLog();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMean()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMean()\n      */\n     public synchronized double[] getMean() {\n         return super.getMean();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getStandardDeviation()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getStandardDeviation()\n      */\n     public synchronized double[] getStandardDeviation() {\n         return super.getStandardDeviation();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getCovariance()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getCovariance()\n      */\n     public synchronized RealMatrix getCovariance() {\n         return super.getCovariance();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMax()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMax()\n      */\n     public synchronized double[] getMax() {\n         return super.getMax();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMin()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMin()\n      */\n     public synchronized double[] getMin() {\n         return super.getMin();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getGeometricMean()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getGeometricMean()\n      */\n     public synchronized double[] getGeometricMean() {\n         return super.getGeometricMean();\n     }\n     \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#toString()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#toString()\n      */\n     public synchronized String toString() {\n         return super.toString();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#clear()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#clear()\n      */\n     public synchronized void clear() {\n         super.clear();\n     }\n     \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#equals()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#equals(Object)\n      */\n     public synchronized boolean equals(Object object) {\n         return super.equals(object);\n     }\n     \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#hashCode()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#hashCode()\n      */\n     public synchronized int hashCode() {\n         return super.hashCode();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSumImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSumImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getSumImpl() {\n         return super.getSumImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setSumImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setSumImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setSumImpl(StorelessUnivariateStatistic[] sumImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSumsqImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSumsqImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getSumsqImpl() {\n         return super.getSumsqImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setSumsqImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setSumsqImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMinImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMinImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getMinImpl() {\n         return super.getMinImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setMinImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setMinImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setMinImpl(StorelessUnivariateStatistic[] minImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMaxImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMaxImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getMaxImpl() {\n         return super.getMaxImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setMaxImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setMaxImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setMaxImpl(StorelessUnivariateStatistic[] maxImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getSumLogImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getSumLogImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getSumLogImpl() {\n         return super.getSumLogImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setSumLogImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setSumLogImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getGeoMeanImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getGeoMeanImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getGeoMeanImpl() {\n         return super.getGeoMeanImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setGeoMeanImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setGeoMeanImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl)\n       throws DimensionMismatchException {\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#getMeanImpl()\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#getMeanImpl()\n      */\n     public synchronized StorelessUnivariateStatistic[] getMeanImpl() {\n         return super.getMeanImpl();\n     }\n \n     /**\n-     * @see org.apache.commons.math.stat.descriptive.MultivariateSummary#setMeanImpl(StorelessUnivariateStatistic[])\n+     * @see org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics#setMeanImpl(StorelessUnivariateStatistic[])\n      */\n     public synchronized void setMeanImpl(StorelessUnivariateStatistic[] meanImpl)\n       throws DimensionMismatchException {", "timestamp": 1203179463, "metainfo": ""}