{"sha": "4cc354ca17b48b51ccd7ea6fdd98d797e04c35cd", "log": "MATH-574 Allow outer product of vectors of different sizes.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\n      /** {@inheritDoc} */\n     @Override\n     public RealMatrix outerProduct(double[] v) {\n-        checkVectorDimensions(v.length);\n-        RealMatrix res = new OpenMapRealMatrix(virtualSize, virtualSize);\n+        final int n = v.length;\n+        RealMatrix res = new OpenMapRealMatrix(virtualSize, n);\n         Iterator iter = entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             int row = iter.key();\n             double value = iter.value();\n-            for (int col = 0; col < virtualSize; col++) {\n+            for (int col = 0; col < n; col++) {\n                 res.setEntry(row, col, value * v[col]);\n             }\n         }\n--- a/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n     }\n \n     @Test\n+    public void testOuterProduct() {\n+        final OpenMapRealVector u = new OpenMapRealVector(new double[] {1, 2, -3});\n+        final OpenMapRealVector v = new OpenMapRealVector(new double[] {4, -2});\n+\n+        final RealMatrix uv = u.outerProduct(v);\n+\n+        final double tol = Math.ulp(1d);\n+        Assert.assertEquals(4, uv.getEntry(0, 0), tol);\n+        Assert.assertEquals(-2, uv.getEntry(0, 1), tol);\n+        Assert.assertEquals(8, uv.getEntry(1, 0), tol);\n+        Assert.assertEquals(-4, uv.getEntry(1, 1), tol);\n+        Assert.assertEquals(-12, uv.getEntry(2, 0), tol);\n+        Assert.assertEquals(6, uv.getEntry(2, 1), tol);\n+    }\n+\n+    @Test\n     public void testMisc() {\n         OpenMapRealVector v1 = new OpenMapRealVector(vec1);\n ", "timestamp": 1305549015, "metainfo": ""}