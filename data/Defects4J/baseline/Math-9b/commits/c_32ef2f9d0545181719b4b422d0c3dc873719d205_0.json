{"sha": "32ef2f9d0545181719b4b422d0c3dc873719d205", "log": "Improved javadoc.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java\n  * <p>\n  * Since percentile estimation usually involves interpolation between array\n  * elements, arrays containing  <code>NaN</code> or infinite values will often\n- * result in <code>NaN<code> or infinite values returned.</p>\n+ * result in <code>NaN</code> or infinite values returned.</p>\n  * <p>\n- * Since 2.2, Percentile implementation uses only selection instead of complete\n- * sorting and caches selection algorithm state between calls to the various\n- * {@code evaluate} methods when several percentiles are to be computed on the same data.\n- * This greatly improves efficiency, both for single percentile and multiple\n- * percentiles computations. However, it also induces a need to be sure the data\n- * at one call to {@code evaluate} is the same as the data with the cached algorithm\n- * state from the previous calls. Percentile does this by checking the array reference\n- * itself and a checksum of its content by default. If the user already knows he calls\n- * {@code evaluate} on an immutable array, he can save the checking time by calling the\n- * {@code evaluate} methods that do <em>not</em>\n+ * Since 2.2, Percentile uses only selection instead of complete sorting\n+ * and caches selection algorithm state between calls to the various\n+ * {@code evaluate} methods. This greatly improves efficiency, both for a single\n+ * percentile and multiple percentile computations. To maximize performance when\n+ * multiple percentiles are computed based on the same data, users should set the\n+ * data array once using either one of the {@link #evaluate(double[], double)} or\n+ * {@link #setData(double[])} methods and thereafter {@link #evaluate(double)}\n+ * with just the percentile provided. \n  * </p>\n  * <p>\n  * <strong>Note that this implementation is not synchronized.</strong> If", "timestamp": 1307841922, "metainfo": ""}