{"sha": "e6df7ccd955bcd06e41131fc34f224515513bd38", "log": "added serialization test changed tests to Junit 4  ", "commit": "\n--- a/src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n+++ b/src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java\n \n package org.apache.commons.math.ode.sampling;\n \n-import junit.framework.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.ByteArrayInputStream;\n import java.io.ObjectOutputStream;\n import org.apache.commons.math.ode.DerivativeException;\n import org.apache.commons.math.ode.sampling.AbstractStepInterpolator;\n import org.apache.commons.math.ode.sampling.DummyStepInterpolator;\n+import org.junit.Test;\n \n-public class DummyStepInterpolatorTest\n-  extends TestCase {\n+public class DummyStepInterpolatorTest {\n \n-  public DummyStepInterpolatorTest(String name) {\n-    super(name);\n-  }\n-\n-  public void testNoReset() {\n+  @Test\n+  public void testNoReset() throws DerivativeException {\n \n     double[]   y    =   { 0.0, 1.0, -2.0 };\n     DummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);\n \n   }\n \n+  @Test\n   public void testFixedState()\n     throws DerivativeException {\n \n \n   }\n \n+  @Test\n   public void testSerialization()\n   throws DerivativeException, IOException, ClassNotFoundException {\n \n \n   }\n \n+  @Test\n   public void testImpossibleSerialization()\n   throws IOException {\n \n       }\n   }\n \n-\n-  public void testSerializationError()\n-  throws IOException {\n-\n-    double[] y = { 0.0, 1.0, -2.0 };\n-    ErrorGeneratingInterpolator interpolator =\n-        new ErrorGeneratingInterpolator(y, true);\n-    interpolator.storeTime(0);\n-    interpolator.shift();\n-    interpolator.storeTime(1);\n-\n-    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n-    ObjectOutputStream    oos = new ObjectOutputStream(bos);\n-    oos.writeObject(interpolator);\n-\n-    assertTrue(bos.size () > 300);\n-    assertTrue(bos.size () < 350);\n-\n-    ByteArrayInputStream  bis = new ByteArrayInputStream(bos.toByteArray());\n-    ObjectInputStream     ois = new ObjectInputStream(bis);\n-    try {\n-        ois.readObject();\n-        fail(\"an exception should have been thrown\");\n-    } catch (IOException ioe) {\n-        // expected behavior\n-        assertEquals(0, ioe.getMessage().length());\n-    } catch (Exception e) {\n-        fail(\"wrong exception caught\");\n-    }\n-\n-  }\n-\n-  private static class ErrorGeneratingInterpolator extends DummyStepInterpolator {\n-      public ErrorGeneratingInterpolator() {\n-          super();\n-      }\n-      protected ErrorGeneratingInterpolator(double[] y, boolean forward) {\n-          super(y, forward);\n-      }\n-      @Override\n-      public void computeInterpolatedState(double theta, double oneMinusThetaH)\n-      throws DerivativeException {\n-          throw new DerivativeException(null);\n-      }\n-      private static final long serialVersionUID = 0x3f6ab636f0c93571L;\n-  }\n-\n-  public static Test suite() {\n-    return new TestSuite(DummyStepInterpolatorTest.class);\n-  }\n-\n }", "timestamp": 1244401997, "metainfo": ""}