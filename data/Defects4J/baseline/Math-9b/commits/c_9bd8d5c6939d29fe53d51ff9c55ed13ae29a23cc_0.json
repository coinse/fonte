{"sha": "9bd8d5c6939d29fe53d51ff9c55ed13ae29a23cc", "log": "MATH-503 Added gaussian function. Added \"package.html\" doc file.   ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+/**\n+ * <a href=\"http://en.wikipedia.org/wiki/Gaussian_function\">\n+ *  Gaussian</a> function.\n+ *\n+ * @version $Revision$ $Date$\n+ * @since 3.0\n+ */\n+public class Gaussian implements UnivariateRealFunction {\n+    /** Mean. */\n+    private final double mean;\n+    /** Inverse of twice the square of the standard deviation. */\n+    private final double i2s2;\n+    /** Normalization factor. */\n+    private final double norm;\n+\n+    /**\n+     * Gaussian with given normalization factor, mean and standard deviation.\n+     *\n+     * @param norm Normalization factor.\n+     * @param mean Mean.\n+     * @param sigma Standard deviation.\n+     * @throws NotStrictlyPositiveException if {@code sigma <= 0}.\n+     */\n+    public Gaussian(double norm,\n+                    double mean,\n+                    double sigma) {\n+        if (sigma <= 0) {\n+            throw new NotStrictlyPositiveException(sigma);\n+        }\n+\n+        this.norm = norm;\n+        this.mean = mean;\n+        this.i2s2 = 1 / (2 * sigma * sigma);\n+    }\n+\n+    /**\n+     * Normalized gaussian with given mean and standard deviation.\n+     *\n+     * @param mean Mean.\n+     * @param sigma Standard deviation.\n+     * @throws NotStrictlyPositiveException if {@code sigma <= 0}.\n+     */\n+    public Gaussian(double mean,\n+                    double sigma) {\n+        this(1 / (sigma * FastMath.sqrt(2 * Math.PI)), mean, sigma);\n+    }\n+\n+    /**\n+     * Normalized gaussian with zero mean and unit standard deviation.\n+     */\n+    public Gaussian() {\n+        this(0, 1);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public double value(double x) {\n+        final double diff = x - mean;\n+        return norm * FastMath.exp(-diff * diff * i2s2);\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/analysis/function/GaussianTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for class {@link Gaussian}.\n+ */\n+public class GaussianTest {\n+    private final double EPS = Math.ulp(1d);\n+\n+    @Test(expected=NotStrictlyPositiveException.class)\n+    public void testPreconditions() {\n+        new Gaussian(1, 2, -1);\n+    }\n+\n+    @Test\n+    public void testSomeValues() {\n+        final UnivariateRealFunction f = new Gaussian();\n+\n+        Assert.assertEquals(0, f.value(Double.NEGATIVE_INFINITY), 0);\n+        Assert.assertEquals(1 / FastMath.sqrt(2 * Math.PI), f.value(0), EPS);\n+        Assert.assertEquals(0, f.value(Double.POSITIVE_INFINITY), 0);\n+    }\n+}", "timestamp": 1297077462, "metainfo": ""}