{"sha": "f21635e1386075c761428b9b2cac1fdd7c05a495", "log": "removed javadoc links to the addValue method which does not belong to the interface  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java\n      */\n     public int getDimension();\n     /**\n-     * Returns an array whose ith entry is the mean of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * mean of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component means\n      */\n     public abstract double[] getMean();\n     /** \n      * Returns the covariance of the available values.\n-     * @return The covariance, null if no values have been added \n-     * or a zeroed matrix for a single value set.  \n+     * @return The covariance, null if no multivariate sample\n+     * have been added or a zeroed matrix for a single value set.  \n      */\n     public abstract RealMatrix getCovariance();\n     /**\n-     * Returns an array whose ith entry is the standard deviation of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * standard deviation of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component standard deviations\n      */\n     public abstract double[] getStandardDeviation();\n     /**\n-     * Returns an array whose ith entry is the maximum of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * maximum of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component maxima\n      */\n     public abstract double[] getMax();\n     /**\n-     * Returns an array whose ith entry is the minimum of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * minimum of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component minima\n      */\n      */\n     public abstract long getN();\n     /**\n-     * Returns an array whose ith entry is the geometric mean of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * geometric mean of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component geometric means\n      */\n     public double[] getGeometricMean();\n     /**\n-     * Returns an array whose ith entry is the sum of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * sum of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component sums\n      */\n     public abstract double[] getSum();\n     /**\n-     * Returns an array whose ith entry is the sum of squares of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * sum of squares of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component sums of squares\n      */\n     public abstract double[] getSumSq();\n     /**\n-     * Returns an array whose ith entry is the sum of logs of the\n-     * ith entries of the arrays that have been added using \n-     * {@link #addValue(double[])}\n+     * Returns an array whose i<sup>th</sup> entry is the\n+     * sum of logs of the i<sup>th</sup> entries of the arrays\n+     * that correspond to each multivariate sample\n      * \n      * @return the array of component log sums\n      */", "timestamp": 1203179380, "metainfo": ""}