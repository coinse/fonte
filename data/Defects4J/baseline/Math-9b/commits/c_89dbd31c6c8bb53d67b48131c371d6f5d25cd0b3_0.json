{"sha": "89dbd31c6c8bb53d67b48131c371d6f5d25cd0b3", "log": "Tab police  ", "commit": "\n--- a/src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java\n         final UnivariateRealSolver solver = new RegulaFalsiSolver();\n         final double root = solver.solve(3624, f, 1, 10);\n         Assert.assertEquals(3.4341896575482003, root, 1e-15);\n-\t}\n+    }\n }\n--- a/src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java\n+++ b/src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java\n             new BOBYQAOptimizer(2 * dim + 1, lB, uB);\n         RealPointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint);        \n //        System.out.println(func.getClass().getName() + \" = \" \n-//        \t\t+ optim.getEvaluations() + \" f(\");\n+//              + optim.getEvaluations() + \" f(\");\n //        for (double x: result.getPoint())  System.out.print(x + \" \");\n //        System.out.println(\") = \" +  result.getValue());\n         Assert.assertEquals(expected.getValue(),", "timestamp": 1315520250, "metainfo": ""}