{"sha": "aaaa530a35e21f88b6002d66ca67f3e6bc461cdb", "log": "Added another OLS test case.  ", "commit": "\n--- a/src/test/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegressionTest.java\n         x[0] = new double[]{1.0, 0};\n         regression.addData(y, x, null);\n     }\n+    \n+    /**\n+     * Loads model Y[] and X[][] arrays from a flat array of data.\n+     * Assumes that rows are concatenated with y values first in each row.\n+     * \n+     * @param data input data array\n+     * @param y vector of y values to be filled\n+     * @param x matrix of x values to be filled\n+     * @param nobs number of observations (rows)\n+     * @param nvars number of independent variables (columnns, not counting y)\n+     */\n+    protected void loadModelData(double[] data, double[] y, double[][] x, int nobs, int nvars) {\n+        int pointer = 0;\n+        for (int i = 0; i < nobs; i++) {\n+            y[i] = data[pointer++];\n+            x[i][0] = 1.0d;\n+            for (int j = 1; j < nvars + 1; j++) {\n+                x[i][j] = data[pointer++];\n+            }\n+        }\n+        \n+    }\n \n }\n--- a/src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java\n         };\n         \n         // Transform to Y and X required by interface\n-        double[] y = new double[16];\n-        double[][] x = new double[16][7];\n-        int pointer = 0;\n-        for (int i = 0; i < 16; i++) {\n-            y[i] = design[pointer++];\n-            x[i][0] = 1.0d;\n-            for (int j = 1; j < 7; j++) {\n-                x[i][j] = design[pointer++];\n-            }\n-        }\n+        int nobs = 16;\n+        int nvars = 6;\n+        double[] y = new double[nobs];\n+        double[][] x = new double[nobs][nvars + 1];\n+        loadModelData(design, y, x, nobs, nvars);\n         \n         // Estimate the model\n         MultipleLinearRegression model = new OLSMultipleLinearRegression();\n         \n         // Check standard errors from NIST\n         double[][] errors = model.estimateRegressionParametersVariance();\n-        //TODO:  translate this into std error vector and check\n-        \n+        //TODO:  translate this into std error vector and check  \n+    }\n+    \n+    /**\n+     * Test R Swiss fertility dataset against R.\n+     * Data Source: R datasets package\n+     */\n+    @Test\n+    public void testSwissFertility() {\n+        double[] design = new double[] {\n+            80.2,17.0,15,12,9.96,\n+            83.1,45.1,6,9,84.84,\n+            92.5,39.7,5,5,93.40,\n+            85.8,36.5,12,7,33.77,\n+            76.9,43.5,17,15,5.16,\n+            76.1,35.3,9,7,90.57,\n+            83.8,70.2,16,7,92.85,\n+            92.4,67.8,14,8,97.16,\n+            82.4,53.3,12,7,97.67,\n+            82.9,45.2,16,13,91.38,\n+            87.1,64.5,14,6,98.61,\n+            64.1,62.0,21,12,8.52,\n+            66.9,67.5,14,7,2.27,\n+            68.9,60.7,19,12,4.43,\n+            61.7,69.3,22,5,2.82,\n+            68.3,72.6,18,2,24.20,\n+            71.7,34.0,17,8,3.30,\n+            55.7,19.4,26,28,12.11,\n+            54.3,15.2,31,20,2.15,\n+            65.1,73.0,19,9,2.84,\n+            65.5,59.8,22,10,5.23,\n+            65.0,55.1,14,3,4.52,\n+            56.6,50.9,22,12,15.14,\n+            57.4,54.1,20,6,4.20,\n+            72.5,71.2,12,1,2.40,\n+            74.2,58.1,14,8,5.23,\n+            72.0,63.5,6,3,2.56,\n+            60.5,60.8,16,10,7.72,\n+            58.3,26.8,25,19,18.46,\n+            65.4,49.5,15,8,6.10,\n+            75.5,85.9,3,2,99.71,\n+            69.3,84.9,7,6,99.68,\n+            77.3,89.7,5,2,100.00,\n+            70.5,78.2,12,6,98.96,\n+            79.4,64.9,7,3,98.22,\n+            65.0,75.9,9,9,99.06,\n+            92.2,84.6,3,3,99.46,\n+            79.3,63.1,13,13,96.83,\n+            70.4,38.4,26,12,5.62,\n+            65.7,7.7,29,11,13.79,\n+            72.7,16.7,22,13,11.22,\n+            64.4,17.6,35,32,16.92,\n+            77.6,37.6,15,7,4.97,\n+            67.6,18.7,25,7,8.65,\n+            35.0,1.2,37,53,42.34,\n+            44.7,46.6,16,29,50.43,\n+            42.8,27.7,22,29,58.33\n+        };\n+\n+        // Transform to Y and X required by interface\n+        int nobs = 47;\n+        int nvars = 4;\n+        double[] y = new double[nobs];\n+        double[][] x = new double[nobs][nvars + 1];\n+        loadModelData(design, y, x, nobs, nvars);\n+\n+        // Estimate the model\n+        MultipleLinearRegression model = new OLSMultipleLinearRegression();\n+        model.addData(y, x, null);\n+\n+        // Check expected beta values from R\n+        double[] betaHat = model.estimateRegressionParameters();\n+        TestUtils.assertEquals(betaHat, \n+                new double[]{91.05542390271397,\n+                -0.22064551045715,\n+                -0.26058239824328,\n+                -0.96161238456030,\n+                 0.12441843147162}, 1E-12);\n+\n+        // Check expected residuals from R\n+        double[] residuals = model.estimateResiduals();\n+        TestUtils.assertEquals(residuals, new double[]{\n+                7.1044267859730512,1.6580347433531366,\n+                4.6944952770029644,8.4548022690166160,13.6547432343186212,\n+               -9.3586864458500774,7.5822446330520386,15.5568995563859289,\n+                0.8113090736598980,7.1186762732484308,7.4251378771228724,\n+                2.6761316873234109,0.8351584810309354,7.1769991119615177,\n+               -3.8746753206299553,-3.1337779476387251,-0.1412575244091504,\n+                1.1186809170469780,-6.3588097346816594,3.4039270429434074,\n+                2.3374058329820175,-7.9272368576900503,-7.8361010968497959,\n+               -11.2597369269357070,0.9445333697827101,6.6544245101380328,\n+               -0.9146136301118665,-4.3152449403848570,-4.3536932047009183,\n+               -3.8907885169304661,-6.3027643926302188,-7.8308982189289091,\n+               -3.1792280015332750,-6.7167298771158226,-4.8469946718041754,\n+               -10.6335664353633685,11.1031134362036958,6.0084032641811733,\n+                5.4326230830188482,-7.2375578629692230,2.1671550814448222,\n+                15.0147574652763112,4.8625103516321015,-7.1597256413907706,\n+                -0.4515205619767598,-10.2916870903837587,-15.7812984571900063},\n+                1E-12);  \n     }\n }", "timestamp": 1213477171, "metainfo": ""}