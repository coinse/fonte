{"sha": "9dd9778a7cf24ea9fad3bb67bcaec9bc3728ce47", "log": "PR: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23013 Submitted by:\tBrent Warden Reviewed by:\tMark Diggory  I also regenerated the build.xml using Maven to get the Discovery dependency added in.   ", "commit": "\n--- a/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java\n  */\n package org.apache.commons.math.analysis;\n \n+import org.apache.commons.discovery.tools.DiscoverClass;\n+\n /**\n  * A factory to easily get a default solver and some convenience\n  * functions.\n  * (this may be controversial, because the configuration data\n  * may also be used for the default solver used by the static\n  * solve() method). \n- * @version $Revision: 1.5 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/17 19:29:32 $\n  */\n public abstract class UnivariateRealSolverFactory {\n     /**\n     /**\n      * Create a new factory.\n      * @return a new factory.\n-     * @todo for now, return the only concrete factory.  Later, allow for a\n-     *       plugable implementation, possibly using SPI and commons-discovery.\n      */\n     public static UnivariateRealSolverFactory newInstance() {\n-        return new UnivariateRealSolverFactoryImpl();\n+        UnivariateRealSolverFactory factory = null;\n+        try {\n+            DiscoverClass dc = new DiscoverClass();\n+            factory = (UnivariateRealSolverFactory) dc.newInstance(\n+                UnivariateRealSolverFactory.class,\n+                \"org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl\");\n+        } catch(Exception ex) {\n+            // ignore as default implementation will be used.\n+        }\n+        return factory;\n     }\n     \n     /**\n--- a/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java\n+++ b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java\n  * (this may be controversial, because the configuration data\n  * may also be used for the default solver used by the static\n  * solve() method). \n- * @version $Revision: 1.1 $ $Date: 2003/07/30 22:06:37 $\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:32 $\n  */\n public class UnivariateRealSolverFactoryImpl\n     extends UnivariateRealSolverFactory {\n     /**\n      * Default constructor.\n      */\n-    UnivariateRealSolverFactoryImpl() {\n+    public UnivariateRealSolverFactoryImpl() {\n     }\n \n     /**\n--- a/src/java/org/apache/commons/math/distribution/DistributionFactory.java\n+++ b/src/java/org/apache/commons/math/distribution/DistributionFactory.java\n \n package org.apache.commons.math.stat.distribution;\n \n+import org.apache.commons.discovery.tools.DiscoverClass;\n+\n /**\n  * This factory provids the means to create common statistical distributions.\n  * The following distributions are supported:\n  * ChiSquaredDistribution chi = factory.createChiSquareDistribution(5.0);\n  * </pre>\n  * \n- * @version $Revision: 1.11 $ $Date: 2003/09/17 19:19:08 $\n+ * @version $Revision: 1.12 $ $Date: 2003/09/17 19:29:28 $\n  */\n public abstract class DistributionFactory {\n     /**\n     /**\n      * Create an instance of a <code>DistributionFactory</code>\n      * @return a new factory. \n-     * @todo for now, return the only concrete factory.  Later, allow for a\n-     *       plugable implementation, possibly using SPI and commons-discovery.\n      */\n     public static DistributionFactory newInstance() {\n-        return new DistributionFactoryImpl();\n+        DistributionFactory factory = null;\n+        try {\n+            DiscoverClass dc = new DiscoverClass();\n+            factory = (DistributionFactory) dc.newInstance(\n+                DistributionFactory.class,\n+                \"org.apache.commons.math.stat.distribution.DistributionFactoryImpl\");\n+        } catch(Exception ex) {\n+            // ignore as default implementation will be used.\n+        }\n+        return factory;\n     }\n \n     /**\n--- a/src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java\n  * A concrete distribution factory.  This is the default factory used by\n  * Commons-Math.\n  *  \n- * @version $Revision: 1.9 $ $Date: 2003/09/17 19:19:08 $\n+ * @version $Revision: 1.10 $ $Date: 2003/09/17 19:29:28 $\n  */\n public class DistributionFactoryImpl extends DistributionFactory {\n     /**\n      * Default constructor.  Package scope to prevent unwanted instantiation. \n      */\n-    DistributionFactoryImpl() {\n+    public DistributionFactoryImpl() {\n         super();\n     }\n     \n--- a/src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java\n /**\n  * The default implementation of {@link GammaDistribution}\n  * \n- * @version $Revision: 1.5 $ $Date: 2003/07/09 20:03:23 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/17 19:29:28 $\n  */\n public class GammaDistributionImpl extends AbstractContinuousDistribution\n     implements GammaDistribution {\n      * \n      * @param p the desired probability for the critical value\n      * @return domain value lower bound, i.e.\n-     *         P(X &lt; <i>lower bound</i>) &lt; <code>p</code> \n+     *         P(X &lt; <i>lower bound</i>) &lt; <code>p</code>\n+     * @todo try to improve on this estimate\n      */\n     protected double getDomainLowerBound(double p) {\n-        // TODO: try to improve on this estimate\n         return Double.MIN_VALUE;\n     }\n \n      * @param p the desired probability for the critical value\n      * @return domain value upper bound, i.e.\n      *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code> \n+     * @todo try to improve on this estimate\n      */\n     protected double getDomainUpperBound(double p) {\n         // NOTE: gamma is skewed to the left\n         // NOTE: therefore, P(X < &mu;) > .5\n-        // TODO: try to improve on this estimate\n \n         double ret;\n \n      * \n      * @param p the desired probability for the critical value\n      * @return initial domain value\n+     * @todo try to improve on this estimate\n      */\n     protected double getInitialDomain(double p) {\n         // NOTE: gamma is skewed to the left\n         // NOTE: therefore, P(X < &mu;) > .5\n-        // TODO: try to improve on this estimate\n \n         double ret;\n \n--- a/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n  * build grouped frequnecy histograms representing the input data or to\n  * generate random values \"like\" those in the input file -- i.e., the values\n  * generated will follow the distribution of the values in the file.\n- * @version $Revision: 1.4 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/17 19:29:31 $\n  */\n public interface EmpiricalDistribution {\n     \n     void load(File file) throws IOException;\n     \n     /** \n-     * Generates a random value from this distribution<p>\n+     * Generates a random value from this distribution.\n      * <strong>Preconditions:</strong><ul>\n      * <li>the distribution must be loaded before invoking this method</li></ul>\n      * @return the random value.\n     \n      \n     /** \n-     * <p>Returns a Univariate describing this distribution</p>\n+     * Returns a Univariate describing this distribution.\n      * <strong>Preconditions:</strong><ul>\n      * <li>the distribution must be loaded before invoking this method</li></ul>\n      * @return the sample statistics\n     ArrayList getBinStats();\n     \n     /** \n-     * Returns the array of upper bounds for the bins.  Bins are: <br>\n+     * Returns the array of upper bounds for the bins.  Bins are: <br/>\n      * [min,upperBounds[0]],(upperBounds[0],upperBounds[1]],...,\n      *  (upperBounds[binCount-1],max]\n      * @return array of bin upper bounds\n--- a/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n import org.apache.commons.math.stat.UnivariateImpl;\n \n /**\n- * Implements <code>EmpiricalDistribution</code> interface using \n- * what amounts to the \n+ * Implements <code>EmpiricalDistribution</code> interface.  This implementation\n+ * uses what amounts to the \n  * <a href=\"http://nedwww.ipac.caltech.edu/level5/March02/Silverman/Silver2_6.html\">\n  * Variable Kernel Method</a> with Gaussian smoothing:<p>\n  * <strong>Digesting the input file</strong>\n  *    entry per line.</li>\n  * </ol></p>\n  *\n- * @version $Revision: 1.4 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class EmpiricalDistributionImpl implements Serializable,EmpiricalDistribution {\n \n--- a/src/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/java/org/apache/commons/math/random/RandomDataImpl.java\n  * (so secure sequences started with calls to reseedSecure(long) won't be \n  * identical).</li></ul>\n  * \n- * @version $Revision: 1.3 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class RandomDataImpl implements RandomData {\n     \n     \n     /**\n      * Sets the PRNG algorithm for the underlying SecureRandom instance\n-     * using the Security Provider API, as defined in \n-     * <a href=\"http://java.sun.com/j2se/1.3/docs/guide/security/\n-     * CryptoSpec.html#AppA\">\n+     * using the Security Provider API.  The Security Provider API is defined in \n+     * <a href=\"http://java.sun.com/j2se/1.3/docs/guide/security/CryptoSpec.html#AppA\">\n      * Java Cryptography Architecture API Specification & Reference.</a>\n      * <p>\n      * <strong>USAGE NOTE:</strong> This method carries <i>significant</i> \n      * overhead and may take several seconds to execute.\n+     * </p>\n      *\n      * @param algorithm the name of the PRNG algorithm\n      * @param provider the name of the provider \n     }\n     \n     /**\n-     * Uses a 2-cycle permutation shuffle, as described\n+     * Uses a 2-cycle permutation shuffle to generate a random permutation.\n+     * The shuffling process is described\n      * <a href=http://www.maths.abdn.ac.uk/~igc/tch/mx4002/notes/node83.html>\n-     * here</a>\n+     * here</a>.\n      * @param n the population size.\n      * @param k the number to choose.\n      * @return the random permutation.\n     }\n     \n     /**\n+     * Uses a 2-cycle permutation shuffle to generate a random permutation.\n      * <strong>Algorithm Description</strong>: Uses a 2-cycle permutation \n      * shuffle to generate a random permutation of <code>c.size()</code> and \n      * then returns the elements whose indexes correspond to the elements of \n     //------------------------Private methods----------------------------------\n     \n     /** \n-     * <strong>Algorithm Description</strong>: Uses a 2-cycle permutation \n-     * shuffle to randomly re-order the last <code>end</code> elements of list.\n+     * Uses a 2-cycle permutation shuffle to randomly re-order the last elements\n+     * of list.\n      * \n      * @param list list to be shuffled\n      * @param end element past which shuffling begins\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/Kurtosis.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/Kurtosis.java\n     .AbstractStorelessUnivariateStatistic;\n \n /**\n- * @version $Revision: 1.8 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.9 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class Kurtosis extends AbstractStorelessUnivariateStatistic {\n \n     Mean mean = new Mean();\n \n     /**\n-    * This algorithm uses a corrected two pass algorithm of the following\n+     * Returns the kurtosis for this collection of values. Kurtosis is a\n+     * measure of the \"peakedness\" of a distribution.  This algorithm uses a\n+     * corrected two pass algorithm of the following\n      * <a href=\"http://lib-www.lanl.gov/numerical/bookcpdf/c14-1.pdf\">\n      * corrected two pass formula (14.1.8)</a>, and also referenced in:\n      * <p>\n      * Recommendations\", Chan, T.F., Golub, G.H., and LeVeque, R.J.\n      * 1983, American Statistician, vol. 37, pp. 242?247.\n      * </p>\n-    * Returns the kurtosis for this collection of values. Kurtosis is a\n-    * measure of the \"peakedness\" of a distribution.\n-    * @param values Is a double[] containing the values\n-    * @param begin processing at this point in the array\n-    * @param length processing at this point in the array\n-    * @return the kurtosis of the values or Double.NaN if the array is empty\n-    */\n+     * @param values Is a double[] containing the values\n+     * @param begin processing at this point in the array\n+     * @param length processing at this point in the array\n+     * @return the kurtosis of the values or Double.NaN if the array is empty\n+     */\n     public double evaluate(\n         final double[] values,\n         final int begin,\n--- a/src/java/org/apache/commons/math/stat/univariate/moment/Skewness.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/moment/Skewness.java\n  */\n package org.apache.commons.math.stat.univariate.moment;\n \n-import org\n-    .apache\n-    .commons\n-    .math\n-    .stat\n-    .univariate\n-    .AbstractStorelessUnivariateStatistic;\n+import org.apache.commons.math.stat.univariate.AbstractStorelessUnivariateStatistic;\n \n /**\n- *\n- * @version $Revision: 1.8 $ $Date: 2003/09/07 03:12:56 $\n+ * @version $Revision: 1.9 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class Skewness extends AbstractStorelessUnivariateStatistic {\n \n     Mean mean = new Mean();\n \n     /**\n+     * Returns the skewness of a collection of values.  Skewness is a\n+     * measure of the assymetry of a given distribution.\n      * This algorithm uses a corrected two pass algorithm of the following\n      * <a href=\"http://lib-www.lanl.gov/numerical/bookcpdf/c14-1.pdf\">\n      * corrected two pass formula (14.1.8)</a>, and also referenced in\n      * Recommendations\", Chan, T.F., Golub, G.H., and LeVeque, R.J.\n      * 1983, American Statistician, vol. 37, pp. 242?247.\n      * </p>\n-     * Returns the skewness of a collection of values.  Skewness is a\n-     * measure of the assymetry of a given distribution.\n      * @param values Is a double[] containing the values\n      * @param begin processing at this point in the array\n      * @param length processing at this point in the array\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n package org.apache.commons.math.util;\n \n /**\n- * Some useful additions to the built-in functions in lang.Math<p>\n- *\n- * @version $Revision: 1.3 $ $Date: 2003/08/09 04:03:41 $\n+ * Some useful additions to the built-in functions in {@link Math}.\n+ *\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public final class MathUtils {\n \n     }\n \n     /**\n-     * Returns <code>n</code>\n+     * Returns n!.  Shorthand for <code>n</code>\n      * <a href=\"http://mathworld.wolfram.com/Factorial.html\">\n-     * Factorial</a>, or <code>n!</code>,\n-     * the product of the numbers <code>1,...,n</code>.\n+     * Factorial</a>, the product of the numbers <code>1,...,n</code>.\n+     * \n      * <p>\n      * <Strong>Preconditions</strong>:<ul>\n      * <li> <code>n > 0</code> (otherwise\n      *      exceeds <code>Long.MAX_VALUE</code> an <code>ArithMeticException\n      *      </code> is thrown.</li>\n      * </ul>\n-     *\n+     * </p>\n+     * \n      * @param n argument\n      * @return <code>n!</code>\n      */\n     }\n \n     /**\n-     * Returns <code>n</code>\n+     * Returns n!.  Shorthand for <code>n</code>\n      * <a href=\"http://mathworld.wolfram.com/Factorial.html\">\n-     * Factorial</a>, or <code>n!</code>,\n-     * the product of the numbers <code>1,...,n</code>, as as\n+     * Factorial</a>, the product of the numbers <code>1,...,n</code> as a\n      * <code>double</code>.\n+     * \n      * <p>\n      * <Strong>Preconditions</strong>:<ul>\n      * <li> <code>n > 0</code> (otherwise\n      *      < Double.MAX_VALUE</code> is 170.  If the computed value exceeds\n      *      Double.MAX_VALUE, Double.POSITIVE_INFINITY is returned</li>\n      * </ul>\n-     *\n+     * </p>\n+     * \n      * @param n argument\n      * @return <code>n!</code>\n      */\n     }\n \n     /**\n-      * Returns the natural <code>log</code> of <code>n</code>\n-      * <a href=\"http://mathworld.wolfram.com/Factorial.html\">\n-      * Factorial</a>, or <code>n!</code>,\n-      * the product of the numbers <code>1,...,n</code>, as as\n-      * <code>double</code>.\n+      * Returns the natural logarithm of n!.\n       * <p>\n       * <Strong>Preconditions</strong>:<ul>\n       * <li> <code>n > 0</code> (otherwise\n--- a/src/test/org/apache/commons/math/TestUtils.java\n+++ b/src/test/org/apache/commons/math/TestUtils.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n package org.apache.commons.math;\n \n import junit.framework.Assert;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:32 $\n  */\n public class TestUtils {\n     /**\n--- a/src/test/org/apache/commons/math/analysis/BisectionSolverTest.java\n+++ b/src/test/org/apache/commons/math/analysis/BisectionSolverTest.java\n import junit.framework.TestCase;\n \n /**\n- *\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:27 $\n  */\n public final class BisectionSolverTest extends TestCase {\n     /**\n--- a/src/test/org/apache/commons/math/analysis/InterpolatorTest.java\n+++ b/src/test/org/apache/commons/math/analysis/InterpolatorTest.java\n \n /**\n  * Test the interpolation framework.\n- * \n- * @author pietsch at apache.org\n- *\n+ *\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:27 $ \n  */\n public class InterpolatorTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/analysis/QuinticFunction.java\n+++ b/src/test/org/apache/commons/math/analysis/QuinticFunction.java\n \n /**\n  * Auxillary class for testing solvers.\n- * \n- * @author pietsch at apache.org\n  *\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $ \n  */\n public class QuinticFunction implements UnivariateRealFunction {\n \n--- a/src/test/org/apache/commons/math/analysis/RealSolverTest.java\n+++ b/src/test/org/apache/commons/math/analysis/RealSolverTest.java\n  * default absolute accuracy of 10E-8 for sinus and the quintic function around\n  * zero, and 5..10 iterations for the other zeros.\n  * \n- * @author pietsch at apache.org\n- *\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:27 $\n  */\n public final class RealSolverTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/analysis/SinFunction.java\n+++ b/src/test/org/apache/commons/math/analysis/SinFunction.java\n  * which means linear approximation (Regula Falsi) will converge\n  * quadratically.\n  * \n- * @author pietsch at apache.org\n- *\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class SinFunction implements UnivariateRealFunction {\n \n--- a/src/test/org/apache/commons/math/beans/Patient.java\n+++ b/src/test/org/apache/commons/math/beans/Patient.java\n  */\n package org.apache.commons.math.beans;\n \n+/**\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:32 $\n+ */\n public class Patient {\n \n     private VitalStats vitalStats;\n--- a/src/test/org/apache/commons/math/beans/VitalStats.java\n+++ b/src/test/org/apache/commons/math/beans/VitalStats.java\n  */\n package org.apache.commons.math.beans;\n \n+/**\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:32 $\n+ */\n public class VitalStats {\n \n     private Double heartrate;\n--- a/src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class BinomialDistributionTest extends TestCase {\n     private BinomialDistribution b;\n--- a/src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n package org.apache.commons.math.stat.distribution;\n \n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class ChiSquareDistributionTest extends TestCase {\n     private ChiSquaredDistribution chiSquare;\n--- a/src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java\n+++ b/src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n package org.apache.commons.math.stat.distribution;\n \n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.9 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class DistributionFactoryImplTest extends TestCase {\n     /** */\n--- a/src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class ExponentialDistributionTest extends TestCase {\n     private ExponentialDistribution exp;\n--- a/src/test/org/apache/commons/math/distribution/FDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/FDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class FDistributionTest extends TestCase {\n     private FDistribution f;\n--- a/src/test/org/apache/commons/math/distribution/GammaDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/GammaDistributionTest.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n package org.apache.commons.math.stat.distribution;\n \n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class GammaDistributionTest extends TestCase {\n \t/**\n--- a/src/test/org/apache/commons/math/distribution/TDistributionTest.java\n+++ b/src/test/org/apache/commons/math/distribution/TDistributionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:30 $\n  */\n public class TDistributionTest extends TestCase {\n     private TDistribution t;\n--- a/src/test/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/org/apache/commons/math/random/ValueServerTest.java\n /**\n  * Test cases for the ValueServer class.\n  *\n- * @version $Revision: 1.2 $\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:29 $\n  */\n \n public final class ValueServerTest extends TestCase {\n--- a/src/test/org/apache/commons/math/special/BetaTest.java\n+++ b/src/test/org/apache/commons/math/special/BetaTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class BetaTest extends TestCase {\n     /**\n--- a/src/test/org/apache/commons/math/special/GammaTest.java\n+++ b/src/test/org/apache/commons/math/special/GammaTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class GammaTest extends TestCase {\n     /**\n--- a/src/test/org/apache/commons/math/stat/BeanListUnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/BeanListUnivariateImplTest.java\n /**\n  * Test cases for the {@link BeanListUnivariateImpl} class.\n  *\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Revision: 1.3 $ $Date: 2003/07/30 21:58:11 $\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:32 $\n  */\n \n public final class BeanListUnivariateImplTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/UnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/UnivariateImplTest.java\n /**\n  * Test cases for the {@link Univariate} class.\n  *\n- * @author Tim Obrien\n- * @version $Revision: 1.6 $ $Date: 2003/07/09 21:45:24 $\n+ * @version $Revision: 1.7 $ $Date: 2003/09/17 19:29:32 $\n  */\n \n public final class UnivariateImplTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/univariate/InteractionTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/InteractionTest.java\n import junit.framework.TestCase;\n \n /**\n- *\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:28 $\n  */\n public class InteractionTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n  */\n package org.apache.commons.math.stat.univariate;\n \n-import junit.framework.TestCase;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:28 $\n  */\n public abstract class StorelessUnivariateStatisticAbstractTest\n     extends UnivariateStatisticAbstractTest {\n--- a/src/test/org/apache/commons/math/stat/univariate/UnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/UnivariateStatisticAbstractTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:28 $\n  */\n public abstract class UnivariateStatisticAbstractTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class GeometricMeanTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/KurtosisTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/KurtosisTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class KurtosisTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/MeanTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/MeanTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class MeanTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/SkewnessTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/SkewnessTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * \n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class SkewnessTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/StandardDeviationTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/StandardDeviationTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * \n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class StandardDeviationTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/VarianceTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/VarianceTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * \n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:27 $\n  */\n public class VarianceTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MaxTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MaxTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class MaxTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MedianTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MedianTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class MedianTest extends UnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MinTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MinTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class MinTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class PercentileTest extends UnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class ProductTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class SumLogTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumSqTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumSqTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class SumSqTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumTest.java\n \n import org.apache.commons.math.stat.univariate.StorelessUnivariateStatisticAbstractTest;\n import org.apache.commons.math.stat.univariate.UnivariateStatistic;\n-import org.apache.commons.math.stat.univariate.UnivariateStatisticAbstractTest;\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:31 $\n  */\n public class SumTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/util/ContinuedFractionTest.java\n+++ b/src/test/org/apache/commons/math/util/ContinuedFractionTest.java\n import junit.framework.TestCase;\n \n /**\n- * @author Brent Worden\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class ContinuedFractionTest extends TestCase {\n \t/**\n--- a/src/test/org/apache/commons/math/util/ContractableDoubleArrayTest.java\n+++ b/src/test/org/apache/commons/math/util/ContractableDoubleArrayTest.java\n /**\n  * This class contains test cases for the ExpandableDoubleArray.\n  * \n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @version $Revision: 1.2 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class ContractableDoubleArrayTest extends ExpandableDoubleArrayTest {\n \n--- a/src/test/org/apache/commons/math/util/DoubleArrayAbstractTest.java\n+++ b/src/test/org/apache/commons/math/util/DoubleArrayAbstractTest.java\n /**\n  * This class contains test cases for the ExpandableDoubleArray.\n  * \n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:29 $\n  */\n public abstract class DoubleArrayAbstractTest extends TestCase {\n \n--- a/src/test/org/apache/commons/math/util/ExpandableDoubleArrayTest.java\n+++ b/src/test/org/apache/commons/math/util/ExpandableDoubleArrayTest.java\n /**\n  * This class contains test cases for the ExpandableDoubleArray.\n  * \n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @version $Revision: 1.3 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class ExpandableDoubleArrayTest extends DoubleArrayAbstractTest {\n \n--- a/src/test/org/apache/commons/math/util/FixedDoubleArrayTest.java\n+++ b/src/test/org/apache/commons/math/util/FixedDoubleArrayTest.java\n /**\n  * This class contains test cases for the ExpandableDoubleArray.\n  * \n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @version $Revision: 1.4 $ $Date: 2003/09/17 19:29:29 $\n  */\n public class FixedDoubleArrayTest extends DoubleArrayAbstractTest {\n ", "timestamp": 1063826972, "metainfo": ""}