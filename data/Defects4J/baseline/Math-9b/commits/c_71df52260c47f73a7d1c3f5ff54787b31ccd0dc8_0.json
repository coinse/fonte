{"sha": "71df52260c47f73a7d1c3f5ff54787b31ccd0dc8", "log": "Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/transform/TransformUtils.java\n+++ b/src/main/java/org/apache/commons/math/transform/TransformUtils.java\n \n /**\n  * Useful functions for the implementation of various transforms.\n+ *\n+ * @version $Id $\n+ * @since 3.0\n  */\n public class TransformUtils {\n     /** Private constructor. */\n      * @return a reference to the scaled array\n      */\n     public static double[] scaleArray(double[] f, double d) {\n-    \n+\n         for (int i = 0; i < f.length; i++) {\n             f[i] *= d;\n         }\n      * @return a reference to the scaled array\n      */\n     public static Complex[] scaleArray(Complex[] f, double d) {\n-    \n+\n         for (int i = 0; i < f.length; i++) {\n             f[i] = new Complex(d * f[i].getReal(), d * f[i].getImaginary());\n         }", "timestamp": 1325736595, "metainfo": ""}