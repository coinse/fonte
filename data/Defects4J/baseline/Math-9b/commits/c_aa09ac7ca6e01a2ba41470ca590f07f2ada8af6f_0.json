{"sha": "aa09ac7ca6e01a2ba41470ca590f07f2ada8af6f", "log": "Fixed wrong return values when enpoints are roots in Brent solver with a user provided initial guess JIRA: MATH-344  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n+            setResult(min, 0);\n             return result;\n         }\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n+            setResult(max, 0);\n             return result;\n         }\n \n--- a/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n+++ b/src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java\n \n         // endpoint is root\n         double result = solver.solve(f, Math.PI, 4);\n-        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n+        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n \n         result = solver.solve(f, 3, Math.PI);\n-        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n+        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n+\n+        result = solver.solve(f, Math.PI, 4, 3.5);\n+        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n+\n+        result = solver.solve(f, 3, Math.PI, 3.07);\n+        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n+\n     }\n \n     public void testBadEndpoints() throws Exception {", "timestamp": 1266959365, "metainfo": ""}