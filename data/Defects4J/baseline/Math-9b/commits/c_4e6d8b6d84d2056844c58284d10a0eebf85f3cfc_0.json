{"sha": "4e6d8b6d84d2056844c58284d10a0eebf85f3cfc", "log": "Replaced package.html with package-info.java for package documentation.  JIRA: MATH-445  ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/function/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *    <p>\n+ *      The {@code function} package contains function objects that wrap the\n+ *      methods contained in {@link java.lang.Math}, as well as common\n+ *      mathematical functions such as the gaussian and sinc functions.\n+ *    </p>\n+ *  \n+ */\n+package org.apache.commons.math.analysis.function;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/integration/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Numerical integration (quadrature) algorithms for univariate real functions.\n+ *    \n+ */\n+package org.apache.commons.math.analysis.integration;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/interpolation/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Univariate real functions interpolation algorithms.\n+ *    \n+ */\n+package org.apache.commons.math.analysis.interpolation;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *    <p>\n+ *      Parent package for common numerical analysis procedures, including root finding,\n+ *      function interpolation and integration. Note that the optimization (i.e. minimization\n+ *      and maximization) is a huge separate top package, despite it also operate on functions\n+ *      as defined by this top-level package.\n+ *    </p>\n+ *    <p>\n+ *      Functions interfaces are intended to be implemented by user code to represent their\n+ *      domain problems. The algorithms provided by the library will then operate on these\n+ *      function to find their roots, or integrate them, or ... Functions can be multivariate\n+ *      or univariate, real vectorial or matrix valued, and they can be differentiable or not.\n+ *    </p>\n+ *  \n+ */\n+package org.apache.commons.math.analysis;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/polynomials/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Univariate real polynomials implementations, seen as differentiable\n+ *     univariate real functions.\n+ *    \n+ */\n+package org.apache.commons.math.analysis.polynomials;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Root finding algorithms, for univariate real functions.\n+ *    \n+ */\n+package org.apache.commons.math.analysis.solvers;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/complex/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Complex number type and implementations of complex transcendental\n+ *     functions.\n+ *    \n+ */\n+package org.apache.commons.math.complex;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/dfp/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *Decimal floating point library for Java\n+ *\n+ *<p>Another floating point class.  This one is built using radix 10000\n+ *which is 10<sup>4</sup>, so its almost decimal.</p>\n+ *\n+ *<p>The design goals here are:\n+ *<ol>\n+ *  <li>Decimal math, or close to it</li>\n+ *  <li>Settable precision (but no mix between numbers using different settings)</li>\n+ *  <li>Portability.  Code should be keep as portable as possible.</li>\n+ *  <li>Performance</li>\n+ *  <li>Accuracy  - Results should always be +/- 1 ULP for basic\n+ *       algebraic operation</li>\n+ *  <li>Comply with IEEE 854-1987 as much as possible.\n+ *       (See IEEE 854-1987 notes below)</li>\n+ *</ol></p>\n+ *\n+ *<p>Trade offs:\n+ *<ol>\n+ *  <li>Memory foot print.  I'm using more memory than necessary to\n+ *       represent numbers to get better performance.</li>\n+ *  <li>Digits are bigger, so rounding is a greater loss.  So, if you\n+ *       really need 12 decimal digits, better use 4 base 10000 digits\n+ *       there can be one partially filled.</li>\n+ *</ol></p>\n+ *\n+ *<p>Numbers are represented  in the following form:\n+ *<pre>\n+ *n  =  sign &times; mant &times; (radix)<sup>exp</sup>;</p>\n+ *</pre>\n+ *where sign is &plusmn;1, mantissa represents a fractional number between\n+ *zero and one.  mant[0] is the least significant digit.\n+ *exp is in the range of -32767 to 32768</p>\n+ *\n+ *<p>IEEE 854-1987  Notes and differences</p>\n+ *\n+ *<p>IEEE 854 requires the radix to be either 2 or 10.  The radix here is\n+ *10000, so that requirement is not met, but  it is possible that a\n+ *subclassed can be made to make it behave as a radix 10\n+ *number.  It is my opinion that if it looks and behaves as a radix\n+ *10 number then it is one and that requirement would be met.</p>\n+ *\n+ *<p>The radix of 10000 was chosen because it should be faster to operate\n+ *on 4 decimal digits at once instead of one at a time.  Radix 10 behavior\n+ *can be realized by add an additional rounding step to ensure that\n+ *the number of decimal digits represented is constant.</p>\n+ *\n+ *<p>The IEEE standard specifically leaves out internal data encoding,\n+ *so it is reasonable to conclude that such a subclass of this radix\n+ *10000 system is merely an encoding of a radix 10 system.</p>\n+ *\n+ *<p>IEEE 854 also specifies the existence of \"sub-normal\" numbers.  This\n+ *class does not contain any such entities.  The most significant radix\n+ *10000 digit is always non-zero.  Instead, we support \"gradual underflow\"\n+ *by raising the underflow flag for numbers less with exponent less than\n+ *expMin, but don't flush to zero until the exponent reaches MIN_EXP-digits.\n+ *Thus the smallest number we can represent would be:\n+ *1E(-(MIN_EXP-digits-1)&lowast;4),  eg, for digits=5, MIN_EXP=-32767, that would\n+ *be 1e-131092.</p>\n+ *\n+ *<p>IEEE 854 defines that the implied radix point lies just to the right\n+ *of the most significant digit and to the left of the remaining digits.\n+ *This implementation puts the implied radix point to the left of all\n+ *digits including the most significant one.  The most significant digit\n+ *here is the one just to the right of the radix point.  This is a fine\n+ *detail and is really only a matter of definition.  Any side effects of\n+ *this can be rendered invisible by a subclass.</p>\n+ *    \n+ */\n+package org.apache.commons.math.dfp;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/distribution/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Implementations of common discrete and continuous distributions.\n+ */\n+package org.apache.commons.math.distribution;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/exception/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Specialized exceptions for algorithms errors. The exceptions can be localized\n+ *     using simple java properties.\n+ *    \n+ */\n+package org.apache.commons.math.exception;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/exception/util/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *    Classes supporting exception localization.\n+ *  \n+ */\n+package org.apache.commons.math.exception.util;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/filter/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Implementations of common discrete-time linear filters.\n+ */\n+package org.apache.commons.math.filter;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/fraction/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *    Fraction number type and fraction number formatting.\n+ *  \n+ */\n+package org.apache.commons.math.fraction;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/genetics/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides Genetic Algorithms components and implementations.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.genetics;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/euclidean/oned/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides basic 1D geometry components.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.geometry.euclidean.oned;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/euclidean/threed/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides basic 3D geometry components.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.geometry.euclidean.threed;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/euclidean/twod/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides basic 2D geometry components.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.geometry.euclidean.twod;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package is the top level package for geometry. It provides only a few interfaces\n+ *related to vectorial/affine spaces that are implemented in sub-packages.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.geometry;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/partitioning/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *This package provides classes to implement Binary Space Partition trees.\n+ *\n+ *<p>\n+ *{@link org.apache.commons.math.geometry.partitioning.BSPTree BSP trees}\n+ *are an efficient way to represent parts of space and in particular\n+ *polytopes (line segments in 1D, polygons in 2D and polyhedrons in 3D)\n+ *and to operate on them. The main principle is to recursively subdivide\n+ *the space using simple hyperplanes (points in 1D, lines in 2D, planes\n+ *in 3D).\n+ *</p>\n+ *\n+ *<p>\n+ *We start with a tree composed of a single node without any cut\n+ *hyperplane: it represents the complete space, which is a convex\n+ *part. If we add a cut hyperplane to this node, this represents a\n+ *partition with the hyperplane at the node level and two half spaces at\n+ *each side of the cut hyperplane. These half-spaces are represented by\n+ *two child nodes without any cut hyperplanes associated, the plus child\n+ *which represents the half space on the plus side of the cut hyperplane\n+ *and the minus child on the other side. Continuing the subdivisions, we\n+ *end up with a tree having internal nodes that are associated with a\n+ *cut hyperplane and leaf nodes without any hyperplane which correspond\n+ *to convex parts.\n+ *</p>\n+ *\n+ *<p>\n+ *When BSP trees are used to represent polytopes, the convex parts are\n+ *known to be completely inside or outside the polytope as long as there\n+ *is no facet in the part (which is obviously the case if the cut\n+ *hyperplanes have been chosen as the underlying hyperplanes of the\n+ *facets (this is called an autopartition) and if the subdivision\n+ *process has been continued until all facets have been processed. It is\n+ *important to note that the polytope is <em>not</em> defined by a\n+ *single part, but by several convex ones. This is the property that\n+ *allows BSP-trees to represent non-convex polytopes despites all parts\n+ *are convex. The {@link\n+ *org.apache.commons.math.geometry.partitioning.Region Region} class is\n+ *devoted to this representation, it is build on top of the {@link\n+ *org.apache.commons.math.geometry.partitioning.BSPTree BSPTree} class using\n+ *boolean objects as the leaf nodes attributes to represent the\n+ *inside/outside property of each leaf part, and also adds various\n+ *methods dealing with boundaries (i.e. the separation between the\n+ *inside and the outside parts).\n+ *</p>\n+ *\n+ *<p>\n+ *Rather than simply associating the internal nodes with an hyperplane,\n+ *we consider <em>sub-hyperplanes</em> which correspond to the part of\n+ *the hyperplane that is inside the convex part defined by all the\n+ *parent nodes (this implies that the sub-hyperplane at root node is in\n+ *fact a complete hyperplane, because there is no parent to bound\n+ *it). Since the parts are convex, the sub-hyperplanes are convex, in\n+ *3D the convex parts are convex polyhedrons, and the sub-hyperplanes\n+ *are convex polygons that cut these polyhedrons in two\n+ *sub-polyhedrons. Using this definition, a BSP tree completely\n+ *partitions the space. Each point either belongs to one of the\n+ *sub-hyperplanes in an internal node or belongs to one of the leaf\n+ *convex parts.\n+ *</p>\n+ *\n+ *<p>\n+ *In order to determine where a point is, it is sufficient to check its\n+ *position with respect to the root cut hyperplane, to select the\n+ *corresponding child tree and to repeat the procedure recursively,\n+ *until either the point appears to be exactly on one of the hyperplanes\n+ *in the middle of the tree or to be in one of the leaf parts. For\n+ *this operation, it is sufficient to consider the complete hyperplanes,\n+ *there is no need to check the points with the boundary of the\n+ *sub-hyperplanes, because this check has in fact already been realized\n+ *by the recursive descent in the tree. This is very easy to do and very\n+ *efficient, especially if the tree is well balanced (the cost is\n+ *<code>O(log(n))</code> where <code>n</code> is the number of facets)\n+ *or if the first tree levels close to the root discriminate large parts\n+ *of the total space.\n+ *</p>\n+ *\n+ *<p>\n+ *One of the main sources for the development of this package was Bruce\n+ *Naylor, John Amanatides and William Thibault paper <a\n+ *href=\"http://www.cs.yorku.ca/~amana/research/bsptSetOp.pdf\">Merging\n+ *BSP Trees Yields Polyhedral Set Operations</a> Proc. Siggraph '90,\n+ *Computer Graphics 24(4), August 1990, pp 115-124, published by the\n+ *Association for Computing Machinery (ACM). The same paper can also be\n+ *found <a\n+ *href=\"http://www.cs.utexas.edu/users/fussell/courses/cs384g/bsp_treemerge.pdf\">here</a>.\n+ *</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.geometry.partitioning;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/geometry/partitioning/utilities/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides multidimensional ordering features for partitioning.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.geometry.partitioning.utilities;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/linear/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Linear algebra support.\n+ */\n+package org.apache.commons.math.linear;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/ode/events/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides classes to handle discrete events occurring during\n+ *Ordinary Differential Equations integration.\n+ *</p>\n+ *\n+ *<p>\n+ *Discrete events detection is based on switching functions. The user provides\n+ *a simple {@link org.apache.commons.math.ode.events.EventHandler#g g(t, y)}\n+ *function depending on the current time and state. The integrator will monitor\n+ *the value of the function throughout integration range and will trigger the\n+ *event when its sign changes. The magnitude of the value is almost irrelevant,\n+ *it should however be continuous (but not necessarily smooth) for the sake of\n+ *root finding. The steps are shortened as needed to ensure the events occur\n+ *at step boundaries (even if the integrator is a fixed-step integrator).\n+ *</p>\n+ *\n+ *<p>\n+ *When an event is triggered, several different options are available:\n+ *</p>\n+ *<ul>\n+ *  <li>integration can be stopped (this is called a G-stop facility),</li>\n+ *  <li>the state vector or the derivatives can be changed,</li>\n+ *  <li>or integration can simply go on.</li>\n+ *</ul>\n+ *\n+ *<p>\n+ *The first case, G-stop, is the most common one. A typical use case is when an\n+ *ODE must be solved up to some target state is reached, with a known value of\n+ *the state but an unknown occurrence time. As an example, if we want to monitor\n+ *a chemical reaction up to some predefined concentration for the first substance,\n+ *we can use the following switching function setting:\n+ *<pre>\n+ *  public double g(double t, double[] y) {\n+ *    return y[0] - targetConcentration;\n+ *  }\n+ *\n+ *  public int eventOccurred(double t, double[] y) {\n+ *    return STOP;\n+ *  }\n+ *</pre>\n+ *</p>\n+ *\n+ *<p>\n+ *The second case, change state vector or derivatives is encountered when dealing\n+ *with discontinuous dynamical models. A typical case would be the motion of a\n+ *spacecraft when thrusters are fired for orbital maneuvers. The acceleration is\n+ *smooth as long as no maneuver are performed, depending only on gravity, drag,\n+ *third body attraction, radiation pressure. Firing a thruster introduces a\n+ *discontinuity that must be handled appropriately by the integrator. In such a case,\n+ *we would use a switching function setting similar to this:\n+ *<pre>\n+ *  public double g(double t, double[] y) {\n+ *    return (t - tManeuverStart) &lowast; (t - tManeuverStop);\n+ *  }\n+ *\n+ *  public int eventOccurred(double t, double[] y) {\n+ *    return RESET_DERIVATIVES;\n+ *  }\n+ *</pre>\n+ *</p>\n+ *\n+ *<p>\n+ *The third case is useful mainly for monitoring purposes, a simple example is:\n+ *<pre>\n+ *  public double g(double t, double[] y) {\n+ *    return y[0] - y[1];\n+ *  }\n+ *\n+ *  public int eventOccurred(double t, double[] y) {\n+ *    logger.log(\"y0(t) and y1(t) curves cross at t = \" + t);\n+ *    return CONTINUE;\n+ *  }\n+ *</pre>\n+ *</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.ode.events;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides classes to solve non-stiff Ordinary Differential Equations problems.\n+ *</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.ode.nonstiff;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/ode/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides classes to solve Ordinary Differential Equations problems.\n+ *</p>\n+ *\n+ *<p>\n+ *This package solves Initial Value Problems of the form\n+ *<code>y'=f(t,y)</code> with <code>t<sub>0</sub></code> and\n+ *<code>y(t<sub>0</sub>)=y<sub>0</sub></code> known. The provided\n+ *integrators compute an estimate of <code>y(t)</code> from\n+ *<code>t=t<sub>0</sub></code> to <code>t=t<sub>1</sub></code>.\n+ *It is also possible to get thederivatives with respect to the initial state\n+ *<code>dy(t)/dy(t<sub>0</sub>)</code> or the derivatives with\n+ *respect to some ODE parameters <code>dy(t)/dp</code>.\n+ *</p>\n+ *\n+ *<p>\n+ *All integrators provide dense output. This means that besides\n+ *computing the state vector at discrete times, they also provide a\n+ *cheap mean to get the state between the time steps. They do so through\n+ *classes extending the {@link\n+ *org.apache.commons.math.ode.sampling.StepInterpolator StepInterpolator}\n+ *abstract class, which are made available to the user at the end of\n+ *each step.\n+ *</p>\n+ *\n+ *<p>\n+ *All integrators handle multiple discrete events detection based on switching\n+ *functions. This means that the integrator can be driven by user specified\n+ *discrete events. The steps are shortened as needed to ensure the events occur\n+ *at step boundaries (even if the integrator is a fixed-step\n+ *integrator). When the events are triggered, integration can be stopped\n+ *(this is called a G-stop facility), the state vector can be changed,\n+ *or integration can simply go on. The latter case is useful to handle\n+ *discontinuities in the differential equations gracefully and get\n+ *accurate dense output even close to the discontinuity.\n+ *</p>\n+ *\n+ *<p>\n+ *The user should describe his problem in his own classes\n+ *(<code>UserProblem</code> in the diagram below) which should implement\n+ *the {@link org.apache.commons.math.ode.FirstOrderDifferentialEquations\n+ *FirstOrderDifferentialEquations} interface. Then he should pass it to\n+ *the integrator he prefers among all the classes that implement the\n+ *{@link org.apache.commons.math.ode.FirstOrderIntegrator\n+ *FirstOrderIntegrator} interface.\n+ *</p>\n+ *\n+ *<p>\n+ *The solution of the integration problem is provided by two means. The\n+ *first one is aimed towards simple use: the state vector at the end of\n+ *the integration process is copied in the <code>y</code> array of the\n+ *{@link org.apache.commons.math.ode.FirstOrderIntegrator#integrate\n+ *FirstOrderIntegrator.integrate} method. The second one should be used\n+ *when more in-depth information is needed throughout the integration\n+ *process. The user can register an object implementing the {@link\n+ *org.apache.commons.math.ode.sampling.StepHandler StepHandler} interface or a\n+ *{@link org.apache.commons.math.ode.sampling.StepNormalizer StepNormalizer}\n+ *object wrapping a user-specified object implementing the {@link\n+ *org.apache.commons.math.ode.sampling.FixedStepHandler FixedStepHandler}\n+ *interface into the integrator before calling the {@link\n+ *org.apache.commons.math.ode.FirstOrderIntegrator#integrate\n+ *FirstOrderIntegrator.integrate} method. The user object will be called\n+ *appropriately during the integration process, allowing the user to\n+ *process intermediate results. The default step handler does nothing.\n+ *</p>\n+ *\n+ *<p>\n+ *{@link org.apache.commons.math.ode.ContinuousOutputModel\n+ *ContinuousOutputModel} is a special-purpose step handler that is able\n+ *to store all steps and to provide transparent access to any\n+ *intermediate result once the integration is over. An important feature\n+ *of this class is that it implements the <code>Serializable</code>\n+ *interface. This means that a complete continuous model of the\n+ *integrated function throughout the integration range can be serialized\n+ *and reused later (if stored into a persistent medium like a filesystem\n+ *or a database) or elsewhere (if sent to another application). Only the\n+ *result of the integration is stored, there is no reference to the\n+ *integrated problem by itself.\n+ *</p>\n+ *\n+ *<p>\n+ *Other default implementations of the {@link\n+ *org.apache.commons.math.ode.sampling.StepHandler StepHandler} interface are\n+ *available for general needs ({@link\n+ *org.apache.commons.math.ode.sampling.DummyStepHandler DummyStepHandler}, {@link\n+ *org.apache.commons.math.ode.sampling.StepNormalizer StepNormalizer}) and custom\n+ *implementations can be developed for specific needs. As an example,\n+ *if an application is to be completely driven by the integration\n+ *process, then most of the application code will be run inside a step\n+ *handler specific to this application.\n+ *</p>\n+ *\n+ *<p>\n+ *Some integrators (the simple ones) use fixed steps that are set at\n+ *creation time. The more efficient integrators use variable steps that\n+ *are handled internally in order to control the integration error with\n+ *respect to a specified accuracy (these integrators extend the {@link\n+ *org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator\n+ *AdaptiveStepsizeIntegrator} abstract class). In this case, the step\n+ *handler which is called after each successful step shows up the\n+ *variable stepsize. The {@link\n+ *org.apache.commons.math.ode.sampling.StepNormalizer StepNormalizer} class can\n+ *be used to convert the variable stepsize into a fixed stepsize that\n+ *can be handled by classes implementing the {@link\n+ *org.apache.commons.math.ode.sampling.FixedStepHandler FixedStepHandler}\n+ *interface. Adaptive stepsize integrators can automatically compute the\n+ *initial stepsize by themselves, however the user can specify it if he\n+ *prefers to retain full control over the integration or if the\n+ *automatic guess is wrong.\n+ *</p>\n+ *\n+ *<p>\n+ *<table border=\"1\" align=\"center\">\n+ *<tr BGCOLOR=\"#CCCCFF\"><td colspan=2><font size=\"+2\">Fixed Step Integrators</font></td></tr>\n+ *<tr BGCOLOR=\"#EEEEFF\"><font size=\"+1\"><td>Name</td><td>Order</td></font></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.EulerIntegrator Euler}</td><td>1</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.MidpointIntegrator Midpoint}</td><td>2</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator Classical Runge-Kutta}</td><td>4</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.GillIntegrator Gill}</td><td>4</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator 3/8}</td><td>4</td></tr>\n+ *</table>\n+ *</p>\n+ *\n+ *<table border=\"1\" align=\"center\">\n+ *<tr BGCOLOR=\"#CCCCFF\"><td colspan=3><font size=\"+2\">Adaptive Stepsize Integrators</font></td></tr>\n+ *<tr BGCOLOR=\"#EEEEFF\"><font size=\"+1\"><td>Name</td><td>Integration Order</td><td>Error Estimation Order</td></font></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.HighamHall54Integrator Higham and Hall}</td><td>5</td><td>4</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator Dormand-Prince 5(4)}</td><td>5</td><td>4</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator Dormand-Prince 8(5,3)}</td><td>8</td><td>5 and 3</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator Gragg-Bulirsch-Stoer}</td><td>variable (up to 18 by default)</td><td>variable</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator Adams-Bashforth}</td><td>variable</td><td>variable</td></tr>\n+ *<tr><td>{@link org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator Adams-Moulton}</td><td>variable</td><td>variable</td></tr>\n+ *</table>\n+ *</p>\n+ *\n+ *<p>\n+ *In the table above, the {@link org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator\n+ *Adams-Bashforth} and {@link org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator\n+ *Adams-Moulton} integrators appear as variable-step ones. This is an experimental extension\n+ *to the classical algorithms using the Nordsieck vector representation.\n+ *</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.ode;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/ode/sampling/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides classes to handle sampling steps during\n+ *Ordinary Differential Equations integration.\n+ *</p>\n+ *\n+ *<p>\n+ *In addition to computing the evolution of the state vector at some grid points, all\n+ *ODE integrators also build up interpolation models of this evolution <em>inside</em> the\n+ *last computed step. If users are interested in these interpolators, they can register a\n+ *{@link org.apache.commons.math.ode.sampling.StepHandler StepHandler} instance using the\n+ *{@link org.apache.commons.math.ode.FirstOrderIntegrator#addStepHandler addStepHandler}\n+ *method which is supported by all integrators. The integrator will call this instance\n+ *at the end of each accepted step and provide it the interpolator. The user can do\n+ *whatever he wants with this interpolator, which computes both the state and its\n+ *time-derivative. A typical use of step handler is to provide some output to monitor\n+ *the integration process.\n+ *</p>\n+ *\n+ *<p>\n+ *In a sense, this is a kind of Inversion Of Control: rather than having the master\n+ *application driving the slave integrator by providing the target end value for\n+ *the free variable, we get a master integrator scheduling the free variable\n+ *evolution and calling the slave application callbacks that were registered at\n+ *configuration time.\n+ *</p>\n+ *\n+ *<p>\n+ *Since some integrators may use variable step size, the generic {@link\n+ *org.apache.commons.math.ode.sampling.StepHandler StepHandler} interface can be called\n+ *either at regular or irregular rate. This interface allows to navigate to any location\n+ *within the last computed step, thanks to the provided {@link\n+ *org.apache.commons.math.ode.sampling.StepInterpolator StepInterpolator} object.\n+ *If regular output is desired (for example in order to write an ephemeris file), then\n+ *the simpler {@link org.apache.commons.math.ode.sampling.FixedStepHandler FixedStepHandler}\n+ *interface can be used. Objects implementing this interface should be wrapped within a\n+ *{@link org.apache.commons.math.ode.sampling.StepNormalizer StepNormalizer} instance\n+ *in order to be registered to the integrator.\n+ *</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.ode.sampling;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides optimization algorithms that don't require derivatives.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.optimization.direct;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/fitting/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *This package provides classes to perform curve fitting.\n+ *\n+ *<p>Curve fitting is a special case of a least squares problem\n+ *were the parameters are the coefficients of a function <code>f</code>\n+ *whose graph <code>y=f(x)</code> should pass through sample points, and\n+ *were the objective function is the squared sum of residuals\n+ *<code>f(x<sub>i</sub>)-y<sub>i</sub></code> for observed points\n+ *(x<sub>i</sub>, y<sub>i</sub>).</p>\n+ *\n+ *\n+ */\n+package org.apache.commons.math.optimization.fitting;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/general/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *This package provides optimization algorithms that require derivatives.\n+ *\n+ */\n+package org.apache.commons.math.optimization.general;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/linear/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *This package provides optimization algorithms for linear constrained problems.\n+ *\n+ */\n+package org.apache.commons.math.optimization.linear;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *<p>\n+ *This package provides common interfaces for the optimization algorithms\n+ *provided in sub-packages. The main interfaces defines optimizers and convergence\n+ *checkers. The functions that are optimized by the algorithms provided by this\n+ *package and its sub-packages are a subset of the one defined in the <code>analysis</code>\n+ *package, namely the real and vector valued functions. These functions are called\n+ *objective function here. When the goal is to minimize, the functions are often called\n+ *cost function, this name is not used in this package.\n+ *</p>\n+ *\n+ *<p>\n+ *Optimizers are the algorithms that will either minimize or maximize, the objective function\n+ *by changing its input variables set until an optimal set is found. There are only four\n+ *interfaces defining the common behavior of optimizers, one for each supported type of objective\n+ *function:\n+ *<ul>\n+ *  <li>{@link org.apache.commons.math.optimization.univariate.UnivariateRealOptimizer\n+ *      UnivariateRealOptimizer} for {@link org.apache.commons.math.analysis.UnivariateRealFunction\n+ *      univariate real functions}</li>\n+ *  <li>{@link org.apache.commons.math.optimization.MultivariateRealOptimizer\n+ *      MultivariateRealOptimizer} for {@link org.apache.commons.math.analysis.MultivariateRealFunction\n+ *      multivariate real functions}</li>\n+ *  <li>{@link org.apache.commons.math.optimization.DifferentiableMultivariateRealOptimizer\n+ *      DifferentiableMultivariateRealOptimizer} for {@link\n+ *      org.apache.commons.math.analysis.DifferentiableMultivariateRealFunction\n+ *      differentiable multivariate real functions}</li>\n+ *  <li>{@link org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer\n+ *      DifferentiableMultivariateVectorialOptimizer} for {@link\n+ *      org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction\n+ *      differentiable multivariate vectorial functions}</li>\n+ *</ul>\n+ *</p>\n+ *\n+ *<p>\n+ *Despite there are only four types of supported optimizers, it is possible to optimize a\n+ *transform a {@link org.apache.commons.math.analysis.MultivariateVectorialFunction\n+ *non-differentiable multivariate vectorial function} by converting it to a {@link\n+ *org.apache.commons.math.analysis.MultivariateRealFunction non-differentiable multivariate\n+ *real function} thanks to the {@link\n+ *org.apache.commons.math.optimization.LeastSquaresConverter LeastSquaresConverter} helper class.\n+ *The transformed function can be optimized using any implementation of the {@link\n+ *org.apache.commons.math.optimization.MultivariateRealOptimizer MultivariateRealOptimizer} interface.\n+ *</p>\n+ *\n+ *<p>\n+ *For each of the four types of supported optimizers, there is a special implementation which\n+ *wraps a classical optimizer in order to add it a multi-start feature. This feature call the\n+ *underlying optimizer several times in sequence with different starting points and returns\n+ *the best optimum found or all optima if desired. This is a classical way to prevent being\n+ *trapped into a local extremum when looking for a global one.\n+ *</p>\n+ *\n+ */\n+package org.apache.commons.math.optimization;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/optimization/univariate/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Univariate real functions minimum finding algorithms.\n+ *    \n+ */\n+package org.apache.commons.math.optimization.univariate;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Common classes used throughout the commons-math library.\n+ */\n+package org.apache.commons.math;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/random/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *      <p>Random number and random data generators.</p>\n+ *      <p>Commons-math provides a few pseudo random number generators. The top level interface is RandomGenerator.\n+ *      It is implemented by three classes:\n+ *      <ul>\n+ *        <li>{@link org.apache.commons.math.random.JDKRandomGenerator JDKRandomGenerator}\n+ *            that extends the JDK provided generator</li>\n+ *        <li>AbstractRandomGenerator as a helper for users generators</li>\n+ *        <li>BitStreamGenerator which is an abstract class for several generators and\n+ *            which in turn is extended by:\n+ *            <ul>\n+ *              <li>{@link org.apache.commons.math.random.MersenneTwister MersenneTwister}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well512a Well512a}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well1024a Well1024a}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well19937a Well19937a}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well19937c Well19937c}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well44497a Well44497a}</li>\n+ *              <li>{@link org.apache.commons.math.random.Well44497b Well44497b}</li>\n+ *            </ul>\n+ *          </li>\n+ *        </ul>\n+ *      </p>\n+ *\n+ *      <p>\n+ *      The JDK provided generator is a simple one that can be used only for very simple needs.\n+ *      The Mersenne Twister is a fast generator with very good properties well suited for\n+ *      Monte-Carlo simulation. It is equidistributed for generating vectors up to dimension 623\n+ *      and has a huge period: 2<sup>19937</sup> - 1 (which is a Mersenne prime). This generator\n+ *      is described in a paper by Makoto Matsumoto and Takuji Nishimura in 1998: <a\n+ *      href=\"http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/ARTICLES/mt.pdf\">Mersenne Twister:\n+ *      A 623-Dimensionally Equidistributed Uniform Pseudo-Random Number Generator</a>, ACM\n+ *      Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3--30.\n+ *      The WELL generators are a family of generators with period ranging from 2<sup>512</sup> - 1\n+ *      to 2<sup>44497</sup> - 1 (this last one is also a Mersenne prime) with even better properties\n+ *      than Mersenne Twister. These generators are described in a paper by Fran&ccedil;ois Panneton,\n+ *      Pierre L'Ecuyer and Makoto Matsumoto <a\n+ *      href=\"http://www.iro.umontreal.ca/~lecuyer/myftp/papers/wellrng.pdf\">Improved Long-Period\n+ *      Generators Based on Linear Recurrences Modulo 2</a> ACM Transactions on Mathematical Software,\n+ *      32, 1 (2006). The errata for the paper are in <a\n+ *      href=\"http://www.iro.umontreal.ca/~lecuyer/myftp/papers/wellrng-errata.txt\">wellrng-errata.txt</a>.\n+ *      </p>\n+ *\n+ *      <p>\n+ *      For simple sampling, any of these generators is sufficient. For Monte-Carlo simulations the\n+ *      JDK generator does not have any of the good mathematical properties of the other generators,\n+ *      so it should be avoided. The Mersenne twister and WELL generators have equidistribution properties\n+ *      proven according to their bits pool size which is directly linked to their period (all of them\n+ *      have maximal period, i.e. a generator with size n pool has a period 2<sup>n</sup>-1). They also\n+ *      have equidistribution properties for 32 bits blocks up to s/32 dimension where s is their pool size.\n+ *      So WELL19937c for exemple is equidistributed up to dimension 623 (19937/32). This means a Monte-Carlo\n+ *      simulation generating a vector of n variables at each iteration has some guarantees on the properties\n+ *      of the vector as long as its dimension does not exceed the limit. However, since we use bits from two\n+ *      successive 32 bits generated integers to create one double, this limit is smaller when the variables are\n+ *      of type double. so for Monte-Carlo simulation where less the 16 doubles are generated at each round,\n+ *      WELL1024 may be sufficient. If a larger number of doubles are needed a generator with a larger pool\n+ *      would be useful.\n+ *      </p>\n+ *\n+ *      <p>\n+ *      The WELL generators are more modern then MersenneTwister (the paper describing than has been published\n+ *      in 2006 instead of 1998) and fix some of its (few) drawbacks. If initialization array contains many\n+ *      zero bits, MersenneTwister may take a very long time (several hundreds of thousands of iterations to\n+ *      reach a steady state with a balanced number of zero and one in its bits pool). So the WELL generators\n+ *      are better to <i>escape zeroland</i> as explained by the WELL generators creators. The Well19937a and\n+ *      Well44497a generator are not maximally equidistributed (i.e. there are some dimensions or bits blocks\n+ *      size for which they are not equidistributed). The Well512a, Well1024a, Well19937c and Well44497b are\n+ *      maximally equidistributed for blocks size up to 32 bits (they should behave correctly also for double\n+ *      based on more than 32 bits blocks, but equidistribution is not proven at these blocks sizes).\n+ *      </p>\n+ *\n+ *      <p>\n+ *      The MersenneTwister generator uses a 624 elements integer array, so it consumes less than 2.5 kilobytes.\n+ *      The WELL generators use 6 integer arrays with a size equal to the pool size, so for example the\n+ *      WELL44497b generator uses about 33 kilobytes. This may be important if a very large number of\n+ *      generator instances were used at the same time.\n+ *      </p>\n+ *\n+ *      <p>\n+ *      All generators are quite fast. As an example, here are some comparisons, obtained on a 64 bits JVM on a\n+ *      linux computer with a 2008 processor (AMD phenom Quad 9550 at 2.2 GHz). The generation rate for\n+ *      MersenneTwister was about 27 millions doubles per second (remember we generate two 32 bits integers for\n+ *      each double). Generation rates for other PRNG, relative to MersenneTwister:\n+ *      </p>\n+ *\n+ *      <p>\n+ *        <table border=\"1\" align=\"center\">\n+ *          <tr BGCOLOR=\"#CCCCFF\"><td colspan=\"2\"><font size=\"+2\">Example of performances</font></td></tr>\n+ *          <tr BGCOLOR=\"#EEEEFF\"><font size=\"+1\"><td>Name</td><td>generation rate (relative to MersenneTwister)</td></font></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.MersenneTwister MersenneTwister}</td><td>1</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.JDKRandomGenerator JDKRandomGenerator}</td><td>between 0.96 and 1.16</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well512a Well512a}</td><td>between 0.85 and 0.88</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well1024a Well1024a}</td><td>between 0.63 and 0.73</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well19937a Well19937a}</td><td>between 0.70 and 0.71</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well19937c Well19937c}</td><td>between 0.57 and 0.71</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well44497a Well44497a}</td><td>between 0.69 and 0.71</td></tr>\n+ *          <tr><td>{@link org.apache.commons.math.random.Well44497b Well44497b}</td><td>between 0.65 and 0.71</td></tr>\n+ *        </table>\n+ *      </p>\n+ *\n+ *      <p>\n+ *      So for most simulation problems, the better generators like {@link\n+ *      org.apache.commons.math.random.Well19937c Well19937c} and {@link\n+ *      org.apache.commons.math.random.Well44497b Well44497b} are probably very good choices.\n+ *      </p>\n+ *\n+ *      <p>\n+ *      Note that <em>none</em> of these generators are suitable for cryptography. They are devoted\n+ *      to simulation, and to generate very long series with strong properties on the series as a whole\n+ *      (equidistribution, no correlation ...). They do not attempt to create small series but with\n+ *      very strong properties of unpredictability as needed in cryptography.\n+ *      </p>\n+ *\n+ *    \n+ */\n+package org.apache.commons.math.random;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/special/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Implementations of special functions such as Beta and Gamma.\n+ */\n+package org.apache.commons.math.special;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/clustering/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Clustering algorithms\n+ */\n+package org.apache.commons.math.stat.clustering;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/correlation/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *        Correlations/Covariance computations.\n+ *    \n+ */\n+package org.apache.commons.math.stat.correlation;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/moment/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Summary statistics based on moments.\n+ */\n+package org.apache.commons.math.stat.descriptive.moment;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *        Generic univariate summary statistic objects.\n+ *\n+ *        <h3>UnivariateStatistic API Usage Examples:</h3>\n+ *\n+ *        <h4>UnivariateStatistic:</h4>\n+ *        <code>/&lowast; evaluation approach &lowast;/<br/>\n+ *          double[] values = new double[] { 1, 2, 3, 4, 5 };<br/>\n+ *          <span style=\"font-weight: bold;\">UnivariateStatistic stat = new Mean();</span><br/>\n+ *          System.out.println(\"mean = \" + <span style=\"font-weight: bold;\">stat.evaluate(values)</span>);<br/>\n+ *        </code>\n+ *\n+ *        <h4>StorelessUnivariateStatistic:</h4>\n+ *        <code>/&lowast; incremental approach &lowast;/<br/>\n+ *          double[] values = new double[] { 1, 2, 3, 4, 5 };<br/>\n+ *          <span style=\"font-weight: bold;\">StorelessUnivariateStatistic stat = new Mean();</span><br/>\n+ *          System.out.println(\"mean before adding a value is NaN = \" + <span style=\"font-weight: bold;\">stat.getResult()</span>);<br/>\n+ *          for (int i = 0; i &lt; values.length; i++) {<br/>\n+ *            &nbsp;&nbsp;&nbsp; <span style=\"font-weight: bold;\">stat.increment(values[i]);</span><br/>\n+ *            &nbsp;&nbsp;&nbsp; System.out.println(\"current mean = \" + <span style=\"font-weight: bold;\">stat2.getResult()</span>);<br/>\n+ *          }<br/>\n+ *          <span style=\"font-weight: bold;\"> stat.clear();</span><br/>\n+ *          System.out.println(\"mean after clear is NaN = \" + <span style=\"font-weight: bold;\">stat.getResult()</span>);\n+ *        </code>\n+ *    \n+ */\n+package org.apache.commons.math.stat.descriptive;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/rank/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Summary statistics based on ranks.\n+ */\n+package org.apache.commons.math.stat.descriptive.rank;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/descriptive/summary/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Other summary statistics.\n+ */\n+package org.apache.commons.math.stat.descriptive.summary;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/inference/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *      Classes providing hypothesis testing and confidence interval\n+ *      construction.\n+ *    \n+ */\n+package org.apache.commons.math.stat.inference;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Data storage, manipulation and summary routines.\n+ */\n+package org.apache.commons.math.stat;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/ranking/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *      Classes providing rank transformations.\n+ *    \n+ */\n+package org.apache.commons.math.stat.ranking;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/stat/regression/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *      Statistical routines involving multivariate data.\n+ *    \n+ */\n+package org.apache.commons.math.stat.regression;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/transform/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *\n+ *     Implementations of transform methods, including Fast Fourier transforms.\n+ *    \n+ */\n+package org.apache.commons.math.transform;\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/util/package-info.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ *Convenience routines and common data structures used throughout the commons-math library.\n+ */\n+package org.apache.commons.math.util;", "timestamp": 1317495085, "metainfo": ""}