{"sha": "1751328157d7d686f341b10bb3814cc3db3d38cf", "log": "MATH-503 Added sigmoid and generalized logistic functions.   ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/function/Logistic.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+/**\n+ * <a href=\"http://en.wikipedia.org/wiki/Generalised_logistic_function\">\n+ *  Generalised logistic</a> function.\n+ *\n+ * @version $Revision$ $Date$\n+ * @since 3.0\n+ */\n+public class Logistic implements UnivariateRealFunction {\n+    /** Lower asymptote. */\n+    private final double a;\n+    /** Upper asymptote. */\n+    private final double k;\n+    /** Growth rate. */\n+    private final double b;\n+    /** Parameter that affects near which asymptote maximum growth occurs. */\n+    private final double n;\n+    /** Parameter that affects the position of the curve along the ordinate axis. */\n+    private final double q;\n+    /** Abscissa of maximum growth. */\n+    private final double m;\n+\n+    /**\n+     * @param k Upper asymptote.\n+     * @param m Abscissa of maximum growth.\n+     * @param b Growth rate.\n+     * @param q Parameter that affects the position of the curve along the\n+     * ordinate axis.\n+     * @param a Lower asymptote.\n+     * @param n Parameter that affects near which asymptote the maximum\n+     * growth occurs.\n+     * @throws NotStrictlyPositiveException if {@code n <= 0}.\n+     */\n+    public Logistic(double k,\n+                    double m,\n+                    double b,\n+                    double q,\n+                    double a,\n+                    double n) {\n+        if (n <= 0) {\n+            throw new NotStrictlyPositiveException(n);\n+        }\n+\n+        this.k = k;\n+        this.m = m;\n+        this.b = b;\n+        this.q = q;\n+        this.a = a;\n+        this.n = n;\n+    }\n+\n+    /** {@inheritDoc} */\n+    public double value(double x) {\n+        return a + (k - a) / FastMath.pow((1 + q * FastMath.exp(b * (m - x))), 1 / n);\n+    }\n+}\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+/**\n+ * <a href=\"http://en.wikipedia.org/wiki/Sigmoid_function\">\n+ *  Sigmoid</a> function.\n+ * A more flexible version, the generalised logistic, is implemented\n+ * by the {@link Logistic} class.\n+ *\n+ * @version $Revision$ $Date$\n+ * @since 3.0\n+ */\n+public class Sigmoid implements UnivariateRealFunction {\n+    /** {@inheritDoc} */\n+    public double value(double x) {\n+        return 1 / (1 + FastMath.exp(-x));\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for class {@link Logistic}.\n+ */\n+public class LogisticTest {\n+    private final double EPS = Math.ulp(1d);\n+\n+    @Test\n+    public void testPreconditions() {\n+        try {\n+            final UnivariateRealFunction f = new Logistic(1, 0, 1, 1, 0, -1);\n+        } catch (NotStrictlyPositiveException e) {\n+            // Expected.\n+        }\n+\n+        try {\n+            final UnivariateRealFunction f = new Logistic(1, 0, 1, 1, 0, 0);\n+        } catch (NotStrictlyPositiveException e) {\n+            // Expected.\n+        }\n+    }\n+\n+    @Test\n+    public void testCompareSigmoid() {\n+        final UnivariateRealFunction sig = new Sigmoid();\n+        final UnivariateRealFunction sigL = new Logistic(1, 0, 1, 1, 0, 1);\n+\n+        final double min = -2;\n+        final double max = 2;\n+        final int n = 100;\n+        final double delta = (max - min) / n;\n+        for (int i = 0; i < n; i++) {\n+            final double x = min + i * delta;\n+            Assert.assertEquals(\"x=\" + x, sig.value(x), sigL.value(x), EPS);\n+        }\n+    }\n+\n+    @Test\n+    public void testSomeValues() {\n+        final double k = 4;\n+        final double m = 5;\n+        final double b = 2;\n+        final double q = 3;\n+        final double a = -1;\n+        final double n = 2;\n+\n+        final UnivariateRealFunction f = new Logistic(k, m, b, q, a, n);\n+\n+        double x;\n+        x = m;\n+        Assert.assertEquals(\"x=\" + x, a + (k - a) / FastMath.sqrt(1 + q), f.value(x), EPS);\n+\n+        x = Double.NEGATIVE_INFINITY;\n+        Assert.assertEquals(\"x=\" + x, a, f.value(x), EPS);\n+\n+        x = Double.POSITIVE_INFINITY;\n+        Assert.assertEquals(\"x=\" + x, k, f.value(x), EPS);\n+    }\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/math/analysis/function/SigmoidTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.math.analysis.function;\n+\n+import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import org.apache.commons.math.util.FastMath;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test for class {@link Sigmoid}.\n+ */\n+public class SigmoidTest {\n+    private final double EPS = Math.ulp(1d);\n+\n+    @Test\n+    public void testSomeValues() {\n+        final UnivariateRealFunction f = new Sigmoid();\n+\n+        double x;\n+        x = 0;\n+        Assert.assertEquals(\"x=\" + x, 0.5, f.value(x), EPS);\n+\n+        x = Double.NEGATIVE_INFINITY;\n+        Assert.assertEquals(\"x=\" + x, 0, f.value(x), EPS);\n+\n+        x = Double.POSITIVE_INFINITY;\n+        Assert.assertEquals(\"x=\" + x, 1, f.value(x), EPS);\n+    }\n+}", "timestamp": 1296344319, "metainfo": ""}