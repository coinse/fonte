{"sha": "c118e62d6b95c5e0643b34e752b043ad002ba419", "log": "MATH-195 Added requested Javadoc comment. Removed unused import.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java\n+++ b/src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java\n      *\n      * @param x Point at which the function value should be computed.\n      * @return the value.\n+     * @throws IllegalArgumentException when the activated method itself can\n+     * ascertain that preconditions specified in the API expressed at the\n+     * level of the activated method have been violated.  In the vast\n+     * majority of cases where Commons-Math throws IllegalArgumentException,\n+     * it is the result of argument checking of actual parameters immediately\n+     * passed to a method.\n+     * @throws org.apache.commons.math.exception.FunctionEvaluationException\n+     * when the method that may encounter errors during evaluation.\n+     * This should be thrown only in circumstances where, at the level of the\n+     * activated function, IllegalArgumentException is not appropriate and it\n+     * should indicate that while formal preconditions of the method have not\n+     * been violated, an irrecoverable error has occurred evaluating a\n+     * function at some (usually lower) level of the call stack.\n+     * Convergence failures, runtime exceptions (even IllegalArgumentException)\n+     * in user code or lower level methods can cause (and should be wrapped in)\n+     * a FunctionEvaluationException.\n      */\n     double value(double x);\n }\n--- a/src/main/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java\n import java.util.List;\n import java.util.ArrayList;\n import java.util.Comparator;\n-import java.util.Map;\n import java.util.Collections;\n \n import org.apache.commons.math.MathRuntimeException;", "timestamp": 1289173782, "metainfo": ""}