{"sha": "d76192f88c2751fe5dbb6e1ab5985b27cb213e36", "log": "Reordered checks in test() method to avoid NPE.   ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java\n+++ b/src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java\n  * Abstract Implementation for UnivariateStatistics.\n  * Provides the ability to extend polymophically so that\n  * indiviual statistics do not need to implement these methods.\n- * @version $Revision: 1.14 $ $Date: 2004/04/11 19:39:10 $\n+ * @version $Revision: 1.15 $ $Date: 2004/04/12 05:22:11 $\n  */\n public abstract class AbstractUnivariateStatistic\n     implements UnivariateStatistic {\n      * @param values Is a double[] containing the values\n      * @param begin processing at this point in the array\n      * @param length the number of elements to include\n-     * @return true if the array has postive length\n+     * @return true if the parameters are valid and designate a subarray of positive length\n      * @throws IllegalArgumentException if the indices are invalid or the array is null\n      */\n     protected boolean test(\n         if (begin < 0) {\n             throw new IllegalArgumentException(\"start position cannot be negative\");\n         }\n+        \n+        if (length < 0) {\n+            throw new IllegalArgumentException(\"length cannot be negative\");\n+        }\n+        \n+        if (values == null) {\n+            throw new IllegalArgumentException(\"input value array is null\");\n+        }\n \n         if (begin + length > values.length) {\n             throw new IllegalArgumentException(\n                 \"begin + length > values.length\");\n-        }\n-\n-        if (values == null) {\n-            throw new IllegalArgumentException(\"input value array is null\");\n         }\n \n         if (length == 0) {", "timestamp": 1081747331, "metainfo": ""}