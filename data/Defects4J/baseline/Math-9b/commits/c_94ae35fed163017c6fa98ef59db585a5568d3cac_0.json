{"sha": "94ae35fed163017c6fa98ef59db585a5568d3cac", "log": "Removed trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java\n      *\n      * @param distribution Continuous distribution to generate a random value from\n      * @return a random value sampled from the given distribution\n-     * @throws MathIllegalArgumentException if the underlynig distribution throws one \n+     * @throws MathIllegalArgumentException if the underlynig distribution throws one\n      * @since 2.2\n      * @deprecated use the distribution's sample() method\n      */\n      *\n      * @param distribution Integer distribution to generate a random value from\n      * @return a random value sampled from the given distribution\n-     * @throws MathIllegalArgumentException if the underlynig distribution throws one \n+     * @throws MathIllegalArgumentException if the underlynig distribution throws one\n      * @since 2.2\n      * @deprecated use the distribution's sample() method\n      */\n--- a/src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java\n+++ b/src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java\n      * @param alpha Stability parameter. Must be in range (0, 2]\n      * @param beta Skewness parameter. Must be in range [-1, 1]\n      * @throws NullArgumentException if generator is null\n-     * @throws OutOfRangeException if {@code alpha <= 0} or {@code alpha > 2} \n-     * or {@code beta < -1} or {@code beta > 1} \n+     * @throws OutOfRangeException if {@code alpha <= 0} or {@code alpha > 2}\n+     * or {@code beta < -1} or {@code beta > 1}\n      */\n     public StableRandomGenerator(final RandomGenerator generator,\n                                  final double alpha, final double beta)\n--- a/src/main/java/org/apache/commons/math3/random/ValueServer.java\n+++ b/src/main/java/org/apache/commons/math3/random/ValueServer.java\n      * with <code>mode = DIGEST_MODE</code></p>\n      *\n      * @throws IOException if an I/O error occurs reading the input file\n-     * @throws NullArgumentException \n+     * @throws NullArgumentException\n       * @throws ZeroException if URL contains no data\n      */\n     public void computeDistribution() throws IOException, ZeroException, NullArgumentException {\n      *\n      * @param binCount the number of bins used in computing the empirical\n      * distribution\n-     * @throws NullArgumentException \n+     * @throws NullArgumentException\n      * @throws IOException if an error occurs reading the input file\n      * @throws ZeroException if URL contains no data\n      */", "timestamp": 1349466840, "metainfo": ""}