{"sha": "66ed690888345aa9ba392e472f20ed509f12c3db", "log": "removed unused variable  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java\n                 }\n             }\n \n-            double dTd = 0;\n-            for (final double di : searchDirection) {\n-                dTd += di * di;\n-            }\n-\n             // Find the optimal step in the search direction.\n             final UnivariateRealFunction lsf = new LineSearchFunction(searchDirection);\n             final double uB = findUpperBound(lsf, 0, initialStep);\n-            // XXX Last parameters is set to a value clode to zero in order to\n+            // XXX Last parameters is set to a value close to zero in order to\n             // work around the divergence problem in the \"testCircleFitting\"\n             // unit test (see MATH-439).\n             final double step = solver.solve(maxEval, lsf, 0, uB, 1e-15);", "timestamp": 1309511616, "metainfo": ""}