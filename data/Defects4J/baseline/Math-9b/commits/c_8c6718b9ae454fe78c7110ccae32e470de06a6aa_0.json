{"sha": "8c6718b9ae454fe78c7110ccae32e470de06a6aa", "log": "Using standard jva.bean.Expression API to coerce property value in BeanTransformer.   ", "commit": "\n--- a/src/test/org/apache/commons/math/util/BeanTransformer.java\n+++ b/src/test/org/apache/commons/math/util/BeanTransformer.java\n  */\n package org.apache.commons.math.util;\n \n+import java.beans.Expression;\n import java.lang.reflect.InvocationTargetException;\n import org.apache.commons.math.MathException;\n-import org.apache.commons.beanutils.PropertyUtils;\n \n /**\n  * Uses PropertyUtils to map a Bean getter to a double value.\n- * @version $Revision: 1.4 $ $Date: 2004/02/21 21:35:18 $\n+ * @version $Revision: 1.5 $ $Date: 2004/06/01 23:21:32 $\n  */\n public class BeanTransformer implements NumberTransformer {\n \n     /**\n      * The propertyName for this Transformer\n      */\n-    private String propertyName;\n+    private String propertyName = null;\n+    \n+    private String propertyGetter = null;\n \n     /**\n      * Create a BeanTransformer\n      */\n     public BeanTransformer() {\n-        this(null);\n+        super();\n     }\n \n     /**\n      * @param string The string to set the property to.\n      */\n     public void setPropertyName(final String string) {\n-        propertyName = string;\n+        this.propertyName = string;\n+        this.propertyGetter = \"get\" + string.substring(0,1).toUpperCase() + string.substring(1);\n     }\n \n+    \n     /**\n      * @see org.apache.commons.math.util.NumberTransformer#transform(java.lang.Object)\n      */\n     public double transform(final Object o) throws MathException {\n+        Expression expr = new Expression(o, propertyGetter, new Object[0]);\n+        Object result;\n         try {\n-\t\t\treturn ((Number) PropertyUtils.getProperty(o, getPropertyName())).doubleValue();\n+            expr.execute();\n+            result = expr.getValue();\n         } catch (IllegalAccessException e) {\n \t\t\tthrow new MathException(\"IllegalAccessException in Transformation: \" + e.getMessage(), e);\n         } catch (InvocationTargetException e) {\n \t\t\tthrow new MathException(\"InvocationTargetException in Transformation: \" + e.getMessage(), e);\n         } catch (NoSuchMethodException e) {\n-\t\t\tthrow new MathException(\"oSuchMethodException in Transformation: \" + e.getMessage(), e);\n+\t\t\tthrow new MathException(\"NoSuchMethodException in Transformation: \" + e.getMessage(), e);\n+        } catch (ClassCastException e) {\n+            throw new MathException(\"ClassCastException in Transformation: \" + e.getMessage(), e);\n+        } catch (Exception e) {\n+            throw new MathException(\"Exception in Transformation: \" + e.getMessage(), e);\n         }\n+        \n+        return ((Number) result).doubleValue();\n     }\n }\n--- a/src/test/org/apache/commons/math/util/BeanTransformerTest.java\n+++ b/src/test/org/apache/commons/math/util/BeanTransformerTest.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.11 $ $Date: 2004/05/23 21:34:19 $\n+ * @version $Revision: 1.12 $ $Date: 2004/06/01 23:21:32 $\n  */\n public class BeanTransformerTest extends TestCase {\n     \n     }\n     \n     /**\n-     * \n      */\n     public void testTransformInvalidType() throws Exception {\n         BeanTransformer b = new BeanTransformer(\"y\");", "timestamp": 1086132092, "metainfo": ""}