{"sha": "ecfebf7a797146254d7f88a6be633f8fa956e4dd", "log": "MATH-430 Removed uses of deprecated \"BinaryFunction\" class.    ", "commit": "\n--- a/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\n import org.apache.commons.math.exception.MathUnsupportedOperationException;\n import org.apache.commons.math.exception.DimensionMismatchException;\n import org.apache.commons.math.exception.OutOfRangeException;\n-import org.apache.commons.math.analysis.BinaryFunction;\n+import org.apache.commons.math.analysis.FunctionUtils;\n+import org.apache.commons.math.analysis.function.Add;\n+import org.apache.commons.math.analysis.function.Multiply;\n+import org.apache.commons.math.analysis.function.Divide;\n+import org.apache.commons.math.analysis.function.Power;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n import org.apache.commons.math.util.FastMath;\n     /** {@inheritDoc} */\n     public RealVector mapAddToSelf(double d) {\n         if (d != 0) {\n-            return mapToSelf(BinaryFunction.ADD.fix1stArgument(d));\n+            return mapToSelf(FunctionUtils.fix2ndArgument(new Add(), d));\n         }\n         return this;\n     }\n \n     /** {@inheritDoc} */\n     public RealVector mapMultiplyToSelf(double d){\n-        return mapToSelf(BinaryFunction.MULTIPLY.fix1stArgument(d));\n+        return mapToSelf(FunctionUtils.fix2ndArgument(new Multiply(), d));\n     }\n \n     /** {@inheritDoc} */\n \n     /** {@inheritDoc} */\n     public RealVector mapDivideToSelf(double d){\n-        return mapToSelf(BinaryFunction.DIVIDE.fix2ndArgument(d));\n+        return mapToSelf(FunctionUtils.fix2ndArgument(new Divide(), d));\n     }\n \n     /** {@inheritDoc} */\n \n     /** {@inheritDoc} */\n     public RealVector mapPowToSelf(double d){\n-        return mapToSelf(BinaryFunction.POW.fix2ndArgument(d));\n+        return mapToSelf(new Power(d));\n     }\n \n     /** {@inheritDoc} */\n--- a/src/main/java/org/apache/commons/math/linear/RealVector.java\n+++ b/src/main/java/org/apache/commons/math/linear/RealVector.java\n import java.util.Iterator;\n \n import org.apache.commons.math.analysis.UnivariateRealFunction;\n-import org.apache.commons.math.exception.MathUserException;\n \n \n /**\n      *\n      * @param function Function to apply to each entry.\n      * @return this vector.\n-     * @throws MathUserException if the function throws it.\n-     */\n-    RealVector mapToSelf(UnivariateRealFunction function) throws MathUserException;\n+     * @throws org.apache.commons.math.exception.MathUserException\n+     * if the function throws it.\n+     */\n+    RealVector mapToSelf(UnivariateRealFunction function);\n \n     /**\n      * Acts as if implemented as:\n      *  return copy().map(function);\n      * </pre>\n      *\n-     * @param function Functin to apply to each entry.\n+     * @param function Function to apply to each entry.\n      * @return a new vector.\n-     * @throws MathUserException if the function throws it.\n-     */\n-    RealVector map(UnivariateRealFunction function) throws MathUserException;\n+     * @throws org.apache.commons.math.exception.MathUserException\n+     * if the function throws it.\n+     */\n+    RealVector map(UnivariateRealFunction function);\n \n     /** Class representing a modifiable entry in the vector. */\n     public abstract class Entry {", "timestamp": 1290789312, "metainfo": ""}