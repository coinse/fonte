{"sha": "171d317ee4dae387151953ab7703bb6434a91958", "log": "New test.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/dfp/DfpTest.java\n+++ b/src/test/java/org/apache/commons/math3/dfp/DfpTest.java\n \n     }\n \n+    @Test\n+    public void testSpecialConstructors() {\n+        Assert.assertEquals(ninf, field.newDfp(Double.NEGATIVE_INFINITY));\n+        Assert.assertEquals(ninf, field.newDfp(\"-Infinity\"));\n+        Assert.assertEquals(pinf, field.newDfp(Double.POSITIVE_INFINITY));\n+        Assert.assertEquals(pinf, field.newDfp(\"Infinity\"));\n+        Assert.assertTrue(field.newDfp(Double.NaN).isNaN());\n+        Assert.assertTrue(field.newDfp(\"NaN\").isNaN());\n+    }\n+\n }", "timestamp": 1361805581, "metainfo": ""}