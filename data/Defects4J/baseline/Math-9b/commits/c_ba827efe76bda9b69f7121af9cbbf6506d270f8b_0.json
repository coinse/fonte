{"sha": "ba827efe76bda9b69f7121af9cbbf6506d270f8b", "log": "Inlined   - transform.FastFourierTransformer.verifyDataSet(double[])   - transform.FastFourierTransformer.verifyDataSet(Object[]) to improve readability.  Related to MATH-677.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java\n+++ b/src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java\n     protected Complex[] fft(double[] f, boolean isInverse)\n             throws MathIllegalArgumentException {\n \n-        verifyDataSet(f);\n+        if (!ArithmeticUtils.isPowerOfTwo(f.length)) {\n+            throw new MathIllegalArgumentException(\n+                    LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,\n+                    Integer.valueOf(f.length));\n+        }\n         Complex[] transformed = new Complex[f.length];\n         if (f.length == 1) {\n             transformed[0] = new Complex(f[0], 0.0);\n     protected Complex[] fft(Complex[] data)\n             throws MathIllegalArgumentException {\n \n-        verifyDataSet(data);\n+        if (!ArithmeticUtils.isPowerOfTwo(data.length)) {\n+            throw new MathIllegalArgumentException(\n+                    LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,\n+                    Integer.valueOf(data.length));\n+        }\n \n         final int n = data.length;\n         final Complex[] f = new Complex[n];\n             f[i] = new Complex(d * f[i].getReal(), d * f[i].getImaginary());\n         }\n         return f;\n-    }\n-\n-    /**\n-     * Verifies that the data set has length of power of 2.\n-     *\n-     * @param d the data array\n-     * @throws MathIllegalArgumentException if array length is not a power of 2\n-     */\n-    public static void verifyDataSet(double[] d)\n-        throws MathIllegalArgumentException {\n-\n-        if (!ArithmeticUtils.isPowerOfTwo(d.length)) {\n-            throw new MathIllegalArgumentException(\n-                    LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,\n-                    Integer.valueOf(d.length));\n-        }\n-    }\n-\n-    /**\n-     * Verifies that the data set has length of power of 2.\n-     *\n-     * @param o the data array\n-     * @throws MathIllegalArgumentException if array length is not a power of 2\n-     */\n-    public static void verifyDataSet(Object[] o)\n-        throws MathIllegalArgumentException {\n-\n-        if (!ArithmeticUtils.isPowerOfTwo(o.length)) {\n-            throw new MathIllegalArgumentException(\n-                    LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,\n-                    Integer.valueOf(o.length));\n-        }\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/math/transform/FastSineTransformer.java\n+++ b/src/main/java/org/apache/commons/math/transform/FastSineTransformer.java\n import org.apache.commons.math.exception.NonMonotonicSequenceException;\n import org.apache.commons.math.exception.NotStrictlyPositiveException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n+import org.apache.commons.math.util.ArithmeticUtils;\n import org.apache.commons.math.util.FastMath;\n \n /**\n \n         final double[] transformed = new double[f.length];\n \n-        FastFourierTransformer.verifyDataSet(f);\n+        if (!ArithmeticUtils.isPowerOfTwo(f.length)) {\n+            throw new MathIllegalArgumentException(\n+                    LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,\n+                    Integer.valueOf(f.length));\n+        }\n         if (f[0] != 0.0) {\n             throw new MathIllegalArgumentException(\n                     LocalizedFormats.FIRST_ELEMENT_NOT_ZERO,", "timestamp": 1325735516, "metainfo": ""}