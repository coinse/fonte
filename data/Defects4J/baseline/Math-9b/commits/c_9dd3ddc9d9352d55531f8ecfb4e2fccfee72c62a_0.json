{"sha": "9dd3ddc9d9352d55531f8ecfb4e2fccfee72c62a", "log": "Improved javadoc for implementation setters / getters.  ", "commit": "\n--- a/src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java\n+++ b/src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java\n     // Implementation getters and setter\n     \n     /**\n-     * @return the meanImpl\n+     * Returns the currently configured mean implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the mean\n+     * @since 1.2\n      */\n     public synchronized UnivariateStatistic getMeanImpl() {\n         return meanImpl;\n     }\n \n     /**\n-     * @param meanImpl the meanImpl to set\n+     * <p>Sets the implementation for the mean.</p>\n+     * \n+     * @param meanImpl the UnivariateStatistic instance to use\n+     * for computing the mean\n      * @since 1.2\n      */\n     public synchronized void setMeanImpl(UnivariateStatistic meanImpl) {\n     }\n \n     /**\n-     * @return the geometricMeanImpl\n+     * Returns the currently configured geometric mean implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the geometric mean\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getGeometricMeanImpl() {\n     }\n \n     /**\n-     * @param geometricMeanImpl the geometricMeanImpl to set\n+     * <p>Sets the implementation for the gemoetric mean.</p>\n+     * \n+     * @param geometricMeanImpl the UnivariateStatistic instance to use\n+     * for computing the geometric mean\n      * @since 1.2\n      */\n     public synchronized void setGeometricMeanImpl(\n     }\n \n     /**\n-     * @return the kurtosisImpl\n+     * Returns the currently configured kurtosis implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the kurtosis\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getKurtosisImpl() {\n     }\n \n     /**\n-     * @param kurtosisImpl the kurtosisImpl to set\n+     * <p>Sets the implementation for the kurtosis.</p>\n+     * \n+     * @param kurtosisImpl the UnivariateStatistic instance to use\n+     * for computing the kurtosis\n      * @since 1.2\n      */\n     public synchronized void setKurtosisImpl(UnivariateStatistic kurtosisImpl) {\n     }\n \n     /**\n-     * @return the maxImpl\n+     * Returns the currently configured maximum implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the maximum\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getMaxImpl() {\n     }\n \n     /**\n-     * @param maxImpl the maxImpl to set\n+     * <p>Sets the implementation for the maximum.</p>\n+     * \n+     * @param maxImpl the UnivariateStatistic instance to use\n+     * for computing the maximum\n      * @since 1.2\n      */\n     public synchronized void setMaxImpl(UnivariateStatistic maxImpl) {\n     }\n \n     /**\n-     * @return the minImpl\n+     * Returns the currently configured minimum implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the minimum\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getMinImpl() {\n     }\n \n     /**\n-     * @param minImpl the minImpl to set\n+     * <p>Sets the implementation for the minimum.</p>\n+     * \n+     * @param minImpl the UnivariateStatistic instance to use\n+     * for computing the minimum\n      * @since 1.2\n      */\n     public synchronized void setMinImpl(UnivariateStatistic minImpl) {\n     }\n \n     /**\n-     * @return the percentileImpl\n+     * Returns the currently configured percentile implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the percentile\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getPercentileImpl() {\n     }\n \n     /**\n-     * @return the skewnessImpl\n+     * Returns the currently configured skewness implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the skewness\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getSkewnessImpl() {\n     }\n \n     /**\n-     * @param skewnessImpl the skewnessImpl to set\n+     * <p>Sets the implementation for the skewness.</p>\n+     * \n+     * @param skewnessImpl the UnivariateStatistic instance to use\n+     * for computing the skewness\n      * @since 1.2\n      */\n     public synchronized void setSkewnessImpl(\n     }\n \n     /**\n-     * @return the varianceImpl\n+     * Returns the currently configured variance implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the variance\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getVarianceImpl() {\n     }\n \n     /**\n-     * @param varianceImpl the varianceImpl to set\n+     * <p>Sets the implementation for the variance.</p>\n+     * \n+     * @param varianceImpl the UnivariateStatistic instance to use\n+     * for computing the variance\n      * @since 1.2\n      */\n     public synchronized void setVarianceImpl(\n     }\n \n     /**\n-     * @return the sumsqImpl\n+     * Returns the currently configured sum of squares implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the sum of squares\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getSumsqImpl() {\n     }\n \n     /**\n-     * @param sumsqImpl the sumsqImpl to set\n+     * <p>Sets the implementation for the sum of squares.</p>\n+     * \n+     * @param sumsqImpl the UnivariateStatistic instance to use\n+     * for computing the sum of squares\n      * @since 1.2\n      */\n     public synchronized void setSumsqImpl(UnivariateStatistic sumsqImpl) {\n     }\n \n     /**\n-     * @return the sumImpl\n+     * Returns the currently configured sum implementation.\n+     * \n+     * @return the UnivariateStatistic implementing the sum\n      * @since 1.2\n      */\n     public synchronized UnivariateStatistic getSumImpl() {\n     }\n \n     /**\n-     * @param sumImpl the sumImpl to set\n+     * <p>Sets the implementation for the sum.</p>\n+     * \n+     * @param sumImpl the UnivariateStatistic instance to use\n+     * for computing the sum\n      * @since 1.2\n      */\n     public synchronized void setSumImpl(UnivariateStatistic sumImpl) {", "timestamp": 1202674644, "metainfo": ""}