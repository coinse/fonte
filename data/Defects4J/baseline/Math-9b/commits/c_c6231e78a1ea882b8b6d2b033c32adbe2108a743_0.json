{"sha": "c6231e78a1ea882b8b6d2b033c32adbe2108a743", "log": "PR: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=21360 Submitted by:\tphil@steitz.com  I applied this patch on the sourcecode, I think all project.xml and  xdoc documentation should retain some authorship at this time. If  we decide otherwise we can change this in the future.   ", "commit": "\n--- a/src/java/org/apache/commons/math/linear/RealMatrix.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrix.java\n \n /**\n  * Interface defining a real-valued matrix with basic algebraic operations\n- * @author  Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:22 $\n  */\n public interface RealMatrix {\n \n--- a/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n+++ b/src/java/org/apache/commons/math/linear/RealMatrixImpl.java\n  * explicitly invoke <code>LUDecompose()</code> to recompute the decomposition\n  * before using any of the methods above.\n  *\n- * @author  Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:22 $\n  */\n public class RealMatrixImpl implements RealMatrix, Serializable {\n \n--- a/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistribution.java\n  * build grouped frequnecy histograms representing the input data or to\n  * generate random values \"like\" those in the input file -- i.e., the values\n  * generated will follow the distribution of the values in the file.\n- * @author  Phil Steitz\n- * @version $Revision: 1.1 $\n+ * @version $Revision: 1.2 $\n  */\n public interface EmpiricalDistribution {\n     \n--- a/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n+++ b/src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java\n  *    entry per line.</li>\n  * </ol></p>\n  *\n- * @author  Phil Steitz\n- * @version $Revision: 1.1 $\n+ * @version $Revision: 1.2 $\n  */\n public class EmpiricalDistributionImpl implements Serializable,EmpiricalDistribution {\n \n--- a/src/java/org/apache/commons/math/random/RandomData.java\n+++ b/src/java/org/apache/commons/math/random/RandomData.java\n \n /**\n  * Random data generation utilities\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:57 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:21 $\n  */\n public interface RandomData {      \n     /**\n--- a/src/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/java/org/apache/commons/math/random/RandomDataImpl.java\n  * (so secure sequences started with calls to reseedSecure(long) won't be \n  * identical).</li></ul>\n  * \n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:57 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:21 $\n  */\n public class RandomDataImpl implements RandomData {\n     \n--- a/src/java/org/apache/commons/math/random/ValueServer.java\n+++ b/src/java/org/apache/commons/math/random/ValueServer.java\n  *                       standard deviation = <code>sigma</code></li>\n  * <li> CONSTANT_MODE -- returns <code>mu</code> every time.</li></ul> \n  *\n- * @author  Phil Steitz\n- * @version $Revision: 1.1 $\n+ * @version $Revision: 1.2 $\n  *\n  */\n public class ValueServer {\n--- a/src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java\n+++ b/src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java\n  * \n  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n  * @author Mark Diggory\n- * @author <a href=\"mailto:phil@steitz.com\">Phil Steitz</a>\n  */\n public abstract class AbstractStoreUnivariate implements StoreUnivariate {\n \n--- a/src/java/org/apache/commons/math/stat/BivariateRegression.java\n+++ b/src/java/org/apache/commons/math/stat/BivariateRegression.java\n  * the necessary computations to return the requested statistic.</li>\n  * </ul>\n  *\n- * @author  Phil Steitz\n- * @version $Revision: 1.3 $ $Date: 2003/06/21 02:13:41 $\n+ * @version $Revision: 1.4 $ $Date: 2003/07/07 23:19:20 $\n  */\n public class BivariateRegression {\n     \n--- a/src/java/org/apache/commons/math/stat/Frequency.java\n+++ b/src/java/org/apache/commons/math/stat/Frequency.java\n  * Accepts int, long or string values, converting\n  * all to Strings and maintaining frequency counts.\n  *\n- * @author Phil Steitz\n  */\n public class Frequency {\n     /** name for this frequency distribution. */\n--- a/src/java/org/apache/commons/math/stat/TestStatistic.java\n+++ b/src/java/org/apache/commons/math/stat/TestStatistic.java\n /**\n  * A collection of commonly used test statistics and statistical tests.\n  * \n- * @author Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:35:46 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:20 $\n  * \n  */\n public interface TestStatistic {\n--- a/src/java/org/apache/commons/math/stat/TestStatisticImpl.java\n+++ b/src/java/org/apache/commons/math/stat/TestStatisticImpl.java\n /**\n  * Implements test statistics defined in the TestStatistic interface.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:35:46 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:20 $\n  * \n  */\n public class TestStatisticImpl implements TestStatistic {\n--- a/src/java/org/apache/commons/math/stat/Univariate.java\n+++ b/src/java/org/apache/commons/math/stat/Univariate.java\n  * The default windowSize is \"infinite\" -- i.e., all values added are included\n  * in all computations.\n  *\n- * @author Phil Steitz\n  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n  * @author <a href=\"mailto:mdiggory@apache.org\">Mark Diggory</a>\n- * @version $Revision: 1.5 $ $Date: 2003/07/05 19:25:38 $\n+ * @version $Revision: 1.6 $ $Date: 2003/07/07 23:19:20 $\n  * \n */\n public interface Univariate {\n--- a/src/java/org/apache/commons/math/stat/UnivariateImpl.java\n+++ b/src/java/org/apache/commons/math/stat/UnivariateImpl.java\n  * Integers, floats and longs can be added, but they will be converted\n  * to doubles by addValue().\n  *\n- * @author Phil Steitz\n  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n  * @author <a href=\"mailto:mdiggory@apache.org\">Mark Diggory</a>\n  * @author Brent Worden\n  * @author <a href=\"mailto:HotFusionMan@Yahoo.com\">Albert Davidson Chou</a>\n- * @version $Revision: 1.15 $ $Date: 2003/06/22 03:57:55 $\n+ * @version $Revision: 1.16 $ $Date: 2003/07/07 23:19:20 $\n  *\n */\n public class UnivariateImpl implements Univariate, Serializable {\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n /**\n  * Some useful additions to the built-in functions in lang.Math<p>\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:56 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:22 $\n  */\n public class MathUtils {\n \n--- a/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n+++ b/src/test/org/apache/commons/math/linear/RealMatrixImplTest.java\n /**\n  * Test cases for the {@link RealMatrixImpl} class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:39:36 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:22 $\n  */\n \n public final class RealMatrixImplTest extends TestCase {\n--- a/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n+++ b/src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java\n /**\n  * Test cases for the EmpiricalDistribution class\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:56 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:21 $\n  */\n \n public final class EmpiricalDistributionTest extends TestCase {\n--- a/src/test/org/apache/commons/math/random/RandomDataTest.java\n+++ b/src/test/org/apache/commons/math/random/RandomDataTest.java\n /**\n  * Test cases for the RandomData class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:56 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:21 $\n  */\n \n public final class RandomDataTest extends TestCase {\n--- a/src/test/org/apache/commons/math/random/ValueServerTest.java\n+++ b/src/test/org/apache/commons/math/random/ValueServerTest.java\n /**\n  * Test cases for the ValueServer class.\n  *\n- * @author  Phil Steitz\n- * @version $Revision: 1.1 $\n+ * @version $Revision: 1.2 $\n  */\n \n public final class ValueServerTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/BivariateRegressionTest.java\n+++ b/src/test/org/apache/commons/math/stat/BivariateRegressionTest.java\n /**\n  * Test cases for the TestStatistic class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.3 $ $Date: 2003/06/21 02:13:41 $\n+ * @version $Revision: 1.4 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class BivariateRegressionTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java\n+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java\n /**\n  * Test cases for the {@link Frequency} class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:53 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class FrequencyTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/ListUnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/ListUnivariateImplTest.java\n /**\n  * Test cases for the {@link Univariate} class.\n  *\n- * @author <a href=\"mailto:phil@steitz.com\">Phil Steitz</a>\n- * @version $Revision: 1.4 $ $Date: 2003/06/22 03:57:53 $\n+ * @version $Revision: 1.5 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class ListUnivariateImplTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/StatUtilsTest.java\n+++ b/src/test/org/apache/commons/math/stat/StatUtilsTest.java\n /**\n  * Test cases for the {@link StatUtils} class.\n  *\n- * @author <a href=\"mailto:phil@steitz.com\">Phil Steitz</a>\n  * @author <a href=\"mailto:mdiggory@apache.org\">Mark Diggory</a>\n- * @version $Revision: 1.3 $ $Date: 2003/06/24 14:08:40 $\n+ * @version $Revision: 1.4 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class StatUtilsTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/StoreUnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/StoreUnivariateImplTest.java\n /**\n  * Test cases for the {@link Univariate} class.\n  *\n- * @author <a href=\"mailto:phil@steitz.com\">Phil Steitz</a>\n- * @version $Revision: 1.4 $ $Date: 2003/06/22 03:57:53 $\n+ * @version $Revision: 1.5 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class StoreUnivariateImplTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/TestStatisticTest.java\n+++ b/src/test/org/apache/commons/math/stat/TestStatisticTest.java\n /**\n  * Test cases for the TestStatistic class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.2 $ $Date: 2003/06/25 01:35:46 $\n+ * @version $Revision: 1.3 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class TestStatisticTest extends TestCase {\n--- a/src/test/org/apache/commons/math/stat/UnivariateImplTest.java\n+++ b/src/test/org/apache/commons/math/stat/UnivariateImplTest.java\n /**\n  * Test cases for the {@link Univariate} class.\n  *\n- * @author Phil Steitz\n  * @author Tim Obrien\n- * @version $Revision: 1.4 $ $Date: 2003/06/22 03:57:53 $\n+ * @version $Revision: 1.5 $ $Date: 2003/07/07 23:19:19 $\n  */\n \n public final class UnivariateImplTest extends TestCase {\n--- /dev/null\n+++ b/src/test/org/apache/commons/math/stat/univariate/InteractionTest.java\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+package org.apache.commons.math.stat.univariate;\n+\n+import org.apache.commons.math.stat.univariate.moment.FourthMoment;\n+import org.apache.commons.math.stat.univariate.moment.Kurtosis;\n+import org.apache.commons.math.stat.univariate.moment.Mean;\n+import org.apache.commons.math.stat.univariate.moment.Skewness;\n+import org.apache.commons.math.stat.univariate.moment.Variance;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ *\n+ */\n+public class InteractionTest extends TestCase {\n+\n+    protected double mean = 12.40454545454550;\n+    protected double var = 10.00235930735930;\n+    protected double skew = 1.437423729196190;\n+    protected double kurt = 2.377191264804700;\n+\n+    protected double tolerance = 10E-12;\n+\n+    protected double[] testArray =\n+        {\n+            12.5,\n+            12,\n+            11.8,\n+            14.2,\n+            14.9,\n+            14.5,\n+            21,\n+            8.2,\n+            10.3,\n+            11.3,\n+            14.1,\n+            9.9,\n+            12.2,\n+            12,\n+            12.1,\n+            11,\n+            19.8,\n+            11,\n+            10,\n+            8.8,\n+            9,\n+            12.3 };\n+\n+    public InteractionTest(String name) {\n+        super(name);\n+    }\n+\n+\n+    public void testInteraction() {\n+        \n+        FourthMoment m4 = new FourthMoment();\n+        Mean m = new Mean(m4);\n+        Variance v = new Variance(m4);\n+        Skewness s= new Skewness(m4);\n+        Kurtosis k = new Kurtosis(m4);\n+\n+        for (int i = 0; i < testArray.length; i++){\n+            m4.increment(testArray[i]);\n+            m.increment(testArray[i]);\n+            v.increment(testArray[i]);\n+            s.increment(testArray[i]);\n+            k.increment(testArray[i]);\n+        }\n+        \n+        assertEquals(mean,m.getValue(),tolerance);\n+        assertEquals(var,v.getValue(),tolerance);\n+        assertEquals(skew ,s.getValue(),tolerance);\n+        assertEquals(kurt,k.getValue(),tolerance);\n+\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public abstract class StorelessUnivariateStatisticAbstractTest\n     extends UnivariateStatisticAbstractTest {\n--- a/src/test/org/apache/commons/math/stat/univariate/UnivariateStatisticAbstractTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/UnivariateStatisticAbstractTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public abstract class UnivariateStatisticAbstractTest extends TestCase {\n \n     protected double mean = 12.40454545454550;\n+    protected double geoMean = 12.070589161633011;\n+\n     protected double var = 10.00235930735930;\n     protected double std = Math.sqrt(var);\n     protected double skew = 1.437423729196190;\n--- a/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/GeometricMeanTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class GeometricMeanTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/KurtosisTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/KurtosisTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class KurtosisTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/MeanTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/MeanTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class MeanTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/SkewnessTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/SkewnessTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class SkewnessTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/StandardDeviationTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/StandardDeviationTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class StandardDeviationTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/moment/VarianceTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/moment/VarianceTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class VarianceTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MaxTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MaxTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class MaxTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MedianTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MedianTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class MedianTest extends UnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/MinTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/MinTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class MinTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class PercentileTest extends UnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class ProductTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumLogTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class SumLogTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumSqTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumSqTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class SumSqTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/stat/univariate/summary/SumTest.java\n+++ b/src/test/org/apache/commons/math/stat/univariate/summary/SumTest.java\n \n /**\n  * Test cases for the {@link UnivariateStatistic} class.\n- *\n- * @author Mark Diggory\n  */\n public class SumTest extends StorelessUnivariateStatisticAbstractTest{\n \n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n /**\n  * Test cases for the MathUtils class.\n  *\n- * @author Phil Steitz\n- * @version $Revision: 1.1 $ $Date: 2003/06/22 03:57:55 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:22 $\n  */\n \n public final class MathUtilsTest extends TestCase {", "timestamp": 1057619962, "metainfo": ""}