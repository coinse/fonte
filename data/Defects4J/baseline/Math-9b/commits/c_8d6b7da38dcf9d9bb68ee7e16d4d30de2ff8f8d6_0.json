{"sha": "8d6b7da38dcf9d9bb68ee7e16d4d30de2ff8f8d6", "log": "Changed lcm to throw ArithmeticException (instead of returning bogus value) if the result is too large to store as an integer. PR # 35431 Submitted by: J\u00f6rg Weimar   ", "commit": "\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n \n     /**\n      * Returns the least common multiple between two integer values.\n+     * \n      * @param a the first integer value.\n      * @param b the second integer value.\n      * @return the least common multiple between a and b.\n+     * @throws ArithmeticException if the lcm is too large to store as an int\n      * @since 1.1\n      */\n     public static int lcm(int a, int b) {\n-        return Math.abs(a / gcd(a, b) * b);\n+        return Math.abs(mulAndCheck(a / gcd(a, b) , b));\n     }\n \n     /**\n--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java\n+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java\n         assertEquals(150, MathUtils.lcm(-a, b));\n         assertEquals(150, MathUtils.lcm(a, -b));\n         assertEquals(2310, MathUtils.lcm(a, c));\n+        \n+        try {\n+            MathUtils.lcm(Integer.MAX_VALUE, Integer.MAX_VALUE - 1);\n+            fail(\"Expecting ArithmeticException\");\n+        } catch (ArithmeticException ex) {\n+            // expected\n+        }\n     }\n     \n     public void testRoundFloat() {", "timestamp": 1119748756, "metainfo": ""}