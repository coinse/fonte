{"sha": "3dfc590be5f89612be7b6cb9ca2bcbc045838209", "log": "MATH-438 Removed deprecated class \"MatrixIndexException\".   ", "commit": "\n--- a/src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java\n         }\n \n         @Override\n-        public RealVector add(RealVector v) throws IllegalArgumentException {\n+        public RealVector add(RealVector v) {\n             RealVector result = new ArrayRealVector(v);\n             return result.add(this);\n         }\n \n         @Override\n-        public RealVector subtract(RealVector v) throws IllegalArgumentException {\n+        public RealVector subtract(RealVector v) {\n             RealVector result = new ArrayRealVector(v);\n             return result.subtract(this).mapMultiplyToSelf(-1);\n         }\n             return this;\n         }\n \n-        public RealVector ebeMultiply(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector ebeDivide(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double dotProduct(RealVector v) throws IllegalArgumentException {\n+        public RealVector ebeMultiply(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector ebeDivide(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double dotProduct(RealVector v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector projection(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getEntry(int index) throws MatrixIndexException {\n+        public RealVector projection(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public double getEntry(int index) {\n             return values[index];\n         }\n \n-        public void setEntry(int index, double value) throws MatrixIndexException {\n+        public void setEntry(int index, double value) {\n             values[index] = value;\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector getSubVector(int index, int n) throws MatrixIndexException {\n+        public RealVector getSubVector(int index, int n) {\n             throw unsupported();\n         }\n \n--- a/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java\n             throw unsupported();\n         }\n \n-        public FieldVector<T> add(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> add(T[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> subtract(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> subtract(T[] v) throws IllegalArgumentException {\n+        public FieldVector<T> add(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> add(T[] v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> subtract(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> subtract(T[] v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public FieldVector<T> ebeMultiply(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> ebeMultiply(T[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> ebeDivide(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> ebeDivide(T[] v) throws IllegalArgumentException {\n+        public FieldVector<T> ebeMultiply(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> ebeMultiply(T[] v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> ebeDivide(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> ebeDivide(T[] v) {\n             throw unsupported();\n         }\n \n             return data.clone();\n         }\n \n-        public T dotProduct(FieldVector<T> v) throws IllegalArgumentException {\n+        public T dotProduct(FieldVector<T> v) {\n             T dot = field.getZero();\n             for (int i = 0; i < data.length; i++) {\n                 dot = dot.add(data[i].multiply(v.getEntry(i)));\n             return dot;\n         }\n \n-        public T dotProduct(T[] v) throws IllegalArgumentException {\n+        public T dotProduct(T[] v) {\n             T dot = field.getZero();\n             for (int i = 0; i < data.length; i++) {\n                 dot = dot.add(data[i].multiply(v[i]));\n             return dot;\n         }\n \n-        public FieldVector<T> projection(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldVector<T> projection(T[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldMatrix<T> outerProduct(FieldVector<T> v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public FieldMatrix<T> outerProduct(T[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public T getEntry(int index) throws MatrixIndexException {\n+        public FieldVector<T> projection(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldVector<T> projection(T[] v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldMatrix<T> outerProduct(FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public FieldMatrix<T> outerProduct(T[] v) {\n+            throw unsupported();\n+        }\n+\n+        public T getEntry(int index) {\n             return data[index];\n         }\n \n             throw unsupported();\n         }\n \n-        public FieldVector<T> getSubVector(int index, int n) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setEntry(int index, T value) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setSubVector(int index, FieldVector<T> v) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setSubVector(int index, T[] v) throws MatrixIndexException {\n+        public FieldVector<T> getSubVector(int index, int n) {\n+            throw unsupported();\n+        }\n+\n+        public void setEntry(int index, T value) {\n+            throw unsupported();\n+        }\n+\n+        public void setSubVector(int index, FieldVector<T> v) {\n+            throw unsupported();\n+        }\n+\n+        public void setSubVector(int index, T[] v) {\n             throw unsupported();\n         }\n \n--- a/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java\n             return new UnsupportedOperationException(\"Not supported, unneeded for test purposes\");\n         }\n \n-        public RealVector map(UnivariateRealFunction function) throws FunctionEvaluationException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector mapToSelf(UnivariateRealFunction function) throws FunctionEvaluationException {\n+        public RealVector map(UnivariateRealFunction function) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector mapToSelf(UnivariateRealFunction function) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector add(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector add(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector subtract(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector subtract(double[] v) throws IllegalArgumentException {\n+        public RealVector add(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector add(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector subtract(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector subtract(double[] v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector ebeMultiply(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector ebeMultiply(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector ebeDivide(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector ebeDivide(double[] v) throws IllegalArgumentException {\n+        public RealVector ebeMultiply(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector ebeMultiply(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector ebeDivide(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector ebeDivide(double[] v) {\n             throw unsupported();\n         }\n \n             return data.clone();\n         }\n \n-        public double dotProduct(RealVector v) throws IllegalArgumentException {\n+        public double dotProduct(RealVector v) {\n             double dot = 0;\n             for (int i = 0; i < data.length; i++) {\n                 dot += data[i] * v.getEntry(i);\n             return dot;\n         }\n \n-        public double dotProduct(double[] v) throws IllegalArgumentException {\n+        public double dotProduct(double[] v) {\n             double dot = 0;\n             for (int i = 0; i < data.length; i++) {\n                 dot += data[i] * v[i];\n             throw unsupported();\n         }\n \n-        public double getDistance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getDistance(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getL1Distance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getL1Distance(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getLInfDistance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getLInfDistance(double[] v) throws IllegalArgumentException {\n+        public double getDistance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public double getDistance(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public double getL1Distance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public double getL1Distance(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public double getLInfDistance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public double getLInfDistance(double[] v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector projection(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector projection(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealMatrix outerProduct(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealMatrix outerProduct(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getEntry(int index) throws MatrixIndexException {\n+        public RealVector projection(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector projection(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public RealMatrix outerProduct(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public RealMatrix outerProduct(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public double getEntry(int index) {\n             return data[index];\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector getSubVector(int index, int n) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setEntry(int index, double value) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setSubVector(int index, RealVector v) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setSubVector(int index, double[] v) throws MatrixIndexException {\n+        public RealVector getSubVector(int index, int n) {\n+            throw unsupported();\n+        }\n+\n+        public void setEntry(int index, double value) {\n+            throw unsupported();\n+        }\n+\n+        public void setSubVector(int index, RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        public void setSubVector(int index, double[] v) {\n             throw unsupported();\n         }\n \n--- a/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n+++ b/src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java\n         }\n \n         @Override\n-        public RealVector map(UnivariateRealFunction function) throws FunctionEvaluationException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector mapToSelf(UnivariateRealFunction function) throws FunctionEvaluationException {\n+        public RealVector map(UnivariateRealFunction function) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector mapToSelf(UnivariateRealFunction function) {\n             throw unsupported();\n         }\n \n         }\n \n         @Override\n-        public RealVector add(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector add(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector subtract(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector subtract(double[] v) throws IllegalArgumentException {\n+        public RealVector add(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector add(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector subtract(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector subtract(double[] v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector ebeMultiply(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector ebeMultiply(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public RealVector ebeDivide(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector ebeDivide(double[] v) throws IllegalArgumentException {\n+        public RealVector ebeMultiply(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector ebeMultiply(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public RealVector ebeDivide(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector ebeDivide(double[] v) {\n             throw unsupported();\n         }\n \n         }\n \n         @Override\n-        public double dotProduct(RealVector v) throws IllegalArgumentException {\n+        public double dotProduct(RealVector v) {\n             double dot = 0;\n             for (int i = 0; i < data.length; i++) {\n                 dot += data[i] * v.getEntry(i);\n         }\n \n         @Override\n-        public double dotProduct(double[] v) throws IllegalArgumentException {\n+        public double dotProduct(double[] v) {\n             double dot = 0;\n             for (int i = 0; i < data.length; i++) {\n                 dot += data[i] * v[i];\n         }\n \n         @Override\n-        public double getDistance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double getDistance(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double getL1Distance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double getL1Distance(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double getLInfDistance(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public double getLInfDistance(double[] v) throws IllegalArgumentException {\n+        public double getDistance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double getDistance(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double getL1Distance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double getL1Distance(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double getLInfDistance(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public double getLInfDistance(double[] v) {\n             throw unsupported();\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector projection(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealVector projection(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealMatrix outerProduct(RealVector v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public RealMatrix outerProduct(double[] v) throws IllegalArgumentException {\n-            throw unsupported();\n-        }\n-\n-        public double getEntry(int index) throws MatrixIndexException {\n+        public RealVector projection(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealVector projection(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealMatrix outerProduct(RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public RealMatrix outerProduct(double[] v) {\n+            throw unsupported();\n+        }\n+\n+        public double getEntry(int index) {\n             return data[index];\n         }\n \n             throw unsupported();\n         }\n \n-        public RealVector getSubVector(int index, int n) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        public void setEntry(int index, double value) throws MatrixIndexException {\n+        public RealVector getSubVector(int index, int n) {\n+            throw unsupported();\n+        }\n+\n+        public void setEntry(int index, double value) {\n             data[index] = value;\n         }\n \n         @Override\n-        public void setSubVector(int index, RealVector v) throws MatrixIndexException {\n-            throw unsupported();\n-        }\n-\n-        @Override\n-        public void setSubVector(int index, double[] v) throws MatrixIndexException {\n+        public void setSubVector(int index, RealVector v) {\n+            throw unsupported();\n+        }\n+\n+        @Override\n+        public void setSubVector(int index, double[] v) {\n             throw unsupported();\n         }\n ", "timestamp": 1289517181, "metainfo": ""}