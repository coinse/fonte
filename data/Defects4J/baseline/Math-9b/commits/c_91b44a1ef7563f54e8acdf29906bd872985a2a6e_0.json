{"sha": "91b44a1ef7563f54e8acdf29906bd872985a2a6e", "log": "Added checks for \"null\".   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java\n      * @throws DimensionMismatchException if the start point dimension is wrong.\n      * @throws TooManyEvaluationsException if the maximal number of evaluations is\n      * exceeded.\n+     * @throws NullArgumentException if any argument is {@code null}.\n      */\n     RealPointValuePair optimize(FUNC f, GoalType goalType, double[] startPoint)\n         throws FunctionEvaluationException;\n--- a/src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java\n      * @throws DimensionMismatchException if the start point dimension is wrong.\n      * @throws TooManyEvaluationsException if the maximal number of evaluations is\n      * exceeded.\n+     * @throws NullArgumentException if any argument is {@code null}.\n      */\n     VectorialPointValuePair optimize(FUNC f, double[] target, double[] weight,\n                                      double[] startPoint)\n--- a/src/main/java/org/apache/commons/math/optimization/general/BaseAbstractScalarOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/general/BaseAbstractScalarOptimizer.java\n import org.apache.commons.math.util.Incrementor;\n import org.apache.commons.math.exception.MaxCountExceededException;\n import org.apache.commons.math.exception.TooManyEvaluationsException;\n+import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.analysis.MultivariateRealFunction;\n import org.apache.commons.math.optimization.BaseMultivariateRealOptimizer;\n import org.apache.commons.math.optimization.GoalType;\n                                        GoalType goalType,\n                                        double[] startPoint)\n         throws FunctionEvaluationException {\n+        // Checks.\n+        if (f == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (goalType == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (startPoint == null) {\n+            throw new NullArgumentException();\n+        }\n+\n         // Reset.\n         evaluations.resetCount();\n \n--- a/src/main/java/org/apache/commons/math/optimization/general/BaseAbstractVectorialOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/general/BaseAbstractVectorialOptimizer.java\n import org.apache.commons.math.exception.MaxCountExceededException;\n import org.apache.commons.math.exception.TooManyEvaluationsException;\n import org.apache.commons.math.exception.DimensionMismatchException;\n+import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.analysis.MultivariateVectorialFunction;\n import org.apache.commons.math.optimization.BaseMultivariateVectorialOptimizer;\n import org.apache.commons.math.optimization.GoalType;\n                                             double[] target, double[] weight,\n                                             double[] startPoint)\n         throws FunctionEvaluationException {\n-\n+        // Checks.\n+        if (f == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (target == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (weight == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (startPoint == null) {\n+            throw new NullArgumentException();\n+        }\n         if (target.length != weight.length) {\n             throw new DimensionMismatchException(target.length, weight.length);\n         }\n--- a/src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java\n import org.apache.commons.math.util.Incrementor;\n import org.apache.commons.math.exception.MaxCountExceededException;\n import org.apache.commons.math.exception.TooManyEvaluationsException;\n+import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n import org.apache.commons.math.optimization.GoalType;\n import org.apache.commons.math.optimization.ConvergenceChecker;\n                                                  double min, double max,\n                                                  double startValue)\n         throws FunctionEvaluationException {\n+        // Checks.\n+        if (f == null) {\n+            throw new NullArgumentException();\n+        }\n+        if (goalType == null) {\n+            throw new NullArgumentException();\n+        }\n+\n         // Reset.\n         searchMin = min;\n         searchMax = max;\n--- a/src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java\n \n import org.apache.commons.math.FunctionEvaluationException;\n import org.apache.commons.math.analysis.UnivariateRealFunction;\n+import org.apache.commons.math.exception.NullArgumentException;\n import org.apache.commons.math.optimization.BaseOptimizer;\n import org.apache.commons.math.optimization.GoalType;\n \n      * function.\n      * @throws IllegalArgumentException if {@code min > max} or the endpoints\n      * do not satisfy the requirements specified by the optimizer.\n+     * @throws NullArgumentException if any argument is {@code null}.\n      */\n     UnivariateRealPointValuePair optimize(FUNC f, GoalType goalType,\n                                           double min, double max,", "timestamp": 1283256300, "metainfo": ""}