{"sha": "2f4dff0d4184af611d4bd50f044377a88b007332", "log": "fixed checkstyle and findbugs errors  ", "commit": "\n--- a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\n+++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java\n         // subclasses can overide if there is a better method.\n         UnivariateRealFunction rootFindingFunction =\n             new UnivariateRealFunction() {\n-\n+            private static final long serialVersionUID = 1043729002768873023L;\n             public double value(double x) throws FunctionEvaluationException {\n                 try {\n                     return cumulativeProbability(x) - p;\n--- a/src/java/org/apache/commons/math/linear/RealVector.java\n+++ b/src/java/org/apache/commons/math/linear/RealVector.java\n  * limitations under the License.\n  */\n package org.apache.commons.math.linear;\n+\n+import java.io.Serializable;\n \n /**\n  * Interface defining a real-valued vector with basic algebraic operations.\n  * @version $Revision$ $Date$\n  * @since 2.0\n  */\n-public interface RealVector {\n+public interface RealVector extends Serializable {\n \n     /**\n      * Returns a (deep) copy of this.\n--- a/src/java/org/apache/commons/math/linear/SparseRealVector.java\n+++ b/src/java/org/apache/commons/math/linear/SparseRealVector.java\n */\n public class SparseRealVector implements RealVector {\n \n+    /** Serializable version identifier. */\n+    private static final long serialVersionUID = 8772222695580707260L;\n+\n     /** Default Tolerance for having a value considered zero. */\n     public static final double DEFAULT_ZERO_TOLERANCE = 1.0e-12;\n ", "timestamp": 1238108427, "metainfo": ""}