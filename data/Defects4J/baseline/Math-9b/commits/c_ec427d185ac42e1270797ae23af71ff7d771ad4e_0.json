{"sha": "ec427d185ac42e1270797ae23af71ff7d771ad4e", "log": "MATH-428 Added a constructor.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java\n      * @param n Dimension of the simplex.\n      */\n     public NelderMeadSimplex(final int n) {\n-        this(n, DEFAULT_RHO, DEFAULT_KHI, DEFAULT_GAMMA, DEFAULT_SIGMA);\n+        this(n, 1d);\n+    }\n+\n+    /**\n+     * Build a Nelder-Mead simplex with default coefficients.\n+     * The default coefficients are 1.0 for rho, 2.0 for khi and 0.5\n+     * for both gamma and sigma.\n+     *\n+     * @param n Dimension of the simplex.\n+     * @param sideLength Length of the sides of the default (hypercube)\n+     * simplex. See {@link AbstractSimplex#AbstractSimplex(int,double)}.\n+     */\n+    public NelderMeadSimplex(final int n, double sideLength) {\n+        this(n, sideLength,\n+             DEFAULT_RHO, DEFAULT_KHI, DEFAULT_GAMMA, DEFAULT_SIGMA);\n     }\n \n     /**\n      * Build a Nelder-Mead simplex with specified coefficients.\n      *\n      * @param n Dimension of the simplex. See\n-     * {@link AbstractSimplex#AbstractSimplex(int)}.\n-     * @param rho Reflection coefficient.\n-     * @param khi Expansion coefficient.\n-     * @param gamma Contraction coefficient.\n-     * @param sigma Shrinkage coefficient.\n-     */\n-    public NelderMeadSimplex(final int n,\n-                             final double rho, final double khi,\n-                             final double gamma, final double sigma) {\n-        super(n);\n+     * {@link AbstractSimplex#AbstractSimplex(int,double)}.\n+     * @param sideLength Length of the sides of the default (hypercube)\n+     * simplex. See {@link AbstractSimplex#AbstractSimplex(int,double)}.\n+     * @param rho Reflection coefficient.\n+     * @param khi Expansion coefficient.\n+     * @param gamma Contraction coefficient.\n+     * @param sigma Shrinkage coefficient.\n+     */\n+    public NelderMeadSimplex(final int n, double sideLength,\n+                             final double rho, final double khi,\n+                             final double gamma, final double sigma) {\n+        super(n, sideLength);\n \n         this.rho = rho;\n         this.khi = khi;\n         this.gamma = gamma;\n         this.sigma = sigma;\n+    }\n+\n+    /**\n+     * Build a Nelder-Mead simplex with specified coefficients.\n+     *\n+     * @param n Dimension of the simplex. See\n+     * {@link AbstractSimplex#AbstractSimplex(int)}.\n+     * @param rho Reflection coefficient.\n+     * @param khi Expansion coefficient.\n+     * @param gamma Contraction coefficient.\n+     * @param sigma Shrinkage coefficient.\n+     */\n+    public NelderMeadSimplex(final int n,\n+                             final double rho, final double khi,\n+                             final double gamma, final double sigma) {\n+        this(n, 1d, rho, khi, gamma, sigma);\n     }\n \n     /**", "timestamp": 1288875453, "metainfo": ""}