{"sha": "032c97320f4ca7256a60e7319b6354c62971702c", "log": "Tidied up interrupt check, added test case to make sure it works.", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n     }\n \n     /**\n-     * Read the input stream into a byte buffer.\n+     * Read the input stream into a byte buffer. To deal with slow input streams, you may interrupt the thread this\n+     * method is executing on. The data read until being interrupted will be available.\n      * @param inStream the input stream to read from\n      * @param maxSize the maximum size in bytes to read from the stream. Set to 0 to be unlimited.\n      * @return the filled byte buffer\n         int read;\n         int remaining = maxSize;\n \n-\t\twhile (!Thread.currentThread().isInterrupted()) {\n+        while (!Thread.interrupted()) {\n             read = inStream.read(buffer);\n             if (read == -1) break;\n             if (capped) {\n             }\n             outStream.write(buffer, 0, read);\n         }\n-        \n-\t\tif (Thread.currentThread().isInterrupted()) {\n-\t\t\tThread.interrupted();\n-\t\t\tthrow new IOException(\"JSoup thread has been interrupted\");\n-\t\t}\n+\n         return ByteBuffer.wrap(outStream.toByteArray());\n     }\n \n--- a/src/test/java/org/jsoup/integration/UrlConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/UrlConnectTest.java\n             doc.location()\n         );\n     }\n+\n+    @Test public void canInterruptRead() throws IOException, InterruptedException {\n+        final String[] body = new String[1];\n+        Thread runner = new Thread(new Runnable() {\n+            public void run() {\n+                try {\n+                    Connection.Response res = Jsoup.connect(\"http://jsscxml.org/serverload.stream\")\n+                        .timeout(10 * 1000)\n+                        .execute();\n+                    body[0] = res.body();\n+                } catch (IOException e) {\n+                    throw new RuntimeException(e);\n+                }\n+\n+            }\n+        });\n+\n+        runner.start();\n+        Thread.sleep(1000 * 5);\n+        runner.interrupt();\n+        assertTrue(runner.isInterrupted());\n+        runner.join();\n+\n+        assertTrue(body[0].length() > 0);\n+    }\n }", "timestamp": 1477806108, "metainfo": ""}