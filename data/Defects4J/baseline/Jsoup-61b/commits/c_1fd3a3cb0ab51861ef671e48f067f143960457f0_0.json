{"sha": "1fd3a3cb0ab51861ef671e48f067f143960457f0", "log": "Tidied up siblingIndex() access in Node", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n      * @see #after(String)\n      */\n     public Node before(String html) {\n-        addSiblingHtml(siblingIndex(), html);\n+        addSiblingHtml(siblingIndex, html);\n         return this;\n     }\n \n         Validate.notNull(node);\n         Validate.notNull(parentNode);\n \n-        parentNode.addChildren(siblingIndex(), node);\n+        parentNode.addChildren(siblingIndex, node);\n         return this;\n     }\n \n      * @see #before(String)\n      */\n     public Node after(String html) {\n-        addSiblingHtml(siblingIndex() + 1, html);\n+        addSiblingHtml(siblingIndex + 1, html);\n         return this;\n     }\n \n         Validate.notNull(node);\n         Validate.notNull(parentNode);\n \n-        parentNode.addChildren(siblingIndex() + 1, node);\n+        parentNode.addChildren(siblingIndex + 1, node);\n         return this;\n     }\n \n     public Node unwrap() {\n         Validate.notNull(parentNode);\n \n-        int index = siblingIndex;\n         Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;\n-        parentNode.addChildren(index, this.childNodesAsArray());\n+        parentNode.addChildren(siblingIndex, this.childNodesAsArray());\n         this.remove();\n \n         return firstChild;\n         if (in.parentNode != null)\n             in.parentNode.removeChild(in);\n         \n-        Integer index = out.siblingIndex();\n+        final int index = out.siblingIndex;\n         childNodes.set(index, in);\n         in.parentNode = this;\n         in.setSiblingIndex(index);\n \n     protected void removeChild(Node out) {\n         Validate.isTrue(out.parentNode == this);\n-        int index = out.siblingIndex();\n+        final int index = out.siblingIndex;\n         childNodes.remove(index);\n         reindexChildren(index);\n         out.parentNode = null;\n         if (parentNode == null)\n             return null; // root\n         \n-        List<Node> siblings = parentNode.childNodes;\n-        Integer index = siblingIndex();\n-        Validate.notNull(index);\n-        if (siblings.size() > index+1)\n-            return siblings.get(index+1);\n+        final List<Node> siblings = parentNode.childNodes;\n+        final int index = siblingIndex+1;\n+        if (siblings.size() > index)\n+            return siblings.get(index);\n         else\n             return null;\n     }\n         if (parentNode == null)\n             return null; // root\n \n-        List<Node> siblings = parentNode.childNodes;\n-        Integer index = siblingIndex();\n-        Validate.notNull(index);\n-        if (index > 0)\n-            return siblings.get(index-1);\n+        if (siblingIndex > 0)\n+            return parentNode.childNodes.get(siblingIndex-1);\n         else\n             return null;\n     }", "timestamp": 1428025222, "metainfo": ""}