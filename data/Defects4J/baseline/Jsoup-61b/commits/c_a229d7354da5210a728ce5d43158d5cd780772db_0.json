{"sha": "a229d7354da5210a728ce5d43158d5cd780772db", "log": "Allow selectors to contain unbalanced braces  Fixes #611", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n \n     /**\n      * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n-     * and leave \" four\" on the queue. Unbalanced openers and closers can be escaped (with \\). Those escapes will be left\n+     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n      * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n      * contains text strings; use unescape for that.\n      * @param open opener\n         int end = -1;\n         int depth = 0;\n         char last = 0;\n+        boolean inQuote = false;\n \n         do {\n             if (isEmpty()) break;\n             Character c = consume();\n             if (last == 0 || last != ESC) {\n+                if (c.equals('\\'') || c.equals('\"') && c != open)\n+                    inQuote = !inQuote;\n+                if (inQuote)\n+                    continue;\n                 if (c.equals(open)) {\n                     depth++;\n                     if (start == -1)\n--- a/src/test/java/org/jsoup/select/SelectorTest.java\n+++ b/src/test/java/org/jsoup/select/SelectorTest.java\n         Elements subSelect = els.select(\":contains(one)\");\n         assertEquals(2, subSelect.size());\n     }\n+\n+    @Test public void attributeWithBrackets() {\n+        String html = \"<div data='End]'>One</div> <div data='[Another)]]'>Two</div>\";\n+        Document doc = Jsoup.parse(html);\n+        assertEquals(\"One\", doc.select(\"div[data='End]'\").first().text());\n+        assertEquals(\"Two\", doc.select(\"div[data='[Another)]]'\").first().text());\n+    }\n }", "timestamp": 1462666738, "metainfo": ""}