{"sha": "93951f7a9d7d11399f2e13544f8f7795e7ada509", "log": "in-memory serialization tests   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestMap.java\n+++ b/src/test/org/apache/commons/collections/TestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.8 2002/02/22 02:18:50 mas Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/02/22 02:18:50 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.9 2002/02/22 06:16:35 morgand Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/02/22 06:16:35 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n import junit.framework.*;\n+import java.io.IOException;\n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.Map;\n import java.util.Collection;\n  *\n  * @author Michael Smith\n  * @author Rodney Waldhoff\n- * @version $Id: TestMap.java,v 1.8 2002/02/22 02:18:50 mas Exp $\n+ * @version $Id: TestMap.java,v 1.9 2002/02/22 06:16:35 morgand Exp $\n  */\n public abstract class TestMap extends TestObject {\n     public TestMap(String testName) {\n \n     }\n \n+    public void testEmptyMapSerialization() \n+    throws IOException, ClassNotFoundException {\n+        Map map = makeEmptyMap();\n+        if (!(map instanceof Serializable)) return;\n+        \n+        byte[] objekt = writeExternalFormToBytes((Serializable) map);\n+        Map map2 = (Map) readExternalFormFromBytes(objekt);\n+\n+        assertTrue(\"Both maps are empty\",map.isEmpty()  == true);\n+        assertTrue(\"Both maps are empty\",map2.isEmpty() == true);\n+    }\n+\n+    public void testFullMapSerialization() \n+    throws IOException, ClassNotFoundException {\n+        Map map = makeFullMap();\n+        if (!(map instanceof Serializable)) return;\n+        \n+        byte[] objekt = writeExternalFormToBytes((Serializable) map);\n+        Map map2 = (Map) readExternalFormFromBytes(objekt);\n+\n+        assertEquals(\"Both maps are same size\",map.size(), getSampleKeys().length);\n+        assertEquals(\"Both maps are same size\",map2.size(),getSampleKeys().length);\n+    } \n+\n     /*\n         // optional operation\n public void testMapClear() {", "timestamp": 1014358595, "metainfo": ""}