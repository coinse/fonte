{"sha": "2e2789cda4b0aaf024930f78b8dce73d1f794597", "log": "Move author to pom, add version/since tags, fix typos.  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections4/AbstractLinkedListTest.java\n+++ b/src/test/java/org/apache/commons/collections4/AbstractLinkedListTest.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n  *\n- * @version $Revision$\n- *\n- * @author Rich Dougherty\n+ * @version $Id$\n  */\n public abstract class AbstractLinkedListTest<T> extends AbstractListTest<T> {\n \n--- a/src/test/java/org/apache/commons/collections4/BulkTest.java\n+++ b/src/test/java/org/apache/commons/collections4/BulkTest.java\n  * A <I>bulk test method</I>, on the other hand, returns a new instance\n  * of <code>BulkTest</code>, which can itself define new simple and bulk\n  * test methods.  By using the {@link #makeSuite} method, you can \n- * automatically create a hierarchal suite of tests and child bulk tests.\n+ * automatically create a hierarchical suite of tests and child bulk tests.\n  * <p>\n  * For instance, consider the following two classes:\n  *\n--- a/src/test/java/org/apache/commons/collections4/TestUtils.java\n+++ b/src/test/java/org/apache/commons/collections4/TestUtils.java\n     /**\n      * Asserts that deserialization of the object returns the same object as the\n      * one that was serialized. Object is first serialized, then deserialized\n-     * and finally check is preformed to see if original and deserialized\n+     * and finally check is performed to see if original and deserialized\n      * object references are the same.\n      * <p>\n-     * This method is especially good for testing singletone pattern on classes\n+     * This method is especially good for testing singleton pattern on classes\n      * that support serialization.\n      *\n      * @param msg the identifying message for the <code>AssertionError</code>.\n--- a/src/test/java/org/apache/commons/collections4/list/AbstractLinkedListTest.java\n+++ b/src/test/java/org/apache/commons/collections4/list/AbstractLinkedListTest.java\n  * Test case for {@link AbstractLinkedList}.\n  *\n  * @version $Id$\n- * @author David Hay\n  */\n public abstract class AbstractLinkedListTest<E> extends AbstractListTest<E> {\n \n--- a/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java\n+++ b/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java\n import org.apache.commons.collections4.map.PassiveExpiringMap;\n import org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy;\n \n+/**\n+ * JUnit tests.\n+ *\n+ * @since 4.0\n+ * @version $Id: $\n+ */\n public class PassiveExpiringMapTest<K, V>\n     extends AbstractMapTest<K, V> {\n \n--- a/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueueTest.java\n+++ b/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueueTest.java\n /**\n  * Test cases for CircularFifoQueue.\n  *\n+ * @since 4.0\n  * @version $Id$\n  */\n public class CircularFifoQueueTest<E> extends AbstractCollectionTest<E> {\n--- a/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java\n+++ b/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java\n import org.junit.Assert;\n import org.junit.Test;\n \n+/**\n+ * JUnit tests.\n+ *\n+ * FIXME: add serialization support\n+ *\n+ * @since 4.0\n+ * @version $Id$\n+ */\n public class PatriciaTrieTest {\n     \n     @Test", "timestamp": 1366230598, "metainfo": ""}