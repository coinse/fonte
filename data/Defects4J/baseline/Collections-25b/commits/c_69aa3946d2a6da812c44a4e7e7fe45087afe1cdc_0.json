{"sha": "69aa3946d2a6da812c44a4e7e7fe45087afe1cdc", "log": "Remove redundant super-interfaces, already defined by super-types.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/bag/CollectionBag.java\n+++ b/src/main/java/org/apache/commons/collections4/bag/CollectionBag.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n \n  * @since 4.0\n  * @version $Id$\n  */\n-public final class CollectionBag<E>\n-        extends AbstractBagDecorator<E> implements Serializable {\n+public final class CollectionBag<E> extends AbstractBagDecorator<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -2560033712679053143L;\n--- a/src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n \n  * @since 4.0\n  * @version $Id$\n  */\n-public final class CollectionSortedBag<E>\n-        extends AbstractSortedBagDecorator<E> implements Serializable {\n+public final class CollectionSortedBag<E> extends AbstractSortedBagDecorator<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -2560033712679053143L;\n--- a/src/main/java/org/apache/commons/collections4/bag/HashBag.java\n+++ b/src/main/java/org/apache/commons/collections4/bag/HashBag.java\n  * @since 3.0 (previously in main package v2.0)\n  * @version $Id$\n  */\n-public class HashBag<E> extends AbstractMapBag<E> implements Bag<E>, Serializable {\n+public class HashBag<E> extends AbstractMapBag<E> implements Serializable {\n \n     /** Serial version lock */\n     private static final long serialVersionUID = -6561115435802554013L;\n--- a/src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java\n+++ b/src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.Set;\n \n-import org.apache.commons.collections4.set.UnmodifiableSet;\n import org.apache.commons.collections4.Bag;\n import org.apache.commons.collections4.Unmodifiable;\n import org.apache.commons.collections4.iterators.UnmodifiableIterator;\n+import org.apache.commons.collections4.set.UnmodifiableSet;\n \n /**\n  * Decorates another {@link Bag} to ensure it can't be altered.\n  * @version $Id$\n  */\n public final class UnmodifiableBag<E>\n-        extends AbstractBagDecorator<E> implements Unmodifiable, Serializable {\n+        extends AbstractBagDecorator<E> implements Unmodifiable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -1873799975157099624L;\n--- a/src/main/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.Set;\n \n-import org.apache.commons.collections4.set.UnmodifiableSet;\n import org.apache.commons.collections4.SortedBag;\n import org.apache.commons.collections4.Unmodifiable;\n import org.apache.commons.collections4.iterators.UnmodifiableIterator;\n+import org.apache.commons.collections4.set.UnmodifiableSet;\n \n /**\n  * Decorates another {@link SortedBag} to ensure it can't be altered.\n  * @version $Id$\n  */\n public final class UnmodifiableSortedBag<E>\n-        extends AbstractSortedBagDecorator<E> implements Unmodifiable, Serializable {\n+        extends AbstractSortedBagDecorator<E> implements Unmodifiable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -3190437252665717841L;\n--- a/src/main/java/org/apache/commons/collections4/functors/AbstractQuantifierPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/AbstractQuantifierPredicate.java\n  * @since 4.0\n  * @version $Id$\n  */\n-public abstract class AbstractQuantifierPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public abstract class AbstractQuantifierPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -3094696765038308799L;\n--- a/src/main/java/org/apache/commons/collections4/functors/AllPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/AllPredicate.java\n import static org.apache.commons.collections4.functors.FunctorUtils.validate;\n import static org.apache.commons.collections4.functors.TruePredicate.truePredicate;\n \n-import java.io.Serializable;\n import java.util.Collection;\n \n import org.apache.commons.collections4.Predicate;\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class AllPredicate<T> extends AbstractQuantifierPredicate<T> implements Serializable {\n+public final class AllPredicate<T> extends AbstractQuantifierPredicate<T> {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -3094696765038308799L;\n--- a/src/main/java/org/apache/commons/collections4/functors/AndPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/AndPredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class AndPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class AndPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = 4189014213763186912L;\n--- a/src/main/java/org/apache/commons/collections4/functors/AnyPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/AnyPredicate.java\n  */\n package org.apache.commons.collections4.functors;\n \n-import java.io.Serializable;\n import java.util.Collection;\n \n import org.apache.commons.collections4.Predicate;\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class AnyPredicate<T> extends AbstractQuantifierPredicate<T> implements Serializable {\n+public final class AnyPredicate<T> extends AbstractQuantifierPredicate<T> {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = 7429999530934647542L;\n--- a/src/main/java/org/apache/commons/collections4/functors/NonePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NonePredicate.java\n  */\n package org.apache.commons.collections4.functors;\n \n-import java.io.Serializable;\n import java.util.Collection;\n \n import org.apache.commons.collections4.Predicate;\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class NonePredicate<T> extends AbstractQuantifierPredicate<T> implements Serializable {\n+public final class NonePredicate<T> extends AbstractQuantifierPredicate<T> {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = 2007613066565892961L;\n--- a/src/main/java/org/apache/commons/collections4/functors/NotPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NotPredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class NotPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class NotPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -2654603322338049674L;\n--- a/src/main/java/org/apache/commons/collections4/functors/NullIsExceptionPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NullIsExceptionPredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class NullIsExceptionPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class NullIsExceptionPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = 3243449850504576071L;\n--- a/src/main/java/org/apache/commons/collections4/functors/NullIsFalsePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NullIsFalsePredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class NullIsFalsePredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class NullIsFalsePredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -2997501534564735525L;\n--- a/src/main/java/org/apache/commons/collections4/functors/NullIsTruePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/NullIsTruePredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class NullIsTruePredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class NullIsTruePredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -7625133768987126273L;\n--- a/src/main/java/org/apache/commons/collections4/functors/OnePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/OnePredicate.java\n  */\n package org.apache.commons.collections4.functors;\n \n-import java.io.Serializable;\n import java.util.Collection;\n \n import org.apache.commons.collections4.Predicate;\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class OnePredicate<T> extends AbstractQuantifierPredicate<T> implements Serializable {\n+public final class OnePredicate<T> extends AbstractQuantifierPredicate<T> {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -8125389089924745785L;\n--- a/src/main/java/org/apache/commons/collections4/functors/OrPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/OrPredicate.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public final class OrPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class OrPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -8791518325735182855L;\n--- a/src/main/java/org/apache/commons/collections4/functors/TransformedPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/TransformedPredicate.java\n  * @since 3.1\n  * @version $Id$\n  */\n-public final class TransformedPredicate<T> implements Predicate<T>, PredicateDecorator<T>, Serializable {\n+public final class TransformedPredicate<T> implements PredicateDecorator<T>, Serializable {\n \n     /** Serial version UID */\n     private static final long serialVersionUID = -5596090919668315834L;\n--- a/src/main/java/org/apache/commons/collections4/iterators/ArrayListIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/ArrayListIterator.java\n  * @version $Id$\n  */\n public class ArrayListIterator<E> extends ArrayIterator<E>\n-        implements ListIterator<E>, ResettableListIterator<E> {\n+        implements ResettableListIterator<E> {\n \n     /**\n      * Holds the index of the last item returned by a call to <code>next()</code>\n--- a/src/main/java/org/apache/commons/collections4/iterators/ObjectArrayIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/ObjectArrayIterator.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class ObjectArrayIterator<E>\n-        implements Iterator<E>, ResettableIterator<E> {\n+public class ObjectArrayIterator<E> implements ResettableIterator<E> {\n \n     /** The array */\n     final E[] array;\n--- a/src/main/java/org/apache/commons/collections4/iterators/ObjectArrayListIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/ObjectArrayListIterator.java\n  * @version $Id$\n  */\n public class ObjectArrayListIterator<E> extends ObjectArrayIterator<E>\n-        implements ListIterator<E>, ResettableListIterator<E> {\n+        implements ResettableListIterator<E> {\n \n     /**\n      * Holds the index of the last item returned by a call to <code>next()</code>\n--- a/src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java\n  * @version $Id$\n  */\n public class SingletonIterator<E>\n-        implements Iterator<E>, ResettableIterator<E> {\n+        implements ResettableIterator<E> {\n \n     /** Whether remove is allowed */\n     private final boolean removeAllowed;\n--- a/src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java\n  * @since 2.1\n  * @version $Id$\n  */\n-public class SingletonListIterator<E> implements ListIterator<E>, ResettableListIterator<E> {\n+public class SingletonListIterator<E> implements ResettableListIterator<E> {\n \n     private boolean beforeFirst = true;\n     private boolean nextCalled = false;\n--- a/src/main/java/org/apache/commons/collections4/list/AbstractSerializableListDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/list/AbstractSerializableListDecorator.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n \n  * @version $Id$\n  */\n public abstract class AbstractSerializableListDecorator<E>\n-        extends AbstractListDecorator<E>\n-        implements Serializable {\n+        extends AbstractListDecorator<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 2684959196747496299L;\n--- a/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/FixedSizeMap.java\n  */\n public class FixedSizeMap<K, V>\n         extends AbstractMapDecorator<K, V>\n-        implements Map<K, V>, BoundedMap<K, V>, Serializable {\n+        implements BoundedMap<K, V>, Serializable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 7450927208116179316L;\n--- a/src/main/java/org/apache/commons/collections4/map/FixedSizeSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/FixedSizeSortedMap.java\n  */\n public class FixedSizeSortedMap<K, V>\n         extends AbstractSortedMapDecorator<K, V>\n-        implements SortedMap<K, V>, BoundedMap<K, V>, Serializable {\n+        implements BoundedMap<K, V>, Serializable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 3126019624511683653L;\n--- a/src/main/java/org/apache/commons/collections4/map/LazyMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/LazyMap.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class LazyMap<K, V> extends AbstractMapDecorator<K, V> implements Map<K, V>, Serializable {\n+public class LazyMap<K, V> extends AbstractMapDecorator<K, V> implements Serializable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 7990956402564206740L;\n--- a/src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java\n import java.io.Serializable;\n import java.util.Map;\n \n-import org.apache.commons.collections4.IterableMap;\n import org.apache.commons.collections4.MapIterator;\n import org.apache.commons.collections4.keyvalue.MultiKey;\n \n  * @version $Id$\n  */\n public class MultiKeyMap<K, V> extends AbstractMapDecorator<MultiKey<? extends K>, V>\n-        implements IterableMap<MultiKey<? extends K>, V>, Serializable, Cloneable {\n+        implements Serializable, Cloneable {\n \n     /** Serialisation version */\n     private static final long serialVersionUID = -1788199231038721040L;\n--- a/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java\n  */\n public final class UnmodifiableMap<K, V>\n         extends AbstractMapDecorator<K, V>\n-        implements IterableMap<K, V>, Unmodifiable, Serializable {\n+        implements Unmodifiable, Serializable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 2737023427269031941L;\n--- a/src/main/java/org/apache/commons/collections4/queue/UnmodifiableQueue.java\n+++ b/src/main/java/org/apache/commons/collections4/queue/UnmodifiableQueue.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.Queue;\n  */\n public final class UnmodifiableQueue<E>\n         extends AbstractQueueDecorator<E>\n-        implements Unmodifiable, Serializable {\n+        implements Unmodifiable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 1832948656215393357L;\n--- a/src/main/java/org/apache/commons/collections4/set/AbstractSerializableSetDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/set/AbstractSerializableSetDecorator.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Set;\n \n  * @version $Id$\n  */\n public abstract class AbstractSerializableSetDecorator<E>\n-        extends AbstractSetDecorator<E>\n-        implements Serializable {\n+        extends AbstractSetDecorator<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 1229469966212206107L;\n--- a/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java\n  * @version $Id$\n  */\n public class ListOrderedSet<E>\n-    extends AbstractSerializableSetDecorator<E>\n-    implements Set<E> {\n+    extends AbstractSerializableSetDecorator<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -228664372470420141L;\n--- a/src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.SortedSet;\n  */\n public final class UnmodifiableSortedSet<E>\n         extends AbstractSortedSetDecorator<E>\n-        implements Unmodifiable, Serializable {\n+        implements Unmodifiable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -725356885467962424L;\n--- a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java\n+++ b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java\n  * @since 4.0\n  * @version $Id$\n  */\n-abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> implements Trie<K, V> {\n+abstract class AbstractPatriciaTrie<K, V> extends AbstractBitwiseTrie<K, V> {\n \n     private static final long serialVersionUID = 5155253417231339498L;\n \n--- a/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie.java\n+++ b/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie.java\n  * @since 4.0\n  * @version $Id$\n  */\n-public class PatriciaTrie<E> extends AbstractPatriciaTrie<String, E> implements Trie<String, E> {\n+public class PatriciaTrie<E> extends AbstractPatriciaTrie<String, E> {\n \n     private static final long serialVersionUID = 4446367780901817838L;\n ", "timestamp": 1384809692, "metainfo": ""}