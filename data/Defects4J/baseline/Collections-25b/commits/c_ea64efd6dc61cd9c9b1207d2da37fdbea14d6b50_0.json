{"sha": "ea64efd6dc61cd9c9b1207d2da37fdbea14d6b50", "log": "Patched ArrayIterator so that it can work with any type of array, not just Object[] instances   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/ArrayIterator.java\n  */\n package org.apache.commons.collections;\n \n+import java.lang.reflect.Array;\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author Mauricio S. Moura\n   * @\n-  * @version $Revision: 1.3 $\n+  * @version $Revision: 1.4 $\n   */\n public class ArrayIterator implements Iterator {\n     \n-    private Object[] array;\n+    private Object array;\n     private int index = 0;\n   \n     \n     public ArrayIterator() {\n     }\n     \n-    public ArrayIterator(Object[] array) {\n+    public ArrayIterator(Object array) {\n         this.array = array;\n     }\n \n     // Iterator interface\n     //-------------------------------------------------------------------------\n     public boolean hasNext() {\n-        return  (index < array.length);\n+        return  index < Array.getLength( array );\n     }\n \n     public Object next() {\n         if(!hasNext()) {\n             throw new NoSuchElementException();\n         }\n-        return array[ index++ ];\n+        return Array.get( array, index++ );\n     }\n \n     public void remove() {\n \n     // Properties\n     //-------------------------------------------------------------------------\n-    public Object[] getArray() {\n+    public Object getArray() {\n         return array;\n     }\n     \n-    public void setArray( Object[] array ) {\n+    public void setArray( Object array ) {\n         this.array = array;\n         this.index = -1;\n     }", "timestamp": 998557526, "metainfo": ""}