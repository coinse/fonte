{"sha": "fbe5ab65e595ba03f3295f41b673d570ec43ad36", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n  * order that they arrive.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  * @author Janek Bogucki\n      * Factory method to create a blocking buffer.\n      * \n      * @param buffer  the buffer to decorate, must not be null\n+     * @return a new blocking Buffer\n      * @throws IllegalArgumentException if buffer is null\n      */\n     public static Buffer decorate(Buffer buffer) {\n--- a/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n  * is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n      * \n      * @param buffer  the buffer to decorate, must not be null\n      * @param predicate  the predicate to use for validation, must not be null\n+     * @return a new predicated Buffer\n      * @throws IllegalArgumentException if buffer or predicate is null\n      * @throws IllegalArgumentException if the buffer contains invalid elements\n      */\n--- a/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n  * </pre>\n  *\n  * @since Commons Collections 3.0 (previously BinaryHeap v1.0)\n- * @version $Revision: 1.4 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Peter Donald\n  * @author Ram Chidambaram\n      * The element added will be sorted according to the comparator in use.\n      *\n      * @param element  the element to be added\n+     * @return true always\n      */\n     public boolean add(Object element) {\n         if (isAtCapacity()) {\n--- a/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n  * Methods are synchronized, then forwarded to the decorated buffer.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  */\n      * Factory method to create a synchronized buffer.\n      * \n      * @param buffer  the buffer to decorate, must not be null\n+     * @return a new synchronized Buffer\n      * @throws IllegalArgumentException if buffer is null\n      */\n     public static Buffer decorate(Buffer buffer) {\n--- a/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n  * use the Integer form to remove objects.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  */\n      * \n      * @param buffer  the buffer to decorate, must not be null\n      * @param transformer  the transformer to use for conversion, must not be null\n+     * @return a new transformed Buffer\n      * @throws IllegalArgumentException if buffer or transformer is null\n      */\n     public static Buffer decorate(Buffer buffer, Transformer transformer) {\n--- a/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2004/05/07 23:28:38 $\n+ * @version $Revision: 1.5 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n      * \n      * @param buffer  the buffer to decorate, must not be null\n      * @param type  the type to allow into the buffer, must not be null\n+     * @return a new typed Buffer\n      * @throws IllegalArgumentException if buffer or type is null\n      * @throws IllegalArgumentException if the buffer contains invalid elements\n      */\n      * Restrictive constructor.\n      */\n     protected TypedBuffer() {\n+        super();\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n  * This buffer prevents null objects from being added.\n  * \n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.8 $ $Date: 2004/05/15 12:33:23 $\n  *\n  * @author Avalon\n  * @author Federico Barbieri\n  */\n public class UnboundedFifoBuffer extends AbstractCollection implements Buffer {\n     \n+    /** The array of objects in the buffer. */\n     protected Object[] buffer;\n+    /** The current head index. */\n     protected int head;\n+    /** The current tail index. */\n     protected int tail;\n \n     /**\n--- a/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n  * Decorates another <code>Buffer</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/02/18 00:58:18 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/15 12:33:23 $\n  * \n  * @author Stephen Colebourne\n  */\n \n     /**\n      * Factory method to create an unmodifiable buffer.\n+     * <p>\n+     * If the buffer passed in is already unmodifiable, it is returned.\n      * \n      * @param buffer  the buffer to decorate, must not be null\n+     * @return an unmodifiable Buffer\n      * @throws IllegalArgumentException if buffer is null\n      */\n     public static Buffer decorate(Buffer buffer) {", "timestamp": 1084624403, "metainfo": ""}