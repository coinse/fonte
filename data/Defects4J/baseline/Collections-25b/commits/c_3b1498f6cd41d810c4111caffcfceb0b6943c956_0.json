{"sha": "3b1498f6cd41d810c4111caffcfceb0b6943c956", "log": "Added new convenience method to MapUtils: #unmodifiableMapCopy   ", "commit": "\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n  *  </ul>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.49 $ $Date: 2004/09/22 23:09:54 $\n+ * @version $Revision: 1.50 $ $Date: 2004/12/11 06:26:13 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n  * @author Janek Bogucki\n  * @author Max Rydahl Andersen\n  * @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n+ * @author Neil O'Toole\n  */\n public class MapUtils {\n     \n      * @throws NullPointerException  if map is null\n      * @throws IllegalArgumentException  if sub-array or entry matching used and an\n      *  entry is invalid\n-     * @throws ClassCaseException if the array contents is mixed\n+     * @throws ClassCastException if the array contents is mixed\n      * @since Commons Collections 3.2\n      */\n     public static Map putAll(Map map, Object[] array) {\n     public static Map unmodifiableMap(Map map) {\n         return UnmodifiableMap.decorate(map);\n     }\n+    \n+\t/**\n+\t * Returns an unmodifiable copy of the map.\n+     * @param map  the map to make an unmodifiable copy of, must not be null\n+     * @return an unmodifiable map backed by the given map\n+     * @throws IllegalArgumentException  if the map is null\n+\t */\n+\tpublic static Map unmodifiableMapCopy(final Map map) {\n+\t\tif (map == null) throw new IllegalArgumentException(\"null not permitted.\");\n+\t\t\n+\t\tfinal Map copy = new HashMap(map.size(), 1.0f);\n+\t\tcopy.putAll(map);\n+\t\treturn MapUtils.unmodifiableMap(copy);\n+\t}\n \n     /**\n      * Returns a predicated (validating) map backed by the given map.\n--- a/src/test/org/apache/commons/collections/TestMapUtils.java\n+++ b/src/test/org/apache/commons/collections/TestMapUtils.java\n /**\n  * Tests for MapUtils.\n  * \n- * @version $Revision: 1.24 $ $Date: 2004/09/22 23:03:50 $\n+ * @version $Revision: 1.25 $ $Date: 2004/12/11 06:26:13 $\n  * \n  * @author Stephen Colebourne\n  * @author Arun Mammen Thomas\n  * @author Max Rydahl Andersen\n  * @author Janek Bogucki\n+ * @author Neil O'Toole\n  */\n public class TestMapUtils extends BulkTest {\n \n         assertEquals(EXPECTED_OUT, out.toString());\n     }\n     \n+\tpublic void testUnmodifiableMapCopy() {\n+\t\tMap map = new HashMap();\n+\t\tmap.put(\"key\", \"value\");\n+\n+\t\tMap copy = MapUtils.unmodifiableMapCopy(map);\n+\t\tassertTrue(copy instanceof Unmodifiable);\n+\t\tassertEquals(map, copy);\n+\t\tmap.clear();\n+\t\tassertFalse(map.equals(copy));\n+\n+\t\ttry\n+\t\t{\n+\t\t\tcopy.clear();\n+\t\t\tfail(\"should be unmodifiable.\");\n+\t\t}\n+\t\tcatch (UnsupportedOperationException uoe)\n+\t\t{\n+\t\t\t// this is what we want\n+\t\t}\n+\t\t\n+\t\ttry\n+\t\t{\n+\t\t\tmap = MapUtils.unmodifiableMapCopy(null);\n+\t\t\tfail(\"expecting IllegalArgumentException\");\n+\t\t}\n+\t\tcatch (IllegalArgumentException iae)\n+\t\t{\n+\t\t\t// this is what we want\n+\t\t}\n+\n+\t}\n+    \n }", "timestamp": 1102746373, "metainfo": ""}