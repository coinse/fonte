{"sha": "936ba654ac3f91d11fea7b309dd2c4068e404815", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r471192 | scolebourne | 2006-11-04 06:04:46 -0800 (Sat, 04 Nov 2006) | 1 line          Remove getList() - use decorated()     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/list/FixedSizeList.java\n+++ b/src/java/org/apache/commons/collections/list/FixedSizeList.java\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeList\n-        extends AbstractSerializableListDecorator\n-        implements BoundedCollection {\n+public class FixedSizeList<E>\n+        extends AbstractSerializableListDecorator<E>\n+        implements BoundedCollection<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -2218010673611160319L;\n      * @param list  the list to decorate, must not be null\n      * @throws IllegalArgumentException if list is null\n      */\n-    public static List decorate(List list) {\n-        return new FixedSizeList(list);\n+    public static <E> List<E> decorate(List<E> list) {\n+        return new FixedSizeList<E>(list);\n     }\n \n     //-----------------------------------------------------------------------\n      * @param list  the list to decorate, must not be null\n      * @throws IllegalArgumentException if list is null\n      */\n-    protected FixedSizeList(List list) {\n+    protected FixedSizeList(List<E> list) {\n         super(list);\n     }\n \n     //-----------------------------------------------------------------------\n-    public boolean add(Object object) {\n+    public boolean add(E object) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public void add(int index, Object object) {\n+    public void add(int index, E object) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public boolean addAll(Collection coll) {\n+    public boolean addAll(Collection<? extends E> coll) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public boolean addAll(int index, Collection coll) {\n+    public boolean addAll(int index, Collection<? extends E> coll) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public Object get(int index) {\n-        return getList().get(index);\n+    public E get(int index) {\n+        return decorated().get(index);\n     }\n \n     public int indexOf(Object object) {\n-        return getList().indexOf(object);\n+        return decorated().indexOf(object);\n     }\n \n-    public Iterator iterator() {\n-        return UnmodifiableIterator.decorate(getCollection().iterator());\n+    public Iterator<E> iterator() {\n+        return UnmodifiableIterator.decorate(decorated().iterator());\n     }\n \n     public int lastIndexOf(Object object) {\n-        return getList().lastIndexOf(object);\n+        return decorated().lastIndexOf(object);\n     }\n \n-    public ListIterator listIterator() {\n-        return new FixedSizeListIterator(getList().listIterator(0));\n+    public ListIterator<E> listIterator() {\n+        return new FixedSizeListIterator(decorated().listIterator(0));\n     }\n \n-    public ListIterator listIterator(int index) {\n-        return new FixedSizeListIterator(getList().listIterator(index));\n+    public ListIterator<E> listIterator(int index) {\n+        return new FixedSizeListIterator(decorated().listIterator(index));\n     }\n \n-    public Object remove(int index) {\n+    public E remove(int index) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public boolean removeAll(Collection coll) {\n+    public boolean removeAll(Collection<?> coll) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public boolean retainAll(Collection coll) {\n+    public boolean retainAll(Collection<?> coll) {\n         throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    public Object set(int index, Object object) {\n-        return getList().set(index, object);\n+    public E set(int index, E object) {\n+        return decorated().set(index, object);\n     }\n \n-    public List subList(int fromIndex, int toIndex) {\n-        List sub = getList().subList(fromIndex, toIndex);\n-        return new FixedSizeList(sub);\n+    public List<E> subList(int fromIndex, int toIndex) {\n+        List<E> sub = decorated().subList(fromIndex, toIndex);\n+        return new FixedSizeList<E>(sub);\n     }\n \n     /**\n      * List iterator that only permits changes via set()\n      */\n-    static class FixedSizeListIterator extends AbstractListIteratorDecorator {\n-        protected FixedSizeListIterator(ListIterator iterator) {\n+    private class FixedSizeListIterator extends AbstractListIteratorDecorator<E> {\n+        protected FixedSizeListIterator(ListIterator<E> iterator) {\n             super(iterator);\n         }\n         public void remove() {", "timestamp": 1252994342, "metainfo": ""}