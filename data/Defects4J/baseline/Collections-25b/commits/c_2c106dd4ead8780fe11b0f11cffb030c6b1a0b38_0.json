{"sha": "2c106dd4ead8780fe11b0f11cffb030c6b1a0b38", "log": "Fixed a javadoc error, improved efficiency and added tests for CollectionUtils.isProperSubCollection   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.35 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.36 2003/09/05 02:16:33 psteitz Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * A set of {@link Collection} related utility methods.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.35 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.36 $ $Date: 2003/09/05 02:16:33 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n      * for each element <i>e</i> in <i>a</i>, and there is at least one\n      * element <i>f</i> such that the cardinality of <i>f</i> in <i>b</i>\n      * is strictly greater than the cardinality of <i>f</i> in <i>a</i>.\n+     * <p>\n+     * The implementation assumes\n+     * <ul>\n+     *    <li><code>a.size()</code> and <code>b.size()</code> represent the \n+     *    total cardinality of <i>a</i> and <i>b</i>, resp. </li>\n+     *    <li><code>a.size() < Integer.MAXVALUE</code></li>\n+     * </ul></p>\n      *\n      * @see #isSubCollection\n      * @see Collection#containsAll\n      */\n     public static boolean isProperSubCollection(final Collection a, final Collection b) {\n-        // XXX optimize me!\n-        return CollectionUtils.isSubCollection(a,b) && (!(CollectionUtils.isEqualCollection(a,b)));\n+        return (a.size() < b.size()) && CollectionUtils.isSubCollection(a,b);\n     }\n \n     /**\n      * </ul>\n      * \n      * @param obj  the object to get an index of\n-     * @param index  the index to get\n+     * @param idx  the index to get\n      * @throws IndexOutOfBoundsException\n      * @throws NoSuchElementException\n      */\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n /*\n- * $Id: TestCollectionUtils.java,v 1.17 2003/08/31 17:28:43 scolebourne Exp $\n- * $Revision: 1.17 $\n- * $Date: 2003/08/31 17:28:43 $\n+ * $Id: TestCollectionUtils.java,v 1.18 2003/09/05 02:16:33 psteitz Exp $\n+ * $Revision: 1.18 $\n+ * $Date: 2003/09/05 02:16:33 $\n  *\n  * ====================================================================\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  * \n- * @version $Revision: 1.17 $ $Date: 2003/08/31 17:28:43 $\n+ * @version $Revision: 1.18 $ $Date: 2003/09/05 02:16:33 $\n  */\n public class TestCollectionUtils extends TestCase {\n     public TestCollectionUtils(String testName) {\n         assertTrue(CollectionUtils.isEqualCollection(a,b));\n         assertTrue(CollectionUtils.isEqualCollection(b,a));\n     }\n+    \n+    public void testIsProperSubCollection() {\n+        Collection a = new ArrayList();\n+        Collection b = new ArrayList();\n+        assertTrue(!CollectionUtils.isProperSubCollection(a,b));\n+        b.add(\"1\");\n+        assertTrue(CollectionUtils.isProperSubCollection(a,b));\n+        assertTrue(!CollectionUtils.isProperSubCollection(b,a));\n+        assertTrue(!CollectionUtils.isProperSubCollection(b,b));\n+        assertTrue(!CollectionUtils.isProperSubCollection(a,a));\n+        a.add(\"1\");\n+        a.add(\"2\");\n+        b.add(\"2\");\n+        assertTrue(!CollectionUtils.isProperSubCollection(b,a));\n+        assertTrue(!CollectionUtils.isProperSubCollection(a,b));\n+        a.add(\"1\");\n+        assertTrue(CollectionUtils.isProperSubCollection(b,a));\n+        assertTrue(CollectionUtils.isProperSubCollection(\n+            CollectionUtils.intersection(_a, _b), _a));\n+        assertTrue(CollectionUtils.isProperSubCollection(\n+            CollectionUtils.subtract(a, b), a));\n+        assertTrue(!CollectionUtils.isProperSubCollection(\n+            a, CollectionUtils.subtract(a, b)));\n+    }\n \n \n     public void testIndex() {", "timestamp": 1062728193, "metainfo": ""}