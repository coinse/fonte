{"sha": "e97b1bbb02ad54da0a34528929bbc201246cce08", "log": "Remove $Date$ SVN variable  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/main/java/org/apache/commons/collections/ArrayStack.java\n  *\n  * @see java.util.Stack\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Craig R. McClanahan\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/Bag.java\n+++ b/src/main/java/org/apache/commons/collections/Bag.java\n  *\n  * @param <E> the type held in the bag\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/BagUtils.java\n+++ b/src/main/java/org/apache/commons/collections/BagUtils.java\n  * instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date: 2007-07-13 05:39:24 -0500 (Fri, 13 Jul\n+ * @version $Revision$\n  * 2007) $\n  *\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/BidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/BidiMap.java\n  * @param <V> the type of the values in the map\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/BoundedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/BoundedCollection.java\n  * @see CollectionUtils#maxSize\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Herve Quiroz\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/BoundedMap.java\n+++ b/src/main/java/org/apache/commons/collections/BoundedMap.java\n  * associated with the maximum number of elements.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/Buffer.java\n+++ b/src/main/java/org/apache/commons/collections/Buffer.java\n  *\n  * @param <E> the type of the elements in the buffer\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/main/java/org/apache/commons/collections/BufferOverflowException.java\n+++ b/src/main/java/org/apache/commons/collections/BufferOverflowException.java\n  * exceeded.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Avalon\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n--- a/src/main/java/org/apache/commons/collections/BufferUnderflowException.java\n+++ b/src/main/java/org/apache/commons/collections/BufferUnderflowException.java\n  * NOTE: From version 3.0, this exception extends NoSuchElementException.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/main/java/org/apache/commons/collections/BufferUtils.java\n+++ b/src/main/java/org/apache/commons/collections/BufferUtils.java\n  * Provides utility methods and decorators for {@link Buffer} instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/Closure.java\n+++ b/src/main/java/org/apache/commons/collections/Closure.java\n  *\n  * @param <T> the type that the closure acts on\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Nicola Ken Barozzi\n--- a/src/main/java/org/apache/commons/collections/ClosureUtils.java\n+++ b/src/main/java/org/apache/commons/collections/ClosureUtils.java\n  * All the supplied closures are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/main/java/org/apache/commons/collections/CollectionUtils.java\n  * Method parameters will take {@link Iterable} objects when possible.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/ComparatorUtils.java\n+++ b/src/main/java/org/apache/commons/collections/ComparatorUtils.java\n  * in the <code>comparators</code> subpackage.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/main/java/org/apache/commons/collections/ExtendedProperties.java\n  * it, go ahead and tune it up!\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n  * @author <a href=\"mailto:jon@latchkey.com\">Jon S. Stevens</a>\n--- a/src/main/java/org/apache/commons/collections/Factory.java\n+++ b/src/main/java/org/apache/commons/collections/Factory.java\n  * @param <T> the type that the factory creates\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Arron Bates\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/FactoryUtils.java\n+++ b/src/main/java/org/apache/commons/collections/FactoryUtils.java\n  * All the supplied factories are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/FunctorException.java\n+++ b/src/main/java/org/apache/commons/collections/FunctorException.java\n  * If required, a root cause error can be wrapped within this one.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/Get.java\n+++ b/src/main/java/org/apache/commons/collections/Get.java\n  * The \"read\" subset of the {@link Map} interface.\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @see Put\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/IterableGet.java\n+++ b/src/main/java/org/apache/commons/collections/IterableGet.java\n  * The \"read\" subset of the {@link Map} interface.\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @see Put\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/IterableMap.java\n+++ b/src/main/java/org/apache/commons/collections/IterableMap.java\n  * @param <V> the type of the values in the map\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/IterableSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/IterableSortedMap.java\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/main/java/org/apache/commons/collections/IteratorUtils.java\n  * against versions 2.1.1 and 3.1.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n--- a/src/main/java/org/apache/commons/collections/KeyValue.java\n+++ b/src/main/java/org/apache/commons/collections/KeyValue.java\n  * @param <K> the type of the key\n  * @param <V> the type of the value\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/main/java/org/apache/commons/collections/ListUtils.java\n  * Provides utility methods and decorators for {@link List} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Federico Barbieri\n  * @author Peter Donald\n--- a/src/main/java/org/apache/commons/collections/MapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/MapIterator.java\n  * @param <K> the type of the keys in the map\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/main/java/org/apache/commons/collections/MapUtils.java\n  *  </ul>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n--- a/src/main/java/org/apache/commons/collections/MultiMap.java\n+++ b/src/main/java/org/apache/commons/collections/MultiMap.java\n  * as they were defined in the superinterface <code>Map</code> anyway.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Christopher Berry\n  * @author James Strachan\n--- a/src/main/java/org/apache/commons/collections/OrderedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/OrderedBidiMap.java\n  * @param <V> the type of the values in the map\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/OrderedIterator.java\n+++ b/src/main/java/org/apache/commons/collections/OrderedIterator.java\n  *\n  * @param <E> the type to iterate over\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/OrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections/OrderedMap.java\n  * @param <V> the type of the values in the map\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/OrderedMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/OrderedMapIterator.java\n  * @param <K> the type of the keys in the map\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/Predicate.java\n+++ b/src/main/java/org/apache/commons/collections/Predicate.java\n  * @param <T> the type that the predicate queries\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/PredicateUtils.java\n+++ b/src/main/java/org/apache/commons/collections/PredicateUtils.java\n  * All the supplied predicates are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Ola Berg\n--- a/src/main/java/org/apache/commons/collections/Put.java\n+++ b/src/main/java/org/apache/commons/collections/Put.java\n  * The \"write\" subset of the {@link Map} interface.\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @see Get\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/ResettableIterator.java\n+++ b/src/main/java/org/apache/commons/collections/ResettableIterator.java\n  *\n  * @param <E> the type to iterate over\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/ResettableListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/ResettableListIterator.java\n  *\n  * @param <E> the type to iterate over\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/main/java/org/apache/commons/collections/SetUtils.java\n  * {@link Set} and {@link SortedSet} instances.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/SortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/SortedBag.java\n  *\n  * @param <E> the type to iterate over\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/main/java/org/apache/commons/collections/SortedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/SortedBidiMap.java\n  * @param <K> the type of the keys in the map\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/Transformer.java\n+++ b/src/main/java/org/apache/commons/collections/Transformer.java\n  * @param <O> the output type from the transformer\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/TransformerUtils.java\n+++ b/src/main/java/org/apache/commons/collections/TransformerUtils.java\n  * All the supplied transformers are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author James Carman\n--- a/src/main/java/org/apache/commons/collections/Unmodifiable.java\n+++ b/src/main/java/org/apache/commons/collections/Unmodifiable.java\n  * then the interface won't be there.\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n  * number of occurrences of that element in the bag.\n  *\n  * @since Commons Collections 3.0 (previously DefaultMapBag v2.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  * @author Michael A. Smith\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n  * Methods are forwarded directly to the decorated bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/HashBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/HashBag.java\n  * <code>Collection</code> interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/PredicatedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/bag/SynchronizedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/SynchronizedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/TransformedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TransformedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TreeBag.java\n  * interface specification.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n  * UnsupportedOperationException on attempts to call that method.\n  *\n  * @since Commons Collections 3.0 (previously DoubleOrderedMap v2.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Marc Johnson\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n  *\n  * @param <E> the type of the elements in the buffer\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/BlockingBuffer.java\n  * @author Phil Steitz\n  * @author James Carman\n  * @param <E> the type of the elements in the buffer\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @since Commons Collections 3.0\n  */\n public class BlockingBuffer<E> extends SynchronizedBuffer<E> {\n--- a/src/main/java/org/apache/commons/collections/buffer/BoundedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/BoundedBuffer.java\n  *\n  * @author James Carman\n  * @author Stephen Colebourne\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @since Commons Collections 3.2\n  */\n public class BoundedBuffer<E> extends SynchronizedBuffer<E> implements BoundedCollection<E> {\n--- a/src/main/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Avalon\n  * @author Berin Loritsch\n--- a/src/main/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stefano Fornari\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n  * This class is Serializable from Commons Collections 3.2.\n  *\n  * @since Commons Collections 3.0 (previously BinaryHeap v1.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Peter Donald\n  * @author Ram Chidambaram\n--- a/src/main/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n  *\n  * @param <E> the type of the elements in the buffer\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Avalon\n  * @author Federico Barbieri\n--- a/src/main/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator.java\n  * @param <D> the type of the elements in the decorated collection\n  * @param <E> the element type of the Collection implementation\n  * @since Commons Collections 5\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/collection/CompositeCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/CompositeCollection.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/collection/PredicatedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/PredicatedCollection.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/collection/TransformedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/TransformedCollection.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n  *\n  * @param <E> the type of the elements in the collection\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/BooleanComparator.java\n  * @see #booleanComparator(boolean)\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  */\n--- a/src/main/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/ComparableComparator.java\n  * {@link #compare(Object, Object) compare} for details.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @see java.util.Collections#reverseOrder()\n  */\n--- a/src/main/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/ComparatorChain.java\n  *\n  * @since Commons Collections 2.0\n  * @author Morgan Delagrange\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n public class ComparatorChain<E> implements Comparator<E>, Serializable {\n \n--- a/src/main/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n  * multiple comparisons  after all the setup operations are complete.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author David Leppik\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/NullComparator.java\n  * other objects.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$ \n+ * @version $Revision$\n  *\n  * @author Michael A. Smith\n  */\n--- a/src/main/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/ReverseComparator.java\n  * to its {@link #compare(Object, Object) compare} method.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Michael A. Smith\n  *\n--- a/src/main/java/org/apache/commons/collections/comparators/TransformingComparator.java\n+++ b/src/main/java/org/apache/commons/collections/comparators/TransformingComparator.java\n  * {@link Comparator#compare(Object,Object) compare} method.\n  *\n  * @since Commons Collections 2.0 (?)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @see org.apache.commons.collections.Transformer\n  * @see org.apache.commons.collections.comparators.ComparableComparator\n--- a/src/main/java/org/apache/commons/collections/functors/AllPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/AllPredicate.java\n  * threw an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/AndPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/AndPredicate.java\n  * Predicate implementation that returns true if both the predicates return true.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/AnyPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/AnyPredicate.java\n  * threw an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/CatchAndRethrowClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/CatchAndRethrowClosure.java\n  * </pre>\n  * \n  * @since Commons Collections 4.0\n- * @version $Revision: $ $Date: $\n+ * @version $Revision: $\n  */\n public abstract class CatchAndRethrowClosure<E> implements Closure<E> {\n \n--- a/src/main/java/org/apache/commons/collections/functors/ChainedClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ChainedClosure.java\n  * Closure implementation that chains the specified closures together.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ChainedTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ChainedTransformer.java\n  * is passed to the second transformer and so on.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/CloneTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/CloneTransformer.java\n  * Clone is performed using <code>PrototypeFactory.getInstance(input).create()</code>.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ClosureTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ClosureTransformer.java\n  * and then returns the input.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ComparatorPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ComparatorPredicate.java\n  * return <code>true</code> if the comparator returns a value greater than <code>0</code>.\n  *\n  * @since Commons Collections 4.0\n- * @version $Revision: $ $Date: $\n+ * @version $Revision: $\n  *\n  * @author Rune Peter Bjrnstad.\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ConstantFactory.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ConstantFactory.java\n  * use the prototype factory.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ConstantTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ConstantTransformer.java\n  * use the prototype factory.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/DefaultEquator.java\n+++ b/src/main/java/org/apache/commons/collections/functors/DefaultEquator.java\n  * \n  * @param <T>\n  * @since Commons Collections 4.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n public class DefaultEquator<T> implements Equator<T> {\n \t/** Static instance */\n--- a/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java\n  * as the one stored in this predicate by equals.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/Equator.java\n+++ b/src/main/java/org/apache/commons/collections/functors/Equator.java\n  * @param <T> the types of object this {@link Equator} can evaluate.\n  * @author Stephen Kestle\n  * @since Commons Collections 4.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n public interface Equator<T> {\n     /**\n--- a/src/main/java/org/apache/commons/collections/functors/ExceptionClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ExceptionClosure.java\n  * Closure implementation that always throws an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ExceptionFactory.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ExceptionFactory.java\n  * Factory implementation that always throws an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n  * Predicate implementation that always throws an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n  * Transformer implementation that always throws an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/FactoryTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/FactoryTransformer.java\n  * Transformer implementation that calls a Factory and returns the result.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/FalsePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/FalsePredicate.java\n  * Predicate implementation that always returns false.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/ForClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/ForClosure.java\n  * Closure implementation that calls another closure n times, like a for loop.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/FunctorUtils.java\n+++ b/src/main/java/org/apache/commons/collections/functors/FunctorUtils.java\n  * Internal utilities for functors.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/IdentityPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/IdentityPredicate.java\n  * as the one stored in this predicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/IfClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/IfClosure.java\n  * based on a predicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n  * the type stored in this predicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/InstantiateFactory.java\n+++ b/src/main/java/org/apache/commons/collections/functors/InstantiateFactory.java\n  * Factory implementation that creates a new object instance by reflection.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n  * Transformer implementation that creates a new object instance by reflection.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/InvokerTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/InvokerTransformer.java\n  * Transformer implementation that creates a new object instance by reflection.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/MapTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/MapTransformer.java\n  * using the input parameter as a key.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NOPClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NOPClosure.java\n  * Closure implementation that does nothing.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NOPTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NOPTransformer.java\n  * Transformer implementation that does nothing.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NonePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NonePredicate.java\n  * threw an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/NotNullPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NotNullPredicate.java\n  * Predicate implementation that returns true if the input is not null.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NotPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NotPredicate.java\n  * Predicate implementation that returns the opposite of the decorated predicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n  * Predicate implementation that throws an exception if the input is null.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n  * Predicate implementation that returns false if the input is null.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n  * Predicate implementation that returns true if the input is null.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/NullPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/NullPredicate.java\n  * Predicate implementation that returns true if the input is null.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/OnePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/OnePredicate.java\n  * threw an exception.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/functors/OrPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/OrPredicate.java\n  * Predicate implementation that returns true if either of the predicates return true.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/PredicateDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/functors/PredicateDecorator.java\n  * This interface enables tools to access the decorated predicates.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Stephen Kestle\n--- a/src/main/java/org/apache/commons/collections/functors/PredicateTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/PredicateTransformer.java\n  * and then returns the result.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/PrototypeFactory.java\n+++ b/src/main/java/org/apache/commons/collections/functors/PrototypeFactory.java\n  * Factory implementation that creates a new instance each time based on a prototype.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/StringValueTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/StringValueTransformer.java\n  * <code>String.valueOf</code> on the input object.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/SwitchClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/SwitchClosure.java\n  * like a switch statement.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/SwitchTransformer.java\n+++ b/src/main/java/org/apache/commons/collections/functors/SwitchTransformer.java\n  * like a switch statement.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/TransformedPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/TransformedPredicate.java\n  * another <code>Predicate</code>.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @author Alban Peignier\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/TransformerClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/TransformerClosure.java\n  * and ignore the result.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/TransformerPredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/TransformerPredicate.java\n  * Predicate implementation that returns the result of a transformer.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/TruePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/TruePredicate.java\n  * Predicate implementation that always returns true.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Stephen Kestle\n--- a/src/main/java/org/apache/commons/collections/functors/UniquePredicate.java\n+++ b/src/main/java/org/apache/commons/collections/functors/UniquePredicate.java\n  * passed into the predicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/functors/WhileClosure.java\n+++ b/src/main/java/org/apache/commons/collections/functors/WhileClosure.java\n  * like a do-while or while loop.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n  * Provides an implementation of an empty iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractEmptyMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractEmptyMapIterator.java\n  * Provides an implementation of an empty map iterator.\n  *\n  * @since Commons Collections 5\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n  * All methods are forwarded to the decorated iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n  * All methods are forwarded to the decorated list iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n  * All methods are forwarded to the decorated map iterator.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator.java\n  * All methods are forwarded to the decorated iterator.\n  *\n  * @since Commons Collections 5\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/ArrayIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ArrayIterator.java\n  * the iterator back to the start if required.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/main/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java\n  * lesser of <code>A.next()</code> and <code>B.next()</code>.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/EmptyIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EmptyIterator.java\n  * 2.1.1 and 3.1 due to issues with <code>IteratorUtils</code>.\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n  * due to issues with <code>IteratorUtils</code>.\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n  * Provides an implementation of an empty map iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n  * Provides an implementation of an empty ordered iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n  * Provides an implementation of an empty ordered map iterator.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EntrySetMapIterator.java\n  * </pre>\n  *  \n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n  * to be {@link Iterator Iterator} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n--- a/src/main/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/FilterIterator.java\n  * those elements that match the specified {@link Predicate Predicate}.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Jan Sorensen\n--- a/src/main/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/FilterListIterator.java\n  * those elements that match the specified {@link Predicate Predicate}.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/IteratorChain.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/IteratorChain.java\n  * this case the class will function as an empty iterator.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date: 2006-10-27 19:52:37 -0500 (Fri, 27 Oct\n+ * @version $Revision$\n  * 2006) $\n  *\n  * @author Morgan Delagrange\n--- a/src/main/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n  * {@link Enumeration Enumeration} instance.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/IteratorIterable.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/IteratorIterable.java\n  * </p>\n  * \n  * @since Commons Collections 4.0\n- * @version $Revision: $ $Date: $\n+ * @version $Revision: $\n  */\n public class IteratorIterable<E> implements Iterable<E> {\n \n--- a/src/main/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n  * This class implements ResettableListIterator from Commons Collections 3.2.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/LoopingIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/LoopingIterator.java\n  * implementations will throw a ConcurrentModificationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author <a href=\"mailto:joncrlsn@users.sf.net\">Jonathan Carlson</a>\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n  * ConcurrentModificationException.\n  *\n  * @since Commons Collections 3.2\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Eric Crampton <ccesc@eonomine.com>\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n  * back to the start if required.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/main/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n  * more efficient (and convenient) than using nested for loops to extract a list.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/ReverseListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/ReverseListIterator.java\n  * @author Serge Knystautas\n  * @author Stephen Colebourne\n  * @since Commons Collections 3.2\n- * @version $Revision: $ $Date$\n+ * @version $Revision: $\n  */\n public class ReverseListIterator<E> implements ResettableListIterator<E> {\n \n--- a/src/main/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/SingletonIterator.java\n  * object instance.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n  * object instance.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n--- a/src/main/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/TransformIterator.java\n  * Decorates an iterator such that each element returned is transformed.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n  * and duplicate Objects are skipped.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n+++ b/src/main/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n  * and {@link java.util.Map.Entry Map.Entry} implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/main/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n  * {@link java.util.Map.Entry Map.Entry} implementations.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/main/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n  * added to a {@link java.util.Map.Entry Map.Entry}.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n  * itself as a key or value.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/main/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n  * the <code>Map.Entry</code> contract from being broken.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Michael A. Smith\n--- a/src/main/java/org/apache/commons/collections/keyvalue/MultiKey.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/MultiKey.java\n  * </pre>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Howard Lewis Ship\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n  * map, however this will probably mess up any iterators.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n+++ b/src/main/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n  * UnsupportedOperationException when <code>setValue</code> is called.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/list/AbstractLinkedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/AbstractLinkedList.java\n  * is here.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rich Dougherty\n  * @author Phil Steitz\n--- a/src/main/java/org/apache/commons/collections/list/AbstractListDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/list/AbstractListDecorator.java\n  *\n  * @param <E> the type of the elements in the list\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/list/CursorableLinkedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/CursorableLinkedList.java\n  *\n  * @see java.util.LinkedList\n  * @since Commons Collections 1.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Janek Bogucki\n--- a/src/main/java/org/apache/commons/collections/list/FixedSizeList.java\n+++ b/src/main/java/org/apache/commons/collections/list/FixedSizeList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/list/GrowthList.java\n+++ b/src/main/java/org/apache/commons/collections/list/GrowthList.java\n  *\n  * @see LazyList\n  * @since Commons Collections 3.2\n- * @version $Revision: 155406 $ $Date$\n+ * @version $Revision: 155406 $\n  *\n  * @author Stephen Colebourne\n  * @author Paul Legato\n--- a/src/main/java/org/apache/commons/collections/list/LazyList.java\n+++ b/src/main/java/org/apache/commons/collections/list/LazyList.java\n  *\n  * @see GrowthList\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Arron Bates\n--- a/src/main/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n  * <b>Note that this implementation is not synchronized.</b>\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jeff Varszegi\n  * @author Rich Dougherty\n--- a/src/main/java/org/apache/commons/collections/list/PredicatedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/PredicatedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/list/SetUniqueList.java\n+++ b/src/main/java/org/apache/commons/collections/list/SetUniqueList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/list/SynchronizedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/SynchronizedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/list/TransformedList.java\n+++ b/src/main/java/org/apache/commons/collections/list/TransformedList.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/list/TreeList.java\n+++ b/src/main/java/org/apache/commons/collections/list/TreeList.java\n  * does use slightly more memory.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Joerg Schmuecker\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/list/UnmodifiableList.java\n+++ b/src/main/java/org/apache/commons/collections/list/UnmodifiableList.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/AbstractHashedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractHashedMap.java\n  * This extends clause will be removed in v4.0.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n  * versions of Commons Collections.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/AbstractIterableMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractIterableMap.java\n  * Provide a basic {@link IterableMap} implementation.\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n  * methods exposed.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author java util LinkedHashMap\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n  * @param <K> the type of the keys in the map\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Daniel Rall\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n  *\n  * @see java.lang.ref.Reference\n  * @since Commons Collections 3.1 (extracted from ReferenceMap in 3.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n  * @param <K> the type of the keys in the map\n  * @param <V> the type of the values in the map\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Commons-Collections team\n  */\n--- a/src/main/java/org/apache/commons/collections/map/CompositeMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/CompositeMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/main/java/org/apache/commons/collections/map/DefaultedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/DefaultedMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.2\n- * @version $Revision: 1.7 $ $Date$\n+ * @version $Revision: 1.7 $\n  *\n  * @author Stephen Colebourne\n  * @author Rafael U.C. Afonso\n--- a/src/main/java/org/apache/commons/collections/map/EntrySetToMapIteratorAdapter.java\n+++ b/src/main/java/org/apache/commons/collections/map/EntrySetToMapIteratorAdapter.java\n  *\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/map/FixedSizeMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/FixedSizeMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/Flat3Map.java\n+++ b/src/main/java/org/apache/commons/collections/map/Flat3Map.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/HashedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/HashedMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/IdentityMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/IdentityMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/LRUMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/LRUMap.java\n  * <code>NullPointerException</code>'s when accessed by concurrent threads.\n  *\n  * @since Commons Collections 3.0 (previously in main package v1.0)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Morgan Delagrange\n--- a/src/main/java/org/apache/commons/collections/map/LazyMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/LazyMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/LazySortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/LazySortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/LinkedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/LinkedMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/ListOrderedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/map/MultiKeyMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/MultiKeyMap.java\n  * by concurrent threads without synchronization.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/MultiValueMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/MultiValueMap.java\n  * @author Stephen Colebourne\n  * @author Julien Buret\n  * @author Serhiy Yevtushenko\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @since Commons Collections 3.2\n  */\n public class MultiValueMap<K, V> extends AbstractMapDecorator<K, Object> implements MultiMap<K, V>, Serializable {\n--- a/src/main/java/org/apache/commons/collections/map/PredicatedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/PredicatedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n  * @see java.lang.ref.Reference\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/ReferenceMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/ReferenceMap.java\n  * @see java.lang.ref.Reference\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/main/java/org/apache/commons/collections/map/SingletonMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/SingletonMap.java\n  * </ul>\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/StaticBucketMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/StaticBucketMap.java\n  * operations will affect the map.<p>\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Berin Loritsch\n  * @author Gerhard Froehlich\n--- a/src/main/java/org/apache/commons/collections/map/TransformedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/TransformedMap.java\n  * @see org.apache.commons.collections.splitmap.TransformedMap\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/TransformedSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/TransformedSortedMap.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n+++ b/src/main/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/UnmodifiableMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/UnmodifiableMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n+++ b/src/main/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n  *\n  * @param <E> the type of the elements in the set\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n  *\n  * @param <E> the type of the elements in the sorted set\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/CompositeSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/CompositeSet.java\n  * If no strategy is provided then add is unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/main/java/org/apache/commons/collections/set/ListOrderedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/ListOrderedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Henning P. Schmiedehausen\n--- a/src/main/java/org/apache/commons/collections/set/MapBackedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/MapBackedSet.java\n  * Exceptions include <code>BidiMap</code> implementations, as they require unique values.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/PredicatedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/PredicatedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/main/java/org/apache/commons/collections/set/SynchronizedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/SynchronizedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/TransformedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/TransformedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/TransformedSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/TransformedSortedSet.java\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/UnmodifiableSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/UnmodifiableSet.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n+++ b/src/main/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n  * Attempts to modify it will result in an UnsupportedOperationException. \n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/main/java/org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator.java\n  * implementation.\n  *\n  * @since Commons Collections 4.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matt Benson\n  */\n--- a/src/main/java/org/apache/commons/collections/splitmap/SplitMapUtils.java\n+++ b/src/main/java/org/apache/commons/collections/splitmap/SplitMapUtils.java\n  * and/or {@link Get} but not {@link Map}.\n  *\n  * @since Commons Collections 4.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @see Get\n  * @see Put\n  * @author Matt Benson\n--- a/src/main/java/org/apache/commons/collections/splitmap/TransformedMap.java\n+++ b/src/main/java/org/apache/commons/collections/splitmap/TransformedMap.java\n  * generalizations.\n  *\n  * @since Commons Collections 4.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @see SplitMapUtils#readableMap(Get)\n  * @see SplitMapUtils#writableMap(Put)\n  *\n--- a/src/test/java/org/apache/commons/collections/AbstractTestArrayList.java\n+++ b/src/test/java/org/apache/commons/collections/AbstractTestArrayList.java\n /**\n  * Abstract test class for ArrayList.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jason van Zyl\n  */\n--- a/src/test/java/org/apache/commons/collections/AbstractTestLinkedList.java\n+++ b/src/test/java/org/apache/commons/collections/AbstractTestLinkedList.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rich Dougherty\n  */\n--- a/src/test/java/org/apache/commons/collections/AbstractTestObject.java\n+++ b/src/test/java/org/apache/commons/collections/AbstractTestObject.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Object} fails.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/AbstractTestTreeMap.java\n+++ b/src/test/java/org/apache/commons/collections/AbstractTestTreeMap.java\n /**\n  * Tests TreeMap.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jason van Zyl\n  */\n--- a/src/test/java/org/apache/commons/collections/AbstractTestTypedCollection.java\n+++ b/src/test/java/org/apache/commons/collections/AbstractTestTypedCollection.java\n /**\n  * Tests TypedCollection.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/LocalTestNode.java\n+++ b/src/test/java/org/apache/commons/collections/LocalTestNode.java\n /**\n  * Class LocalTestNode, a helper class for TestDoubleOrderedMap\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Marc Johnson (marcj at users dot sourceforge dot net)\n  */\n--- a/src/test/java/org/apache/commons/collections/TestArrayStack.java\n+++ b/src/test/java/org/apache/commons/collections/TestArrayStack.java\n /**\n  * Tests ArrayStack.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Craig McClanahan\n  */\n--- a/src/test/java/org/apache/commons/collections/TestBagUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestBagUtils.java\n /**\n  * Tests for BagUtils factory methods.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/TestBufferUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestBufferUtils.java\n /**\n  * Tests for BufferUtils.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/TestClosureUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestClosureUtils.java\n  * Tests the org.apache.commons.collections.ClosureUtils class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestCollectionUtils.java\n  * @author Stephen Smith\n  * @author Stephen Kestle\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n @SuppressWarnings(\"boxing\")\n public class TestCollectionUtils extends MockTestCase {\n--- a/src/test/java/org/apache/commons/collections/TestExtendedProperties.java\n+++ b/src/test/java/org/apache/commons/collections/TestExtendedProperties.java\n /**\n  * Tests some basic functions of the ExtendedProperties class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Geir Magnusson Jr.\n  * @author Mohan Kishore\n--- a/src/test/java/org/apache/commons/collections/TestFactoryUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestFactoryUtils.java\n  * Tests the org.apache.commons.collections.FactoryUtils class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestIteratorUtils.java\n /**\n  * Tests for IteratorUtils.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestListUtils.java\n /**\n  * Tests for ListUtils.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/test/java/org/apache/commons/collections/TestMapUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestMapUtils.java\n /**\n  * Tests for MapUtils.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Arun Mammen Thomas\n--- a/src/test/java/org/apache/commons/collections/TestPredicateUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestPredicateUtils.java\n  * Tests the org.apache.commons.collections.PredicateUtils class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/test/java/org/apache/commons/collections/TestSetUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestSetUtils.java\n /**\n  * Tests for SetUtils.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/test/java/org/apache/commons/collections/TestTransformerUtils.java\n+++ b/src/test/java/org/apache/commons/collections/TestTransformerUtils.java\n  * Tests the org.apache.commons.collections.TransformerUtils class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author James Carman\n--- a/src/test/java/org/apache/commons/collections/bag/AbstractTestBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/AbstractTestBag.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your bag fails.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n  * methods and contracts.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestHashBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestHashBag.java\n  * Extension of {@link AbstractTestBag} for exercising the {@link HashBag}\n  * implementation.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestPredicatedBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestPredicatedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestTransformedBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestTransformedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bag/TestTreeBag.java\n+++ b/src/test/java/org/apache/commons/collections/bag/TestTreeBag.java\n  * Extension of {@link AbstractTestBag} for exercising the {@link TreeBag}\n  * implementation.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Chuck Burdick\n  */\n--- a/src/test/java/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n /**\n  * Abstract test class for {@link OrderedBidiMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n /**\n  * Abstract test class for {@link SortedBidiMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n /**\n  * Test class for AbstractOrderedBidiMapDecorator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n public class TestAbstractOrderedBidiMapDecorator<K, V>\n         extends AbstractTestOrderedBidiMap<K, V> {\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n+++ b/src/test/java/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n /**\n  * Test cases for BoundedFifoBuffer.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n  * Runs tests against a full BoundedFifoBuffer, since many of the algorithms\n  * differ depending on whether the fifo is full or not.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n /**\n  * Test cases for CircularFifoBuffer.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n  * {@link PredicatedBuffer} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n /**\n  * Tests the PriorityBuffer.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Michael A. Smith\n  * @author Steve Phelps\n--- a/src/test/java/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n  * {@link SynchronizedBuffer} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n /**\n  * Test cases for UnboundedFifoBuffer.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n+++ b/src/test/java/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n  * {@link UnmodifiableBuffer} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/collection/AbstractTestCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/AbstractTestCollection.java\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Collection} fails.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/test/java/org/apache/commons/collections/collection/TestCompositeCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/TestCompositeCollection.java\n  * {@link CompositeCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  * @author Phil Steitz\n--- a/src/test/java/org/apache/commons/collections/collection/TestPredicatedCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/TestPredicatedCollection.java\n  * {@link PredicatedCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n  * {@link SynchronizedCollection} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/collection/TestTransformedCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/TestTransformedCollection.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n+++ b/src/test/java/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n  * {@link UnmodifiableCollection} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/comparators/AbstractTestNullComparator.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/AbstractTestNullComparator.java\n /**\n  * Test the NullComparator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Michael A. Smith\n  */\n--- a/src/test/java/org/apache/commons/collections/comparators/TestBooleanComparator.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/TestBooleanComparator.java\n /**\n  * Tests for {@link BooleanComparator}.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  */\n--- a/src/test/java/org/apache/commons/collections/comparators/TestComparableComparator.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/TestComparableComparator.java\n /**\n  * Tests for ComparableComparator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  */\n @SuppressWarnings(\"boxing\")\n--- a/src/test/java/org/apache/commons/collections/comparators/TestComparatorChain.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/TestComparatorChain.java\n /**\n  * Tests for ComparatorChain.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n /**\n  * Test class for FixedOrderComparator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author David Leppik\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/comparators/TestReverseComparator.java\n+++ b/src/test/java/org/apache/commons/collections/comparators/TestReverseComparator.java\n /**\n  * Tests for ReverseComparator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Unknown\n  */\n--- a/src/test/java/org/apache/commons/collections/functors/AbstractTestAnyAllOnePredicate.java\n+++ b/src/test/java/org/apache/commons/collections/functors/AbstractTestAnyAllOnePredicate.java\n  * Base class for tests of AnyPredicate, AllPredicate, and OnePredicate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 468603 $ $Date: 2006-10-27 17:52:37 -0700 (Fri, 27 Oct 2006) $\n+ * @version $Revision: 468603 $\n  *\n  * @author Edwin Tellman\n  */\n--- a/src/test/java/org/apache/commons/collections/functors/AbstractTestCompositePredicate.java\n+++ b/src/test/java/org/apache/commons/collections/functors/AbstractTestCompositePredicate.java\n  * Base class for tests of composite predicates.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 468603 $ $Date: 2006-10-27 17:52:37 -0700 (Fri, 27 Oct 2006) $\n+ * @version $Revision: 468603 $\n  *\n  * @author Edwin Tellman\n  */\n--- a/src/test/java/org/apache/commons/collections/functors/MockPredicateTestBase.java\n+++ b/src/test/java/org/apache/commons/collections/functors/MockPredicateTestBase.java\n  * provides methods to create and verify mock predicates to which to delegate.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 468603 $ $Date: 2006-10-27 17:52:37 -0700 (Fri, 27 Oct 2006) $\n+ * @version $Revision: 468603 $\n  *\n  * @author Edwin Tellman\n  */\n--- a/src/test/java/org/apache/commons/collections/functors/TestAllPredicate.java\n+++ b/src/test/java/org/apache/commons/collections/functors/TestAllPredicate.java\n  * Tests the org.apache.commons.collections.functors.AllPredicate class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 468603 $ $Date: 2006-10-27 17:52:37 -0700 (Fri, 27 Oct 2006) $\n+ * @version $Revision: 468603 $\n  *\n  * @author Edwin Tellman\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/AbstractTestIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/AbstractTestIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n  * overriding the supportsXxx() methods if necessary.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestArrayIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestArrayIterator.java\n  * perform the iteration rather than the hasNext() method.\n  * The code of this test was supplied by Mauricio S. Moura.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/java/org/apache/commons/collections/iterators/TestArrayIterator2.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestArrayIterator2.java\n /**\n  * Tests the ArrayIterator with primitive type arrays.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  * @author James Strachan\n--- a/src/test/java/org/apache/commons/collections/iterators/TestArrayListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestArrayListIterator.java\n /**\n  * Test the ArrayListIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @author Neil O'Toole\n  */\n public class TestArrayListIterator<E> extends TestArrayIterator<E> {\n--- a/src/test/java/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n /**\n  * Test the ArrayListIterator class with primitives.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @author Neil O'Toole\n  */\n public class TestArrayListIterator2<E> extends TestArrayIterator2<E> {\n--- a/src/test/java/org/apache/commons/collections/iterators/TestCollatingIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestCollatingIterator.java\n /**\n  * Unit test suite for {@link CollatingIterator}.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  * @author Rodney Waldhoff\n  */\n @SuppressWarnings(\"boxing\")\n--- a/src/test/java/org/apache/commons/collections/iterators/TestFilterIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestFilterIterator.java\n /**\n  * Test the filter iterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jan Sorensen\n  * @author Ralph Wagner\n--- a/src/test/java/org/apache/commons/collections/iterators/TestFilterListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestFilterListIterator.java\n /**\n  * Tests the FilterListIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestIteratorChain.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestIteratorChain.java\n /**\n  * Tests the IteratorChain class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/java/org/apache/commons/collections/iterators/TestIteratorIterable.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestIteratorIterable.java\n /**\n  * Tests for IteratorIterable.\n  * \n- * @version $Revision: $ $Date: $\n+ * @version $Revision: $\n  */\n public class TestIteratorIterable extends BulkTest {\n \n--- a/src/test/java/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n  * Tests the ListIteratorWrapper to insure that it simulates\n  * a ListIterator correctly.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestListIteratorWrapper2.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestListIteratorWrapper2.java\n /**\n  * Tests the ListIteratorWrapper to insure that it behaves as expected when wrapping a ListIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Morgan Delagrange\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestLoopingIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestLoopingIterator.java\n /**\n  * Tests the LoopingIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jonathan Carlson\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/iterators/TestLoopingListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestLoopingListIterator.java\n /**\n  * Tests the LoopingListIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Eric Crampton <ccesc@eonomine.com>\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n /**\n  * Tests the ObjectArrayIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n /**\n  * Tests the ObjectArrayListIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n /**\n  * Tests the ObjectArrayListIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n /**\n  * Testcase.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestReverseListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestReverseListIterator.java\n /**\n  * Tests the ReverseListIterator.\n  *\n- * @version $Revision: $ $Date$\n+ * @version $Revision: $\n  */\n public class TestReverseListIterator<E> extends AbstractTestListIterator<E> {\n \n--- a/src/test/java/org/apache/commons/collections/iterators/TestSingletonIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestSingletonIterator.java\n  * Tests the SingletonIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n  * Tests the SingletonIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n /**\n  * Tests the SingletonListIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n /**\n  * Tests the UniqueFilterIterator class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n--- a/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n /**\n  * Tests the UnmodifiableIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n /**\n  * Tests the UnmodifiableListIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n /**\n  * Tests the UnmodifiableMapIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n+++ b/src/test/java/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n /**\n  * Tests the UnmodifiableOrderedMapIterator.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n  * type being tested.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n  * Test the DefaultKeyValue class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n  * Test the DefaultMapEntry class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/TestMultiKey.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/TestMultiKey.java\n /**\n  * Unit tests for {@link org.apache.commons.collections.keyvalue.MultiKey}.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n  * Test the TiedMapEntry class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n+++ b/src/test/java/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n  * Test the UnmodifiableMapEntry class.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Neil O'Toole\n  */\n--- a/src/test/java/org/apache/commons/collections/list/AbstractTestLinkedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/AbstractTestLinkedList.java\n /**\n  * Test case for {@link AbstractLinkedList}.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rich Dougherty\n  * @author David Hay\n--- a/src/test/java/org/apache/commons/collections/list/AbstractTestList.java\n+++ b/src/test/java/org/apache/commons/collections/list/AbstractTestList.java\n  * test case (method) your {@link List} fails or override one of the\n  * protected methods from AbstractTestCollection.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n--- a/src/test/java/org/apache/commons/collections/list/TestCursorableLinkedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestCursorableLinkedList.java\n /**\n  * Test class.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n--- a/src/test/java/org/apache/commons/collections/list/TestFixedSizeList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestFixedSizeList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestGrowthList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestGrowthList.java\n  * Extension of {@link AbstractTestList} for exercising the {@link GrowthList}.\n  *\n  * @since Commons Collections 3.2\n- * @version $Revision: 155406 $ $Date$\n+ * @version $Revision: 155406 $\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n /**\n  * Test class for NodeCachingLinkedList, a performance optimised LinkedList.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Jeff Varszegi\n  * @author Phil Steitz\n--- a/src/test/java/org/apache/commons/collections/list/TestPredicatedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestPredicatedList.java\n  * {@link PredicatedList} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestSetUniqueList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestSetUniqueList.java\n  * JUnit tests.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Matthew Hawthorne\n  * @author Tom Dunham\n--- a/src/test/java/org/apache/commons/collections/list/TestSynchronizedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestSynchronizedList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestTransformedList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestTransformedList.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestTreeList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestTreeList.java\n  * JUnit tests\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Joerg Schmuecker\n  */\n--- a/src/test/java/org/apache/commons/collections/list/TestUnmodifiableList.java\n+++ b/src/test/java/org/apache/commons/collections/list/TestUnmodifiableList.java\n  * {@link UnmodifiableList} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/AbstractTestIterableMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/AbstractTestIterableMap.java\n /**\n  * Abstract test class for {@link IterableMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/AbstractTestMap.java\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  */\n public abstract class AbstractTestMap<K, V> extends AbstractTestObject {\n \n--- a/src/test/java/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n /**\n  * Abstract test class for {@link OrderedMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/AbstractTestSortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/AbstractTestSortedMap.java\n /**\n  * Abstract test class for {@link java.util.SortedMap} methods and contracts.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n /**\n  * Tests for the {@link CaseInsensitiveMap} implementation.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Commons-Collections team\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestCompositeMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestCompositeMap.java\n  * {@link CompositeMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestDefaultedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestDefaultedMap.java\n  * {@link DefaultedMap} implementation.\n  *\n  * @since Commons Collections 3.2\n- * @version $Revision: 155406 $ $Date$\n+ * @version $Revision: 155406 $\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestFixedSizeMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestFixedSizeMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestFlat3Map.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestFlat3Map.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestHashedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestHashedMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestIdentityMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestIdentityMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestLRUMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestLRUMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestLazyMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestLazyMap.java\n  * {@link LazyMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestLazySortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestLazySortedMap.java\n  * {@link LazySortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestLinkedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestLinkedMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestListOrderedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestListOrderedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/test/java/org/apache/commons/collections/map/TestListOrderedMap2.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestListOrderedMap2.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestMultiKeyMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestMultiKeyMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestPredicatedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestPredicatedMap.java\n  * {@link PredicatedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n  * {@link PredicatedSortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestReferenceMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestReferenceMap.java\n /**\n  * Tests for ReferenceMap.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  * @author Guilhem Lavaux\n--- a/src/test/java/org/apache/commons/collections/map/TestSingletonMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestSingletonMap.java\n /**\n  * JUnit tests.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestStaticBucketMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestStaticBucketMap.java\n  * Unit tests.\n  * {@link StaticBucketMap}.\n  *\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Michael A. Smith\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestTransformedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestTransformedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestTransformedSortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestTransformedSortedMap.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestUnmodifiableMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestUnmodifiableMap.java\n  * {@link UnmodifiableMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n  * {@link UnmodifiableOrderedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n+++ b/src/test/java/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n  * {@link UnmodifiableSortedMap} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/AbstractTestSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/AbstractTestSet.java\n  * elements may be added; see {@link AbstractTestCollection} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Paul Jack\n  */\n--- a/src/test/java/org/apache/commons/collections/set/AbstractTestSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/AbstractTestSortedSet.java\n  * elements may be added; see {@link AbstractTestSet} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Dieter Wimberger\n--- a/src/test/java/org/apache/commons/collections/set/TestCompositeSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestCompositeSet.java\n  * {@link CompositeSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Brian McCallister\n  * @author Phil Steitz\n--- a/src/test/java/org/apache/commons/collections/set/TestListOrderedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestListOrderedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/set/TestListOrderedSet2.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestListOrderedSet2.java\n  * implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n--- a/src/test/java/org/apache/commons/collections/set/TestMapBackedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestMapBackedSet.java\n  * JUnit test.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestMapBackedSet2.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestMapBackedSet2.java\n  * JUnit test.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestPredicatedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestPredicatedSet.java\n  * {@link PredicatedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n  * {@link PredicatedSortedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestSynchronizedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestSynchronizedSet.java\n  * {@link SynchronizedSet} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n  * {@link SynchronizedSortedSet} implementation.\n  *\n  * @since Commons Collections 3.1\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestTransformedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestTransformedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestTransformedSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestTransformedSortedSet.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestUnmodifiableSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestUnmodifiableSet.java\n  * {@link UnmodifiableSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n+++ b/src/test/java/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n  * {@link UnmodifiableSortedSet} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Phil Steitz\n  */\n--- a/src/test/java/org/apache/commons/collections/splitmap/TestSplitMapUtils.java\n+++ b/src/test/java/org/apache/commons/collections/splitmap/TestSplitMapUtils.java\n  *\n  * @since Commons Collections 5\n  * TODO fix version\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n--- a/src/test/java/org/apache/commons/collections/splitmap/TestTransformedMap.java\n+++ b/src/test/java/org/apache/commons/collections/splitmap/TestTransformedMap.java\n  *\n  * @since Commons Collections 5\n  * TODO fix version, add Serialization tests\n- * @version $Revision$ $Date$\n+ * @version $Revision$\n  *\n  * @author Stephen Colebourne\n  * @author Matt Benson", "timestamp": 1331390085, "metainfo": ""}