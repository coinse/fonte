{"sha": "9340ca5e760a753988fa6f50e3ad0b1e633e9445", "log": "Update licence Update since and version tags   ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/CollatingIterator.java,v 1.4 2002/12/13 11:03:42 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/12/13 11:03:42 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/CollatingIterator.java,v 1.5 2003/01/15 21:45:23 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.NoSuchElementException;\n import java.util.ArrayList;\n import java.util.BitSet;\n+\n /**\n  * Provides an ordered iteration over the elements contained in\n  * a collection of ordered {@link Iterator}s.  In other words,\n  * my {@link #next} method will return the lesser of \n  * <code>A.next()</code> and <code>B.next()</code>.\n  *\n- * @since 2.1\n+ * @since Commons Collections 2.1\n+ * @version $Revision: 1.5 $ $Date: 2003/01/15 21:45:23 $\n+ * \n  * @author Rodney Waldhoff\n- * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Revision: 1.4 $ $Date: 2002/12/13 11:03:42 $\n+ * @author Stephen Colebourne\n  */\n public class CollatingIterator implements Iterator {\n \n--- a/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java,v 1.2 2003/01/15 21:45:23 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Enumeration;\n import java.util.Iterator;\n \n-/** Adapter to make {@link Enumeration Enumeration} instances appear\n-  * to be {@link Iterator Iterator} instances.\n-  *\n-  * @since 1.0\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n-  */\n+/** \n+ * Adapter to make {@link Enumeration Enumeration} instances appear\n+ * to be {@link Iterator Iterator} instances.\n+ *\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:45:23 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n+ */\n public class EnumerationIterator implements Iterator {\n     \n     private Collection collection;\n--- a/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterIterator.java,v 1.2 2003/01/15 21:45:23 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.NoSuchElementException;\n import org.apache.commons.collections.Predicate;\n \n-\n-/** A Proxy {@link Iterator Iterator} which takes a {@link Predicate Predicate} instance to filter\n-  * out objects from an underlying {@link Iterator Iterator} instance.\n-  * Only objects for which the\n-  * specified <code>Predicate</code> evaluates to <code>true</code> are\n-  * returned.\n-  *\n-  * @since 1.0\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  * @author Jan Sorensen\n-  */\n-\n+/** \n+ * A Proxy {@link Iterator Iterator} which takes a {@link Predicate Predicate} instance to filter\n+ * out objects from an underlying {@link Iterator Iterator} instance.\n+ * Only objects for which the\n+ * specified <code>Predicate</code> evaluates to <code>true</code> are\n+ * returned.\n+ *\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:45:23 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ * @author Jan Sorensen\n+ */\n public class FilterIterator extends ProxyIterator {\n     \n     /** Holds value of property predicate. */\n     //-------------------------------------------------------------------------\n \n     /**\n-     *  Constructs a new <Code>FilterIterator</Code> that will not function\n-     *  until {@link #setIterator(Iterator) setIterator} is invoked.\n+     * Constructs a new <Code>FilterIterator</Code> that will not function\n+     * until {@link #setIterator(Iterator) setIterator} is invoked.\n      */\n     public FilterIterator() {\n+        super();\n     }\n     \n     /**\n-     *  Constructs a new <Code>FilterIterator</Code> that will not function\n-     *  until {@link #setPredicate(Predicate) setPredicate} is invoked.\n+     * Constructs a new <Code>FilterIterator</Code> that will not function\n+     * until {@link #setPredicate(Predicate) setPredicate} is invoked.\n      *\n-     *  @param iterator  the iterator to use\n+     * @param iterator  the iterator to use\n      */\n-    public FilterIterator( Iterator iterator ) {\n-        super( iterator );\n+    public FilterIterator(Iterator iterator) {\n+        super(iterator);\n     }\n \n     /**\n-     *  Constructs a new <Code>FilterIterator</Code> that will use the\n-     *  given iterator and predicate.\n+     * Constructs a new <Code>FilterIterator</Code> that will use the\n+     * given iterator and predicate.\n      *\n-     *  @param iterator  the iterator to use\n-     *  @param predicate  the predicate to use\n+     * @param iterator  the iterator to use\n+     * @param predicate  the predicate to use\n      */\n-    public FilterIterator( Iterator iterator, Predicate predicate ) {\n-        super( iterator );\n+    public FilterIterator(Iterator iterator, Predicate predicate) {\n+        super(iterator);\n         this.predicate = predicate;\n     }\n \n--- a/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterListIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterListIterator.java,v 1.2 2003/01/15 21:45:23 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import org.apache.commons.collections.Predicate;\n \n /** \n-  * A proxy {@link ListIterator ListIterator} which \n-  * takes a {@link Predicate Predicate} instance to filter\n-  * out objects from an underlying <code>ListIterator</code> \n-  * instance. Only objects for which the specified \n-  * <code>Predicate</code> evaluates to <code>true</code> are\n-  * returned by the iterator.\n-  * \n-  * @since 2.0\n-  * @version $Revision: 1.1 $ $Date: 2002/08/15 23:13:51 $\n-  * @author Rodney Waldhoff\n-  */\n+ * A proxy {@link ListIterator ListIterator} which \n+ * takes a {@link Predicate Predicate} instance to filter\n+ * out objects from an underlying <code>ListIterator</code> \n+ * instance. Only objects for which the specified \n+ * <code>Predicate</code> evaluates to <code>true</code> are\n+ * returned by the iterator.\n+ * \n+ * @since Commons Collections 2.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:45:23 $\n+ * \n+ * @author Rodney Waldhoff\n+ */\n public class FilterListIterator extends ProxyListIterator {\n \n     // Constructors    \n      *  and {@link #setPredicate(Predicate) setPredicate} are invoked.\n      */\n     public FilterListIterator() {\n+        super();\n     }\n \n     /**\n-     *  Constructs a new <Code>FilterListIterator</Code> that will not \n-     *  function until {@link #setPredicate(Predicate) setPredicate} is invoked.\n+     * Constructs a new <Code>FilterListIterator</Code> that will not \n+     * function until {@link #setPredicate(Predicate) setPredicate} is invoked.\n      *\n-     *  @param iterator  the iterator to use\n+     * @param iterator  the iterator to use\n      */\n     public FilterListIterator(ListIterator iterator ) {\n         super(iterator);\n     }\n \n     /**\n-     *  Constructs a new <Code>FilterListIterator</Code>.\n+     * Constructs a new <Code>FilterListIterator</Code>.\n      *\n-     *  @param iterator  the iterator to use\n-     *  @param predicate  the predicate to use\n+     * @param iterator  the iterator to use\n+     * @param predicate  the predicate to use\n      */\n     public FilterListIterator(ListIterator iterator, Predicate predicate) {\n         super(iterator);\n     }\n \n     /**\n-     *  Constructs a new <Code>FilterListIterator</Code> that will not \n-     *  function until \n-     *  {@link ProxyListIterator#setListIterator(ListIterator) setListIterator}\n-     *  is invoked.\n+     * Constructs a new <Code>FilterListIterator</Code> that will not \n+     * function until \n+     * {@link ProxyListIterator#setListIterator(ListIterator) setListIterator}\n+     * is invoked.\n      *\n-     *  @param predicate  the predicate to use.\n+     * @param predicate  the predicate to use.\n      */\n     public FilterListIterator(Predicate predicate) {\n+        super();\n         this.predicate = predicate;\n     }\n \n--- a/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/10/31 21:55:23 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.4 2003/01/15 21:46:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * UnsupportedOperationException.  Subclasses should <i>take care</i>\n  * to not alter the underlying List of Iterators.</p>\n  * \n- * @since 2.1\n+ * @since Commons Collections 2.1\n+ * @version $Revision: 1.4 $ $Date: 2003/01/15 21:46:55 $\n+ * \n  * @author Morgan Delagrange\n- * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n+ * @author Stephen Colebourne\n  */\n public class IteratorChain implements Iterator {\n \n--- a/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java,v 1.2 2003/01/15 21:46:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Enumeration;\n import java.util.Iterator;\n \n-/** Adapter to make an {@link Iterator Iterator} instance appear to be an {@link Enumeration Enumeration} instances\n-  *\n-  * @since 1.0\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  */\n-\n+/** \n+ * Adapter to make an {@link Iterator Iterator} instance appear to be an {@link Enumeration Enumeration} instances\n+ *\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:46:55 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ */\n public class IteratorEnumeration implements Enumeration {\n     \n     private Iterator iterator;\n     \n     /**\n-     *  Constructs a new <Code>IteratorEnumeration</Code> that will not \n-     *  function until {@link #setIterator(Iterator) setIterator} is  \n-     *  invoked.\n+     * Constructs a new <Code>IteratorEnumeration</Code> that will not \n+     * function until {@link #setIterator(Iterator) setIterator} is  \n+     * invoked.\n      */\n     public IteratorEnumeration() {\n+        super();\n     }\n \n     /**\n-     *  Constructs a new <Code>IteratorEnumeration</Code> that will use\n-     *  the given iterator. \n+     * Constructs a new <Code>IteratorEnumeration</Code> that will use\n+     * the given iterator. \n      * \n-     *  @param iterator  the iterator to use\n+     * @param iterator  the iterator to use\n      */\n     public IteratorEnumeration( Iterator iterator ) {\n+        super();\n         this.iterator = iterator;\n     }\n \n--- a/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n+++ b/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java,v 1.2 2002/08/17 11:33:09 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/17 11:33:09 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java,v 1.3 2003/01/15 21:46:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.LinkedList;\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n+\n /**\n  * As the wrapped Iterator is traversed, ListIteratorWrapper\n  * builds a LinkedList of its values, permitting all required\n  * operations of ListIterator.\n  * \n- * @since 2.1\n+ * @since Commons Collections 2.1\n+ * @version $Revision: 1.3 $ $Date: 2003/01/15 21:46:55 $\n+ * \n  * @author Morgan Delagrange\n- * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: ListIteratorWrapper.java,v 1.2 2002/08/17 11:33:09 scolebourne Exp $\n+ * @author Stephen Colebourne\n  */\n public class ListIteratorWrapper implements ListIterator {\n \n      * @throws NullPointerException if the iterator is null\n      */\n     public ListIteratorWrapper(Iterator iterator) {\n+        super();\n         if (iterator == null) {\n             throw new NullPointerException(\"Iterator must not be null\");\n         }\n--- a/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyIterator.java,v 1.2 2003/01/15 21:49:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n \n import java.util.Iterator;\n \n-/** A Proxy {@link Iterator Iterator} which delegates its methods to a proxy instance.\n-  *\n-  * @since 1.0\n-  * @see ProxyListIterator\n-  * @version $Revision: 1.1 $ $Date: 2002/08/15 23:13:51 $\n-  *\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  */\n-\n+/** \n+ * A Proxy {@link Iterator Iterator} which delegates its methods to a proxy instance.\n+ *\n+ * @see ProxyListIterator\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:49:14 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ */\n public class ProxyIterator implements Iterator {\n     \n     /** Holds value of property iterator. */\n     private Iterator iterator;\n     \n+    // Constructors\n+    //-------------------------------------------------------------------------\n+\n     /**\n-     *  Constructs a new <Code>ProxyIterator</Code> that will not function\n-     *  until {@link #setIterator(Iterator)} is called.\n+     * Constructs a new <Code>ProxyIterator</Code> that will not function\n+     * until {@link #setIterator(Iterator)} is called.\n      */\n     public ProxyIterator() {\n+        super();\n     }\n     \n     /**\n-     *  Constructs a new <Code>ProxyIterator</Code> that will use the\n-     *  given iterator.\n+     * Constructs a new <Code>ProxyIterator</Code> that will use the\n+     * given iterator.\n      *\n-     *  @param iterator  the underyling iterator\n+     * @param iterator  the underyling iterator\n      */\n-    public ProxyIterator( Iterator iterator ) {\n+    public ProxyIterator(Iterator iterator) {\n+        super();\n         this.iterator = iterator;\n     }\n \n--- a/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java,v 1.1 2002/08/15 23:13:51 pjack Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/15 23:13:51 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java,v 1.2 2003/01/15 21:49:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * A proxy {@link ListIterator ListIterator} which delegates its\n  * methods to a proxy instance.\n  *\n- * @since 2.0\n  * @see ProxyIterator\n- * @version $Revision: 1.1 $ $Date: 2002/08/15 23:13:51 $\n+ * @since Commons Collections 2.0\n+ * @version $Revision: 1.2 $ $Date: 2003/01/15 21:49:14 $\n+ * \n  * @author Rodney Waldhoff\n  */\n public class ProxyListIterator implements ListIterator {\n \n-    // Constructor\n+    /** Holds value of property \"iterator\". */\n+    private ListIterator iterator;\n+\n+    // Constructors\n     //-------------------------------------------------------------------------\n \n     /**\n-     *  Constructs a new <Code>ProxyListIterator</Code> that will not \n-     *  function until {@link #setListIterator(ListIterator) setListIterator}\n-     *  is invoked.\n+     * Constructs a new <Code>ProxyListIterator</Code> that will not \n+     * function until {@link #setListIterator(ListIterator) setListIterator}\n+     * is invoked.\n      */\n     public ProxyListIterator() {\n-    }\n-\n-    /**\n-     *  Constructs a new <Code>ProxyListIterator</Code> that will use the\n-     *  given list iterator.\n-     *\n-     *  @param iterator  the list iterator to use\n+        super();\n+    }\n+\n+    /**\n+     * Constructs a new <Code>ProxyListIterator</Code> that will use the\n+     * given list iterator.\n+     *\n+     * @param iterator  the list iterator to use\n      */\n     public ProxyListIterator(ListIterator iterator) {\n+        super();\n         this.iterator = iterator;\n     }\n \n         this.iterator = iterator;\n     }\n \n-    // Attributes\n-    //-------------------------------------------------------------------------\n-\n-    /** Holds value of property \"iterator\". */\n-    private ListIterator iterator;\n-\n }\n \n--- a/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/10/12 22:15:21 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.3 2003/01/15 21:49:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Iterator;\n import org.apache.commons.collections.Transformer;\n \n-/** A Proxy {@link Iterator Iterator} which uses a {@link Transformer Transformer} instance to \n-  * transform the contents of the {@link Iterator Iterator} into some other form\n-  *\n-  * @since 1.0\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  */\n-\n+/** \n+ * A Proxy {@link Iterator Iterator} which uses a {@link Transformer Transformer}\n+ * instance to transform the contents of the {@link Iterator Iterator} into \n+ * some other form.\n+ *\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.3 $ $Date: 2003/01/15 21:49:14 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ */\n public class TransformIterator extends ProxyIterator {\n     \n     /** Holds value of property transformer. */\n     \n     \n     /**\n-     *  Constructs a new <Code>TransformIterator</Code> that will not function\n-     *  until the {@link #setIterator(Iterator) setIterator} method is \n-     *  invoked.\n+     * Constructs a new <Code>TransformIterator</Code> that will not function\n+     * until the {@link #setIterator(Iterator) setIterator} method is \n+     * invoked.\n      */\n     public TransformIterator() {\n+        super();\n     }\n     \n     /**\n-     *  Constructs a new <Code>TransformIterator</Code> that won't transform\n-     *  elements from the given iterator.\n+     * Constructs a new <Code>TransformIterator</Code> that won't transform\n+     * elements from the given iterator.\n      *\n-     *  @param iterator  the iterator to use\n+     * @param iterator  the iterator to use\n      */\n-    public TransformIterator( Iterator iterator ) {\n-        super( iterator );\n+    public TransformIterator(Iterator iterator) {\n+        super(iterator);\n     }\n \n     /**\n-     *  Constructs a new <Code>TransformIterator</Code> that will use the\n-     *  given iterator and transformer.  If the given transformer is null,\n-     *  then objects will not be transformed.\n+     * Constructs a new <Code>TransformIterator</Code> that will use the\n+     * given iterator and transformer.  If the given transformer is null,\n+     * then objects will not be transformed.\n      *\n-     *  @param iterator  the iterator to use\n-     *  @param transformer  the transformer to use\n+     * @param iterator  the iterator to use\n+     * @param transformer  the transformer to use\n      */\n-    public TransformIterator( Iterator iterator, Transformer transformer ) {\n-        super( iterator );\n+    public TransformIterator(Iterator iterator, Transformer transformer) {\n+        super(iterator);\n         this.transformer = transformer;\n     }\n \n \n     // Properties\n     //-------------------------------------------------------------------------\n-    /** Getter for property transformer.\n+    /** \n+     * Getter for property transformer.\n+     * \n      * @return Value of property transformer.\n      */\n     public Transformer getTransformer() {\n         return transformer;\n     }\n-    /** Setter for property transformer.\n+    \n+    /** \n+     * Setter for property transformer.\n+     * \n      * @param transformer New value of property transformer.\n      */\n     public void setTransformer(Transformer transformer) {\n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/10/12 22:15:21 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.3 2003/01/15 21:49:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Iterator;\n import org.apache.commons.collections.Predicate;\n \n-/** A FilterIterator which only returns \"unique\" Objects.  Internally,\n-  * the Iterator maintains a Set of objects it has already encountered,\n-  * and duplicate Objects are skipped.\n-  *\n-  * @author Morgan Delagrange\n-  * @version $Id: UniqueFilterIterator.java,v 1.2 2002/10/12 22:15:21 scolebourne Exp $\n-  * @since 2.1\n-  */\n-\n+/** \n+ * A FilterIterator which only returns \"unique\" Objects.  Internally,\n+ * the Iterator maintains a Set of objects it has already encountered,\n+ * and duplicate Objects are skipped.\n+ *\n+ * @since Commons Collections 2.1\n+ * @version $Revision: 1.3 $ $Date: 2003/01/15 21:49:14 $\n+ * \n+ * @author Morgan Delagrange\n+ */\n public class UniqueFilterIterator extends FilterIterator {\n        \n     //-------------------------------------------------------------------------\n         super( iterator, new UniquePredicate() );\n     }\n \n+    /**\n+     * Private Predicate needed to implement the unique behaviour.\n+     */\n     private static class UniquePredicate implements Predicate {\n-\n         HashSet set = new HashSet();\n \n         public boolean evaluate(Object object) {\n             return set.add(object);       \n         }\n-\n     }\n \n }", "timestamp": 1042667354, "metainfo": ""}