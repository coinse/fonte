{"sha": "3ec38d1ba2780cf17cd98f988fc602d23ef73bf1", "log": "Clearer test error messages   ", "commit": "\n--- a/src/test/org/apache/commons/collections/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestMap.java,v 1.10 2003/11/01 18:47:18 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestMap.java,v 1.11 2003/11/02 15:27:05 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n- * @version $Revision: 1.10 $ $Date: 2003/11/01 18:47:18 $\n+ * @version $Revision: 1.11 $ $Date: 2003/11/02 15:27:05 $\n  */\n public abstract class AbstractTestMap extends AbstractTestObject {\n \n     protected void verifyEntrySet() {\n         int size = confirmed.size();\n         boolean empty = confirmed.isEmpty();\n-        assertEquals(\"entrySet should be same size as HashMap's\",\n+        assertEquals(\"entrySet should be same size as HashMap's\" +\n+                     \"\\nTest: \" + entrySet + \"\\nReal: \" + confirmed.entrySet(),\n                      size, entrySet.size());\n-        assertEquals(\"entrySet should be empty if HashMap is\", \n+        assertEquals(\"entrySet should be empty if HashMap is\" +\n+                     \"\\nTest: \" + entrySet + \"\\nReal: \" + confirmed.entrySet(),\n                      empty, entrySet.isEmpty());\n-        assertTrue(\"entrySet should contain all HashMap's elements\",\n+        assertTrue(\"entrySet should contain all HashMap's elements\" +\n+                   \"\\nTest: \" + entrySet + \"\\nReal: \" + confirmed.entrySet(),\n                    entrySet.containsAll(confirmed.entrySet()));\n-        assertEquals(\"entrySet hashCodes should be the same\", \n+        assertEquals(\"entrySet hashCodes should be the same\" +\n+                     \"\\nTest: \" + entrySet + \"\\nReal: \" + confirmed.entrySet(),\n                      confirmed.entrySet().hashCode(), entrySet.hashCode());\n-        assertEquals(\"Map's entry set should still equal HashMap's\", \n+        assertEquals(\"Map's entry set should still equal HashMap's\" +\n+                     \"\\nTest: \" + entrySet + \"\\nReal: \" + confirmed.entrySet(),\n                      confirmed.entrySet(), entrySet);\n     }\n \n     protected void verifyKeySet() { \n         int size = confirmed.size();\n         boolean empty = confirmed.isEmpty();\n-        assertEquals(\"keySet should be same size as HashMap's\",\n+        assertEquals(\"keySet should be same size as HashMap's\" +\n+                     \"\\nTest: \" + keySet + \"\\nReal: \" + confirmed.keySet(),\n                      size, keySet.size());\n-        assertEquals(\"keySet should be empty if HashMap is\", \n+        assertEquals(\"keySet should be empty if HashMap is\" +\n+                     \"\\nTest: \" + keySet + \"\\nReal: \" + confirmed.keySet(),\n                      empty, keySet.isEmpty());\n-        assertTrue(\"keySet should contain all HashMap's elements\",\n+        assertTrue(\"keySet should contain all HashMap's elements\" +\n+                   \"\\nTest: \" + keySet + \"\\nReal: \" + confirmed.keySet(),\n                    keySet.containsAll(confirmed.keySet()));\n-        assertEquals(\"keySet hashCodes should be the same\", \n+        assertEquals(\"keySet hashCodes should be the same\" +\n+                     \"\\nTest: \" + keySet + \"\\nReal: \" + confirmed.keySet(),\n                      confirmed.keySet().hashCode(), keySet.hashCode());\n-        assertEquals(\"Map's key set should still equal HashMap's\",\n+        assertEquals(\"Map's key set should still equal HashMap's\" +\n+                     \"\\nTest: \" + keySet + \"\\nReal: \" + confirmed.keySet(),\n                      confirmed.keySet(), keySet);\n     }\n \n \n         int size = confirmed.size();\n         boolean empty = confirmed.isEmpty();\n-        assertEquals(\"values should be same size as HashMap's\",\n+        assertEquals(\"values should be same size as HashMap's\" +\n+                     \"\\nTest: \" + test + \"\\nReal: \" + known,\n                      size, values.size());\n-        assertEquals(\"values should be empty if HashMap is\", \n+        assertEquals(\"values should be empty if HashMap is\" +\n+                     \"\\nTest: \" + test + \"\\nReal: \" + known,\n                      empty, values.isEmpty());\n         assertTrue(\"values should contain all HashMap's elements\" +\n                    \"\\nTest: \" + test + \"\\nReal: \" + known,", "timestamp": 1067786825, "metainfo": ""}