{"sha": "ae60862fd63c00004799e02ca5f1c930e1752970", "log": "Fix test class to not hard code empty Bag   ", "commit": "\n--- a/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java,v 1.4 2003/12/05 20:22:12 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java,v 1.5 2003/12/24 22:38:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/05 20:22:12 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/24 22:38:32 $\n  * \n  * @author Phil Steitz\n  */\n public class TestPredicatedSortedBag extends AbstractTestSortedBag {\n     \n-    private SortedBag emptyBag = new TreeBag();\n     private SortedBag nullBag = null;\n     \n     public TestPredicatedSortedBag(String testName) {\n     }\n     \n     public Bag makeBag() {\n-        return decorateBag(emptyBag, truePredicate);\n+        return decorateBag(new TreeBag(), truePredicate);\n     }\n     \n     protected Bag makeTestBag() {\n-        return decorateBag(emptyBag, stringPredicate());\n+        return decorateBag(new TreeBag(), stringPredicate());\n     }\n     \n     //--------------------------------------------------------------------------\n     \n     public void testDecorate() {\n-        SortedBag bag = decorateBag(emptyBag, stringPredicate());\n+        SortedBag bag = decorateBag(new TreeBag(), stringPredicate());\n         SortedBag bag2 = ((PredicatedSortedBag) bag).getSortedBag();\n         try {\n-            SortedBag bag3 = decorateBag(emptyBag, null);\n+            SortedBag bag3 = decorateBag(new TreeBag(), null);\n             fail(\"Expecting IllegalArgumentException for null predicate\");\n         } catch (IllegalArgumentException e) {}\n         try {\n     }\n     \n     public void testSortOrder() {\n-        SortedBag bag = decorateBag(emptyBag, stringPredicate());\n+        SortedBag bag = decorateBag(new TreeBag(), stringPredicate());\n         String one = \"one\";\n         String two = \"two\";\n         String three = \"three\";\n         assertEquals(\"first element\", bag.first(), one);\n         assertEquals(\"last element\", bag.last(), two); \n         Comparator c = bag.comparator();\n-        assertTrue(\"natural order, so comparator should be null\", \n-            c == null);\n+        assertTrue(\"natural order, so comparator should be null\", c == null);\n     }\n }\n--- a/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java,v 1.4 2003/12/05 20:22:12 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java,v 1.5 2003/12/24 22:38:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/05 20:22:12 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/24 22:38:32 $\n  * \n  * @author Phil Steitz\n  */\n     protected Class stringClass = this.getName().getClass();\n     private Object obj = new Object();\n     protected Class objectClass = obj.getClass();\n-    protected SortedBag emptyBag = new TreeBag();\n     protected SortedBag nullBag = null;\n     \n     protected SortedBag decorateBag(SortedBag bag, Class claz) {\n     }\n \n     public Bag makeBag() {\n-        return decorateBag(emptyBag, objectClass);\n+        return decorateBag(new TreeBag(), objectClass);\n     }\n     \n     protected Bag makeTestBag() {\n-        return decorateBag(emptyBag, stringClass);\n+        return decorateBag(new TreeBag(), stringClass);\n     }\n     \n     //--------------------------------------------------------------------------\n     \n     public void testDecorate() {\n-        SortedBag bag = decorateBag(emptyBag, stringClass);\n+        SortedBag bag = decorateBag(new TreeBag(), stringClass);\n         try {\n-            SortedBag bag3 = decorateBag(emptyBag, null);\n+            SortedBag bag3 = decorateBag(new TreeBag(), null);\n             fail(\"Expecting IllegalArgumentException for null predicate\");\n         } catch (IllegalArgumentException e) {}\n         try {\n     }\n     \n     public void testSortOrder() {\n-        SortedBag bag = decorateBag(emptyBag, stringClass);\n+        SortedBag bag = decorateBag(new TreeBag(), stringClass);\n         String one = \"one\";\n         String two = \"two\";\n         String three = \"three\";\n         assertEquals(\"first element\", bag.first(), one);\n         assertEquals(\"last element\", bag.last(), two); \n         Comparator c = bag.comparator();\n-        assertTrue(\"natural order, so comparator should be null\", \n-            c == null);\n+        assertTrue(\"natural order, so comparator should be null\", c == null);\n     }\n }", "timestamp": 1072305512, "metainfo": ""}