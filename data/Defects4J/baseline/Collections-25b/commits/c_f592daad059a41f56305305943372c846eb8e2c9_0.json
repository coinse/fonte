{"sha": "f592daad059a41f56305305943372c846eb8e2c9", "log": "added methods to allow for iterators that can't be full, or that can't be empty   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestIterator.java\n+++ b/src/test/org/apache/commons/collections/TestIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestIterator.java,v 1.3 2002/02/25 23:26:25 morgand Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/02/25 23:26:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestIterator.java,v 1.4 2002/02/25 23:37:38 morgand Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/02/25 23:37:38 $\n  *\n  * ====================================================================\n  *\n \n     public abstract Iterator makeFullIterator();\n \n+    /**\n+     * Whether or not we are testing an iterator that can be\n+     * empty.  Default is true.\n+     * \n+     * @return true if Iterators can be empty\n+     */\n+    public boolean supportsEmptyIterator() {\n+        return true;\n+    }\n+\n+    /**\n+     * Whether or not we are testing an iterator that can contain\n+     * elements.  Default is true.\n+     * \n+     * @return true if Iterators can be empty\n+     */\n+    public boolean supportsFullIterator() {\n+        return true;\n+    }\n \n     /**\n      * Should throw a NoSuchElementException.\n      */\n     public void testEmptyIterator() {\n+        if (supportsEmptyIterator() == false) {\n+            return;\n+        }\n+\n         Iterator iter = makeEmptyIterator();\n         assertTrue(\"hasNext() should return false for empty iterators\",iter.hasNext() == false);\n         try {\n      * hasNext() returns false\n      */\n     public void testFullIterator() {\n+        if (supportsFullIterator() == false) {\n+            return;\n+        }\n+\n         Iterator iter = makeFullIterator();\n \n         assertTrue(\"hasNext() should return true for at least one element\",iter.hasNext());", "timestamp": 1014680258, "metainfo": ""}