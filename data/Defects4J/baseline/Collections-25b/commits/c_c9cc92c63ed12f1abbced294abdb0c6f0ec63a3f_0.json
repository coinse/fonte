{"sha": "c9cc92c63ed12f1abbced294abdb0c6f0ec63a3f", "log": "LRUMap does not support concurrent access to any of its methods   ", "commit": "\n--- a/src/java/org/apache/commons/collections/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/LRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.7 2002/02/14 20:58:48 morgand Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/02/14 20:58:48 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.8 2002/02/14 21:24:32 morgand Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/02/14 21:24:32 $\n  *\n  * ====================================================================\n  *\n   * <p>\n   * A synchronized version can be obtained with:\n   * <code>Collections.synchronizedMap( theMapToSynchronize )</code>\n+  * If it will be accessed by multiple threads, you _must_ synchronize access \n+  * to this Map.  Even concurrent get(Object) operations produce indeterminate\n+  * behaviour.\n   * </p>\n   *\n   * <p>", "timestamp": 1013721872, "metainfo": ""}