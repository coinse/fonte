{"sha": "66ca5337e6c850b2756e477c376cbf2c801dc881", "log": "Add unmodifiable BidiMap decorator   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java,v 1.1 2003/12/03 12:59:37 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.bidimap;\n+\n+import org.apache.commons.collections.BidiMap;\n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.map.AbstractMapDecorator;\n+\n+/** \n+ * Provides a base decorator that enables additional functionality to be added\n+ * to a BidiMap via decoration.\n+ * <p>\n+ * Methods are forwarded directly to the decorated map.\n+ * <p>\n+ * This implementation does not perform any special processing with the map views.\n+ * Instead it simply returns the set/collection from the wrapped map. This may be\n+ * undesirable, for example if you are trying to write a validating implementation\n+ * it would provide a loophole around the validation.\n+ * But, you might want that loophole, so this class is kept simple.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/03 12:59:37 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractBidiMapDecorator extends AbstractMapDecorator implements BidiMap {\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     *\n+     * @param map  the map to decorate, must not be null\n+     * @throws IllegalArgumentException if the collection is null\n+     */\n+    public AbstractBidiMapDecorator(BidiMap map) {\n+        super(map);\n+    }\n+\n+    /**\n+     * Gets the map being decorated.\n+     * \n+     * @return the decorated map\n+     */\n+    protected BidiMap getBidiMap() {\n+        return (BidiMap) map;\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public MapIterator mapIterator() {\n+        return getBidiMap().mapIterator();\n+    }\n+\n+    public Object getKey(Object value) {\n+        return getBidiMap().getKey(value);\n+    }\n+\n+    public Object removeValue(Object value) {\n+        return getBidiMap().removeValue(value);\n+    }\n+\n+    public BidiMap inverseBidiMap() {\n+        return getBidiMap().inverseBidiMap();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java,v 1.1 2003/12/03 12:59:37 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.bidimap;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.commons.collections.BidiMap;\n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.Unmodifiable;\n+import org.apache.commons.collections.collection.UnmodifiableCollection;\n+import org.apache.commons.collections.iterators.UnmodifiableMapIterator;\n+import org.apache.commons.collections.map.UnmodifiableEntrySet;\n+import org.apache.commons.collections.set.UnmodifiableSet;\n+\n+/**\n+ * Decorates another <code>BidiMap</code> to ensure it can't be altered.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/12/03 12:59:37 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public final class UnmodifiableBidiMap extends AbstractBidiMapDecorator implements Unmodifiable {\n+    \n+    /** The inverse unmodifiable map */\n+    private UnmodifiableBidiMap inverse;\n+\n+    /**\n+     * Factory method to create an unmodifiable map.\n+     * \n+     * @param map  the map to decorate, must not be null\n+     * @throws IllegalArgumentException if map is null\n+     */\n+    public static BidiMap decorate(BidiMap map) {\n+        if (map instanceof Unmodifiable) {\n+            return map;\n+        }\n+        return new UnmodifiableBidiMap(map);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param map  the map to decorate, must not be null\n+     * @throws IllegalArgumentException if map is null\n+     */\n+    private UnmodifiableBidiMap(BidiMap map) {\n+        super(map);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void clear() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public Object put(Object key, Object value) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public void putAll(Map mapToCopy) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public Object remove(Object key) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public Set entrySet() {\n+        Set set = super.entrySet();\n+        return UnmodifiableEntrySet.decorate(set);\n+    }\n+\n+    public Set keySet() {\n+        Set set = super.keySet();\n+        return UnmodifiableSet.decorate(set);\n+    }\n+\n+    public Collection values() {\n+        Collection coll = super.values();\n+        return UnmodifiableCollection.decorate(coll);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public Object removeValue(Object value) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public MapIterator mapIterator() {\n+        MapIterator it = getBidiMap().mapIterator();\n+        return UnmodifiableMapIterator.decorate(it);\n+    }\n+\n+    public BidiMap inverseBidiMap() {\n+        if (inverse == null) {\n+            inverse = new UnmodifiableBidiMap(getBidiMap().inverseBidiMap());\n+            inverse.inverse = this;\n+        }\n+        return inverse;\n+    }\n+    \n+}\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java,v 1.5 2003/12/01 22:49:00 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java,v 1.6 2003/12/03 12:59:36 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.5 $ $Date: 2003/12/01 22:49:00 $\n+ * @version $Revision: 1.6 $ $Date: 2003/12/03 12:59:36 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n             new Object[] { \"value2\", \"key2\" },\n             new Object[] { \"value3\", \"key3\" }\n     };\n-    private final Object[][] entries;\n+    protected final Object[][] entries;\n \n     public AbstractTestBidiMap(String testName) {\n         super(testName);\n     // BidiPut\n     //-----------------------------------------------------------------------\n     public void testBidiPut() {\n+        if (isPutAddSupported() == false || isPutChangeSupported() == false) return;\n+\n         BidiMap map = makeEmptyBidiMap();\n         BidiMap inverse = map.inverseBidiMap();\n         assertEquals(0, map.size());\n \n     //-----------------------------------------------------------------------\n     public void testBidiClear() {\n+        if (isRemoveSupported() == false) return;\n+\n         BidiMap map = makeFullBidiMap();\n         map.clear();\n         assertTrue(\"Map was not cleared.\", map.isEmpty());\n \n     //-----------------------------------------------------------------------\n     public void testBidiRemove() {\n+        if (isRemoveSupported() == false) return;\n+        \n         remove(makeFullBidiMap(), entries[0][0]);\n         remove(makeFullBidiMap().inverseBidiMap(), entries[0][1]);\n \n \n     //-----------------------------------------------------------------------\n     public void testBidiRemoveByKeySet() {\n+        if (isRemoveSupported() == false) return;\n+        \n         removeByKeySet(makeFullBidiMap(), entries[0][0], entries[0][1]);\n         removeByKeySet(makeFullBidiMap().inverseBidiMap(), entries[0][1], entries[0][0]);\n     }\n \n     //-----------------------------------------------------------------------\n     public void testBidiRemoveByEntrySet() {\n+        if (isRemoveSupported() == false) return;\n+        \n         removeByEntrySet(makeFullBidiMap(), entries[0][0], entries[0][1]);\n         removeByEntrySet(makeFullBidiMap().inverseBidiMap(), entries[0][1], entries[0][0]);\n     }\n             !map.inverseBidiMap().containsKey(value));\n     }\n \n+    //-----------------------------------------------------------------------\n     public BulkTest bulkTestMapEntrySet() {\n         return new TestBidiMapEntrySet();\n     }\n         public BidiMap makeFullBidiMap() {\n             return main.makeFullBidiMap().inverseBidiMap();\n         }\n+        public Map makeFullMap() {\n+            return ((BidiMap) main.makeFullMap()).inverseBidiMap();\n+        }\n         public Object[] getSampleKeys() {\n             return main.getSampleValues();\n         }\n--- a/src/test/org/apache/commons/collections/bidimap/TestAll.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/TestAll.java,v 1.1 2003/11/16 20:35:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/TestAll.java,v 1.2 2003/12/03 12:59:36 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 20:35:46 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/03 12:59:36 $\n  * \n  * @author Stephen Colebourne\n  */\n         suite.addTest(TestDualTreeBidiMap.suite());\n         suite.addTest(TestTreeBidiMap.suite());\n         \n+        suite.addTest(TestUnmodifiableBidiMap.suite());\n+        \n         return suite;\n     }\n         \n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java,v 1.1 2003/12/03 12:59:36 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.bidimap;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import junit.framework.Test;\n+import junit.textui.TestRunner;\n+\n+import org.apache.commons.collections.BidiMap;\n+import org.apache.commons.collections.BulkTest;\n+\n+/**\n+ * JUnit tests.\n+ * \n+ * @version $Revision: 1.1 $ $Date: 2003/12/03 12:59:36 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestUnmodifiableBidiMap extends AbstractTestBidiMap {\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(suite());\n+    }\n+    \n+    public static Test suite() {\n+        return BulkTest.makeSuite(TestUnmodifiableBidiMap.class);\n+    }\n+\n+    public TestUnmodifiableBidiMap(String testName) {\n+        super(testName);\n+    }\n+\n+    public BidiMap makeEmptyBidiMap() {\n+        return UnmodifiableBidiMap.decorate(new DualHashBidiMap());\n+    }\n+    public BidiMap makeFullBidiMap() {\n+        BidiMap bidi = new DualHashBidiMap();\n+        for (int i = 0; i < entries.length; i++) {\n+            bidi.put(entries[i][0], entries[i][1]);\n+        }\n+        return UnmodifiableBidiMap.decorate(bidi);\n+    }\n+    public Map makeFullMap() {\n+        BidiMap bidi = new DualHashBidiMap();\n+        addSampleMappings(bidi);\n+        return UnmodifiableBidiMap.decorate(bidi);\n+    }\n+    \n+    public Map makeConfirmedMap() {\n+        return new HashMap();\n+    }\n+\n+    /**\n+     * Override to prevent infinite recursion of tests.\n+     */\n+    public String[] ignoredTests() {\n+        return new String[] {\"TestUnmodifiableBidiMap.bulkTestInverseMap.bulkTestInverseMap\"};\n+    }\n+\n+    public boolean isPutAddSupported() {\n+        return false;\n+    }\n+    public boolean isPutChangeSupported() {\n+        return false;\n+    }\n+    public boolean isRemoveSupported() {\n+        return false;\n+    }\n+    \n+}", "timestamp": 1070456377, "metainfo": ""}