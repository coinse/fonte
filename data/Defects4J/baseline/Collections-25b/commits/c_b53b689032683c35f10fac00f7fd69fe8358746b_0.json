{"sha": "b53b689032683c35f10fac00f7fd69fe8358746b", "log": "Strengthen test   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestList.java\n+++ b/src/test/org/apache/commons/collections/TestList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.19 2003/08/31 17:28:43 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.20 2003/09/20 17:00:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n  *\n- * @version $Revision: 1.19 $ $Date: 2003/08/31 17:28:43 $\n+ * @version $Revision: 1.20 $ $Date: 2003/09/20 17:00:32 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n     public void testListAddByIndexBoundsChecking() {\n         if (!isAddSupported()) return;\n \n-        List list = makeEmptyList();\n+        List list;\n         Object element = getOtherElements()[0];\n \n         try {\n+            list = makeEmptyList();\n             list.add(Integer.MIN_VALUE, element);\n             fail(\"List.add should throw IndexOutOfBoundsException \" +\n               \"[Integer.MIN_VALUE]\");\n         }\n \n         try {\n+            list = makeEmptyList();\n             list.add(-1, element);\n             fail(\"List.add should throw IndexOutOfBoundsException [-1]\");\n         } catch(IndexOutOfBoundsException e) {\n         }\n \n         try {\n+            list = makeEmptyList();\n             list.add(1, element);\n             fail(\"List.add should throw IndexOutOfBoundsException [1]\");\n         } catch(IndexOutOfBoundsException e) {\n         }\n \n         try {\n+            list = makeEmptyList();\n             list.add(Integer.MAX_VALUE, element);\n             fail(\"List.add should throw IndexOutOfBoundsException \" + \n               \"[Integer.MAX_VALUE]\");\n     public void testListAddByIndexBoundsChecking2() {\n         if (!isAddSupported()) return;\n \n-        List list = makeFullList();\n+        List list;\n         Object element = getOtherElements()[0];\n \n         try {\n+            list = makeFullList();\n             list.add(Integer.MIN_VALUE, element);\n             fail(\"List.add should throw IndexOutOfBoundsException \" +\n               \"[Integer.MIN_VALUE]\");\n         }\n \n         try {\n+            list = makeFullList();\n             list.add(-1, element);\n             fail(\"List.add should throw IndexOutOfBoundsException [-1]\");\n         } catch(IndexOutOfBoundsException e) {\n         }\n \n         try {\n+            list = makeFullList();\n             list.add(list.size() + 1, element);\n             fail(\"List.add should throw IndexOutOfBoundsException [size + 1]\");\n         } catch(IndexOutOfBoundsException e) {\n         }\n \n         try {\n+            list = makeFullList();\n             list.add(Integer.MAX_VALUE, element);\n             fail(\"List.add should throw IndexOutOfBoundsException \" + \n               \"[Integer.MAX_VALUE]\");", "timestamp": 1064077232, "metainfo": ""}