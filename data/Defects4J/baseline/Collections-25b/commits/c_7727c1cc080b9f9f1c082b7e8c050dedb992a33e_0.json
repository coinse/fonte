{"sha": "7727c1cc080b9f9f1c082b7e8c050dedb992a33e", "log": "Deprecate MultiValueMap and MultiMap, replaced by MultiValuedMap.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/MapUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/MapUtils.java\n  * @since 1.0\n  * @version $Id$\n  */\n+@SuppressWarnings(\"deprecation\")\n public class MapUtils {\n \n     /**\n      *  If <code>null</code>, the text 'null' is output.\n      * @throws NullPointerException if the stream is <code>null</code>\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public static void verbosePrint(final PrintStream out, final Object label, final Map<?, ?> map) {\n         verbosePrintInternal(out, label, map, new ArrayStack<Map<?, ?>>(), false);\n     }\n      *   If <code>null</code>, the text 'null' is output.\n      * @throws NullPointerException if the stream is <code>null</code>\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public static void debugPrint(final PrintStream out, final Object label, final Map<?, ?> map) {\n         verbosePrintInternal(out, label, map, new ArrayStack<Map<?, ?>>(), true);\n     }\n      * @param debug  flag indicating whether type names should be output.\n      * @throws NullPointerException if the stream is <code>null</code>\n      */\n-    @SuppressWarnings(\"deprecation\")\n     private static void verbosePrintInternal(final PrintStream out, final Object label, final Map<?, ?> map,\n                                              final ArrayStack<Map<?, ?>> lineage, final boolean debug) {\n         printIndent(out, lineage.size());\n      * @return a multi-value map backed by the given map which returns ArrayLists of values.\n      * @see MultiValueMap\n      * @since 3.2\n-     */\n+     * @deprecated since 4.1, use {@link MultiValuedMap} instead\n+     */\n+    @Deprecated\n     public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) {\n         return MultiValueMap.<K, V>multiValueMap(map);\n     }\n      * @param <V>  the value type\n      * @param <C>  the collection class type\n      * @param map  the map to decorate\n-     * @param collectionClass  the type of collections to return from the map (must contain public no-arg constructor\n-     *   and extend Collection).\n+     * @param collectionClass  the type of collections to return from the map\n+     *   (must contain public no-arg constructor and extend Collection)\n      * @return a multi-value map backed by the given map which returns collections of the specified type\n      * @see MultiValueMap\n      * @since 3.2\n-     */\n+     * @deprecated since 4.1, use {@link MultiValuedMap} instead\n+     */\n+    @Deprecated\n     public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map,\n             final Class<C> collectionClass) {\n         return MultiValueMap.multiValueMap(map, collectionClass);\n      *   created by the specified collection factory\n      * @see MultiValueMap\n      * @since 3.2\n-     */\n+     * @deprecated since 4.1, use {@link MultiValuedMap} instead\n+     */\n+    @Deprecated\n     public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map,\n             final Factory<C> collectionFactory) {\n         return MultiValueMap.multiValueMap(map, collectionFactory);\n--- a/src/main/java/org/apache/commons/collections4/MultiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/MultiMap.java\n  *\n  * @since 2.0\n  * @version $Id$\n+ * @deprecated since 4.1, use {@link MultiValuedMap} instead\n  */\n+@Deprecated\n public interface MultiMap<K, V> extends IterableMap<K, Object> {\n \n     /**\n--- a/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java\n  */\n public class IndexedCollection<K, C> extends AbstractCollectionDecorator<C> {\n \n+    // TODO: replace with MultiValuedMap\n+\n     /** Serialization version */\n     private static final long serialVersionUID = -5512610452568370038L;\n \n--- a/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java\n  *\n  * @since 3.2\n  * @version $Id$\n+ * @deprecated since 4.1, use {@link org.apache.commons.collections4.MultiValuedMap MultiValuedMap} instead\n  */\n+@Deprecated\n public class MultiValueMap<K, V> extends AbstractMapDecorator<K, Object> implements MultiMap<K, V>, Serializable {\n \n     /** Serialization version */", "timestamp": 1433198491, "metainfo": ""}