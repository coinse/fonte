{"sha": "4d02b5469002f429b3c74339667b10284ddcbb82", "log": "Avoid ambiguous reference to assertEquals(double, double)  ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n \n         Collection<Number> col2 = CollectionUtils.disjunction(collectionC2, collectionA);\n         Map<Number, Integer> freq2 = CollectionUtils.getCardinalityMap(col2);\n-        assertEquals(1, freq2.get(1));\n-        assertEquals(2, freq2.get(2));\n+        assertEquals(Integer.valueOf(1), freq2.get(1));\n+        assertEquals(Integer.valueOf(2), freq2.get(2));\n         assertNull(freq2.get(3));\n-        assertEquals(2, freq2.get(4));\n-        assertEquals(1, freq2.get(5));\n+        assertEquals(Integer.valueOf(2), freq2.get(4));\n+        assertEquals(Integer.valueOf(1), freq2.get(5));\n     }\n \n     @Test\n     public void testSubtract() {\n         Collection<Integer> col = CollectionUtils.subtract(iterableA, iterableC);\n         Map<Integer, Integer> freq = CollectionUtils.getCardinalityMap(col);\n-        assertEquals(1, freq.get(1));\n+        assertEquals(Integer.valueOf(1), freq.get(1));\n         assertNull(freq.get(2));\n         assertNull(freq.get(3));\n-        assertEquals(2, freq.get(4));\n+        assertEquals(Integer.valueOf(2), freq.get(4));\n         assertNull(freq.get(5));\n \n         Collection<Number> col2 = CollectionUtils.subtract(collectionC2, collectionA);\n         Map<Number, Integer> freq2 = CollectionUtils.getCardinalityMap(col2);\n-        assertEquals(1, freq2.get(5));\n+        assertEquals(Integer.valueOf(1), freq2.get(5));\n         assertNull(freq2.get(4));\n         assertNull(freq2.get(3));\n-        assertEquals(2, freq2.get(2));\n+        assertEquals(Integer.valueOf(2), freq2.get(2));\n         assertNull(freq2.get(1));\n     }\n ", "timestamp": 1253095489, "metainfo": ""}