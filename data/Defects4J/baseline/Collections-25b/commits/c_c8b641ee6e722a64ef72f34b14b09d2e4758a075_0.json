{"sha": "c8b641ee6e722a64ef72f34b14b09d2e4758a075", "log": "Checkstyle fixes.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n         return UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(it);\n     }\n \n+    /**\n+     * Gets an unmodifiable view of this map where the keys and values are reversed.\n+     *\n+     * @return an inverted unmodifiable bidirectional map\n+     */\n     public OrderedBidiMap<V, K> inverseOrderedBidiMap() {\n         if (inverse == null) {\n             inverse = new UnmodifiableOrderedBidiMap<V, K>(decorated().inverseBidiMap());\n--- a/src/main/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n     }\n \n     //-----------------------------------------------------------------------\n+    \n+    /** {@inheritDoc} */\n     public boolean add(E object) {\n         return decorated().add(object);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean addAll(Collection<? extends E> coll) {\n         return decorated().addAll(coll);\n     }\n \n+    /** {@inheritDoc} */\n     public void clear() {\n         decorated().clear();\n     }\n \n+    /** {@inheritDoc} */\n     public boolean contains(Object object) {\n         return decorated().contains(object);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean isEmpty() {\n         return decorated().isEmpty();\n     }\n \n+    /** {@inheritDoc} */\n     public Iterator<E> iterator() {\n         return decorated().iterator();\n     }\n \n+    /** {@inheritDoc} */\n     public boolean remove(Object object) {\n         return decorated().remove(object);\n     }\n \n+    /** {@inheritDoc} */\n     public int size() {\n         return decorated().size();\n     }\n \n+    /** {@inheritDoc} */\n     public Object[] toArray() {\n         return decorated().toArray();\n     }\n \n+    /** {@inheritDoc} */\n     public <T> T[] toArray(T[] object) {\n         return decorated().toArray(object);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean containsAll(Collection<?> coll) {\n         return decorated().containsAll(coll);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean removeAll(Collection<?> coll) {\n         return decorated().removeAll(coll);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean retainAll(Collection<?> coll) {\n         return decorated().retainAll(coll);\n     }\n--- a/src/main/java/org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator.java\n         return collection;\n     }\n \n+    /** {@inheritDoc} */\n     public void clear() {\n         decorated().clear();\n     }\n \n+    /** {@inheritDoc} */\n     public boolean contains(Object object) {\n         return decorated().contains(object);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean isEmpty() {\n         return decorated().isEmpty();\n     }\n \n+    /** {@inheritDoc} */\n     public boolean remove(Object object) {\n         return decorated().remove(object);\n     }\n \n+    /** {@inheritDoc} */\n     public int size() {\n         return decorated().size();\n     }\n \n+    /** {@inheritDoc} */\n     public Object[] toArray() {\n         return decorated().toArray();\n     }\n \n+    /** {@inheritDoc} */\n     public <T> T[] toArray(T[] object) {\n         return decorated().toArray(object);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean containsAll(Collection<?> coll) {\n         return decorated().containsAll(coll);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean removeAll(Collection<?> coll) {\n         return decorated().removeAll(coll);\n     }\n \n+    /** {@inheritDoc} */\n     public boolean retainAll(Collection<?> coll) {\n         return decorated().retainAll(coll);\n     }\n         return decorated().toString();\n     }\n \n-}\n+}\n--- a/src/main/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n+++ b/src/main/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n     }\n \n     //-----------------------------------------------------------------------\n+    \n+    /** {@inheritDoc} */\n     public boolean add(E object) {\n         synchronized (lock) {\n             return decorated().add(object);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean addAll(Collection<? extends E> coll) {\n         synchronized (lock) {\n             return decorated().addAll(coll);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public void clear() {\n         synchronized (lock) {\n             decorated().clear();\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean contains(Object object) {\n         synchronized (lock) {\n             return decorated().contains(object);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean containsAll(Collection<?> coll) {\n         synchronized (lock) {\n             return decorated().containsAll(coll);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean isEmpty() {\n         synchronized (lock) {\n             return decorated().isEmpty();\n         return decorated().iterator();\n     }\n \n+    /** {@inheritDoc} */\n     public Object[] toArray() {\n         synchronized (lock) {\n             return decorated().toArray();\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public <T> T[] toArray(T[] object) {\n         synchronized (lock) {\n             return decorated().toArray(object);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean remove(Object object) {\n         synchronized (lock) {\n             return decorated().remove(object);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean removeAll(Collection<?> coll) {\n         synchronized (lock) {\n             return decorated().removeAll(coll);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public boolean retainAll(Collection<?> coll) {\n         synchronized (lock) {\n             return decorated().retainAll(coll);\n         }\n     }\n \n+    /** {@inheritDoc} */\n     public int size() {\n         synchronized (lock) {\n             return decorated().size();", "timestamp": 1344281340, "metainfo": ""}