{"sha": "49c909bea066f28aa5785b8984106d0ee20c5a6a", "log": "Add additional getInstance method   ", "commit": "\n--- a/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n  * Transformer implementation that creates a new object instance by reflection.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:36:31 $\n+ * @version $Revision: 1.7 $ $Date: 2004/05/26 21:44:05 $\n  *\n  * @author Stephen Colebourne\n  */\n     private final Object[] iArgs;\n \n     /**\n-     * Gets an instanceof this transformer calling a specific method with specific values.\n+     * Gets an instance of this transformer calling a specific method with no arguments.\n+     * \n+     * @param methodName  the method name to call\n+     * @return an invoker transformer\n+     * @since Commons Collections 3.1\n+     */\n+    public static Transformer getInstance(String methodName) {\n+        if (methodName == null) {\n+            throw new IllegalArgumentException(\"The method to invoke must not be null\");\n+        }\n+        return new InvokerTransformer(methodName);\n+    }\n+\n+    /**\n+     * Gets an instance of this transformer calling a specific method with specific values.\n      * \n      * @param methodName  the method name to call\n      * @param paramTypes  the parameter types of the method", "timestamp": 1085607845, "metainfo": ""}