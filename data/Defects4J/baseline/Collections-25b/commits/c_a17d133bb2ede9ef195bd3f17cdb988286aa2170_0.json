{"sha": "a17d133bb2ede9ef195bd3f17cdb988286aa2170", "log": "a more useful CharList.toString implementation   ", "commit": "\n--- a/src/java/org/apache/commons/collections/primitives/RandomAccessCharList.java\n+++ b/src/java/org/apache/commons/collections/primitives/RandomAccessCharList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/RandomAccessCharList.java,v 1.1 2003/04/16 18:32:39 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/RandomAccessCharList.java,v 1.2 2003/04/16 19:03:39 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * to provide a more efficient implementation.\n  * \n  * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/04/16 18:32:39 $\n+ * @version $Revision: 1.2 $ $Date: 2003/04/16 19:03:39 $\n  * \n  * @author Rodney Waldhoff \n  */\n     }\n     \n     public String toString() {\n-        StringBuffer buf = new StringBuffer();\n-        buf.append(\"[\");\n-        for(CharIterator iter = iterator(); iter.hasNext();) {\n-            buf.append(iter.next());\n-            if(iter.hasNext()) {\n-                buf.append(\", \");\n-            }\n-        }\n-        buf.append(\"]\");\n-        return buf.toString();\n+        // could cache these like StringBuffer does\n+        return new String(toArray());\n     }\n     \n     // protected utilities\n--- a/src/java/org/apache/commons/collections/primitives/adapters/ListCharList.java\n+++ b/src/java/org/apache/commons/collections/primitives/adapters/ListCharList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/adapters/Attic/ListCharList.java,v 1.1 2003/04/16 18:32:39 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/adapters/Attic/ListCharList.java,v 1.2 2003/04/16 19:03:39 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * implementation in the \"obvious\" way.\n  *\n  * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/04/16 18:32:39 $\n+ * @version $Revision: 1.2 $ $Date: 2003/04/16 19:03:39 $\n  * @author Rodney Waldhoff \n  */\n public class ListCharList extends AbstractListCharList implements Serializable {\n         _list = list;     \n     }\n     \n+    public String toString() {\n+        // could cache these like StringBuffer does\n+        return new String(toArray());\n+    }\n+\n     protected List getList() {\n         return _list;\n     }\n--- a/src/test/org/apache/commons/collections/primitives/TestCharList.java\n+++ b/src/test/org/apache/commons/collections/primitives/TestCharList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestCharList.java,v 1.1 2003/04/16 18:32:40 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestCharList.java,v 1.2 2003/04/16 19:03:39 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import org.apache.commons.collections.primitives.adapters.ListCharList;\n \n /**\n- * @version $Revision: 1.1 $ $Date: 2003/04/16 18:32:40 $\n+ * @version $Revision: 1.2 $ $Date: 2003/04/16 19:03:39 $\n  * @author Rodney Waldhoff\n  */\n public abstract class TestCharList extends TestList {\n         }\n     }\n \n+    public void testCharListToString() throws Exception {\n+        String expected = \"The quick brown fox jumped over the lazy dogs.\";\n+        CharList list = makeEmptyCharList();\n+        for(int i=0;i<expected.length();i++) {\n+            list.add(expected.charAt(i));\n+        }\n+        assertEquals(expected,list.toString());\n+    }\n }", "timestamp": 1050519819, "metainfo": ""}