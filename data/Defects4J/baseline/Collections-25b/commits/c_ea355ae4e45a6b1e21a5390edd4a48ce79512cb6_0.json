{"sha": "ea355ae4e45a6b1e21a5390edd4a48ce79512cb6", "log": "Javadoc fixes from Dieter Wimberger   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestCollection.java\n+++ b/src/test/org/apache/commons/collections/TestCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.13 2003/07/12 15:47:53 scolebourne Exp $\n- * $Revision: 1.13 $\n- * $Date: 2003/07/12 15:47:53 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.14 2003/07/12 16:23:33 scolebourne Exp $\n+ * $Revision: 1.14 $\n+ * $Date: 2003/07/12 16:23:33 $\n  *\n  * ====================================================================\n  *\n  * <p>\n  * Override these if your collection doesn't support certain operations:\n  * <UL>\n- * <LI>{@link #isAddSuppoted()}\n+ * <LI>{@link #isAddSupported()}\n  * <LI>{@link #isRemoveSupported()}\n  * <li>{@link #areEqualElementsDistinguishable()}\n  * <LI>{@link #isNullSupported()}\n+ * <LI>{@link #isFailFastSupported()}\n  * </UL>\n  * <p>\n  * <B>Fixture Methods</B>\n  * <p>\n  * If your {@link Collection} fails one of these tests by design,\n  * you may still use this base set of cases.  Simply override the\n- * test case (method) your {@link Collection} fails.  For instance, the\n- * {@link #testIteratorFailFast()} method is provided since most collections\n- * have fail-fast iterators; however, that's not strictly required by the\n- * collection contract, so you may want to override that method to do \n- * nothing.\n+ * test case (method) your {@link Collection} fails.\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n- * @version $Id: TestCollection.java,v 1.13 2003/07/12 15:47:53 scolebourne Exp $\n+ * @version $Id: TestCollection.java,v 1.14 2003/07/12 16:23:33 scolebourne Exp $\n  */\n public abstract class TestCollection extends TestObject {\n \n     //-----------------------------------------------------------------------\n     /**\n      *  Returns a list of elements suitable for return by\n-     *  {@link getFullElements()}.  The array returned by this method\n+     *  {@link #getFullElements()}.  The array returned by this method\n      *  does not include null, but does include a variety of objects \n      *  of different types.  Override getFullElements to return\n      *  the results of this method if your collection does not support\n \n     /**\n      *  Returns the default list of objects returned by \n-     *  {@link getOtherElements()}.  Includes many objects\n+     *  {@link #getOtherElements()}.  Includes many objects\n      *  of different types.\n      */\n     protected Object[] getOtherNonNullElements() {\n \n     /**\n      *  Returns a list of string elements suitable for return by\n-     *  {@link getFullElements()}.  Override getFullElements to return\n+     *  {@link #getFullElements()}.  Override getFullElements to return\n      *  the results of this method if your collection does not support\n      *  heterogenous elements or the null element.\n      */\n \n     /**\n      *  Returns a list of string elements suitable for return by\n-     *  {@link getOtherElements()}.  Override getOtherElements to return\n+     *  {@link #getOtherElements()}.  Override getOtherElements to return\n      *  the results of this method if your collection does not support\n      *  heterogenous elements or the null element.\n      */\n \n \n     /**\n-     *  Tests {@link Collection.toArray(Object[])}.\n+     *  Tests {@link Collection#toArray(Object[])}.\n      */\n     public void testCollectionToArray2() {\n         resetEmpty();", "timestamp": 1058027013, "metainfo": ""}