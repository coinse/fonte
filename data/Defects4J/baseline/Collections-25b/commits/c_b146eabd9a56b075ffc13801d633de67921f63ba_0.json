{"sha": "b146eabd9a56b075ffc13801d633de67921f63ba", "log": "Improve documentation   ", "commit": "\n--- a/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/list/AbstractLinkedList.java,v 1.4 2003/12/29 00:38:08 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/list/AbstractLinkedList.java,v 1.5 2003/12/29 01:04:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * is here.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/29 00:38:08 $\n+ * @version $Revision: 1.5 $ $Date: 2003/12/29 01:04:44 $\n  *\n  * @author Rich Dougherty\n  * @author Phil Steitz\n      * Creates a new node with the specified object as its \n      * <code>value</code> and inserts it before <code>node</code>.\n      * <p>\n-     * This implementation uses {@link #createNode(Object)} and {@link #addNode(Node,Node)}.\n+     * This implementation uses {@link #createNode(Object)} and\n+     * {@link #addNode(AbstractLinkedList.Node,AbstractLinkedList.Node)}.\n      *\n      * @param node  node to insert before\n      * @param value  value of the newly added node\n      * Creates a new node with the specified object as its \n      * <code>value</code> and inserts it after <code>node</code>.\n      * <p>\n-     * This implementation uses {@link #createNode(Object)} and {@link #addNode(Node,Node)}.\n+     * This implementation uses {@link #createNode(Object)} and\n+     * {@link #addNode(AbstractLinkedList.Node,AbstractLinkedList.Node)}.\n      * \n      * @param node  node to insert after\n      * @param value  value of the newly added node\n--- a/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java,v 1.2 2003/12/24 01:15:40 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java,v 1.3 2003/12/29 01:04:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * <b>Note that this implementation is not synchronized.</b>\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/24 01:15:40 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/29 01:04:44 $\n  * \n  * @author Jeff Varszegi\n  * @author Rich Dougherty\n \n     /**\n      * The first cached node, or <code>null</code> if no nodes are cached.\n-     * Cached nodes are stored in a singly-linked list with {@link Node#next}\n-     * pointing to the next element.\n+     * Cached nodes are stored in a singly-linked list with\n+     * <code>next</code> pointing to the next element.\n      */\n     protected transient Node firstCachedNode;\n     \n--- a/src/java/org/apache/commons/collections/map/CompositeMap.java\n+++ b/src/java/org/apache/commons/collections/map/CompositeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/CompositeMap.java,v 1.1 2003/12/14 21:42:55 psteitz Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/CompositeMap.java,v 1.2 2003/12/29 01:04:43 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * strategy is provided then add and remove are unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/12/14 21:42:55 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/29 01:04:43 $\n  *\n  * @author Brian McCallister\n  */\n     \n     /**\n      * Returns a set view of the mappings contained in this map.  Each element\n-     * in the returned set is a {@link Map.Entry}.  The set is backed by the\n+     * in the returned set is a <code>Map.Entry</code>.  The set is backed by the\n      * map, so changes to the map are reflected in the set, and vice-versa.\n      * If the map is modified while an iteration over the set is in progress,\n      * the results of the iteration are undefined.  The set supports element\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/AbstractTestBag.java,v 1.5 2003/12/24 23:22:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/AbstractTestBag.java,v 1.6 2003/12/29 01:04:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.Bag;\n \n /**\n- * Abstract test class for {@link Bag} methods and contracts.\n+ * Abstract test class for {@link org.apache.commons.collections.Bag Bag} methods and contracts.\n  * <p>\n  * To use, simply extend this class, and implement\n  * the {@link #makeBag} method.\n  * <p>\n- * If your {@link Bag} fails one of these tests by design,\n+ * If your bag fails one of these tests by design,\n  * you may still use this base set of cases.  Simply override the\n- * test case (method) your {@link Bag} fails.\n- *\n- * @version $Revision: 1.5 $ $Date: 2003/12/24 23:22:54 $\n+ * test case (method) your bag fails.\n+ *\n+ * @version $Revision: 1.6 $ $Date: 2003/12/29 01:04:44 $\n  * \n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Return a new, empty {@link Bag} to used for testing.\n+     * Return a new, empty bag to used for testing.\n      * \n      * @return the bag to be tested\n      */\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java,v 1.1 2003/11/16 22:15:10 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java,v 1.2 2003/12/29 01:04:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.bag;\n \n-\n /**\n- * Abstract test class for {@link SortedBag} methods and contracts.\n+ * Abstract test class for\n+ * {@link org.apache.commons.collections.SortedBag SortedBag}\n+ * methods and contracts.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 22:15:10 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/29 01:04:44 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1072659884, "metainfo": ""}