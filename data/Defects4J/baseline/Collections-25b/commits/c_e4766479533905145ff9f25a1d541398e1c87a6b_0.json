{"sha": "e4766479533905145ff9f25a1d541398e1c87a6b", "log": "Rename TestBag to AbstractTestBag Rename TestSortedBag to AbstractTestSortedBag Javadoc and tidy   ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/AbstractTestBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestBag.java,v 1.1 2003/10/02 22:35:31 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+import java.util.ArrayList;\n+import java.util.ConcurrentModificationException;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+/**\n+ * Abstract test class for {@link Bag} methods and contracts.\n+ * <p>\n+ * To use, simply extend this class, and implement\n+ * the {@link #makeBag} method.\n+ * <p>\n+ * If your {@link Bag} fails one of these tests by design,\n+ * you may still use this base set of cases.  Simply override the\n+ * test case (method) your {@link Bag} fails.\n+ *\n+ * @author Chuck Burdick\n+ * @version $Id: AbstractTestBag.java,v 1.1 2003/10/02 22:35:31 scolebourne Exp $\n+ */\n+public abstract class AbstractTestBag extends AbstractTestObject {\n+//  TODO: this class should really extend from TestCollection, but the bag\n+//  implementations currently do not conform to the Collection interface.  Once\n+//  those are fixed or at least a strategy is made for resolving the issue, this\n+//  can be changed back to extend TestCollection instead.\n+\n+    /**\n+     * JUnit constructor.\n+     * \n+     * @param testName  the test class name\n+     */\n+    public AbstractTestBag(String testName) {\n+        super(testName);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Return a new, empty {@link Bag} to used for testing.\n+     * \n+     * @return the bag to be tested\n+     */\n+    protected abstract Bag makeBag();\n+\n+    /**\n+     * Implements the superclass method to return the Bag.\n+     * \n+     * @return the bag to be tested\n+     */\n+    protected Object makeObject() {\n+        return makeBag();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testBagAdd() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        assertTrue(\"Should contain 'A'\", bag.contains(\"A\"));\n+        assertEquals(\"Should have count of 1\", 1, bag.getCount(\"A\"));\n+        bag.add(\"A\");\n+        assertTrue(\"Should contain 'A'\", bag.contains(\"A\"));\n+        assertEquals(\"Should have count of 2\", 2, bag.getCount(\"A\"));\n+        bag.add(\"B\");\n+        assertTrue(bag.contains(\"A\"));\n+        assertTrue(bag.contains(\"B\"));\n+    }\n+\n+    public void testBagEqualsSelf() {\n+        Bag bag = makeBag();\n+        assertTrue(bag.equals(bag));\n+        bag.add(\"elt\");\n+        assertTrue(bag.equals(bag));\n+        bag.add(\"elt\"); // again\n+        assertTrue(bag.equals(bag));\n+        bag.add(\"elt2\");\n+        assertTrue(bag.equals(bag));\n+    }\n+\n+    public void testRemove() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        assertEquals(\"Should have count of 1\", 1, bag.getCount(\"A\"));\n+        bag.remove(\"A\");\n+        assertEquals(\"Should have count of 0\", 0, bag.getCount(\"A\"));\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        assertEquals(\"Should have count of 4\", 4, bag.getCount(\"A\"));\n+        bag.remove(\"A\", 0);\n+        assertEquals(\"Should have count of 4\", 4, bag.getCount(\"A\"));\n+        bag.remove(\"A\", 2);\n+        assertEquals(\"Should have count of 2\", 2, bag.getCount(\"A\"));\n+        bag.remove(\"A\");\n+        assertEquals(\"Should have count of 0\", 0, bag.getCount(\"A\"));\n+    }\n+\n+    public void testRemoveAll() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\", 2);\n+        assertEquals(\"Should have count of 2\", 2, bag.getCount(\"A\"));\n+        bag.add(\"B\");\n+        bag.add(\"C\");\n+        assertEquals(\"Should have count of 4\", 4, bag.size());\n+        List delete = new ArrayList();\n+        delete.add(\"A\");\n+        delete.add(\"B\");\n+        bag.removeAll(delete);\n+        assertEquals(\"Should have count of 1\", 1, bag.getCount(\"A\"));\n+        assertEquals(\"Should have count of 0\", 0, bag.getCount(\"B\"));\n+        assertEquals(\"Should have count of 1\", 1, bag.getCount(\"C\"));\n+        assertEquals(\"Should have count of 2\", 2, bag.size());\n+    }\n+    \n+    public void testContains() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"B\");\n+        bag.add(\"B\");\n+        List compare = new ArrayList();\n+        compare.add(\"A\");\n+        compare.add(\"B\");\n+        assertEquals(\"Other list has 1 'B'\", 1, (new HashBag(compare)).getCount(\"B\"));\n+        assertTrue(\"Bag has at least 1 'B'\", 1 <= bag.getCount(\"B\"));\n+        assertTrue(\"Bag contains items in the list\", bag.containsAll(compare));\n+        compare.add(\"A\");\n+        compare.add(\"B\");\n+        assertEquals(\"Other list has 2 'B'\", 2, (new HashBag(compare)).getCount(\"B\"));\n+        assertTrue(\"Bag has at least 2 'B'\", 2 <= bag.getCount(\"B\"));\n+        assertTrue(\"Bag contains items in the list\", bag.containsAll(compare));\n+        compare.add(\"A\");\n+        compare.add(\"B\");\n+        assertEquals(\"Other list has 3 'B'\", 3, (new HashBag(compare)).getCount(\"B\"));\n+        assertTrue(\"Bag does not have 3 'B'\", 3 > bag.getCount(\"B\"));\n+        assertTrue(\"Bag contains items in the list\", !bag.containsAll(compare));\n+    }\n+\n+    public void testSize() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"B\");\n+        bag.add(\"B\");\n+        assertEquals(\"Should have 5 total items\", 5, bag.size());\n+        bag.remove(\"A\", 2);\n+        assertEquals(\"Should have 1 'A'\", 1, bag.getCount(\"A\"));\n+        assertEquals(\"Should have 3 total items\", 3, bag.size());\n+        bag.remove(\"B\");\n+        assertEquals(\"Should have 1 total item\", 1, bag.size());\n+    }\n+    \n+    public void testRetainAll() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"B\");\n+        bag.add(\"B\");\n+        bag.add(\"C\");\n+        List retains = new ArrayList();\n+        retains.add(\"B\");\n+        retains.add(\"C\");\n+        bag.retainAll(retains);\n+        assertEquals(\"Should have 2 total items\", 2, bag.size());\n+    }\n+\n+    public void testIterator() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"B\");\n+        assertEquals(\"Bag should have 3 items\", 3, bag.size());\n+        Iterator i = bag.iterator();\n+    \n+        boolean foundA = false;\n+        while (i.hasNext()) {\n+            String element = (String) i.next();\n+            // ignore the first A, remove the second via Iterator.remove()\n+            if (element.equals(\"A\")) {\n+                if (foundA == false) {\n+                    foundA = true;\n+                } else {\n+                    i.remove();\n+                }\n+            }\n+        }\n+    \n+        assertTrue(\"Bag should still contain 'A'\", bag.contains(\"A\"));\n+        assertEquals(\"Bag should have 2 items\", 2, bag.size());\n+        assertEquals(\"Bag should have 1 'A'\", 1, bag.getCount(\"A\"));\n+    }\n+\n+    public void testIteratorFail() {\n+        Bag bag = makeBag();\n+        bag.add(\"A\");\n+        bag.add(\"A\");\n+        bag.add(\"B\");\n+        Iterator i = bag.iterator();\n+        i.next();\n+        bag.remove(\"A\");\n+        try {\n+            i.next();\n+            fail(\"Should throw ConcurrentModificationException\");\n+        } catch (ConcurrentModificationException e) {\n+            // expected\n+        }\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/AbstractTestSortedBag.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSortedBag.java,v 1.1 2003/10/02 22:35:31 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections;\n+\n+/**\n+ * Abstract test class for {@link java.util.SortedBag} methods and contracts.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/10/02 22:35:31 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractTestSortedBag extends AbstractTestBag {\n+\n+    public AbstractTestSortedBag(String testName) {\n+        super(testName);\n+    }\n+    \n+    // TODO: Add the SortedBag tests!\n+}\n--- a/src/test/org/apache/commons/collections/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/TestHashBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestHashBag.java,v 1.4 2003/09/20 17:02:03 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/09/20 17:02:03 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestHashBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * implementation.\n  *\n  * @author Chuck Burdick\n- * @version $Id: TestHashBag.java,v 1.4 2003/09/20 17:02:03 scolebourne Exp $ */\n-public class TestHashBag extends TestBag {\n-   public TestHashBag(String testName) {\n-      super(testName);\n-   }\n+ * @version $Id: TestHashBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n+ */\n+public class TestHashBag extends AbstractTestBag {\n+    \n+    public TestHashBag(String testName) {\n+        super(testName);\n+    }\n \n-   public static Test suite() {\n-      return new TestSuite(TestHashBag.class);\n-   }\n+    public static Test suite() {\n+        return new TestSuite(TestHashBag.class);\n+    }\n \n-   public static void main(String args[]) {\n-      String[] testCaseName = { TestHashBag.class.getName() };\n-      junit.textui.TestRunner.main(testCaseName);\n-   }\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestHashBag.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n \n-   public Bag makeBag() {\n-      return new HashBag();\n-   }\n+    protected Bag makeBag() {\n+        return new HashBag();\n+    }\n+    \n }\n-\n--- a/src/test/org/apache/commons/collections/TestTreeBag.java\n+++ b/src/test/org/apache/commons/collections/TestTreeBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestTreeBag.java,v 1.4 2003/09/20 17:02:03 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/09/20 17:02:03 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestTreeBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2003/10/02 22:35:31 $\n  *\n  * ====================================================================\n  *\n  * implementation.\n  *\n  * @author Chuck Burdick\n- * @version $Id: TestTreeBag.java,v 1.4 2003/09/20 17:02:03 scolebourne Exp $ */\n-public class TestTreeBag extends TestBag {\n+ * @version $Id: TestTreeBag.java,v 1.5 2003/10/02 22:35:31 scolebourne Exp $\n+ */\n+public class TestTreeBag extends AbstractTestBag {\n+    \n    public TestTreeBag(String testName) {\n       super(testName);\n    }\n       junit.textui.TestRunner.main(testCaseName);\n    }\n \n-   public Bag makeBag() {\n+   protected Bag makeBag() {\n       return new TreeBag();\n    }\n \n                    \"D\", ((SortedBag)bag).last());\n    }\n }\n-\n-\n-\n-\n-\n-\n-\n--- a/src/test/org/apache/commons/collections/decorators/TestPredicatedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestPredicatedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestPredicatedBag.java,v 1.3 2003/09/20 17:05:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestPredicatedBag.java,v 1.4 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.HashBag;\n import org.apache.commons.collections.Predicate;\n import org.apache.commons.collections.PredicateUtils;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestBag;\n \n /**\n  * Extension of {@link TestBag} for exercising the {@link PredicatedBag}\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/09/20 17:05:36 $\n+ * @version $Revision: 1.4 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Phil Steitz\n  */\n-public class TestPredicatedBag extends TestBag {\n+public class TestPredicatedBag extends AbstractTestBag {\n     \n     public TestPredicatedBag(String testName) {\n         super(testName);\n         return PredicatedBag.decorate(bag, predicate);\n     }\n \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return decorateBag(new HashBag(), truePredicate);\n     }\n     \n-    public Bag makeTestBag() {\n+    protected Bag makeTestBag() {\n         return decorateBag(new HashBag(), stringPredicate());\n     }\n     \n--- a/src/test/org/apache/commons/collections/decorators/TestPredicatedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestPredicatedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestPredicatedSortedBag.java,v 1.3 2003/09/20 17:05:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestPredicatedSortedBag.java,v 1.4 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.Predicate;\n import org.apache.commons.collections.PredicateUtils;\n import org.apache.commons.collections.SortedBag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestSortedBag;\n import org.apache.commons.collections.TreeBag;\n \n /**\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/09/20 17:05:36 $\n+ * @version $Revision: 1.4 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Phil Steitz\n  */\n-public class TestPredicatedSortedBag extends TestBag {\n+public class TestPredicatedSortedBag extends AbstractTestSortedBag {\n     \n     private SortedBag emptyBag = new TreeBag();\n     private SortedBag nullBag = null;\n         return PredicatedSortedBag.decorate(bag, predicate);\n     }\n     \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return decorateBag(emptyBag, truePredicate);\n     }\n     \n-    public Bag makeTestBag() {\n+    protected Bag makeTestBag() {\n         return decorateBag(emptyBag, stringPredicate());\n     }\n     \n--- a/src/test/org/apache/commons/collections/decorators/TestTransformedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedBag.java,v 1.2 2003/08/31 17:28:42 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedBag.java,v 1.3 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.Bag;\n import org.apache.commons.collections.HashBag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestBag;\n \n /**\n  * Extension of {@link TestBag} for exercising the {@link TransformedBag}\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/08/31 17:28:42 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TestTransformedBag extends TestBag {\n+public class TestTransformedBag extends AbstractTestBag {\n     \n     public TestTransformedBag(String testName) {\n         super(testName);\n         junit.textui.TestRunner.main(testCaseName);\n     }\n \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return TransformedBag.decorate(new HashBag(), TestTransformedCollection.NOOP_TRANSFORMER);\n     }\n \n--- a/src/test/org/apache/commons/collections/decorators/TestTransformedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestTransformedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedSortedBag.java,v 1.2 2003/08/31 17:28:42 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTransformedSortedBag.java,v 1.3 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.TestSuite;\n \n import org.apache.commons.collections.Bag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestSortedBag;\n import org.apache.commons.collections.TreeBag;\n \n /**\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/08/31 17:28:42 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TestTransformedSortedBag extends TestBag {\n+public class TestTransformedSortedBag extends AbstractTestSortedBag {\n     \n     public TestTransformedSortedBag(String testName) {\n         super(testName);\n         junit.textui.TestRunner.main(testCaseName);\n     }\n \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return TransformedSortedBag.decorate(new TreeBag(), TestTransformedCollection.NOOP_TRANSFORMER);\n     }\n \n--- a/src/test/org/apache/commons/collections/decorators/TestTypedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestTypedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTypedBag.java,v 1.2 2003/09/20 17:05:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTypedBag.java,v 1.3 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.Bag;\n import org.apache.commons.collections.HashBag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestBag;\n \n /**\n  * Extension of {@link TestBag} for exercising the {@link TypedBag}\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/09/20 17:05:36 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Phil Steitz\n  */\n-public class TestTypedBag extends TestBag {\n+public class TestTypedBag extends AbstractTestBag {\n     \n     public TestTypedBag(String testName) {\n         super(testName);\n         return TypedBag.decorate(bag, claz);\n     }\n \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return decorateBag(new HashBag(), objectClass);\n     }\n     \n-    public Bag makeTestBag() {\n+    protected Bag makeTestBag() {\n         return decorateBag(new HashBag(), stringClass);\n     }\n     \n--- a/src/test/org/apache/commons/collections/decorators/TestTypedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/decorators/TestTypedSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTypedSortedBag.java,v 1.2 2003/09/20 17:05:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/decorators/Attic/TestTypedSortedBag.java,v 1.3 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.Bag;\n import org.apache.commons.collections.SortedBag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestSortedBag;\n import org.apache.commons.collections.TreeBag;\n \n /**\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/09/20 17:05:36 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Phil Steitz\n  */\n-public class TestTypedSortedBag extends TestBag {\n+public class TestTypedSortedBag extends AbstractTestSortedBag {\n        \n     public TestTypedSortedBag(String testName) {\n         super(testName);\n         return TypedSortedBag.decorate(bag, claz);\n     }\n \n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return decorateBag(emptyBag, objectClass);\n     }\n     \n-    public Bag makeTestBag() {\n+    protected Bag makeTestBag() {\n         return decorateBag(emptyBag, stringClass);\n     }\n     \n--- a/src/test/org/apache/commons/collections/observed/TestObservableBag.java\n+++ b/src/test/org/apache/commons/collections/observed/TestObservableBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/TestObservableBag.java,v 1.1 2003/09/21 20:01:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/TestObservableBag.java,v 1.2 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n import org.apache.commons.collections.Bag;\n import org.apache.commons.collections.HashBag;\n-import org.apache.commons.collections.TestBag;\n+import org.apache.commons.collections.AbstractTestBag;\n \n /**\n  * Extension of {@link TestBag} for exercising the\n  * {@link ObservableBag} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/09/21 20:01:53 $\n+ * @version $Revision: 1.2 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TestObservableBag extends TestBag implements ObservedTestHelper.ObservedFactory {\n+public class TestObservableBag extends AbstractTestBag implements ObservedTestHelper.ObservedFactory {\n     \n     public TestObservableBag(String testName) {\n         super(testName);\n     }\n \n     //-----------------------------------------------------------------------\n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return ObservableBag.decorate(new HashBag(), ObservedTestHelper.LISTENER);\n     }\n \n--- a/src/test/org/apache/commons/collections/observed/TestObservableSortedBag.java\n+++ b/src/test/org/apache/commons/collections/observed/TestObservableSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/TestObservableSortedBag.java,v 1.1 2003/09/28 21:50:37 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/observed/Attic/TestObservableSortedBag.java,v 1.2 2003/10/02 22:35:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import junit.framework.TestSuite;\n \n import org.apache.commons.collections.Bag;\n-import org.apache.commons.collections.TestSortedBag;\n+import org.apache.commons.collections.AbstractTestSortedBag;\n import org.apache.commons.collections.TreeBag;\n \n /**\n  * {@link ObservedSortedBag} implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/09/28 21:50:37 $\n+ * @version $Revision: 1.2 $ $Date: 2003/10/02 22:35:31 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TestObservableSortedBag extends TestSortedBag implements ObservedTestHelper.ObservedFactory {\n+public class TestObservableSortedBag extends AbstractTestSortedBag implements ObservedTestHelper.ObservedFactory {\n     \n     public TestObservableSortedBag(String testName) {\n         super(testName);\n     }\n \n     //-----------------------------------------------------------------------\n-    public Bag makeBag() {\n+    protected Bag makeBag() {\n         return ObservableSortedBag.decorate(new TreeBag(), ObservedTestHelper.LISTENER);\n     }\n ", "timestamp": 1065134131, "metainfo": ""}