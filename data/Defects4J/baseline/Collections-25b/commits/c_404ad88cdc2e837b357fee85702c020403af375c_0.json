{"sha": "404ad88cdc2e837b357fee85702c020403af375c", "log": "Added @since tags for classes introduced in the 1.0 and 2.0 collection releases.  I did not add @since tags to classes added since the 2.0 release, because I'm not certain whether the next release will be 2.1 or 3.0 or whatever.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayEnumeration.java\n+++ b/src/java/org/apache/commons/collections/ArrayEnumeration.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayEnumeration.java,v 1.4 2002/03/24 21:50:24 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/24 21:50:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayEnumeration.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /**\n  * Enumeration wrapper for array.\n  * \n+ * @since 1.0\n  * @author <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  * @deprecated This class has significant overlap with ArrayIterator,\n  *             and Collections focuses mainly on Java2-style\n--- a/src/java/org/apache/commons/collections/ArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/ArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayIterator.java,v 1.12 2002/03/19 01:33:12 mas Exp $\n- * $Revision: 1.12 $\n- * $Date: 2002/03/19 01:33:12 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ArrayIterator.java,v 1.13 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.13 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n \n /** Implements an {@link Iterator} over an array of objects.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author Mauricio S. Moura\n   * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n-  * @version $Revision: 1.12 $\n+  * @version $Revision: 1.13 $\n   */\n public class ArrayIterator implements Iterator {\n     \n--- a/src/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.4 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ArrayStack.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * is therefore operates faster in environments where you do not need to\n  * worry about multiple thread contention.\n  *\n+ * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.4 $ $Date: 2002/02/10 08:07:42 $\n+ * @version $Revision: 1.5 $ $Date: 2002/06/12 03:59:15 $\n  * @see java.util.Stack\n  */\n \n--- a/src/java/org/apache/commons/collections/Bag.java\n+++ b/src/java/org/apache/commons/collections/Bag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Bag.java,v 1.5 2002/03/13 06:00:20 mas Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/03/13 06:00:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Bag.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * c}</code>.  Calling {@link #getCount(Object)} on <code>a</code> would return\n  * 2, while calling {@link #uniqueSet()} would return <code>{a, b, c}</code>.\n  *\n+ * @since 2.0\n  * @author Chuck Burdick\n  **/\n public interface Bag extends Collection {\n--- a/src/java/org/apache/commons/collections/BeanMap.java\n+++ b/src/java/org/apache/commons/collections/BeanMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.10 2002/03/24 22:00:55 mas Exp $\n- * $Revision: 1.10 $\n- * $Date: 2002/03/24 22:00:55 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.11 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.11 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * If an exception occurs during attempts to get or set a property then the\n   * property is considered non existent in the Map\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n \n--- a/src/java/org/apache/commons/collections/BinaryHeap.java\n+++ b/src/java/org/apache/commons/collections/BinaryHeap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BinaryHeap.java,v 1.6 2002/03/19 04:49:00 mas Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/03/19 04:49:00 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BinaryHeap.java,v 1.7 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /**\n  * Binary heap implementation of {@link PriorityQueue}.\n  *\n+ * @since 1.0\n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  * @author  <a href=\"mailto:ram.chidambaram@telus.com\">Ram Chidambaram</a>\n  * @author  <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n--- a/src/java/org/apache/commons/collections/Closure.java\n+++ b/src/java/org/apache/commons/collections/Closure.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Closure.java,v 1.3 2002/03/13 05:40:30 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:30 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Closure.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * from inside some block, function or iteration which operates on an input \n   * object.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n public interface Closure {\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.7 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.8 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  *\n  * @author Rodney Waldhoff\n  *\n- * @version $Id: CollectionUtils.java,v 1.7 2002/02/10 08:07:42 jstrachan Exp $\n+ * @since 1.0\n+ * @version $Id: CollectionUtils.java,v 1.8 2002/06/12 03:59:15 mas Exp $\n  */\n public class CollectionUtils {\n \n--- a/src/java/org/apache/commons/collections/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.5 2002/03/20 05:16:24 mas Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/03/20 05:16:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CursorableLinkedList.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * <p>\n  * <b>Note that this implementation is not synchronized.</b>\n  *\n+ * @since 1.0\n  * @author Rodney Waldhoff\n- * @version $Id: CursorableLinkedList.java,v 1.5 2002/03/20 05:16:24 mas Exp $\n+ * @version $Id: CursorableLinkedList.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n  * @see java.util.LinkedList\n  */\n public class CursorableLinkedList implements List, Serializable {\n--- a/src/java/org/apache/commons/collections/DefaultMapBag.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapBag.java,v 1.2 2002/06/11 02:41:47 mas Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/06/11 02:41:47 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapBag.java,v 1.3 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * specifying a map instance that will be used to store the contents of \n  * the bag. \n  *\n+ * @since 2.0\n  * @author Chuck Burdick\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n  **/\n--- a/src/java/org/apache/commons/collections/DefaultMapEntry.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapEntry.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapEntry.java,v 1.5 2002/03/20 05:16:24 mas Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/03/20 05:16:24 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DefaultMapEntry.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n \n /** A default implementation of {@link Map.Entry}\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n   */\n--- a/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DoubleOrderedMap.java,v 1.1 2002/01/20 04:36:08 craigmcc Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/01/20 04:36:08 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/DoubleOrderedMap.java,v 1.2 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n * Collection valuesByValue() returns the values in a Collection whose\n * iterator will iterate over the values in ascending order.<p>\n *\n+* @since 2.0\n * @author Marc Johnson (marcj at users dot sourceforge dot net)\n */\n \n--- a/src/java/org/apache/commons/collections/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/EnumerationIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/EnumerationIterator.java,v 1.3 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/EnumerationIterator.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /** Adapter to make {@link Enumeration Enumeration} instances appear\n   * to be {@link Iterator Iterator} instances.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n   */\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ExtendedProperties.java,v 1.6 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ExtendedProperties.java,v 1.7 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * it, go ahead and tune it up!\n  *\n  *\n+ * @since 1.0\n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n  * @author <a href=\"mailto:jon@latchkey.com\">Jon S. Stevens</a>\n  * @author <a href=\"mailto:daveb@miceda-data\">Dave Bryson</a>\n  * @author <a href=\"mailto:kjohnson@transparent.com\">Kent Johnson</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n  * @author <a href=\"mailto:ipriha@surfeu.fi\">Ilkka Priha</a>\n- * @version $Id: ExtendedProperties.java,v 1.6 2002/02/10 08:07:42 jstrachan Exp $\n+ * @version $Id: ExtendedProperties.java,v 1.7 2002/06/12 03:59:15 mas Exp $\n  */\n public class ExtendedProperties extends Hashtable\n {\n--- a/src/java/org/apache/commons/collections/FastArrayList.java\n+++ b/src/java/org/apache/commons/collections/FastArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastArrayList.java,v 1.4 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastArrayList.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * <code>java.util.ArrayList</code> directly (with no synchronization), for\n  * maximum performance.</p>\n  *\n+ * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.4 $ $Date: 2002/02/10 08:07:42 $\n+ * @version $Revision: 1.5 $ $Date: 2002/06/12 03:59:15 $\n  */\n \n public class FastArrayList extends ArrayList {\n--- a/src/java/org/apache/commons/collections/FastHashMap.java\n+++ b/src/java/org/apache/commons/collections/FastHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastHashMap.java,v 1.5 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastHashMap.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * <code>java.util.HashMap</code> directly (with no synchronization), for\n  * maximum performance.</p>\n  *\n+ * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.5 $ $Date: 2002/02/10 08:07:42 $\n+ * @version $Revision: 1.6 $ $Date: 2002/06/12 03:59:15 $\n  */\n \n public class FastHashMap extends HashMap {\n--- a/src/java/org/apache/commons/collections/FastTreeMap.java\n+++ b/src/java/org/apache/commons/collections/FastTreeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastTreeMap.java,v 1.5 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/FastTreeMap.java,v 1.6 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * <code>java.util.TreeMap</code> directly (with no synchronization), for\n  * maximum performance.</p>\n  *\n+ * @since 1.0\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.5 $ $Date: 2002/02/10 08:07:42 $\n+ * @version $Revision: 1.6 $ $Date: 2002/06/12 03:59:15 $\n  */\n \n public class FastTreeMap extends TreeMap {\n--- a/src/java/org/apache/commons/collections/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/FilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterIterator.java,v 1.4 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterIterator.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * specified <code>Predicate</code> evaluates to <code>true</code> are\n   * returned.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author Jan Sorensen\n   */\n--- a/src/java/org/apache/commons/collections/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/FilterListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterListIterator.java,v 1.3 2002/05/13 16:10:37 rwaldhoff Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/05/13 16:10:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/FilterListIterator.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * <code>Predicate</code> evaluates to <code>true</code> are\n   * returned by the iterator.\n   * \n-  * @version $Revision: 1.3 $ $Date: 2002/05/13 16:10:37 $\n+  * @since 2.0\n+  * @version $Revision: 1.4 $ $Date: 2002/06/12 03:59:15 $\n   * @author Rodney Waldhoff\n   */\n public class FilterListIterator extends ProxyListIterator {\n--- a/src/java/org/apache/commons/collections/HashBag.java\n+++ b/src/java/org/apache/commons/collections/HashBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/HashBag.java,v 1.4 2002/03/25 05:50:57 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/25 05:50:57 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/HashBag.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * An implementation of {@link Bag} that is backed by a {@link\n  * HashMap}.\n  *\n+ * @since 2.0\n  * @author Chuck Burdick\n  **/\n public class HashBag extends DefaultMapBag implements Bag {\n--- a/src/java/org/apache/commons/collections/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/IteratorEnumeration.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorEnumeration.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorEnumeration.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n \n /** Adapter to make an {@link Iterator Iterator} instance appear to be an {@link Enumeration Enumeration} instances\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n \n--- a/src/java/org/apache/commons/collections/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/LRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.15 2002/05/09 03:10:46 mas Exp $\n- * $Revision: 1.15 $\n- * $Date: 2002/05/09 03:10:46 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/LRUMap.java,v 1.16 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.16 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * key is now equivalent to LRUMap.getFirst().\n  * </p>\n  * \n+ * @since 1.0\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n  */\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.3 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /**\n  * Miscelaneous utilities to manipulate Lists.\n  *\n+ * @since 1.0\n  * @author  <a href=\"mailto:fede@apache.org\">Federico Barbieri</a>\n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  * @deprecated See {@link org.apache.commons.collections.CollectionUtils}.\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.4 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * It contains various typesafe methods\n   * as well as other useful features like deep copying\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  *\n   * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n   * @author <a href=\"mailto:knielsen@apache.org\">Kasper Nielsen</a>\n   */\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /** see MultiMap for details of an important semantic difference\n  * between this and a typical HashMap\n  *\n+ * @since 2.0\n  * @author Christopher Berry\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n--- a/src/java/org/apache/commons/collections/MultiMap.java\n+++ b/src/java/org/apache/commons/collections/MultiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiMap.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiMap.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * instead of an Integer.\n  * Thus, this is simply a tag interface.\n  *\n+ * @since 2.0\n  * @author Christopher Berry\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n--- a/src/java/org/apache/commons/collections/Predicate.java\n+++ b/src/java/org/apache/commons/collections/Predicate.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Predicate.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Predicate.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /** Performs some predicate which returns true or false based on the input object.\n   * Predicate instances can be used to implement queries or to do filtering.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n public interface Predicate {\n--- a/src/java/org/apache/commons/collections/PriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/PriorityQueue.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/PriorityQueue.java,v 1.4 2002/03/19 04:34:18 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/19 04:34:18 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/PriorityQueue.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * Interface for priority queues.\n  * This interface does not dictate whether it is min or max heap.\n  *\n+ * @since 1.0\n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n  */\n public interface PriorityQueue\n--- a/src/java/org/apache/commons/collections/ProxyIterator.java\n+++ b/src/java/org/apache/commons/collections/ProxyIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ProxyIterator.java,v 1.3 2002/02/25 23:53:20 rwaldhoff Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/02/25 23:53:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ProxyIterator.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n \n /** A Proxy {@link Iterator Iterator} which delegates its methods to a proxy instance.\n   *\n+  * @since 1.0\n   * @see ProxyListIterator\n-  * @version $Revision: 1.3 $ $Date: 2002/02/25 23:53:20 $\n+  * @version $Revision: 1.4 $ $Date: 2002/06/12 03:59:15 $\n   *\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n--- a/src/java/org/apache/commons/collections/ProxyListIterator.java\n+++ b/src/java/org/apache/commons/collections/ProxyListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ProxyListIterator.java,v 1.1 2002/02/25 23:53:20 rwaldhoff Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/02/25 23:53:20 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/ProxyListIterator.java,v 1.2 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * A proxy {@link ListIterator ListIterator} which delegates its\n  * methods to a proxy instance.\n  *\n+ * @since 2.0\n  * @see ProxyIterator\n- * @version $Revision: 1.1 $ $Date: 2002/02/25 23:53:20 $\n+ * @version $Revision: 1.2 $ $Date: 2002/06/12 03:59:15 $\n  * @author Rodney Waldhoff\n  */\n public class ProxyListIterator implements ListIterator {\n--- a/src/java/org/apache/commons/collections/ProxyMap.java\n+++ b/src/java/org/apache/commons/collections/ProxyMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ProxyMap.java,v 1.2 2002/03/21 03:31:09 mas Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/03/21 03:31:09 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ProxyMap.java,v 1.3 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * returned by <code>Collections.synchronizedMap(map)</code>\n  * hides part of <code>map</code>'s public interface.</p>\n  *\n+ * @since 2.0\n  * @author <a href=\"mailto:dlr@collab.net\">Daniel Rall</a>\n- * @since 2.0\n  */\n public abstract class ProxyMap implements Map {\n     \n--- a/src/java/org/apache/commons/collections/SequencedHashMap.java\n+++ b/src/java/org/apache/commons/collections/SequencedHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.11 2002/06/09 07:14:14 mas Exp $\n- * $Revision: 1.11 $\n- * $Date: 2002/06/09 07:14:14 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.12 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  *  required, use {@link Collections#synchronizedMap(Map)} as it is documented,\n  *  or use explicit synchronization controls.\n  *\n+ *  @since 2.0\n  *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</A>\n  * @author <a href=\"mailto:dlr@collab.net\">Daniel Rall</a>\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n--- a/src/java/org/apache/commons/collections/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/SingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SingletonIterator.java,v 1.4 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SingletonIterator.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /** <p><code>SingletonIterator</code> is an {@link Iterator} over a single \n   * object instance.</p>\n   *\n+  * @since 2.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  * @version $Revision: 1.4 $\n+  * @version $Revision: 1.5 $\n   */\n public class SingletonIterator implements Iterator {\n \n--- a/src/java/org/apache/commons/collections/SoftRefHashMap.java\n+++ b/src/java/org/apache/commons/collections/SoftRefHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SoftRefHashMap.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/SoftRefHashMap.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n   * over this Map is efficient.\n   * </p>\n   * \n+  * @since 1.0\n   * @author  James.Dodd\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n--- a/src/java/org/apache/commons/collections/SortedBag.java\n+++ b/src/java/org/apache/commons/collections/SortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SortedBag.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SortedBag.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /**\n  * A type of {@link Bag} that maintains order among its unique\n  * representative members.\n+ *\n+ * @since 2.0\n  * @author Chuck Burdick\n  **/\n public interface SortedBag extends Bag {\n--- a/src/java/org/apache/commons/collections/StringStack.java\n+++ b/src/java/org/apache/commons/collections/StringStack.java\n /**\n  * This class implements a stack for String objects.\n  *\n+ * @since 2.0\n  * @author <a href=\"mailto:jmcnally@collab.net\">John D. McNally</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n- * @version $Id: StringStack.java,v 1.1 2002/02/23 03:52:02 bayard Exp $\n+ * @version $Id: StringStack.java,v 1.2 2002/06/12 03:59:15 mas Exp $\n  */\n public class StringStack implements Serializable\n {\n--- a/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.3 2002/03/19 13:19:13 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/19 13:19:13 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * Provides synchronized wrapper methods for all the methods \n  * defined in the PriorityQueue interface.\n  *\n+ * @since 1.0\n  * @author  <a href=\"mailto:ram.chidambaram@telus.com\">Ram Chidambaram</a> \n  */\n public final class SynchronizedPriorityQueue \n--- a/src/java/org/apache/commons/collections/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/TransformIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/TransformIterator.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/TransformIterator.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n /** A Proxy {@link Iterator Iterator} which uses a {@link Transformer Transformer} instance to \n   * transform the contents of the {@link Iterator Iterator} into some other form\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n \n--- a/src/java/org/apache/commons/collections/Transformer.java\n+++ b/src/java/org/apache/commons/collections/Transformer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Transformer.java,v 1.3 2002/03/13 05:40:31 mas Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/03/13 05:40:31 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Transformer.java,v 1.4 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n \n /** An object capable of transforming an input object into some output object.\n   *\n+  * @since 1.0\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   */\n public interface Transformer {\n--- a/src/java/org/apache/commons/collections/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/TreeBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/TreeBag.java,v 1.4 2002/03/25 05:50:57 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/03/25 05:50:57 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/TreeBag.java,v 1.5 2002/06/12 03:59:15 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/06/12 03:59:15 $\n  *\n  * ====================================================================\n  *\n  * TreeMap}. Order will be maintained among the unique representative\n  * members.\n  *\n+ * @since 2.0\n  * @author Chuck Burdick\n  **/\n public class TreeBag extends DefaultMapBag implements SortedBag, Bag {\n--- a/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n  * for enforcing the natural order in custom implementations\n  * of SortedSet and SortedMap.\n  *\n+ * @since 2.0\n  * @author bayard@generationjava.com\n- * @version $Id: ComparableComparator.java,v 1.4 2002/03/19 05:09:05 mas Exp $\n+ * @version $Id: ComparableComparator.java,v 1.5 2002/06/12 03:59:17 mas Exp $\n  */\n public class ComparableComparator implements Comparator,Serializable {\n \n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.6 2002/03/25 21:20:53 morgand Exp $\n- * $Revision: 1.6 $\n- * $Date: 2002/03/25 21:20:53 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.7 2002/06/12 03:59:17 mas Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2002/06/12 03:59:17 $\n  *\n  * ====================================================================\n  *\n  * it <i>is</i> thread-safe to perform multiple comparisons\n  * after all the setup operations are complete.</p>\n  * \n+ * @since 2.0\n  * @author Morgan Delagrange\n  */\n public class ComparatorChain implements Comparator,Serializable {\n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n /**\n  * Reverses the order of another comparator.\n  * \n+ * @since 2.0\n  * @author bayard@generationjava.com\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- * @version $Id: ReverseComparator.java,v 1.7 2002/03/20 17:09:16 morgand Exp $\n+ * @version $Id: ReverseComparator.java,v 1.8 2002/06/12 03:59:17 mas Exp $\n  */\n public class ReverseComparator implements Comparator,Serializable {\n ", "timestamp": 1023854357, "metainfo": ""}