{"sha": "730d3e5569e083fdb3d07bce60bdf669dbf259e5", "log": "Fix copy constructor to work on JDK1.3   ", "commit": "\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n  * <code>list</code> will be a list containing \"A\", \"B\", \"C\".\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.19 $ $Date: 2004/05/26 21:56:05 $\n+ * @version $Revision: 1.20 $ $Date: 2004/06/09 22:11:54 $\n  * \n  * @author Christopher Berry\n  * @author James Strachan\n      * @param mapToCopy  a Map to copy\n      */\n     public MultiHashMap(Map mapToCopy) {\n-        super(mapToCopy);\n+        // be careful of JDK 1.3 vs 1.4 differences\n+        super((int) (mapToCopy.size() * 1.4f));\n         if (mapToCopy instanceof MultiMap) {\n-            for (Iterator it = entrySet().iterator(); it.hasNext();) {\n+            for (Iterator it = mapToCopy.entrySet().iterator(); it.hasNext();) {\n                 Map.Entry entry = (Map.Entry) it.next();\n                 Collection coll = (Collection) entry.getValue();\n                 Collection newColl = createCollection(coll);\n-                entry.setValue(newColl);\n-            }\n+                super.put(entry.getKey(), newColl);\n+            }\n+        } else {\n+            putAll(mapToCopy);\n         }\n     }\n \n--- a/src/test/org/apache/commons/collections/TestMultiHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestMultiHashMap.java\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n \n /**\n  * Unit Tests for <code>MultiHashMap</code>.\n  * \n- * @version $Revision: 1.19 $ $Date: 2004/05/14 22:33:58 $\n+ * @version $Revision: 1.20 $ $Date: 2004/06/09 22:11:54 $\n  *\n  * @author Unknown\n  */\n         assertEquals(2, clonedColl.size());\n     }\n \n-    public void testConstructor() {\n+    public void testConstructorCopy1() {\n         MultiHashMap map = new MultiHashMap();\n         map.put(\"A\", \"1\");\n         map.put(\"A\", \"2\");\n         assertEquals(2, coll.size());\n         assertEquals(1, newMap.size());\n         assertEquals(2, newColl.size());\n+        \n         map.put(\"A\", \"3\");\n         assertEquals(1, map.size());\n         assertEquals(3, coll.size());\n         assertEquals(1, newMap.size());\n         assertEquals(2, newColl.size());\n     }\n+\n+    public void testConstructorCopy2() {\n+        Map map = new HashMap();\n+        map.put(\"A\", \"1\");\n+        map.put(\"B\", \"2\");\n+        assertEquals(2, map.size());\n+        \n+        MultiHashMap newMap = new MultiHashMap(map);\n+        Collection newColl = (Collection) newMap.get(\"A\");\n+        assertNotSame(map, newMap);\n+        assertEquals(2, map.size());\n+        assertEquals(2, newMap.size());\n+        assertEquals(1, newColl.size());\n+        \n+        map.put(\"A\", \"3\");\n+        assertEquals(2, map.size());\n+        assertEquals(2, newMap.size());\n+        assertEquals(1, newColl.size());\n+        \n+        map.put(\"C\", \"4\");\n+        assertEquals(3, map.size());\n+        assertEquals(2, newMap.size());\n+        assertEquals(1, newColl.size());\n+    }\n+\n }", "timestamp": 1086819114, "metainfo": ""}