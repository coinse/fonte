{"sha": "3441c43924c2321c48a0a1302d2cb1fd9cd0fae0", "log": "Better test error messages Handle small test collections   ", "commit": "\n--- a/src/test/org/apache/commons/collections/AbstractTestCollection.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestCollection.java,v 1.5 2003/10/10 21:19:39 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestCollection.java,v 1.6 2003/10/19 00:25:11 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Collection} fails.\n  *\n- * @version $Revision: 1.5 $ $Date: 2003/10/10 21:19:39 $\n+ * @version $Revision: 1.6 $ $Date: 2003/10/19 00:25:11 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n             // no match found!\n             if(!match) {\n                 fail(\"Collection should not contain a value that the \" +\n-                     \"confirmed collection does not have.\");\n+                     \"confirmed collection does not have: \" + o);\n             }\n         }\n         \n         // make sure calls to \"containsAll\" don't change anything\n         verify();\n \n-        col = Arrays.asList(getFullElements()).subList(2, 5);\n+        int min = (getFullElements().length < 2 ? 0 : 2);\n+        int max = (getFullElements().length == 1 ? 1 : \n+                    (getFullElements().length <= 5 ? getFullElements().length - 1 : 5));\n+        col = Arrays.asList(getFullElements()).subList(min, max);\n         assertTrue(\"Full collection should containAll partial full \" +\n                    \"elements\", collection.containsAll(col));\n         assertTrue(\"Full collection should containAll itself\", \n                    collection.containsAll(collection));\n-\n         // make sure calls to \"containsAll\" don't change anything\n         verify();\n         \n         \n         resetFull();\n         int size = collection.size();\n-        Collection all = Arrays.asList(getFullElements()).subList(2, 5);\n+        int min = (getFullElements().length < 2 ? 0 : 2);\n+        int max = (getFullElements().length == 1 ? 1 : \n+                    (getFullElements().length <= 5 ? getFullElements().length - 1 : 5));\n+        Collection all = Arrays.asList(getFullElements()).subList(min, max);\n         assertTrue(\"Full collection removeAll should work\", \n                    collection.removeAll(all));\n         confirmed.removeAll(all);\n         assertEquals(\"Collection size shouldn't change\", size, \n                      collection.size());\n         \n-        resetFull();\n-        size = collection.size();\n-        assertTrue(\"Collection should changed by partial retainAll\",\n-                   collection.retainAll(elements.subList(2, 5)));\n-        confirmed.retainAll(elements.subList(2, 5));\n-        verify();\n-        \n-        Iterator iter = collection.iterator();\n-        while (iter.hasNext()) {\n-            assertTrue(\"Collection only contains retained element\", \n-                       elements.subList(2, 5).contains(iter.next()));\n+        if (getFullElements().length > 1) {\n+            resetFull();\n+            size = collection.size();\n+            int min = (getFullElements().length < 2 ? 0 : 2);\n+            int max = (getFullElements().length <= 5 ? getFullElements().length - 1 : 5);\n+            assertTrue(\"Collection should changed by partial retainAll\",\n+                       collection.retainAll(elements.subList(min, max)));\n+            confirmed.retainAll(elements.subList(min, max));\n+            verify();\n+        \n+            Iterator iter = collection.iterator();\n+            while (iter.hasNext()) {\n+                assertTrue(\"Collection only contains retained element\", \n+                           elements.subList(min, max).contains(iter.next()));\n+            }\n         }\n         \n         resetFull();", "timestamp": 1066523111, "metainfo": ""}