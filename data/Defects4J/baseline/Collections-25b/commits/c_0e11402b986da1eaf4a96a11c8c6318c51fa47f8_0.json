{"sha": "0e11402b986da1eaf4a96a11c8c6318c51fa47f8", "log": "[COLLECTIONS-562] Upgrade minimum java requirement to Java 6. Replace ArrayStack with ArrayDeque.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java\n  */\n package org.apache.commons.collections4.iterators;\n \n+import java.util.ArrayDeque;\n+import java.util.Deque;\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n-import org.apache.commons.collections4.ArrayStack;\n import org.apache.commons.collections4.Transformer;\n \n /**\n  * @since 3.1\n  * @version $Id$\n  */\n-@SuppressWarnings(\"deprecation\") // we use the deprecated ArrayStack - change to ArrayDeque (Java 1.6)\n public class ObjectGraphIterator<E> implements Iterator<E> {\n \n     /** The stack of iterators */\n-    private final ArrayStack<Iterator<? extends E>> stack = new ArrayStack<Iterator<? extends E>>(8);\n+    private final Deque<Iterator<? extends E>> stack = new ArrayDeque<Iterator<? extends E>>(8);\n     /** The root object in the tree */\n     private E root;\n     /** The transformer to use */\n--- a/src/main/java/org/apache/commons/collections4/iterators/PushbackIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/PushbackIterator.java\n  */\n package org.apache.commons.collections4.iterators;\n \n+import java.util.ArrayDeque;\n+import java.util.Deque;\n import java.util.Iterator;\n-\n-import org.apache.commons.collections4.ArrayStack;\n \n /**\n  * Decorates an iterator to support pushback of elements.\n  * @since 4.0\n  * @version $Id$\n  */\n-@SuppressWarnings(\"deprecation\") // replace ArrayStack with ArrayDeque when moving to Java 6\n public class PushbackIterator<E> implements Iterator<E> {\n \n     /** The iterator being decorated. */\n     private final Iterator<? extends E> iterator;\n \n     /** The LIFO queue containing the pushed back items. */\n-    private ArrayStack<E> items = new ArrayStack<E>();\n+    private Deque<E> items = new ArrayDeque<E>();\n \n     //-----------------------------------------------------------------------\n     /**\n--- a/src/main/java/org/apache/commons/collections4/list/TreeList.java\n+++ b/src/main/java/org/apache/commons/collections4/list/TreeList.java\n package org.apache.commons.collections4.list;\n \n import java.util.AbstractList;\n+import java.util.ArrayDeque;\n import java.util.Collection;\n import java.util.ConcurrentModificationException;\n+import java.util.Deque;\n import java.util.Iterator;\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n-import org.apache.commons.collections4.ArrayStack;\n import org.apache.commons.collections4.OrderedIterator;\n \n /**\n  * @since 3.1\n  * @version $Id$\n  */\n-@SuppressWarnings(\"deprecation\") // replace ArrayStack by ArrayDeque when moving to Java 1.6\n public class TreeList<E> extends AbstractList<E> {\n //    add; toArray; iterator; insert; get; indexOf; remove\n //    TreeList = 1260;7360;3080;  160;   170;3400;  170;\n                 // find a subtree, s, that is no taller than me. (While we are\n                 // navigating left, we store the nodes we encounter in a stack\n                 // so that we can re-balance them in step 4.)\n-                final ArrayStack<AVLNode<E>> sAncestors = new ArrayStack<AVLNode<E>>();\n+                final Deque<AVLNode<E>> sAncestors = new ArrayDeque<AVLNode<E>>();\n                 AVLNode<E> s = otherTree;\n                 int sAbsolutePosition = s.relativePosition + currentSize;\n                 int sParentAbsolutePosition = 0;\n             }\n             otherTree = otherTree.removeMin();\n \n-            final ArrayStack<AVLNode<E>> sAncestors = new ArrayStack<AVLNode<E>>();\n+            final Deque<AVLNode<E>> sAncestors = new ArrayDeque<AVLNode<E>>();\n             AVLNode<E> s = this;\n             int sAbsolutePosition = s.relativePosition;\n             int sParentAbsolutePosition = 0;", "timestamp": 1432464598, "metainfo": ""}