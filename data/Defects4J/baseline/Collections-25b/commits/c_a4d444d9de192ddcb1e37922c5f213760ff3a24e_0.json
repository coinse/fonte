{"sha": "a4d444d9de192ddcb1e37922c5f213760ff3a24e", "log": "[COLLECTIONS-480] Narrow return type of BidiMap.values to Set. Thanks to Hollis Waite.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/BidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/BidiMap.java\n  * limitations under the License.\n  */\n package org.apache.commons.collections4;\n+\n+import java.util.Set;\n \n /**\n  * Defines a map that allows bidirectional lookup between key and values.\n      */\n     BidiMap<V, K> inverseBidiMap();\n \n+    /**\n+     * Returns a {@link Set} view of the values contained in this map.\n+     * The set is backed by the map, so changes to the map are reflected\n+     * in the set, and vice-versa.  If the map is modified while an iteration\n+     * over the set is in progress (except through the iterator's own\n+     * <tt>remove</tt> operation), the results of the iteration are undefined.\n+     * The set supports element removal, which removes the corresponding\n+     * mapping from the map, via the <tt>Iterator.remove</tt>,\n+     * <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n+     * <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n+     * support the <tt>add</tt> or <tt>addAll</tt> operations.\n+     *\n+     * @return a set view of the values contained in this map\n+     */\n+    Set<V> values();\n }\n--- a/src/main/java/org/apache/commons/collections4/bidimap/AbstractBidiMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/AbstractBidiMapDecorator.java\n  * limitations under the License.\n  */\n package org.apache.commons.collections4.bidimap;\n+\n+import java.util.Set;\n \n import org.apache.commons.collections4.BidiMap;\n import org.apache.commons.collections4.MapIterator;\n         return decorated().inverseBidiMap();\n     }\n \n+    public Set<V> values() {\n+        return decorated().values();\n+    }\n+\n }\n--- a/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java\n     /**\n      * View of the values.\n      */\n-    transient Collection<V> values = null;\n+    transient Set<V> values = null;\n \n     /**\n      * View of the entries.\n      *\n      * @return the values view\n      */\n-    public Collection<V> values() {\n+    public Set<V> values() {\n         if (values == null) {\n             values = new Values<V>(this);\n         }\n--- a/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.AbstractSet;\n-import java.util.Collection;\n import java.util.ConcurrentModificationException;\n import java.util.Iterator;\n import java.util.Map;\n      *\n      * @return a set view of the values contained in this map.\n      */\n-    public Collection<V> values() {\n+    public Set<V> values() {\n         if (valuesSet == null) {\n             valuesSet = new ValueView(KEY);\n         }\n             return inverseKeySet;\n         }\n \n-        public Collection<K> values() {\n+        public Set<K> values() {\n             if (inverseValuesSet == null) {\n                 inverseValuesSet = new KeyView(VALUE);\n             }\n--- a/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java\n  */\n package org.apache.commons.collections4.bidimap;\n \n-import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.collections4.BidiMap;\n import org.apache.commons.collections4.MapIterator;\n import org.apache.commons.collections4.Unmodifiable;\n-import org.apache.commons.collections4.collection.UnmodifiableCollection;\n import org.apache.commons.collections4.iterators.UnmodifiableMapIterator;\n import org.apache.commons.collections4.map.UnmodifiableEntrySet;\n \n     }\n \n     @Override\n-    public Collection<V> values() {\n-        final Collection<V> coll = super.values();\n-        return UnmodifiableCollection.unmodifiableCollection(coll);\n+    public Set<V> values() {\n+        final Set<V> set = super.values();\n+        return UnmodifiableSet.unmodifiableSet(set);\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java\n  */\n package org.apache.commons.collections4.bidimap;\n \n-import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.collections4.OrderedBidiMap;\n import org.apache.commons.collections4.OrderedMapIterator;\n import org.apache.commons.collections4.Unmodifiable;\n-import org.apache.commons.collections4.collection.UnmodifiableCollection;\n import org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator;\n import org.apache.commons.collections4.map.UnmodifiableEntrySet;\n \n     }\n \n     @Override\n-    public Collection<V> values() {\n-        final Collection<V> coll = super.values();\n-        return UnmodifiableCollection.unmodifiableCollection(coll);\n+    public Set<V> values() {\n+        final Set<V> set = super.values();\n+        return UnmodifiableSet.unmodifiableSet(set);\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java\n  */\n package org.apache.commons.collections4.bidimap;\n \n-import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n import java.util.SortedMap;\n import org.apache.commons.collections4.OrderedMapIterator;\n import org.apache.commons.collections4.SortedBidiMap;\n import org.apache.commons.collections4.Unmodifiable;\n-import org.apache.commons.collections4.collection.UnmodifiableCollection;\n import org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator;\n import org.apache.commons.collections4.map.UnmodifiableEntrySet;\n import org.apache.commons.collections4.map.UnmodifiableSortedMap;\n     }\n \n     @Override\n-    public Collection<V> values() {\n-        final Collection<V> coll = super.values();\n-        return UnmodifiableCollection.unmodifiableCollection(coll);\n+    public Set<V> values() {\n+        final Set<V> set = super.values();\n+        return UnmodifiableSet.unmodifiableSet(set);\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1378757439, "metainfo": ""}