{"sha": "bcdca8e6c9930f0ab2b40f1b752bdaa00914ce22", "log": "Making the other two addAll methods return boolean on whether anything changes (somewhat related to COLLECTIONS-223)  ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n      * @param enumeration  the enumeration of elements to add, must not be null\n      * @throws NullPointerException if the collection or enumeration is null\n      */\n-     //TODO return boolean or collection - check other add() methods too.\n-    public static <C> void addAll(Collection<C> collection, Enumeration<? extends C> enumeration) {\n+    public static <C> boolean addAll(Collection<C> collection, Enumeration<? extends C> enumeration) {\n+        boolean changed = false;\n         while (enumeration.hasMoreElements()) {\n-            collection.add(enumeration.nextElement());\n-        }\n+            changed |= collection.add(enumeration.nextElement());\n+        }\n+        return changed;\n     }\n \n     /**\n      * @throws NullPointerException\n      *             if the collection or array is null\n      */\n-    public static <C> void addAll(Collection<C> collection, C[] elements) {\n+    public static <C> boolean addAll(Collection<C> collection, C[] elements) {\n+        boolean changed = false;\n         for (int i = 0, size = elements.length; i < size; i++) {\n-            collection.add(elements[i]);\n-        }\n+            changed |= collection.add(elements[i]);\n+        }\n+        return changed;\n     }\n \n     /**", "timestamp": 1276988459, "metainfo": ""}