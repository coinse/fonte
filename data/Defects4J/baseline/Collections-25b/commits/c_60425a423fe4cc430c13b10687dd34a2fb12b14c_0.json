{"sha": "60425a423fe4cc430c13b10687dd34a2fb12b14c", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r555925 | skestle | 2007-07-13 03:39:24 -0700 (Fri, 13 Jul 2007) | 2 lines          Added Edwin Tellman's patch for COLLECTIONS-243.       It all seems pretty reasonable, and it should all be checked again as the project is worked through     ------------------------------------------------------------------------     r471202 | scolebourne | 2006-11-04 06:21:44 -0800 (Sat, 04 Nov 2006) | 1 line          Remove getCollection() - use covariant decorated()     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/set/PredicatedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSet.java\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class PredicatedSet extends PredicatedCollection implements Set {\n+public class PredicatedSet<E> extends PredicatedCollection<E> implements Set<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -684521469108685117L;\n      * \n      * @param set  the set to decorate, must not be null\n      * @param predicate  the predicate to use for validation, must not be null\n+     * @return a decorated set\n      * @throws IllegalArgumentException if set or predicate is null\n      * @throws IllegalArgumentException if the set contains invalid elements\n      */\n-    public static Set decorate(Set set, Predicate predicate) {\n-        return new PredicatedSet(set, predicate);\n+    public static <T> Set<T> decorate(Set<T> set, Predicate<? super T> predicate) {\n+        return new PredicatedSet<T>(set, predicate);\n     }\n \n     //-----------------------------------------------------------------------\n      * @throws IllegalArgumentException if set or predicate is null\n      * @throws IllegalArgumentException if the set contains invalid elements\n      */\n-    protected PredicatedSet(Set set, Predicate predicate) {\n+    protected PredicatedSet(Set<E> set, Predicate<? super E> predicate) {\n         super(set, predicate);\n     }\n \n      * \n      * @return the decorated set\n      */\n-    protected Set getSet() {\n-        return (Set) getCollection();\n+    protected Set<E> decorated() {\n+        return (Set<E>) super.decorated();\n     }\n \n }", "timestamp": 1252994201, "metainfo": ""}