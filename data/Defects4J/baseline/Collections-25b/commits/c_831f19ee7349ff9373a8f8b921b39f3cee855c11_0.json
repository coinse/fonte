{"sha": "831f19ee7349ff9373a8f8b921b39f3cee855c11", "log": "Removed the deprecated method from TestCollection, as no one uses it anymore.  Modified TestCursorableLinkedList so that serialization tests on sublists and sub-sublists are ignored.  Submitted by:  Paul Jack ( pjack at sfaf dot org )   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestCollection.java\n+++ b/src/test/org/apache/commons/collections/TestCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.7 2002/06/18 02:51:12 mas Exp $\n- * $Revision: 1.7 $\n- * $Date: 2002/06/18 02:51:12 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.8 2002/06/21 03:32:06 mas Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2002/06/21 03:32:06 $\n  *\n  * ====================================================================\n  *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- * @version $Id: TestCollection.java,v 1.7 2002/06/18 02:51:12 mas Exp $\n+ * @version $Id: TestCollection.java,v 1.8 2002/06/21 03:32:06 mas Exp $\n  */\n public abstract class TestCollection extends TestObject {\n \n \n \n     /**\n-     * Try to add the given object to the given Collection.\n-     * Returns <tt>true</tt> if the element was added,\n-     * <tt>false</tt> otherwise.\n-     *\n-     * Fails any Throwable except UnsupportedOperationException,\n-     * ClassCastException, or IllegalArgumentException is thrown.\n-     *\n-     * @deprecated explicitly check for allowed exceptions rather than using\n-     * this method to assume any of UnsupportedOperationException,\n-     * ClassCaseException, or IllegalArgumentException are allowed.  \n-     */\n-    protected boolean tryToAdd(Collection c,Object obj) {\n-        // FIXME: Delete this method after TestList is patched\n-        try {\n-            return c.add(obj);\n-        } catch(UnsupportedOperationException e) {\n-            return false;\n-        } catch(ClassCastException e) {\n-            return false;\n-        } catch(IllegalArgumentException e) {\n-            return false;\n-        } catch(Throwable t) {\n-            t.printStackTrace();\n-            fail(\"Collection.add should only throw UnsupportedOperationException, ClassCastException or IllegalArgumentException. Found \" + t.toString());\n-            return false; // never get here, since fail throws exception\n-        }\n-    }\n-\n-\n-    \n-    /**\n      *  Returns a list of elements suitable for return by\n      *  {@link getFullElements()}.  The array returned by this method\n      *  does not include null, but does include a variety of objects \n--- a/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.5 2002/06/18 05:35:58 mas Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/06/18 05:35:58 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.6 2002/06/21 03:32:06 mas Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/06/21 03:32:06 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Rodney Waldhoff\n- * @version $Id: TestCursorableLinkedList.java,v 1.5 2002/06/18 05:35:58 mas Exp $\n+ * @version $Id: TestCursorableLinkedList.java,v 1.6 2002/06/21 03:32:06 mas Exp $\n  */\n public class TestCursorableLinkedList extends TestList {\n     public TestCursorableLinkedList(String testName) {\n         assertTrue(list.equals(list2));\n     }\n \n+\n+    /**\n+     *  Ignore the serialization tests for sublists and sub-sublists.\n+     *\n+     *  @return an array of sublist serialization test names \n+     */\n+    public String[] ignoredSimpleTests() {\n+        ArrayList list = new ArrayList();\n+        String prefix = \"TestCursorableLinkedList\";\n+        String bulk = \".bulkTestSubList\";\n+        String[] ignored = new String[] {\n+          \".testEmptyListSerialization\",\n+          \".testFullListSerialization\", \n+          \".testEmptyListCompatibility\", \n+          \".testFullListCompatibility\", \n+          \".testSimpleSerialization\",\n+          \".testCanonicalEmptyCollectionExists\",\n+          \".testCanonicalFullCollectionExists\"\n+        };\n+        for (int i = 0; i < ignored.length; i++) {\n+            list.add(prefix + bulk + ignored[i]);\n+            list.add(prefix + bulk + bulk + ignored[i]);\n+        }\n+        return (String[])list.toArray(new String[0]);\n+    }\n+\n }", "timestamp": 1024630326, "metainfo": ""}