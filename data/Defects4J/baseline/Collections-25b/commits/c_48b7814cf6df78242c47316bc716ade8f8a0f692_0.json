{"sha": "48b7814cf6df78242c47316bc716ade8f8a0f692", "log": "Document null behaviour   ", "commit": "\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.21 2003/04/26 14:24:48 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.22 2003/04/26 14:28:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *  </ul>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.21 $ $Date: 2003/04/26 14:24:48 $\n+ * @version $Revision: 1.22 $ $Date: 2003/04/26 14:28:31 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n      * Gets a new Properties object initialised with the values from a Map.\n      * A null input will return an empty properties object.\n      * \n-     * @param map  the map to convert to a Properties object\n+     * @param map  the map to convert to a Properties object, may not be null\n      * @return the properties object\n+     * @throws NullPointerException if the map is null\n      */\n     public static Properties toProperties(Map map) {\n         Properties answer = new Properties();\n     /**\n      * Creates a new HashMap using data copied from a ResourceBundle.\n      * \n-     * @param resourceBundle  the resource bundle to convert\n+     * @param resourceBundle  the resource bundle to convert, may not be null\n      * @return the hashmap containing the data\n+     * @throws NullPointerException if the bundle is null\n      */\n     public static Map toMap(ResourceBundle resourceBundle) {\n         Enumeration enum = resourceBundle.getKeys();\n      * value, but the exact key which will be mapped is undefined.\n      * \n      * @see DoubleOrderedMap\n-     * @param map  the map to invert\n+     * @param map  the map to invert, may not be null\n      * @return a new HashMap containing the inverted data\n+     * @throws NullPointerException if the map is null\n      */\n     public static Map invertMap(Map map) {\n         Map out = new HashMap(map.size());\n      * We will still throw a NPE if the key is null cause that should\n      * never happen.\n      * \n-     * @param map  the map to add to\n+     * @param map  the map to add to, may not be null\n      * @param key  the key\n      * @param value  the value\n+     * @throws NullPointerException if the map is null\n      */\n     public static void safeAddToMap(Map map, Object key, Object value) throws NullPointerException {\n         if (value == null) {", "timestamp": 1051367311, "metainfo": ""}