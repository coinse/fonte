{"sha": "f7a557a38ad44c819fb139203f99c188c0e92604", "log": "[COLLECTIONS-444] Apply fix as suggested by John Vasileff.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/list/SetUniqueList.java\n+++ b/src/main/java/org/apache/commons/collections4/list/SetUniqueList.java\n      * Sets the value at the specified index avoiding duplicates.\n      * <p>\n      * The object is set into the specified index. Afterwards, any previous\n-     * duplicate is removed If the object is not already in the list then a\n+     * duplicate is removed. If the object is not already in the list then a\n      * normal set occurs. If it is present, then the old version is removed.\n      * \n      * @param index\n         final E removed = super.set(index, object);\n \n         if (pos != -1 && pos != index) {\n-            // the object is already in the uniq list\n+            // the object is already in the unique list\n             // (and it hasn't been swapped with itself)\n             super.remove(pos); // remove the duplicate by index\n-            set.remove(removed); // remove the item deleted by the set\n-        } else if (pos == -1) {\n-            set.add(object); // add the new item to the unique set\n-            set.remove(removed); // remove the item deleted by the set\n-        }\n-        \n+        }\n+\n+        set.remove(removed); // remove the item deleted by the set\n+        set.add(object); // add the new item to the unique set\n+\n         return removed; // return the item deleted by the set\n     }\n \n--- a/src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java\n+++ b/src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java\n         assertTrue(lset.contains(obj2));\n     }\n \n-    @SuppressWarnings(\"serial\")\n     class SetUniqueList307 extends SetUniqueList<E> {\n         /**\n          * Generated serial version ID.", "timestamp": 1366222368, "metainfo": ""}