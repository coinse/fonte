{"sha": "dff90a587e35e39fe276f4f5735bc00df32f54e2", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/Buffer.java\n+++ b/src/java/org/apache/commons/collections/Buffer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Buffer.java,v 1.5 2003/08/31 17:26:44 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Buffer.java,v 1.6 2003/09/06 20:41:12 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * well-defined order.  The removal order can be based on insertion order\n  * (eg, a FIFO queue or a LIFO stack), on access order (eg, an LRU cache), \n  * on some arbitrary comparator (eg, a priority queue) or on any other \n- * well-defined ordering.<P>\n- *\n+ * well-defined ordering.\n+ * <p>\n  * Note that the removal order is not necessarily the same as the iteration\n- * order.  A <Code>Buffer</Code> implementation may have equivalent removal\n- * and iteration orders, but this is not required.<P>\n- *\n+ * order.  A <code>Buffer</code> implementation may have equivalent removal\n+ * and iteration orders, but this is not required.\n+ * <p>\n  * This interface does not specify any behavior for \n  * {@link Object#equals(Object)} and {@link Object#hashCode} methods.  It\n- * is therefore possible for a <Code>Buffer</Code> implementation to also\n+ * is therefore possible for a <code>Buffer</code> implementation to also\n  * also implement {@link java.util.List}, {@link java.util.Set} or \n  * {@link Bag}.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:26:44 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/06 20:41:12 $\n  * \n  * @author Avalon\n- * @author <a href=\"bloritsch@apache.org\">Berin Loritsch</a>\n+ * @author Berin Loritsch\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  */\n public interface Buffer extends Collection {\n \n     /**\n-     * Removes the next object from the buffer.\n+     * Gets and removes the next object from the buffer.\n      *\n-     * @return  the removed object\n+     * @return the next object in the buffer, which is also removed\n      * @throws BufferUnderflowException if the buffer is already empty\n      */\n     Object remove();\n \n     /**\n-     * Returns the next object in the buffer without removing it.\n+     * Gets the next object from the buffer without removing it.\n      *\n-     * @return  the next object in the buffer\n+     * @return the next object in the buffer, which is not removed\n      * @throws BufferUnderflowException if the buffer is empty\n      */\n     Object get();", "timestamp": 1062880872, "metainfo": ""}