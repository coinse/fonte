{"sha": "161aa07d8b2312d9143c7156fa529a4a1e1e9909", "log": "[COLLECTIONS-512] Added note to javadoc of AbstractCollectionDecorator.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java\n         return decorated().retainAll(coll);\n     }\n \n+    /**\n+     * <b>Note</b>: depending on the decorated collection, this implementation\n+     * might break the general contract of {@link Collection#equals(Object)} as\n+     * symmetry, i.e. {@code a.equals(b) == b.equals(a)}, can not be guaranteed.\n+     * As a consequence, <b>do not use</b> this method for value comparisons of\n+     * arbitrary collections or decorators, use\n+     * {@link CollectionUtils#isEqualCollection(Collection, Collection)} instead.\n+     * <p>\n+     * {@inheritDoc}\n+     */\n     @Override\n     public boolean equals(final Object object) {\n         return object == this || decorated().equals(object);", "timestamp": 1420203766, "metainfo": ""}