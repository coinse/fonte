{"sha": "0145c16a6ff8dced5e3cdb899a250dcd49ef780f", "log": "PR: COLLECTIONS-360 Prevent an NPE in FilterListIterator.next() and FilterListIterator.previous()   ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n             clearNextObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasNext()) {\n             E object = iterator.next();\n             if (predicate.evaluate(object)) {\n             clearPreviousObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasPrevious()) {\n             E object = iterator.previous();\n             if (predicate.evaluate(object)) {\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n package org.apache.commons.collections.iterators;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n import java.util.ListIterator;\n import java.util.Random;\n \n import junit.framework.TestCase;\n import org.apache.commons.collections.Predicate;\n+import org.apache.commons.collections.PredicateUtils;\n+import org.apache.commons.collections.list.GrowthList;\n+import org.junit.Assert;\n \n /**\n  * Tests the FilterListIterator class.\n         assertEquals(expected.previous(), filtered.previous());\n     }\n \n+    /**\n+     * Test for {@link https://issues.apache.org/jira/browse/COLLECTIONS-360 COLLECTIONS-360}.\n+     */\n+    public void testCollections360() throws Throwable {\n+        Collection<Predicate<Object>> var7 = new GrowthList<Predicate<Object>>();\n+        Predicate<Object> var9 = PredicateUtils.anyPredicate(var7);\n+        FilterListIterator<Object> var13 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var13.hasNext());\n+        FilterListIterator<Object> var14 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var14.hasPrevious());\n+    }\n+\n     // Utilities\n \n     private void walkForward(ListIterator<?> expected, ListIterator<?> testing) {", "timestamp": 1299017410, "metainfo": ""}