{"sha": "797b45682f7177e817dbd5832ba52a6b26f7c10d", "log": "Update file layout for consistency   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java,v 1.2 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Daniel Rall\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractMapDecorator implements Map {\n-    \n+\n     /** The map to decorate */\n     protected final Map map;\n \n--- a/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java,v 1.3 2003/12/01 22:48:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java,v 1.4 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/01 22:48:59 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractOrderedMapDecorator extends AbstractMapDecorator implements OrderedMap {\n-    \n+public abstract class AbstractOrderedMapDecorator\n+        extends AbstractMapDecorator implements OrderedMap {\n+\n     /**\n      * Constructor that wraps (not copies).\n      *\n--- a/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java,v 1.2 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * But, you might want that loophole, so this class is kept simple.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  */\n-public abstract class AbstractSortedMapDecorator extends AbstractMapDecorator implements SortedMap {\n-    \n+public abstract class AbstractSortedMapDecorator\n+        extends AbstractMapDecorator implements SortedMap {\n+\n     /**\n      * Constructor that wraps (not copies).\n      *\n--- a/src/java/org/apache/commons/collections/map/PredicatedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/PredicatedMap.java,v 1.4 2003/12/29 15:08:15 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/PredicatedMap.java,v 1.5 2004/01/05 22:15:15 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/29 15:08:15 $\n+ * @version $Revision: 1.5 $ $Date: 2004/01/05 22:15:15 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n     public static Map decorate(Map map, Predicate keyPredicate, Predicate valuePredicate) {\n         return new PredicatedMap(map, keyPredicate, valuePredicate);\n     }\n-    \n+\n     //-----------------------------------------------------------------------\n     /**\n      * Constructor that wraps (not copies).\n--- a/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java,v 1.2 2004/01/05 22:15:15 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:15 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class PredicatedSortedMap extends PredicatedMap implements SortedMap {\n+public class PredicatedSortedMap\n+        extends PredicatedMap implements SortedMap {\n \n     /**\n      * Factory method to create a predicated (validating) sorted map.\n--- a/src/java/org/apache/commons/collections/map/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/map/ReferenceMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ReferenceMap.java,v 1.6 2003/12/29 15:08:15 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/ReferenceMap.java,v 1.7 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * @see java.lang.ref.Reference\n  * \n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.6 $ $Date: 2003/12/29 15:08:15 $\n+ * @version $Revision: 1.7 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Paul Jack\n  */\n      */\n     private static final long serialVersionUID = -3370601314380922368L;\n \n-\n     /**\n      *  Constant indicating that hard references should be used.\n      */\n     public static final int HARD = 0;\n \n-\n     /**\n      *  Constant indicating that soft references should be used.\n      */\n     public static final int SOFT = 1;\n \n-\n     /**\n      *  Constant indicating that weak references should be used.\n      */\n     public static final int WEAK = 2;\n \n-\n     // --- serialized instance variables:\n-\n \n     /**\n      *  The reference type for keys.  Must be HARD, SOFT, WEAK.\n      */\n     private int keyType;\n \n-\n     /**\n      *  The reference type for values.  Must be HARD, SOFT, WEAK.\n      *  Note: I originally marked this field as final, but then this class\n      *  @serial\n      */\n     private int valueType;\n-\n \n     /**\n      *  The threshold variable is calculated by multiplying\n      */\n     private boolean purgeValues = false;\n \n-\n     // -- Non-serialized instance variables\n \n     /**\n      */\n     private transient ReferenceQueue queue = new ReferenceQueue();\n \n-\n     /**\n      *  The hash table.  Its length is always a power of two.  \n      */\n     private transient Entry[] table;\n \n-\n     /**\n      *  Number of mappings in this map.\n      */\n     private transient int size;\n-\n \n     /**\n      *  When size reaches threshold, the map is resized.  \n      */\n     private transient int threshold;\n \n-\n     /**\n      *  Number of times this map has been modified.\n      */\n     private transient volatile int modCount;\n \n-\n     /**\n      *  Cached key set.  May be null if key set is never accessed.\n      */\n     private transient Set keySet;\n \n-\n     /**\n      *  Cached entry set.  May be null if entry set is never accessed.\n      */\n     private transient Set entrySet;\n \n-\n     /**\n      *  Cached values.  May be null if values() is never accessed.\n      */\n     private transient Collection values;\n-\n \n     /**\n      *  Constructs a new <code>ReferenceMap</code> that will\n--- a/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/StaticBucketMap.java,v 1.7 2004/01/02 02:13:07 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/StaticBucketMap.java,v 1.8 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * operations will affect the map.<p>\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n- * @version $Revision: 1.7 $ $Date: 2004/01/02 02:13:07 $\n+ * @version $Revision: 1.8 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Berin Loritsch\n  * @author Gerhard Froehlich\n  */\n public final class StaticBucketMap implements Map {\n \n+    /** The default number of buckets to use */\n     private static final int DEFAULT_BUCKETS = 255;\n+    /** The array of buckets, where the actual data is held */\n     private Node[] buckets;\n+    /** The matching array of locks */\n     private Lock[] locks;\n \n     /**\n--- a/src/java/org/apache/commons/collections/map/TransformedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TransformedMap.java,v 1.3 2003/12/25 00:49:14 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TransformedMap.java,v 1.4 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * use the Integer form to remove objects.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/25 00:49:14 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  */\n     public static Map decorate(Map map, Transformer keyTransformer, Transformer valueTransformer) {\n         return new TransformedMap(map, keyTransformer, valueTransformer);\n     }\n-    \n+\n     //-----------------------------------------------------------------------\n     /**\n      * Constructor that wraps (not copies).\n--- a/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TransformedSortedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TransformedSortedMap.java,v 1.2 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * use the Integer form to remove objects.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  */\n-public class TransformedSortedMap extends TransformedMap implements SortedMap {\n+public class TransformedSortedMap\n+        extends TransformedMap implements SortedMap {\n \n     /**\n      * Factory method to create a transforming sorted map.\n--- a/src/java/org/apache/commons/collections/map/TypedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TypedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TypedMap.java,v 1.2 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n             PredicateUtils.instanceofPredicate(valueType)\n         );\n     }\n-    \n+\n     /**\n      * Restrictive constructor.\n      */\n--- a/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TypedSortedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/TypedSortedMap.java,v 1.2 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * collection, an IllegalArgumentException is thrown.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n             PredicateUtils.instanceofPredicate(valueType)\n         );\n     }\n-    \n+\n     /**\n      * Restrictive constructor.\n      */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java,v 1.3 2003/12/29 15:08:15 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java,v 1.4 2004/01/05 22:15:14 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates a map entry <code>Set</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/29 15:08:15 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 22:15:14 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableEntrySet extends AbstractSetDecorator implements Unmodifiable {\n-    \n+public final class UnmodifiableEntrySet\n+        extends AbstractSetDecorator implements Unmodifiable {\n+\n     /**\n      * Factory method to create an unmodifiable set of Map Entry objects.\n      * \n--- a/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableMap.java,v 1.6 2003/12/03 12:27:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableMap.java,v 1.7 2004/01/05 22:15:15 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates another <code>Map</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2003/12/03 12:27:36 $\n+ * @version $Revision: 1.7 $ $Date: 2004/01/05 22:15:15 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableMap extends AbstractMapDecorator implements IterableMap, Unmodifiable {\n+public final class UnmodifiableMap\n+        extends AbstractMapDecorator implements IterableMap, Unmodifiable {\n \n     /**\n      * Factory method to create an unmodifiable map.\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java,v 1.4 2003/12/03 12:27:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java,v 1.5 2004/01/05 22:15:15 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates another <code>OrderedMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/12/03 12:27:36 $\n+ * @version $Revision: 1.5 $ $Date: 2004/01/05 22:15:15 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableOrderedMap extends AbstractOrderedMapDecorator implements Unmodifiable {\n+public final class UnmodifiableOrderedMap\n+        extends AbstractOrderedMapDecorator implements Unmodifiable {\n \n     /**\n      * Factory method to create an unmodifiable sorted map.\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java,v 1.3 2003/12/03 12:27:36 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java,v 1.4 2004/01/05 22:15:15 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2003-2004 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Decorates another <code>SortedMap</code> to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/03 12:27:36 $\n+ * @version $Revision: 1.4 $ $Date: 2004/01/05 22:15:15 $\n  * \n  * @author Stephen Colebourne\n  */\n-public final class UnmodifiableSortedMap extends AbstractSortedMapDecorator implements Unmodifiable {\n+public final class UnmodifiableSortedMap\n+        extends AbstractSortedMapDecorator implements Unmodifiable {\n \n     /**\n      * Factory method to create an unmodifiable sorted map.", "timestamp": 1073340915, "metainfo": ""}