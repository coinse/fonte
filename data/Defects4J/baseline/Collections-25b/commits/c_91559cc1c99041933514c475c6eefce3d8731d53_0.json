{"sha": "91559cc1c99041933514c475c6eefce3d8731d53", "log": "Change new classes to indicate next version of 3.0 not 2.2   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CircularFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/CircularFifoBuffer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/CircularFifoBuffer.java,v 1.2 2003/05/11 14:15:23 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/CircularFifoBuffer.java,v 1.3 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * <p>\n  * This buffer prevents null objects from being added.\n  * \n- * @since Commons Collections 2.2\n- * @version $Revision: 1.2 $ $Date: 2003/05/11 14:15:23 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.3 $ $Date: 2003/05/16 15:08:45 $\n  * \n  * @author Stefano Fornari\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/CommonsLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CommonsLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/CommonsLinkedList.java,v 1.5 2003/05/11 14:15:23 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/CommonsLinkedList.java,v 1.6 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * of {@link LinkedList}, but which provides a more open interface for\n  * subclasses to extend.\n  * \n- * @since Commons Collections 2.2\n- * @version $Revision: 1.5 $ $Date: 2003/05/11 14:15:23 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.6 $ $Date: 2003/05/16 15:08:45 $\n  * \n  * @author <a href=\"mailto:rich@rd.gen.nz\">Rich Dougherty</a>\n  */\n--- a/src/java/org/apache/commons/collections/MultiKey.java\n+++ b/src/java/org/apache/commons/collections/MultiKey.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/MultiKey.java,v 1.2 2003/05/16 14:40:56 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/MultiKey.java,v 1.3 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * key and locale. The typical solution might be nested maps. This class\n  * can be used instead by creating an instance passing in the key and locale.\n  * \n- * @since Commons Collections 2.2\n- * @version $Revision: 1.2 $ $Date: 2003/05/16 14:40:56 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.3 $ $Date: 2003/05/16 15:08:45 $\n  * \n  * @author Howard Lewis Ship\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/NodeCachingLinkedList.java\n+++ b/src/java/org/apache/commons/collections/NodeCachingLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/NodeCachingLinkedList.java,v 1.5 2003/05/16 14:40:56 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/NodeCachingLinkedList.java,v 1.6 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * unnecessary object creates and deletion. This should result in a performance\n  * improvement.\n  * \n- * @since Commons Collections 2.2\n- * @version $Revision: 1.5 $ $Date: 2003/05/16 14:40:56 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.6 $ $Date: 2003/05/16 15:08:45 $\n  * \n  * @author Jeff Varszegi\n  * @author <a href=\"mailto:rich@rd.gen.nz\">Rich Dougherty</a>\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.5 2003/01/15 20:36:38 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/BooleanComparator.java,v 1.6 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * @see #getFalseFirstComparator\n  * @see #getBooleanComparator\n  * \n- * @since Commons Collections 2.2\n- * \n- * @version $Revision: 1.5 $ $Date: 2003/01/15 20:36:38 $\n+ * @since Commons Collections 3.0\n+ * \n+ * @version $Revision: 1.6 $ $Date: 2003/05/16 15:08:45 $\n  * \n  * @author Rodney Waldhoff\n  */\n--- a/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n /* \n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparableComparator.java,v 1.9 2003/01/13 22:34:57 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparableComparator.java,v 1.10 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * {@link #compare} for details.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.9 $ $Date: 2003/01/13 22:34:57 $\n+ * @version $Revision: 1.10 $ $Date: 2003/05/16 15:08:45 $\n  *\n  * @author bayard@generationjava.com\n  *\n      * {@link #equals}.\n      *\n      * @return a hash code for this comparator.\n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public int hashCode() {\n         return \"ComparableComparator\".hashCode();\n      * equals <code>this.getClass()</code>.  Subclasses may want to override\n      * this behavior to remain consistent with the {@link Comparator#equals}\n      * contract.\n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public boolean equals(Object that) {\n         return (this == that) || \n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.10 2003/01/13 22:52:34 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.11 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * \n  * @since Commons Collections 2.0\n  * @author Morgan Delagrange\n- * @version $Revision: 1.10 $ $Date: 2003/01/13 22:52:34 $\n+ * @version $Revision: 1.11 $ $Date: 2003/05/16 15:08:45 $\n  */\n public class ComparatorChain implements Comparator,Serializable {\n \n      * Implement a hash code for this comparator that is consistent with\n      * {@link #equals}.\n      * \n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public int hashCode() {\n         int hash = 0;\n      * to override this behavior to remain consistent with the \n      * {@link Comparator#equals} contract.\n      * \n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public boolean equals(Object that) {\n         if(this == that) {\n--- a/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java,v 1.1 2003/04/13 17:37:26 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java,v 1.2 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * thread-safe at construction time, but it is thread-safe to perform\n  * multiple comparisons  after all the setup operations are complete.\n  * \n- * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/04/13 17:37:26 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.2 $ $Date: 2003/05/16 15:08:44 $\n  *\n  * @author David Leppik\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ReverseComparator.java,v 1.12 2003/01/13 22:34:57 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ReverseComparator.java,v 1.13 2003/05/16 15:08:45 scolebourne Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * method.\n  * \n  * @since Commons Collections 2.0\n- * @version $Revision: 1.12 $ $Date: 2003/01/13 22:34:57 $\n+ * @version $Revision: 1.13 $ $Date: 2003/05/16 15:08:45 $\n  *\n  * @author bayard@generationjava.com\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n      * Implement a hash code for this comparator that is consistent with\n      * {@link #equals}.\n      * \n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public int hashCode() {\n         return \"ReverseComparator\".hashCode() ^ comparator.hashCode();\n      * this behavior to remain consistent with the \n      * {@link Comparator#equals} contract.\n      * \n-     * @since Collections 2.2\n+     * @since Commons Collections 3.0\n      */\n     public boolean equals(Object that) {\n         if(this == that) {\n--- a/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.3 2003/01/15 21:52:39 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/LoopingIterator.java,v 1.4 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Concurrent modifications are not directly supported, and for most collection\n  * implementations will throw a ConcurrentModificationException. \n  *\n- * @since Commons Collections 2.2\n- * @version $Revision: 1.3 $ $Date: 2003/01/15 21:52:39 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.4 $ $Date: 2003/05/16 15:08:44 $\n  *\n  * @author <a href=\"mailto:joncrlsn@users.sf.net\">Jonathan Carlson</a>\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.4 2003/02/19 20:14:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java,v 1.5 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * The iterator implements a {@link #reset} method, allowing the reset of the iterator\n  * back to the start if required.\n  *\n- * @since Commons Collections 2.2\n- * @version $Revision: 1.4 $ $Date: 2003/02/19 20:14:27 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.5 $ $Date: 2003/05/16 15:08:44 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author Mauricio S. Moura\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.4 2003/02/19 20:14:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.5 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * @see java.util.Iterator\n  * @see java.util.ListIterator\n  *\n- * @since Commons Collections 2.2\n- * @version $Revision: 1.4 $ $Date: 2003/02/19 20:14:27 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.5 $ $Date: 2003/05/16 15:08:44 $\n  * \n  * @author <a href=\"mailto:neilotoole@users.sourceforge.net\">Neil O'Toole</a>\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/iterators/ResetableIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ResetableIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/Attic/ResetableIterator.java,v 1.1 2003/01/15 21:49:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/Attic/ResetableIterator.java,v 1.2 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Interface implemented by those iterators that can be reset back to an \n  * initial state.\n  *\n- * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/01/15 21:49:59 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.2 $ $Date: 2003/05/16 15:08:44 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/ResetableListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ResetableListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/Attic/ResetableListIterator.java,v 1.1 2003/01/15 21:49:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/Attic/ResetableListIterator.java,v 1.2 2003/05/16 15:08:44 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Interface implemented by those list iterators that can be reset back \n  * to an initial state.\n  *\n- * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/01/15 21:49:59 $\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.2 $ $Date: 2003/05/16 15:08:44 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1053097725, "metainfo": ""}