{"sha": "8c6e10da8c4a6c89c4bd80fcd7a0f4ad58fae9b0", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r751890 | mbenson | 2009-03-09 15:45:37 -0700 (Mon, 09 Mar 2009) | 1 line          extract Put, Get, and IterableGet interfaces from IterableMap such that our Maps, which all implement IterableMap, can have their read/write functionality exposed separately.     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IterableMap.java\n+++ b/src/java/org/apache/commons/collections/IterableMap.java\n  * Defines a map that can be iterated directly without needing to create an entry set.\n  * <p>\n  * A map iterator is an efficient way of iterating over maps.\n- * There is no need to access the entry set or cast to Map Entry objects.\n+ * There is no need to access the entry set or use Map Entry objects.\n  * <pre>\n- * IterableMap map = new HashedMap();\n- * MapIterator it = map.mapIterator();\n+ * IterableMap<String,Integer> map = new HashedMap<String,Integer>();\n+ * MapIterator<String,Integer> it = map.mapIterator();\n  * while (it.hasNext()) {\n- *   Object key = it.next();\n- *   Object value = it.getValue();\n- *   it.setValue(\"newValue\");\n+ *   String key = it.next();\n+ *   Integer value = it.getValue();\n+ *   it.setValue(value + 1);\n  * }\n  * </pre>\n+ *\n+ * @param <K> the type of the keys in the map\n+ * @param <V> the type of the values in the map\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n-public interface IterableMap extends Map {\n-\n-    /**\n-     * Obtains a <code>MapIterator</code> over the map.\n-     * <p>\n-     * A map iterator is an efficient way of iterating over maps.\n-     * There is no need to access the entry set or cast to Map Entry objects.\n-     * <pre>\n-     * IterableMap map = new HashedMap();\n-     * MapIterator it = map.mapIterator();\n-     * while (it.hasNext()) {\n-     *   Object key = it.next();\n-     *   Object value = it.getValue();\n-     *   it.setValue(\"newValue\");\n-     * }\n-     * </pre>\n-     * \n-     * @return a map iterator\n-     */\n-    MapIterator mapIterator();\n-    \n+public interface IterableMap<K, V> extends Map<K, V>, Put<K, V>, IterableGet<K, V> {\n }", "timestamp": 1252994125, "metainfo": ""}