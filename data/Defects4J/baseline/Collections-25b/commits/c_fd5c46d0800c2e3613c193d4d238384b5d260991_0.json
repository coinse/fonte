{"sha": "fd5c46d0800c2e3613c193d4d238384b5d260991", "log": "Fix typos.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/map/ReferenceIdentityMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/ReferenceIdentityMap.java\n  * This implementation is not synchronized.\n  * You can use {@link java.util.Collections#synchronizedMap} to \n  * provide synchronized access to a <code>ReferenceIdentityMap</code>.\n- * Remember that synchronization will not stop the garbage collecter removing entries.\n+ * Remember that synchronization will not stop the garbage collector removing entries.\n  * <p>\n  * All the available iterators can be reset back to the start by casting to\n  * <code>ResettableIterator</code> and calling <code>reset()</code>.\n--- a/src/main/java/org/apache/commons/collections4/map/ReferenceMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/ReferenceMap.java\n  * This implementation is not synchronized.\n  * You can use {@link java.util.Collections#synchronizedMap} to \n  * provide synchronized access to a <code>ReferenceMap</code>.\n- * Remember that synchronization will not stop the garbage collecter removing entries.\n+ * Remember that synchronization will not stop the garbage collector removing entries.\n  * <p>\n  * All the available iterators can be reset back to the start by casting to\n  * <code>ResettableIterator</code> and calling <code>reset()</code>.", "timestamp": 1366235573, "metainfo": ""}