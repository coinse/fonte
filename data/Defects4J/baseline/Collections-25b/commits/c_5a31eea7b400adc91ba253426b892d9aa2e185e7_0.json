{"sha": "5a31eea7b400adc91ba253426b892d9aa2e185e7", "log": "[COLLECTIONS-322] added since tags, fixed javadoc example.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/main/java/org/apache/commons/collections/IteratorUtils.java\n      * @param nodeList the node list to use, not null\n      * @return a new, single use {@link Iterator}\n      * @throws NullPointerException if nodeList is null\n+     * @since 4.0\n      */\n     public static NodeListIterator nodeListIterator(final NodeList nodeList) {\n         if (nodeList == null) {\n      * <p>\n      * Convenience method, allows easy iteration over NodeLists:\n      * <pre>\n-     *   for(Node childNode : IteratorUtils.asIterable(node)){\n+     *   Iterator&lt;Node&gt; iterator = IteratorUtils.nodeListIterator(node);\n+     *   for(Node childNode : IteratorUtils.asIterable(iterator)) {\n      *     ...\n      *   }\n      * </pre>\n      * @param node the node to use, not null\n      * @return a new, single use {@link Iterator}\n      * @throws NullPointerException if node is null\n+     * @since 4.0\n      */\n     public static NodeListIterator nodeListIterator(final Node node) {\n         if (node == null) {", "timestamp": 1359282924, "metainfo": ""}