{"sha": "19a707c06ded92cd315cfd2b4fc78797f2395050", "log": "Ensure empty iterator implementation is as per v3.0   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n import org.apache.commons.collections.iterators.EmptyIterator;\n import org.apache.commons.collections.iterators.EmptyListIterator;\n import org.apache.commons.collections.iterators.EmptyMapIterator;\n+import org.apache.commons.collections.iterators.EmptyOrderedIterator;\n import org.apache.commons.collections.iterators.EmptyOrderedMapIterator;\n import org.apache.commons.collections.iterators.EnumerationIterator;\n import org.apache.commons.collections.iterators.FilterIterator;\n  * against versions 2.1.1 and 3.1.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.26 $ $Date: 2004/05/22 09:46:39 $\n+ * @version $Revision: 1.27 $ $Date: 2004/05/26 21:53:46 $\n  * \n  * @author Stephen Colebourne\n  * @author Phil Steitz\n     /**\n      * An iterator over no elements.\n      * <p>\n-     * WARNING: This constant is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This constant is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>EmptyIterator.INSTANCE</code> for compatability with Commons Collections 2.1.1.\n      */\n     public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;\n     /**\n      * A list iterator over no elements.\n      * <p>\n-     * WARNING: This constant is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This constant is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>EmptyListIterator.INSTANCE</code> for compatability with Commons Collections 2.1.1.\n      */\n     public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;\n     /**\n      * An ordered iterator over no elements.\n      */    \n-    public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyListIterator.ORDERED_INSTANCE;\n+    public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;\n     /**\n      * A map iterator over no elements.\n      */    \n      * This iterator is a valid iterator object that will iterate over\n      * nothing.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>EmptyIterator.INSTANCE</code> for compatability with Commons Collections 2.1.1.\n      *\n      * @return  an iterator over nothing\n      * This iterator is a valid list iterator object that will iterate \n      * over nothing.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>EmptyListIterator.INSTANCE</code> for compatability with Commons Collections 2.1.1.\n      *\n      * @return  a list iterator over nothing\n      * This iterator is a valid iterator object that will iterate over\n      * the specified object.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>new SingletonIterator(object)</code> for compatability.\n      *\n      * @param object  the single object over which to iterate\n     /**\n      * Gets an iterator over an object array.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>new ArrayIterator(array)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n     /**\n      * Gets an iterator over the end part of an object array.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>new ArrayIterator(array,start)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n     /**\n      * Gets an iterator over part of an object array.\n      * <p>\n-     * WARNING: This method is binary incompatible with Commons Collections 2.1.\n+     * WARNING: This method is binary incompatible with Commons Collections 2.1 and 2.1.1.\n      * Use <code>new ArrayIterator(array,start,end)</code> for compatability.\n      *\n      * @param array  the array over which to iterate\n--- a/src/test/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/org/apache/commons/collections/TestIteratorUtils.java\n import org.apache.commons.collections.iterators.EmptyIterator;\n import org.apache.commons.collections.iterators.EmptyListIterator;\n import org.apache.commons.collections.iterators.EmptyMapIterator;\n+import org.apache.commons.collections.iterators.EmptyOrderedIterator;\n import org.apache.commons.collections.iterators.EmptyOrderedMapIterator;\n \n /**\n  * Tests for IteratorUtils.\n  * \n- * @version $Revision: 1.15 $ $Date: 2004/05/22 09:46:39 $\n+ * @version $Revision: 1.16 $ $Date: 2004/05/26 21:56:45 $\n  * \n  * @author Unknown\n  */\n      * Test empty map iterator\n      */\n     public void testEmptyOrderedIterator() {\n-        assertSame(EmptyListIterator.ORDERED_INSTANCE, IteratorUtils.EMPTY_ORDERED_ITERATOR);\n+        assertSame(EmptyOrderedIterator.INSTANCE, IteratorUtils.EMPTY_ORDERED_ITERATOR);\n         assertEquals(true, IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof Iterator);\n         assertEquals(true, IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof OrderedIterator);\n         assertEquals(true, IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof ResettableIterator);\n+        assertEquals(false, IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof ListIterator);\n         assertEquals(false, IteratorUtils.EMPTY_ORDERED_ITERATOR instanceof MapIterator);\n         assertEquals(false, IteratorUtils.EMPTY_ORDERED_ITERATOR.hasNext());\n         assertEquals(false, IteratorUtils.EMPTY_ORDERED_ITERATOR.hasPrevious());", "timestamp": 1085608605, "metainfo": ""}