{"sha": "13270785019dfc2866403df4c376c5621827771f", "log": "PR: COLLECTIONS-332 Documented the dependency of ListOrderedMap on the standard Map contract of using equals() and hashCode().   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n+++ b/src/java/org/apache/commons/collections/map/CaseInsensitiveMap.java\n  * <code>map.get(null)</code> returns <code>\"Three\"</code> and <code>map.get(\"ONE\")</code>\n  * returns <code>\"Four\".</code>  The <code>Set</code> returned by <code>keySet()</code>\n  * equals <code>{\"one\", \"two\", null}.</code>\n+ * <p>\n+ * <strong>This map will violate the detail of various Map and map view contracts.</note>\n+ * As a general rule, don't compare this map to other maps. In particular, you can't\n+ * use decorators like {@link ListOrderedMap} on it, which silently assume that these\n+ * contracts are fulfilled.\n  * <p>\n  * <strong>Note that CaseInsensitiveMap is not synchronized and is not thread-safe.</strong>\n  * If you wish to use this map from multiple threads concurrently, you must use\n--- a/src/java/org/apache/commons/collections/map/IdentityMap.java\n+++ b/src/java/org/apache/commons/collections/map/IdentityMap.java\n  * A <code>Map</code> implementation that matches keys and values based\n  * on <code>==</code> not <code>equals()</code>.\n  * <p>\n- * This map will violate the detail of various Map and map view contracts.\n- * As a general rule, don't compare this map to other maps.\n+ * <strong>This map will violate the detail of various Map and map view contracts.</note>\n+ * As a general rule, don't compare this map to other maps. In particular, you can't\n+ * use decorators like {@link ListOrderedMap} on it, which silently assume that these\n+ * contracts are fulfilled.\n  * <p>\n  * <strong>Note that IdentityMap is not synchronized and is not thread-safe.</strong>\n  * If you wish to use this map from multiple threads concurrently, you must use\n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n  * using {@link java.util.Collections#synchronizedMap(Map)}. This class may throw \n  * exceptions when accessed by concurrent threads without synchronization.\n  * <p>\n+ * <strong>Note that ListOrderedMap doesn't work with {@link IdentityMap},\n+ * {@link CaseInsensitiveMap}, or similar maps that violate the general\n+ * contract of {@link java.util.Map}.</strong> The <code>ListOrderedMap</code>\n+ * (or, more precisely, the underlying <code>List</code>) is relying on\n+ * {@link Object#java.lang.equals(Object) equals()}. This is fine, as long as the\n+ * decorated <code>Map</code> is also based on {@link Object#equals(Object) equals()},\n+ * and {@link Object#hashCode() hashCode()}, which {@link IdentityMap}, and\n+ * {@link CaseInsensitiveMap} don't: The former uses <code>==</code>, and\n+ * the latter uses {@link Object#equals(Object) equals()} on a lowercased\n+ * key.\n+ * <p>\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0", "timestamp": 1299619661, "metainfo": ""}