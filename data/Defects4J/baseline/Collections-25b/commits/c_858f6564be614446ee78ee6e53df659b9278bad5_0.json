{"sha": "858f6564be614446ee78ee6e53df659b9278bad5", "log": "Update to MapUtils debugPrint processing   ", "commit": "\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.27 2003/08/24 09:47:19 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.28 2003/08/25 20:38:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *  </ul>\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.27 $ $Date: 2003/08/24 09:47:19 $\n+ * @version $Revision: 1.28 $ $Date: 2003/08/25 20:38:40 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n      * @param out  the stream to print to, must not be null\n      * @param label  the label to be applied to the output generated.  This \n      *              may well be the key associated with this map within a \n-     *              surrounding map in which this is nested.   \n-     * @param map  the map to print, may be null\n-     * @throws NullPointerException if the stream is null\n+     *              surrounding map in which this is nested.  If the label is \n+     *              <code>null</code> then no label is output.\n+     * @param map  the map to print, may be <code>null</code>\n+     * @throws NullPointerException if the stream is <code>null</code>\n      */\n     public static synchronized void verbosePrint(\n         final PrintStream out,\n      * @param out  the stream to print to, must not be null\n      * @param label  the label to be applied to the output generated.  This \n      *              may well be the key associated with this map within a \n-     *              surrounding map in which this is nested.   \n-     * @param map  the map to print, may be null\n-     * @throws NullPointerException if the stream is null\n+     *              surrounding map in which this is nested.  If the label is \n+     *              <code>null</code> then no label is output.\n+     * @param map  the map to print, may be <code>null</code>\n+     * @throws NullPointerException if the stream is <code>null</code>\n      */\n     public static synchronized void debugPrint(\n         final PrintStream out,\n      * @param out  the stream to print to\n      * @param label  the label to be applied to the output generated.  This \n      *              may well be the key associated with this map within a \n-     *              surrounding map in which this is nested.   \n-     * @param map  the map to print, may be null\n+     *              surrounding map in which this is nested.  If the label is \n+     *              <code>null</code>, then it is not output.\n+     * @param map  the map to print, may be <code>null</code>\n      * @param debug flag indicating whether type names should be output.\n+     * @throws NullPointerException if the stream is <code>null</code>\n      */\n     private static void verbosePrintInternal(  // externally synchronized\n         final PrintStream out,\n         printIndent(out);\n \n         if (label != null) {\n-            if (map == null) {\n-                // Guard against null map.\n-                out.println(label + \" = null\");\n-                return;\n-            } else {\n-                out.println(label + \" = \");\n-            }            \n+            out.print(label);\n+            out.print(\" = \");\n+            out.println(map == null ? \"null\" : \"\");\n         }\n         if (map == null) {\n             return;\n             Map.Entry entry = (Map.Entry) it.next();\n             Object childKey = entry.getKey();\n             Object childValue = entry.getValue();\n-            if (childValue instanceof Map) {\n-                if (childValue == map) {\n-                    printIndent(out);\n-                    out.println(childKey + \" = this Map\");  // should have stack really...\n-                } else {\n-                    verbosePrintInternal(out, childKey, (Map) childValue, debug);\n-                }\n+            if (childValue instanceof Map && childValue != map) {\n+                verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), (Map) childValue, debug);\n             } else {\n                 printIndent(out);\n-\n+                out.print(childKey);\n+                out.print(\" = \");\n+                out.print(childValue == map ? \"(this Map)\" : childValue);\n                 if (debug && childValue != null) {\n-                    out.println(\n-                        childKey \n-                        + \" = \" \n-                        + childValue \n-                        + \" \" \n-                        + childValue.getClass().getName()\n-                    );\n+                    out.print(' ');\n+                    out.println(childValue.getClass().getName());\n                 } else {\n-                    out.println(childKey + \" = \" + childValue);\n+                    out.println();\n                 }\n             }\n         }\n+        \n         indentDepth--;\n         printIndent(out);\n         out.println(debug ? \"} \" + map.getClass().getName() : \"}\");\n--- a/src/test/org/apache/commons/collections/TestMapUtils.java\n+++ b/src/test/org/apache/commons/collections/TestMapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMapUtils.java,v 1.7 2003/08/24 09:47:19 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestMapUtils.java,v 1.8 2003/08/25 20:38:40 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Tests for MapUtils.\n  * \n- * @version $Revision: 1.7 $ $Date: 2003/08/24 09:47:19 $\n+ * @version $Revision: 1.8 $ $Date: 2003/08/25 20:38:40 $\n  * \n  * @author Stephen Colebourne\n  * @author Arun Mammen Thomas\n         final Map map = new TreeMap();  // treeMap guarantees order across JDKs for test\n         map.put( new Integer(2) , \"B\" );\n         map.put( new Integer(3) , \"C\" );\n+        map.put( new Integer(4) , null );\n         \n         outPrint.println(\"{\");\n         outPrint.println(INDENT + \"2 = B\");\n         outPrint.println(INDENT + \"3 = C\");\n+        outPrint.println(INDENT + \"4 = null\");\n         outPrint.println(\"}\");\n         final String EXPECTED_OUT = out.toString();\n         out.reset();\n     public void testVerbosePrintNullStream() {\n         try {\n             MapUtils.verbosePrint(null, \"Map\", new HashMap());\n-            fail();\n-        } catch (NullPointerException ex) {\n+            fail(\"Should generate NullPointerException\");\n+        } catch (NullPointerException expected) {\n         }\n     }\n     \n     public void testDebugPrintNullStream() {\n         try {\n             MapUtils.debugPrint(null, \"Map\", new HashMap());\n-            fail();\n-        } catch (NullPointerException ex) {\n-        }\n-    }\n-    \n+            fail(\"Should generate NullPointerException\");\n+        } catch (NullPointerException expected) {\n+        }\n+    }\n+    \n+    public void testDebugPrintNullKey() {\n+        final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        final PrintStream outPrint = new PrintStream(out);\n+\n+        final String INDENT = \"    \";\n+\n+        final Map map = new HashMap();\n+        map.put( null , \"A\" );\n+    \n+        outPrint.println(\"{\");\n+        outPrint.println(INDENT + \"null = A \" + String.class.getName());\n+        outPrint.println(\"} \" + HashMap.class.getName());\n+        final String EXPECTED_OUT = out.toString();\n+        out.reset();\n+        \n+        MapUtils.debugPrint(outPrint, null, map);\n+        assertEquals(EXPECTED_OUT, out.toString());\n+    }\n+\n+    public void testDebugPrintNullKeyToMap1() {\n+        final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        final PrintStream outPrint = new PrintStream(out);\n+\n+        final String INDENT = \"    \";\n+\n+        final Map map = new HashMap();\n+        map.put( null , map );\n+    \n+        outPrint.println(\"{\");\n+        outPrint.println(INDENT + \"null = (this Map) \" + HashMap.class.getName());\n+        outPrint.println(\"} \" + HashMap.class.getName());\n+        final String EXPECTED_OUT = out.toString();\n+        out.reset();\n+        \n+        MapUtils.debugPrint(outPrint, null, map);\n+        assertEquals(EXPECTED_OUT, out.toString());\n+    }\n+\n+    public void testDebugPrintNullKeyToMap2() {\n+        final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        final PrintStream outPrint = new PrintStream(out);\n+\n+        final String INDENT = \"    \";\n+\n+        final Map map = new HashMap();\n+        final Map map2= new HashMap();\n+        map.put( null , map2 );\n+        map2.put( \"2\", \"B\" );\n+    \n+        outPrint.println(\"{\");\n+        outPrint.println(INDENT + \"null = \");\n+        outPrint.println(INDENT + \"{\");\n+        outPrint.println(INDENT + INDENT + \"2 = B \" + String.class.getName());\n+        outPrint.println(INDENT + \"} \" + HashMap.class.getName());\n+        outPrint.println(\"} \" + HashMap.class.getName());\n+        final String EXPECTED_OUT = out.toString();\n+        out.reset();\n+        \n+        MapUtils.debugPrint(outPrint, null, map);\n+        assertEquals(EXPECTED_OUT, out.toString());\n+    }\n+\n     public void testVerbosePrint() {\n         final ByteArrayOutputStream out = new ByteArrayOutputStream();\n         final PrintStream outPrint = new PrintStream(out);\n         outPrint.println(INDENT + INDENT + \"2 = B\");\n         outPrint.println(INDENT + INDENT + \"3 = C\");\n         outPrint.println(INDENT + \"}\");\n-        outPrint.println(INDENT + \"7 = this Map\");\n+        outPrint.println(INDENT + \"7 = (this Map)\");\n         outPrint.println(\"}\");\n         \n         final String EXPECTED_OUT = out.toString();\n         outPrint.println(INDENT + INDENT + \"2 = B \" + String.class.getName());\n         outPrint.println(INDENT + INDENT + \"3 = C \" + String.class.getName());\n         outPrint.println(INDENT + \"} \" + TreeMap.class.getName());\n-        outPrint.println(INDENT + \"7 = this Map\");\n+        outPrint.println(INDENT + \"7 = (this Map) \" + TreeMap.class.getName());\n         outPrint.println(\"} \" + TreeMap.class.getName());\n         \n         final String EXPECTED_OUT = out.toString();", "timestamp": 1061843920, "metainfo": ""}