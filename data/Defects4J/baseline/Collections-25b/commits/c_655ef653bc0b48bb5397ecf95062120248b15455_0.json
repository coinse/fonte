{"sha": "655ef653bc0b48bb5397ecf95062120248b15455", "log": "Add Set and SortedSet collection decorators   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/AbstractSetDecorator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/AbstractSetDecorator.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+/**\n+ * <code>AbstractSetDecorator</code> decorates another <code>Set</code>.\n+ * <p>\n+ * Methods are forwarded directly to the decorated set.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractSetDecorator extends AbstractCollectionDecorator implements Set {\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected AbstractSetDecorator(Set set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Gets the set being decorated.\n+     * \n+     * @return the decorated set\n+     */\n+    protected Set getSet() {\n+        return (Set) getCollection();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/AbstractSortedSetDecorator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/AbstractSortedSetDecorator.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+import java.util.Set;\n+import java.util.SortedSet;\n+\n+/**\n+ * <code>AbstractSortedSetDecorator</code> decorates another <code>SortedSet</code>.\n+ * <p>\n+ * Methods are forwarded directly to the decorated set.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractSortedSetDecorator extends AbstractSetDecorator implements SortedSet {\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected AbstractSortedSetDecorator(Set set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Gets the sorted set being decorated.\n+     * \n+     * @return the decorated set\n+     */\n+    protected SortedSet getSortedSet() {\n+        return (SortedSet) getCollection();\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public SortedSet subSet(Object fromElement, Object toElement) {\n+        return getSortedSet().subSet(fromElement, toElement);\n+    }\n+\n+    public SortedSet headSet(Object toElement) {\n+        return getSortedSet().headSet(toElement);\n+    }\n+\n+    public SortedSet tailSet(Object fromElement) {\n+        return getSortedSet().tailSet(fromElement);\n+    }\n+\n+    public Object first() {\n+        return getSortedSet().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedSet().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedSet().comparator();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/PredicatedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/PredicatedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+import org.apache.commons.collections.Predicate;\n+\n+/**\n+ * <code>PredicatedSet</code> decorates another <code>Set</code>\n+ * to validate additions match a specified predicate.\n+ * <p>\n+ * If an object cannot be addded to the set, an IllegalArgumentException\n+ * is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Paul Jack\n+ */\n+public class PredicatedSet extends PredicatedCollection implements Set {\n+\n+    /**\n+     * Factory method to create a predicated (validating) set.\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if set or predicate is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    public static Set decorate(Set set, Predicate predicate) {\n+        return new PredicatedSet(set, predicate);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if set or predicate is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    protected PredicatedSet(Set set, Predicate predicate) {\n+        super(set, predicate);\n+    }\n+\n+    /**\n+     * Gets the set being decorated.\n+     * \n+     * @return the decorated set\n+     */\n+    protected Set getSet() {\n+        return (Set) getCollection();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/PredicatedSortedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/PredicatedSortedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+import java.util.SortedSet;\n+\n+import org.apache.commons.collections.Predicate;\n+\n+/**\n+ * <code>PredicatedSortedSet</code> decorates another <code>SortedSet</code>\n+ * to validate additions match a specified predicate.\n+ * <p>\n+ * If an object cannot be addded to the set, an IllegalArgumentException\n+ * is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Paul Jack\n+ */\n+public class PredicatedSortedSet extends PredicatedSet implements SortedSet {\n+\n+    /**\n+     * Factory method to create a predicated (validating) sorted set.\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if set or predicate is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    public static SortedSet decorate(SortedSet set, Predicate predicate) {\n+        return new PredicatedSortedSet(set, predicate);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param predicate  the predicate to use for validation, must not be null\n+     * @throws IllegalArgumentException if set or predicate is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    protected PredicatedSortedSet(SortedSet set, Predicate predicate) {\n+        super(set, predicate);\n+    }\n+\n+    /**\n+     * Gets the sorted set being decorated.\n+     * \n+     * @return the decorated sorted set\n+     */\n+    private SortedSet getSortedSet() {\n+        return (SortedSet) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public SortedSet subSet(Object fromElement, Object toElement) {\n+        SortedSet sub = getSortedSet().subSet(fromElement, toElement);\n+        return new PredicatedSortedSet(sub, predicate);\n+    }\n+\n+    public SortedSet headSet(Object toElement) {\n+        SortedSet sub = getSortedSet().headSet(toElement);\n+        return new PredicatedSortedSet(sub, predicate);\n+    }\n+\n+    public SortedSet tailSet(Object fromElement) {\n+        SortedSet sub = getSortedSet().tailSet(fromElement);\n+        return new PredicatedSortedSet(sub, predicate);\n+    }\n+\n+    public Object first() {\n+        return getSortedSet().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedSet().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedSet().comparator();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+/**\n+ * <code>SynchronizedSet</code> decorates another <code>Set</code>.\n+ * <p>\n+ * Methods are synchronized, then forwarded to the decorated set.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class SynchronizedSet extends SynchronizedCollection implements Set {\n+\n+    /**\n+     * Factory method to create a synchronized set.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    public static Set decorate(Set set) {\n+        return new SynchronizedSet(set);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected SynchronizedSet(Set set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param lock  the lock object to use, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected SynchronizedSet(Set set, Object lock) {\n+        super(set, lock);\n+    }\n+\n+    /**\n+     * Gets the decorated set.\n+     * \n+     * @return the decorated set\n+     */\n+    protected Set getSet() {\n+        return (Set) collection;\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedSortedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSortedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+import java.util.SortedSet;\n+\n+/**\n+ * <code>SynchronizedSortedSet</code> decorates another <code>SortedSet</code>.\n+ * <p>\n+ * Methods are synchronized, then forwarded to the decorated set.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class SynchronizedSortedSet extends SynchronizedCollection implements SortedSet {\n+\n+    /**\n+     * Factory method to create a synchronized set.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    public static SortedSet decorate(SortedSet set) {\n+        return new SynchronizedSortedSet(set);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected SynchronizedSortedSet(SortedSet set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param lock  the lock object to use, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected SynchronizedSortedSet(SortedSet set, Object lock) {\n+        super(set, lock);\n+    }\n+\n+    /**\n+     * Gets the decorated set.\n+     * \n+     * @return the decorated set\n+     */\n+    protected SortedSet getSortedSet() {\n+        return (SortedSet) collection;\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public SortedSet subSet(Object fromElement, Object toElement) {\n+        synchronized (lock) {\n+            SortedSet set = getSortedSet().subSet(fromElement, toElement);\n+            // the lock is passed into the constructor here to ensure that the\n+            // subset is synchronized on the same lock as the parent\n+            return new SynchronizedSortedSet(set, lock);\n+        }\n+    }\n+\n+    public SortedSet headSet(Object toElement) {\n+        synchronized (lock) {\n+            SortedSet set = getSortedSet().headSet(toElement);\n+            // the lock is passed into the constructor here to ensure that the\n+            // headset is synchronized on the same lock as the parent\n+            return new SynchronizedSortedSet(set, lock);\n+        }\n+    }\n+\n+    public SortedSet tailSet(Object fromElement) {\n+        synchronized (lock) {\n+            SortedSet set = getSortedSet().tailSet(fromElement);\n+            // the lock is passed into the constructor here to ensure that the\n+            // tailset is synchronized on the same lock as the parent\n+            return new SynchronizedSortedSet(set, lock);\n+        }\n+    }\n+\n+    public Object first() {\n+        synchronized (lock) {\n+            return getSortedSet().first();\n+        }\n+    }\n+\n+    public Object last() {\n+        synchronized (lock) {\n+            return getSortedSet().last();\n+        }\n+    }\n+\n+    public Comparator comparator() {\n+        synchronized (lock) {\n+            return getSortedSet().comparator();\n+        }\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/TypedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/TypedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+/**\n+ * <code>TypedSet</code> decorates another <code>Set</code>\n+ * to validate that elements added are of a specific type.\n+ * <p>\n+ * The validation of additions is performed via an instanceof test against \n+ * a specified <code>Class</code>. If an object cannot be addded to the\n+ * collection, an IllegalArgumentException is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Matthew Hawthorne\n+ */\n+public class TypedSet extends PredicatedSet {\n+\n+    /**\n+     * Factory method to create a typed set.\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param type  the type to allow into the collection, must not be null\n+     * @throws IllegalArgumentException if set or type is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    public static Set decorate(Set set, Class type) {\n+        return new TypedSet(set, type);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the collection being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param type  the type to allow into the collection, must not be null\n+     * @throws IllegalArgumentException if set or type is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    protected TypedSet(Set set, Class type) {\n+        super(set, TypedCollection.getPredicate(type));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/TypedSortedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/TypedSortedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.SortedSet;\n+\n+/**\n+ * <code>TypedSortedSet</code> decorates another <code>Set</code>\n+ * to validate that elements added are of a specific type.\n+ * <p>\n+ * The validation of additions is performed via an instanceof test against \n+ * a specified <code>Class</code>. If an object cannot be addded to the\n+ * collection, an IllegalArgumentException is thrown.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ * @author Matthew Hawthorne\n+ */\n+public class TypedSortedSet extends PredicatedSortedSet {\n+\n+    /**\n+     * Factory method to create a typed sorted set.\n+     * <p>\n+     * If there are any elements already in the set being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param type  the type to allow into the collection, must not be null\n+     * @throws IllegalArgumentException if set or type is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    public static SortedSet decorate(SortedSet set, Class type) {\n+        return new TypedSortedSet(set, type);\n+    }\n+    \n+    /**\n+     * Constructor that wraps (not copies).\n+     * <p>\n+     * If there are any elements already in the collection being decorated, they\n+     * are validated.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @param type  the type to allow into the collection, must not be null\n+     * @throws IllegalArgumentException if set or type is null\n+     * @throws IllegalArgumentException if the set contains invalid elements\n+     */\n+    protected TypedSortedSet(SortedSet set, Class type) {\n+        super(set, TypedCollection.getPredicate(type));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/UnmodifiableSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Set;\n+\n+/**\n+ * <code>UnmodifiableSet</code> decorates another <code>Set</code> to\n+ * ensure it can't be altered.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class UnmodifiableSet extends UnmodifiableCollection implements Set {\n+\n+    /**\n+     * Factory method to create an unmodifiable set.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    public static Set decorate(Set set) {\n+        return new UnmodifiableSet(set);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected UnmodifiableSet(Set set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Gets the set being decorated.\n+     * \n+     * @return the decorated set\n+     */\n+    protected Set getSet() {\n+        return (Set) getCollection();\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/decorators/UnmodifiableSortedSet.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableSortedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.decorators;\n+\n+import java.util.Comparator;\n+import java.util.SortedSet;\n+\n+/**\n+ * <code>UnmodifiableSortedSet</code> decorates another <code>SortedSet</code>\n+ * to ensure it can't be altered.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class UnmodifiableSortedSet extends UnmodifiableSet implements SortedSet {\n+\n+    /**\n+     * Factory method to create an unmodifiable set.\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    public static SortedSet decorate(SortedSet set) {\n+        return new UnmodifiableSortedSet(set);\n+    }\n+\n+    /**\n+     * Constructor that wraps (not copies).\n+     * \n+     * @param set  the set to decorate, must not be null\n+     * @throws IllegalArgumentException if set is null\n+     */\n+    protected UnmodifiableSortedSet(SortedSet set) {\n+        super(set);\n+    }\n+\n+    /**\n+     * Gets the set being decorated.\n+     * \n+     * @return the decorated set\n+     */\n+    protected SortedSet getSortedSet() {\n+        return (SortedSet) getCollection();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public SortedSet subSet(Object fromElement, Object toElement) {\n+        SortedSet sub = getSortedSet().subSet(fromElement, toElement);\n+        return new UnmodifiableSortedSet(sub);\n+    }\n+\n+    public SortedSet headSet(Object toElement) {\n+        SortedSet sub = getSortedSet().headSet(toElement);\n+        return new UnmodifiableSortedSet(sub);\n+    }\n+\n+    public SortedSet tailSet(Object fromElement) {\n+        SortedSet sub = getSortedSet().tailSet(fromElement);\n+        return new UnmodifiableSortedSet(sub);\n+    }\n+\n+    public Object first() {\n+        return getSortedSet().first();\n+    }\n+\n+    public Object last() {\n+        return getSortedSet().last();\n+    }\n+\n+    public Comparator comparator() {\n+        return getSortedSet().comparator();\n+    }\n+\n+}", "timestamp": 1052306386, "metainfo": ""}