{"sha": "6b825d40c24b28afdd97d48710797b206a5a1103", "log": "Made the makeCollection and makeFullCollection methods final since set tests should use makeEmptySet and makeFullSet rather than their collection counterparts.  Added getSet() and getConfirmedSet() methods which wrap the collection and confirmed fixtures so that tests don't need to perform the cast to a Set.  Modified tests that used makeEmptySet and makeFullSet to use the fixture getSet() along with resetEmpty() and resetFull().  This allows for more calls to verify() to ensure that calls to methods that should not modify a collection don't actually modify it.   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestSet.java\n+++ b/src/test/org/apache/commons/collections/TestSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestSet.java,v 1.1 2002/06/18 02:58:28 mas Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/06/18 02:58:28 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestSet.java,v 1.2 2002/06/18 03:06:45 mas Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/06/18 03:06:45 $\n  *\n  * ====================================================================\n  *\n /**\n  *  Tests base {@link Set} methods and contracts.<P>\n  *\n- *  Since {@link Set} doesn't stipulate much new behavior that\n- *  isn't already found in {@link Collection}, this class basically\n- *  just adds tests for {@link Set#equals} and {@link Set#hashCode}.<P>\n- *\n- *  To use, subclass and override the {@link #makeEmptySet}\n+ *  Since {@link Set} doesn't stipulate much new behavior that isn't already\n+ *  found in {@link Collection}, this class basically just adds tests for\n+ *  {@link Set#equals()} and {@link Set#hashCode()} along with an updated\n+ *  {@link #verify()} that ensures elements do not appear more than once in the\n+ *  set.<P>\n+ *\n+ *  To use, subclass and override the {@link #makeEmptySet()}\n  *  method.  You may have to override other protected methods if your\n  *  set is not modifiable, or if your set restricts what kinds of\n  *  elements may be added; see {@link TestCollection} for more details.<P>\n  *\n  *  @author Paul Jack\n- *  @version $Id: TestSet.java,v 1.1 2002/06/18 02:58:28 mas Exp $\n+ *  @version $Id: TestSet.java,v 1.2 2002/06/18 03:06:45 mas Exp $\n  */\n public abstract class TestSet extends TestCollection {\n \n \n \n     /**\n-     *  Makes an empty collection by invoking {@link #makeEmptySet}.\n+     *  Makes an empty collection by invoking {@link #makeEmptySet()}.  \n      *\n      *  @return an empty collection\n      */\n-    protected Collection makeCollection() {\n+    protected final Collection makeCollection() {\n         return makeEmptySet();\n     }\n \n \n     /**\n-     *  Makes a full collection by invoking {@link #makeFullSet}.\n+     *  Makes a full collection by invoking {@link #makeFullSet()}.\n      *\n      *  @return a full collection\n      */\n-    protected Collection makeFullCollection() {\n+    protected final Collection makeFullCollection() {\n         return makeFullSet();\n     }\n \n+    /**\n+     *  Return the {@link TestCollection#collection} fixture, but cast as a\n+     *  Set.  \n+     */\n+    protected Set getSet() {\n+        return (Set)collection;\n+    }\n \n     /**\n      *  Returns an empty {@link HashSet} for use in modification testing.\n         return set;\n     }\n \n+    /**\n+     *  Return the {@link TestCollection#confirmed} fixture, but cast as a \n+     *  Set.\n+     **/\n+    protected Set getConfirmedSet() {\n+        return (Set)confirmed;\n+    }\n \n     /**\n      *  Makes an empty set.  The returned set should have no elements.\n \n     /**\n      *  Makes a full set by first creating an empty set and then adding\n-     *  all the elements returned by {@link #getFullElements}.\n+     *  all the elements returned by {@link #getFullElements()}.\n      *\n      *  Override if your set does not support the add operation.\n      *\n \n \n     /**\n-     *  Tests {@link Set#equals}.\n+     *  Tests {@link Set#equals(Object)}.\n      */\n     public void testSetEquals() {\n-        Set set1 = makeEmptySet();\n+        resetEmpty();\n+        assertEquals(\"Empty sets should be equal\", \n+                     getSet(), getConfirmedSet());\n+        verify();\n+\n         HashSet set2 = new HashSet();\n-        assertEquals(\"Empty sets should be equal\", set1, set2);\n-\n         set2.add(\"foo\");\n-        assertTrue(\"Nonempty set shouldn't equal empty set\", \n-                   !set1.equals(set2));\n-\n-        set1 = makeFullSet();\n-        set2 = new HashSet();\n-        set2.addAll(Arrays.asList(getFullElements()));\n-        assertEquals(\"Full sets should be equal\", set1, set2);\n+        assertTrue(\"Empty set shouldn't equal nonempty set\", \n+                   !getSet().equals(set2));\n+\n+        resetFull();\n+        assertEquals(\"Full sets should be equal\", getSet(), getConfirmedSet());\n+        verify();\n \n         set2.clear();\n         set2.addAll(Arrays.asList(getOtherElements()));\n         assertTrue(\"Sets with different contents shouldn't be equal\", \n-                   !set1.equals(set2));\n-    }\n-\n-\n-    /**\n-     *  Tests {@link Set#hashCode}.\n+                   !getSet().equals(set2));\n+    }\n+\n+\n+    /**\n+     *  Tests {@link Set#hashCode()}.\n      */\n     public void testSetHashCode() {\n-        Set set1 = makeEmptySet();\n-        Set set2 = new HashSet();\n-        assertEquals(\"Empty sets have equal hashCodes\", set1.hashCode(),\n-                     set2.hashCode());\n-\n-        set1 = makeFullSet();\n-        set2 = new HashSet(Arrays.asList(getFullElements()));\n-        assertEquals(\"Equal sets have equal hashCodes\", set1.hashCode(),\n-                     set2.hashCode());\n+        resetEmpty();\n+        assertEquals(\"Empty sets have equal hashCodes\", \n+                     getSet().hashCode(), getConfirmedSet().hashCode());\n+\n+        resetFull();\n+        assertEquals(\"Equal sets have equal hashCodes\", \n+                     getSet().hashCode(), getConfirmedSet().hashCode());\n     }\n \n ", "timestamp": 1024369605, "metainfo": ""}