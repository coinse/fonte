{"sha": "7eb41b7cddeaaf01e3b8eacd70a2827ce69f9945", "log": "Javadoc improvements   ", "commit": "\n--- a/src/java/org/apache/commons/collections/decorators/FixedSizeList.java\n+++ b/src/java/org/apache/commons/collections/decorators/FixedSizeList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/FixedSizeList.java,v 1.3 2003/05/07 11:20:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/FixedSizeList.java,v 1.4 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n \n /**\n- * <code>FixedSizeList</code> decorates another <code>List</code> to\n- * fix the size.\n+ * <code>FixedSizeList</code> decorates another <code>List</code>\n+ * to fix the size.\n  * <p>\n  * The add, remove, clear and retain operations are unsupported.\n  * The set method is allowed (as it doesn't change the list size).\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/05/07 11:20:21 $\n+ * @version $Revision: 1.4 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/decorators/SynchronizedCollection.java\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedCollection.java,v 1.2 2003/05/07 11:20:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedCollection.java,v 1.3 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n \n /**\n  * <code>SynchronizedCollection</code> decorates another <code>Collection</code>\n- * to synchronize the method calls.\n+ * to synchronize its behaviour for a multi-threaded environment.\n  * <p>\n  * Iterators must be manually synchronized:\n  * <pre>\n  * }\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/05/07 11:20:21 $\n+ * @version $Revision: 1.3 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/SynchronizedList.java\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedList.java,v 1.3 2003/05/07 11:20:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedList.java,v 1.4 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.ListIterator;\n \n /**\n- * <code>SynchronizedList</code> decorates another <code>List</code>.\n+ * <code>SynchronizedList</code> decorates another <code>List</code>\n+ * to synchronize its behaviour for a multi-threaded environment.\n  * <p>\n  * Methods are synchronized, then forwarded to the decorated list.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/05/07 11:20:21 $\n+ * @version $Revision: 1.4 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/SynchronizedSet.java\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSet.java,v 1.2 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Set;\n \n /**\n- * <code>SynchronizedSet</code> decorates another <code>Set</code>.\n+ * <code>SynchronizedSet</code> decorates another <code>Set</code>\n+ * to synchronize its behaviour for a multi-threaded environment.\n  * <p>\n  * Methods are synchronized, then forwarded to the decorated set.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/SynchronizedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/decorators/SynchronizedSortedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSortedSet.java,v 1.1 2003/05/07 11:19:46 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SynchronizedSortedSet.java,v 1.2 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.SortedSet;\n \n /**\n- * <code>SynchronizedSortedSet</code> decorates another <code>SortedSet</code>.\n+ * <code>SynchronizedSortedSet</code> decorates another <code>SortedSet</code>\n+ * to synchronize its behaviour for a multi-threaded environment.\n  * <p>\n  * Methods are synchronized, then forwarded to the decorated set.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/05/07 11:19:46 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/decorators/UnmodifiableCollection.java\n+++ b/src/java/org/apache/commons/collections/decorators/UnmodifiableCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableCollection.java,v 1.3 2003/05/07 11:20:21 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/UnmodifiableCollection.java,v 1.4 2003/05/07 12:18:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import org.apache.commons.collections.IteratorUtils;\n \n /**\n- * <code>PredicatedCollection</code> decorates another <code>Collection</code>\n- * to validate addition match a specified predicate.\n- * <p>\n- * If an object cannot be addded to the collection, an IllegalArgumentException\n- * is thrown.\n+ * <code>UnmodifiableCollection</code> decorates another <code>Collection</code>\n+ * to ensure it can't be altered.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/05/07 11:20:21 $\n+ * @version $Revision: 1.4 $ $Date: 2003/05/07 12:18:55 $\n  * \n  * @author Stephen Colebourne\n  */", "timestamp": 1052309935, "metainfo": ""}