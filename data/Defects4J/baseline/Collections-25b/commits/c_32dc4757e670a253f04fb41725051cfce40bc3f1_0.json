{"sha": "32dc4757e670a253f04fb41725051cfce40bc3f1", "log": "Fixed JavaDoc errors.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.2 2002/08/17 22:14:22 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/17 22:14:22 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.3 2002/08/19 21:56:18 pjack Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/08/19 21:56:18 $\n  *\n  * ====================================================================\n  *\n  * <code>org.apache.commons.collections.iterators</code> subpackage.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorUtils.java,v 1.2 2002/08/17 22:14:22 scolebourne Exp $\n+ * @version $Id: IteratorUtils.java,v 1.3 2002/08/19 21:56:18 pjack Exp $\n  * @since 2.1\n  */\n public class IteratorUtils {\n      * contained in a collection of ordered {@link Iterator}s.\n      * <p>\n      * Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n-     * the {@link #next} method will return the lesser of \n+     * the {@link Iterator#next()} method will return the lesser of \n      * <code>A.next()</code> and <code>B.next()</code>.\n      * <p>\n      * The comparator is optional. If null is specified then natural order is used.\n      * contained in an array of {@link Iterator}s.\n      * <p>\n      * Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n-     * the {@link #next} method will return the lesser of \n+     * the {@link Iterator#next()} method will return the lesser of \n      * <code>A.next()</code> and <code>B.next()</code> and so on.\n      * <p>\n      * The comparator is optional. If null is specified then natural order is used.\n      * contained in a collection of {@link Iterator}s.\n      * <p>\n      * Given two ordered {@link Iterator}s <code>A</code> and <code>B</code>,\n-     * the {@link #next} method will return the lesser of \n+     * the {@link Iterator#next()} method will return the lesser of \n      * <code>A.next()</code> and <code>B.next()</code> and so on.\n      * <p>\n      * The comparator is optional. If null is specified then natural order is used.\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.11 2002/08/18 20:11:37 pjack Exp $\n- * $Revision: 1.11 $\n- * $Date: 2002/08/18 20:11:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.12 2002/08/19 21:56:18 pjack Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2002/08/19 21:56:18 $\n  *\n  * ====================================================================\n  *\n   * It also provides the following decorators:\n   *\n   *  <UL>\n-  *  <LI>{@link #boundedMap(Map,int)}\n   *  <LI>{@link #fixedSizeMap(Map)}\n   *  <LI>{@link #fixedSizeSortedMap(SortedMap)}\n   *  <LI>{@link #lazyMap(Map,Factory)}\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.1 2002/08/17 11:33:56 scolebourne Exp $\n- * $Revision: 1.1 $\n- * $Date: 2002/08/17 11:33:56 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.2 2002/08/19 21:56:18 pjack Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2002/08/19 21:56:18 $\n  *\n  * ====================================================================\n  *\n  *\n  * @since 2.1\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: SingletonListIterator.java,v 1.1 2002/08/17 11:33:56 scolebourne Exp $\n+ * @version $Id: SingletonListIterator.java,v 1.2 2002/08/19 21:56:18 pjack Exp $\n  */\n public class SingletonListIterator implements ListIterator {\n \n \n     /**\n      * Returns the index of the element that would be returned by a subsequent\n-     * call to <tt>previous</tt>. -1 indicates that the iterator is currently at\n+     * call to <tt>previous</tt>. A return value of -1 indicates that the iterator is currently at\n      * the start.\n      *\n      * @return 0 or -1 depending on current state. ", "timestamp": 1029794178, "metainfo": ""}