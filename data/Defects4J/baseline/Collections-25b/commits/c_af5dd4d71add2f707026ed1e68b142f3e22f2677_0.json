{"sha": "af5dd4d71add2f707026ed1e68b142f3e22f2677", "log": "Add LoopingIterator   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/10/12 22:15:18 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/IteratorUtils.java,v 1.5 2002/11/21 23:08:27 scolebourne Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/11/21 23:08:27 $\n  *\n  * ====================================================================\n  *\n import org.apache.commons.collections.iterators.IteratorChain;\n import org.apache.commons.collections.iterators.IteratorEnumeration;\n import org.apache.commons.collections.iterators.ListIteratorWrapper;\n+import org.apache.commons.collections.iterators.LoopingIterator;\n import org.apache.commons.collections.iterators.SingletonIterator;\n import org.apache.commons.collections.iterators.SingletonListIterator;\n import org.apache.commons.collections.iterators.TransformIterator;\n  * <code>org.apache.commons.collections.iterators</code> subpackage.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorUtils.java,v 1.4 2002/10/12 22:15:18 scolebourne Exp $\n+ * @version $Id: IteratorUtils.java,v 1.5 2002/11/21 23:08:27 scolebourne Exp $\n  * @since 2.1\n  */\n public class IteratorUtils {\n     }\n     \n     /**\n+     * Gets an iterator that loops continuously over the supplied collection.\n+     * <p>\n+     * The iterator will only stop looping if the remove method is called\n+     * enough times to empty the collection, or if the collection is empty\n+     * to start with.\n+     *\n+     * @param coll  the collection to iterate over, not null\n+     * @throws NullPointerException if the collection is null\n+     */\n+    public static Iterator loopingIterator(Collection coll) {\n+        if (coll == null) {\n+            throw new NullPointerException(\"Collection must not be null\");\n+        }\n+        return new LoopingIterator(coll);\n+    }\n+    \n+    /**\n      * Gets an iterator that provides an iterator view of the given enumeration.\n      *\n      * @param enumeration  the enumeration to use", "timestamp": 1037920107, "metainfo": ""}