{"sha": "4b266ff8bcfb1dde9f65f0e8a41ca4d21bbfd659", "log": "Applied patch submitted by Michael Smith that clarifies the description of the FilterIterator   ", "commit": "\n--- a/src/java/org/apache/commons/collections/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/FilterIterator.java\n \n /** A Proxy {@link Iterator Iterator} which takes a {@link Predicate Predicate} instance to filter\n   * out objects from an underlying {@link Iterator Iterator} instance.\n+  * out objects from an underlying {@link Iterator Iterator} instance.\n+  * Only objects for which the\n+  * specified <code>Predicate</code> evaluates to <code>true</code> are\n+  * returned.\n   *\n   * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n   * @author Jan Sorensen\n \n     // Iterator interface\n     //-------------------------------------------------------------------------\n+    \n+    /** @return true if there is another object that matches the given predicate */\n     public boolean hasNext() {\n         if ( nextObjectSet ) {\n             return true;\n         }\n     }\n \n+    /** @return the next object which matches the given predicate */\n     public Object next() {\n         if ( !nextObjectSet ) {\n             if (!setNextObject()) {", "timestamp": 1012580860, "metainfo": ""}