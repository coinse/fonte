{"sha": "894fd838fb695d794fbd28cc66c82b80a9688c91", "log": "[COLLECTIONS-488] Added CollectionUtils.matchesAll(Iterable, Predicate), thanks to Josh Cain.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/CollectionUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/CollectionUtils.java\n             }\n         }\n         return false;\n+    }\n+\n+    /**\n+     * Answers true if a predicate is true for every element of a\n+     * collection.\n+     * <p>\n+     * A <code>null</code> predicate returns false.<br/>\n+     * A <code>null</code> or empty collection returns true.\n+     *\n+     * @param <C>  the type of object the {@link Iterable} contains\n+     * @param input  the {@link Iterable} to get the input from, may be null\n+     * @param predicate  the predicate to use, may be null\n+     * @return true if every element of the collection matches the predicate or if the\n+     * collection is empty, false otherwise\n+     */\n+    public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate) {\n+        if (predicate == null) {\n+            return false;\n+        }\n+\n+        if (input != null) {\n+            for (final C o : input) {\n+                if (!predicate.evaluate(o)) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java\n+++ b/src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java\n         assertEquals(factorial, permutations.size());\n     }\n \n+    @Test\n+    public void testMatchesAll() {\n+        assertFalse(CollectionUtils.matchesAll(null, null));\n+        assertFalse(CollectionUtils.matchesAll(collectionA, null));\n+\n+        Predicate<Integer> lessThanFive = new Predicate<Integer>() {\n+            public boolean evaluate(Integer object) {\n+                return object < 5;\n+            }\n+        };\n+        assertTrue(CollectionUtils.matchesAll(collectionA, lessThanFive));\n+        \n+        Predicate<Integer> lessThanFour = new Predicate<Integer>() {\n+            public boolean evaluate(Integer object) {\n+                return object < 4;\n+            }\n+        };\n+        assertFalse(CollectionUtils.matchesAll(collectionA, lessThanFour));\n+        \n+        assertTrue(CollectionUtils.matchesAll(null, lessThanFour));\n+        assertTrue(CollectionUtils.matchesAll(emptyCollection, lessThanFour));\n+    }\n+\n }", "timestamp": 1383648635, "metainfo": ""}