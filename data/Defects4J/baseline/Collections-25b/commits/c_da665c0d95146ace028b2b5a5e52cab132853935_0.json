{"sha": "da665c0d95146ace028b2b5a5e52cab132853935", "log": "Change to extend AbstractListDecorator (better superclass)   ", "commit": "\n--- a/src/java/org/apache/commons/collections/decorators/FixedSizeList.java\n+++ b/src/java/org/apache/commons/collections/decorators/FixedSizeList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/FixedSizeList.java,v 1.4 2003/05/07 12:18:55 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/FixedSizeList.java,v 1.5 2003/05/09 16:39:23 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections.decorators;\n \n import java.util.Collection;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.ListIterator;\n+\n+import org.apache.commons.collections.IteratorUtils;\n \n /**\n  * <code>FixedSizeList</code> decorates another <code>List</code>\n  * The set method is allowed (as it doesn't change the list size).\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.4 $ $Date: 2003/05/07 12:18:55 $\n+ * @version $Revision: 1.5 $ $Date: 2003/05/09 16:39:23 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeList extends UnmodifiableCollection implements List {\n+public class FixedSizeList extends AbstractListDecorator {\n \n     /**\n      * Factory method to create a fixed size list.\n         super(list);\n     }\n \n-    /**\n-     * Gets the list being decorated.\n-     * \n-     * @return the decorated list\n-     */\n-    protected List getList() {\n-        return (List) getCollection();\n+    //-----------------------------------------------------------------------\n+    public boolean add(Object object) {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n-    //-----------------------------------------------------------------------\n     public void add(int index, Object object) {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n+    }\n+\n+    public boolean addAll(Collection coll) {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n     public boolean addAll(int index, Collection coll) {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n+    }\n+\n+    public void clear() {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n     public Object get(int index) {\n         return getList().indexOf(object);\n     }\n \n+    public Iterator iterator() {\n+        return IteratorUtils.unmodifiableIterator(getCollection().iterator());\n+    }\n+\n     public int lastIndexOf(Object object) {\n         return getList().lastIndexOf(object);\n     }\n \n     public ListIterator listIterator() {\n-        return listIterator(0);\n+        return new FixedSizeListIterator(getList().listIterator(0));\n     }\n \n     public ListIterator listIterator(int index) {\n     }\n \n     public Object remove(int index) {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n+    }\n+\n+    public boolean remove(Object object) {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n+    }\n+\n+    public boolean removeAll(Collection coll) {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n+    }\n+\n+    public boolean retainAll(Collection coll) {\n+        throw new UnsupportedOperationException(\"List is fixed size\");\n     }\n \n     public Object set(int index, Object object) {\n     /**\n      * List iterator that only permits changes via set()\n      */\n-    public static class FixedSizeListIterator extends AbstractListIteratorDecorator {\n+    protected static class FixedSizeListIterator extends AbstractListIteratorDecorator {\n         protected FixedSizeListIterator(ListIterator iterator) {\n             super(iterator);\n         }\n         public void remove() {\n-            throw new UnsupportedOperationException();\n+            throw new UnsupportedOperationException(\"List is fixed size\");\n         }\n         public void add(Object object) {\n-            throw new UnsupportedOperationException();\n+            throw new UnsupportedOperationException(\"List is fixed size\");\n         }\n         public void remove(Object object) {\n-            throw new UnsupportedOperationException();\n+            throw new UnsupportedOperationException(\"List is fixed size\");\n         }\n     }\n ", "timestamp": 1052498363, "metainfo": ""}