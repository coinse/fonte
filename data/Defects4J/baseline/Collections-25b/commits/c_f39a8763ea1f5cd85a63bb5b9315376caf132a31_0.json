{"sha": "f39a8763ea1f5cd85a63bb5b9315376caf132a31", "log": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.  Also see the following revisions:      ------------------------------------------------------------------------     r751849 | mbenson | 2009-03-09 14:32:22 -0700 (Mon, 09 Mar 2009) | 1 line          comment     ------------------------------------------------------------------------   ", "commit": "\n--- a/src/java/org/apache/commons/collections/OrderedIterator.java\n+++ b/src/java/org/apache/commons/collections/OrderedIterator.java\n package org.apache.commons.collections;\n \n import java.util.Iterator;\n+import java.util.ListIterator;\n+import java.util.NoSuchElementException;\n \n /**\n- * Defines an iterator that operates over an ordered collection.\n+ * Defines an iterator that operates over an ordered container. Subset of {@link ListIterator}.\n  * <p>\n- * This iterator allows both forward and reverse iteration through the collection.\n- *  \n+ * This iterator allows both forward and reverse iteration through the container.\n+ *\n+ * @param <E> the type to iterate over\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n  * @author Stephen Colebourne\n  */\n-public interface OrderedIterator extends Iterator {\n+public interface OrderedIterator<E> extends Iterator<E> {\n \n     /**\n      * Checks to see if there is a previous element that can be iterated to.\n     boolean hasPrevious();\n \n     /**\n-     * Gets the previous element from the collection.\n+     * Gets the previous element from the container.\n      *\n      * @return the previous element in the iteration\n-     * @throws java.util.NoSuchElementException if the iteration is finished\n+     * @throws NoSuchElementException if the iteration is finished\n      */\n-    Object previous();\n+    E previous();\n \n }", "timestamp": 1252994189, "metainfo": ""}