{"sha": "513ef0ae75350a33395f251bc04e088e01086954", "log": "Rename TestComparator to AbstractTestComparator Tidy comparator test classes licenses/javadoc   ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/comparators/AbstractTestComparator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/AbstractTestComparator.java,v 1.1 2003/10/01 22:14:48 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.comparators;\n+\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import org.apache.commons.collections.TestObject;\n+\n+/**\n+ * Abstract test class for testing the Comparator interface.\n+ * <p>\n+ * Concrete subclasses declare the comparator to be tested.\n+ * They also declare certain aspects of the tests.\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public abstract class AbstractTestComparator extends TestObject {\n+\n+    /**\n+     * JUnit constructor.\n+     * \n+     * @param testName  the test class name\n+     */\n+    public AbstractTestComparator(String testName) {\n+        super(testName);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Implement this method to return the comparator to test.\n+     * \n+     * @return the comparator to test\n+     */\n+    protected abstract Comparator makeComparator();\n+    \n+    /**\n+     * Implement this method to return a list of sorted objects.\n+     * \n+     * @return sorted objects\n+     */\n+    protected abstract List getComparableObjectsOrdered();\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Implements the abstract superclass method to return the comparator.\n+     * \n+     * @return a full iterator\n+     */\n+    protected Object makeObject() {\n+        return makeComparator();\n+    }\n+\n+    /**\n+     * Overrides superclass to block tests.\n+     */\n+    public boolean supportsEmptyCollections() {\n+        return false;\n+    }\n+\n+    /**\n+     * Overrides superclass to block tests.\n+     */\n+    public boolean supportsFullCollections() {\n+        return false;\n+    }\n+\n+    /**\n+     * Overrides superclass to set the compatability to version 2\n+     * as there were no Comparators in version 1.x.\n+     */\n+    protected String getCompatibilityVersion() {\n+        return \"2\";\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Reverse the list.\n+     */\n+    protected void reverseObjects(List list) {\n+        Collections.reverse(list);\n+    }\n+\n+    /**\n+     * Randomize the list.\n+     */\n+    protected void randomizeObjects(List list) {\n+        Collections.shuffle(list);\n+    }\n+\n+    /**\n+     * Sort the list.\n+     */\n+    protected void sortObjects(List list, Comparator comparator) {\n+        Collections.sort(list,comparator);\n+\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Test sorting an empty list\n+     */\n+    public void testEmptyListSort() {\n+        List list = new LinkedList();\n+        sortObjects(list, makeComparator());\n+\n+        List list2 = new LinkedList();\n+        \n+        assertTrue(\"Comparator cannot sort empty lists\",\n+                   list2.equals(list));\n+    }\n+\n+    /**\n+     * Test sorting a reversed list.\n+     */\n+    public void testReverseListSort() {\n+        Comparator comparator = makeComparator();\n+\n+        List randomList = getComparableObjectsOrdered();\n+        reverseObjects(randomList);\n+        sortObjects(randomList,comparator);\n+\n+        List orderedList = getComparableObjectsOrdered();\n+\n+        assertTrue(\"Comparator did not reorder the List correctly\",\n+                   orderedList.equals(randomList));\n+\n+    }\n+\n+    /**\n+     * Test sorting a random list.\n+     */\n+    public void testRandomListSort() {\n+        Comparator comparator = makeComparator();\n+\n+        List randomList = getComparableObjectsOrdered();\n+        randomizeObjects(randomList);\n+        sortObjects(randomList,comparator);\n+\n+        List orderedList = getComparableObjectsOrdered();\n+\n+        /* debug \n+        Iterator i = randomList.iterator();\n+        while (i.hasNext()) {\n+            System.out.println(i.next());\n+        }\n+        */\n+\n+        assertTrue(\"Comparator did not reorder the List correctly\",\n+                   orderedList.equals(randomList));\n+\n+    }\n+\n+    /**\n+     * Nearly all Comparators should be Serializable.\n+     */\n+    public void testComparatorIsSerializable() {\n+        Comparator comparator = makeComparator();\n+        assertTrue(\"This comparator should be Serializable.\",\n+                   comparator instanceof Serializable);\n+    }\n+\n+    public String getCanonicalComparatorName(Object object) {\n+        StringBuffer retval = new StringBuffer();\n+        retval.append(\"data/test/\");\n+        String colName = object.getClass().getName();\n+        colName = colName.substring(colName.lastIndexOf(\".\")+1,colName.length());\n+        retval.append(colName);\n+        retval.append(\".version\");\n+        retval.append(getCompatibilityVersion());\n+        retval.append(\".obj\");\n+        return retval.toString();\n+    }\n+\n+    /**\n+     * Compare the current serialized form of the Comparator\n+     * against the canonical version in CVS.\n+     */\n+    public void testComparatorCompatibility() throws IOException, ClassNotFoundException {\n+        if(!skipSerializedCanonicalTests()) {\n+            Comparator comparator = null;\n+    \n+            // test to make sure the canonical form has been preserved\n+            try {\n+                comparator = (Comparator) readExternalFormFromDisk(getCanonicalComparatorName(makeComparator()));\n+        \t} catch (FileNotFoundException exception) {\n+    \n+                boolean autoCreateSerialized = false;\n+    \n+        \t    if(autoCreateSerialized) {\n+    \t          \tcomparator = makeComparator();\n+            \t\tString fileName = getCanonicalComparatorName(comparator);\n+            \t\twriteExternalFormToDisk((Serializable) comparator, fileName);\n+            \t\tfail(\"Serialized form could not be found.  A serialized version \" +\n+            \t\t     \"has now been written (and should be added to CVS): \" + fileName);\n+                } else {\n+                    fail(\"The Serialized form could be located to test serialization \" +\n+                        \"compatibility: \" + exception.getMessage());\n+                }\n+            }\n+    \n+            \n+            // make sure the canonical form produces the ordering we currently\n+            // expect\n+            List randomList = getComparableObjectsOrdered();\n+            reverseObjects(randomList);\n+            sortObjects(randomList,comparator);\n+    \n+            List orderedList = getComparableObjectsOrdered();\n+    \n+            assertTrue(\"Comparator did not reorder the List correctly\",\n+                       orderedList.equals(randomList));\n+        }\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n-/* \n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java,v 1.3 2003/08/31 17:28:46 scolebourne Exp $\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java,v 1.4 2003/10/01 22:14:48 scolebourne Exp $\n  * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n package org.apache.commons.collections.comparators;\n \n /**\n  * Tests for {@link BooleanComparator}.\n  * \n- * @since Commons Collections 2.2\n- * \n- * @version $Revision: 1.3 $ $Date: 2003/08/31 17:28:46 $\n+ * @version $Revision: 1.4 $ $Date: 2003/10/01 22:14:48 $\n  * \n  * @author Rodney Waldhoff\n  */\n-public class TestBooleanComparator extends TestComparator {\n+public class TestBooleanComparator extends AbstractTestComparator {\n \n     // conventional\n     // ------------------------------------------------------------------------\n     // collections testing framework\n     // ------------------------------------------------------------------------\n \n-    public Comparator makeComparator() {\n+    protected Comparator makeComparator() {\n         return new BooleanComparator();\n     }\n \n-    public List getComparableObjectsOrdered() {\n+    protected List getComparableObjectsOrdered() {\n         List list = new ArrayList();\n         list.add(new Boolean(false));\n         list.add(Boolean.FALSE);\n--- a/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java,v 1.3 2003/10/01 22:14:48 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n package org.apache.commons.collections.comparators;\n \n import java.util.Comparator;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n-public class TestComparableComparator extends TestComparator {\n+/**\n+ * Tests for ComparableComparator.\n+ * \n+ * @version $Revision: 1.3 $ $Date: 2003/10/01 22:14:48 $\n+ * \n+ * @author Unknown\n+ */\n+public class TestComparableComparator extends AbstractTestComparator {\n \n     public TestComparableComparator(String testName) {\n         super(testName);\n         return new TestSuite(TestComparableComparator.class);\n     }\n \n-    public Comparator makeComparator() {\n+    protected Comparator makeComparator() {\n         return new ComparableComparator();\n     }\n \n-    public List getComparableObjectsOrdered() {\n+    protected List getComparableObjectsOrdered() {\n         List list = new LinkedList();\n         list.add(new Integer(1));\n         list.add(new Integer(2));\n--- a/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n-/* \n- * $Id: TestComparatorChain.java,v 1.6 2003/08/31 17:28:46 scolebourne Exp $\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java,v 1.7 2003/10/01 22:14:48 scolebourne Exp $\n  * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n-\n package org.apache.commons.collections.comparators;\n \n import java.io.Serializable;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n-public class TestComparatorChain extends TestComparator {\n+/**\n+ * Tests for ComparatorChain.\n+ * \n+ * @version $Revision: 1.7 $ $Date: 2003/10/01 22:14:48 $\n+ * \n+ * @author Unknown\n+ */\n+public class TestComparatorChain extends AbstractTestComparator {\n \n     public TestComparatorChain(String testName) {\n         super(testName);\n         return new TestSuite(TestComparatorChain.class);\n     }\n \n-    public Comparator makeComparator() {\n+    protected Comparator makeComparator() {\n         ComparatorChain chain = new ComparatorChain(new ColumnComparator(0));\n         chain.addComparator(new ColumnComparator(1),true); // reverse the second column\n         chain.addComparator(new ColumnComparator(2),false);\n         assertTrue(chain.compare(new Integer(4), new Integer(4)) == 0);            \n     }\n \n-    public List getComparableObjectsOrdered() {\n+    protected List getComparableObjectsOrdered() {\n         List list = new LinkedList();\n         // this is the correct order assuming a\n         // \"0th forward, 1st reverse, 2nd forward\" sort\n--- a/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java,v 1.3 2003/08/31 17:28:46 scolebourne Exp $\n- * $Revision: 1.3 $\n- * $Date: 2003/08/31 17:28:46 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java,v 1.4 2003/10/01 22:14:48 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n /**\n  * Test class for FixedOrderComparator.\n  * \n+ * @version $Revision: 1.4 $ $Date: 2003/10/01 22:14:48 $\n+ * \n  * @author David Leppik \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n-package org.apache.commons.collections.comparators;\n-\n-/* ====================================================================\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestNullComparator.java,v 1.6 2003/10/01 22:14:48 scolebourne Exp $\n+ * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2001 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n+package org.apache.commons.collections.comparators;\n \n import java.util.Comparator;\n import java.util.LinkedList;\n import junit.framework.TestSuite;\n \n /**\n- *  Test the NullComparator \n- *\n- *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- *  @version $Id: TestNullComparator.java,v 1.5 2003/08/31 17:28:46 scolebourne Exp $\n- **/\n-public abstract class TestNullComparator extends TestComparator {\n+ * Test the NullComparator.\n+ * \n+ * @version $Revision: 1.6 $ $Date: 2003/10/01 22:14:48 $\n+ * \n+ * @author Michael A. Smith\n+ */\n+public abstract class TestNullComparator extends AbstractTestComparator {\n \n     public TestNullComparator(String testName) {\n         super(testName);\n \t    super(testName);\n \t}\n \n-\tpublic Comparator makeComparator() {\n+    protected Comparator makeComparator() {\n \t    return new NullComparator();\n \t}\n \t\n-\tpublic List getComparableObjectsOrdered() {\n+    protected List getComparableObjectsOrdered() {\n         List list = new LinkedList();\n \t    list.add(new Integer(1));\n \t    list.add(new Integer(2));\n--- a/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n-/* \n- * $Id: TestReverseComparator.java,v 1.5 2003/08/31 17:28:46 scolebourne Exp $\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java,v 1.6 2003/10/01 22:14:48 scolebourne Exp $\n  * ====================================================================\n+ *\n  * The Apache Software License, Version 1.1\n  *\n  * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n  *    Alternately, this acknowledgement may appear in the software itself,\n  *    if and wherever such third-party acknowledgements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * individuals on behalf of the Apache Software Foundation.  For more\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n+ *\n  */\n-\n package org.apache.commons.collections.comparators;\n \n import java.io.ByteArrayInputStream;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n \n-public class TestReverseComparator extends TestComparator {\n+/**\n+ * Tests for ReverseComparator.\n+ * \n+ * @version $Revision: 1.6 $ $Date: 2003/10/01 22:14:48 $\n+ * \n+ * @author Unknown\n+ */\n+public class TestReverseComparator extends AbstractTestComparator {\n \n     public TestReverseComparator(String testName) {\n         super(testName);\n      * \n      * @return Comparator that returns \"natural\" order\n      */\n-    public Comparator makeComparator() {\n+    protected Comparator makeComparator() {\n         return new ReverseComparator(Collections.reverseOrder());\n     }\n \n-    public List getComparableObjectsOrdered() {\n+    protected List getComparableObjectsOrdered() {\n         List list = new LinkedList();\n         list.add(new Integer(1));\n         list.add(new Integer(2));", "timestamp": 1065046488, "metainfo": ""}