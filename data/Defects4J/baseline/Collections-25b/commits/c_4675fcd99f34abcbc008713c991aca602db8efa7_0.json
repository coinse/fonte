{"sha": "4675fcd99f34abcbc008713c991aca602db8efa7", "log": "Fix raw types  ", "commit": "\n--- a/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n      * @param in the input stream\n      * @throws IOException\n      * @throws ClassNotFoundException\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    protected void doReadObject(Map map, ObjectInputStream in) throws IOException,\n+     * @throws ClassCastException if the stream does not contain the correct objects\n+     */\n+    protected void doReadObject(Map<E, MutableInteger> map, ObjectInputStream in) throws IOException,\n             ClassNotFoundException {\n         this.map = map;\n         int entrySize = in.readInt();\n         for (int i = 0; i < entrySize; i++) {\n-            Object obj = in.readObject();\n+            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n+            E obj = (E) in.readObject();\n             int count = in.readInt();\n             map.put(obj, new MutableInteger(count));\n             size += count;\n--- a/src/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TreeBag.java\n     /**\n      * Read the bag in using a custom routine.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n-        Comparator comp = (Comparator) in.readObject();\n-        super.doReadObject(new TreeMap(comp), in);\n+        @SuppressWarnings(\"unchecked\")  // This will fail at runtime if the stream is incorrect\n+        Comparator<? super E> comp = (Comparator<? super E>) in.readObject();\n+        super.doReadObject(new TreeMap<E, MutableInteger>(comp), in);\n     }\n \n }", "timestamp": 1287421244, "metainfo": ""}