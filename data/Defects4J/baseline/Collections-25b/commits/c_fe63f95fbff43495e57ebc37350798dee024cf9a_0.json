{"sha": "fe63f95fbff43495e57ebc37350798dee024cf9a", "log": "[COLLECTIONS-474] Added sanity checks, javadoc clarification, changelog entry.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java\n      *\n      * @param index the index in the Map to start at.\n      * @param map the Map containing the entries to be added.\n+     * @throws IndexOutOfBoundsException if the index is out of range [0, size]\n      */\n     public void putAll(int index, final Map<? extends K, ? extends V> map) {\n+        if (index < 0 || index > insertOrder.size()) {\n+            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + insertOrder.size());\n+        }\n         for (final Map.Entry<? extends K, ? extends V> entry : map.entrySet()) {\n             final K key = entry.getKey();\n             final boolean contains = containsKey(key);\n      * @param key  the key\n      * @param value  the value\n      * @return the value previously mapped to the key\n-     * @throws IndexOutOfBoundsException if the index is out of range\n+     * @throws IndexOutOfBoundsException if the index is out of range [0, size]\n      * @since 3.2\n      */\n     public V put(int index, final K key, final V value) {\n+        if (index < 0 || index > insertOrder.size()) {\n+            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + insertOrder.size());\n+        }\n+\n         final Map<K, V> m = decorated();\n         if (m.containsKey(key)) {\n             final V result = m.remove(key);", "timestamp": 1372104256, "metainfo": ""}