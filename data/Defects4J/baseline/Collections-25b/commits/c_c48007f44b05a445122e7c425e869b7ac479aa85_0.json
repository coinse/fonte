{"sha": "c48007f44b05a445122e7c425e869b7ac479aa85", "log": "[COLLECTIONS-519] Constructors of *Utils classes are now protected to allow sub-classing. Thanks to Radoslav Paskalev, Daniel Feist.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/ClosureUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/ClosureUtils.java\n     /**\n      * This class is not normally instantiated.\n      */\n-    private ClosureUtils() {}\n+    protected ClosureUtils() {}\n \n     /**\n      * Gets a Closure that always throws an exception.\n--- a/src/main/java/org/apache/commons/collections4/CollectionUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/CollectionUtils.java\n     /**\n      * <code>CollectionUtils</code> should not normally be instantiated.\n      */\n-    private CollectionUtils() {}\n+    protected CollectionUtils() {}\n \n     /**\n      * Returns the immutable EMPTY_COLLECTION with generic type safety.\n--- a/src/main/java/org/apache/commons/collections4/ComparatorUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/ComparatorUtils.java\n     /**\n      * ComparatorUtils should not normally be instantiated.\n      */\n-    private ComparatorUtils() {}\n+    protected ComparatorUtils() {}\n \n     /**\n      * Comparator for natural sort order.\n--- a/src/main/java/org/apache/commons/collections4/EnumerationUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/EnumerationUtils.java\n     /**\n      * EnumerationUtils is not normally instantiated.\n      */\n-    private EnumerationUtils() {}\n+    protected EnumerationUtils() {}\n \n     /**\n      * Creates a list based on an enumeration.\n--- a/src/main/java/org/apache/commons/collections4/FactoryUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/FactoryUtils.java\n     /**\n      * This class is not normally instantiated.\n      */\n-    private FactoryUtils() {}\n+    protected FactoryUtils() {}\n \n     /**\n      * Gets a Factory that always throws an exception.\n--- a/src/main/java/org/apache/commons/collections4/IteratorUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/IteratorUtils.java\n     /**\n      * IteratorUtils is not normally instantiated.\n      */\n-    private IteratorUtils() {}\n+    protected IteratorUtils() {}\n \n     // Empty\n     //-----------------------------------------------------------------------\n--- a/src/main/java/org/apache/commons/collections4/ListUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/ListUtils.java\n     /**\n      * <code>ListUtils</code> should not normally be instantiated.\n      */\n-    private ListUtils() {}\n+    protected ListUtils() {}\n \n     //-----------------------------------------------------------------------\n \n--- a/src/main/java/org/apache/commons/collections4/MapUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/MapUtils.java\n     /**\n      * <code>MapUtils</code> should not normally be instantiated.\n      */\n-    private MapUtils() {}\n+    protected MapUtils() {}\n \n     // Type safe getters\n     //-------------------------------------------------------------------------\n--- a/src/main/java/org/apache/commons/collections4/MultiMapUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/MultiMapUtils.java\n     /**\n      * <code>MultiMapUtils</code> should not normally be instantiated.\n      */\n-    private MultiMapUtils() {\n+    protected MultiMapUtils() {\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/collections4/PredicateUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/PredicateUtils.java\n     /**\n      * This class is not normally instantiated.\n      */\n-    private PredicateUtils() {}\n+    protected PredicateUtils() {}\n \n     // Simple predicates\n     //-----------------------------------------------------------------------------\n--- a/src/main/java/org/apache/commons/collections4/QueueUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/QueueUtils.java\n     /**\n      * <code>QueueUtils</code> should not normally be instantiated.\n      */\n-    private QueueUtils() {}\n+    protected QueueUtils() {}\n \n     //-----------------------------------------------------------------------\n \n--- a/src/main/java/org/apache/commons/collections4/SetUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/SetUtils.java\n     /**\n      * <code>SetUtils</code> should not normally be instantiated.\n      */\n-    private SetUtils() {}\n+    protected SetUtils() {}\n \n     //-----------------------------------------------------------------------\n \n--- a/src/main/java/org/apache/commons/collections4/SplitMapUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/SplitMapUtils.java\n import java.util.Map;\n import java.util.Set;\n \n-import org.apache.commons.collections4.set.UnmodifiableSet;\n import org.apache.commons.collections4.collection.UnmodifiableCollection;\n import org.apache.commons.collections4.iterators.UnmodifiableMapIterator;\n import org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter;\n import org.apache.commons.collections4.map.UnmodifiableEntrySet;\n+import org.apache.commons.collections4.set.UnmodifiableSet;\n \n /**\n  * Utilities for working with \"split maps:\" objects that implement {@link Put}\n     /**\n      * <code>SplitMapUtils</code> should not normally be instantiated.\n      */\n-    private SplitMapUtils() {}\n+    protected SplitMapUtils() {}\n \n     //-----------------------------------------------------------------------\n \n--- a/src/main/java/org/apache/commons/collections4/TransformerUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/TransformerUtils.java\n     /**\n      * This class is not normally instantiated.\n      */\n-    private TransformerUtils() {}\n+    protected TransformerUtils() {}\n \n     /**\n      * Gets a transformer that always throws an exception.\n--- a/src/main/java/org/apache/commons/collections4/TrieUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/TrieUtils.java\n     /**\n      * {@link TrieUtils} should not normally be instantiated.\n      */\n-    private TrieUtils() {}\n+    protected TrieUtils() {}\n \n     /**\n      * Returns an unmodifiable instance of a {@link Trie}", "timestamp": 1398942299, "metainfo": ""}