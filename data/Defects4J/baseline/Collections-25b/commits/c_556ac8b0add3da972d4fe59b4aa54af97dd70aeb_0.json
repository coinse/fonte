{"sha": "556ac8b0add3da972d4fe59b4aa54af97dd70aeb", "log": "Fix javadoc.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/iterators/LazyIteratorChain.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/LazyIteratorChain.java\n  * The Iterators are provided by {@link #nextIterator(int)} which has to be overridden by\n  * sub-classes and allows to lazily create the Iterators as they are accessed:\n  * <pre>\n- * return new LazyIteratorChain<String>() {\n- *     protected Iterator<String> nextIterator(int count) {\n+ * return new LazyIteratorChain&lt;String&gt;() {\n+ *     protected Iterator&lt;String&gt; nextIterator(int count) {\n  *         return count == 1 ? Arrays.asList(\"foo\", \"bar\").iterator() : null;\n  *     }\n  * };", "timestamp": 1368475780, "metainfo": ""}