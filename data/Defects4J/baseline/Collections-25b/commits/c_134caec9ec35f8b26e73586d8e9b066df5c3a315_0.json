{"sha": "134caec9ec35f8b26e73586d8e9b066df5c3a315", "log": "fixed doco bug   ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorChain.java\n+++ b/src/java/org/apache/commons/collections/IteratorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorChain.java,v 1.2 2002/04/08 23:59:58 morgand Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/04/08 23:59:58 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/Attic/IteratorChain.java,v 1.3 2002/04/09 16:33:40 morgand Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/04/09 16:33:40 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * <p>An IteratorChain is an Iterator that wraps one or\n- * more Iterators in sequence.  When any method from the\n+ * more Iterators.  When any method from the\n  * Iterator interface is called, the IteratorChain will\n- * call the same method on the first Iterator in the chain\n- * until it is exhausted until the first Iterator is exhausted.\n- * At that point, the IteratorChain will move to the next\n- * Iterator in the IteratorChain.  The IteratorChain will\n- * continue in this pattern until all Iterators in the\n- * IteratorChain are exhausted.</p>\n+ * proxy to a single underlying Iterator.  The \n+ * IteratorChain will invoke the Iterators in sequence until \n+ * all Iterators are exhausted completely.</p>\n  * \n  * <p>Under many circumstances, linking Iterators together\n  * in this manner is more efficient (and convenient)\n  * than reading out the contents of each Iterator into a\n  * List and creating a new Iterator.</p>\n- *  \n+ * \n  * <p>Calling a method that adds new Iterator<i>after\n  * a method in the Iterator interface\n  * has been called</i> will result in an", "timestamp": 1018370020, "metainfo": ""}