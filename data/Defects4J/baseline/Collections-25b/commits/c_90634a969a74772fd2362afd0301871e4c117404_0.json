{"sha": "90634a969a74772fd2362afd0301871e4c117404", "log": "Simplify and avoid complaints about \"dead store to actual\"  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java\n+++ b/src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java\n         assertTrue(expected > 0);\n \n         // single use iterator\n-        for(@SuppressWarnings(\"unused\") final Integer actual : iterable) {\n-            fail(\"should not be able to iterate twice\");\n-        }\n+        assertFalse(\"should not be able to iterate twice\", IteratorUtils.asIterable(iterator).iterator().hasNext());\n     }\n     \n     public void testAsIterableNull() {\n         assertTrue(expectedNodeIndex > 0);\n \n         // single use iterator\n-        for (@SuppressWarnings(\"unused\") final Node actual : IteratorUtils.asIterable(iterator)) {\n-            fail(\"should not be able to iterate twice\");\n-        }\n+        assertFalse(\"should not be able to iterate twice\", IteratorUtils.asIterable(iterator).iterator().hasNext());\n     }\n     /**\n      * Tests method nodeListIterator(Node)\n         assertTrue(expectedNodeIndex > 0);\n \n         // single use iterator\n-        for (@SuppressWarnings(\"unused\") final Node actual : IteratorUtils.asIterable(iterator)) {\n-            fail(\"should not be able to iterate twice\");\n-        }\n+        assertFalse(\"should not be able to iterate twice\", IteratorUtils.asIterable(iterator).iterator().hasNext());\n     }\n     \n     /**", "timestamp": 1367189954, "metainfo": ""}