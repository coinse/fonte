{"sha": "c7ec7fa5ef36629fa6ace1556c2abfd088236d8e", "log": "changed 'String COLLECTIONS_VERSION' to 'int COLLECTIONS_MAJOR_VERSION', separated COLLECTIONS_MAJOR_VERSION from COMPATIBILITY_VERSION   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestMap.java\n+++ b/src/test/org/apache/commons/collections/TestMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.11 2002/02/22 22:21:50 morgand Exp $\n- * $Revision: 1.11 $\n- * $Date: 2002/02/22 22:21:50 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestMap.java,v 1.12 2002/02/25 20:57:08 morgand Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2002/02/25 20:57:08 $\n  *\n  * ====================================================================\n  *\n  *\n  * @author Michael Smith\n  * @author Rodney Waldhoff\n- * @version $Id: TestMap.java,v 1.11 2002/02/22 22:21:50 morgand Exp $\n+ * @version $Id: TestMap.java,v 1.12 2002/02/25 20:57:08 morgand Exp $\n  */\n public abstract class TestMap extends TestObject {\n \n         String mapName = map.getClass().getName();\n         mapName = mapName.substring(mapName.lastIndexOf(\".\")+1,mapName.length());\n         retval.append(mapName);\n-        retval.append(\".emptyMap.\");\n-        retval.append(COLLECTIONS_VERSION);\n+        retval.append(\".emptyMap.version\");\n+        retval.append(COMPATIBILITY_VERSION);\n         retval.append(\".obj\");\n         return retval.toString();\n     }\n         String mapName = map.getClass().getName();\n         mapName = mapName.substring(mapName.lastIndexOf(\".\")+1,mapName.length());\n         retval.append(mapName);\n-        retval.append(\".fullMap.\");\n-        retval.append(COLLECTIONS_VERSION);\n+        retval.append(\".fullMap.version\");\n+        retval.append(COMPATIBILITY_VERSION);\n         retval.append(\".obj\");\n         return retval.toString();\n     }\n--- a/src/test/org/apache/commons/collections/TestObject.java\n+++ b/src/test/org/apache/commons/collections/TestObject.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.5 2002/02/25 18:14:57 morgand Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/02/25 18:14:57 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestObject.java,v 1.6 2002/02/25 20:57:08 morgand Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/02/25 20:57:08 $\n  *\n  * ====================================================================\n  *\n  * test case (method) your {@link Object} fails.\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: TestObject.java,v 1.5 2002/02/25 18:14:57 morgand Exp $\n+ * @version $Id: TestObject.java,v 1.6 2002/02/25 20:57:08 morgand Exp $\n  */\n public abstract class TestObject extends TestCase {\n     public TestObject(String testName) {\n         super(testName);\n     }\n \n+    // current major release for Collections\n+    public static final int COLLECTIONS_MAJOR_VERSION = 2;\n     // This constant makes it possible for TestMap (and other subclasses, \n     // if necessary) to automatically check CVS for a versionX copy of a \n     // Serialized object, so we can make sure that compatibility is maintained.  \n     // See, for example, TestMap.getCanonicalFullMapName(Map map).\n-    public static final String COLLECTIONS_VERSION = \"version2\";\n+    // Subclasses can override this variable, indicating compatibility\n+    // with earlier Collections versions.\n+    public int COMPATIBILITY_VERSION = COLLECTIONS_MAJOR_VERSION;\n \n     /**\n      * Return a new, empty {@link Object} to used for testing.", "timestamp": 1014670628, "metainfo": ""}