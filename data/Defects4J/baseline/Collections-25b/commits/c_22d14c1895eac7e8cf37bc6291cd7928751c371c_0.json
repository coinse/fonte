{"sha": "22d14c1895eac7e8cf37bc6291cd7928751c371c", "log": "Javadoc format for <code>   ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/CollatingIterator.java,v 1.7 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/CollatingIterator.java,v 1.8 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * <code>A.next()</code> and <code>B.next()</code>.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.7 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.8 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n     // -------------------------------------------------------------------\n     \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code>.  Natural sort order\n+     * Constructs a new <code>CollatingIterator</code>.  Natural sort order\n      * will be used, and child iterators will have to be manually added \n      * using the {@link #addIterator(Iterator)} method.\n      */\n     }\n     \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code> that will used the\n+     * Constructs a new <code>CollatingIterator</code> that will used the\n      * specified comparator for ordering.  Child iterators will have to be \n      * manually added using the {@link #addIterator(Iterator)} method.\n      *\n-     * @param comp  the comparator to use for ordering, or <Code>null</Code>\n+     * @param comp  the comparator to use for ordering, or <code>null</code>\n      *    to use natural sort order\n      */\n     public CollatingIterator(Comparator comp) {\n     }\n     \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code> that will used the\n+     * Constructs a new <code>CollatingIterator</code> that will used the\n      * specified comparator for ordering and have the specified initial\n      * capacity.  Child iterators will have to be \n      * manually added using the {@link #addIterator(Iterator)} method.\n      *\n-     * @param comp  the comparator to use for ordering, or <Code>null</Code>\n+     * @param comp  the comparator to use for ordering, or <code>null</code>\n      *    to use natural sort order\n      * @param initIterCapacity  the initial capacity for the internal list\n      *    of child iterators\n     }\n \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code> that will use the\n+     * Constructs a new <code>CollatingIterator</code> that will use the\n      * specified comparator to provide ordered iteration over the two\n      * given iterators.\n      *\n     }\n \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code> that will use the\n+     * Constructs a new <code>CollatingIterator</code> that will use the\n      * specified comparator to provide ordered iteration over the array\n      * of iterators.\n      *\n     }\n \n     /**\n-     * Constructs a new <Code>CollatingIterator</Code> that will use the\n+     * Constructs a new <code>CollatingIterator</code> that will use the\n      * specified comparator to provide ordered iteration over the collection\n      * of iterators.\n      *\n     // -------------------------------------------------------------------\n \n     /**\n-     *  Returns <Code>true</Code> if any child iterator has remaining elements.\n+     *  Returns <code>true</code> if any child iterator has remaining elements.\n      *\n      *  @return true if this iterator has remaining elements\n      */\n--- a/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java,v 1.3 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java,v 1.4 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * to be {@link Iterator Iterator} instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.3 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.4 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n     private Object last;\n     \n     /**\n-     *  Constructs a new <Code>EnumerationIterator</Code> that will not\n+     *  Constructs a new <code>EnumerationIterator</code> that will not\n      *  function until {@link #setEnumeration(Enumeration)} is called.\n      */\n     public EnumerationIterator() {\n     }\n \n     /**\n-     *  Constructs a new <Code>EnumerationIterator</Code> that provides\n+     *  Constructs a new <code>EnumerationIterator</code> that provides\n      *  an iterator view of the given enumeration.\n      *\n      *  @param enumeration  the enumeration to use\n     }\n \n     /**\n-     *  Constructs a new <Code>EnumerationIterator</Code> that will remove\n+     *  Constructs a new <code>EnumerationIterator</code> that will remove\n      *  elements from the specified collection.\n      *\n      *  @param enum  the enumeration to use\n--- a/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterIterator.java,v 1.4 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterIterator.java,v 1.5 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * returned.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.4 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author Jan Sorensen\n     //-------------------------------------------------------------------------\n \n     /**\n-     * Constructs a new <Code>FilterIterator</Code> that will not function\n+     * Constructs a new <code>FilterIterator</code> that will not function\n      * until {@link #setIterator(Iterator) setIterator} is invoked.\n      */\n     public FilterIterator() {\n     }\n     \n     /**\n-     * Constructs a new <Code>FilterIterator</Code> that will not function\n+     * Constructs a new <code>FilterIterator</code> that will not function\n      * until {@link #setPredicate(Predicate) setPredicate} is invoked.\n      *\n      * @param iterator  the iterator to use\n     }\n \n     /**\n-     * Constructs a new <Code>FilterIterator</Code> that will use the\n+     * Constructs a new <code>FilterIterator</code> that will use the\n      * given iterator and predicate.\n      *\n      * @param iterator  the iterator to use\n--- a/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterListIterator.java,v 1.3 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/FilterListIterator.java,v 1.4 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * returned by the iterator.\n  * \n  * @since Commons Collections 2.0\n- * @version $Revision: 1.3 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.4 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Rodney Waldhoff\n  */\n     //-------------------------------------------------------------------------\n     \n     /**\n-     *  Constructs a new <Code>FilterListIterator</Code> that will not \n+     *  Constructs a new <code>FilterListIterator</code> that will not \n      *  function until \n      *  {@link ProxyListIterator#setListIterator(ListIterator) setListIterator}\n      *  and {@link #setPredicate(Predicate) setPredicate} are invoked.\n     }\n \n     /**\n-     * Constructs a new <Code>FilterListIterator</Code> that will not \n+     * Constructs a new <code>FilterListIterator</code> that will not \n      * function until {@link #setPredicate(Predicate) setPredicate} is invoked.\n      *\n      * @param iterator  the iterator to use\n     }\n \n     /**\n-     * Constructs a new <Code>FilterListIterator</Code>.\n+     * Constructs a new <code>FilterListIterator</code>.\n      *\n      * @param iterator  the iterator to use\n      * @param predicate  the predicate to use\n     }\n \n     /**\n-     * Constructs a new <Code>FilterListIterator</Code> that will not \n+     * Constructs a new <code>FilterListIterator</code> that will not \n      * function until \n      * {@link ProxyListIterator#setListIterator(ListIterator) setListIterator}\n      * is invoked.\n--- a/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.5 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.6 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * to not alter the underlying List of Iterators.</p>\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n     }\n \n     /**\n-     * Constructs a new <Code>IteratorChain</Code> over the two\n+     * Constructs a new <code>IteratorChain</code> over the two\n      * given iterators.\n      *\n      * @param a  the first child iterator\n     }\n \n     /**\n-     * Constructs a new <Code>IteratorChain</Code> over the array\n+     * Constructs a new <code>IteratorChain</code> over the array\n      * of iterators.\n      *\n      * @param iterators  the array of iterators\n     }\n \n     /**\n-     * Constructs a new <Code>IteratorChain</Code> over the collection\n+     * Constructs a new <code>IteratorChain</code> over the collection\n      * of iterators.\n      *\n      * @param iterators  the collection of iterators\n--- a/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java,v 1.3 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java,v 1.4 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Adapter to make an {@link Iterator Iterator} instance appear to be an {@link Enumeration Enumeration} instances\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.3 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.4 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n     private Iterator iterator;\n     \n     /**\n-     * Constructs a new <Code>IteratorEnumeration</Code> that will not \n+     * Constructs a new <code>IteratorEnumeration</code> that will not \n      * function until {@link #setIterator(Iterator) setIterator} is  \n      * invoked.\n      */\n     }\n \n     /**\n-     * Constructs a new <Code>IteratorEnumeration</Code> that will use\n+     * Constructs a new <code>IteratorEnumeration</code> that will use\n      * the given iterator. \n      * \n      * @param iterator  the iterator to use\n--- a/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n+++ b/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java,v 1.4 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java,v 1.5 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * operations of ListIterator.\n  * \n  * @since Commons Collections 2.1\n- * @version $Revision: 1.4 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n     //-------------------------------------------------------------------------\n \n     /**\n-     * Constructs a new <Code>ListIteratorWrapper</Code> that will wrap\n+     * Constructs a new <code>ListIteratorWrapper</code> that will wrap\n      * the given iterator.\n      *\n      * @param iterator  the iterator to wrap\n--- a/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyIterator.java,v 1.4 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyIterator.java,v 1.5 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n  * @see ProxyListIterator\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.4 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n     //-------------------------------------------------------------------------\n \n     /**\n-     * Constructs a new <Code>ProxyIterator</Code> that will not function\n+     * Constructs a new <code>ProxyIterator</code> that will not function\n      * until {@link #setIterator(Iterator)} is called.\n      */\n     public ProxyIterator() {\n     }\n     \n     /**\n-     * Constructs a new <Code>ProxyIterator</Code> that will use the\n+     * Constructs a new <code>ProxyIterator</code> that will use the\n      * given iterator.\n      *\n      * @param iterator  the underlying iterator\n--- a/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java,v 1.4 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java,v 1.5 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n  * @see ProxyIterator\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.4 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Rodney Waldhoff\n  */\n     //-------------------------------------------------------------------------\n \n     /**\n-     * Constructs a new <Code>ProxyListIterator</Code> that will not \n+     * Constructs a new <code>ProxyListIterator</code> that will not \n      * function until {@link #setListIterator(ListIterator) setListIterator}\n      * is invoked.\n      */\n     }\n \n     /**\n-     * Constructs a new <Code>ProxyListIterator</Code> that will use the\n+     * Constructs a new <code>ProxyListIterator</code> that will use the\n      * given list iterator.\n      *\n      * @param iterator  the list iterator to use\n--- a/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.5 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.6 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * object instance.</p>\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author Stephen Colebourne\n     private Object object;\n \n     /**\n-     * Constructs a new <Code>SingletonIterator</Code>.\n+     * Constructs a new <code>SingletonIterator</code>.\n      *\n      * @param object  the single object to return from the iterator\n      */\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.5 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.6 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * object instance.</p>\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Stephen Colebourne\n  */\n     private Object object;\n \n     /**\n-     * Constructs a new <Code>SingletonListIterator</Code>.\n+     * Constructs a new <code>SingletonListIterator</code>.\n      *\n      * @param object  the single object to return from the iterator\n      */\n--- a/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.4 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/TransformIterator.java,v 1.5 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * some other form.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.4 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.5 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n     \n     \n     /**\n-     * Constructs a new <Code>TransformIterator</Code> that will not function\n+     * Constructs a new <code>TransformIterator</code> that will not function\n      * until the {@link #setIterator(Iterator) setIterator} method is \n      * invoked.\n      */\n     }\n     \n     /**\n-     * Constructs a new <Code>TransformIterator</Code> that won't transform\n+     * Constructs a new <code>TransformIterator</code> that won't transform\n      * elements from the given iterator.\n      *\n      * @param iterator  the iterator to use\n     }\n \n     /**\n-     * Constructs a new <Code>TransformIterator</Code> that will use the\n+     * Constructs a new <code>TransformIterator</code> that will use the\n      * given iterator and transformer.  If the given transformer is null,\n      * then objects will not be transformed.\n      *\n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.5 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java,v 1.6 2003/09/29 22:02:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * and duplicate Objects are skipped.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.5 $ $Date: 2003/08/31 17:25:49 $\n+ * @version $Revision: 1.6 $ $Date: 2003/09/29 22:02:33 $\n  * \n  * @author Morgan Delagrange\n  */\n     //-------------------------------------------------------------------------\n     \n     /**\n-     *  Constructs a new <Code>UniqueFilterIterator</Code>.\n+     *  Constructs a new <code>UniqueFilterIterator</code>.\n      *\n      *  @param iterator  the iterator to use\n      */", "timestamp": 1064872953, "metainfo": ""}