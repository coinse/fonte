{"sha": "ef5aa20db3883b23e82575fba7a4553325d9935f", "log": "There is no backwards compatibility issue since this class is new since collections 1.0.  Therefore, since the entire Map interface is implemented, there's no reason to inherit from HashMap.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/SequencedHashMap.java\n+++ b/src/java/org/apache/commons/collections/SequencedHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.4 2002/02/21 13:46:25 mas Exp $\n- * $Revision: 1.4 $\n- * $Date: 2002/02/21 13:46:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SequencedHashMap.java,v 1.5 2002/02/22 02:34:59 mas Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2002/02/22 02:34:59 $\n  *\n  * ====================================================================\n  *\n  *  which they were added.  This data structure has fast <I>O(1)</I> search\n  *  time, deletion time, and insertion time.\n  *\n- *  This class inherits from {@link java.util.HashMap} purely for backwards\n- *  compatibility.  It should really be inheriting from {@link\n- *  java.util.AbstractMap}, or with a tiny extra bit of work, implement the\n- *  full map interface on its own. APIs should not rely on this class being an\n- *  actual {@link java.util.HashMap}, and instead should recognize it only as a\n- *  generic {@link java.util.Map} (unless, of course, you need the sequencing\n- *  functionality, but even in that case, this class should not be referred to\n- *  as a java.util.HashMap).\n- *\n  *  <P>Although this map is sequenced, it cannot implement {@link\n  *  java.util.List} because of incompatible interface definitions.  The remove\n  *  methods in List and Map have different return values (see: {@link\n  * @author <a href=\"mailto:dlr@collab.net\">Daniel Rall</a>\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  */\n-public class SequencedHashMap extends HashMap {\n+public class SequencedHashMap implements Map, Cloneable {\n \n   /**\n    *  {@link java.util.Map.Entry} that doubles as a node in the linked list\n    * <code>clone()</code>'d.  The cloned object maintains the same sequence.\n    *\n    * @return A clone of this instance.  \n+   *\n+   * @exception CloneNotSupportedException if clone is not supported by a\n+   * subclass.\n    */\n-  public Object clone () {\n+  public Object clone () throws CloneNotSupportException {\n     // yes, calling super.clone() silly since we're just blowing away all\n     // the stuff that super might be doing anyway, but for motivations on\n     // this, see:", "timestamp": 1014345299, "metainfo": ""}