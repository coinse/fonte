{"sha": "813df07aae44a42ae4a9a22039e36b6befd91c9e", "log": "add unmodifiableintlist and tests   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/BaseUnmodifiableIntList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/BaseUnmodifiableIntList.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntCollection;\n+import org.apache.commons.collections.primitives.IntIterator;\n+import org.apache.commons.collections.primitives.IntList;\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+abstract class BaseUnmodifiableIntList extends BaseProxyIntList {\n+\n+    public final void add(int index, int element) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean addAll(int index, IntCollection collection) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final int removeElementAt(int index) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final int set(int index, int element) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean add(int element) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean addAll(IntCollection c) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final void clear() {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean removeAll(IntCollection c) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean removeElement(int element) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }\n+\n+    public final boolean retainAll(IntCollection c) {\n+        throw new UnsupportedOperationException(\"This IntList is not modifiable.\");\n+    }    \n+    \n+    public final IntList subList(int fromIndex, int toIndex) {\n+        return UnmodifiableIntList.wrap(getProxiedList().subList(fromIndex,toIndex));\n+    }\n+\n+    public final IntIterator iterator() {\n+        return UnmodifiableIntIterator.wrap(getProxiedList().iterator());\n+    }\n+    \n+    public IntListIterator listIterator() {\n+        return UnmodifiableIntListIterator.wrap(getProxiedList().listIterator());\n+    }\n+\n+    public IntListIterator listIterator(int index) {\n+        return UnmodifiableIntListIterator.wrap(getProxiedList().listIterator(index));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/NonSerializableUnmodifiableIntList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/NonSerializableUnmodifiableIntList.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntList;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+final class NonSerializableUnmodifiableIntList extends BaseUnmodifiableIntList {\n+    NonSerializableUnmodifiableIntList(IntList list) {\n+        this.proxied = list;\n+    }\n+    \n+    protected IntList getProxiedList() {\n+        return proxied;\n+    }\n+\n+    private IntList proxied = null;\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntIterator;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+abstract class ProxyIntIterator implements IntIterator {\n+    ProxyIntIterator() {\n+    }\n+    \n+    public boolean hasNext() {\n+        return getIterator().hasNext();\n+    }\n+\n+    public int next() {\n+        return getIterator().next();\n+    }\n+\n+    public void remove() {\n+        getIterator().remove();\n+    }\n+\n+    protected abstract IntIterator getIterator();    \n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntListIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntListIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntIterator;\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+abstract class ProxyIntListIterator extends ProxyIntIterator implements IntListIterator {\n+    ProxyIntListIterator() {\n+    }\n+    \n+    public void add(int element) {\n+        getListIterator().add(element);\n+    }\n+\n+    public boolean hasPrevious() {\n+        return getListIterator().hasPrevious();\n+    }\n+\n+    public int nextIndex() {\n+        return getListIterator().nextIndex();\n+    }\n+\n+    public int previous() {\n+        return getListIterator().previous();\n+    }\n+\n+    public int previousIndex() {\n+        return getListIterator().previousIndex();\n+    }\n+\n+    public void set(int element) {\n+        getListIterator().set(element);\n+    }\n+\n+    protected final IntIterator getIterator() {\n+        return getListIterator();    \n+    }\n+\n+    protected abstract IntListIterator getListIterator();\n+\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/UnmodifiableIntIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/UnmodifiableIntIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntIterator;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+public final class UnmodifiableIntIterator extends ProxyIntIterator {\n+    UnmodifiableIntIterator(IntIterator iterator) {\n+        this.proxied = iterator;\n+    }\n+    \n+    public void remove() {\n+        throw new UnsupportedOperationException(\"This IntIterator is not modifiable.\");\n+    }\n+\n+    protected IntIterator getIterator() {\n+        return proxied;   \n+    }\n+    \n+    \n+    public static final IntIterator wrap(IntIterator iterator) {\n+        if(null == iterator) {\n+            return null; \n+        } else if(iterator instanceof UnmodifiableIntIterator) {\n+            return iterator;\n+        } else {\n+            return new UnmodifiableIntIterator(iterator);\n+        }\n+    }\n+\n+    private IntIterator proxied = null;    \n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/UnmodifiableIntList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/UnmodifiableIntList.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import java.io.Serializable;\n+\n+import org.apache.commons.collections.primitives.IntList;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+public final class UnmodifiableIntList extends BaseUnmodifiableIntList implements Serializable {\n+    UnmodifiableIntList(IntList list) {\n+        this.proxied = list;\n+    }\n+    \n+    public static final IntList wrap(IntList list) {\n+        if(null == list) {\n+            return null; \n+        } else if(list instanceof UnmodifiableIntList) {\n+            return list;\n+        } else if(list instanceof Serializable) {\n+            return new UnmodifiableIntList(list);\n+        } else {\n+            return new NonSerializableUnmodifiableIntList(list);\n+        }\n+    }\n+\n+    protected IntList getProxiedList() {\n+        return proxied;\n+    }\n+\n+    private IntList proxied = null;\n+}\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/UnmodifiableIntListIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/UnmodifiableIntListIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * \n+ * @since Commons Collections 2.2\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+public final class UnmodifiableIntListIterator extends ProxyIntListIterator {\n+    UnmodifiableIntListIterator(IntListIterator iterator) {\n+        this.proxied = iterator;\n+    }\n+    \n+    public void remove() {\n+        throw new UnsupportedOperationException(\"This IntListIterator is not modifiable.\");\n+    }\n+\n+    public void add(int value) {\n+        throw new UnsupportedOperationException(\"This IntListIterator is not modifiable.\");\n+    }\n+\n+    public void set(int value) {\n+        throw new UnsupportedOperationException(\"This IntListIterator is not modifiable.\");\n+    }\n+\n+    protected IntListIterator getListIterator() {\n+        return proxied;   \n+    }\n+    \n+    \n+    public static final IntListIterator wrap(IntListIterator iterator) {\n+        if(null == iterator) {\n+            return null; \n+        } else if(iterator instanceof UnmodifiableIntListIterator) {\n+            return iterator;\n+        } else {\n+            return new UnmodifiableIntListIterator(iterator);\n+        }\n+    }\n+\n+    private IntListIterator proxied = null;    \n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/BaseUnmodifiableIntListTest.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/BaseUnmodifiableIntListTest.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.commons.collections.primitives.ArrayIntList;\n+import org.apache.commons.collections.primitives.IntIterator;\n+import org.apache.commons.collections.primitives.IntList;\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * @author Rodney Waldhoff\n+ */\n+public abstract class BaseUnmodifiableIntListTest extends TestCase {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public BaseUnmodifiableIntListTest(String testName) {\n+        super(testName);\n+    }\n+    \n+    // framework\n+    // ------------------------------------------------------------------------\n+\n+    protected abstract IntList makeUnmodifiableIntList();\n+\n+    protected IntList makeIntList() {\n+        IntList list = new ArrayIntList();\n+        for(int i=0;i<10;i++) {\n+            list.add(i);\n+        }\n+        return list;\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+    \n+    public final void testNotModifiable() throws Exception {\n+        assertListNotModifiable(makeUnmodifiableIntList());\n+    }\n+\n+    public final void testSublistNotModifiable() throws Exception {\n+        IntList list = makeUnmodifiableIntList();\n+        assertListNotModifiable(list.subList(0,list.size()-2));\n+    }\n+    \n+    public final void testIteratorNotModifiable() throws Exception {\n+        IntList list = makeUnmodifiableIntList();\n+        assertIteratorNotModifiable(list.iterator());\n+        assertIteratorNotModifiable(list.subList(0,list.size()-2).iterator());\n+    }\n+    \n+    public final void testListIteratorNotModifiable() throws Exception {\n+        IntList list = makeUnmodifiableIntList();\n+        assertListIteratorNotModifiable(list.listIterator());\n+        assertListIteratorNotModifiable(list.subList(0,list.size()-2).listIterator());\n+        assertListIteratorNotModifiable(list.listIterator(1));\n+        assertListIteratorNotModifiable(list.subList(0,list.size()-2).listIterator(1));\n+    }\n+\n+    // util\n+    // ------------------------------------------------------------------------\n+    \n+    private void assertListIteratorNotModifiable(IntListIterator iter) throws Exception {\n+        assertIteratorNotModifiable(iter);\n+        \n+        assertTrue(iter.hasPrevious());\n+        \n+        try {\n+            iter.set(2);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            iter.add(2);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    private void assertIteratorNotModifiable(IntIterator iter) throws Exception {\n+        assertTrue(iter.hasNext());\n+        iter.next();\n+        \n+        try {\n+            iter.remove();\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    private void assertListNotModifiable(IntList list) throws Exception {\n+        try {\n+            list.add(1);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.add(1,2);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.addAll(makeIntList());\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.addAll(1,makeIntList());\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.removeElementAt(1);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.removeElement(1);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.removeAll(makeIntList());\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+                \n+        try {\n+            list.retainAll(makeIntList());\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+\n+        try {\n+            list.clear();\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        \n+        try {\n+            list.set(1,2);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+}\n--- a/src/test/org/apache/commons/collections/primitives/decorators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestAll.java,v 1.2 2003/05/06 00:04:30 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestAll.java,v 1.3 2003/05/20 00:44:11 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import junit.framework.TestSuite;\n \n /**\n- * @version $Revision: 1.2 $ $Date: 2003/05/06 00:04:30 $\n+ * @version $Revision: 1.3 $ $Date: 2003/05/20 00:44:11 $\n  * @author Rodney Waldhoff\n  */\n public class TestAll extends TestCase {\n \n         suite.addTest(TestBaseProxyIntCollection.suite());\n         suite.addTest(TestBaseProxyIntList.suite());\n+        suite.addTest(TestUnmodifiableIntList.suite());\n \n         return suite;\n     }\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/TestUnmodifiableIntList.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestUnmodifiableIntList.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import java.io.Serializable;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.primitives.IntList;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * @author Rodney Waldhoff\n+ */\n+public class TestUnmodifiableIntList extends BaseUnmodifiableIntListTest {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public TestUnmodifiableIntList(String testName) {\n+        super(testName);\n+    }\n+    \n+\n+    public static Test suite() {\n+        return new TestSuite(TestUnmodifiableIntList.class);\n+    }\n+\n+    // framework\n+    // ------------------------------------------------------------------------\n+\n+    protected IntList makeUnmodifiableIntList() {\n+        return UnmodifiableIntList.wrap(makeIntList());\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+\n+    public void testWrapNull() {\n+        assertNull(UnmodifiableIntList.wrap(null));\n+    }\n+\n+    public void testWrapUnmodifiableIntList() {\n+        IntList list = makeUnmodifiableIntList();\n+        assertSame(list,UnmodifiableIntList.wrap(list));\n+    }\n+\n+    public void testWrapSerializableIntList() {\n+        IntList list = makeIntList();\n+        assertTrue(list instanceof Serializable);\n+        assertTrue(UnmodifiableIntList.wrap(list) instanceof Serializable);\n+    }\n+\n+    public void testWrapNonSerializableIntList() {\n+        IntList list = makeIntList();\n+        IntList ns = list.subList(0,list.size());\n+        assertTrue(!(ns instanceof Serializable));\n+        assertTrue(!(UnmodifiableIntList.wrap(ns) instanceof Serializable));\n+    }\n+}", "timestamp": 1053391451, "metainfo": ""}