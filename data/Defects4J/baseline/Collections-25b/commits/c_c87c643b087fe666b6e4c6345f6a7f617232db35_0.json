{"sha": "c87c643b087fe666b6e4c6345f6a7f617232db35", "log": "Optimise the remove method on a bag   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractMapBag.java,v 1.2 2003/12/03 00:49:38 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/bag/AbstractMapBag.java,v 1.3 2003/12/03 01:02:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * the number of occurrences of that element in the bag.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/12/03 00:49:38 $\n+ * @version $Revision: 1.3 $ $Date: 2003/12/03 01:02:32 $\n  * \n  * @author Chuck Burdick\n  * @author Michael A. Smith\n     }\n \n     /**\n-     * Removes one copy of the specified object from the bag.\n+     * Removes all copies of the specified object from the bag.\n      * \n      * @param object  the object to remove\n      * @return true if the bag changed\n      */\n     public boolean remove(Object object) {\n-        return remove(object, getCount(object));\n+        MutableInteger mut = (MutableInteger) map.get(object);\n+        if (mut == null) {\n+            return false;\n+        }\n+        modCount++;\n+        map.remove(object);\n+        size -= mut.value;\n+        return true;\n     }\n \n     /**", "timestamp": 1070413352, "metainfo": ""}