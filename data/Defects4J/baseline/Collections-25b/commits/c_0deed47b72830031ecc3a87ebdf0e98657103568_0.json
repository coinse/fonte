{"sha": "0deed47b72830031ecc3a87ebdf0e98657103568", "log": "Fix various javadoc link warnings bug 23680, from Eric Johnson   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/NullComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/NullComparator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/NullComparator.java,v 1.8 2003/08/31 17:25:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/NullComparator.java,v 1.9 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import java.util.Comparator;\n \n /**\n- *  A Comparator that will compare nulls to be either lower or higher than\n- *  other objects.\n- *\n- *  @since Commons Collections 2.0\n- *  @version $Revision: 1.8 $ $Date: 2003/08/31 17:25:49 $ \n- *\n- *  @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n- **/\n+ * A Comparator that will compare nulls to be either lower or higher than\n+ * other objects.\n+ *\n+ * @since Commons Collections 2.0\n+ * @version $Revision: 1.9 $ $Date: 2003/10/09 20:44:32 $ \n+ *\n+ * @author Michael A. Smith\n+ */\n public class NullComparator implements Comparator, Serializable {\n \n     /**\n      *  Determines whether the specified object represents a comparator that is\n      *  equal to this comparator.\n      *\n-     *  @param o the object to compare this comparator with.\n+     *  @param obj  the object to compare this comparator with.\n      *\n      *  @return <code>true</code> if the specified object is a NullComparator\n      *  with equivalent <code>null</code> comparison behavior\n--- a/src/java/org/apache/commons/collections/decorators/SetList.java\n+++ b/src/java/org/apache/commons/collections/decorators/SetList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SetList.java,v 1.2 2003/10/04 00:50:35 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/decorators/Attic/SetList.java,v 1.3 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * result of rejecting duplicates.\n  * Each violation is explained in the method, but it should not affect you.\n  * <p>\n- * The {@link org.apache.commons.collections.decorators.OrderedSet OrderedSet}\n- * class provides an alternative approach, by wrapping an existing Set and\n- * retaining insertion order in the iterator. This class offers the <code>List</code>\n- * interface implementation as well.\n+ * The {@link OrderedSet} class provides an alternative approach, by wrapping\n+ * an existing Set and retaining insertion order in the iterator.\n+ * This class offers the <code>List</code> interface implementation as well.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/04 00:50:35 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/09 20:44:32 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n      * The <code>List</code> interface makes the assumption that the element is\n      * always inserted. This may not happen with this implementation.\n      * \n-     * @param index  the index to insert at\n-     * @param object  the object to add\n+     * @param coll  the collection to add\n      */\n     public boolean addAll(Collection coll) {\n         return addAll(size(), coll);\n--- a/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java,v 1.7 2003/10/05 23:21:07 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java,v 1.8 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections.iterators;\n \n import java.lang.reflect.Array;\n+import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n /**\n- * Implements a {@link java.util.ListIterator ListIterator} over an array. \n+ * Implements a {@link ListIterator} over an array. \n  * <p>\n  * The array can be either an array of object or of primitives. If you know \n- * that you have an object array, the \n- * {@link org.apache.commons.collections.iterators.ObjectArrayListIterator ObjectArrayListIterator}\n+ * that you have an object array, the {@link ObjectArrayListIterator}\n  * class is a better choice, as it will perform better.\n  * \n  * <p>\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2003/10/05 23:21:07 $\n+ * @version $Revision: 1.8 $ $Date: 2003/10/09 20:44:32 $\n  *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n  */\n-public class ArrayListIterator extends ArrayIterator implements ResetableListIterator {\n+public class ArrayListIterator extends ArrayIterator\n+\t\timplements ListIterator, ResetableListIterator {\n \n     /**\n      * Holds the index of the last item returned by a call to <code>next()</code>\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.7 2003/09/29 03:56:12 psteitz Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java,v 1.8 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n /**\n  * @see java.util.ListIterator\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.7 $ $Date: 2003/09/29 03:56:12 $\n+ * @version $Revision: 1.8 $ $Date: 2003/10/09 20:44:32 $\n  * \n  * @author <a href=\"mailto:neilotoole@users.sourceforge.net\">Neil O'Toole</a>\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n  */\n-public class ObjectArrayListIterator extends ObjectArrayIterator implements ResetableListIterator {\n+public class ObjectArrayListIterator extends ObjectArrayIterator\n+\t\timplements ListIterator, ResetableListIterator {\n \n     /**\n      * Holds the index of the last item returned by a call to <code>next()</code> \n--- a/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.7 2003/10/09 11:05:27 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonIterator.java,v 1.8 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n /** \n- * <p><code>SingletonIterator</code> is an {@link Iterator} over a single \n- * object instance.</p>\n+ * <code>SingletonIterator</code> is an {@link Iterator} over a single \n+ * object instance.\n  *\n  * @since Commons Collections 2.0\n- * @version $Revision: 1.7 $ $Date: 2003/10/09 11:05:27 $\n+ * @version $Revision: 1.8 $ $Date: 2003/10/09 20:44:32 $\n  * \n- * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ * @author James Strachan\n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n  */\n-public class SingletonIterator implements ResetableIterator {\n+public class SingletonIterator\n+\t\timplements Iterator, ResetableIterator {\n \n     private boolean beforeFirst = true;\n     private boolean removed = false;\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.7 2003/10/09 11:05:27 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java,v 1.8 2003/10/09 20:44:32 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.iterators;\n \n+import java.util.ListIterator;\n import java.util.NoSuchElementException;\n-/** \n- * <p><code>SingletonIterator</code> is an {@link ListIterator} over a single \n- * object instance.</p>\n+\n+/**\n+ * <code>SingletonIterator</code> is an {@link ListIterator} over a single \n+ * object instance.\n  *\n  * @since Commons Collections 2.1\n- * @version $Revision: 1.7 $ $Date: 2003/10/09 11:05:27 $\n+ * @version $Revision: 1.8 $ $Date: 2003/10/09 20:44:32 $\n  * \n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n  */\n-public class SingletonListIterator implements ResetableListIterator {\n+public class SingletonListIterator\n+\t\timplements ListIterator, ResetableListIterator {\n \n     private boolean beforeFirst = true;\n     private boolean nextCalled = false;", "timestamp": 1065732272, "metainfo": ""}