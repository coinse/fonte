{"sha": "0c73a54d143d873992cb5e6a559be841873c4806", "log": "Fix test case warnings  ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n \n import junit.framework.Test;\n \n+import org.apache.commons.collections.functors.EqualPredicate;\n import org.apache.commons.collections.list.PredicatedList;\n \n /**\n      * Tests intersecting a non-empty list with an subset of iteself.\n      */\n     public void testIntersectListWithNoOverlapAndDifferentTypes() {\n+        @SuppressWarnings(\"boxing\")\n         final List<Integer> other = Arrays.asList(1, 23);\n         assertTrue(ListUtils.intersection(fullList, other).isEmpty());\n     }\n     /**\n      * Tests the <code>indexOf</code> method in <code>ListUtils</code> class..\n      */\n-    // TODO: Generics\n     public void testIndexOf() {\n-        Predicate<String> testPredicate = PredicateUtils.equalPredicate(\"d\");\n+        Predicate<String> testPredicate = EqualPredicate.equalPredicate(\"d\");\n         int index = ListUtils.indexOf(fullList, testPredicate);\n         assertEquals(d, fullList.get(index));\n \n-        testPredicate = PredicateUtils.equalPredicate(\"de\");\n+        testPredicate = EqualPredicate.equalPredicate(\"de\");\n         index = ListUtils.indexOf(fullList, testPredicate);\n-        assertTrue(index == -1);\n+        assertEquals(index, -1);\n         \n         assertEquals(ListUtils.indexOf(null,testPredicate), -1);\n         assertEquals(ListUtils.indexOf(fullList, null), -1);", "timestamp": 1287415642, "metainfo": ""}