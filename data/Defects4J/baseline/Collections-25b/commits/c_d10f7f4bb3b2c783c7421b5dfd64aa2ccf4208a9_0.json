{"sha": "d10f7f4bb3b2c783c7421b5dfd64aa2ccf4208a9", "log": "Remove deprecated getName method Update licence and javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.9 2002/11/24 20:25:55 scolebourne Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/11/24 20:25:55 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MultiHashMap.java,v 1.10 2003/05/11 14:00:09 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Map;\n import java.util.NoSuchElementException;\n import java.util.Set;\n+\n /** \n  * <code>MultiHashMap</code> is the default implementation of the \n  * {@link org.apache.commons.collections.MultiMap MultiMap} interface.\n  * <p>\n  * <code>coll</code> will be a list containing \"A\", \"B\", \"C\".\n  *\n- * @since 2.0\n+ * @since Commons Collections 2.0\n+ * @version $Revision: 1.10 $ $Date: 2003/05/11 14:00:09 $\n+ * \n  * @author Christopher Berry\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author Steve Downey\n  * @author Serhiy Yevtushenko\n  */\n public class MultiHashMap extends HashMap implements MultiMap {\n-    // deprecated name concept\n-    private static int sCount = 0;\n-    private String mName = null;\n     \n     //backed values collection\n     private transient Collection values = null;\n      */\n     public MultiHashMap() {\n         super();\n-        setName();\n     }\n \n     /**\n      */\n     public MultiHashMap(int initialCapacity) {\n         super(initialCapacity);\n-        setName();\n     }\n \n     /**\n      */\n     public MultiHashMap(int initialCapacity, float loadFactor) {\n         super(initialCapacity, loadFactor);\n-        setName();\n     }\n \n     /**\n         }\n     }\n     \n-    /**\n-     * Create a name for the map.\n-     */    \n-    private void setName() {\n-        sCount++;\n-        mName = \"MultiMap-\" + sCount;\n-    }\n-    \n-    /**\n-     * Gets the name of the map.\n-     * \n-     * @deprecated no replacement. There is no good reason for a MultiMap to have a name\n-     * @return the name\n-     */    \n-    public String getName() {\n-        return mName;\n-    }\n-\n     /**\n      * Put a key and value into the map.\n      * <p>\n      */\n     public Object clone() {\n         MultiHashMap obj = (MultiHashMap) super.clone();\n-        obj.mName = mName;\n \n         // clone each Collection container\n         for (Iterator it = entrySet().iterator(); it.hasNext();) {", "timestamp": 1052661609, "metainfo": ""}