{"sha": "b5e8745a419f27eff18a906bf3acceca6d6eb792", "log": "A few raw types  ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/TestMultiValueMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestMultiValueMap.java\n //    }\n \n     public void testEmptyMapCompatibility() throws Exception {\n-        Map map = makeEmptyMap();\n-        Map map2 = (Map) readExternalFormFromDisk(getCanonicalEmptyCollectionName(map));\n+        Map<?,?> map = makeEmptyMap();\n+        Map<?,?> map2 = (Map<?,?>) readExternalFormFromDisk(getCanonicalEmptyCollectionName(map));\n         assertEquals(\"Map is empty\", 0, map2.size());\n     }\n     public void testFullMapCompatibility() throws Exception {\n-        Map map = (Map) makeObject();\n-        Map map2 = (Map) readExternalFormFromDisk(getCanonicalFullCollectionName(map));\n+        Map<?,?> map = (Map<?,?>) makeObject();\n+        Map<?,?> map2 = (Map<?,?>) readExternalFormFromDisk(getCanonicalFullCollectionName(map));\n         assertEquals(\"Map is the right size\", map.size(), map2.size());\n-        for (Iterator it = map.keySet().iterator(); it.hasNext();) {\n+        for (Iterator<?> it = map.keySet().iterator(); it.hasNext();) {\n             Object key = it.next();\n             assertEquals( \"Map had inequal elements\", map.get(key), map2.get(key) );\n             map2.remove(key);", "timestamp": 1287743829, "metainfo": ""}