{"sha": "2f4d235479eabab92cddba408b56d6abf943ad2c", "log": "More var-args. Clean-up.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/PredicateUtils.java\n+++ b/src/main/java/org/apache/commons/collections/PredicateUtils.java\n  * All the supplied predicates are Serializable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision$\n- *\n- * @author Stephen Colebourne\n- * @author Ola Berg\n+ * @version $Id$\n  */\n public class PredicateUtils {\n \n      * @deprecated use {@link AllPredicate#allPredicate(Predicate...)} instead.\n      */\n     @Deprecated\n-    public static <T> Predicate<T> allPredicate(Predicate<? super T>[] predicates) {\n+    public static <T> Predicate<T> allPredicate(Predicate<? super T>... predicates) {\n         return AllPredicate.allPredicate(predicates);\n     }\n \n      * @throws IllegalArgumentException if the predicates array is null\n      * @throws IllegalArgumentException if any predicate in the array is null\n      */\n-    public static <T> Predicate<T> anyPredicate(Predicate<? super T>[] predicates) {\n+    public static <T> Predicate<T> anyPredicate(Predicate<? super T>... predicates) {\n         return AnyPredicate.anyPredicate(predicates);\n     }\n \n      * @return the <code>either</code> predicate\n      * @throws IllegalArgumentException if either predicate is null\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public static <T> Predicate<T> eitherPredicate(Predicate<? super T> predicate1, Predicate<? super T> predicate2) {\n-        return onePredicate(new Predicate[] { predicate1, predicate2 });\n+        @SuppressWarnings(\"unchecked\")\n+        Predicate<T> onePredicate = onePredicate(predicate1, predicate2);\n+        return onePredicate;\n     }\n \n     /**\n      * @throws IllegalArgumentException if the predicates array is null\n      * @throws IllegalArgumentException if any predicate in the array is null\n      */\n-    public static <T> Predicate<T> onePredicate(Predicate<? super T>[] predicates) {\n+    public static <T> Predicate<T> onePredicate(Predicate<? super T>... predicates) {\n         return OnePredicate.onePredicate(predicates);\n     }\n \n      * @return the <code>neither</code> predicate\n      * @throws IllegalArgumentException if either predicate is null\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public static <T> Predicate<T> neitherPredicate(Predicate<? super T> predicate1, Predicate<? super T> predicate2) {\n-        return nonePredicate(new Predicate[] { predicate1, predicate2 });\n+        @SuppressWarnings(\"unchecked\")\n+        Predicate<T> nonePredicate = nonePredicate(predicate1, predicate2);\n+        return nonePredicate;\n     }\n \n     /**\n      * @throws IllegalArgumentException if the predicates array is null\n      * @throws IllegalArgumentException if any predicate in the array is null\n      */\n-    public static <T> Predicate<T> nonePredicate(Predicate<? super T>[] predicates) {\n+    public static <T> Predicate<T> nonePredicate(Predicate<? super T>... predicates) {\n         return NonePredicate.nonePredicate(predicates);\n     }\n ", "timestamp": 1341350708, "metainfo": ""}