{"sha": "66a915ccb5938503bdbbb5a8d9076b384fb5d251", "log": "Method names and signatures changed to make more generally useful and clear   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.7 2003/04/04 22:22:28 scolebourne Exp $\n- * $Revision: 1.7 $\n- * $Date: 2003/04/04 22:22:28 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestListUtils.java,v 1.8 2003/04/09 23:38:26 scolebourne Exp $\n+ * $Revision: 1.8 $\n+ * $Date: 2003/04/09 23:38:26 $\n  *\n  * ====================================================================\n  *\n \t\tList b = new ArrayList( data );\n \t\t\n         assertEquals(true, a.equals(b));\n-        assertEquals(true, ListUtils.equals(a, b));\n+        assertEquals(true, ListUtils.isEqualList(a, b));\n         a.clear();\n-        assertEquals(false, ListUtils.equals(a, b));\n-        assertEquals(false, ListUtils.equals(a, null));\n-        assertEquals(false, ListUtils.equals(null, b));\n-        assertEquals(true, ListUtils.equals(null, null));\n+        assertEquals(false, ListUtils.isEqualList(a, b));\n+        assertEquals(false, ListUtils.isEqualList(a, null));\n+        assertEquals(false, ListUtils.isEqualList(null, b));\n+        assertEquals(true, ListUtils.isEqualList(null, null));\n \t}\n \t\n \tpublic void testHashCode() {\n \t\tList b = new ArrayList( data );\n \t\t\n         assertEquals(true, a.hashCode() == b.hashCode());\n-        assertEquals(true, a.hashCode() == ListUtils.hashCode(a));\n-        assertEquals(true, b.hashCode() == ListUtils.hashCode(b));\n-        assertEquals(true, ListUtils.hashCode(a) == ListUtils.hashCode(b));\n+        assertEquals(true, a.hashCode() == ListUtils.hashCodeForList(a));\n+        assertEquals(true, b.hashCode() == ListUtils.hashCodeForList(b));\n+        assertEquals(true, ListUtils.hashCodeForList(a) == ListUtils.hashCodeForList(b));\n         a.clear();\n-        assertEquals(false, ListUtils.hashCode(a) == ListUtils.hashCode(b));\n-        assertEquals(0, ListUtils.hashCode(null));\n+        assertEquals(false, ListUtils.hashCodeForList(a) == ListUtils.hashCodeForList(b));\n+        assertEquals(0, ListUtils.hashCodeForList(null));\n \t}\t\n \t\n }\n--- a/src/test/org/apache/commons/collections/TestSetUtils.java\n+++ b/src/test/org/apache/commons/collections/TestSetUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestSetUtils.java,v 1.5 2003/04/04 22:22:28 scolebourne Exp $\n- * $Revision: 1.5 $\n- * $Date: 2003/04/04 22:22:28 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestSetUtils.java,v 1.6 2003/04/09 23:38:26 scolebourne Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2003/04/09 23:38:26 $\n  *\n  * ====================================================================\n  *\n         Set b = new HashSet( data );\n         \n         assertEquals(true, a.equals(b));\n-        assertEquals(true, SetUtils.equals(a, b));\n+        assertEquals(true, SetUtils.isEqualSet(a, b));\n         a.clear();\n-        assertEquals(false, SetUtils.equals(a, b));\n-        assertEquals(false, SetUtils.equals(a, null));\n-        assertEquals(false, SetUtils.equals(null, b));\n-        assertEquals(true, SetUtils.equals(null, null));\n+        assertEquals(false, SetUtils.isEqualSet(a, b));\n+        assertEquals(false, SetUtils.isEqualSet(a, null));\n+        assertEquals(false, SetUtils.isEqualSet(null, b));\n+        assertEquals(true, SetUtils.isEqualSet(null, null));\n     }\n     \n     public void testHashCode() {\n         Set b = new HashSet( data );\n         \n         assertEquals(true, a.hashCode() == b.hashCode());\n-        assertEquals(true, a.hashCode() == SetUtils.hashCode(a));\n-        assertEquals(true, b.hashCode() == SetUtils.hashCode(b));\n-        assertEquals(true, SetUtils.hashCode(a) == SetUtils.hashCode(b));\n+        assertEquals(true, a.hashCode() == SetUtils.hashCodeForSet(a));\n+        assertEquals(true, b.hashCode() == SetUtils.hashCodeForSet(b));\n+        assertEquals(true, SetUtils.hashCodeForSet(a) == SetUtils.hashCodeForSet(b));\n         a.clear();\n-        assertEquals(false, SetUtils.hashCode(a) == SetUtils.hashCode(b));\n-        assertEquals(0, SetUtils.hashCode(null));\n+        assertEquals(false, SetUtils.hashCodeForSet(a) == SetUtils.hashCodeForSet(b));\n+        assertEquals(0, SetUtils.hashCodeForSet(null));\n     }   \n \n }", "timestamp": 1049931506, "metainfo": ""}