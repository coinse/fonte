{"sha": "568475490875982dbd4fe8cd59ba9aaa5406acb2", "log": "Implement BoundedMap interface   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeMap.java,v 1.2 2003/12/11 22:55:25 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.Map;\n import java.util.Set;\n \n+import org.apache.commons.collections.BoundedMap;\n import org.apache.commons.collections.collection.UnmodifiableCollection;\n import org.apache.commons.collections.set.UnmodifiableSet;\n \n  * is not always unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/11 22:55:25 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeMap extends AbstractMapDecorator implements Map {\n+public class FixedSizeMap extends AbstractMapDecorator\n+        implements Map, BoundedMap {\n \n     /**\n      * Factory method to create a fixed size map.\n         Collection coll = map.values();\n         return UnmodifiableCollection.decorate(coll);\n     }\n+\n+    public boolean isFull() {\n+        return true;\n+    }\n+\n+    public int maxSize() {\n+        return size();\n+    }\n    \n }\n--- a/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java,v 1.1 2003/11/16 00:05:45 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java,v 1.2 2003/12/11 22:55:25 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections.map;\n \n-import java.util.Comparator;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n import java.util.SortedMap;\n+\n+import org.apache.commons.collections.BoundedMap;\n+import org.apache.commons.collections.collection.UnmodifiableCollection;\n+import org.apache.commons.collections.set.UnmodifiableSet;\n \n /**\n  * Decorates another <code>SortedMap</code> to fix the size blocking add/remove.\n  * is not always unsupported.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/11/16 00:05:45 $\n+ * @version $Revision: 1.2 $ $Date: 2003/12/11 22:55:25 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n-public class FixedSizeSortedMap extends FixedSizeMap implements SortedMap {\n+public class FixedSizeSortedMap extends AbstractSortedMapDecorator\n+        implements SortedMap, BoundedMap {\n \n     /**\n      * Factory method to create a fixed size sorted map.\n     }\n \n     //-----------------------------------------------------------------------\n-    public Object firstKey() {\n-        return getSortedMap().firstKey();\n+    public Object put(Object key, Object value) {\n+        if (map.containsKey(key) == false) {\n+            throw new IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n+        }\n+        return map.put(key, value);\n     }\n \n-    public Object lastKey() {\n-        return getSortedMap().lastKey();\n+    public void putAll(Map mapToCopy) {\n+        for (Iterator it = mapToCopy.keySet().iterator(); it.hasNext(); ) {\n+            if (mapToCopy.containsKey(it.next()) == false) {\n+                throw new IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n+            }\n+        }\n+        map.putAll(mapToCopy);\n     }\n \n-    public Comparator comparator() {\n-        return getSortedMap().comparator();\n+    public void clear() {\n+        throw new UnsupportedOperationException(\"Map is fixed size\");\n     }\n \n+    public Object remove(Object key) {\n+        throw new UnsupportedOperationException(\"Map is fixed size\");\n+    }\n+\n+    public Set entrySet() {\n+        Set set = map.entrySet();\n+        return UnmodifiableSet.decorate(set);\n+    }\n+\n+    public Set keySet() {\n+        Set set = map.keySet();\n+        return UnmodifiableSet.decorate(set);\n+    }\n+\n+    public Collection values() {\n+        Collection coll = map.values();\n+        return UnmodifiableCollection.decorate(coll);\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public SortedMap subMap(Object fromKey, Object toKey) {\n         SortedMap map = getSortedMap().subMap(fromKey, toKey);\n         return new FixedSizeSortedMap(map);\n         return new FixedSizeSortedMap(map);\n     }\n \n+    public boolean isFull() {\n+        return true;\n+    }\n+\n+    public int maxSize() {\n+        return size();\n+    }\n+   \n }\n--- a/src/java/org/apache/commons/collections/map/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/map/LRUMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LRUMap.java,v 1.3 2003/12/11 00:46:12 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/map/LRUMap.java,v 1.4 2003/12/11 22:55:25 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.Map;\n+\n+import org.apache.commons.collections.BoundedMap;\n \n /**\n  * A <code>Map</code> implementation with a fixed maximum size which removes\n  * <code>ResettableIterator</code> and calling <code>reset()</code>.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/12/11 00:46:12 $\n+ * @version $Revision: 1.4 $ $Date: 2003/12/11 22:55:25 $\n  *\n  * @author James Strachan\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n  */\n-public class LRUMap extends AbstractLinkedMap implements Serializable, Cloneable {\n+public class LRUMap extends AbstractLinkedMap\n+        implements BoundedMap, Serializable, Cloneable {\n     \n     /** Serialisation version */\n     static final long serialVersionUID = -612114643488955218L;", "timestamp": 1071183325, "metainfo": ""}