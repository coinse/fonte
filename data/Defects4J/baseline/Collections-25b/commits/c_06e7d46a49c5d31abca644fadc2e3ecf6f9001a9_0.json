{"sha": "06e7d46a49c5d31abca644fadc2e3ecf6f9001a9", "log": "filled in testRetainAll and testToArray2   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestCollection.java\n+++ b/src/test/org/apache/commons/collections/TestCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.3 2001/04/24 23:35:13 rwaldhoff Exp $\n- * $Revision: 1.3 $\n- * $Date: 2001/04/24 23:35:13 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestCollection.java,v 1.4 2001/04/24 23:48:04 rwaldhoff Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2001/04/24 23:48:04 $\n  *\n  * ====================================================================\n  *\n  * test case (method) your {@link Collection} fails.\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: TestCollection.java,v 1.3 2001/04/24 23:35:13 rwaldhoff Exp $\n+ * @version $Id: TestCollection.java,v 1.4 2001/04/24 23:48:04 rwaldhoff Exp $\n  */\n public abstract class TestCollection extends TestObject {\n     public TestCollection(String testName) {\n \n     // optional operation\n     public void testCollectionRetainAll() {\n-        // XXX finish me\n+        Collection a = makeCollection();\n+        Collection b = makeCollection();\n+        try {\n+            assert(!a.retainAll(b));\n+            assert(!a.retainAll(a));\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        } catch(Throwable t) {\n+            t.printStackTrace();\n+            fail(\"Collection.retainAll should only throw UnsupportedOperationException. Found \" + t.toString());\n+        }\n+\n+        boolean added_b = b.add(\"element1\");\n+        try {\n+            assert(!a.retainAll(b));\n+            assert(added_b == b.retainAll(a));\n+            assert(b.isEmpty());\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        } catch(Throwable t) {\n+            t.printStackTrace();\n+            fail(\"Collection.retainAll should only throw UnsupportedOperationException. Found \" + t.toString());\n+        }\n+\n+        boolean added_b1 = b.add(\"element1\");\n+        boolean added_b2 = b.add(\"element2\");\n+        boolean added_a1 = a.add(\"element1\");\n+        if(added_b1 && added_b2 && added_a1) {\n+            try {\n+                assert(!b.retainAll(b));\n+                assert(b.contains(\"element1\"));\n+                assert(b.contains(\"element2\"));\n+\n+                assert(!a.retainAll(b));\n+\n+                assert(b.retainAll(a));\n+                assert(b.contains(\"element1\"));\n+                assert(!b.contains(\"element2\"));\n+            } catch(UnsupportedOperationException e) {\n+                // expected\n+            } catch(Throwable t) {\n+                t.printStackTrace();\n+                fail(\"Collection.retainAll should only throw UnsupportedOperationException. Found \" + t.toString());\n+            }\n+        }\n     }\n \n     public void testCollectionSize() {\n     }\n \n     public void testCollectionToArray2() {\n-        // XXX finish me\n+        Collection c = makeCollection();\n+        assertEquals(10,c.toArray(new String[10]).length);\n+        assertEquals(7,c.toArray(new Object[7]).length);\n+        boolean added1 = tryToAdd(c,\"element1\");\n+        if(added1) {\n+            String[] fits = new String[1];\n+            String[] small = new String[0];\n+            assertSame(fits,c.toArray(fits));\n+            assert(small != c.toArray(small));\n+        }\n     }\n \n     /**", "timestamp": 988156084, "metainfo": ""}