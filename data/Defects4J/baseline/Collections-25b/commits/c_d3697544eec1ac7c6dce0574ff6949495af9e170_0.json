{"sha": "d3697544eec1ac7c6dce0574ff6949495af9e170", "log": "Add extends clause to ensure binary compatibility of ReferenceMap   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.util.AbstractCollection;\n+import java.util.AbstractMap;\n import java.util.AbstractSet;\n import java.util.Collection;\n import java.util.ConcurrentModificationException;\n  * Overridable methods are provided to change the default hashing behaviour, and\n  * to change how entries are added to and removed from the map. Hopefully, all you\n  * need for unusual subclasses is here.\n+ * <p>\n+ * NOTE: From Commons Collections 3.1 this class extends AbstractMap.\n+ * This is to provide backwards compatibility for ReferenceMap between v3.0 and v3.1.\n+ * This extends clause will be removed in v4.0.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.19 $ $Date: 2004/06/04 23:27:30 $\n+ * @version $Revision: 1.20 $ $Date: 2004/06/22 21:42:12 $\n  *\n  * @author java util HashMap\n  * @author Stephen Colebourne\n  */\n-public class AbstractHashedMap implements IterableMap {\n+public class AbstractHashedMap extends AbstractMap implements IterableMap {\n     \n     protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";\n     protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";", "timestamp": 1087940532, "metainfo": ""}