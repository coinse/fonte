{"sha": "0122245f02ba7b22dd40f38c98aa2f08984707bd", "log": "Applying Bjorn Townsend's unit test and my fix for COLLECTIONS-304 - fixing SetUniqueList so the set method doesn't let the uniqueness get out of sync  ", "commit": "\n--- a/src/java/org/apache/commons/collections/list/SetUniqueList.java\n+++ b/src/java/org/apache/commons/collections/list/SetUniqueList.java\n     public Object set(int index, Object object) {\n         int pos = indexOf(object);\n         Object removed = super.set(index, object);\n-        if (pos == -1 || pos == index) {\n-            return removed;\n-        }\n-        \n-        // the object is already in the uniq list\n-        // (and it hasn't been swapped with itself)\n-        super.remove(pos);  // remove the duplicate by index\n+\n+        if (pos != -1 && pos != index) {\n+            // the object is already in the uniq list\n+            // (and it hasn't been swapped with itself)\n+            super.remove(pos);  // remove the duplicate by index\n+        }\n+\n+        set.add(object);      // add the new item to the unique set\n         set.remove(removed);  // remove the item deleted by the set\n+\n         return removed;  // return the item deleted by the set\n     }\n \n--- a/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n+++ b/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n //        writeExternalFormToDisk((java.io.Serializable) collection, \"D:/dev/collections/data/test/SetUniqueList.fullCollection.version3.1.obj\");\n //    }\n \n+    public void testCollections304() {\n+        List list = new LinkedList();\n+        SetUniqueList decoratedList = SetUniqueList.decorate(list);\n+        String s1 = \"Apple\";\n+        String s2 = \"Lemon\";\n+        String s3 = \"Orange\";\n+        String s4 = \"Strawberry\";\n+\n+        decoratedList.add(s1);\n+        decoratedList.add(s2);\n+        decoratedList.add(s3);\n+\n+        assertEquals(3, decoratedList.size());\n+\n+        decoratedList.set(1, s4);\n+\n+        assertEquals(3, decoratedList.size());\n+\n+        decoratedList.add(1, s4);\n+\n+        assertEquals(3, decoratedList.size());\n+\n+        decoratedList.add(1, s2);\n+\n+        assertEquals(4, decoratedList.size());\n+    }\n+\n }", "timestamp": 1225900063, "metainfo": ""}