{"sha": "b4f545f3f3243d2aac169342f057ae42db8f9c2a", "log": "Correct errors in testing exceptions   ", "commit": "\n--- a/src/test/org/apache/commons/collections/AbstractTestBidiMap.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestBidiMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestBidiMap.java,v 1.5 2003/11/02 15:27:54 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestBidiMap.java,v 1.6 2003/11/02 18:29:33 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n  * \n- * @version $Revision: 1.5 $ $Date: 2003/11/02 15:27:54 $\n+ * @version $Revision: 1.6 $ $Date: 2003/11/02 18:29:33 $\n  * \n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n         assertEquals(false, it.hasNext());\n         try {\n             it.next();\n+            fail();\n         } catch (NoSuchElementException ex) {}\n         try {\n             it.getKey();\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         try {\n             it.getValue();\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         try {\n             it.remove();\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         try {\n             it.setValue(null);\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         try {\n             it.asMapEntry();\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         verify();\n         if (isRemoveSupported() == false) {\n             try {\n                 it.remove();\n+                fail();\n             } catch (UnsupportedOperationException ex) {\n             }\n             return;\n         if (isSetValueSupported() == false) {\n             try {\n                 it.setValue(newValue1);\n+                fail();\n             } catch (UnsupportedOperationException ex) {\n             }\n             return;\n         // key1=newValue1, key2=newValue2\n         try {\n             it.setValue(newValue1);  // should remove key1\n+            fail();\n         } catch (IllegalArgumentException ex) {\n             return;  // simplest way of dealing with tricky situation\n         }\n         \n         try {\n             it.setValue(newValue1);\n+            fail();\n         } catch (IllegalStateException ex) {\n         }\n         verify();", "timestamp": 1067797773, "metainfo": ""}