{"sha": "539be680cd2b1a8f6833b28ee0cca22a88161466", "log": "[COLLECTIONS-496] UnmodifiableBoundedCollection does now also implement the Unmodifiable marker interface.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java\n+++ b/src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java\n import java.util.Iterator;\n \n import org.apache.commons.collections4.BoundedCollection;\n+import org.apache.commons.collections4.Unmodifiable;\n import org.apache.commons.collections4.iterators.UnmodifiableIterator;\n \n /**\n  * @version $Id$\n  */\n public final class UnmodifiableBoundedCollection<E> extends AbstractCollectionDecorator<E>\n-        implements BoundedCollection<E> {\n+        implements BoundedCollection<E>, Unmodifiable {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -7112672385450340330L;\n      * @since 4.0\n      */\n     public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll) {\n+        if (coll instanceof Unmodifiable) {\n+            @SuppressWarnings(\"unchecked\") // safe to upcast\n+            final BoundedCollection<E> tmpColl = (BoundedCollection<E>) coll;\n+            return tmpColl;\n+        }\n         return new UnmodifiableBoundedCollection<E>(coll);\n     }\n \n--- a/src/test/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollectionTest.java\n+++ b/src/test/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollectionTest.java\n import java.util.Collection;\n \n import org.apache.commons.collections4.BoundedCollection;\n+import org.apache.commons.collections4.Unmodifiable;\n import org.apache.commons.collections4.list.FixedSizeList;\n \n /**\n     }\n \n     @Override\n-    public Collection<E> makeFullCollection() {\n+    public BoundedCollection<E> makeFullCollection() {\n         final E[] allElements = getFullElements();\n         final BoundedCollection<E> coll = FixedSizeList.<E>fixedSizeList(new ArrayList<E>(Arrays.asList(allElements)));\n         return UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n     public String getCompatibilityVersion() {\n         return \"4\";\n     }\n+    \n+    //-----------------------------------------------------------------------\n+\n+    public void testUnmodifiable() {\n+        assertTrue(makeObject() instanceof Unmodifiable);\n+        assertTrue(makeFullCollection() instanceof Unmodifiable);\n+    }\n+    \n+    public void testDecorateFactory() {\n+        final BoundedCollection<E> coll = makeFullCollection();\n+        assertSame(coll, UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll));\n+\n+        try {\n+            UnmodifiableBoundedCollection.unmodifiableBoundedCollection(null);\n+            fail();\n+        } catch (final IllegalArgumentException ex) {}\n+    }\n+    \n }", "timestamp": 1384188440, "metainfo": ""}