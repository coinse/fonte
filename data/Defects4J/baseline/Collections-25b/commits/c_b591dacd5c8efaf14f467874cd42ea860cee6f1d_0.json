{"sha": "b591dacd5c8efaf14f467874cd42ea860cee6f1d", "log": "Fix some generics warnings in test classes.  ", "commit": "\n--- a/src/test/java/org/apache/commons/collections4/comparators/ReverseComparatorTest.java\n+++ b/src/test/java/org/apache/commons/collections4/comparators/ReverseComparatorTest.java\n      * already \"canonized\" the comparator returned by makeComparator.\n      */\n     @Override\n-    @SuppressWarnings(\"unchecked\")\n     @Test\n     public void testSerializeDeserializeThenCompare() throws Exception {\n-        final Comparator comp = new ReverseComparator(new ComparableComparator());\n+        final Comparator<?> comp = new ReverseComparator<String>(new ComparableComparator<String>());\n \n         final ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n         final ObjectOutputStream out = new ObjectOutputStream(buffer);\n--- a/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java\n+++ b/src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java\n     public void testEqualsAfterSerialization() throws IOException, ClassNotFoundException\n     {\n         SystemHashCodeSimulatingKey sysKey = new SystemHashCodeSimulatingKey(\"test\");\n-        final MultiKey mk = new MultiKey(ONE, sysKey);\n-        final Map map = new HashMap();\n+        final MultiKey<?> mk = new MultiKey<Object>(ONE, sysKey);\n+        final Map<MultiKey<?>, Integer> map = new HashMap<MultiKey<?>, Integer>();\n         map.put(mk, TWO);\n \n         // serialize\n         final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\n         final ObjectInputStream in = new ObjectInputStream(bais);\n         sysKey = (SystemHashCodeSimulatingKey)in.readObject(); // simulate deserialization in another process\n-        final Map map2 = (Map) in.readObject();\n+        final Map<?, ?> map2 = (Map<?, ?>) in.readObject();\n         in.close();\n \n         assertEquals(2, sysKey.hashCode()); // different hashCode now\n \n-        final MultiKey mk2 = new MultiKey(ONE, sysKey);\n+        final MultiKey<?> mk2 = new MultiKey<Object>(ONE, sysKey);\n         assertEquals(TWO, map2.get(mk2));        \n     }\n }", "timestamp": 1366920555, "metainfo": ""}