{"sha": "e1f52a47979eac9299dbaf4de34ac00fe2b5d6f4", "log": "Add UnmodifiableMapEntry   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/pairs/UnmodifiableMapEntry.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/pairs/Attic/UnmodifiableMapEntry.java,v 1.1 2003/11/02 17:06:58 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.pairs;\n+\n+import java.util.Map;\n+\n+import org.apache.commons.collections.Unmodifiable;\n+\n+/**\n+ * A {@link java.util.Map.Entry} that throws UnsupportedOperationException\n+ * when <code>setValue</code> is called.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/11/02 17:06:58 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public final class UnmodifiableMapEntry extends AbstractMapEntry implements Unmodifiable {\n+    \n+    /**\n+     * Constructs a new entry with the specified key and given value.\n+     *\n+     * @param key  the key for the entry, may be null\n+     * @param value  the value for the entry, may be null\n+     */\n+    public UnmodifiableMapEntry(final Object key, final Object value) {\n+        super(key, value);\n+    }\n+\n+    /**\n+     * Constructs a new entry from the specified KeyValue.\n+     *\n+     * @param pair  the pair to copy, must not be null\n+     * @throws NullPointerException if the entry is null\n+     */\n+    public UnmodifiableMapEntry(final KeyValue pair) {\n+        super(pair.getKey(), pair.getValue());\n+    }\n+\n+    /**\n+     * Constructs a new entry from the specified MapEntry.\n+     *\n+     * @param entry  the entry to copy, must not be null\n+     * @throws NullPointerException if the entry is null\n+     */\n+    public UnmodifiableMapEntry(final Map.Entry entry) {\n+        super(entry.getKey(), entry.getValue());\n+    }\n+    \n+    /**\n+     * Throws UnsupportedOperationException.\n+     * \n+     * @param value  the new value\n+     * @return the previous value\n+     * @throws UnsupportedOperationException always\n+     */\n+    public Object setValue(Object value) {\n+        throw new UnsupportedOperationException(\"setValue() is not supported\");\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/collections/pairs/TestAll.java\n+++ b/src/test/org/apache/commons/collections/pairs/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/pairs/Attic/TestAll.java,v 1.1 2003/10/01 22:36:49 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/pairs/Attic/TestAll.java,v 1.2 2003/11/02 17:06:59 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * Entry point for key-value test cases.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/10/01 22:36:49 $\n+ * @version $Revision: 1.2 $ $Date: 2003/11/02 17:06:59 $\n  * \n  * @author Neil O'Toole\n  */\n         \n         suite.addTest(TestDefaultKeyValue.suite());\n         suite.addTest(TestDefaultMapEntry.suite());\n+        suite.addTest(TestUnmodifiableMapEntry.suite());\n         return suite;\n     }\n         \n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/pairs/TestUnmodifiableMapEntry.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/pairs/Attic/TestUnmodifiableMapEntry.java,v 1.1 2003/11/02 17:06:59 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.pairs;\n+\n+import java.util.Map;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.Unmodifiable;\n+\n+/**\n+ * Test the UnmodifiableMapEntry class.\n+ * \n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/11/02 17:06:59 $\n+ * \n+ * @author Neil O'Toole\n+ */\n+public class TestUnmodifiableMapEntry extends AbstractTestMapEntry {\n+\n+    public TestUnmodifiableMapEntry(String testName) {\n+        super(testName);\n+\n+    }\n+\n+    public static void main(String[] args) {\n+        junit.textui.TestRunner.run(TestUnmodifiableMapEntry.class);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestUnmodifiableMapEntry.class);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Make an instance of Map.Entry with the default (null) key and value.\n+     * Subclasses should override this method to return a Map.Entry\n+     * of the type being tested.\n+     */\n+    public Map.Entry makeMapEntry() {\n+        return new UnmodifiableMapEntry(null, null);\n+    }\n+\n+    /**\n+     * Make an instance of Map.Entry with the specified key and value.\n+     * Subclasses should override this method to return a Map.Entry\n+     * of the type being tested.\n+     */\n+    public Map.Entry makeMapEntry(Object key, Object value) {\n+        return new UnmodifiableMapEntry(key, value);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Subclasses should override this method.\n+     *\n+     */\n+    public void testConstructors() {\n+        // 1. test key-value constructor\n+        Map.Entry entry = new UnmodifiableMapEntry(key, value);\n+        assertSame(key, entry.getKey());\n+        assertSame(value, entry.getValue());\n+\n+        // 2. test pair constructor\n+        KeyValue pair = new DefaultKeyValue(key, value);\n+        entry = new UnmodifiableMapEntry(pair);\n+        assertSame(key, entry.getKey());\n+        assertSame(value, entry.getValue());\n+\n+        // 3. test copy constructor\n+        Map.Entry entry2 = new UnmodifiableMapEntry(entry);\n+        assertSame(key, entry2.getKey());\n+        assertSame(value, entry2.getValue());\n+\n+        assertTrue(entry instanceof Unmodifiable);\n+    }\n+\n+    public void testAccessorsAndMutators() {\n+        Map.Entry entry = makeMapEntry(key, value);\n+\n+        assertSame(key, entry.getKey());\n+        assertSame(value, entry.getValue());\n+\n+        // check that null doesn't do anything funny\n+        entry = makeMapEntry(null, null);\n+        assertSame(null, entry.getKey());\n+        assertSame(null, entry.getValue());\n+    }\n+\n+    public void testSelfReferenceHandling() {\n+        // block\n+    }\n+\n+    public void testUnmodifiable() {\n+        Map.Entry entry = makeMapEntry();\n+        try {\n+            entry.setValue(null);\n+            fail();\n+\n+        } catch (UnsupportedOperationException ex) {}\n+    }\n+\n+}", "timestamp": 1067792819, "metainfo": ""}