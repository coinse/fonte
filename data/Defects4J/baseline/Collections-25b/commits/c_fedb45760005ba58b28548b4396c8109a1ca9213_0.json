{"sha": "fedb45760005ba58b28548b4396c8109a1ca9213", "log": "Fixed API to use new interfaces defined by PriorityQueue.  Now supports objects that do not implement comparable.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.2 2002/02/10 08:07:42 jstrachan Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/02/10 08:07:42 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java,v 1.3 2002/03/19 13:19:13 mas Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/03/19 13:19:13 $\n  *\n  * ====================================================================\n  *\n      *\n      * @param element the element to be inserted\n      */\n-    public synchronized void insert( final Comparable element )\n+    public synchronized void insert( final Object element )\n     {\n         m_priorityQueue.insert( element );\n     }\n      * @return the element at top of heap\n      * @exception NoSuchElementException if isEmpty() == true\n      */\n-    public synchronized Comparable peek() throws NoSuchElementException\n+    public synchronized Object peek() throws NoSuchElementException\n     {\n         return m_priorityQueue.peek();\n     }\n      * @return the element at top of heap\n      * @exception NoSuchElementException if isEmpty() == true\n      */\n-    public synchronized Comparable pop() throws NoSuchElementException\n+    public synchronized Object pop() throws NoSuchElementException\n     {\n         return m_priorityQueue.pop();\n     }", "timestamp": 1016543953, "metainfo": ""}