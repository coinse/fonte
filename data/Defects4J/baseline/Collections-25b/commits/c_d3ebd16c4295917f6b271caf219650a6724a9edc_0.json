{"sha": "d3ebd16c4295917f6b271caf219650a6724a9edc", "log": "Fix javadoc and formatting in bag package.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java\n     /**\n      * Write the map out using a custom routine.\n      * @param out the output stream\n-     * @throws IOException\n+     * @throws IOException any of the usual I/O related exceptions\n      */\n     protected void doWriteObject(ObjectOutputStream out) throws IOException {\n         out.writeInt(map.size());\n      * Read the map in using a custom routine.\n      * @param map the map to use\n      * @param in the input stream\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * @throws IOException any of the usual I/O related exceptions\n+     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n      * @throws ClassCastException if the stream does not contain the correct objects\n      */\n-    protected void doReadObject(Map<E, MutableInteger> map, ObjectInputStream in) throws IOException,\n-            ClassNotFoundException {\n+    protected void doReadObject(Map<E, MutableInteger> map, ObjectInputStream in)\n+            throws IOException, ClassNotFoundException {\n         this.map = map;\n         int entrySize = in.readInt();\n         for (int i = 0; i < entrySize; i++) {\n--- a/src/main/java/org/apache/commons/collections/bag/HashBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/HashBag.java\n  * @since 3.0 (previously in main package v2.0)\n  * @version $Id$\n  */\n-public class HashBag<E>\n-        extends AbstractMapBag<E> implements Bag<E>, Serializable {\n+public class HashBag<E> extends AbstractMapBag<E> implements Bag<E>, Serializable {\n \n     /** Serial version lock */\n     private static final long serialVersionUID = -6561115435802554013L;\n--- a/src/main/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/PredicatedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class PredicatedBag<E>\n-        extends PredicatedCollection<E> implements Bag<E> {\n+public class PredicatedBag<E> extends PredicatedCollection<E> implements Bag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -2575833140344736876L;\n--- a/src/main/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class PredicatedSortedBag<E>\n-        extends PredicatedBag<E> implements SortedBag<E> {\n+public class PredicatedSortedBag<E> extends PredicatedBag<E> implements SortedBag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 3448581314086406616L;\n--- a/src/main/java/org/apache/commons/collections/bag/SynchronizedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/SynchronizedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class SynchronizedBag<E>\n-        extends SynchronizedCollection<E> implements Bag<E> {\n+public class SynchronizedBag<E> extends SynchronizedCollection<E> implements Bag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 8084674570753837109L;\n--- a/src/main/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class SynchronizedSortedBag<E>\n-        extends SynchronizedBag<E> implements SortedBag<E> {\n+public class SynchronizedSortedBag<E> extends SynchronizedBag<E> implements SortedBag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 722374056718497858L;\n--- a/src/main/java/org/apache/commons/collections/bag/TransformedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TransformedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class TransformedBag<E>\n-        extends TransformedCollection<E> implements Bag<E> {\n+public class TransformedBag<E> extends TransformedCollection<E> implements Bag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = 5421170911299074185L;\n--- a/src/main/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n  * @since 3.0\n  * @version $Id$\n  */\n-public class TransformedSortedBag<E>\n-        extends TransformedBag<E> implements SortedBag<E> {\n+public class TransformedSortedBag<E> extends TransformedBag<E> implements SortedBag<E> {\n \n     /** Serialization version */\n     private static final long serialVersionUID = -251737742649401930L;\n--- a/src/main/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/main/java/org/apache/commons/collections/bag/TreeBag.java\n     }\n \n     //-----------------------------------------------------------------------\n-    // TODO: Generics - should this be E<? extends Comparable> or some such?\n+    /**\n+     * {@inheritDoc}\n+     * \n+     * @throws IllegalArgumentException if the object to be added does not implement\n+     * {@link Comparable} and the {@link TreeBag} is using natural ordering\n+     */\n     @Override\n     public boolean add(E object) {\n         if(comparator() == null && !(object instanceof Comparable)) {", "timestamp": 1343555701, "metainfo": ""}