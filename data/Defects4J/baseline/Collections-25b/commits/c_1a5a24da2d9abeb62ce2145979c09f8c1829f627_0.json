{"sha": "1a5a24da2d9abeb62ce2145979c09f8c1829f627", "log": "Formatting: line length.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections/buffer/BoundedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/BoundedBuffer.java\n      * @throws IllegalArgumentException if the buffer is null\n      * @throws IllegalArgumentException if the maximum size is zero or less\n      */\n-    public static <E> BoundedBuffer<E> boundedBuffer(final Buffer<E> buffer, final int maximumSize, final long timeout) {\n+    public static <E> BoundedBuffer<E> boundedBuffer(final Buffer<E> buffer, final int maximumSize,\n+                                                     final long timeout) {\n         return new BoundedBuffer<E>(buffer, maximumSize, timeout);\n     }\n \n--- a/src/main/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/main/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n      * @throws IllegalArgumentException if buffer or predicate is null\n      * @throws IllegalArgumentException if the buffer contains invalid elements\n      */\n-    public static <E> PredicatedBuffer<E> predicatedBuffer(final Buffer<E> buffer, final Predicate<? super E> predicate) {\n+    public static <E> PredicatedBuffer<E> predicatedBuffer(final Buffer<E> buffer,\n+                                                           final Predicate<? super E> predicate) {\n         return new PredicatedBuffer<E>(buffer, predicate);\n     }\n     ", "timestamp": 1358852611, "metainfo": ""}