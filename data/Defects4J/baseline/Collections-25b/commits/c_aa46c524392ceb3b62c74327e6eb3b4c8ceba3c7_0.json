{"sha": "aa46c524392ceb3b62c74327e6eb3b4c8ceba3c7", "log": "Update method names and signatures to make more generally useful and clear   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.15 2003/04/04 22:22:29 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.16 2003/04/09 23:37:54 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * instances.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.15 $ $Date: 2003/04/04 22:22:29 $\n+ * @version $Revision: 1.16 $ $Date: 2003/04/09 23:37:54 $\n  * \n  * @author  <a href=\"mailto:fede@apache.org\">Federico Barbieri</a>\n  * @author  <a href=\"mailto:donaldp@apache.org\">Peter Donald</a>\n      * {@link java.util.List#equals(java.lang.Object)}.\n      * <p>\n      * This method is useful for implementing <code>List</code> when you cannot\n-     * extend AbstractList.\n+     * extend AbstractList. The method takes Collection instances to enable other\n+     * collection types to use the List implementation algorithm.\n      * <p>\n      * The relevant text (slightly paraphrased as this is a static method) is:\n      * <blockquote>\n      * @param list2  the second list, may be null\n      * @return whether the lists are equal by value comparison\n      */\n-    public static boolean equals(final List list1, final List list2) {\n+    public static boolean isEqualList(final Collection list1, final Collection list2) {\n         if (list1 == list2) {\n             return true;\n         }\n      * {@link java.util.List#hashCode()}.\n      * <p>\n      * This method is useful for implementing <code>List</code> when you cannot\n-     * extend AbstractList.\n+     * extend AbstractList. The method takes Collection instances to enable other\n+     * collection types to use the List implementation algorithm.\n      * \n      * @see java.util.List#hashCode()\n      * @param list  the list to generate the hashCode for, may be null\n      * @return the hash code\n      */\n-    public static int hashCode(final List list) {\n+    public static int hashCodeForList(final Collection list) {\n         if (list == null) {\n             return 0;\n         }\n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.11 2003/04/04 22:22:29 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.12 2003/04/09 23:37:54 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  */\n package org.apache.commons.collections;\n \n+import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n  * Provides static utility methods and decorators for {@link Set} \n  * and {@link SortedSet} instances.\n  *\n- * @version $Revision: 1.11 $ $Date: 2003/04/04 22:22:29 $\n+ * @version $Revision: 1.12 $ $Date: 2003/04/09 23:37:54 $\n  * @since Commons Collection 2.1\n  * \n  * @author Paul Jack\n      * in {@link java.util.Set#equals(java.lang.Object)}.\n      * <p>\n      * This method is useful for implementing <code>Set</code> when you cannot\n-     * extend AbstractSet.\n+     * extend AbstractSet. The method takes Collection instances to enable other\n+     * collection types to use the Set implementation algorithm.\n      * <p>\n      * The relevant text (slightly paraphrased as this is a static method) is:\n      * <blockquote>\n      * @param set2  the second set, may be null\n      * @return whether the sets are equal by value comparison\n      */\n-    public static boolean equals(final Set set1, final Set set2) {\n+    public static boolean isEqualSet(final Collection set1, final Collection set2) {\n         if (set1 == set2) {\n             return true;\n         }\n      * {@link java.util.Set#hashCode()}.\n      * <p>\n      * This method is useful for implementing <code>Set</code> when you cannot\n-     * extend AbstractSet.\n+     * extend AbstractSet. The method takes Collection instances to enable other\n+     * collection types to use the Set implementation algorithm.\n      * \n      * @see java.util.Set#hashCode()\n      * @param set  the set to calculate the hashcode for, may be null\n      * @return the hash code\n      */\n-    public static int hashCode(final Set set) {\n+    public static int hashCodeForSet(final Collection set) {\n         if (set == null) {\n             return 0;\n         }", "timestamp": 1049931474, "metainfo": ""}