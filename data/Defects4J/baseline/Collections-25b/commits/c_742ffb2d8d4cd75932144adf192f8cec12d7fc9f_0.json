{"sha": "742ffb2d8d4cd75932144adf192f8cec12d7fc9f", "log": "Added static method to retrieve a shared instance.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparableComparator.java\n  * of SortedSet and SortedMap.\n  *\n  * @author bayard@generationjava.com\n- * @version $Id: ComparableComparator.java,v 1.3 2002/03/01 19:18:49 morgand Exp $\n+ * @version $Id: ComparableComparator.java,v 1.4 2002/03/19 05:09:05 mas Exp $\n  */\n public class ComparableComparator implements Comparator,Serializable {\n+\n+    private static final ComparableComparator instance = \n+        new ComparableComparator();\n+\n+    /**\n+     *  Return a shared instance of a ComparableComparator.  Developers are\n+     *  encouraged to use the comparator returned from this method instead of\n+     *  constructing a new instance to reduce allocation and GC overhead when\n+     *  multiple comparable comparators may be used in the same VM.\n+     **/\n+    public static ComparableComparator getInstance() {\n+        return instance;\n+    }\n+\n+    private static final long serialVersionUID=-291439688585137865L;\n \n     public ComparableComparator() {\n     }", "timestamp": 1016514545, "metainfo": ""}