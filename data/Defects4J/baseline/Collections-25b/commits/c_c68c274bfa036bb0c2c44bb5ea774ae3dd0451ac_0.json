{"sha": "c68c274bfa036bb0c2c44bb5ea774ae3dd0451ac", "log": "Document why warnings can be ignored here  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java\n      * @return the singleton instance\n      * @since 3.1\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the singleton instance works for all types\n     public static <T> Transformer<T, T> cloneTransformer() {\n         return (Transformer<T, T>) INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/ConstantFactory.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ConstantFactory.java\n      * @param constantToReturn  the constant object to return each time in the factory\n      * @return the <code>constant</code> factory.\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // The null factory works for all object types\n     public static <T> Factory<T> constantFactory(final T constantToReturn) {\n         if (constantToReturn == null) {\n             return (Factory<T>) NULL_INSTANCE;\n--- a/src/main/java/org/apache/commons/collections4/functors/ConstantTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ConstantTransformer.java\n      * @param <O>  the output type\n      * @return Transformer<I, O> that always returns null.\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // The null transformer works for all object types\n     public static <I, O> Transformer<I, O> nullTransformer() {\n         return (Transformer<I, O>) NULL_INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java\n      * @param <T>  the object type\n      * @return the singleton instance\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the static instance works for all types\n     public static <T> DefaultEquator<T> defaultEquator() {\n         return (DefaultEquator<T>) DefaultEquator.INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionClosure.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionClosure.java\n      * @return the singleton instance\n      * @since 3.1\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\")  // the static instance works for all types\n     public static <E> Closure<E> exceptionClosure() {\n         return (Closure<E>) INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionFactory.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionFactory.java\n      * @return the singleton instance\n      * @since 3.1\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the static instance works for all types\n     public static <T> Factory<T> exceptionFactory() {\n         return (Factory<T>) INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionPredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionPredicate.java\n      * @return the singleton instance\n      * @since 3.1\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the static instance works for all types\n     public static <T> Predicate<T> exceptionPredicate() {\n         return (Predicate<T>) INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/ExceptionTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/ExceptionTransformer.java\n      * @return the singleton instance\n      * @since 3.1\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the static instance works for all types\n     public static <I, O> Transformer<I, O> exceptionTransformer() {\n         return (Transformer<I, O>) INSTANCE;\n     }\n--- a/src/main/java/org/apache/commons/collections4/functors/FalsePredicate.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/FalsePredicate.java\n      * @return the singleton instance\n      * @since 4.0\n      */\n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings(\"unchecked\") // the static instance works for all types\n     public static <T> Predicate<T> falsePredicate() {\n         return (Predicate<T>) INSTANCE;\n     }", "timestamp": 1367792105, "metainfo": ""}