{"sha": "71a2dba44e31bc8d0f4a1967b9061ee52eb82cb2", "log": "implement some TestListIterator tests, hence clearing a TODO   ", "commit": "\n--- a/src/test/org/apache/commons/collections/iterators/TestListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/Attic/TestListIterator.java,v 1.1 2003/04/13 23:26:09 rwaldhoff Exp $\n- * $Revision: 1.1 $\n- * $Date: 2003/04/13 23:26:09 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/Attic/TestListIterator.java,v 1.2 2003/04/15 00:27:37 rwaldhoff Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2003/04/15 00:27:37 $\n  *\n  * ====================================================================\n  *\n  */\n package org.apache.commons.collections.iterators;\n \n+import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.ListIterator;\n+\n /**\n- * @TODO implement me\n- * (Having this type around, even without specific tests, consolidates\n- * a bunch of \"to dos\" of the form \"this should extend TestListIterator once\n- * it exists (see subclasses).\n+ * @version $Revision: 1.2 $ $Date: 2003/04/15 00:27:37 $ \n+ * @author Rodney Waldhoff\n  */\n public abstract class TestListIterator extends TestIterator {\n \n         return makeFullListIterator();\n     }\n \n+    // tests\n+\n+    public void testEmptyListIteratorIsIndeedEmpty() {\n+        ListIterator iter = makeEmptyListIterator();\n+        assertTrue(!iter.hasNext());\n+        assertTrue(!iter.hasPrevious());\n+    }\n+    \n+    public void testWalkForwardAndBack() {\n+        ArrayList list = new ArrayList();\n+        ListIterator iter = makeFullListIterator();\n+        while(iter.hasNext()) {\n+            list.add(iter.next());\n+        }\n+        for(int i = list.size()-1;i>=0;i--) {\n+            Object obj = list.get(i);\n+            if(null == obj) {\n+                assertNull(iter.previous());\n+            } else {\n+                assertEquals(obj,iter.previous());\n+            }\n+        }\n+        assertTrue(!iter.hasPrevious());\n+    }\n }", "timestamp": 1050366457, "metainfo": ""}