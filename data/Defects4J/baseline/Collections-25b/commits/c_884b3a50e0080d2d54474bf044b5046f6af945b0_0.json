{"sha": "884b3a50e0080d2d54474bf044b5046f6af945b0", "log": "more specific in-memory serialization tests for SequencedHashMap   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n  * <http://www.apache.org/>.\n  */\n \n+import java.io.IOException;\n+import java.io.Serializable;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n         assertTrue(\"second key is reassigned to first\",labRat.get(0).equals(new Integer(2)));\n     }\n \n+    // override TestMap method with more specific tests\n+    public void testFullMapSerialization() \n+    throws IOException, ClassNotFoundException {\n+        SequencedHashMap map = (SequencedHashMap) makeFullMap();\n+        if (!(map instanceof Serializable)) return;\n+        \n+        byte[] objekt = writeExternalFormToBytes((Serializable) map);\n+        SequencedHashMap map2 = (SequencedHashMap) readExternalFormFromBytes(objekt);\n+\n+        assertEquals(\"Both maps are same size\",map.size(), getSampleKeys().length);\n+        assertEquals(\"Both maps are same size\",map2.size(),getSampleKeys().length);\n+\n+        assertEquals(\"Both maps have the same first key\",\n+                     map.getFirstKey(),getSampleKeys()[0]);\n+        assertEquals(\"Both maps have the same first key\",\n+                     map2.getFirstKey(),getSampleKeys()[0]);\n+        assertEquals(\"Both maps have the same last key\",\n+                     map.getLastKey(),getSampleKeys()[0]);\n+        assertEquals(\"Both maps have the same last key\",\n+                     map2.getLastKey(),getSampleKeys()[0]);\n+    }\n+\n     protected void tearDown() {\n         labRat = null;\n     }", "timestamp": 1014359110, "metainfo": ""}