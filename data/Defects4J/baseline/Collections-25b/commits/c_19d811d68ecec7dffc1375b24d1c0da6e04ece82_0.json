{"sha": "19d811d68ecec7dffc1375b24d1c0da6e04ece82", "log": "Javadoc fixes   ", "commit": "\n--- a/src/test/org/apache/commons/collections/AbstractTestCollection.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestCollection.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestCollection.java,v 1.2 2003/10/04 00:49:27 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestCollection.java,v 1.3 2003/10/05 23:10:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n import java.util.NoSuchElementException;\n \n /**\n- * Abstract test class for the  {@link java.util.Collection} methods and contracts.\n+ * Abstract test class for {@link java.util.Collection} methods and contracts.\n  * <p>\n  * You should create a concrete subclass of this class to test any custom\n  * {@link Collection} implementation.  At minimum, you'll have to \n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link Collection} fails.\n  *\n- * @version $Revision: 1.2 $ $Date: 2003/10/04 00:49:27 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/05 23:10:31 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n     //\n     // Collection doesn't define any semantics for equals, and recommends you\n     // use reference-based default behavior of Object.equals.  (And a test for\n-    // that already exists in TestObject).  Tests for equality of lists, sets\n+    // that already exists in AbstractTestObject).  Tests for equality of lists, sets\n     // and bags will have to be written in test subclasses.  Thus, there is no\n     // tests on Collection.equals nor any for Collection.hashCode.\n     //\n--- a/src/test/org/apache/commons/collections/AbstractTestSet.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSet.java,v 1.1 2003/10/02 22:48:41 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSet.java,v 1.2 2003/10/05 23:10:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * To use, subclass and override the {@link #makeEmptySet()}\n  * method.  You may have to override other protected methods if your\n  * set is not modifiable, or if your set restricts what kinds of\n- * elements may be added; see {@link TestCollection} for more details.\n+ * elements may be added; see {@link AbstractTestCollection} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/10/02 22:48:41 $\n+ * @version $Revision: 1.2 $ $Date: 2003/10/05 23:10:31 $\n  * \n  * @author Paul Jack\n  */\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Return the {@link TestCollection#collection} fixture, but cast as a Set.  \n+     * Return the {@link AbstractTestCollection#collection} fixture, but cast as a Set.  \n      */\n     protected Set getSet() {\n         return (Set)collection;\n     }\n \n     /**\n-     * Return the {@link TestCollection#confirmed} fixture, but cast as a Set.\n+     * Return the {@link AbstractTestCollection#confirmed} fixture, but cast as a Set.\n      */\n     protected Set getConfirmedSet() {\n         return (Set)confirmed;\n--- a/src/test/org/apache/commons/collections/AbstractTestSortedBag.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSortedBag.java,v 1.1 2003/10/02 22:35:31 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSortedBag.java,v 1.2 2003/10/05 23:10:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n package org.apache.commons.collections;\n \n /**\n- * Abstract test class for {@link java.util.SortedBag} methods and contracts.\n+ * Abstract test class for {@link SortedBag} methods and contracts.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/10/02 22:35:31 $\n+ * @version $Revision: 1.2 $ $Date: 2003/10/05 23:10:31 $\n  * \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/AbstractTestSortedSet.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestSortedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSortedSet.java,v 1.1 2003/10/02 22:48:41 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/AbstractTestSortedSet.java,v 1.2 2003/10/05 23:10:31 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * To use, subclass and override the {@link #makeEmptySet()}\n  * method.  You may have to override other protected methods if your\n  * set is not modifiable, or if your set restricts what kinds of\n- * elements may be added; see {@link TestCollection} for more details.\n+ * elements may be added; see {@link AbstractTestCollection} for more details.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/10/02 22:48:41 $\n+ * @version $Revision: 1.2 $ $Date: 2003/10/05 23:10:31 $\n  * \n  * @author Stephen Colebourne\n  * @author Dieter Wimberger\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Return the {@link TestCollection#confirmed} fixture, but cast as a\n+     * Return the {@link AbstractTestCollection#confirmed} fixture, but cast as a\n      * SortedSet.\n      */\n     protected SortedSet getConfirmedSortedSet() {\n      * After modification operations, {@link #verify()} is invoked to ensure\n      * that the set and the other collection views are still valid.\n      *\n-     * @return a {@link TestSet} instance for testing a subset.\n+     * @return a {@link AbstractTestSet} instance for testing a subset.\n      */\n     public BulkTest bulkTestSortedSetSubSet() {\n         int length = getFullElements().length;\n      * After modification operations, {@link #verify()} is invoked to ensure\n      * that the set and the other collection views are still valid.\n      *\n-     * @return a {@link TestSet} instance for testing a headset.\n+     * @return a {@link AbstractTestSet} instance for testing a headset.\n      */\n     public BulkTest bulkTestSortedSetHeadSet() {\n         int length = getFullElements().length;\n      * After modification operations, {@link #verify()} is invoked to ensure\n      * that the set and the other collection views are still valid.\n      *\n-     * @return a {@link TestSet} instance for testing a tailset.\n+     * @return a {@link AbstractTestSet} instance for testing a tailset.\n      */\n     public BulkTest bulkTestSortedSetTailSet() {\n         int length = getFullElements().length;", "timestamp": 1065395431, "metainfo": ""}