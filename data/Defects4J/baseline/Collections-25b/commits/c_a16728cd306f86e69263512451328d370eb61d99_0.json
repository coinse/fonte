{"sha": "a16728cd306f86e69263512451328d370eb61d99", "log": "Add new public constructor to ListOrderedMap   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n import java.util.AbstractSet;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.ListIterator;\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.15 $ $Date: 2004/04/09 10:36:01 $\n+ * @version $Revision: 1.16 $ $Date: 2004/06/07 21:51:39 $\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n     }\n \n     //-----------------------------------------------------------------------\n+    /**\n+     * Constructs a new empty <code>ListOrderedMap</code> that decorates\n+     * a <code>HashMap</code>.\n+     * \n+     * @since Commons Collections 3.1\n+     */\n+    public ListOrderedMap() {\n+        this(new HashMap());\n+    }\n+\n     /**\n      * Constructor that wraps (not copies).\n      * \n--- a/src/test/org/apache/commons/collections/map/TestAll.java\n+++ b/src/test/org/apache/commons/collections/map/TestAll.java\n  * Entry point for tests.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.18 $ $Date: 2004/04/30 22:53:44 $\n+ * @version $Revision: 1.19 $ $Date: 2004/06/07 21:51:39 $\n  * \n  * @author Stephen Colebourne\n  */\n         suite.addTest(TestLazyMap.suite());\n         suite.addTest(TestLazySortedMap.suite());\n         suite.addTest(TestListOrderedMap.suite());\n+        suite.addTest(TestListOrderedMap2.suite());\n         suite.addTest(TestPredicatedMap.suite());\n         suite.addTest(TestPredicatedSortedMap.suite());\n         suite.addTest(TestTransformedMap.suite());\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/map/TestListOrderedMap2.java\n+/*\n+ *  Copyright 2004 The Apache Software Foundation\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.commons.collections.map;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import junit.framework.Test;\n+\n+import org.apache.commons.collections.BulkTest;\n+import org.apache.commons.collections.MapIterator;\n+import org.apache.commons.collections.list.AbstractTestList;\n+\n+/**\n+ * Extension of {@link TestMap} for exercising the {@link ListOrderedMap}\n+ * implementation.\n+ *\n+ * @since Commons Collections 3.1\n+ * @version $Revision: 1.1 $ $Date: 2004/06/07 21:51:39 $\n+ * \n+ * @author Henri Yandell\n+ * @author Stephen Colebourne\n+ */\n+public class TestListOrderedMap2 extends AbstractTestOrderedMap {\n+\n+    public TestListOrderedMap2(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return BulkTest.makeSuite(TestListOrderedMap2.class);\n+    }\n+\n+    public static void main(String args[]) {\n+        String[] testCaseName = { TestListOrderedMap2.class.getName()};\n+        junit.textui.TestRunner.main(testCaseName);\n+    }\n+\n+    public Map makeEmptyMap() {\n+        return new ListOrderedMap();\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testGetByIndex() {\n+        resetEmpty();\n+        ListOrderedMap lom = (ListOrderedMap) map;\n+        try {\n+            lom.get(0);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.get(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        resetFull();\n+        lom = (ListOrderedMap) map;\n+        try {\n+            lom.get(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.get(lom.size());\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        int i = 0;\n+        for (MapIterator it = lom.mapIterator(); it.hasNext(); i++) {\n+            assertSame(it.next(), lom.get(i));\n+        }\n+    }\n+\n+    public void testGetValueByIndex() {\n+        resetEmpty();\n+        ListOrderedMap lom = (ListOrderedMap) map;\n+        try {\n+            lom.getValue(0);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.getValue(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        resetFull();\n+        lom = (ListOrderedMap) map;\n+        try {\n+            lom.getValue(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.getValue(lom.size());\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        int i = 0;\n+        for (MapIterator it = lom.mapIterator(); it.hasNext(); i++) {\n+            it.next();\n+            assertSame(it.getValue(), lom.getValue(i));\n+        }\n+    }\n+\n+    public void testIndexOf() {\n+        resetEmpty();\n+        ListOrderedMap lom = (ListOrderedMap) map;\n+        assertEquals(-1, lom.indexOf(getOtherKeys()));\n+        \n+        resetFull();\n+        lom = (ListOrderedMap) map;\n+        List list = new ArrayList();\n+        for (MapIterator it = lom.mapIterator(); it.hasNext();) {\n+            list.add(it.next());\n+        }\n+        for (int i = 0; i < list.size(); i++) {\n+            assertEquals(i, lom.indexOf(list.get(i)));\n+        }\n+    }\n+\n+    public void testRemoveByIndex() {\n+        resetEmpty();\n+        ListOrderedMap lom = (ListOrderedMap) map;\n+        try {\n+            lom.remove(0);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.remove(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        resetFull();\n+        lom = (ListOrderedMap) map;\n+        try {\n+            lom.remove(-1);\n+        } catch (IndexOutOfBoundsException ex) {}\n+        try {\n+            lom.remove(lom.size());\n+        } catch (IndexOutOfBoundsException ex) {}\n+        \n+        List list = new ArrayList();\n+        for (MapIterator it = lom.mapIterator(); it.hasNext();) {\n+            list.add(it.next());\n+        }\n+        for (int i = 0; i < list.size(); i++) {\n+            Object key = list.get(i);\n+            Object value = lom.get(key);\n+            assertEquals(value, lom.remove(i));\n+            list.remove(i);\n+            assertEquals(false, lom.containsKey(key));\n+        }\n+    }\n+    \n+    public BulkTest bulkTestListView() {\n+        return new TestListView();\n+    }\n+    \n+    public class TestListView extends AbstractTestList {\n+        \n+        TestListView() {\n+            super(\"TestListView\");\n+        }\n+\n+        public List makeEmptyList() {\n+            return ((ListOrderedMap) TestListOrderedMap2.this.makeEmptyMap()).asList();\n+        }\n+        \n+        public List makeFullList() {\n+            return ((ListOrderedMap) TestListOrderedMap2.this.makeFullMap()).asList();\n+        }\n+        \n+        public Object[] getFullElements() {\n+            return TestListOrderedMap2.this.getSampleKeys();\n+        }\n+        public boolean isAddSupported() {\n+            return false;\n+        }\n+        public boolean isRemoveSupported() {\n+            return false;\n+        }\n+        public boolean isSetSupported() {\n+            return false;\n+        }\n+        public boolean isNullSupported() {\n+            return TestListOrderedMap2.this.isAllowNullKey();\n+        }\n+        public boolean isTestSerialization() {\n+            return false;\n+        }\n+    }\n+\n+    public String getCompatibilityVersion() {\n+        return \"3.1\";\n+    }\n+\n+//    public void testCreate() throws Exception {\n+//        resetEmpty();\n+//        writeExternalFormToDisk(\n+//            (java.io.Serializable) map,\n+//            \"D:/dev/collections/data/test/ListOrderedMap.emptyCollection.version3.1.obj\");\n+//        resetFull();\n+//        writeExternalFormToDisk(\n+//            (java.io.Serializable) map,\n+//            \"D:/dev/collections/data/test/ListOrderedMap.fullCollection.version3.1.obj\");\n+//    }\n+}", "timestamp": 1086645099, "metainfo": ""}