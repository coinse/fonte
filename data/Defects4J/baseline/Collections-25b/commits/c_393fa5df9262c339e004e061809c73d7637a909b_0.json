{"sha": "393fa5df9262c339e004e061809c73d7637a909b", "log": "Use interface instead of concrete class.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java\n     private Comparator<? super E> comparator = null;\n \n     /** The list of {@link Iterator}s to evaluate. */\n-    private ArrayList<Iterator<? extends E>> iterators = null;\n+    private List<Iterator<? extends E>> iterators = null;\n \n     /** {@link Iterator#next Next} objects peeked from each iterator. */\n-    private ArrayList<E> values = null;\n+    private List<E> values = null;\n \n     /** Whether or not each {@link #values} element has been set. */\n     private BitSet valueSet = null;\n      * Returns <code>true</code> iff any {@link Iterator} in the given list has\n      * a next value.\n      */\n-    private boolean anyHasNext(final ArrayList<Iterator<? extends E>> iters) {\n+    private boolean anyHasNext(final List<Iterator<? extends E>> iters) {\n         for (final Iterator<? extends E> iterator : iters) {\n             if (iterator.hasNext()) {\n                 return true;", "timestamp": 1385500289, "metainfo": ""}