{"sha": "8b328d838ebc3d378c42f7e5d2100ae99ffc789b", "log": "Remove accidental commit.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/SetUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/SetUtils.java\n import java.util.Collection;\n import java.util.Collections;\n import java.util.IdentityHashMap;\n-import java.util.NavigableSet;\n import java.util.Set;\n import java.util.SortedSet;\n import java.util.TreeSet;\n \n import org.apache.commons.collections4.set.ListOrderedSet;\n-import org.apache.commons.collections4.set.PredicatedNavigableSet;\n import org.apache.commons.collections4.set.PredicatedSet;\n import org.apache.commons.collections4.set.PredicatedSortedSet;\n-import org.apache.commons.collections4.set.TransformedNavigableSet;\n import org.apache.commons.collections4.set.TransformedSet;\n import org.apache.commons.collections4.set.TransformedSortedSet;\n-import org.apache.commons.collections4.set.UnmodifiableNavigableSet;\n import org.apache.commons.collections4.set.UnmodifiableSet;\n import org.apache.commons.collections4.set.UnmodifiableSortedSet;\n \n         return TransformedSortedSet.transformingSortedSet(set, transformer);\n     }\n \n-    // NavigableSet\n-    //-----------------------------------------------------------------------\n-    /**\n-     * Returns an unmodifiable navigable set backed by the given navigable set.\n-     * <p>\n-     * This method uses the implementation in the decorators subpackage.\n-     *\n-     * @param <E> the element type\n-     * @param set  the navigable set to make unmodifiable, must not be null\n-     * @return an unmodifiable set backed by the given set\n-     * @throws IllegalArgumentException  if the set is null\n-     * @since 4.1\n-     */\n-    public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set) {\n-        return UnmodifiableNavigableSet.unmodifiableNavigableSet(set);\n-    }\n-\n-    /**\n-     * Returns a predicated (validating) navigable set backed by the given navigable set.\n-     * <p>\n-     * Only objects that pass the test in the given predicate can be added to the set.\n-     * Trying to add an invalid object results in an IllegalArgumentException.\n-     * It is important not to use the original set after invoking this method,\n-     * as it is a backdoor for adding invalid objects.\n-     *\n-     * @param <E> the element type\n-     * @param set  the navigable set to predicate, must not be null\n-     * @param predicate  the predicate for the navigable set, must not be null\n-     * @return a predicated navigable set backed by the given navigable set\n-     * @throws IllegalArgumentException  if the Set or Predicate is null\n-     * @since 4.1\n-     */\n-    public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate) {\n-        return PredicatedNavigableSet.predicatedNavigableSet(set, predicate);\n-    }\n-\n-    /**\n-     * Returns a transformed navigable set backed by the given navigable set.\n-     * <p>\n-     * Each object is passed through the transformer as it is added to the\n-     * Set. It is important not to use the original set after invoking this\n-     * method, as it is a backdoor for adding untransformed objects.\n-     * <p>\n-     * Existing entries in the specified set will not be transformed.\n-     * If you want that behaviour, see {@link TransformedNavigableSet#transformedNavigableSet}.\n-     *\n-     * @param <E> the element type\n-     * @param set  the navigable set to transform, must not be null\n-     * @param transformer  the transformer for the set, must not be null\n-     * @return a transformed set backed by the given set\n-     * @throws IllegalArgumentException  if the Set or Transformer is null\n-     * @since 4.1\n-     */\n-    public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set,\n-                                                           final Transformer<? super E, ? extends E> transformer) {\n-        return TransformedNavigableSet.transformingNavigableSet(set, transformer);\n-    }\n-\n }", "timestamp": 1432899250, "metainfo": ""}