{"sha": "49d9fa86a6fc1b30bc7cedd65a226fececd17b11", "log": "Add no args constructor Tidy javadoc and code layout   ", "commit": "\n--- a/src/java/org/apache/commons/collections/BufferOverflowException.java\n+++ b/src/java/org/apache/commons/collections/BufferOverflowException.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BufferOverflowException.java,v 1.3 2002/08/13 00:46:25 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/13 00:46:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BufferOverflowException.java,v 1.4 2002/10/13 12:57:12 scolebourne Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/10/13 12:57:12 $\n  *\n  * ====================================================================\n  *\n  * The BufferOverflowException is used when the buffer's capacity has been\n  * exceeded.\n  *\n+ * @author Avalon\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n  * @author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n- * @version $Id: BufferOverflowException.java,v 1.3 2002/08/13 00:46:25 pjack Exp $\n- * @since Avalon 4.0\n+ * @author Paul Jack\n+ * @author Stephen Colebourne\n+ * @since 2.1\n+ * @version $Id: BufferOverflowException.java,v 1.4 2002/10/13 12:57:12 scolebourne Exp $\n  */\n-public class BufferOverflowException extends RuntimeException\n-{\n+public class BufferOverflowException extends RuntimeException {\n     private final Throwable m_throwable;\n \n-    /** Construct a new BufferOverflowException.\n-     * @param message The detail message for this exception.\n+    /**\n+     * Constructs a new <code>BufferOverflowException</code>.\n      */\n-    public BufferOverflowException( String message )\n-    {\n-        this( message, null );\n+    public BufferOverflowException() {\n+        super();\n+        m_throwable = null;\n     }\n \n-    /** Construct a new BufferOverflowException.\n-     * @param message The detail message for this exception.\n-     * @param throwable the root cause of the exception\n+    /** \n+     * Construct a new <code>BufferOverflowException</code>.\n+     * \n+     * @param message  the detail message for this exception\n      */\n-    public BufferOverflowException( String message, Throwable exception )\n-    {\n-        super( message );\n+    public BufferOverflowException(String message) {\n+        this(message, null);\n+    }\n+\n+    /** \n+     * Construct a new <code>BufferOverflowException</code>.\n+     * \n+     * @param message  the detail message for this exception\n+     * @param throwable  the root cause of the exception\n+     */\n+    public BufferOverflowException(String message, Throwable exception) {\n+        super(message);\n         m_throwable = exception;\n     }\n \n     /**\n-     * Retrieve root cause of the exception.\n+     * Gets the root cause of the exception.\n      *\n      * @return the root cause\n      */\n-    public final Throwable getCause()\n-    {\n+    public final Throwable getCause() {\n         return m_throwable;\n     }\n }", "timestamp": 1034513832, "metainfo": ""}