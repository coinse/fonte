{"sha": "a24ad64d19e1bb27e0dadbb9c68c925c8d7cc249", "log": "More IllegalArgument checks to decorators.  PR: Obtained from: Submitted by: Reviewed by:   ", "commit": "\n--- a/src/java/org/apache/commons/collections/BagUtils.java\n+++ b/src/java/org/apache/commons/collections/BagUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BagUtils.java,v 1.3 2002/08/13 00:49:59 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/13 00:49:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BagUtils.java,v 1.4 2002/08/17 21:10:46 pjack Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/08/17 21:10:46 $\n  *\n  * ====================================================================\n  *\n  *  and {@link SortedBag} instances.<P>\n  *\n  *  @author Paul Jack\n- *  @version $Id: BagUtils.java,v 1.3 2002/08/13 00:49:59 pjack Exp $\n+ *  @version $Id: BagUtils.java,v 1.4 2002/08/17 21:10:46 pjack Exp $\n  *  @since 2.1\n  */\n public class BagUtils {\n \n         public BoundedBag(Bag bag, int maxSize) {\n             super(bag);\n+            if (maxSize < 0) {\n+                throw new IllegalArgumentException(\"maxSize must be nonnegative.\");\n+            }\n             this.maxSize = maxSize;\n         }\n \n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.12 2002/08/17 11:38:35 scolebourne Exp $\n- * $Revision: 1.12 $\n- * $Date: 2002/08/17 11:38:35 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.13 2002/08/17 21:10:46 pjack Exp $\n+ * $Revision: 1.13 $\n+ * $Date: 2002/08/17 21:10:46 $\n  *\n  * ====================================================================\n  *\n  * @author Rodney Waldhoff\n  *\n  * @since 1.0\n- * @version $Id: CollectionUtils.java,v 1.12 2002/08/17 11:38:35 scolebourne Exp $\n+ * @version $Id: CollectionUtils.java,v 1.13 2002/08/17 21:10:46 pjack Exp $\n  */\n public class CollectionUtils {\n \n \n         public BoundedCollection(Collection c, int maxSize) {\n             super(c);\n+            if (maxSize < 0) {\n+                throw new IllegalArgumentException(\"maxSize must be nonnegative.\");\n+            }\n             this.maxSize = maxSize;\n         }\n \n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.8 2002/08/15 20:09:37 pjack Exp $\n- * $Revision: 1.8 $\n- * $Date: 2002/08/15 20:09:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/ListUtils.java,v 1.9 2002/08/17 21:10:46 pjack Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2002/08/17 21:10:46 $\n  *\n  * ====================================================================\n  *\n \n         public BoundedList(List list, int maxSize) {\n             super(list);\n+            if (maxSize < 0) {\n+                throw new IllegalArgumentException(\"maxSize must be nonnegative.\");\n+            }\n             this.maxSize = maxSize;\n         }\n \n \n         public LazyList(List list, Factory factory) {\n             super(list);\n+            if (factory == null) {\n+                throw new IllegalArgumentException(\"factory may not be null\");\n+            }\n             this.factory = factory;\n         }\n \n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.9 2002/08/15 20:09:37 pjack Exp $\n- * $Revision: 1.9 $\n- * $Date: 2002/08/15 20:09:37 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/MapUtils.java,v 1.10 2002/08/17 21:10:46 pjack Exp $\n+ * $Revision: 1.10 $\n+ * $Date: 2002/08/17 21:10:46 $\n  *\n  * ====================================================================\n  *\n \n         public PredicatedMap(Map map, Predicate keyPred, Predicate valuePred) {\n             super(map);\n+            if (map == null) {\n+                throw new IllegalArgumentException(\"map may not be null.\");\n+            }\n+            if (keyPred == null) {\n+                throw new IllegalArgumentException(\"keyPred may not be null.\");\n+            }\n+            if (valuePred == null) {\n+                throw new IllegalArgumentException(\"valuePred may not be null.\");\n+            }\n             this.keyPredicate = keyPred;\n             this.valuePredicate = valuePred;\n             Iterator iter = map.entrySet().iterator();\n \n         public BoundedMap(Map map, int maxSize) {\n             super(map);\n+            if (map == null) {\n+                throw new IllegalArgumentException(\"map may not be null.\");\n+            }\n+            if (maxSize < 0) {\n+                throw new IllegalArgumentException(\"maxSize must be nonnegative.\");\n+            }\n             this.maxSize = maxSize;\n         }\n \n \n         public FixedSizeMap(Map map) {\n             super(map);\n+            if (map == null) {\n+                throw new IllegalArgumentException(\"map may not be null.\");\n+            }\n         }\n \n \n \n         public LazyMap(Map map, Factory factory) {\n             super(map);\n+            if (map == null) {\n+                throw new IllegalArgumentException(\"map may not be null.\");\n+            }\n+            if (factory == null) {\n+                throw new IllegalArgumentException(\"factory may not be null.\");\n+            }\n             this.factory = factory;\n         }\n \n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.3 2002/08/13 00:49:59 pjack Exp $\n- * $Revision: 1.3 $\n- * $Date: 2002/08/13 00:49:59 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/SetUtils.java,v 1.4 2002/08/17 21:10:46 pjack Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/08/17 21:10:46 $\n  *\n  * ====================================================================\n  *\n  *  and {@link SortedSet} instances.\n  *\n  *  @author Paul Jack\n- *  @version $Id: SetUtils.java,v 1.3 2002/08/13 00:49:59 pjack Exp $\n+ *  @version $Id: SetUtils.java,v 1.4 2002/08/17 21:10:46 pjack Exp $\n  *  @since 2.1\n  */\n public class SetUtils {\n \n         public BoundedSet(Set set, int maxSize) {\n             super(set);\n+            if (maxSize < 0) {\n+                throw new IllegalArgumentException(\"maxSize must be nonnegative.\");\n+            }\n             this.maxSize = maxSize;\n         }\n ", "timestamp": 1029618646, "metainfo": ""}