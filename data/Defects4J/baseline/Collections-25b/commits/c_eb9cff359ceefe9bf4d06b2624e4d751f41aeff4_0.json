{"sha": "eb9cff359ceefe9bf4d06b2624e4d751f41aeff4", "log": "Nathan Egge requested a ListUtils.indexOf(List, Predicate) method in COLLECTIONS-235. Applying Dave Meikle's patch.   ", "commit": "\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n  * @author Matthew Hawthorne\n+ * @author Dave Meikle\n  */\n public class ListUtils {\n \n         return FixedSizeList.decorate(list);\n     }\n \n+    /**\n+     * Finds the first index in the given List which matches the given predicate.\n+     * <p>\n+     * If the input List or predicate is null, or no element of the List\n+     * matches the predicate, -1 is returned.\n+     *\n+     * @param list the List to search, may be null\n+     * @param predicate  the predicate to use, may be null\n+     * @return the first index of an Object in the List which matches the predicate or -1 if none could be found\n+     */\n+    public static int indexOf(List list, Predicate predicate) {\n+        if (list != null && predicate != null) {\n+            for (int i = 0; i < list.size(); i++) {\n+                Object item = list.get(i);\n+                if (predicate.evaluate(item)) {\n+                    return i;\n+                }\n+            }\n+        }\n+        return -1;\n+    }\n+    \n }\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n  * @author Matthew Hawthorne\n+ * @author Dave Meikle\n  */\n public class TestListUtils extends BulkTest {\n \n             fail(\"expecting NullPointerException\");\n         } catch(NullPointerException npe) {} // this is what we want\n     }\n+\n+    /**\n+     * Tests the <code>indexOf</code> method in <code>ListUtils</code> class..\n+     */\n+    public void testIndexOf() {\n+        Predicate testPredicate = PredicateUtils.equalPredicate(\"d\");\n+        int index = ListUtils.indexOf(fullList, testPredicate);\n+        assertEquals(d, fullList.get(index));\n+\n+        testPredicate = PredicateUtils.equalPredicate(\"de\");\n+        index = ListUtils.indexOf(fullList, testPredicate);\n+        assertTrue(index == -1);\n+        \n+        assertEquals(ListUtils.indexOf(null,testPredicate), -1);\n+        assertEquals(ListUtils.indexOf(fullList, null), -1);\n+    }\n     \n }", "timestamp": 1205632379, "metainfo": ""}