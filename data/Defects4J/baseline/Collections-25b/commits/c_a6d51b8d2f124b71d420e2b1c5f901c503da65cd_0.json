{"sha": "a6d51b8d2f124b71d420e2b1c5f901c503da65cd", "log": "[COLLECTIONS-330] remove unreasonable expectations from LRUMap synchronized iteration tests  ", "commit": "\n--- a/src/test/org/apache/commons/collections/map/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLRUMap.java\n         } catch (IndexOutOfBoundsException ex) {}\n     }\n     \n-    // TODO: COLLECTIONS-330\n-    public void todoTestSynchronizedRemoveFromMapIterator() throws InterruptedException {\n+    public void testSynchronizedRemoveFromMapIterator() throws InterruptedException {\n \n         final LRUMap<Object, Thread> map = new LRUMap<Object, Thread>(10000);\n         \n                         }\n                         synchronized (map) {\n                             for (MapIterator<Object, Thread> iter = map.mapIterator(); iter.hasNext();) {\n-                                String name = (String)iter.next();\n-                                if (map.get(name) == this) {\n+                            \titer.next();\n+                            \tif (iter.getValue() == this) {\n                                     iter.remove();\n                                 }\n                             }\n                 + counter[0] + \" did succeed\", counter[0] >= threads.length);\n     }\n     \n-    // TODO: COLLECTIONS-330\n-    public void todoTestSynchronizedRemoveFromKeySet() throws InterruptedException {\n+    public void testSynchronizedRemoveFromKeySet() throws InterruptedException {\n \n         final Map<Object, Thread> map = new LRUMap<Object, Thread>(10000);\n         \n                         }\n                         synchronized (map) {\n                             for (Iterator<Object> iter = map.keySet().iterator(); iter.hasNext();) {\n-                                String name = (String)iter.next();\n-                                if (map.get(name) == this) {\n+\t\t\t\t\t\t\t\tString name = (String) iter.next();\n+\t\t\t\t\t\t\t\tif (name.substring(0, name.indexOf('[')).equals(getName())) {\n                                     iter.remove();\n                                 }\n                             }", "timestamp": 1297381823, "metainfo": ""}