{"sha": "b68202aa29dcb89eba268d4b156fe6b12facbd00", "log": "Update release information, the next will be 4.1 rather than 4.0.1.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/IteratorUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/IteratorUtils.java\n      * @param max  the maximum number of elements returned by this iterator\n      * @return a new bounded iterator\n      * @throws IllegalArgumentException if the iterator is null or either offset or max is negative\n-     * @since 4.0.1\n+     * @since 4.1\n      */\n     public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max) {\n         return BoundedIterator.boundedIterator(iterator, max);\n      * @param max  the maximum number of elements returned by this iterator\n      * @return a new bounded iterator\n      * @throws IllegalArgumentException if the iterator is null or either offset or max is negative\n-     * @since 4.0.1\n+     * @since 4.1\n      */\n     public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator,\n                                                          long offset, long max) {\n--- a/src/main/java/org/apache/commons/collections4/TransformerUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/TransformerUtils.java\n      * @return the transformer\n      * @throws IllegalArgumentException if either the predicate or transformer is null\n      * @see org.apache.commons.collections4.functors.IfTransformer\n-     * @since 4.0.1\n+     * @since 4.1\n      */\n     public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate,\n                                                       final Transformer<? super T, ? extends T> trueTransformer) {\n      * @return the transformer\n      * @throws IllegalArgumentException if either the predicate or transformer is null\n      * @see org.apache.commons.collections4.functors.IfTransformer\n-     * @since 4.0.1\n+     * @since 4.1\n      */\n     public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate,\n                                                          final Transformer<? super I, ? extends O> trueTransformer,\n      * @return the transformer\n      * @throws IllegalArgumentException if either the predicate or transformer is null\n      * @see org.apache.commons.collections4.functors.SwitchTransformer\n-     * @deprecated as of 4.0.1, use {@link #ifTransformer(Predicate, Transformer, Transformer))\n+     * @deprecated as of 4.1, use {@link #ifTransformer(Predicate, Transformer, Transformer))\n      */\n     @SuppressWarnings(\"unchecked\")\n     @Deprecated\n--- a/src/main/java/org/apache/commons/collections4/functors/IfTransformer.java\n+++ b/src/main/java/org/apache/commons/collections4/functors/IfTransformer.java\n  * @param <I> The input type for the transformer\n  * @param <O> The output type for the transformer\n  *\n- * @since 4.0.1\n+ * @since 4.1\n  * @version $Id$\n  */\n public class IfTransformer<I, O> implements Transformer<I, O>, Serializable {\n--- a/src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java\n+++ b/src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java\n  * iterator is immediately advanced to this position, skipping all elements\n  * before that position.\n  *\n- * @since 4.0.1\n+ * @since 4.1\n  * @version $Id$\n  */\n public class BoundedIterator<E> implements Iterator<E> {", "timestamp": 1393881308, "metainfo": ""}