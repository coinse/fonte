{"sha": "a164d04789b150a9dfd9a3689d1173944029135a", "log": "Add exists() to test if any one element in the collection matches the predicate from Peter KoBek   ", "commit": "\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.27 2003/01/25 11:29:37 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/CollectionUtils.java,v 1.28 2003/01/25 11:40:26 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * A set of {@link Collection} related utility methods.\n  *\n  * @since Commons Collections 1.0\n- * @version $Revision: 1.27 $ $Date: 2003/01/25 11:29:37 $\n+ * @version $Revision: 1.28 $ $Date: 2003/01/25 11:40:26 $\n  * \n  * @author Rodney Waldhoff\n  * @author Paul Jack\n             }\n         }\n         return count;\n+    }\n+\n+    /** \n+     * Answers true if a predicate is true for at least one element of a collection.\n+     * <p>\n+     * A <code>null</code> collection or predicate returns false.\n+     * \n+     * @param collection the collection to get the input from, may be null\n+     * @param predicate the predicate to use, may be null\n+     * @return true if at least one element of the collection matches the predicate\n+     */\n+    public static boolean exists(Collection collection, Predicate predicate) {\n+        if (collection != null && predicate != null) {\n+            for (Iterator it = collection.iterator(); it.hasNext();) {\n+                if (predicate.evaluate(it.next())) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n     }\n \n     /** \n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n /*\n- * $Id: TestCollectionUtils.java,v 1.11 2003/01/25 11:31:12 scolebourne Exp $\n- * $Revision: 1.11 $\n- * $Date: 2003/01/25 11:31:12 $\n+ * $Id: TestCollectionUtils.java,v 1.12 2003/01/25 11:40:26 scolebourne Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2003/01/25 11:40:26 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Rodney Waldhoff\n- * @version $Revision: 1.11 $ $Date: 2003/01/25 11:31:12 $\n+ * @version $Revision: 1.12 $ $Date: 2003/01/25 11:40:26 $\n  */\n public class TestCollectionUtils extends TestCase {\n     public TestCollectionUtils(String testName) {\n         assertEquals(0, CollectionUtils.countMatches(null, null));\n     }\n \n+    public void testExists() {\n+        List list = new ArrayList();\n+        assertEquals(false, CollectionUtils.exists(null, null));\n+        assertEquals(false, CollectionUtils.exists(list, null));\n+        assertEquals(false, CollectionUtils.exists(null, EQUALS_TWO));\n+        assertEquals(false, CollectionUtils.exists(list, EQUALS_TWO));\n+        list.add(\"One\");\n+        list.add(\"Three\");\n+        list.add(\"Four\");\n+        assertEquals(false, CollectionUtils.exists(list, EQUALS_TWO));\n+\n+        list.add(\"Two\");\n+        assertEquals(true, CollectionUtils.exists(list, EQUALS_TWO));\n+    }\n+    \n     public void testSelect() {\n         List list = new ArrayList();\n         list.add(\"One\");", "timestamp": 1043494826, "metainfo": ""}