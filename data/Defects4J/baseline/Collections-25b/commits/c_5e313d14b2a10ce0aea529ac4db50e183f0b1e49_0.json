{"sha": "5e313d14b2a10ce0aea529ac4db50e183f0b1e49", "log": "COLLECTIONS-228 - MultiValueMap put and putAll do not return the correct values  ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/MultiValueMap.java\n+++ b/src/java/org/apache/commons/collections/map/MultiValueMap.java\n         boolean result = false;\n         Collection coll = getCollection(key);\n         if (coll == null) {\n-            coll = createCollection(1);\n-            result = coll.add(value);\n+            coll = createCollection(1);  // might produce a non-empty collection\n+            coll.add(value);\n             if (coll.size() > 0) {\n                 // only add if non-zero size to maintain class state\n                 getMap().put(key, coll);\n-                result = false;\n+                result = true;  // map definitely changed\n             }\n         } else {\n             result = coll.add(value);\n         if (values == null || values.size() == 0) {\n             return false;\n         }\n+        boolean result = false;\n         Collection coll = getCollection(key);\n         if (coll == null) {\n-            coll = createCollection(values.size());\n-            boolean result = coll.addAll(values);\n+            coll = createCollection(values.size());  // might produce a non-empty collection\n+            coll.addAll(values);\n             if (coll.size() > 0) {\n                 // only add if non-zero size to maintain class state\n                 getMap().put(key, coll);\n-                result = false;\n-            }\n-            return result;\n+                result = true;  // map definitely changed\n+            }\n         } else {\n-            return coll.addAll(values);\n-        }\n+            result = coll.addAll(values);\n+        }\n+        return result;\n     }\n \n     /**\n--- a/src/test/org/apache/commons/collections/map/TestMultiValueMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestMultiValueMap.java\n \n import org.apache.commons.collections.IteratorUtils;\n import org.apache.commons.collections.MultiMap;\n-import org.apache.commons.collections.TestMultiHashMap;\n \n /**\n  * TestMultiValueMap.\n     }\n \n     public static Test suite() {\n-        return new TestSuite(TestMultiHashMap.class);\n+        return new TestSuite(TestMultiValueMap.class);\n     }\n \n     public static void main(String args[]) {\n-        String[] testCaseName = { TestMultiHashMap.class.getName()};\n+        String[] testCaseName = { TestMultiValueMap.class.getName()};\n         junit.textui.TestRunner.main(testCaseName);\n     }\n \n         map.put(\"B\", \"BC\");\n         assertEquals(2, map.size());\n         map.remove(\"A\");\n-        assertEquals(2, map.size());\n+        assertEquals(1, map.size());\n         map.remove(\"B\", \"BC\");\n-        assertEquals(2, map.size());\n+        assertEquals(1, map.size());\n     }\n     \n     public void testSize_Key() {\n         assertEquals(false, map.containsValue(\"A\", \"AB\"));\n     }\n \n+    public void testPutWithList() {\n+        MultiValueMap test = MultiValueMap.decorate(new HashMap(), ArrayList.class);\n+        assertEquals(\"a\", test.put(\"A\", \"a\"));\n+        assertEquals(\"b\", test.put(\"A\", \"b\"));\n+        assertEquals(1, test.size());\n+        assertEquals(2, test.size(\"A\"));\n+        assertEquals(2, test.totalSize());\n+    }\n+\n+    public void testPutWithSet() {\n+        MultiValueMap test = MultiValueMap.decorate(new HashMap(), HashSet.class);\n+        assertEquals(\"a\", test.put(\"A\", \"a\"));\n+        assertEquals(\"b\", test.put(\"A\", \"b\"));\n+        assertEquals(null, test.put(\"A\", \"a\"));\n+        assertEquals(1, test.size());\n+        assertEquals(2, test.size(\"A\"));\n+        assertEquals(2, test.totalSize());\n+    }\n+\n     public void testPutAll_Map1() {\n         MultiMap original = new MultiValueMap();\n         original.put(\"key\", \"object1\");", "timestamp": 1162038421, "metainfo": ""}