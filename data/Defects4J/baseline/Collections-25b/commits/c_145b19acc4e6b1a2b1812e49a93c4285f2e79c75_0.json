{"sha": "145b19acc4e6b1a2b1812e49a93c4285f2e79c75", "log": "Add PredicateDecorator to provide consistent access to predicates based on code from Brian Lloyd-Newberry   ", "commit": "\n--- a/src/java/org/apache/commons/collections/functors/AllPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AllPredicate.java\n  * Predicate implementation that returns true if all the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class AllPredicate implements Predicate, Serializable {\n+public final class AllPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -3094696765038308799L;\n--- a/src/java/org/apache/commons/collections/functors/AndPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AndPredicate.java\n  * Predicate implementation that returns true if both the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class AndPredicate implements Predicate, Serializable {\n+public final class AndPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = 4189014213763186912L;\n     }\n \n     /**\n-     * Gets the first predicate.\n+     * Gets the two predicates being decorated as an array.\n      * \n-     * @return the predicate\n+     * @return the predicates\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate1() {\n-        return iPredicate1;\n-    }\n-\n-    /**\n-     * Gets the second predicate.\n-     * \n-     * @return the predicate\n-     * @since Commons Collections 3.1\n-     */\n-    public Predicate getPredicate2() {\n-        return iPredicate2;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate1, iPredicate2};\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/functors/AnyPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AnyPredicate.java\n  * Predicate implementation that returns true if any of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class AnyPredicate implements Predicate, Serializable {\n+public final class AnyPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = 7429999530934647542L;\n--- a/src/java/org/apache/commons/collections/functors/NonePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NonePredicate.java\n  * Predicate implementation that returns true if none of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class NonePredicate implements Predicate, Serializable {\n+public final class NonePredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = 2007613066565892961L;\n--- a/src/java/org/apache/commons/collections/functors/NotPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NotPredicate.java\n  * Predicate implementation that returns the opposite of the decorated predicate.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class NotPredicate implements Predicate, Serializable {\n+public final class NotPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -2654603322338049674L;\n     }\n \n     /**\n-     * Gets the predicate.\n+     * Gets the predicate being decorated.\n      * \n-     * @return the predicate\n+     * @return the predicate as the only element in an array\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate() {\n-        return iPredicate;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate};\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n  * Predicate implementation that throws an exception if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.7 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class NullIsExceptionPredicate implements Predicate, Serializable {\n+public final class NullIsExceptionPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = 3243449850504576071L;\n     }\n \n     /**\n-     * Gets the predicate.\n+     * Gets the predicate being decorated.\n      * \n-     * @return the predicate\n+     * @return the predicate as the only element in an array\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate() {\n-        return iPredicate;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate};\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n  * Predicate implementation that returns false if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class NullIsFalsePredicate implements Predicate, Serializable {\n+public final class NullIsFalsePredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -2997501534564735525L;\n     }\n \n     /**\n-     * Gets the predicate.\n+     * Gets the predicate being decorated.\n      * \n-     * @return the predicate\n+     * @return the predicate as the only element in an array\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate() {\n-        return iPredicate;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate};\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n  * Predicate implementation that returns true if the input is null.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class NullIsTruePredicate implements Predicate, Serializable {\n+public final class NullIsTruePredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -7625133768987126273L;\n     }\n \n     /**\n-     * Gets the predicate.\n+     * Gets the predicate being decorated.\n      * \n-     * @return the predicate\n+     * @return the predicate as the only element in an array\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate() {\n-        return iPredicate;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate};\n     }\n \n }\n--- a/src/java/org/apache/commons/collections/functors/OnePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/OnePredicate.java\n  * Predicate implementation that returns true if only one of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class OnePredicate implements Predicate, Serializable {\n+public final class OnePredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -8125389089924745785L;\n--- a/src/java/org/apache/commons/collections/functors/OrPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/OrPredicate.java\n  * Predicate implementation that returns true if either of the predicates return true.\n  * \n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.6 $ $Date: 2004/05/31 16:43:17 $\n  *\n  * @author Stephen Colebourne\n  */\n-public final class OrPredicate implements Predicate, Serializable {\n+public final class OrPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -8791518325735182855L;\n     }\n \n     /**\n-     * Gets the first predicate.\n+     * Gets the two predicates being decorated as an array.\n      * \n-     * @return the predicate\n+     * @return the predicates\n      * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate1() {\n-        return iPredicate1;\n-    }\n-\n-    /**\n-     * Gets the second predicate.\n-     * @return the predicate\n-     * @since Commons Collections 3.1\n-     */\n-    public Predicate getPredicate2() {\n-        return iPredicate2;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate1, iPredicate2};\n     }\n \n }\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/functors/PredicateDecorator.java\n+/*\n+ *  Copyright 2004 The Apache Software Foundation\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.commons.collections.functors;\n+\n+import org.apache.commons.collections.Predicate;\n+\n+/**\n+ * Defines a predicate that decorates one or more other predicates.\n+ * <p>\n+ * This interface enables tools to access the decorated predicates.\n+ * \n+ * @since Commons Collections 3.1\n+ * @version $Revision: 1.1 $ $Date: 2004/05/31 16:43:17 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public interface PredicateDecorator extends Predicate {\n+\n+    /**\n+     * Gets the predicates being decorated as an array.\n+     * <p>\n+     * The array may be the internal data structure of the predicate and thus\n+     * should not be altered.\n+     * \n+     * @return the predicates being decorated\n+     */\n+    Predicate[] getPredicates();\n+\n+}\n--- a/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n  * another <code>Predicate</code>.\n  * \n  * @since Commons Collections 3.1\n- * @version $Revision: 1.3 $ $Date: 2004/05/16 11:16:01 $\n+ * @version $Revision: 1.4 $ $Date: 2004/05/31 16:43:17 $\n  * @author Alban Peignier\n  * @author Stephen Colebourne\n  */\n-public final class TransformedPredicate implements Predicate, Serializable {\n+public final class TransformedPredicate implements Predicate, PredicateDecorator, Serializable {\n \n     /** Serial version UID */\n     static final long serialVersionUID = -5596090919668315834L;\n     }\n \n     /**\n-     * Gets the predicate in use.\n+     * Gets the predicate being decorated.\n      * \n-     * @return the predicate\n+     * @return the predicate as the only element in an array\n+     * @since Commons Collections 3.1\n      */\n-    public Predicate getPredicate() {\n-        return iPredicate;\n+    public Predicate[] getPredicates() {\n+        return new Predicate[] {iPredicate};\n     }\n \n     /**", "timestamp": 1086021797, "metainfo": ""}