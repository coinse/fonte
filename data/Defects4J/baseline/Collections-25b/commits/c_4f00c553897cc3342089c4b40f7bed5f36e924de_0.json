{"sha": "4f00c553897cc3342089c4b40f7bed5f36e924de", "log": "[COLLECTIONS-455] Changed remaining fields in question to scope package private.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java\n+++ b/src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java\n     /**\n      * Normal delegate map.\n      */\n-    protected transient Map<K, V> normalMap;\n+    transient Map<K, V> normalMap;\n \n     /**\n      * Reverse delegate map.\n      */\n-    protected transient Map<V, K> reverseMap;\n+    transient Map<V, K> reverseMap;\n \n     /**\n      * Inverse view of this map.\n      */\n-    protected transient BidiMap<V, K> inverseBidiMap = null;\n+    transient BidiMap<V, K> inverseBidiMap = null;\n \n     /**\n      * View of the keys.\n      */\n-    protected transient Set<K> keySet = null;\n+    transient Set<K> keySet = null;\n \n     /**\n      * View of the values.\n      */\n-    protected transient Collection<V> values = null;\n+    transient Collection<V> values = null;\n \n     /**\n      * View of the entries.\n      */\n-    protected transient Set<Map.Entry<K, V>> entrySet = null;\n+    transient Set<Map.Entry<K, V>> entrySet = null;\n \n     /**\n      * Creates an empty map, initialised by <code>createMap</code>.\n--- a/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java\n+++ b/src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java\n      * hold a value. The value of <code>next</code> is the first item in the\n      * list. The value of of <code>previous</code> is the last item in the list.\n      */\n-    protected transient Node<E> header;\n+    transient Node<E> header;\n \n     /** The size of the list */\n-    protected transient int size;\n+    transient int size;\n \n     /** Modification count for iterators */\n-    protected transient int modCount;\n+    transient int modCount;\n \n     /**\n      * Constructor that does nothing intended for deserialization.\n--- a/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java\n     protected static final Object NULL = new Object();\n \n     /** Load factor, normally 0.75 */\n-    protected transient float loadFactor;\n+    transient float loadFactor;\n     /** The size of the map */\n-    protected transient int size;\n+    transient int size;\n     /** Map entries */\n-    protected transient HashEntry<K, V>[] data;\n+    transient HashEntry<K, V>[] data;\n     /** Size at which to rehash */\n-    protected transient int threshold;\n+    transient int threshold;\n     /** Modification count for iterators */\n-    protected transient int modCount;\n+    transient int modCount;\n     /** Entry set */\n-    protected transient EntrySet<K, V> entrySet;\n+    transient EntrySet<K, V> entrySet;\n     /** Key set */\n-    protected transient KeySet<K> keySet;\n+    transient KeySet<K> keySet;\n     /** Values */\n-    protected transient Values<V> values;\n+    transient Values<V> values;\n \n     /**\n      * Constructor only used in deserialization, do not use otherwise.\n--- a/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java\n+++ b/src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java\n public abstract class AbstractLinkedMap<K, V> extends AbstractHashedMap<K, V> implements OrderedMap<K, V> {\n \n     /** Header in the linked list */\n-    protected transient LinkEntry<K, V> header;\n+    transient LinkEntry<K, V> header;\n \n     /**\n      * Constructor only used in deserialization, do not use otherwise.\n--- a/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java\n public abstract class AbstractMapDecorator<K, V> extends AbstractIterableMap<K, V> {\n \n     /** The map to decorate */\n-    protected transient Map<K, V> map;\n+    transient Map<K, V> map;\n \n     /**\n      * Constructor only used in deserialization, do not use otherwise.\n--- a/src/main/java/org/apache/commons/collections4/map/EntrySetToMapIteratorAdapter.java\n+++ b/src/main/java/org/apache/commons/collections4/map/EntrySetToMapIteratorAdapter.java\n public class EntrySetToMapIteratorAdapter<K, V> implements MapIterator<K, V>, ResettableIterator<K> {\n \n     /** The adapted Map entry Set. */\n-    protected Set<Map.Entry<K, V>> entrySet;\n+    Set<Map.Entry<K, V>> entrySet;\n \n     /** The resettable iterator in use. */\n-    protected transient Iterator<Map.Entry<K, V>> iterator;\n+    transient Iterator<Map.Entry<K, V>> iterator;\n \n     /** The currently positioned Map entry. */\n-    protected transient Map.Entry<K, V> entry;\n+    transient Map.Entry<K, V> entry;\n \n     /**\n      * Create a new EntrySetToMapIteratorAdapter.\n--- a/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java\n+++ b/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java\n public class AbstractIterableGetMapDecorator<K, V> implements IterableGet<K, V> {\n \n     /** The map to decorate */\n-    protected transient Map<K, V> map;\n+    transient Map<K, V> map;\n \n     /**\n      * Create a new AbstractSplitMapDecorator.", "timestamp": 1371588869, "metainfo": ""}