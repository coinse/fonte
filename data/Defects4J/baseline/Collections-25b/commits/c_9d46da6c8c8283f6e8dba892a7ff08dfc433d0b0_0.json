{"sha": "9d46da6c8c8283f6e8dba892a7ff08dfc433d0b0", "log": "Make LoopingListIterator implement ResettableListIterator (a binary incompatible change, but on an unreleased class)  ", "commit": "\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n      * @throws NullPointerException if the list is null\n      * @since Commons Collections 3.2\n      */\n-    public static ResettableIterator loopingListIterator(List list) {\n+    public static ResettableListIterator loopingListIterator(List list) {\n         if (list == null) {\n             throw new NullPointerException(\"List must not be null\");\n         }\n--- a/src/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/LoopingListIterator.java\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n \n-import org.apache.commons.collections.ResettableIterator;\n+import org.apache.commons.collections.ResettableListIterator;\n \n /**\n  * A ListIterator that restarts when it reaches the end or when it\n  *\n  * @author Eric Crampton <ccesc@eonomine.com>\n  */\n-public class LoopingListIterator implements ResettableIterator {\n+public class LoopingListIterator implements ResettableListIterator {\n \n     /** The list to base the iterator on */\n     private List list;", "timestamp": 1147474084, "metainfo": ""}