{"sha": "a1e36e8823215b10288fa4243e52de917c8ae9bd", "log": "Fix various javadoc link warnings bug 23680, from Eric Johnson   ", "commit": "\n--- a/src/java/org/apache/commons/collections/observed/ObservableBag.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableBag.java,v 1.2 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableBag.java,v 1.3 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * NOT observed. This is because the set should be unmodifiable.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable bag.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param bag  the bag to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param bag  the bag to decorate, must not be null\n      * @param listener  bag listener, may be null\n--- a/src/java/org/apache/commons/collections/observed/ObservableBuffer.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableBuffer.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableBuffer.java,v 1.2 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableBuffer.java,v 1.3 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable buffer.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param buffer  the buffer to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param buffer  the buffer to decorate, must not be null\n      * @param listener  buffer listener, may be null\n--- a/src/java/org/apache/commons/collections/observed/ObservableList.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableList.java,v 1.2 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableList.java,v 1.3 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * base <code>List</code>.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable list.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param list  the list to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param list  the list to decorate, must not be null\n      * @param listener  list listener, may be null\n--- a/src/java/org/apache/commons/collections/observed/ObservableSet.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSet.java,v 1.2 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSet.java,v 1.3 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * {@link ModificationHandler}.\n  * The handler manages the event, notifying listeners and optionally vetoing changes.\n  * The default handler is\n- * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler StandardModificationHandler}.\n+ * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable set.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param set  the set to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param set  the set to decorate, must not be null\n      * @param listener  set listener, may be null\n--- a/src/java/org/apache/commons/collections/observed/ObservableSortedBag.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableSortedBag.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedBag.java,v 1.2 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedBag.java,v 1.3 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.2 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.3 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable bag.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param bag  the bag to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param bag  the bag to decorate, must not be null\n      * @param listener  bag listener, may be null\n--- a/src/java/org/apache/commons/collections/observed/ObservableSortedSet.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableSortedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedSet.java,v 1.3 2003/10/09 20:50:04 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedSet.java,v 1.4 2003/10/13 21:18:56 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.3 $ $Date: 2003/10/09 20:50:04 $\n+ * @version $Revision: 1.4 $ $Date: 2003/10/13 21:18:56 $\n  * \n  * @author Stephen Colebourne\n  */\n     /**\n      * Factory method to create an observable set.\n      * <p>\n-     * A {@link StandardModificationHandler} will be created.\n+     * A {@link org.apache.commons.collections.observed.standard.StandardModificationHandler} will be created.\n      * This can be accessed by {@link #getHandler()} to add listeners.\n      *\n      * @param set  the set to decorate, must not be null\n      * is interpretted. An IllegalArgumentException is thrown if no suitable\n      * handler can be found for this listener.\n      * <p>\n-     * A <code>null</code> listener will create a {@link StandardModificationHandler}.\n+     * A <code>null</code> listener will create a\n+     * {@link org.apache.commons.collections.observed.standard.StandardModificationHandler}.\n      *\n      * @param set  the set to decorate, must not be null\n      * @param listener  set listener, may be null", "timestamp": 1066079936, "metainfo": ""}