{"sha": "1fa2dd8d1246b0590f2a73b4427d66615a85797c", "log": "Javadoc and stylistic changes  ", "commit": "\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n  * @author Berin Loritsch\n  * @author Paul Jack\n  * @author Stephen Colebourne\n+ * @author Andreas Schlosser\n  */\n public class UnboundedFifoBuffer extends AbstractCollection implements Buffer, Serializable {\n+    // invariant: buffer.length > size()\n+    //   ie.buffer always has at least one empty entry\n \n     /** Serialization vesrion */\n     private static final long serialVersionUID = -3482960336579541419L;\n     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n         in.defaultReadObject();\n         int size = in.readInt();\n-        buffer = new Object[size+1];\n+        buffer = new Object[size + 1];\n         for (int i = 0; i < size; i++) {\n             buffer[i] = in.readObject();\n         }\n         }\n \n         if (size() + 1 >= buffer.length) {\n+            // copy contents to a new buffer array\n             Object[] tmp = new Object[((buffer.length - 1) * 2) + 1];\n-\n             int j = 0;\n+            // move head to element zero in the new array\n             for (int i = head; i != tail;) {\n                 tmp[j] = buffer[i];\n                 buffer[i] = null;\n \n                 j++;\n-                i++;\n-                if (i == buffer.length) {\n-                    i = 0;\n-                }\n+                i = increment(i);\n             }\n-\n             buffer = tmp;\n             head = 0;\n             tail = j;\n         }\n \n         buffer[tail] = obj;\n-        tail++;\n-        if (tail >= buffer.length) {\n-            tail = 0;\n-        }\n+        tail = increment(tail);\n         return true;\n     }\n \n         }\n \n         Object element = buffer[head];\n-\n-        if (null != element) {\n+        if (element != null) {\n             buffer[head] = null;\n-\n-            head++;\n-            if (head >= buffer.length) {\n-                head = 0;\n-            }\n-        }\n-\n+            head = increment(head);\n+        }\n         return element;\n     }\n \n \n         };\n     }\n-    \n+\n }", "timestamp": 1121512371, "metainfo": ""}