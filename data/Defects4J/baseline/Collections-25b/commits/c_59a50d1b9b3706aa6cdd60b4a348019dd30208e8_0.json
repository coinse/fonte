{"sha": "59a50d1b9b3706aa6cdd60b4a348019dd30208e8", "log": "List constructors for ComparatorChain no longer perform defensive copies   ", "commit": "\n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.5 2002/03/19 22:25:51 morgand Exp $\n- * $Revision: 1.5 $\n- * $Date: 2002/03/19 22:25:51 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/comparators/ComparatorChain.java,v 1.6 2002/03/25 21:20:53 morgand Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/03/25 21:20:53 $\n  *\n  * ====================================================================\n  *\n  * <p>Calling a method that adds new Comparators or\n  * changes the ascend/descend sort <i>after compare(Object,\n  * Object) has been called</i> will result in an\n- * UnsupportedOperationException.</p>\n+ * UnsupportedOperationException.  However, <i>take care</i>\n+ * to not alter the underlying List of Comparators\n+ * or the BitSet that defines the sort order.</p>\n  * \n  * <p>Instances of ComparatorChain are not synchronized.\n  * The class is not thread-safe at construction time, but\n      * sort order is used; a return value of <i>true</i>\n      * indicates reverse sort order.\n      * \n-     * @param list   List of Comparators.  NOTE: This constructor performs a\n-     *               defensive copy of the list elements into a new\n-     *               List.\n+     * @param list   List of Comparators.  NOTE: This constructor does not perform a\n+     *               defensive copy of the list\n      * @param bits   Sort order for each Comparator.  Extra bits are ignored,\n      *               unless extra Comparators are added by another method.\n      */\n     public ComparatorChain(List list, BitSet bits) {\n-        comparatorChain = new ArrayList();\n-        comparatorChain.addAll(list);\n+        comparatorChain = list;\n         orderingBits = bits;\n     }\n ", "timestamp": 1017091253, "metainfo": ""}