{"sha": "452e51e94915d474e0c90ce3a2d62c17e5dd3911", "log": "generics  ", "commit": "\n--- a/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n      * @throws IllegalArgumentException if collection or transformer is null\n      * @since Commons Collections 3.3\n      */\n-    // TODO: Generics\n-    public static Collection decorateTransform(Collection collection, Transformer transformer) {\n-        TransformedCollection decorated = new TransformedCollection(collection, transformer);\n+    public static <E> Collection<E> decorateTransform(Collection<E> collection, Transformer<? super E, ? extends E> transformer) {\n+        TransformedCollection<E> decorated = new TransformedCollection<E>(collection, transformer);\n         if (transformer != null && collection != null && collection.size() > 0) {\n-            Object[] values = collection.toArray();\n+            @SuppressWarnings(\"unchecked\") // collection is of type E\n+            E[] values = (E[]) collection.toArray();\n             collection.clear();\n             for(int i=0; i<values.length; i++) {\n                 decorated.decorated().add(transformer.transform(values[i]));", "timestamp": 1287452338, "metainfo": ""}