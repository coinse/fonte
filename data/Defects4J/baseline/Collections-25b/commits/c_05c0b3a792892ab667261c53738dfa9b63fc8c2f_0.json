{"sha": "05c0b3a792892ab667261c53738dfa9b63fc8c2f", "log": "fix bug pointed out bu Jonathan Carlson add test that demonstrates   ", "commit": "\n--- a/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.2 2002/08/17 11:28:36 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/08/17 11:28:36 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/IteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/10/31 21:55:23 $\n  *\n  * ====================================================================\n  *\n  * @since 2.1\n  * @author Morgan Delagrange\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: IteratorChain.java,v 1.2 2002/08/17 11:28:36 scolebourne Exp $\n+ * @version $Id: IteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n  */\n public class IteratorChain implements Iterator {\n \n             // set last used iterator here, in case the user calls remove\n             // before calling hasNext() or next() (although they shouldn't)\n             lastUsedIterator = currentIterator;\n-            return;\n         }\n \n         if (currentIteratorIndex == (iteratorChain.size() - 1)) {\n--- a/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java,v 1.2 2002/10/12 22:36:23 scolebourne Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/10/12 22:36:23 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/10/31 21:55:23 $\n  *\n  * ====================================================================\n  *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Morgan Delagrange\n- * @version $Id: TestIteratorChain.java,v 1.2 2002/10/12 22:36:23 scolebourne Exp $\n+ * @version $Id: TestIteratorChain.java,v 1.3 2002/10/31 21:55:23 rwaldhoff Exp $\n  */\n public class TestIteratorChain extends TestIterator {\n \n         assertTrue(\"List is empty\",list3.size() == 0);\n     }\n \n+    public void testFirstIteratorIsEmptyBug() {\n+        List empty = new ArrayList();\n+        List notEmpty = new ArrayList();\n+        notEmpty.add(\"A\");\n+        notEmpty.add(\"B\");\n+        notEmpty.add(\"C\");\n+        IteratorChain chain = new IteratorChain();\n+        chain.addIterator(empty.iterator());\n+        chain.addIterator(notEmpty.iterator());\n+        assertTrue(\"should have next\",chain.hasNext());\n+        assertEquals(\"A\",chain.next());\n+        assertTrue(\"should have next\",chain.hasNext());\n+        assertEquals(\"B\",chain.next());\n+        assertTrue(\"should have next\",chain.hasNext());\n+        assertEquals(\"C\",chain.next());\n+        assertTrue(\"should not have next\",!chain.hasNext());\n+    }\n }\n ", "timestamp": 1036101323, "metainfo": ""}