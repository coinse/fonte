{"sha": "8f1bdde3d76caa4e67f91727d9d1ab4f26873519", "log": "Add UnmodifiableOrderedMapIterator   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java,v 1.1 2003/11/20 21:45:35 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.iterators;\n+\n+import org.apache.commons.collections.Unmodifiable;\n+\n+/** \n+ * Decorates an ordered map iterator such that it cannot be modified.\n+ *\n+ * @since Commons Collections 3.0\n+ * @version $Revision: 1.1 $ $Date: 2003/11/20 21:45:35 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public final class UnmodifiableOrderedMapIterator implements OrderedMapIterator, Unmodifiable {\n+\n+    /** The iterator being decorated */\n+    private OrderedMapIterator iterator;\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Decorates the specified iterator such that it cannot be modified.\n+     *\n+     * @param iterator  the iterator to decoarate\n+     * @throws IllegalArgumentException if the iterator is null\n+     */\n+    public static OrderedMapIterator decorate(OrderedMapIterator iterator) {\n+        if (iterator == null) {\n+            throw new IllegalArgumentException(\"OrderedMapIterator must not be null\");\n+        }\n+        if (iterator instanceof Unmodifiable) {\n+            return iterator;\n+        }\n+        return new UnmodifiableOrderedMapIterator(iterator);\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Constructor.\n+     *\n+     * @param iterator  the iterator to decoarate\n+     */\n+    protected UnmodifiableOrderedMapIterator(OrderedMapIterator iterator) {\n+        super();\n+        this.iterator = iterator;\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public boolean hasNext() {\n+        return iterator.hasNext();\n+    }\n+\n+    public Object next() {\n+        return iterator.next();\n+    }\n+\n+    public boolean hasPrevious() {\n+        return iterator.hasPrevious();\n+    }\n+\n+    public Object previous() {\n+        return iterator.previous();\n+    }\n+\n+    public Object getKey() {\n+        return iterator.getKey();\n+    }\n+\n+    public Object getValue() {\n+        return iterator.getValue();\n+    }\n+\n+    public Object setValue(Object value) {\n+        throw new UnsupportedOperationException(\"setValue() is not supported\");\n+    }\n+\n+    public void remove() {\n+        throw new UnsupportedOperationException(\"remove() is not supported\");\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/collections/iterators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestAll.java,v 1.9 2003/11/02 18:29:59 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestAll.java,v 1.10 2003/11/20 21:45:35 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n /**\n  * Entry point for all iterator tests.\n  * \n- * @version $Revision: 1.9 $ $Date: 2003/11/02 18:29:59 $\n+ * @version $Revision: 1.10 $ $Date: 2003/11/20 21:45:35 $\n  * \n  * @author Rodney Waldhoff\n  */\n         suite.addTest(TestUnmodifiableIterator.suite());\n         suite.addTest(TestUnmodifiableListIterator.suite());\n         suite.addTest(TestUnmodifiableMapIterator.suite());\n+        suite.addTest(TestUnmodifiableOrderedMapIterator.suite());\n         return suite;\n     }\n         \n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java,v 1.1 2003/11/20 21:45:35 scolebourne Exp $\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.collections.iterators;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.TreeMap;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.Unmodifiable;\n+import org.apache.commons.collections.map.ListOrderedMap;\n+import org.apache.commons.collections.map.OrderedMap;\n+\n+/**\n+ * Tests the UnmodifiableOrderedMapIterator.\n+ * \n+ * @version $Revision: 1.1 $ $Date: 2003/11/20 21:45:35 $\n+ * \n+ * @author Stephen Colebourne\n+ */\n+public class TestUnmodifiableOrderedMapIterator extends AbstractTestOrderedMapIterator {\n+\n+    public static Test suite() {\n+        return new TestSuite(TestUnmodifiableOrderedMapIterator.class);\n+    }\n+\n+    public TestUnmodifiableOrderedMapIterator(String testName) {\n+        super(testName);\n+    }\n+\n+    public MapIterator makeEmptyMapIterator() {\n+        return UnmodifiableOrderedMapIterator.decorate(\n+            ListOrderedMap.decorate(new HashMap()).orderedMapIterator());\n+    }\n+\n+    public MapIterator makeFullMapIterator() {\n+        return UnmodifiableOrderedMapIterator.decorate(\n+            ((OrderedMap) getMap()).orderedMapIterator());\n+    }\n+    \n+    public Map getMap() {\n+        Map testMap = ListOrderedMap.decorate(new HashMap());\n+        testMap.put(\"A\", \"a\");\n+        testMap.put(\"B\", \"b\");\n+        testMap.put(\"C\", \"c\");\n+        return testMap;\n+    }\n+\n+    public Map getConfirmedMap() {\n+        Map testMap = new TreeMap();\n+        testMap.put(\"A\", \"a\");\n+        testMap.put(\"B\", \"b\");\n+        testMap.put(\"C\", \"c\");\n+        return testMap;\n+    }\n+\n+    public boolean supportsRemove() {\n+        return false;\n+    }\n+\n+    public boolean supportsSetValue() {\n+        return false;\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testOrderedMapIterator() {\n+        assertTrue(makeEmptyOrderedMapIterator() instanceof Unmodifiable);\n+    }\n+    \n+    public void testDecorateFactory() {\n+        OrderedMapIterator it = makeFullOrderedMapIterator();\n+        assertSame(it, UnmodifiableOrderedMapIterator.decorate(it));\n+        \n+        it = ((OrderedMap) getMap()).orderedMapIterator() ;\n+        assertTrue(it != UnmodifiableOrderedMapIterator.decorate(it));\n+        \n+        try {\n+            UnmodifiableOrderedMapIterator.decorate(null);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+    }\n+\n+}", "timestamp": 1069364735, "metainfo": ""}