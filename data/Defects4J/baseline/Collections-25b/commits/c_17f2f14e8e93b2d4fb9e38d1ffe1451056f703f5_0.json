{"sha": "17f2f14e8e93b2d4fb9e38d1ffe1451056f703f5", "log": "Change to FactoryTransformer to avoid indirect references via TransformerUtils   ", "commit": "\n--- a/src/java/org/apache/commons/collections/map/LazyMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazyMap.java\n \n import org.apache.commons.collections.Factory;\n import org.apache.commons.collections.Transformer;\n-import org.apache.commons.collections.TransformerUtils;\n+import org.apache.commons.collections.functors.FactoryTransformer;\n \n /**\n  * Decorates another <code>Map</code> to create objects in the map on demand.\n  * This class is Serializable from Commons Collections 3.1.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.6 $ $Date: 2004/04/09 10:36:01 $\n+ * @version $Revision: 1.7 $ $Date: 2004/05/07 23:30:33 $\n  * \n  * @author Stephen Colebourne\n  * @author Paul Jack\n         if (factory == null) {\n             throw new IllegalArgumentException(\"Factory must not be null\");\n         }\n-        this.factory = TransformerUtils.asTransformer(factory);\n+        this.factory = FactoryTransformer.getInstance(factory);\n     }\n \n     /**", "timestamp": 1083972633, "metainfo": ""}