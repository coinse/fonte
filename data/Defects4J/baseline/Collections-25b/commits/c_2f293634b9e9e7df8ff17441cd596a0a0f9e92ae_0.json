{"sha": "2f293634b9e9e7df8ff17441cd596a0a0f9e92ae", "log": "changed the makeList() method to makeEmptyList()   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestArrayList.java\n+++ b/src/test/org/apache/commons/collections/TestArrayList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestArrayList.java,v 1.2 2001/07/14 23:33:26 craigmcc Exp $\n- * $Revision: 1.2 $\n- * $Date: 2001/07/14 23:33:26 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestArrayList.java,v 1.3 2002/02/25 23:51:24 morgand Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2002/02/25 23:51:24 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author <a href=\"mailto:jvanzyl@apache.org\">Jason van Zyl</a>\n- * @version $Id: TestArrayList.java,v 1.2 2001/07/14 23:33:26 craigmcc Exp $\n+ * @version $Id: TestArrayList.java,v 1.3 2002/02/25 23:51:24 morgand Exp $\n  */\n public class TestArrayList extends TestList\n {\n \n     public void setUp()\n     {\n-        list = (ArrayList) makeList();\n+        list = (ArrayList) makeEmptyList();\n     }\n \n-    public List makeList()\n+    public List makeEmptyList()\n     {\n         ArrayList al = new ArrayList();\n         return (al);\n--- a/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.3 2001/07/14 23:33:27 craigmcc Exp $\n- * $Revision: 1.3 $\n- * $Date: 2001/07/14 23:33:27 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestCursorableLinkedList.java,v 1.4 2002/02/25 23:51:24 morgand Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2002/02/25 23:51:24 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Rodney Waldhoff\n- * @version $Id: TestCursorableLinkedList.java,v 1.3 2001/07/14 23:33:27 craigmcc Exp $\n+ * @version $Id: TestCursorableLinkedList.java,v 1.4 2002/02/25 23:51:24 morgand Exp $\n  */\n public class TestCursorableLinkedList extends TestList {\n     public TestCursorableLinkedList(String testName) {\n         list = new CursorableLinkedList();\n     }\n \n-    public List makeList() {\n+    public List makeEmptyList() {\n         return new CursorableLinkedList();\n     }\n \n--- a/src/test/org/apache/commons/collections/TestList.java\n+++ b/src/test/org/apache/commons/collections/TestList.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.5 2001/07/14 23:33:27 craigmcc Exp $\n- * $Revision: 1.5 $\n- * $Date: 2001/07/14 23:33:27 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/Attic/TestList.java,v 1.6 2002/02/25 23:51:24 morgand Exp $\n+ * $Revision: 1.6 $\n+ * $Date: 2002/02/25 23:51:24 $\n  *\n  * ====================================================================\n  *\n  * test case (method) your {@link List} fails.\n  *\n  * @author Rodney Waldhoff\n- * @version $Id: TestList.java,v 1.5 2001/07/14 23:33:27 craigmcc Exp $\n+ * @version $Id: TestList.java,v 1.6 2002/02/25 23:51:24 morgand Exp $\n  */\n public abstract class TestList extends TestCollection {\n     public TestList(String testName) {\n     /**\n      * Return a new, empty {@link List} to used for testing.\n      */\n-    public abstract List makeList();\n+    public abstract List makeEmptyList();\n \n     public Collection makeCollection() {\n-        return makeList();\n+        return makeEmptyList();\n     }\n \n     public void testListAddByIndexBoundsChecking() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n \n         try {\n             list.add(Integer.MIN_VALUE,\"element\");\n     }\n \n     public void testListAddByIndexBoundsChecking2() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         boolean added = tryToAdd(list,\"element\");\n \n         try {\n     }\n \n     public void testListAddByIndex() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         assertEquals(0,list.size());\n         if(tryToAdd(list,0,\"element2\")) {\n             assertEquals(1,list.size());\n     }\n \n     public void testListAdd() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         if(tryToAdd(list,\"1\")) {\n             assertTrue(list.contains(\"1\"));\n             if(tryToAdd(list,\"2\")) {\n     }\n \n     public void testListEqualsSelf() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         assertTrue(list.equals(list));\n         tryToAdd(list,\"elt\");\n         assertTrue(list.equals(list));\n     }\n \n     public void testListEqualsArrayList() {\n-        List list1 = makeList();\n+        List list1 = makeEmptyList();\n         List list2 = new ArrayList();\n         assertTrue(list1.equals(list2));\n         assertEquals(list1.hashCode(),list2.hashCode());\n     }\n \n     public void testListEquals() {\n-        List list1 = makeList();\n-        List list2 = makeList();\n+        List list1 = makeEmptyList();\n+        List list2 = makeEmptyList();\n         assertTrue(list1.equals(list2));\n         if(tryToAdd(list1,\"a\") && tryToAdd(list2,\"a\")) {\n             assertTrue(list1.equals(list2));\n     }\n \n     public void testListGetByIndex() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"a\");\n         tryToAdd(list,\"b\");\n         tryToAdd(list,\"c\");\n     }\n \n     public void testListGetByIndexBoundsChecking() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n \n         try {\n             list.get(Integer.MIN_VALUE);\n     }\n \n     public void testListGetByIndexBoundsChecking2() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         boolean added = tryToAdd(list,\"a\");\n \n         try {\n     }\n \n     public void testListIndexOf() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"a\");\n         tryToAdd(list,\"b\");\n         tryToAdd(list,\"c\");\n     }\n \n     public void testListLastIndexOf1() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"a\");\n         tryToAdd(list,\"b\");\n         tryToAdd(list,\"c\");\n     }\n \n     public void testListLastIndexOf2() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"a\");\n         tryToAdd(list,\"b\");\n         tryToAdd(list,\"c\");\n     }\n \n     public void testListSetByIndexBoundsChecking() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n \n         try {\n             list.set(Integer.MIN_VALUE,\"a\");\n     }\n \n     public void testListSetByIndexBoundsChecking2() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element\");\n         tryToAdd(list,\"element2\");\n \n     }\n \n     public void testListSetByIndex() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");\n     }\n \n     public void testListRemoveByIndex() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");\n     }\n \n     public void testListRemoveByValue() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element1\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");\n     }\n \n     public void testListListIteratorNextPrev() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element1\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");\n     }\n \n     public void testListListIteratorNextIndexPrevIndex() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element1\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");\n     }\n \n     public void testListListIteratorSet() {\n-        List list = makeList();\n+        List list = makeEmptyList();\n         tryToAdd(list,\"element1\");\n         tryToAdd(list,\"element2\");\n         tryToAdd(list,\"element3\");", "timestamp": 1014681084, "metainfo": ""}