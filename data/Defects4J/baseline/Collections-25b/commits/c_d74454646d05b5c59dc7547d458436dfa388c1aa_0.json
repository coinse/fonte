{"sha": "d74454646d05b5c59dc7547d458436dfa388c1aa", "log": "* add IntCollections and test * add additional primitives.decorators.* tests   ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/collections/primitives/IntCollections.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/Attic/IntCollections.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+import org.apache.commons.collections.primitives.decorators.UnmodifiableIntIterator;\n+import org.apache.commons.collections.primitives.decorators.UnmodifiableIntList;\n+import org.apache.commons.collections.primitives.decorators.UnmodifiableIntListIterator;\n+\n+/**\n+ * This class consists exclusively of static methods that operate on or\n+ * return IntCollections.\n+ * <p>\n+ * The methods of this class all throw a NullPointerException is the \n+ * provided collections are null.\n+ * \n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * \n+ * @author Rodney Waldhoff \n+ */\n+public class IntCollections {\n+\n+    /**\n+     * Returns an unmodifiable version of the given non-null IntList.\n+     * @param list the non-null IntList to wrap in an unmodifiable decorator\n+     * @return an unmodifiable version of the given non-null IntList\n+     * @throws NullPointerException if the given IntList is null\n+     * @see org.apache.commons.collections.primitives.decorators.UnmodifiableIntList#wrap\n+     */    \n+    public static final IntList unmodifiableIntList(IntList list) throws NullPointerException {\n+        if(null == list) {\n+            throw new NullPointerException();\n+        }\n+        return UnmodifiableIntList.wrap(list);\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable version of the given non-null IntIterator.\n+     * @param list the non-null IntIterator to wrap in an unmodifiable decorator\n+     * @return an unmodifiable version of the given non-null IntIterator\n+     * @throws NullPointerException if the given IntIterator is null\n+     * @see org.apache.commons.collections.primitives.decorators.UnmodifiableIntIterator#wrap\n+     */    \n+    public static final IntIterator unmodifiableIntIterator(IntIterator iter) {\n+        if(null == iter) {\n+            throw new NullPointerException();\n+        }\n+        return UnmodifiableIntIterator.wrap(iter);\n+    }\n+        \n+    /**\n+     * Returns an unmodifiable version of the given non-null IntListIterator.\n+     * @param list the non-null IntListIterator to wrap in an unmodifiable decorator\n+     * @return an unmodifiable version of the given non-null IntListIterator\n+     * @throws NullPointerException if the given IntListIterator is null\n+     * @see org.apache.commons.collections.primitives.decorators.UnmodifiableIntListIterator#wrap\n+     */    \n+    public static final IntListIterator unmodifiableIntListIterator(IntListIterator iter) {\n+        if(null == iter) {\n+            throw new NullPointerException();\n+        }\n+        return UnmodifiableIntListIterator.wrap(iter);\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable, empty IntList.\n+     * @return an unmodifiable, empty IntList.\n+     * @see #EMPTY_INT_LIST\n+     */    \n+    public static final IntList getEmptyIntList() {\n+        return EMPTY_INT_LIST;\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable, empty IntIterator\n+     * @return an unmodifiable, empty IntIterator.\n+     * @see #EMPTY_INT_ITERATOR\n+     */    \n+    public static final IntIterator getEmptyIntIterator() {\n+        return EMPTY_INT_ITERATOR;\n+    }\n+    \n+    /**\n+     * Returns an unmodifiable, empty IntListIterator\n+     * @return an unmodifiable, empty IntListIterator.\n+     * @see #EMPTY_INT_LIST_ITERATOR\n+     */    \n+    public static final IntListIterator getEmptyIntListIterator() {\n+        return EMPTY_INT_LIST_ITERATOR;\n+    }    \n+\n+    /**\n+     * An unmodifiable, empty IntList\n+     * @see #getEmptyIntList\n+     */    \n+    public static final IntList EMPTY_INT_LIST = unmodifiableIntList(new ArrayIntList(0));\n+\n+    /**\n+     * An unmodifiable, empty IntIterator\n+     * @see #getEmptyIntIterator\n+     */    \n+    public static final IntIterator EMPTY_INT_ITERATOR = unmodifiableIntIterator(EMPTY_INT_LIST.iterator());\n+\n+    /**\n+     * An unmodifiable, empty IntListIterator\n+     * @see #getEmptyIntListIterator\n+     */    \n+    public static final IntListIterator EMPTY_INT_LIST_ITERATOR = unmodifiableIntListIterator(EMPTY_INT_LIST.listIterator());\n+}\n--- a/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntIterator.java\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntIterator.java,v 1.2 2003/05/20 17:05:27 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n /**\n  * \n  * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/20 17:05:27 $\n  * \n  * @author Rodney Waldhoff \n  */\n         return getIterator().next();\n     }\n \n-    public void remove() {\n-        getIterator().remove();\n-    }\n-\n     protected abstract IntIterator getIterator();    \n }\n--- a/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntListIterator.java\n+++ b/src/java/org/apache/commons/collections/primitives/decorators/ProxyIntListIterator.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntListIterator.java,v 1.1 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/primitives/decorators/Attic/ProxyIntListIterator.java,v 1.2 2003/05/20 17:05:28 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n /**\n  * \n  * @since Commons Collections 2.2\n- * @version $Revision: 1.1 $ $Date: 2003/05/20 00:44:11 $\n+ * @version $Revision: 1.2 $ $Date: 2003/05/20 17:05:28 $\n  * \n  * @author Rodney Waldhoff \n  */\n     ProxyIntListIterator() {\n     }\n     \n-    public void add(int element) {\n-        getListIterator().add(element);\n-    }\n-\n     public boolean hasPrevious() {\n         return getListIterator().hasPrevious();\n     }\n         return getListIterator().previousIndex();\n     }\n \n-    public void set(int element) {\n-        getListIterator().set(element);\n-    }\n-\n     protected final IntIterator getIterator() {\n         return getListIterator();    \n     }\n--- a/src/test/org/apache/commons/collections/primitives/TestAll.java\n+++ b/src/test/org/apache/commons/collections/primitives/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestAll.java,v 1.19 2003/05/04 13:06:14 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestAll.java,v 1.20 2003/05/20 17:05:28 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import junit.framework.TestSuite;\n \n /**\n- * @version $Revision: 1.19 $ $Date: 2003/05/04 13:06:14 $\n+ * @version $Revision: 1.20 $ $Date: 2003/05/20 17:05:28 $\n  * @author Rodney Waldhoff\n  */\n public class TestAll extends TestCase {\n         suite.addTest(TestRandomAccessCharList.suite());\n         suite.addTest(TestArrayCharList.suite());\n \n+        suite.addTest(TestIntCollections.suite());\n         suite.addTest(TestAbstractIntCollection.suite());\n         suite.addTest(TestRandomAccessIntList.suite());\n         suite.addTest(TestArrayIntList.suite());\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/TestIntCollections.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/Attic/TestIntCollections.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * @author Rodney Waldhoff\n+ * @deprecated as the tested classes are deprecated also\n+ */\n+public class TestIntCollections extends TestCase {\n+\n+    //------------------------------------------------------------ Conventional\n+\n+    public TestIntCollections(String testName) {\n+        super(testName);\n+    }\n+\n+    public static Test suite() {\n+        return new TestSuite(TestIntCollections.class);\n+    }\n+\n+    //---------------------------------------------------------------- Tests\n+\n+    public void testUnmodifiableIntListNull() {\n+        try {\n+            IntCollections.unmodifiableIntList(null);\n+            fail(\"Expected NullPointerException\");\n+        } catch(NullPointerException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testEmptyIntList() {\n+        assertSame(IntCollections.EMPTY_INT_LIST,IntCollections.getEmptyIntList());\n+        assertTrue(IntCollections.EMPTY_INT_LIST.isEmpty());\n+        try {\n+            IntCollections.EMPTY_INT_LIST.add(1);\n+            fail(\"Expected UnsupportedOperationExcpetion\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testUnmodifiableIntIteratorNull() {\n+        try {\n+            IntCollections.unmodifiableIntIterator(null);\n+            fail(\"Expected NullPointerException\");\n+        } catch(NullPointerException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testEmptyIntIterator() {\n+        assertSame(IntCollections.EMPTY_INT_ITERATOR,IntCollections.getEmptyIntIterator());\n+        assertTrue(! IntCollections.EMPTY_INT_ITERATOR.hasNext());\n+        try {\n+            IntCollections.EMPTY_INT_ITERATOR.remove();\n+            fail(\"Expected UnsupportedOperationExcpetion\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testUnmodifiableIntListIteratorNull() {\n+        try {\n+            IntCollections.unmodifiableIntListIterator(null);\n+            fail(\"Expected NullPointerException\");\n+        } catch(NullPointerException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testEmptyIntListIterator() {\n+        assertSame(IntCollections.EMPTY_INT_LIST_ITERATOR,IntCollections.getEmptyIntListIterator());\n+        assertTrue(! IntCollections.EMPTY_INT_LIST_ITERATOR.hasNext());\n+        assertTrue(! IntCollections.EMPTY_INT_LIST_ITERATOR.hasPrevious());\n+        try {\n+            IntCollections.EMPTY_INT_LIST_ITERATOR.add(1);\n+            fail(\"Expected UnsupportedOperationExcpetion\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+}\n+\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/BaseUnmodifiableIntIteratorTest.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/BaseUnmodifiableIntIteratorTest.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.commons.collections.primitives.ArrayIntList;\n+import org.apache.commons.collections.primitives.IntIterator;\n+import org.apache.commons.collections.primitives.IntList;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * @author Rodney Waldhoff\n+ */\n+public abstract class BaseUnmodifiableIntIteratorTest extends TestCase {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public BaseUnmodifiableIntIteratorTest(String testName) {\n+        super(testName);\n+    }\n+    \n+\n+    // framework\n+    // ------------------------------------------------------------------------\n+    protected abstract IntIterator makeUnmodifiableIntIterator();\n+\n+    protected IntIterator makeIntIterator() {\n+        IntList list = new ArrayIntList();\n+        for(int i=0;i<10;i++) {\n+            list.add(i);\n+        }\n+        return list.iterator();\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+\n+    public final void testIntIteratorNotModifiable() {\n+        IntIterator iter = makeUnmodifiableIntIterator();\n+        assertTrue(iter.hasNext());\n+        iter.next();\n+        try {\n+            iter.remove();\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    public final void testIterateIntIterator() {        \n+        IntIterator iter = makeUnmodifiableIntIterator();\n+        for(IntIterator expected = makeIntIterator(); expected.hasNext(); ) {\n+            assertTrue(iter.hasNext());\n+            assertEquals(expected.next(),iter.next());\n+        }\n+        assertTrue(! iter.hasNext() );\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/BaseUnmodifiableIntListIteratorTest.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/BaseUnmodifiableIntListIteratorTest.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import org.apache.commons.collections.primitives.ArrayIntList;\n+import org.apache.commons.collections.primitives.IntIterator;\n+import org.apache.commons.collections.primitives.IntList;\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * @author Rodney Waldhoff\n+ */\n+public abstract class BaseUnmodifiableIntListIteratorTest extends BaseUnmodifiableIntIteratorTest {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public BaseUnmodifiableIntListIteratorTest(String testName) {\n+        super(testName);\n+    }\n+    \n+\n+    // framework\n+    // ------------------------------------------------------------------------\n+\n+    protected abstract IntListIterator makeUnmodifiableIntListIterator();\n+\n+    protected IntIterator makeUnmodifiableIntIterator() {\n+        return makeUnmodifiableIntListIterator();\n+    }\n+\n+    protected IntIterator makeIntIterator() {\n+        return makeIntListIterator();\n+    }\n+    \n+    protected IntListIterator makeIntListIterator() {\n+        IntList list = new ArrayIntList();\n+        for(int i=0;i<10;i++) {\n+            list.add(i);\n+        }\n+        return list.listIterator();\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+\n+    public final void testIntListIteratorNotModifiable() {\n+        IntListIterator iter = makeUnmodifiableIntListIterator();\n+        assertTrue(iter.hasNext());\n+        iter.next();\n+        try {\n+            iter.remove();\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        try {\n+            iter.add(1);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+        try {\n+            iter.set(3);\n+            fail(\"Expected UnsupportedOperationException\");\n+        } catch(UnsupportedOperationException e) {\n+            // expected\n+        }\n+    }\n+\n+    public final void testIterateIntListIterator() {        \n+        IntListIterator iter = makeUnmodifiableIntListIterator();\n+        IntListIterator expected = makeIntListIterator();\n+        \n+        assertTrue(! iter.hasPrevious());\n+        \n+        while( expected.hasNext() ) {\n+            assertTrue(iter.hasNext());\n+            assertEquals(expected.nextIndex(),iter.nextIndex());\n+            assertEquals(expected.previousIndex(),iter.previousIndex());\n+            assertEquals(expected.next(),iter.next());\n+            assertTrue(iter.hasPrevious());\n+            assertEquals(expected.nextIndex(),iter.nextIndex());\n+            assertEquals(expected.previousIndex(),iter.previousIndex());\n+        }\n+\n+        assertTrue(! iter.hasNext() );\n+\n+        while( expected.hasPrevious() ) {\n+            assertTrue(iter.hasPrevious());\n+            assertEquals(expected.nextIndex(),iter.nextIndex());\n+            assertEquals(expected.previousIndex(),iter.previousIndex());\n+            assertEquals(expected.previous(),iter.previous());\n+            assertTrue(iter.hasNext());\n+            assertEquals(expected.nextIndex(),iter.nextIndex());\n+            assertEquals(expected.previousIndex(),iter.previousIndex());\n+        }\n+        assertTrue(! iter.hasPrevious() );\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/collections/primitives/decorators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/TestAll.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestAll.java,v 1.3 2003/05/20 00:44:11 rwaldhoff Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestAll.java,v 1.4 2003/05/20 17:05:28 rwaldhoff Exp $\n  * ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n import junit.framework.TestSuite;\n \n /**\n- * @version $Revision: 1.3 $ $Date: 2003/05/20 00:44:11 $\n+ * @version $Revision: 1.4 $ $Date: 2003/05/20 17:05:28 $\n  * @author Rodney Waldhoff\n  */\n public class TestAll extends TestCase {\n         suite.addTest(TestBaseProxyIntCollection.suite());\n         suite.addTest(TestBaseProxyIntList.suite());\n         suite.addTest(TestUnmodifiableIntList.suite());\n+        suite.addTest(TestUnmodifiableIntIterator.suite());\n+        suite.addTest(TestUnmodifiableIntListIterator.suite());\n \n         return suite;\n     }\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/TestUnmodifiableIntIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestUnmodifiableIntIterator.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.primitives.IntIterator;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * @author Rodney Waldhoff\n+ */\n+public class TestUnmodifiableIntIterator extends BaseUnmodifiableIntIteratorTest {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public TestUnmodifiableIntIterator(String testName) {\n+        super(testName);\n+    }\n+    \n+\n+    public static Test suite() {\n+        return new TestSuite(TestUnmodifiableIntIterator.class);\n+    }\n+\n+    // framework\n+    // ------------------------------------------------------------------------\n+\n+    protected IntIterator makeUnmodifiableIntIterator() {\n+        return UnmodifiableIntIterator.wrap(makeIntIterator());\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+\n+    public void testWrapNotNull() {\n+        assertNotNull(UnmodifiableIntIterator.wrap(makeIntIterator()));\n+    }\n+\n+    public void testWrapNull() {\n+        assertNull(UnmodifiableIntIterator.wrap(null));\n+    }\n+\n+    public void testWrapUnmodifiableIntIterator() {\n+        IntIterator iter = makeUnmodifiableIntIterator();\n+        assertSame(iter,UnmodifiableIntIterator.wrap(iter));\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/collections/primitives/decorators/TestUnmodifiableIntListIterator.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/primitives/decorators/Attic/TestUnmodifiableIntListIterator.java,v 1.1 2003/05/20 17:05:28 rwaldhoff Exp $\n+ * ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+\n+package org.apache.commons.collections.primitives.decorators;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.collections.primitives.IntListIterator;\n+\n+/**\n+ * @version $Revision: 1.1 $ $Date: 2003/05/20 17:05:28 $\n+ * @author Rodney Waldhoff\n+ */\n+public class TestUnmodifiableIntListIterator extends BaseUnmodifiableIntListIteratorTest {\n+\n+    // conventional\n+    // ------------------------------------------------------------------------\n+\n+    public TestUnmodifiableIntListIterator(String testName) {\n+        super(testName);\n+    }\n+    \n+\n+    public static Test suite() {\n+        return new TestSuite(TestUnmodifiableIntListIterator.class);\n+    }\n+\n+    // framework\n+    // ------------------------------------------------------------------------\n+\n+    protected IntListIterator makeUnmodifiableIntListIterator() {\n+        return UnmodifiableIntListIterator.wrap(makeIntListIterator());\n+    }\n+\n+    // tests\n+    // ------------------------------------------------------------------------\n+\n+    public void testWrapNotNull() {\n+        assertNotNull(UnmodifiableIntListIterator.wrap(makeIntListIterator()));\n+    }\n+\n+    public void testWrapNull() {\n+        assertNull(UnmodifiableIntListIterator.wrap(null));\n+    }\n+\n+    public void testWrapUnmodifiableIntListIterator() {\n+        IntListIterator iter = makeUnmodifiableIntListIterator();\n+        assertSame(iter,UnmodifiableIntListIterator.wrap(iter));\n+    }\n+\n+}", "timestamp": 1053450328, "metainfo": ""}