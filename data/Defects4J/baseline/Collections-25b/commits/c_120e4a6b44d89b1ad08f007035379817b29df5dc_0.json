{"sha": "120e4a6b44d89b1ad08f007035379817b29df5dc", "log": "Don't access static methods via instance variable from Chris Tilden   ", "commit": "\n--- a/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n  * UnsupportedOperationException on attempts to call that method.\n  *\n  * @since Commons Collections 3.0 (previously DoubleOrderedMap v2.0)\n- * @version $Revision: 1.14 $ $Date: 2004/05/26 21:58:02 $\n+ * @version $Revision: 1.15 $ $Date: 2004/11/12 00:02:58 $\n  * \n  * @author Marc Johnson\n  * @author Stephen Colebourne\n             expectedModifications++;\n             lastReturnedNode = null;\n             if (nextNode == null) {\n-                previousNode = main.greatestNode(main.rootNode[orderType], orderType);\n+                previousNode = TreeBidiMap.greatestNode(main.rootNode[orderType], orderType);\n             } else {\n                 previousNode = main.nextSmaller(nextNode, orderType);\n             }\n          */\n         EntryView(final TreeBidiMap main, final int orderType, final int dataType) {\n             super(main, orderType, dataType);\n-            this.oppositeType = main.oppositeIndex(orderType);\n+            this.oppositeType = TreeBidiMap.oppositeIndex(orderType);\n         }\n         \n         public boolean contains(Object obj) {\n             if (main.nodeCount == 0) {\n                 throw new NoSuchElementException(\"Map is empty\");\n             }\n-            return main.leastNode(main.rootNode[VALUE], VALUE).getValue();\n+            return TreeBidiMap.leastNode(main.rootNode[VALUE], VALUE).getValue();\n         }\n \n         public Object lastKey() {\n             if (main.nodeCount == 0) {\n                 throw new NoSuchElementException(\"Map is empty\");\n             }\n-            return main.greatestNode(main.rootNode[VALUE], VALUE).getValue();\n+            return TreeBidiMap.greatestNode(main.rootNode[VALUE], VALUE).getValue();\n         }\n     \n         public Object nextKey(Object key) {\n--- a/src/test/org/apache/commons/collections/buffer/TestBlockingBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBlockingBuffer.java\n  * implementation.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.5 $\n+ * @version $Revision: 1.6 $\n  * \n  * @author Janek Bogucki\n  * @author Phil Steitz\n \n             try {\n                 // wait for other thread to block on get() or remove()\n-                Thread.currentThread().sleep(100);\n+                Thread.sleep(100);\n             }\n             catch (InterruptedException e) {}\n \n \n             try {\n                 // wait for other thread to block on get() or remove()\n-                Thread.currentThread().sleep(100);\n+                Thread.sleep(100);\n             }\n             catch (InterruptedException e) {}\n \n \n     private void delay(){\n         try {\n-            Thread.currentThread().sleep(100);\n+            Thread.sleep(100);\n         } catch (InterruptedException e) {}\n     }\n ", "timestamp": 1100217823, "metainfo": ""}