{"sha": "ed205c04fc8f9c95bc498d51e6fec3a6a052ca11", "log": "Replacing '^ \\* $' with '^ \\*$' - to help with merging to from the jdk 15 branch  ", "commit": "\n--- a/src/java/org/apache/commons/collections/ArrayStack.java\n+++ b/src/java/org/apache/commons/collections/ArrayStack.java\n  * @see java.util.Stack\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Craig R. McClanahan\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/Bag.java\n+++ b/src/java/org/apache/commons/collections/Bag.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/BagUtils.java\n+++ b/src/java/org/apache/commons/collections/BagUtils.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  * @author Andrew Freeman\n--- a/src/java/org/apache/commons/collections/BeanMap.java\n+++ b/src/java/org/apache/commons/collections/BeanMap.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  * @author Dimiter Dimitrov\n- * \n+ *\n  * @deprecated Identical class now available in commons-beanutils (full jar version).\n  * This version is due to be removed in collections v4.0.\n  */\n--- a/src/java/org/apache/commons/collections/BidiMap.java\n+++ b/src/java/org/apache/commons/collections/BidiMap.java\n  * keys and values, meaning that multiple keys cannot map to the same value. \n  * This is required so that \"inverting\" the map results in a map without \n  * duplicate keys. See the {@link #put} method description for more information.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/BinaryHeap.java\n+++ b/src/java/org/apache/commons/collections/BinaryHeap.java\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Peter Donald\n  * @author Ram Chidambaram\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/BoundedCollection.java\n+++ b/src/java/org/apache/commons/collections/BoundedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Herve Quiroz\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/BoundedFifoBuffer.java\n  * @deprecated Moved to buffer subpackage. Due to be removed in v4.0.\n  * @since 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Avalon\n  * @author Berin Loritsch\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/BoundedMap.java\n+++ b/src/java/org/apache/commons/collections/BoundedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public interface BoundedMap extends Map {\n--- a/src/java/org/apache/commons/collections/Buffer.java\n+++ b/src/java/org/apache/commons/collections/Buffer.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Avalon\n  * @author Berin Loritsch\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/BufferOverflowException.java\n+++ b/src/java/org/apache/commons/collections/BufferOverflowException.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Avalon\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n  * @author <a href=\"mailto:jefft@apache.org\">Jeff Turner</a>\n--- a/src/java/org/apache/commons/collections/BufferUnderflowException.java\n+++ b/src/java/org/apache/commons/collections/BufferUnderflowException.java\n  * The BufferUnderflowException is used when the buffer is already empty.\n  * <p>\n  * NOTE: From version 3.0, this exception extends NoSuchElementException.\n- * \n+ *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/ClosureUtils.java\n+++ b/src/java/org/apache/commons/collections/ClosureUtils.java\n  * <li>Exception - always throws an exception\n  * </ul>\n  * All the supplied closures are Serializable.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/CollectionUtils.java\n+++ b/src/java/org/apache/commons/collections/CollectionUtils.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/ComparatorUtils.java\n+++ b/src/java/org/apache/commons/collections/ComparatorUtils.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/CursorableLinkedList.java\n  * @see java.util.LinkedList\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Janek Bogucki\n  * @author Simon Kitching\n--- a/src/java/org/apache/commons/collections/DefaultMapBag.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapBag.java\n  * @deprecated Moved to bag subpackage as AbstractMapBag. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Michael A. Smith\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/DefaultMapEntry.java\n+++ b/src/java/org/apache/commons/collections/DefaultMapEntry.java\n  * @deprecated Use the version in the keyvalue subpackage. Will be removed in v4.0\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Michael A. Smith\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/DoubleOrderedMap.java\n  * @see org.apache.commons.collections.bidimap.DualHashBidiMap\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Marc Johnson\n  */\n public final class DoubleOrderedMap extends AbstractMap {\n--- a/src/java/org/apache/commons/collections/EnumerationUtils.java\n+++ b/src/java/org/apache/commons/collections/EnumerationUtils.java\n \n /**\n  * Provides utility methods for {@link Enumeration} instances.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Id$\n- * \n+ *\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  */\n public class EnumerationUtils {\n--- a/src/java/org/apache/commons/collections/ExtendedProperties.java\n+++ b/src/java/org/apache/commons/collections/ExtendedProperties.java\n  *\n  *   Then \"additional.properties\" is expected to be in the same\n  *   directory as the parent configuration file.\n- * \n+ *\n  *   Duplicate name values will be replaced, so be careful.\n  *\n  *  </li>\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:stefano@apache.org\">Stefano Mazzocchi</a>\n  * @author <a href=\"mailto:jon@latchkey.com\">Jon S. Stevens</a>\n  * @author <a href=\"mailto:daveb@miceda-data\">Dave Bryson</a>\n--- a/src/java/org/apache/commons/collections/Factory.java\n+++ b/src/java/org/apache/commons/collections/Factory.java\n  * Standard implementations of common factories are provided by\n  * {@link FactoryUtils}. These include factories that return a constant,\n  * a copy of a prototype or a new instance.\n- * \n+ *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/FactoryUtils.java\n+++ b/src/java/org/apache/commons/collections/FactoryUtils.java\n  * <li>Exception - always throws an exception\n  * </ul>\n  * All the supplied factories are Serializable.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/FastArrayList.java\n+++ b/src/java/org/apache/commons/collections/FastArrayList.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/FastHashMap.java\n+++ b/src/java/org/apache/commons/collections/FastHashMap.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/FastTreeMap.java\n+++ b/src/java/org/apache/commons/collections/FastTreeMap.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Craig R. McClanahan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/FunctorException.java\n+++ b/src/java/org/apache/commons/collections/FunctorException.java\n /**\n  * Runtime exception thrown from functors.\n  * If required, a root cause error can be wrapped within this one.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/HashBag.java\n+++ b/src/java/org/apache/commons/collections/HashBag.java\n  * @deprecated Moved to bag subpackage and rewritten internally. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  */\n public class HashBag extends DefaultMapBag implements Bag {\n--- a/src/java/org/apache/commons/collections/IterableMap.java\n+++ b/src/java/org/apache/commons/collections/IterableMap.java\n  *   it.setValue(\"newValue\");\n  * }\n  * </pre>\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/IteratorUtils.java\n+++ b/src/java/org/apache/commons/collections/IteratorUtils.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n  */\n--- a/src/java/org/apache/commons/collections/KeyValue.java\n+++ b/src/java/org/apache/commons/collections/KeyValue.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public interface KeyValue {\n--- a/src/java/org/apache/commons/collections/LRUMap.java\n+++ b/src/java/org/apache/commons/collections/LRUMap.java\n  * An implementation of a Map which has a maximum size and uses a Least Recently Used\n  * algorithm to remove items from the Map when the maximum size is reached and new items are added.\n  * </p>\n- * \n+ *\n  * <p>\n  * A synchronized version can be obtained with:\n  * <code>Collections.synchronizedMap( theMapToSynchronize )</code>\n  * to this Map.  Even concurrent get(Object) operations produce indeterminate\n  * behaviour.\n  * </p>\n- * \n+ *\n  * <p>\n  * Unlike the Collections 1.0 version, this version of LRUMap does use a true\n  * LRU algorithm.  The keys for all gets and puts are moved to the front of\n  * the list.  LRUMap is now a subclass of SequencedHashMap, and the \"LRU\"\n  * key is now equivalent to LRUMap.getFirst().\n  * </p>\n- * \n+ *\n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:morgand@apache.org\">Morgan Delagrange</a>\n  */\n--- a/src/java/org/apache/commons/collections/ListUtils.java\n+++ b/src/java/org/apache/commons/collections/ListUtils.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Federico Barbieri\n  * @author Peter Donald\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/MapUtils.java\n+++ b/src/java/org/apache/commons/collections/MapUtils.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n  * @author <a href=\"mailto:knielsen@apache.org\">Kasper Nielsen</a>\n--- a/src/java/org/apache/commons/collections/MultiHashMap.java\n+++ b/src/java/org/apache/commons/collections/MultiHashMap.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Christopher Berry\n  * @author James Strachan\n  * @author Steve Downey\n--- a/src/java/org/apache/commons/collections/MultiMap.java\n+++ b/src/java/org/apache/commons/collections/MultiMap.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Christopher Berry\n  * @author James Strachan\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/OrderedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/OrderedBidiMap.java\n  * <p>\n  * Implementations should allow a value to be looked up from a key and\n  * a key to be looked up from a value with equal performance.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/OrderedMap.java\n+++ b/src/java/org/apache/commons/collections/OrderedMap.java\n /**\n  * Defines a map that maintains order and allows both forward and backward\n  * iteration through that order.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/Predicate.java\n+++ b/src/java/org/apache/commons/collections/Predicate.java\n  * Standard implementations of common predicates are provided by\n  * {@link PredicateUtils}. These include true, false, instanceof, equals, and,\n  * or, not, method invokation and null testing.\n- * \n+ *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/PredicateUtils.java\n+++ b/src/java/org/apache/commons/collections/PredicateUtils.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Ola Berg\n  */\n--- a/src/java/org/apache/commons/collections/PriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/PriorityQueue.java\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Peter Donald\n  */\n public interface PriorityQueue {\n--- a/src/java/org/apache/commons/collections/ProxyMap.java\n+++ b/src/java/org/apache/commons/collections/ProxyMap.java\n  * build to extensions for its wrapped <code>Map</code> object which\n  * would be unavailable or inconvenient via sub-classing (but usable\n  * via composition).</p>\n- * \n+ *\n  * <p>This implementation does not perform any special processing with\n  * {@link #entrySet()}, {@link #keySet()} or {@link #values()}. Instead\n  * it simply returns the set/collection from the wrapped map. This may be\n  * @deprecated Moved to map subpackage as AbstractMapDecorator. It will be removed in v4.0.\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Daniel Rall\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/ReferenceMap.java\n  *  provide synchronized access to a <code>ReferenceMap</code>.\n  *\n  * @see java.lang.ref.Reference\n- * \n+ *\n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  */\n public class ReferenceMap extends AbstractMap {\n--- a/src/java/org/apache/commons/collections/ResettableIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public interface ResettableIterator extends Iterator {\n--- a/src/java/org/apache/commons/collections/ResettableListIterator.java\n+++ b/src/java/org/apache/commons/collections/ResettableListIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public interface ResettableListIterator extends ListIterator, ResettableIterator {\n--- a/src/java/org/apache/commons/collections/SequencedHashMap.java\n+++ b/src/java/org/apache/commons/collections/SequencedHashMap.java\n  * @see org.apache.commons.collections.map.ListOrderedMap\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  * @author Daniel Rall\n  * @author Henning P. Schmiedehausen\n--- a/src/java/org/apache/commons/collections/SetUtils.java\n+++ b/src/java/org/apache/commons/collections/SetUtils.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/SortedBag.java\n+++ b/src/java/org/apache/commons/collections/SortedBag.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  */\n public interface SortedBag extends Bag {\n--- a/src/java/org/apache/commons/collections/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/StaticBucketMap.java\n  * @deprecated Moved to map subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:bloritsch@apache.org\">Berin Loritsch</a>\n  * @author <a href=\"mailto:g-froehlich@gmx.de\">Gerhard Froehlich</a>\n  * @author <a href=\"mailto:mas@apache.org\">Michael A. Smith</a>\n--- a/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n+++ b/src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java\n  *  Due to be removed in v4.0.\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Ram Chidambaram\n  */\n public final class SynchronizedPriorityQueue implements PriorityQueue {\n--- a/src/java/org/apache/commons/collections/Transformer.java\n+++ b/src/java/org/apache/commons/collections/Transformer.java\n  * Standard implementations of common transformers are provided by\n  * {@link TransformerUtils}. These include method invokation, returning a constant,\n  * cloning and returning the string value.\n- * \n+ *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/TransformerUtils.java\n+++ b/src/java/org/apache/commons/collections/TransformerUtils.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author James Carman\n  */\n--- a/src/java/org/apache/commons/collections/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/TreeBag.java\n  * @deprecated Moved to bag subpackage and rewritten internally. Due to be removed in v4.0.\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  */\n public class TreeBag extends DefaultMapBag implements SortedBag {\n--- a/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/UnboundedFifoBuffer.java\n  * </pre>\n  * <p>\n  * This buffer prevents null objects from being added.\n- * \n+ *\n  * @deprecated Moved to buffer subpackage. Due to be removed in v4.0.\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n--- a/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractBagDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractBagDecorator\n--- a/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractMapBag.java\n  *\n  * @since Commons Collections 3.0 (previously DefaultMapBag v2.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Michael A. Smith\n  * @author Stephen Colebourne\n--- a/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n+++ b/src/java/org/apache/commons/collections/bag/AbstractSortedBagDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractSortedBagDecorator\n--- a/src/java/org/apache/commons/collections/bag/HashBag.java\n+++ b/src/java/org/apache/commons/collections/bag/HashBag.java\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/PredicatedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedBag\n--- a/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/SynchronizedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedSortedBag\n--- a/src/java/org/apache/commons/collections/bag/TransformedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedBag\n--- a/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TransformedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedSortedBag\n--- a/src/java/org/apache/commons/collections/bag/TreeBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TreeBag.java\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bag/TypedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/TypedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableBag\n--- a/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n+++ b/src/java/org/apache/commons/collections/bag/UnmodifiableSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableSortedBag\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractBidiMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractBidiMapDecorator\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java\n  * <p>\n  * An implementation can be written simply by implementing the\n  * <code>createMap</code> method.\n- * \n+ *\n  * @see DualHashBidiMap\n  * @see DualTreeBidiMap\n  * @since Commons Collections 3.0\n  * @version $Id$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractOrderedBidiMapDecorator\n--- a/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractSortedBidiMapDecorator\n--- a/src/java/org/apache/commons/collections/bidimap/DualHashBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualHashBidiMap.java\n  * <p>\n  * NOTE: From Commons Collections 3.1, all subclasses will use <code>HashMap</code>\n  * and the flawed <code>createMap</code> method is ignored.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Id$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java\n  * <p>\n  * NOTE: From Commons Collections 3.1, all subclasses will use <code>TreeMap</code>\n  * and the flawed <code>createMap</code> method is ignored.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Id$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java\n  *\n  * @since Commons Collections 3.0 (previously DoubleOrderedMap v2.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Marc Johnson\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableBidiMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableBidiMap\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableOrderedBidiMap\n--- a/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n+++ b/src/java/org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableSortedBidiMap\n--- a/src/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n+++ b/src/java/org/apache/commons/collections/buffer/AbstractBufferDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractBufferDecorator extends AbstractCollectionDecorator implements Buffer {\n--- a/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/BoundedFifoBuffer.java\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Avalon\n  * @author Berin Loritsch\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/CircularFifoBuffer.java\n  * This buffer prevents null objects from being added.\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stefano Fornari\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PredicatedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/PriorityBuffer.java\n  *\n  * @since Commons Collections 3.0 (previously BinaryHeap v1.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Peter Donald\n  * @author Ram Chidambaram\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/SynchronizedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedBuffer extends SynchronizedCollection implements Buffer {\n--- a/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TransformedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedBuffer extends TransformedCollection implements Buffer {\n--- a/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/TypedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java\n  * This buffer prevents null objects from being added.\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n- * \n+ *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n+++ b/src/java/org/apache/commons/collections/buffer/UnmodifiableBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableBuffer\n--- a/src/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n+++ b/src/java/org/apache/commons/collections/collection/AbstractCollectionDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/collection/AbstractSerializableCollectionDecorator.java\n+++ b/src/java/org/apache/commons/collections/collection/AbstractSerializableCollectionDecorator.java\n \n /**\n  * Serializable subclass of AbstractCollectionDecorator.\n- * \n+ *\n  * @author Stephen Colebourne\n  * @since Commons Collections 3.1\n  */\n--- a/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/PredicatedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/SynchronizedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedCollection implements Collection, Serializable {\n--- a/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/TransformedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedCollection extends AbstractSerializableCollectionDecorator {\n--- a/src/java/org/apache/commons/collections/collection/TypedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/TypedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/UnmodifiableBoundedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableBoundedCollection\n--- a/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n+++ b/src/java/org/apache/commons/collections/collection/UnmodifiableCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableCollection\n--- a/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/BooleanComparator.java\n  * @see #getTrueFirstComparator()\n  * @see #getFalseFirstComparator()\n  * @see #getBooleanComparator(boolean)\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public final class BooleanComparator implements Comparator, Serializable {\n--- a/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n+++ b/src/java/org/apache/commons/collections/comparators/ComparatorChain.java\n  * to multi-column sorting in SQL, and this class\n  * allows Java classes to emulate that kind of behaviour\n  * when sorting a List.</p>\n- * \n+ *\n  * <p>To further facilitate SQL-like sorting, the order of\n  * any single Comparator in the list can be reversed.</p>\n- * \n+ *\n  * <p>Calling a method that adds new Comparators or\n  * changes the ascend/descend sort <i>after compare(Object,\n  * Object) has been called</i> will result in an\n  * UnsupportedOperationException.  However, <i>take care</i>\n  * to not alter the underlying List of Comparators\n  * or the BitSet that defines the sort order.</p>\n- * \n+ *\n  * <p>Instances of ComparatorChain are not synchronized.\n  * The class is not thread-safe at construction time, but\n  * it <i>is</i> thread-safe to perform multiple comparisons\n  * after all the setup operations are complete.</p>\n- * \n+ *\n  * @since Commons Collections 2.0\n  * @author Morgan Delagrange\n  * @version $Revision$ $Date$\n--- a/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/FixedOrderComparator.java\n  * Instances of FixedOrderComparator are not synchronized.  The class is not\n  * thread-safe at construction time, but it is thread-safe to perform\n  * multiple comparisons  after all the setup operations are complete.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/ReverseComparator.java\n /**\n  * Reverses the order of another comparator by reversing the arguments\n  * to its {@link #compare(Object, Object) compare} method.\n- * \n+ *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n  *\n  * @author Michael A. Smith\n- * \n+ *\n  * @see java.util.Collections#reverseOrder()\n  */\n public class ReverseComparator implements Comparator, Serializable {\n--- a/src/java/org/apache/commons/collections/comparators/TransformingComparator.java\n+++ b/src/java/org/apache/commons/collections/comparators/TransformingComparator.java\n  * Decorates another Comparator with transformation behavior. That is, the\n  * return value from the transform operation will be passed to the decorated\n  * {@link Comparator#compare(Object,Object) compare} method.\n- * \n+ *\n  * @since Commons Collections 2.0 (?)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @see org.apache.commons.collections.Transformer\n  * @see org.apache.commons.collections.comparators.ComparableComparator\n  */\n--- a/src/java/org/apache/commons/collections/functors/AndPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/AndPredicate.java\n \n /**\n  * Predicate implementation that returns true if both the predicates return true.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ChainedClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ChainedClosure.java\n \n /**\n  * Closure implementation that chains the specified closures together.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ChainedTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ChainedTransformer.java\n  * <p>\n  * The input object is passed to the first transformer. The transformed result\n  * is passed to the second transformer and so on.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/CloneTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/CloneTransformer.java\n  * Transformer implementation that returns a clone of the input object.\n  * <p>\n  * Clone is performed using <code>PrototypeFactory.getInstance(input).create()</code>.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ClosureTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ClosureTransformer.java\n /**\n  * Transformer implementation that calls a Closure using the input object\n  * and then returns the input.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ConstantFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/ConstantFactory.java\n  * No check is made that the object is immutable. In general, only immutable\n  * objects should use the constant factory. Mutable objects should\n  * use the prototype factory.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ConstantTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ConstantTransformer.java\n  * No check is made that the object is immutable. In general, only immutable\n  * objects should use the constant factory. Mutable objects should\n  * use the prototype factory.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/EqualPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/EqualPredicate.java\n /**\n  * Predicate implementation that returns true if the input is the same object\n  * as the one stored in this predicate by equals.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ExceptionClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionClosure.java\n \n /**\n  * Closure implementation that always throws an exception.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ExceptionFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionFactory.java\n \n /**\n  * Factory implementation that always throws an exception.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionPredicate.java\n \n /**\n  * Predicate implementation that always throws an exception.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/ExceptionTransformer.java\n \n /**\n  * Transformer implementation that always throws an exception.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/FactoryTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/FactoryTransformer.java\n \n /**\n  * Transformer implementation that calls a Factory and returns the result.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/FalsePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/FalsePredicate.java\n \n /**\n  * Predicate implementation that always returns false.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/ForClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/ForClosure.java\n \n /**\n  * Closure implementation that calls another closure n times, like a for loop.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n+++ b/src/java/org/apache/commons/collections/functors/FunctorUtils.java\n \n /**\n  * Internal utilities for functors.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/IdentityPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/IdentityPredicate.java\n /**\n  * Predicate implementation that returns true if the input is the same object\n  * as the one stored in this predicate.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/IfClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/IfClosure.java\n /**\n  * Closure implementation acts as an if statement calling one or other closure\n  * based on a predicate.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/InstanceofPredicate.java\n /**\n  * Predicate implementation that returns true if the input is an instanceof\n  * the type stored in this predicate.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/InstantiateFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/InstantiateFactory.java\n \n /**\n  * Factory implementation that creates a new object instance by reflection.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/InstantiateTransformer.java\n \n /**\n  * Transformer implementation that creates a new object instance by reflection.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/InvokerTransformer.java\n \n /**\n  * Transformer implementation that creates a new object instance by reflection.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/MapTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/MapTransformer.java\n /**\n  * Transformer implementation that returns the value held in a specified map\n  * using the input parameter as a key.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NOPClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/NOPClosure.java\n \n /**\n  * Closure implementation that does nothing.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NOPTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/NOPTransformer.java\n \n /**\n  * Transformer implementation that does nothing.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NotNullPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NotNullPredicate.java\n \n /**\n  * Predicate implementation that returns true if the input is not null.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NotPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NotPredicate.java\n \n /**\n  * Predicate implementation that returns the opposite of the decorated predicate.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java\n \n /**\n  * Predicate implementation that throws an exception if the input is null.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java\n \n /**\n  * Predicate implementation that returns false if the input is null.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java\n \n /**\n  * Predicate implementation that returns true if the input is null.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/NullPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/NullPredicate.java\n \n /**\n  * Predicate implementation that returns true if the input is null.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/OrPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/OrPredicate.java\n \n /**\n  * Predicate implementation that returns true if either of the predicates return true.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/PredicateDecorator.java\n+++ b/src/java/org/apache/commons/collections/functors/PredicateDecorator.java\n  * Defines a predicate that decorates one or more other predicates.\n  * <p>\n  * This interface enables tools to access the decorated predicates.\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public interface PredicateDecorator extends Predicate {\n--- a/src/java/org/apache/commons/collections/functors/PredicateTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/PredicateTransformer.java\n /**\n  * Transformer implementation that calls a Predicate using the input object\n  * and then returns the result.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/PrototypeFactory.java\n+++ b/src/java/org/apache/commons/collections/functors/PrototypeFactory.java\n \n /**\n  * Factory implementation that creates a new instance each time based on a prototype.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/SwitchClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/SwitchClosure.java\n /**\n  * Closure implementation calls the closure whose predicate returns true,\n  * like a switch statement.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/SwitchTransformer.java\n+++ b/src/java/org/apache/commons/collections/functors/SwitchTransformer.java\n /**\n  * Transformer implementation calls the transformer whose predicate returns true,\n  * like a switch statement.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformedPredicate.java\n /**\n  * Predicate implementation that transforms the given object before invoking\n  * another <code>Predicate</code>.\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n  * @author Alban Peignier\n--- a/src/java/org/apache/commons/collections/functors/TransformerClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformerClosure.java\n /**\n  * Closure implementation that calls a Transformer using the input object\n  * and ignore the result.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/TransformerPredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TransformerPredicate.java\n \n /**\n  * Predicate implementation that returns the result of a transformer.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/TruePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/TruePredicate.java\n \n /**\n  * Predicate implementation that always returns true.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/UniquePredicate.java\n+++ b/src/java/org/apache/commons/collections/functors/UniquePredicate.java\n /**\n  * Predicate implementation that returns true the first time an object is\n  * passed into the predicate.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/functors/WhileClosure.java\n+++ b/src/java/org/apache/commons/collections/functors/WhileClosure.java\n /**\n  * Closure implementation that executes a closure repeatedly until a condition is met,\n  * like a do-while or while loop.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractEmptyIterator.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n abstract class AbstractEmptyIterator {\n--- a/src/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractIteratorDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractListIteratorDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractMapIteratorDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class AbstractMapIteratorDecorator implements MapIterator {\n--- a/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n+++ b/src/java/org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class AbstractOrderedMapIteratorDecorator implements OrderedMapIterator {\n--- a/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ArrayListIterator.java\n  * The array can be either an array of object or of primitives. If you know \n  * that you have an object array, the {@link ObjectArrayListIterator}\n  * class is a better choice, as it will perform better.\n- * \n+ *\n  * <p>\n  * This iterator does not support {@link #add(Object)} or {@link #remove()}, as the array \n  * cannot be changed in size. The {@link #set(Object)} method is supported however.\n--- a/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/CollatingIterator.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/EmptyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyIterator.java\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class EmptyIterator extends AbstractEmptyIterator implements ResettableIterator {\n--- a/src/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyListIterator.java\n  *\n  * @since Commons Collections 2.1.1 and 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class EmptyListIterator extends AbstractEmptyIterator implements ResettableListIterator {\n--- a/src/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyMapIterator.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class EmptyMapIterator extends AbstractEmptyIterator implements MapIterator, ResettableIterator {\n--- a/src/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyOrderedIterator.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class EmptyOrderedIterator extends AbstractEmptyIterator implements OrderedIterator, ResettableIterator {\n--- a/src/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EmptyOrderedMapIterator.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class EmptyOrderedMapIterator extends AbstractEmptyIterator implements OrderedMapIterator, ResettableIterator {\n--- a/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/EnumerationIterator.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n  */\n--- a/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterIterator.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Jan Sorensen\n  * @author Ralph Wagner\n--- a/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/FilterListIterator.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public class FilterListIterator implements ListIterator {\n--- a/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n+++ b/src/java/org/apache/commons/collections/iterators/IteratorEnumeration.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  */\n public class IteratorEnumeration implements Enumeration {\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectArrayListIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n  * @author Phil Steitz\n--- a/src/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java\n  * <p>\n  * Under many circumstances, linking Iterators together in this manner is\n  * more efficient (and convenient) than using nested for loops to extract a list.\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class ObjectGraphIterator implements Iterator {\n--- a/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyIterator.java\n  * @deprecated Use AbstractIteratorDecorator. Will be removed in v4.0\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  */\n public class ProxyIterator implements Iterator {\n--- a/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/ProxyListIterator.java\n  * @deprecated Use AbstractListIteratorDecorator. Will be removed in v4.0\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public class ProxyListIterator implements ListIterator {\n--- a/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonIterator.java\n  *\n  * @since Commons Collections 2.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n--- a/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/SingletonListIterator.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Rodney Waldhoff\n  */\n--- a/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/TransformIterator.java\n  *\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UniqueFilterIterator.java\n  *\n  * @since Commons Collections 2.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  */\n public class UniqueFilterIterator extends FilterIterator {\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableIterator implements Iterator, Unmodifiable {\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableListIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableListIterator implements ListIterator, Unmodifiable {\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableMapIterator implements MapIterator, Unmodifiable {\n--- a/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n+++ b/src/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableOrderedMapIterator implements OrderedMapIterator, Unmodifiable {\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Michael A. Smith\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntry.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Michael A. Smith\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractMapEntryDecorator implements Map.Entry, KeyValue {\n--- a/src/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/DefaultKeyValue.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Michael A. Smith\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Michael A. Smith\n  * @author Neil O'Toole\n--- a/src/java/org/apache/commons/collections/keyvalue/MultiKey.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/MultiKey.java\n  * MultiKey multiKey = new MultiKey(key, locale);\n  * String localizedText = (String) map.get(multiKey);\n  * </pre>\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Howard Lewis Ship\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/TiedMapEntry.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TiedMapEntry implements Map.Entry, KeyValue, Serializable {\n--- a/src/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n+++ b/src/java/org/apache/commons/collections/keyvalue/UnmodifiableMapEntry.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableMapEntry extends AbstractMapEntry implements Unmodifiable {\n--- a/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractLinkedList.java\n  * Overridable methods are provided to change the storage node and to change how\n  * nodes are added to and removed. Hopefully, all you need for unusual subclasses\n  * is here.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/list/AbstractListDecorator.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractListDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractListDecorator extends AbstractCollectionDecorator implements List {\n--- a/src/java/org/apache/commons/collections/list/AbstractSerializableListDecorator.java\n+++ b/src/java/org/apache/commons/collections/list/AbstractSerializableListDecorator.java\n \n /**\n  * Serializable subclass of AbstractListDecorator.\n- * \n+ *\n  * @author Stephen Colebourne\n  * @since Commons Collections 3.1\n  */\n--- a/src/java/org/apache/commons/collections/list/CursorableLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/CursorableLinkedList.java\n  * @see java.util.LinkedList\n  * @since Commons Collections 1.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Janek Bogucki\n  * @author Simon Kitching\n--- a/src/java/org/apache/commons/collections/list/FixedSizeList.java\n+++ b/src/java/org/apache/commons/collections/list/FixedSizeList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/list/LazyList.java\n+++ b/src/java/org/apache/commons/collections/list/LazyList.java\n  * @see GrowthList\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Arron Bates\n  * @author Paul Jack\n--- a/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n+++ b/src/java/org/apache/commons/collections/list/NodeCachingLinkedList.java\n  * using this class.\n  * <p>\n  * <b>Note that this implementation is not synchronized.</b>\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jeff Varszegi\n  * @author Rich Dougherty\n  * @author Phil Steitz\n--- a/src/java/org/apache/commons/collections/list/PredicatedList.java\n+++ b/src/java/org/apache/commons/collections/list/PredicatedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/list/SetUniqueList.java\n+++ b/src/java/org/apache/commons/collections/list/SetUniqueList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  * @author Tom Dunham\n--- a/src/java/org/apache/commons/collections/list/SynchronizedList.java\n+++ b/src/java/org/apache/commons/collections/list/SynchronizedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedList extends SynchronizedCollection implements List {\n--- a/src/java/org/apache/commons/collections/list/TransformedList.java\n+++ b/src/java/org/apache/commons/collections/list/TransformedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedList extends TransformedCollection implements List {\n--- a/src/java/org/apache/commons/collections/list/TreeList.java\n+++ b/src/java/org/apache/commons/collections/list/TreeList.java\n  * <code>LinkedList</code> is rarely a good choice of implementation.\n  * <code>TreeList</code> is almost always a good replacement for it, although it\n  * does use sligtly more memory.\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/list/TypedList.java\n+++ b/src/java/org/apache/commons/collections/list/TypedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/list/UnmodifiableList.java\n+++ b/src/java/org/apache/commons/collections/list/UnmodifiableList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableList\n--- a/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractHashedMap.java\n  * NOTE: From Commons Collections 3.1 this class extends AbstractMap.\n  * This is to provide backwards compatibility for ReferenceMap between v3.0 and v3.1.\n  * This extends clause will be removed in v4.0.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n abstract class AbstractInputCheckedMapDecorator\n--- a/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractLinkedMap.java\n  * <p>\n  * The implementation is also designed to be subclassed, with lots of useful\n  * methods exposed.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Daniel Rall\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractOrderedMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractOrderedMapDecorator\n--- a/src/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractReferenceMap.java\n  * @see java.lang.ref.Reference\n  * @since Commons Collections 3.1 (extracted from ReferenceMap in 3.0)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n+++ b/src/java/org/apache/commons/collections/map/AbstractSortedMapDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractSortedMapDecorator\n--- a/src/java/org/apache/commons/collections/map/DefaultedMap.java\n+++ b/src/java/org/apache/commons/collections/map/DefaultedMap.java\n  *\n  * @since Commons Collections 3.2\n  * @version $Revision: 1.7 $ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Rafael U.C. Afonso\n  * @see LazyMap\n--- a/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/FixedSizeSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/LazyMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazyMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/LazySortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/LazySortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/ListOrderedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n  * @author Dave Meikle\n--- a/src/java/org/apache/commons/collections/map/MultiKeyMap.java\n+++ b/src/java/org/apache/commons/collections/map/MultiKeyMap.java\n  * and a Locale to lookup the airline's name:\n  * <pre>\n  * private MultiKeyMap cache = MultiKeyMap.decorate(new LRUMap(50));\n- * \n+ *\n  * public String getAirlineName(String code, String locale) {\n  *   String name = (String) cache.get(code, locale);\n  *   if (name == null) {\n--- a/src/java/org/apache/commons/collections/map/PredicatedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/PredicatedSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n+++ b/src/java/org/apache/commons/collections/map/ReferenceIdentityMap.java\n  * exceptions when accessed by concurrent threads without synchronization.\n  *\n  * @see java.lang.ref.Reference\n- * \n+ *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class ReferenceIdentityMap extends AbstractReferenceMap implements Serializable {\n--- a/src/java/org/apache/commons/collections/map/ReferenceMap.java\n+++ b/src/java/org/apache/commons/collections/map/ReferenceMap.java\n  * extensible and provides a <code>MapIterator</code>.\n  *\n  * @see java.lang.ref.Reference\n- * \n+ *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  * @author Stephen Colebourne\n  */\n--- a/src/java/org/apache/commons/collections/map/SingletonMap.java\n+++ b/src/java/org/apache/commons/collections/map/SingletonMap.java\n  * <li>the <code>MapIterator</code>, see {@link #mapIterator()}\n  * <li>the <code>KeyValue</code> interface (just cast - no object creation)\n  * </ul>\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n  *\n--- a/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n+++ b/src/java/org/apache/commons/collections/map/StaticBucketMap.java\n  *\n  * @since Commons Collections 3.0 (previously in main package v2.1)\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Berin Loritsch\n  * @author Gerhard Froehlich\n  * @author Michael A. Smith\n--- a/src/java/org/apache/commons/collections/map/TransformedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedMap\n--- a/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TransformedSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedSortedMap\n--- a/src/java/org/apache/commons/collections/map/TypedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/TypedSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableEntrySet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableEntrySet\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableMap\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableOrderedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableOrderedMap\n--- a/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n+++ b/src/java/org/apache/commons/collections/map/UnmodifiableSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableSortedMap\n--- a/src/java/org/apache/commons/collections/set/AbstractSerializableSetDecorator.java\n+++ b/src/java/org/apache/commons/collections/set/AbstractSerializableSetDecorator.java\n \n /**\n  * Serializable subclass of AbstractSetDecorator.\n- * \n+ *\n  * @author Stephen Colebourne\n  * @since Commons Collections 3.1\n  */\n--- a/src/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n+++ b/src/java/org/apache/commons/collections/set/AbstractSetDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractSetDecorator extends AbstractCollectionDecorator implements Set {\n--- a/src/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n+++ b/src/java/org/apache/commons/collections/set/AbstractSortedSetDecorator.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractSortedSetDecorator extends AbstractSetDecorator implements SortedSet {\n--- a/src/java/org/apache/commons/collections/set/ListOrderedSet.java\n+++ b/src/java/org/apache/commons/collections/set/ListOrderedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Henning P. Schmiedehausen\n  */\n--- a/src/java/org/apache/commons/collections/set/MapBackedSet.java\n+++ b/src/java/org/apache/commons/collections/set/MapBackedSet.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class MapBackedSet implements Set, Serializable {\n--- a/src/java/org/apache/commons/collections/set/PredicatedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/PredicatedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Paul Jack\n  */\n--- a/src/java/org/apache/commons/collections/set/SynchronizedSet.java\n+++ b/src/java/org/apache/commons/collections/set/SynchronizedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedSet extends SynchronizedCollection implements Set {\n--- a/src/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/SynchronizedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class SynchronizedSortedSet extends SynchronizedCollection implements SortedSet {\n--- a/src/java/org/apache/commons/collections/set/TransformedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TransformedSet.java\n  * use the Integer form to remove objects.\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedSet extends TransformedCollection implements Set {\n--- a/src/java/org/apache/commons/collections/set/TransformedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TransformedSortedSet.java\n  * use the Integer form to remove objects.\n  * <p>\n  * This class is Serializable from Commons Collections 3.1.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TransformedSortedSet extends TransformedSet implements SortedSet {\n--- a/src/java/org/apache/commons/collections/set/TypedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TypedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/set/TypedSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/TypedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  */\n--- a/src/java/org/apache/commons/collections/set/UnmodifiableSet.java\n+++ b/src/java/org/apache/commons/collections/set/UnmodifiableSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableSet\n--- a/src/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n+++ b/src/java/org/apache/commons/collections/set/UnmodifiableSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public final class UnmodifiableSortedSet\n--- a/src/test/org/apache/commons/collections/AbstractTestObject.java\n+++ b/src/test/org/apache/commons/collections/AbstractTestObject.java\n  * test case (method) your {@link Object} fails.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n  * @author Anonymous\n--- a/src/test/org/apache/commons/collections/LocalTestNode.java\n+++ b/src/test/org/apache/commons/collections/LocalTestNode.java\n \n /**\n  * Class LocalTestNode, a helper class for TestDoubleOrderedMap\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Marc Johnson (marcj at users dot sourceforge dot net)\n--- a/src/test/org/apache/commons/collections/TestAll.java\n+++ b/src/test/org/apache/commons/collections/TestAll.java\n \n /**\n  * Entry point for all Collections package tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestAllPackages.java\n+++ b/src/test/org/apache/commons/collections/TestAllPackages.java\n \n /**\n  * Entry point for all Collections project tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAllPackages extends TestCase {\n--- a/src/test/org/apache/commons/collections/TestArrayList.java\n+++ b/src/test/org/apache/commons/collections/TestArrayList.java\n \n /**\n  * Abstract test class for ArrayList.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jason van Zyl\n  */\n public abstract class TestArrayList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/TestArrayStack.java\n+++ b/src/test/org/apache/commons/collections/TestArrayStack.java\n \n /**\n  * Tests ArrayStack.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Craig McClanahan\n  */\n public class TestArrayStack extends TestArrayList {\n--- a/src/test/org/apache/commons/collections/TestBagUtils.java\n+++ b/src/test/org/apache/commons/collections/TestBagUtils.java\n \n /**\n  * Tests for BagUtils factory methods.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/TestBeanMap.java\n+++ b/src/test/org/apache/commons/collections/TestBeanMap.java\n \n /**\n  * Test cases for BeanMap\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestBinaryHeap.java\n+++ b/src/test/org/apache/commons/collections/TestBinaryHeap.java\n \n /**\n  * Tests the BinaryHeap.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  */\n public class TestBinaryHeap extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/TestBoundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/TestBoundedFifoBuffer.java\n \n /**\n  * Test cases for BoundedFifoBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  */\n public class TestBoundedFifoBuffer extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/TestBoundedFifoBuffer2.java\n+++ b/src/test/org/apache/commons/collections/TestBoundedFifoBuffer2.java\n /**\n  * Runs tests against a full BoundedFifoBuffer, since many of the algorithms\n  * differ depending on whether the fifo is full or not.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestBoundedFifoBuffer2 extends TestBoundedFifoBuffer {\n--- a/src/test/org/apache/commons/collections/TestBufferUtils.java\n+++ b/src/test/org/apache/commons/collections/TestBufferUtils.java\n \n /**\n  * Tests for BufferUtils.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestBufferUtils extends BulkTest {\n--- a/src/test/org/apache/commons/collections/TestClosureUtils.java\n+++ b/src/test/org/apache/commons/collections/TestClosureUtils.java\n \n /**\n  * Tests the org.apache.commons.collections.ClosureUtils class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/test/org/apache/commons/collections/TestCollectionUtils.java\n+++ b/src/test/org/apache/commons/collections/TestCollectionUtils.java\n \n /**\n  * Tests for CollectionUtils.\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  * @author Steven Melzer\n  * @author Neil O'Toole\n  * @author Stephen Smith\n- * \n+ *\n  * @version $Revision$ $Date$\n  */\n public class TestCollectionUtils extends TestCase {\n--- a/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestCursorableLinkedList.java\n \n /**\n  * Test class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n  */\n--- a/src/test/org/apache/commons/collections/TestDoubleOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/TestDoubleOrderedMap.java\n  * implement TestMap.SupportsPut, because it is a special\n  * Map that does not support duplicate keys, duplicate \n  * values, or null values.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Marc Johnson\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/TestEnumerationUtils.java\n+++ b/src/test/org/apache/commons/collections/TestEnumerationUtils.java\n \n /**\n  * Tests EnumerationUtils.\n- * \n+ *\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @version $Id$\n  */\n--- a/src/test/org/apache/commons/collections/TestExtendedProperties.java\n+++ b/src/test/org/apache/commons/collections/TestExtendedProperties.java\n \n /**\n  * Tests some basic functions of the ExtendedProperties class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Geir Magnusson Jr.\n  * @author Mohan Kishore\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/TestFactoryUtils.java\n+++ b/src/test/org/apache/commons/collections/TestFactoryUtils.java\n \n /**\n  * Tests the org.apache.commons.collections.FactoryUtils class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/test/org/apache/commons/collections/TestFastArrayList.java\n+++ b/src/test/org/apache/commons/collections/TestFastArrayList.java\n \n /**\n  * Test FastArrayList.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jason van Zyl\n  */\n public class TestFastArrayList extends TestArrayList {\n--- a/src/test/org/apache/commons/collections/TestFastArrayList1.java\n+++ b/src/test/org/apache/commons/collections/TestFastArrayList1.java\n \n /**\n  * Test FastArrayList implementation in <strong>fast</strong> mode.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Jason van Zyl\n--- a/src/test/org/apache/commons/collections/TestFastHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestFastHashMap.java\n \n /**\n  * Tests FastHashMap.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jason van Zyl\n  */\n public class TestFastHashMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/TestFastHashMap1.java\n+++ b/src/test/org/apache/commons/collections/TestFastHashMap1.java\n \n /**\n  * Test FastHashMap in <strong>fast</strong> mode.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Jason van Zyl\n--- a/src/test/org/apache/commons/collections/TestFastTreeMap.java\n+++ b/src/test/org/apache/commons/collections/TestFastTreeMap.java\n \n /**\n  * Tests FastTreeMap.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jason van Zyl\n  */\n public class TestFastTreeMap extends TestTreeMap {\n--- a/src/test/org/apache/commons/collections/TestFastTreeMap1.java\n+++ b/src/test/org/apache/commons/collections/TestFastTreeMap1.java\n \n /**\n  * Test FastTreeMap in <strong>fast</strong> mode.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author <a href=\"mailto:jvanzyl@apache.org\">Jason van Zyl</a>\n--- a/src/test/org/apache/commons/collections/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/TestHashBag.java\n /**\n  * Extension of {@link AbstractTestBag} for exercising the {@link HashBag}\n  * implementation.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n--- a/src/test/org/apache/commons/collections/TestIteratorUtils.java\n+++ b/src/test/org/apache/commons/collections/TestIteratorUtils.java\n \n /**\n  * Tests for IteratorUtils.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestIteratorUtils extends BulkTest {\n--- a/src/test/org/apache/commons/collections/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/TestLRUMap.java\n \n /**\n  * Tests LRUMap.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/TestLinkedList.java\n+++ b/src/test/org/apache/commons/collections/TestLinkedList.java\n  * If your {@link LinkedList} fails one of these tests by design,\n  * you may still use this base set of cases.  Simply override the\n  * test case (method) your {@link List} fails.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Rich Dougherty\n--- a/src/test/org/apache/commons/collections/TestListUtils.java\n+++ b/src/test/org/apache/commons/collections/TestListUtils.java\n \n /**\n  * Tests for ListUtils.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n  * @author Matthew Hawthorne\n--- a/src/test/org/apache/commons/collections/TestMultiHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestMultiHashMap.java\n \n /**\n  * Unit Tests for <code>MultiHashMap</code>.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Unknown\n--- a/src/test/org/apache/commons/collections/TestPredicateUtils.java\n+++ b/src/test/org/apache/commons/collections/TestPredicateUtils.java\n \n /**\n  * Tests the org.apache.commons.collections.PredicateUtils class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/test/org/apache/commons/collections/TestReferenceMap.java\n+++ b/src/test/org/apache/commons/collections/TestReferenceMap.java\n \n /**\n  * Tests for ReferenceMap. \n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Paul Jack\n--- a/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n+++ b/src/test/org/apache/commons/collections/TestSequencedHashMap.java\n  * {@link org.apache.commons.collections.SequencedHashMap}.\n  * Be sure to use the \"labRat\" instance whenever possible,\n  * so that subclasses will be tested correctly.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  * @author Daniel Rall\n  * @author Henning P. Schmiedehausen\n--- a/src/test/org/apache/commons/collections/TestSetUtils.java\n+++ b/src/test/org/apache/commons/collections/TestSetUtils.java\n \n /**\n  * Tests for SetUtils.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Neil O'Toole\n  * @author Matthew Hawthorne\n--- a/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/TestStaticBucketMap.java\n /**\n  * Unit tests.\n  * {@link org.apache.commons.collections.StaticBucketMap}.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  */\n public class TestStaticBucketMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/TestTransformerUtils.java\n+++ b/src/test/org/apache/commons/collections/TestTransformerUtils.java\n \n /**\n  * Tests the org.apache.commons.collections.TransformerUtils class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n  *\n--- a/src/test/org/apache/commons/collections/TestTreeBag.java\n+++ b/src/test/org/apache/commons/collections/TestTreeBag.java\n /**\n  * Extension of {@link AbstractTestBag} for exercising the {@link TreeBag}\n  * implementation.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n--- a/src/test/org/apache/commons/collections/TestTreeMap.java\n+++ b/src/test/org/apache/commons/collections/TestTreeMap.java\n \n /**\n  * Tests TreeMap.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jason van Zyl\n  */\n public abstract class TestTreeMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/TestTypedCollection.java\n+++ b/src/test/org/apache/commons/collections/TestTypedCollection.java\n \n /**\n  * Tests TypedCollection.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class TestTypedCollection extends BulkTest {\n--- a/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/TestUnboundedFifoBuffer.java\n \n /**\n  * Test cases for UnboundedFifoBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestUnboundedFifoBuffer extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestBag.java\n  * test case (method) your bag fails.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Chuck Burdick\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/AbstractTestSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestSortedBag extends AbstractTestBag {\n--- a/src/test/org/apache/commons/collections/bag/TestAll.java\n+++ b/src/test/org/apache/commons/collections/bag/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/bag/TestHashBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestHashBag.java\n /**\n  * Extension of {@link AbstractTestBag} for exercising the {@link HashBag}\n  * implementation.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n--- a/src/test/org/apache/commons/collections/bag/TestPredicatedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestPredicatedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedBag extends AbstractTestBag {\n--- a/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestPredicatedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedSortedBag extends AbstractTestSortedBag {\n--- a/src/test/org/apache/commons/collections/bag/TestTransformedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTransformedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedBag extends AbstractTestBag {\n--- a/src/test/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTransformedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedSortedBag extends AbstractTestSortedBag {\n--- a/src/test/org/apache/commons/collections/bag/TestTreeBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTreeBag.java\n /**\n  * Extension of {@link AbstractTestBag} for exercising the {@link TreeBag}\n  * implementation.\n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Chuck Burdick\n--- a/src/test/org/apache/commons/collections/bag/TestTypedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTypedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestTypedBag extends AbstractTestBag {\n--- a/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n+++ b/src/test/org/apache/commons/collections/bag/TestTypedSortedBag.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestTypedSortedBag extends AbstractTestSortedBag {\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestBidiMap.java\n \n /**\n  * Abstract test class for {@link BidiMap} methods and contracts.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestOrderedBidiMap.java\n \n /**\n  * Abstract test class for {@link OrderedBidiMap} methods and contracts.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java\n \n /**\n  * Abstract test class for {@link SortedBidiMap} methods and contracts.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestAbstractOrderedBidiMapDecorator.java\n \n /**\n  * Test class for AbstractOrderedBidiMapDecorator.\n- * \n+ *\n  * @version $Revision$ $Date$\n  */\n public class TestAbstractOrderedBidiMapDecorator\n--- a/src/test/org/apache/commons/collections/bidimap/TestAll.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualHashBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Stephen Colebourne\n  * @author Jonas Van Poucke\n--- a/src/test/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestTreeBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTreeBidiMap extends AbstractTestOrderedBidiMap {\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableBidiMap extends AbstractTestBidiMap {\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableOrderedBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableOrderedBidiMap extends AbstractTestOrderedBidiMap {\n--- a/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n+++ b/src/test/org/apache/commons/collections/bidimap/TestUnmodifiableSortedBidiMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableSortedBidiMap extends AbstractTestSortedBidiMap {\n--- a/src/test/org/apache/commons/collections/buffer/TestAll.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer.java\n \n /**\n  * Test cases for BoundedFifoBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  */\n public class TestBoundedFifoBuffer extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestBoundedFifoBuffer2.java\n /**\n  * Runs tests against a full BoundedFifoBuffer, since many of the algorithms\n  * differ depending on whether the fifo is full or not.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestBoundedFifoBuffer2 extends TestBoundedFifoBuffer {\n--- a/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestCircularFifoBuffer.java\n \n /**\n  * Test cases for CircularFifoBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestCircularFifoBuffer extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestPredicatedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedBuffer extends TestPredicatedCollection {\n--- a/src/test/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestPriorityBuffer.java\n \n /**\n  * Tests the PriorityBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  * @author Steve Phelps\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestSynchronizedBuffer.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestTransformedBuffer.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedBuffer extends TestCase {\n--- a/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java\n \n /**\n  * Test cases for UnboundedFifoBuffer.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestUnboundedFifoBuffer extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n+++ b/src/test/org/apache/commons/collections/buffer/TestUnmodifiableBuffer.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/collection/AbstractTestCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/AbstractTestCollection.java\n  * test case (method) your {@link Collection} fails.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Michael A. Smith\n--- a/src/test/org/apache/commons/collections/collection/TestAll.java\n+++ b/src/test/org/apache/commons/collections/collection/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/collection/TestCompositeCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestCompositeCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Brian McCallister\n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/collection/TestPredicatedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestPredicatedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedCollection extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestSynchronizedCollection.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/collection/TestTransformedCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestTransformedCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedCollection extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n+++ b/src/test/org/apache/commons/collections/collection/TestUnmodifiableCollection.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/comparators/AbstractTestComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/AbstractTestComparator.java\n  * <p>\n  * Concrete subclasses declare the comparator to be tested.\n  * They also declare certain aspects of the tests.\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestComparator extends AbstractTestObject {\n--- a/src/test/org/apache/commons/collections/comparators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestAll.java\n \n /**\n  * Entry point for all Comparator Collections tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestBooleanComparator.java\n \n /**\n  * Tests for {@link BooleanComparator}.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public class TestBooleanComparator extends AbstractTestComparator {\n--- a/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparableComparator.java\n \n /**\n  * Tests for ComparableComparator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestComparableComparator extends AbstractTestComparator {\n--- a/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestComparatorChain.java\n \n /**\n  * Tests for ComparatorChain.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestComparatorChain extends AbstractTestComparator {\n--- a/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java\n \n /**\n  * Test class for FixedOrderComparator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author David Leppik \n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestNullComparator.java\n \n /**\n  * Test the NullComparator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  */\n public abstract class TestNullComparator extends AbstractTestComparator {\n--- a/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n+++ b/src/test/org/apache/commons/collections/comparators/TestReverseComparator.java\n \n /**\n  * Tests for ReverseComparator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Unknown\n  */\n public class TestReverseComparator extends AbstractTestComparator {\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestIterator.java\n  * Concrete subclasses must provide the iterator to be tested.\n  * They must also specify certain details of how the iterator operates by\n  * overriding the supportsXxx() methods if necessary.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestListIterator.java\n  * Concrete subclasses must provide the list iterator to be tested.\n  * They must also specify certain details of how the list iterator operates by\n  * overriding the supportsXxx() methods if necessary.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestMapIterator.java\n  * Concrete subclasses must provide the list iterator to be tested.\n  * They must also specify certain details of how the list iterator operates by\n  * overriding the supportsXxx() methods if necessary.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestMapIterator extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/AbstractTestOrderedMapIterator.java\n  * Concrete subclasses must provide the list iterator to be tested.\n  * They must also specify certain details of how the list iterator operates by\n  * overriding the supportsXxx() methods if necessary.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestOrderedMapIterator extends AbstractTestMapIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestAll.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestAll.java\n \n /**\n  * Entry point for all iterator tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayIterator.java\n  * Tests the ArrayIterator to ensure that the next() method will actually\n  * perform the iteration rather than the hasNext() method.\n  * The code of this test was supplied by Mauricio S. Moura.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Morgan Delagrange\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayIterator2.java\n \n /**\n  * Tests the ArrayIterator with primitive type arrays.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  * @author James Strachan\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayListIterator.java\n \n /**\n  * Test the ArrayListIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestArrayListIterator2.java\n \n /**\n  * Test the ArrayListIterator class with primitives.\n- * \n+ *\n  * @version $Revision$ $Date$\n  * @author Neil O'Toole\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestCollatingIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestCollatingIterator.java\n \n /**\n  * Unit test suite for {@link CollatingIterator}.\n- * \n+ *\n  * @version $Revision$ $Date$\n  * @author Rodney Waldhoff\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterIterator.java\n  * Test the filter iterator.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jan Sorensen\n  * @author Ralph Wagner\n  * @author Huw Roberts\n--- a/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java\n \n /**\n  * Tests the FilterListIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  */\n public class TestFilterListIterator extends TestCase {\n--- a/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestIteratorChain.java\n \n /**\n  * Tests the IteratorChain class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Morgan Delagrange\n--- a/src/test/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestListIteratorWrapper.java\n  * a ListIterator correctly.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Morgan Delagrange\n  */\n public class TestListIteratorWrapper extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestLoopingIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestLoopingIterator.java\n \n /**\n  * Tests the LoopingIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jonathan Carlson\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayIterator.java\n \n /**\n  * Tests the ObjectArrayIterator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Morgan Delagrange\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator.java\n \n /**\n  * Tests the ObjectArrayListIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  */\n public class TestObjectArrayListIterator extends TestObjectArrayIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectArrayListIterator2.java\n \n /**\n  * Tests the ObjectArrayListIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestObjectArrayListIterator2 extends AbstractTestListIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestObjectGraphIterator.java\n \n /**\n  * Testcase.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestObjectGraphIterator extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonIterator.java\n  * perform the iteration rather than the hasNext() method.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  */\n public class TestSingletonIterator extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonIterator2.java\n  * perform the iteration rather than the hasNext() method.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  */\n public class TestSingletonIterator2 extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestSingletonListIterator.java\n  * Tests the SingletonListIterator.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestSingletonListIterator extends AbstractTestListIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUniqueFilterIterator.java\n \n /**\n  * Tests the UniqueFilterIterator class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author James Strachan\n  * @author Mauricio S. Moura\n  * @author Morgan Delagrange\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableIterator.java\n \n /**\n  * Tests the UnmodifiableIterator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableIterator extends AbstractTestIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableListIterator.java\n \n /**\n  * Tests the UnmodifiableListIterator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableListIterator extends AbstractTestListIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableMapIterator.java\n \n /**\n  * Tests the UnmodifiableMapIterator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableMapIterator extends AbstractTestMapIterator {\n--- a/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n+++ b/src/test/org/apache/commons/collections/iterators/TestUnmodifiableOrderedMapIterator.java\n \n /**\n  * Tests the UnmodifiableOrderedMapIterator.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableOrderedMapIterator extends AbstractTestOrderedMapIterator {\n--- a/src/test/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/AbstractTestMapEntry.java\n  * a new Map.Entry of the type being tested. Subclasses must also implement\n  * {@link #testConstructors()} to test the constructors of the Map.Entry\n  * type being tested.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  */\n public abstract class AbstractTestMapEntry extends TestCase {\n--- a/src/test/org/apache/commons/collections/keyvalue/TestAll.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestAll.java\n \n /**\n  * Entry point for key-value test cases.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestDefaultKeyValue.java\n \n /**\n  * Test the DefaultKeyValue class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  */\n public class TestDefaultKeyValue extends TestCase {\n--- a/src/test/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestDefaultMapEntry.java\n \n /**\n  * Test the DefaultMapEntry class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  */\n public class TestDefaultMapEntry extends AbstractTestMapEntry {\n--- a/src/test/org/apache/commons/collections/keyvalue/TestMultiKey.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestMultiKey.java\n \n /**\n  * Unit tests for {@link org.apache.commons.collections.keyvalue.MultiKey}.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestMultiKey extends TestCase {\n--- a/src/test/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestTiedMapEntry.java\n \n /**\n  * Test the TiedMapEntry class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTiedMapEntry extends AbstractTestMapEntry {\n--- a/src/test/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n+++ b/src/test/org/apache/commons/collections/keyvalue/TestUnmodifiableMapEntry.java\n \n /**\n  * Test the UnmodifiableMapEntry class.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Neil O'Toole\n  */\n public class TestUnmodifiableMapEntry extends AbstractTestMapEntry {\n--- a/src/test/org/apache/commons/collections/list/AbstractTestList.java\n+++ b/src/test/org/apache/commons/collections/list/AbstractTestList.java\n  * protected methods from AbstractTestCollection.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Paul Jack\n  * @author Stephen Colebourne\n--- a/src/test/org/apache/commons/collections/list/TestAbstractLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestAbstractLinkedList.java\n \n /**\n  * Test case for {@link AbstractLinkedList}.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rich Dougherty\n  * @author David Hay\n  * @author Phil Steitz\n--- a/src/test/org/apache/commons/collections/list/TestAll.java\n+++ b/src/test/org/apache/commons/collections/list/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/list/TestCursorableLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestCursorableLinkedList.java\n \n /**\n  * Test class.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Rodney Waldhoff\n  * @author Simon Kitching\n  */\n--- a/src/test/org/apache/commons/collections/list/TestFixedSizeList.java\n+++ b/src/test/org/apache/commons/collections/list/TestFixedSizeList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestFixedSizeList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestGrowthList.java\n+++ b/src/test/org/apache/commons/collections/list/TestGrowthList.java\n  *\n  * @since Commons Collections 3.2\n  * @version $Revision: 155406 $ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestGrowthList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestNodeCachingLinkedList.java\n \n /**\n  * Test class for NodeCachingLinkedList, a performance optimised LinkedList.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Jeff Varszegi\n  * @author Phil Steitz\n  */\n--- a/src/test/org/apache/commons/collections/list/TestPredicatedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestPredicatedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n+++ b/src/test/org/apache/commons/collections/list/TestSetUniqueList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Matthew Hawthorne\n  * @author Tom Dunham\n  */\n--- a/src/test/org/apache/commons/collections/list/TestSynchronizedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestSynchronizedList.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestSynchronizedList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestTransformedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTransformedList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestTreeList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTreeList.java\n \n /**\n  * JUnit tests\n- * \n+ *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n  *\n--- a/src/test/org/apache/commons/collections/list/TestTypedList.java\n+++ b/src/test/org/apache/commons/collections/list/TestTypedList.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTypedList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/list/TestUnmodifiableList.java\n+++ b/src/test/org/apache/commons/collections/list/TestUnmodifiableList.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestUnmodifiableList extends AbstractTestList {\n--- a/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestIterableMap.java\n  * Abstract test class for {@link IterableMap} methods and contracts.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestIterableMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestMap.java\n  * <b>Entry Population Methods</b>\n  * <p>\n  * Override these methods if your map requires special entries:\n- * \n+ *\n  * <ul>\n  * <li>{@link #getSampleKeys()}\n  * <li>{@link #getSampleValues()}\n--- a/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestOrderedMap.java\n  * Abstract test class for {@link OrderedMap} methods and contracts.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestOrderedMap extends AbstractTestIterableMap {\n--- a/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java\n  * Abstract test class for {@link java.util.SortedMap} methods and contracts.\n  *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public abstract class AbstractTestSortedMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestAll.java\n+++ b/src/test/org/apache/commons/collections/map/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestCaseInsensitiveMap.java\n \n /**\n  * Tests for the {@link CaseInsensitiveMap} implementation.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Commons-Collections team\n  */\n public class TestCaseInsensitiveMap extends AbstractTestIterableMap {\n--- a/src/test/org/apache/commons/collections/map/TestDefaultedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestDefaultedMap.java\n  *\n  * @since Commons Collections 3.2\n  * @version $Revision: 155406 $ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestDefaultedMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestFixedSizeMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestFixedSizeMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestFixedSizeMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestFixedSizeSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestFixedSizeSortedMap extends AbstractTestSortedMap {\n--- a/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n+++ b/src/test/org/apache/commons/collections/map/TestFlat3Map.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestFlat3Map extends AbstractTestIterableMap {\n--- a/src/test/org/apache/commons/collections/map/TestHashedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestHashedMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestHashedMap extends AbstractTestIterableMap {\n--- a/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestIdentityMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestIdentityMap extends AbstractTestObject {\n--- a/src/test/org/apache/commons/collections/map/TestLRUMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLRUMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestLRUMap extends AbstractTestOrderedMap {\n--- a/src/test/org/apache/commons/collections/map/TestLazyMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLazyMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestLazyMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestLazySortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLazySortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestLazySortedMap extends AbstractTestSortedMap {\n--- a/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestLinkedMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestLinkedMap extends AbstractTestOrderedMap {\n--- a/src/test/org/apache/commons/collections/map/TestListOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestListOrderedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Matt Benson\n  */\n--- a/src/test/org/apache/commons/collections/map/TestListOrderedMap2.java\n+++ b/src/test/org/apache/commons/collections/map/TestListOrderedMap2.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestListOrderedMap2 extends AbstractTestOrderedMap {\n--- a/src/test/org/apache/commons/collections/map/TestMultiKeyMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestMultiKeyMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestMultiKeyMap extends AbstractTestIterableMap {\n--- a/src/test/org/apache/commons/collections/map/TestPredicatedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestPredicatedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedMap extends AbstractTestMap{\n--- a/src/test/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestPredicatedSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedSortedMap extends AbstractTestSortedMap{\n--- a/src/test/org/apache/commons/collections/map/TestReferenceIdentityMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestReferenceIdentityMap.java\n \n /**\n  * Tests for ReferenceIdentityMap. \n- * \n+ *\n  * @version $Revision$\n  *\n  * @author Paul Jack\n--- a/src/test/org/apache/commons/collections/map/TestReferenceMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestReferenceMap.java\n \n /**\n  * Tests for ReferenceMap. \n- * \n+ *\n  * @version $Revision$ $Date$\n  *\n  * @author Paul Jack\n--- a/src/test/org/apache/commons/collections/map/TestSingletonMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestSingletonMap.java\n \n /**\n  * JUnit tests.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestSingletonMap extends AbstractTestOrderedMap {\n--- a/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestStaticBucketMap.java\n /**\n  * Unit tests.\n  * {@link StaticBucketMap}.\n- * \n+ *\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Michael A. Smith\n  */\n public class TestStaticBucketMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestTransformedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestTransformedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedMap extends AbstractTestMap {\n--- a/src/test/org/apache/commons/collections/map/TestTransformedSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestTransformedSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedSortedMap extends AbstractTestSortedMap {\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestUnmodifiableMap extends AbstractTestIterableMap{\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableOrderedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableOrderedMap extends AbstractTestOrderedMap {\n--- a/src/test/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n+++ b/src/test/org/apache/commons/collections/map/TestUnmodifiableSortedMap.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestUnmodifiableSortedMap extends AbstractTestSortedMap {\n--- a/src/test/org/apache/commons/collections/set/AbstractTestSet.java\n+++ b/src/test/org/apache/commons/collections/set/AbstractTestSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Paul Jack\n  */\n public abstract class AbstractTestSet extends AbstractTestCollection {\n--- a/src/test/org/apache/commons/collections/set/AbstractTestSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/AbstractTestSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  * @author Dieter Wimberger\n  */\n--- a/src/test/org/apache/commons/collections/set/TestAll.java\n+++ b/src/test/org/apache/commons/collections/set/TestAll.java\n \n /**\n  * Entry point for tests.\n- * \n+ *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestAll extends TestCase {\n--- a/src/test/org/apache/commons/collections/set/TestListOrderedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestListOrderedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestListOrderedSet2.java\n+++ b/src/test/org/apache/commons/collections/set/TestListOrderedSet2.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Henning P. Schmiedehausen\n  * @author Stephen Colebourne\n  */\n--- a/src/test/org/apache/commons/collections/set/TestMapBackedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestMapBackedSet.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestMapBackedSet extends AbstractTestSet {\n--- a/src/test/org/apache/commons/collections/set/TestMapBackedSet2.java\n+++ b/src/test/org/apache/commons/collections/set/TestMapBackedSet2.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestMapBackedSet2 extends AbstractTestSet {\n--- a/src/test/org/apache/commons/collections/set/TestPredicatedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestPredicatedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedSet extends AbstractTestSet{\n--- a/src/test/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestPredicatedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestPredicatedSortedSet extends AbstractTestSortedSet{\n--- a/src/test/org/apache/commons/collections/set/TestSynchronizedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestSynchronizedSet.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestSynchronizedSet extends AbstractTestSet{\n--- a/src/test/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestSynchronizedSortedSet.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestSynchronizedSortedSet extends AbstractTestSortedSet{\n--- a/src/test/org/apache/commons/collections/set/TestTransformedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTransformedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedSet extends AbstractTestSet {\n--- a/src/test/org/apache/commons/collections/set/TestTransformedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTransformedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Stephen Colebourne\n  */\n public class TestTransformedSortedSet extends AbstractTestSortedSet {\n--- a/src/test/org/apache/commons/collections/set/TestTypedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTypedSet.java\n  *\n  * @since Commons Collections 3.1\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestTypedSet extends AbstractTestSet{\n--- a/src/test/org/apache/commons/collections/set/TestTypedSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestTypedSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestTypedSortedSet extends AbstractTestSortedSet{\n--- a/src/test/org/apache/commons/collections/set/TestUnmodifiableSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestUnmodifiableSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestUnmodifiableSet extends AbstractTestSet{\n--- a/src/test/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n+++ b/src/test/org/apache/commons/collections/set/TestUnmodifiableSortedSet.java\n  *\n  * @since Commons Collections 3.0\n  * @version $Revision$ $Date$\n- * \n+ *\n  * @author Phil Steitz\n  */\n public class TestUnmodifiableSortedSet extends AbstractTestSortedSet{", "timestamp": 1252748804, "metainfo": ""}