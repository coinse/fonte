{"sha": "5069664f183c2fdbd05df8f649d579d7016b40c8", "log": "Make getReadMethod and getWriteMethod public Solves bug 15897   ", "commit": "\n--- a/src/java/org/apache/commons/collections/BeanMap.java\n+++ b/src/java/org/apache/commons/collections/BeanMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.14 2002/10/12 22:15:19 scolebourne Exp $\n- * $Revision: 1.14 $\n- * $Date: 2002/10/12 22:15:19 $\n- *\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/BeanMap.java,v 1.15 2003/01/25 12:06:55 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 1999-2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    distribution.\n  *\n  * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n+ *    any, must include the following acknowledgment:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n  *\n  * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n  *    Foundation\" must not be used to endorse or promote products derived\n  *\n  * 5. Products derived from this software may not be called \"Apache\"\n  *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n import java.util.Set;\n \n \n-/** An implementation of Map for JavaBeans which uses introspection to\n-  * get and put properties in the bean.\n-  *\n-  * If an exception occurs during attempts to get or set a property then the\n-  * property is considered non existent in the Map\n-  *\n-  * @since 1.0\n-  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n-  */\n-\n+/** \n+ * An implementation of Map for JavaBeans which uses introspection to\n+ * get and put properties in the bean.\n+ * <p>\n+ * If an exception occurs during attempts to get or set a property then the\n+ * property is considered non existent in the Map\n+ *\n+ * @since Commons Collections 1.0\n+ * @version $Revision: 1.15 $ $Date: 2003/01/25 12:06:55 $\n+ * \n+ * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n+ * @author Stephen Colebourne\n+ */\n public class BeanMap extends AbstractMap implements Cloneable {\n \n     private transient Object bean;\n         reinitialise();\n     }\n \n+    /**\n+     * Returns the accessor for the property with the given name.\n+     *\n+     * @param name  the name of the property \n+     * @return the accessor method for the property, or null\n+     */\n+    public Method getReadMethod(String name) {\n+        return (Method) readMethods.get(name);\n+    }\n+\n+    /**\n+     * Returns the mutator for the property with the given name.\n+     *\n+     * @param name  the name of the property\n+     * @return the mutator method for the property, or null\n+     */\n+    public Method getWriteMethod(String name) {\n+        return (Method) writeMethods.get(name);\n+    }\n+\n \n     // Implementation methods\n     //-------------------------------------------------------------------------\n--- a/src/test/org/apache/commons/collections/TestBeanMap.java\n+++ b/src/test/org/apache/commons/collections/TestBeanMap.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestBeanMap.java,v 1.8 2003/01/07 23:44:19 rwaldhoff Exp $\n- * $Revision: 1.8 $\n- * $Date: 2003/01/07 23:44:19 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestBeanMap.java,v 1.9 2003/01/25 12:06:55 scolebourne Exp $\n+ * $Revision: 1.9 $\n+ * $Date: 2003/01/25 12:06:55 $\n  *\n  * ====================================================================\n  *\n package org.apache.commons.collections;\n \n import java.io.Serializable;\n+import java.lang.reflect.Method;\n import java.util.Map;\n \n import junit.framework.Test;\n         assertEquals(map1.get(\"someIntValue\"), new Integer(0));\n     }\n \n+    public void testMethodAccessor() throws Exception {\n+        BeanMap map = (BeanMap) makeFullMap();\n+        Method method = BeanWithProperties.class.getDeclaredMethod(\"getSomeIntegerValue\", null);\n+        assertEquals(method, map.getReadMethod(\"someIntegerValue\"));\n+    }\n+    \n+    public void testMethodMutator() throws Exception {\n+        BeanMap map = (BeanMap) makeFullMap();\n+        Method method = BeanWithProperties.class.getDeclaredMethod(\"setSomeIntegerValue\", new Class[] {Integer.class});\n+        assertEquals(method, map.getWriteMethod(\"someIntegerValue\"));\n+    }\n+    \n }", "timestamp": 1043496415, "metainfo": ""}