{"sha": "8b6040783b5e6b1741d156cc7a3b616e5f854d8d", "log": "Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/collections/observed/ObservableSortedSet.java\n+++ b/src/java/org/apache/commons/collections/observed/ObservableSortedSet.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedSet.java,v 1.1 2003/09/21 20:01:53 scolebourne Exp $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/java/org/apache/commons/collections/observed/Attic/ObservableSortedSet.java,v 1.2 2003/09/28 21:49:50 scolebourne Exp $\n  * ====================================================================\n  *\n  * The Apache Software License, Version 1.1\n  * See this class for details of configuration available.\n  *\n  * @since Commons Collections 3.0\n- * @version $Revision: 1.1 $ $Date: 2003/09/21 20:01:53 $\n+ * @version $Revision: 1.2 $ $Date: 2003/09/28 21:49:50 $\n  * \n  * @author Stephen Colebourne\n  */\n      * {@link org.apache.commons.collections.observed.standard.StandardModificationListener}\n      * interface and pass it in as the second parameter.\n      * <p>\n-     * Internally, an <code>ObservableSet</code> relies on a {@link ModificationHandler}.\n+     * Internally, an <code>ObservableSortedSet</code> relies on a {@link ModificationHandler}.\n      * The handler receives all the events and processes them, typically by\n      * calling listeners. Different handler implementations can be plugged in\n      * to provide a flexible event system.\n             final Object listener) {\n         \n         if (set == null) {\n-            throw new IllegalArgumentException(\"Set must not be null\");\n+            throw new IllegalArgumentException(\"SortedSet must not be null\");\n         }\n         return new ObservableSortedSet(set, listener);\n     }", "timestamp": 1064785790, "metainfo": ""}