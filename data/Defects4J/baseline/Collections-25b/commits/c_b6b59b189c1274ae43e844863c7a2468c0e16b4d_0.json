{"sha": "b6b59b189c1274ae43e844863c7a2468c0e16b4d", "log": "Flesh out the stack-related unit tests.   ", "commit": "\n--- a/src/test/org/apache/commons/collections/TestArrayStack.java\n+++ b/src/test/org/apache/commons/collections/TestArrayStack.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestArrayStack.java,v 1.1 2001/04/14 19:32:38 craigmcc Exp $\n- * $Revision: 1.1 $\n- * $Date: 2001/04/14 19:32:38 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//collections/src/test/org/apache/commons/collections/TestArrayStack.java,v 1.2 2001/04/14 19:50:31 craigmcc Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2001/04/14 19:50:31 $\n  *\n  * ====================================================================\n  *\n \n /**\n  * @author Craig McClanahan\n- * @version $Id: TestArrayStack.java,v 1.1 2001/04/14 19:32:38 craigmcc Exp $\n+ * @version $Id: TestArrayStack.java,v 1.2 2001/04/14 19:50:31 craigmcc Exp $\n  */\n \n public class TestArrayStack extends TestList {\n     }\n \n \n-    public void testNew() {\n-        assert(stack.empty());\n+    public void testNewStack() {\n+\n+        assert(\"New stack is empty\", stack.empty());\n+        assertEquals(\"New stack has size zero\", stack.size(), 0);\n+\n+        try {\n+            stack.peek();\n+            fail(\"peek() should have thrown EmptyStackException\");\n+        } catch (EmptyStackException e) {\n+            ; // Expected result\n+        }\n+\n+        try {\n+            stack.pop();\n+            fail(\"pop() should have thrown EmptyStackException\");\n+        } catch (EmptyStackException e) {\n+            ; // Expected result\n+        }\n+\n+    }\n+\n+\n+    public void testPushPeekPop() {\n+\n+        stack.push(\"First Item\");\n+        assert(\"Stack is not empty\", !stack.empty());\n+        assertEquals(\"Stack size is one\", stack.size(), 1);\n+        assertEquals(\"Top item is 'First Item'\",\n+                     (String) stack.peek(), \"First Item\");\n+        assertEquals(\"Stack size is one\", stack.size(), 1);\n+\n+        stack.push(\"Second Item\");\n+        assertEquals(\"Stack size is two\", stack.size(), 2);\n+        assertEquals(\"Top item is 'Second Item'\",\n+                     (String) stack.peek(), \"Second Item\");\n+        assertEquals(\"Stack size is two\", stack.size(), 2);\n+\n+        assertEquals(\"Popped item is 'Second Item'\",\n+                     (String) stack.pop(), \"Second Item\");\n+        assertEquals(\"Top item is 'First Item'\",\n+                     (String) stack.peek(), \"First Item\");\n+        assertEquals(\"Stack size is one\", stack.size(), 1);\n+\n+        assertEquals(\"Popped item is 'First Item'\",\n+                     (String) stack.pop(), \"First Item\");\n+        assertEquals(\"Stack size is zero\", stack.size(), 0);\n+\n+    }\n+\n+\n+    public void testSearch() {\n+\n+        stack.push(\"First Item\");\n+        stack.push(\"Second Item\");\n+        assertEquals(\"Top item is 'Second Item'\",\n+                     stack.search(\"Second Item\"), 1);\n+        assertEquals(\"Next Item is 'First Item'\",\n+                     stack.search(\"First Item\"), 2);\n+        assertEquals(\"Cannot find 'Missing Item'\",\n+                     stack.search(\"Missing Item\"), -1);\n+\n     }\n \n ", "timestamp": 987277831, "metainfo": ""}