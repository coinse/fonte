{"sha": "b3fd2560172abe0a7cf78c89b461a50d97413fab", "log": "Use long instead of int.  ", "commit": "\n--- a/src/main/java/org/apache/commons/collections4/FluentIterable.java\n+++ b/src/main/java/org/apache/commons/collections4/FluentIterable.java\n      * @return a new iterable, providing a bounded view of this iterable\n      * @throws IllegalArgumentException if maxSize is negative\n      */\n-    public FluentIterable<E> limit(final int maxSize) {\n+    public FluentIterable<E> limit(final long maxSize) {\n         return of(IterableUtils.boundedIterable(iterable, maxSize));\n     }\n \n      *   the first N elements\n      * @throws IllegalArgumentException if elementsToSkip is negative\n      */\n-    public FluentIterable<E> skip(int elementsToSkip) {\n+    public FluentIterable<E> skip(final long elementsToSkip) {\n         return of(IterableUtils.skippingIterable(iterable, elementsToSkip));\n     }\n \n--- a/src/main/java/org/apache/commons/collections4/IterableUtils.java\n+++ b/src/main/java/org/apache/commons/collections4/IterableUtils.java\n      * @return a bounded view on the specified iterable\n      * @throws IllegalArgumentException if maxSize is negative\n      */\n-    public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final int maxSize) {\n+    public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize) {\n         if (maxSize < 0) {\n             throw new IllegalArgumentException(\"maxSize parameter must not be negative.\");\n         }\n      * @return a view of the specified iterable, skipping the first N elements\n      * @throws IllegalArgumentException if elementsToSkip is negative\n      */\n-    public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final int elementsToSkip) {\n+    public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip) {\n         if (elementsToSkip < 0) {\n             throw new IllegalArgumentException(\"elementsToSkip parameter must not be negative.\");\n         }", "timestamp": 1433099327, "metainfo": ""}