{"sha": "d35f2fa7a06457469a617677eeb4c1dc21484006", "log": "Removing the Commons Lang dependency. This removes certain obscure number formats as being parseable by the PatternOptionBuilder, but I suspect they don't matter.   ", "commit": "\n--- a/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n+++ b/src/java/org/apache/commons/cli/PatternOptionBuilder.java\n  * <tr><td>b@</td><td>-b [classname]</td></tr>\n  * <tr><td>c&gt;</td><td>-c [filename]</td></tr>\n  * <tr><td>d+</td><td>-d [classname] (creates object via empty contructor)</td></tr>\n- * <tr><td>e%</td><td>-e [number] (creates Number instance)</td></tr>\n+ * <tr><td>e%</td><td>-e [number] (creates Double/Long instance depeding on existing of a '.')</td></tr>\n  * <tr><td>f/</td><td>-f [url]</td></tr>\n  * <tr><td>g:</td><td>-g [string]</td></tr>\n  * </table>\n--- a/src/java/org/apache/commons/cli/TypeHandler.java\n+++ b/src/java/org/apache/commons/cli/TypeHandler.java\n \n import java.util.Date;\n \n-import org.apache.commons.lang.math.NumberUtils;\n-\n /**\n   * This is a temporary implementation. TypeHandler will handle the \n   * pluggableness of OptionTypes and it will direct all of these types \n     }\n \n     /**\n-     * <p>Create a number from a String.</p>\n+     * <p>Create a number from a String. If a . is present, it creates a \n+     *    Double, otherwise a Long. </p>\n      *\n      * @param str the value\n      * @return the number represented by <code>str</code>, if <code>str</code>\n      */\n     public static Number createNumber(String str)\n     {\n-        // Needs to be able to create\n-        try\n-        {\n-            // do searching for decimal point etc, but atm just make an Integer\n-            return NumberUtils.createNumber(str);\n+        try\n+        {\n+            if( str != null )\n+            {\n+                if( str.indexOf('.') != -1 )\n+                {\n+                    return Double.valueOf(str);\n+                }\n+                else\n+                {\n+                    return Long.valueOf(str);\n+                }\n+            }\n         }\n         catch (NumberFormatException nfe)\n         {\n             System.err.println(nfe.getMessage());\n-\n-            return null;\n-        }\n+        }\n+\n+        return null;\n     }\n \n     /**\n         //        return FileW.findFiles(str);\n         return null;\n     }\n-}\n+}\n--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n            assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject('e'));\n            assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\n            assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject('f'));\n-           assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\n-           assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject('n'));\n+           assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\n+           assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject('n'));\n            assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\n            assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject('t'));\n            /// DATES NOT SUPPORTED YET.", "timestamp": 1180338892, "metainfo": ""}