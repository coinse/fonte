{"sha": "0f52eff086c74ad246c23a82f01b39a39c107ffa", "log": "some bug fixes submitted by Rob, removed duff println, add new OptionsTest submitted by Rob   ", "commit": "\n--- a/src/java/org/apache/commons/cli/CommandLine.java\n+++ b/src/java/org/apache/commons/cli/CommandLine.java\n             names.put( opt.getLongOpt(), key );\n         }\n \n-        if( opt.getValues() != null ) {\n-            System.out.println( opt.getKey() + \"=\" + opt.getValues().length );\n-        }\n-\n         options.put( key, opt );\n     }\n \n      * @return an array of the processed {@link Option}s.\n      */\n     public Option[] getOptions( ) {\n-        Collection processed = hashcodeMap.values();\n+        Collection processed = options.values();\n \n         // reinitialise array\n         optionsArray = new Option[ processed.size() ];\n--- a/src/java/org/apache/commons/cli/OptionGroup.java\n+++ b/src/java/org/apache/commons/cli/OptionGroup.java\n     public OptionGroup addOption(Option opt) {\n         // key   - option name\n         // value - the option\n-        optionMap.put( \"-\" + opt.getOpt(), opt );\n+        optionMap.put( opt.getKey(), opt );\n         return this;\n     }\n \n         while( iter.hasNext() ) {\n             Option option = (Option)iter.next();\n \n-            buff.append( \"-\" );\n-            buff.append( option.getOpt() );\n+            if( option.getOpt() != null ) {\n+                buff.append( \"-\" );\n+                buff.append( option.getOpt() );\n+            }\n+            else {\n+                buff.append( \"--\" );\n+                buff.append( option.getLongOpt() );\n+            }\n             buff.append( \" \" );\n             buff.append( option.getDescription( ) );\n \n--- a/src/test/org/apache/commons/cli/OptionGroupTest.java\n+++ b/src/test/org/apache/commons/cli/OptionGroupTest.java\n         group2.addOption( chapter );\n \n         _options.addOptionGroup( group2 );\n+\n+        Option importOpt = new Option( null, \"import\", false, \"section to process\" );\n+        Option exportOpt = new Option( null, \"export\", false, \"chapter to process\" );\n+        OptionGroup group3 = new OptionGroup();\n+        group3.addOption( importOpt );\n+        group3.addOption( exportOpt );\n+        _options.addOptionGroup( group3 );\n+\n         _options.addOption( \"r\", \"revision\", false, \"revision number\" );\n     }\n \n         }\n     }\n \n+    public void testValidLongOnlyOptions()\n+    {\n+        try\n+        {\n+            CommandLine cl = parser.parse( _options, new String[]{\"--export\"});\n+            assertTrue( \"Confirm --export is set\", cl.hasOption(\"export\") );\n+        }\n+        catch (ParseException e)\n+        {\n+            fail( e.toString() );\n+        }\n+                            \n+        try\n+        {\n+            CommandLine cl = parser.parse( _options, new String[]{\"--import\"});\n+            assertTrue( \"Confirm --import is set\", cl.hasOption(\"import\") );\n+        }\n+        catch (ParseException e)\n+        {\n+            fail( e.toString() );\n+        }\n+    }\n+\n \n }\n--- /dev/null\n+++ b/src/test/org/apache/commons/cli/OptionsTest.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/test/org/apache/commons/cli/OptionsTest.java,v 1.1 2002/11/19 00:16:18 jkeyes Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2002/11/19 00:16:18 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 1999-2001 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.cli;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+/**\n+ * @author Rob Oxspring roxspring@apache.org\n+ * @version $Revision: 1.1 $\n+ */\n+public class OptionsTest extends TestCase\n+{\n+\n+    public static Test suite() \n+    { \n+        return new TestSuite ( OptionsTest.class ); \n+    }\n+\n+    public OptionsTest( String name )\n+    {\n+        super( name );\n+    }\n+\n+    public void setUp()\n+    {\n+    }\n+\n+    public void tearDown()\n+    {\n+    }\n+    \n+    public void testHelpOptions(){\n+        \n+        Option longOnly1 = OptionBuilder\n+            .withLongOpt(\"long-only1\")\n+            .create();\n+        \n+        Option longOnly2 = OptionBuilder\n+            .withLongOpt(\"long-only2\")\n+            .create();\n+                \n+        Option shortOnly1 = OptionBuilder\n+            .create(\"1\");\n+                \n+        Option shortOnly2 = OptionBuilder\n+            .create(\"2\");\n+                \n+        Option bothA = OptionBuilder\n+            .withLongOpt(\"bothA\")\n+            .create(\"a\");\n+                \n+        Option bothB = OptionBuilder\n+            .withLongOpt(\"bothB\")\n+            .create(\"b\");\n+        \n+        Options options = new Options();\n+        options.addOption(longOnly1);\n+        options.addOption(longOnly2);\n+        options.addOption(shortOnly1);\n+        options.addOption(shortOnly2);\n+        options.addOption(bothA);\n+        options.addOption(bothB);\n+        \n+        Collection allOptions = new ArrayList();\n+        allOptions.add(longOnly1);\n+        allOptions.add(longOnly2);\n+        allOptions.add(shortOnly1);\n+        allOptions.add(shortOnly2);\n+        allOptions.add(bothA);\n+        allOptions.add(bothB);\n+        \n+        Collection helpOptions = options.helpOptions();\n+        \n+        assertTrue(\"Everything in all should be in help\",helpOptions.containsAll(allOptions));\n+        assertTrue(\"Everything in help should be in all\",allOptions.containsAll(helpOptions));        \n+    }\n+\n+\n+\n+}\n+", "timestamp": 1037664978, "metainfo": ""}