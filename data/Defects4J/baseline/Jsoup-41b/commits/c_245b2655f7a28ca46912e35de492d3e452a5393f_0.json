{"sha": "245b2655f7a28ca46912e35de492d3e452a5393f", "log": "1. rearrange ssl initializations to be performed only for connectons of proper class 2. extend javadoc 3. synchronize sslSocketFactory initialization", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n             conn.setInstanceFollowRedirects(false); // don't rely on native redirection support\n             conn.setConnectTimeout(req.timeout());\n             conn.setReadTimeout(req.timeout());\n-            if (!req.isValidateSSLCertificates()) {\n-                initUnSecureSSL();\n-                if (conn instanceof HttpsURLConnection) {\n-                    ((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);\n-                }\n-            }\n+\n+            if (conn instanceof HttpsURLConnection) {\n+                if (!req.isValidateSSLCertificates()) {\n+                    initUnSecureSSL();\n+                }\n+\n+                ((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);\n+            }\n+\n             if (req.method() == Method.POST)\n                 conn.setDoOutput(true);\n             if (req.cookies().size() > 0)\n         /**\n          * Initialise Trust manager that does not validate certificate chains and\n          * add it to current SSLContext.\n+         * <p/>\n+         * please not that this method will only perform action if sslSocketFactory is not yet\n+         * instantiated.\n          *\n          * @throws IOException\n          */\n-        private static void initUnSecureSSL() throws IOException {\n+        private static synchronized void initUnSecureSSL() throws IOException {\n             if ( sslSocketFactory == null) {\n                 // Create a trust manager that does not validate certificate chains\n                 final TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {", "timestamp": 1412751029, "metainfo": ""}