{"sha": "4a28f7766124469dbdd5ad6179fe84abff3cd14f", "log": "compare Tag by equals instead of == for unknown tags support", "commit": "\n--- a/src/main/java/org/jsoup/select/Evaluator.java\n+++ b/src/main/java/org/jsoup/select/Evaluator.java\n \t\t\tint pos = 0;\n         \tElements family = element.parent().children();\n         \tfor (int i = 0; i < family.size(); i++) {\n-        \t\tif (family.get(i).tag() == element.tag()) pos++;\n+        \t\tif (family.get(i).tag().equals(element.tag())) pos++;\n         \t\tif (family.get(i) == element) break;\n         \t}\n \t\t\treturn pos;\n \t\t\tint pos = 0;\n         \tElements family = element.parent().children();\n         \tfor (int i = element.elementSiblingIndex(); i < family.size(); i++) {\n-        \t\tif (family.get(i).tag() == element.tag()) pos++;\n+        \t\tif (family.get(i).tag().equals(element.tag())) pos++;\n         \t}\n \t\t\treturn pos;\n \t\t}\n--- a/src/test/java/org/jsoup/select/CssTest.java\n+++ b/src/test/java/org/jsoup/select/CssTest.java\n \t\t\tsb.append(String.format(\"<p>%d</p>\",i));\n \t\t\tsb.append(String.format(\"<span>%d</span>\",i));\n \t\t\tsb.append(String.format(\"<em>%d</em>\",i));\n+            sb.append(String.format(\"<svg>%d</svg>\",i));\n \t\t}\n \t\tsb.append(\"</div>\");\n \n \t\t}\n \t}\n \n+    @Test\n+    public void nthOfType_unknownTag() {\n+        for(int i = 1; i <=10; i++) {\n+            check(html.select(String.format(\"#type svg:nth-of-type(%d)\", i)), String.valueOf(i));\n+        }\n+    }\n \n \t@Test\n \tpublic void nthLastChild_simple() {\n \t@Test\n \tpublic void nthLastOfType_simple() {\n \t\tfor(int i = 1; i <=10; i++) {\n-\t\t\tcheck(html.select(String.format(\"#type :nth-last-of-type(%d)\", i)), String.valueOf(11-i),String.valueOf(11-i),String.valueOf(11-i));\n+\t\t\tcheck(html.select(String.format(\"#type :nth-last-of-type(%d)\", i)), String.valueOf(11-i),String.valueOf(11-i),String.valueOf(11-i),String.valueOf(11-i));\n \t\t}\n \t}\n \n \t\tcheck(html.select(\"#type p:nth-of-type(2n)\"), \"2\", \"4\", \"6\", \"8\", \"10\");\n \t\tcheck(html.select(\"#type p:nth-of-type(3n-1)\"), \"2\", \"5\", \"8\");\n \t\tcheck(html.select(\"#type p:nth-of-type(-2n+5)\"), \"1\", \"3\", \"5\");\n-\t\tcheck(html.select(\"#type :nth-of-type(+5)\"), \"5\", \"5\", \"5\");\n+\t\tcheck(html.select(\"#type :nth-of-type(+5)\"), \"5\", \"5\", \"5\", \"5\");\n \t}\n \n \t\n \t\tcheck(html.select(\"#type p:nth-last-of-type(3n-1)\"), \"3\", \"6\", \"9\");\n \n \t\tcheck(html.select(\"#type span:nth-last-of-type(-2n+5)\"), \"6\", \"8\", \"10\");\n-\t\tcheck(html.select(\"#type :nth-last-of-type(+5)\"), \"6\", \"6\", \"6\");\n+\t\tcheck(html.select(\"#type :nth-last-of-type(+5)\"), \"6\", \"6\", \"6\", \"6\");\n \t}\n \t\n \t@Test\n \tpublic void firstOfType() {\n-\t\tcheck(html.select(\"div:not(#only) :first-of-type\"), \"1\", \"1\", \"1\", \"1\");\n+\t\tcheck(html.select(\"div:not(#only) :first-of-type\"), \"1\", \"1\", \"1\", \"1\", \"1\");\n \t}\n \n \t@Test\n \tpublic void lastOfType() {\n-\t\tcheck(html.select(\"div:not(#only) :last-of-type\"), \"10\", \"10\", \"10\", \"10\");\n+\t\tcheck(html.select(\"div:not(#only) :last-of-type\"), \"10\", \"10\", \"10\", \"10\", \"10\");\n \t}\n \n \t@Test", "timestamp": 1395383564, "metainfo": ""}