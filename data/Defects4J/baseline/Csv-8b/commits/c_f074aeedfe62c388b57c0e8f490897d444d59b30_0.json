{"sha": "f074aeedfe62c388b57c0e8f490897d444d59b30", "log": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n \n     private static final long serialVersionUID = 1L;\n \n-    private final Character delimiter;\n+    private final char delimiter;\n     private final Character encapsulator;\n     private final Character commentStart;\n     private final Character escape;\n     private final String[] header;\n \n     /**\n-     * Starting format with no settings defined; used for creating other formats from scratch.\n-     */\n-    static final CSVFormat PRISTINE = new CSVFormat(null, null, null, null, false, false, null, null);\n+     * Starting format; used for creating other formats.\n+     */\n+    static final CSVFormat PRISTINE = new CSVFormat(COMMA, null, null, null, false, false, null, null);\n \n     /**\n      * Standard comma separated format, as for {@link #RFC4180} but allowing blank lines.\n      * @param header\n      *            the header\n      */\n-    public CSVFormat(final Character delimiter, final Character encapsulator, final Character commentStart, final Character escape, final \n+    public CSVFormat(final char delimiter, final Character encapsulator, final Character commentStart, final Character escape, final \n             boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String lineSeparator, final String[] header) {\n         this.delimiter = delimiter;\n         this.encapsulator = encapsulator;\n      * @throws IllegalStateException\n      */\n     void validate() throws IllegalStateException {\n-        if (delimiter == null) {\n-            throw new IllegalStateException(\"The delimiter character cannot be null\");\n-        }\n-\n         if (delimiter == encapsulator) {\n             throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same ('\" + encapsulator + \"')\");\n         }", "timestamp": 1350155108, "metainfo": ""}