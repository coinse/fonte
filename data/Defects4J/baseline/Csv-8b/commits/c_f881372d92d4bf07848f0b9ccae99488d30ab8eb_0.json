{"sha": "f881372d92d4bf07848f0b9ccae99488d30ab8eb", "log": "Validate that headers do not contain duplicates.  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n \n package org.apache.commons.csv;\n \n+import static org.apache.commons.csv.Constants.BACKSLASH;\n import static org.apache.commons.csv.Constants.COMMA;\n import static org.apache.commons.csv.Constants.CR;\n import static org.apache.commons.csv.Constants.CRLF;\n import static org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR;\n-import static org.apache.commons.csv.Constants.BACKSLASH;\n import static org.apache.commons.csv.Constants.LF;\n import static org.apache.commons.csv.Constants.TAB;\n \n import java.io.Serializable;\n import java.io.StringWriter;\n import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n \n /**\n  * Specifies the format of a CSV file and parses input.\n         if (escape == null && quotePolicy == Quote.NONE) {\n             throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n         }\n+        \n+        if (header != null) {\n+            Set<String> set = new HashSet<String>(header.length);\n+            set.addAll(Arrays.asList(header));\n+            if (set.size() != header.length) {\n+                throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+            }\n+        }\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n         CSVFormat.DEFAULT.withDelimiter('!').withEscape('!').validate();\n     }\n \n+    @Test(expected = IllegalStateException.class)\n+    public void testDuplicateHeaderElements() {\n+        CSVFormat.DEFAULT.withHeader(\"A\", \"A\").validate();\n+    }\n+\n     @Test\n     public void testEquals() {\n         final CSVFormat right = CSVFormat.DEFAULT;", "timestamp": 1375217055, "metainfo": ""}