{"sha": "d422c1a8b5a7f4567ae138ae7c1fd68077f94776", "log": "Simplify and avoid boxing  ", "commit": "\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n         assertEquals('!', format.getEscape());\n         assertEquals(\"\\r\\n\", format.getLineSeparator());\n         \n-        assertEquals(true, format.isLeadingSpacesIgnored());\n-        assertEquals(true, format.isTrailingSpacesIgnored());\n-        assertEquals(true, format.isEmptyLinesIgnored());\n-        assertEquals(true, format.isUnicodeEscapesInterpreted());\n+        assertTrue(format.isLeadingSpacesIgnored());\n+        assertTrue(format.isTrailingSpacesIgnored());\n+        assertTrue(format.isEmptyLinesIgnored());\n+        assertTrue(format.isUnicodeEscapesInterpreted());\n     }\n \n     @Test\n         assertEquals(\"?\", format.withLineSeparator(\"?\").getLineSeparator());\n         assertEquals('?', format.withEscape('?').getEscape());\n         \n-        assertEquals(false, format.withLeadingSpacesIgnored(false).isLeadingSpacesIgnored());\n-        assertEquals(false, format.withTrailingSpacesIgnored(false).isTrailingSpacesIgnored());\n-        assertEquals(false, format.withSurroundingSpacesIgnored(false).isLeadingSpacesIgnored());\n-        assertEquals(false, format.withSurroundingSpacesIgnored(false).isTrailingSpacesIgnored());\n-        assertEquals(false, format.withEmptyLinesIgnored(false).isEmptyLinesIgnored());\n-        assertEquals(false, format.withUnicodeEscapesInterpreted(false).isUnicodeEscapesInterpreted());\n+        assertFalse(format.withLeadingSpacesIgnored(false).isLeadingSpacesIgnored());\n+        assertFalse(format.withTrailingSpacesIgnored(false).isTrailingSpacesIgnored());\n+        assertFalse(format.withSurroundingSpacesIgnored(false).isLeadingSpacesIgnored());\n+        assertFalse(format.withSurroundingSpacesIgnored(false).isTrailingSpacesIgnored());\n+        assertFalse(format.withEmptyLinesIgnored(false).isEmptyLinesIgnored());\n+        assertFalse(format.withUnicodeEscapesInterpreted(false).isUnicodeEscapesInterpreted());\n     }\n \n     @Test", "timestamp": 1331957864, "metainfo": ""}