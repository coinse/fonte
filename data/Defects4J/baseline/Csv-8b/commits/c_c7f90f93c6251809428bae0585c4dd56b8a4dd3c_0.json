{"sha": "c7f90f93c6251809428bae0585c4dd56b8a4dd3c", "log": "Changed the default line separator to \\r\\n to comply with RFC 4180 (SANDBOX-163)  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVFormat.java\n+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java\n     private boolean trailingSpacesIgnored = true;\n     private boolean unicodeEscapesInterpreted = false;\n     private boolean emptyLinesIgnored = true;\n-    private String lineSeparator = \"\\n\";\n+    private String lineSeparator = \"\\r\\n\";\n \n \n     /**\n      */\n     public static final char DISABLED = '\\ufffe';\n \n-    /** Standard comma separated format. */\n+    /** Standard comma separated format as defined by RFC 4180. */\n     public static final CSVFormat DEFAULT = new CSVFormat(',', '\"', DISABLED, DISABLED, true, true, false, true);\n \n     /** Excel file format (using a comma as the value delimiter). */\n--- a/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVFormatTest.java\n         assertEquals('!', format.getDelimiter());\n         assertEquals('!', format.getEncapsulator());\n         assertEquals('!', format.getCommentStart());\n-        assertEquals(\"\\n\", format.getLineSeparator());\n         assertEquals('!', format.getEscape());\n+        assertEquals(\"\\r\\n\", format.getLineSeparator());\n         \n         assertEquals(true, format.isLeadingSpacesIgnored());\n         assertEquals(true, format.isTrailingSpacesIgnored());\n--- a/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n+++ b/src/test/java/org/apache/commons/csv/CSVPrinterTest.java\n  */\n public class CSVPrinterTest extends TestCase {\n \n-    String lineSeparator = \"\\n\";\n+    String lineSeparator = \"\\r\\n\";\n \n     public void testPrinter1() throws IOException {\n         StringWriter sw = new StringWriter();", "timestamp": 1321057016, "metainfo": ""}