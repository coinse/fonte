{"sha": "5daf49a1801071d95c762db561cf6b9970b018a1", "log": "Add API org.apache.commons.csv.CSVParser.getRecords(T).  ", "commit": "\n--- a/src/main/java/org/apache/commons/csv/CSVParser.java\n+++ b/src/main/java/org/apache/commons/csv/CSVParser.java\n import java.net.URL;\n import java.nio.charset.Charset;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n      *             on parse error or input read-failure\n      */\n     public List<CSVRecord> getRecords() throws IOException {\n-        final List<CSVRecord> records = new ArrayList<CSVRecord>();\n+        return getRecords(new ArrayList<CSVRecord>());\n+    }\n+\n+    /**\n+     * Parses the CSV input according to the given format and adds the content to the collection of {@link CSVRecord\n+     * CSVRecords}.\n+     * <p/>\n+     * The returned content starts at the current parse-position in the stream.\n+     * \n+     * @param records\n+     *            The collection to add to.\n+     * @return a collection of {@link CSVRecord CSVRecords}, may be empty\n+     * @throws IOException\n+     *             on parse error or input read-failure\n+     */\n+    public <T extends Collection<CSVRecord>> T getRecords(T records) throws IOException {\n         CSVRecord rec;\n         while ((rec = this.nextRecord()) != null) {\n             records.add(rec);", "timestamp": 1396654097, "metainfo": ""}