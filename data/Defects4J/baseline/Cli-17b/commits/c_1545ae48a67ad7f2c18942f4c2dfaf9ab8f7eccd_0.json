{"sha": "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd", "log": "Applying Brian Egge's patch to CLI-21 that resurrects the clone() method  ", "commit": "\n--- a/src/java/org/apache/commons/cli/Option.java\n+++ b/src/java/org/apache/commons/cli/Option.java\n  * @author <a href=\"mailto:jstrachan@apache.org\">James Strachan</a>\n  * @version $Revision$\n  */\n-public class Option {\n+public class Option implements Cloneable {\n \n     /** constant that specifies the number of argument values has \n         not been specified */\n         return result;\n     }\n \n+    protected Object clone() throws CloneNotSupportedException {\n+        Option option = (Option) super.clone();\n+        option.values = new ArrayList(values);\n+        return option;\n+    }\n+\n     /**\n      * <p>Clear the Option values. After a \n      * parse is complete, these are left with data in them \n--- a/src/test/org/apache/commons/cli/OptionTest.java\n+++ b/src/test/org/apache/commons/cli/OptionTest.java\n        option.clearValues();\n        assertEquals(0, option.getValuesList().size());\n    }\n-    \n+\n+    // See http://issues.apache.org/jira/browse/CLI-21\n+    public void testClone() throws CloneNotSupportedException {\n+        Option a = new Option(\"a\", true, \"\");\n+        Option b = (Option) a.clone();\n+        assertEquals(a, b);\n+        assertNotSame(a, b);\n+        a.setDescription(\"a\");\n+        assertEquals(\"\", b.getDescription());\n+        b.setArgs(2);\n+        b.addValue(\"b1\");\n+        b.addValue(\"b2\");\n+        assertEquals(1, a.getArgs());\n+        assertEquals(0, a.getValuesList().size());\n+        assertEquals(2, b.getValues().length);\n+    }\n+\n+    private static class DefaultOption extends Option {\n+\n+        private final String defaultValue;\n+\n+        public DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException {\n+            super(opt, true, description);\n+            this.defaultValue = defaultValue;\n+        }\n+\n+        public String getValue() {\n+            return super.getValue() != null ? super.getValue() : defaultValue;\n+        }\n+    }\n+\n+    public void testSubclass() throws CloneNotSupportedException {\n+        Option option = new DefaultOption(\"f\", \"file\", \"myfile.txt\");\n+        Option clone = (Option) option.clone();\n+        assertEquals(\"myfile.txt\", clone.getValue());\n+        assertEquals(DefaultOption.class, clone.getClass());\n+    }\n+\n }", "timestamp": 1181922695, "metainfo": ""}