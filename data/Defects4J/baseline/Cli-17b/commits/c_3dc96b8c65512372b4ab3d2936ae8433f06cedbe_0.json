{"sha": "3dc96b8c65512372b4ab3d2936ae8433f06cedbe", "log": "Minor source refactoring  ", "commit": "\n--- a/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n+++ b/src/test/org/apache/commons/cli/PatternOptionBuilderTest.java\n public class PatternOptionBuilderTest\n extends TestCase\n {\n-    public static void main( String[] args )\n-   {\n-      String[] testName = { PatternOptionBuilderTest.class.getName() };\n-      junit.textui.TestRunner.main(testName);\n-   }\n \n    public static TestSuite suite()\n    {\n       return new TestSuite(PatternOptionBuilderTest.class);\n-   }\n-\n-   public PatternOptionBuilderTest( String s )\n-   {\n-      super( s );\n    }\n \n    public void testSimplePattern()\n            CommandLineParser parser = new PosixParser();\n            CommandLine line = parser.parse(options,args);\n \n-           // tests the char methods of CommandLine that delegate to\n-           // the String methods\n            assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\n+           assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\n+           assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\n+           assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\n+           assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\n+           assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\n+           assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\n+           assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\n+           assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\n+\n+           // tests the char methods of CommandLine that delegate to the String methods\n            assertEquals(\"flag a\", \"foo\", line.getOptionValue('a'));\n-           assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\n            assertEquals(\"string flag a\", \"foo\", line.getOptionObject('a'));\n-           assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\n            assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject('b'));\n-           assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\n-           assertEquals(\"boolean true flag c\", true, line.hasOption('c'));\n-           assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\n-           assertEquals(\"boolean false flag d\", false, line.hasOption('d'));\n-           assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\n+           assertTrue(\"boolean true flag c\", line.hasOption('c'));\n+           assertFalse(\"boolean false flag d\", line.hasOption('d'));\n            assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject('e'));\n-           assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\n            assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject('f'));\n-           assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\n            assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject('n'));\n-           assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\n            assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject('t'));\n+\n            /// DATES NOT SUPPORTED YET.\n            //      assertEquals(\"number flag t\", new java.util.Date(1023400137276L), line.getOptionObject('z'));\n            //     input is:  \"Thu Jun 06 17:48:57 EDT 2002\"", "timestamp": 1180339134, "metainfo": ""}