{
	"Jsoup-1b": [
		{
			"class_file": "org/jsoup/nodes/Document.java",
			"method_name": "normalise",
			"arg_types": "Lorg/jsoup/nodes/Element;",
			"type": "method",
			"signature": "org.jsoup.nodes.Document.normalise(org.jsoup.nodes.Element)",
			"begin_line": 113,
			"end_line": 128,
			"comment": " does not recurse."
		}
	],
	"Jsoup-2b": [
		{
			"class_file": "org/jsoup/parser/Parser.java",
			"method_name": "parseStartTag",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Parser.parseStartTag()",
			"begin_line": 116,
			"end_line": 165,
			"comment": ""
		}
	],
	"Jsoup-3b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "prepend",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.prepend(java.lang.String)",
			"begin_line": 284,
			"end_line": 295,
			"comment": "\n     * Add inner HTML to this element. The supplied HTML will be parsed, and each node prepended to the start of the children.\n     * @param html HTML to add inside this element, before the existing HTML\n     * @return this element\n     * @see #html(String)\n     "
		},
		{
			"class_file": "org/jsoup/parser/Parser.java",
			"method_name": "stackHasValidParent",
			"arg_types": "Lorg/jsoup/parser/Tag;",
			"type": "method",
			"signature": "org.jsoup.parser.Parser.stackHasValidParent(org.jsoup.parser.Tag)",
			"begin_line": 249,
			"end_line": 263,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "wrap",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.wrap(java.lang.String)",
			"begin_line": 311,
			"end_line": 333,
			"comment": "\n     Wrap the supplied HTML around this element.\n     @param html HTML to wrap around this element, e.g. {@code <div class=\"head\"></div>}. Can be arbitralily deep.\n     @return this element, for chaining.\n     "
		},
		{
			"class_file": "org/jsoup/parser/Parser.java",
			"method_name": "addChildToParent",
			"arg_types": "Lorg/jsoup/nodes/Element;Z",
			"type": "method",
			"signature": "org.jsoup.parser.Parser.addChildToParent(org.jsoup.nodes.Element, boolean)",
			"begin_line": 219,
			"end_line": 247,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tag.java",
			"method_name": "isValidParent",
			"arg_types": "Lorg/jsoup/parser/Tag;",
			"type": "method",
			"signature": "org.jsoup.parser.Tag.isValidParent(org.jsoup.parser.Tag)",
			"begin_line": 156,
			"end_line": 166,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tag.java",
			"method_name": "canContain",
			"arg_types": "Lorg/jsoup/parser/Tag;",
			"type": "method",
			"signature": "org.jsoup.parser.Tag.canContain(org.jsoup.parser.Tag)",
			"begin_line": 67,
			"end_line": 101,
			"comment": "\n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "append",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.append(java.lang.String)",
			"begin_line": 267,
			"end_line": 276,
			"comment": "\n     * Add inner HTML to this element. The supplied HTML will be parsed, and each node appended to the end of the children.\n     * @param html HTML to add inside this element, after the existing HTML\n     * @return this element\n     * @see #html(String)\n     "
		}
	],
	"Jsoup-4b": [
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "unescape",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Entities.unescape(java.lang.String)",
			"begin_line": 47,
			"end_line": 78,
			"comment": ""
		}
	],
	"Jsoup-5b": [
		{
			"class_file": "org/jsoup/parser/Parser.java",
			"method_name": "parseAttribute",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Parser.parseAttribute()",
			"begin_line": 181,
			"end_line": 210,
			"comment": ""
		}
	],
	"Jsoup-6b": [
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "unescape",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Entities.unescape(java.lang.String)",
			"begin_line": 45,
			"end_line": 77,
			"comment": ""
		}
	],
	"Jsoup-7b": [
		{
			"class_file": "org/jsoup/nodes/Document.java",
			"method_name": "normalise",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Document.normalise()",
			"begin_line": 98,
			"end_line": 115,
			"comment": "\n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
		}
	],
	"Jsoup-8b": [
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "outerHtml",
			"arg_types": "Ljava/lang/StringBuilder;",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.outerHtml(java.lang.StringBuilder)",
			"begin_line": 362,
			"end_line": 364,
			"comment": ""
		}
	],
	"Jsoup-9b": [
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"unescapePattern"
			],
			"begin_line": 38,
			"end_line": 38,
			"comment": ""
		}
	],
	"Jsoup-10b": [
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "absUrl",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.absUrl(java.lang.String)",
			"begin_line": 156,
			"end_line": 179,
			"comment": "\n     * Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href></code> or\n     * <code>&lt;img src></code>).\n     * <p/>\n     * E.g.: <code>String absUrl = linkEl.absUrl(\"href\");</code>\n     * <p/>\n     * If the attribute value is already absolute (i.e. it starts with a protocol, like\n     * <code>http://</code> or <code>https://</code> etc), and it successfully parses as a URL, the attribute is\n     * returned directly. Otherwise, it is treated as a URL relative to the element's {@link #baseUri}, and made\n     * absolute using that.\n     * <p/>\n     * As an alternate, you can use the {@link #attr} method with the <code>abs:</code> prefix, e.g.:\n     * <code>String absUrl = linkEl.attr(\"abs:href\");</code>\n     *\n     * @param attributeKey The attribute key\n     * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or\n     * could not be made successfully into a URL.\n     * @see #attr\n     * @see java.net.URL#URL(java.net.URL, String)\n     "
		}
	],
	"Jsoup-11b": [
		{
			"class_file": "org/jsoup/select/Selector.java",
			"method_name": "findElements",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.select.Selector.findElements()",
			"begin_line": 154,
			"end_line": 184,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/select/Selector.java",
			"method_name": "select",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.select.Selector.select()",
			"begin_line": 104,
			"end_line": 133,
			"comment": ""
		}
	],
	"Jsoup-12b": [
		{
			"class_file": "org/jsoup/select/Selector.java",
			"method_name": "combinator",
			"arg_types": "C",
			"type": "method",
			"signature": "org.jsoup.select.Selector.combinator(char)",
			"begin_line": 137,
			"end_line": 154,
			"comment": ""
		}
	],
	"Jsoup-13b": [
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "hasAttr",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.hasAttr(java.lang.String)",
			"begin_line": 104,
			"end_line": 108,
			"comment": "\n     * Test if this element has an attribute.\n     * @param attributeKey The attribute key to check.\n     * @return true if the attribute exists, false if not.\n     "
		}
	],
	"Jsoup-14b": [
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 214,
			"end_line": 224,
			"comment": " from < in rcdata"
		}
	],
	"Jsoup-15b": [
		{
			"class_file": "org/jsoup/parser/TreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.TreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)",
			"begin_line": 246,
			"end_line": 761,
			"comment": ""
		}
	],
	"Jsoup-16b": [
		{
			"class_file": "org/jsoup/nodes/DocumentType.java",
			"method_name": "outerHtmlHead",
			"arg_types": "Ljava/lang/StringBuilder;ILorg/jsoup/nodes/Document$OutputSettings;",
			"type": "method",
			"signature": "org.jsoup.nodes.DocumentType.outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document.OutputSettings)",
			"begin_line": 31,
			"end_line": 39,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/DocumentType.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;",
			"type": "constructor",
			"signature": "org.jsoup.nodes.DocumentType.DocumentType(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
			"begin_line": 18,
			"end_line": 24,
			"comment": "\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     "
		}
	],
	"Jsoup-17b": [
		{
			"class_file": "org/jsoup/parser/TreeBuilderState.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"nullString"
			],
			"begin_line": 1451,
			"end_line": 1451,
			"comment": ""
		}
	],
	"Jsoup-18b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "consumeToEnd",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.CharacterReader.consumeToEnd()",
			"begin_line": 98,
			"end_line": 102,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;",
			"type": "constructor",
			"signature": "org.jsoup.parser.CharacterReader.CharacterReader(java.lang.String)",
			"begin_line": 16,
			"end_line": 21,
			"comment": ""
		}
	],
	"Jsoup-19b": [
		{
			"class_file": "org/jsoup/safety/Whitelist.java",
			"method_name": "testValidProtocol",
			"arg_types": "Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Attribute;Ljava/util/Set;",
			"type": "method",
			"signature": "org.jsoup.safety.Whitelist.testValidProtocol(org.jsoup.nodes.Element, org.jsoup.nodes.Attribute, java.util.Set<org.jsoup.safety.Whitelist.Protocol>)",
			"begin_line": 338,
			"end_line": 352,
			"comment": ""
		}
	],
	"Jsoup-20b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseByteData",
			"arg_types": "Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 73,
			"end_line": 103,
			"comment": " switching the chartset midstream when a meta http-equiv tag defines the charset."
		}
	],
	"Jsoup-21b": [
		{
			"class_file": "org/jsoup/select/QueryParser.java",
			"method_name": "combinator",
			"arg_types": "C",
			"type": "method",
			"signature": "org.jsoup.select.QueryParser.combinator(char)",
			"begin_line": 81,
			"end_line": 103,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/select/QueryParser.java",
			"method_name": "parse",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.select.QueryParser.parse()",
			"begin_line": 44,
			"end_line": 79,
			"comment": "\n     * Parse the query\n     * @return Evaluator\n     "
		}
	],
	"Jsoup-22b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "siblingElements",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.siblingElements()",
			"begin_line": 433,
			"end_line": 436,
			"comment": "\n     * Get sibling elements. If the element has no sibling elements, returns an empty list. An element is not a sibling\n     * of itself, so will not be included in the returned list.\n     * @return sibling elements\n     "
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "nextElementSibling",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.nextElementSibling()",
			"begin_line": 446,
			"end_line": 454,
			"comment": "\n     * Gets the next sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code nextElementSibling} of the first {@code p} is the second {@code p}.\n     * <p/>\n     * This is similar to {@link #nextSibling()}, but specifically finds only Elements\n     * @return the next element, or null if there is no next element\n     * @see #previousElementSibling()\n     "
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "previousElementSibling",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.previousElementSibling()",
			"begin_line": 461,
			"end_line": 469,
			"comment": "\n     * Gets the previous element sibling of this element.\n     * @return the previous element, or null if there is no previous element\n     * @see #nextElementSibling()\n     "
		},
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "previousSibling",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.previousSibling()",
			"begin_line": 469,
			"end_line": 478,
			"comment": "\n     Get this node's previous sibling.\n     @return the previous sibling, or null if this is the first sibling\n     "
		},
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "siblingNodes",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.siblingNodes()",
			"begin_line": 443,
			"end_line": 446,
			"comment": "\n     Retrieves this node's sibling nodes. Similar to {@link #childNodes()  node.parent.childNodes()}, but does not\n     include this node (a node is not a sibling of itself).\n     @return node siblings. If the node has no parent, returns an empty list.\n     "
		}
	],
	"Jsoup-23b": [
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "consumeCharacterReference",
			"arg_types": "Ljava/lang/Character;Z",
			"type": "method",
			"signature": "org.jsoup.parser.Tokeniser.consumeCharacterReference(java.lang.Character, boolean)",
			"begin_line": 100,
			"end_line": 162,
			"comment": ""
		}
	],
	"Jsoup-24b": [
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 553,
			"end_line": 586,
			"comment": ""
		}
	],
	"Jsoup-25b": [
		{
			"class_file": "org/jsoup/parser/Tag.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"preserveWhitespaceTags"
			],
			"begin_line": 218,
			"end_line": 218,
			"comment": ""
		}
	],
	"Jsoup-26b": [
		{
			"class_file": "org/jsoup/safety/Cleaner.java",
			"method_name": "clean",
			"arg_types": "Lorg/jsoup/nodes/Document;",
			"type": "method",
			"signature": "org.jsoup.safety.Cleaner.clean(org.jsoup.nodes.Document)",
			"begin_line": 39,
			"end_line": 46,
			"comment": "\n     Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n     The original document is not modified. Only elements from the dirt document's <code>body</code> are used.\n     @param dirtyDocument Untrusted base document to clean.\n     @return cleaned document.\n     "
		}
	],
	"Jsoup-27b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "getCharsetFromContentType",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.getCharsetFromContentType(java.lang.String)",
			"begin_line": 127,
			"end_line": 136,
			"comment": "\n     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\n     * will kick in.)\n     * @param contentType e.g. \"text/html; charset=EUC-JP\"\n     * @return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n     "
		}
	],
	"Jsoup-28b": [
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "consumeCharacterReference",
			"arg_types": "Ljava/lang/Character;Z",
			"type": "method",
			"signature": "org.jsoup.parser.Tokeniser.consumeCharacterReference(java.lang.Character, boolean)",
			"begin_line": 100,
			"end_line": 164,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "unescape",
			"arg_types": "Ljava/lang/String;Z",
			"type": "method",
			"signature": "org.jsoup.nodes.Entities.unescape(java.lang.String, boolean)",
			"begin_line": 102,
			"end_line": 130,
			"comment": "\n     * Unescape the input string.\n     * @param string\n     * @param strict if \"strict\" (that is, requires trailing ';' char, otherwise that's optional)\n     * @return\n     "
		}
	],
	"Jsoup-29b": [
		{
			"class_file": "org/jsoup/nodes/Document.java",
			"method_name": "title",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Document.title()",
			"begin_line": 66,
			"end_line": 70,
			"comment": "\n     Get the string contents of the document's {@code title} element.\n     @return Trimmed title, or empty string if none set.\n     "
		}
	],
	"Jsoup-30b": [
		{
			"class_file": "org/jsoup/safety/Cleaner.java",
			"method_name": "copySafeNodes",
			"arg_types": "Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;",
			"type": "method",
			"signature": "org.jsoup.safety.Cleaner.copySafeNodes(org.jsoup.nodes.Element, org.jsoup.nodes.Element)",
			"begin_line": 70,
			"end_line": 98,
			"comment": "\n     Iterates the input and copies trusted nodes (tags, attributes, text) into the destination.\n     "
		}
	],
	"Jsoup-31b": [
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 1089,
			"end_line": 1098,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$Comment;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.insert(org.jsoup.parser.Token.Comment)",
			"begin_line": 64,
			"end_line": 68,
			"comment": ""
		}
	],
	"Jsoup-32b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "clone",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.clone()",
			"begin_line": 1135,
			"end_line": 1140,
			"comment": ""
		}
	],
	"Jsoup-33b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$StartTag;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.insert(org.jsoup.parser.Token.StartTag)",
			"begin_line": 156,
			"end_line": 169,
			"comment": ""
		}
	],
	"Jsoup-34b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "nextIndexOf",
			"arg_types": "Ljava/lang/CharSequence;",
			"type": "method",
			"signature": "org.jsoup.parser.CharacterReader.nextIndexOf(java.lang.CharSequence)",
			"begin_line": 82,
			"end_line": 98,
			"comment": "\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     "
		}
	],
	"Jsoup-35b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 247,
			"end_line": 763,
			"comment": ""
		}
	],
	"Jsoup-36b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseByteData",
			"arg_types": "Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 74,
			"end_line": 113,
			"comment": " switching the chartset midstream when a meta http-equiv tag defines the charset."
		},
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "getCharsetFromContentType",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.getCharsetFromContentType(java.lang.String)",
			"begin_line": 156,
			"end_line": 167,
			"comment": "\n     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\n     * will kick in.)\n     * @param contentType e.g. \"text/html; charset=EUC-JP\"\n     * @return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n     "
		},
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"charsetPattern"
			],
			"begin_line": 19,
			"end_line": 19,
			"comment": ""
		}
	],
	"Jsoup-37b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "html",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.html()",
			"begin_line": 1098,
			"end_line": 1102,
			"comment": "\n     * Retrieves the element's inner HTML. E.g. on a {@code <div>} with one empty {@code <p>}, would return\n     * {@code <p></p>}. (Whereas {@link #outerHtml()} would return {@code <div><p></p></div>}.)\n     * \n     * @return String of HTML.\n     * @see #outerHtml()\n     "
		}
	],
	"Jsoup-38b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 247,
			"end_line": 753,
			"comment": ""
		}
	],
	"Jsoup-39b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseByteData",
			"arg_types": "Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 76,
			"end_line": 125,
			"comment": " todo - this is getting gnarly. needs a rewrite."
		}
	],
	"Jsoup-40b": [
		{
			"class_file": "org/jsoup/nodes/DocumentType.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;",
			"type": "constructor",
			"signature": "org.jsoup.nodes.DocumentType.DocumentType(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
			"begin_line": 19,
			"end_line": 26,
			"comment": "\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     "
		}
	],
	"Jsoup-41b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "equals",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.equals(java.lang.Object)",
			"begin_line": 1167,
			"end_line": 1176,
			"comment": ""
		}
	],
	"Jsoup-42b": [
		{
			"class_file": "org/jsoup/nodes/FormElement.java",
			"method_name": "formData",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.FormElement.formData()",
			"begin_line": 74,
			"end_line": 107,
			"comment": "\n     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the\n     * list will not be reflected in the DOM.\n     * @return a list of key vals\n     "
		}
	],
	"Jsoup-43b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "indexInList",
			"arg_types": "Lorg/jsoup/nodes/Element;Ljava/util/List;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.indexInList(org.jsoup.nodes.Element, java.util.List<E>)",
			"begin_line": 568,
			"end_line": 578,
			"comment": ""
		}
	],
	"Jsoup-44b": [
		{
			"class_file": "org/jsoup/parser/TreeBuilder.java",
			"method_name": "processEndTag",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.TreeBuilder.processEndTag(java.lang.String)",
			"begin_line": 70,
			"end_line": 72,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/TreeBuilder.java",
			"method_name": "processStartTag",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.TreeBuilder.processStartTag(java.lang.String)",
			"begin_line": 60,
			"end_line": 62,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/TreeBuilder.java",
			"method_name": "processStartTag",
			"arg_types": "Ljava/lang/String;Lorg/jsoup/nodes/Attributes;",
			"type": "method",
			"signature": "org.jsoup.parser.TreeBuilder.processStartTag(java.lang.String, org.jsoup.nodes.Attributes)",
			"begin_line": 64,
			"end_line": 68,
			"comment": ""
		}
	],
	"Jsoup-45b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "resetInsertionMode",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.resetInsertionMode()",
			"begin_line": 382,
			"end_line": 429,
			"comment": ""
		}
	],
	"Jsoup-46b": [
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "escape",
			"arg_types": "Ljava/lang/StringBuilder;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ",
			"type": "method",
			"signature": "org.jsoup.nodes.Entities.escape(java.lang.StringBuilder, java.lang.String, org.jsoup.nodes.Document.OutputSettings, boolean, boolean, boolean)",
			"begin_line": 79,
			"end_line": 154,
			"comment": " this method is ugly, and does a lot. but other breakups cause rescanning and stringbuilder generations"
		}
	],
	"Jsoup-47b": [
		{
			"class_file": "org/jsoup/nodes/Entities.java",
			"method_name": "escape",
			"arg_types": "Ljava/lang/StringBuilder;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ",
			"type": "method",
			"signature": "org.jsoup.nodes.Entities.escape(java.lang.StringBuilder, java.lang.String, org.jsoup.nodes.Document.OutputSettings, boolean, boolean, boolean)",
			"begin_line": 79,
			"end_line": 155,
			"comment": " this method is ugly, and does a lot. but other breakups cause rescanning and stringbuilder generations"
		}
	],
	"Jsoup-48b": [
		{
			"class_file": "org/jsoup/helper/HttpConnection.java",
			"method_name": "processResponseHeaders",
			"arg_types": "Ljava/util/Map;",
			"type": "method",
			"signature": "org.jsoup.helper.HttpConnection.Response.processResponseHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)",
			"begin_line": 753,
			"end_line": 777,
			"comment": ""
		}
	],
	"Jsoup-49b": [
		{
			"class_file": "org/jsoup/nodes/Node.java",
			"method_name": "addChildren",
			"arg_types": "I[Lorg/jsoup/nodes/Node;",
			"type": "method",
			"signature": "org.jsoup.nodes.Node.addChildren(int, org.jsoup.nodes.Node...)",
			"begin_line": 438,
			"end_line": 447,
			"comment": ""
		}
	],
	"Jsoup-50b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseByteData",
			"arg_types": "Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 88,
			"end_line": 138,
			"comment": " todo - this is getting gnarly. needs a rewrite."
		}
	],
	"Jsoup-51b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "matchesLetter",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.CharacterReader.matchesLetter()",
			"begin_line": 296,
			"end_line": 301,
			"comment": ""
		}
	],
	"Jsoup-52b": [
		{
			"class_file": "org/jsoup/nodes/XmlDeclaration.java",
			"method_name": "outerHtmlHead",
			"arg_types": "Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;",
			"type": "method",
			"signature": "org.jsoup.nodes.XmlDeclaration.outerHtmlHead(java.lang.Appendable, int, org.jsoup.nodes.Document.OutputSettings)",
			"begin_line": 64,
			"end_line": 70,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$Comment;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.insert(org.jsoup.parser.Token.Comment)",
			"begin_line": 69,
			"end_line": 81,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/XmlDeclaration.java",
			"method_name": "getWholeDeclaration",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.XmlDeclaration.getWholeDeclaration()",
			"begin_line": 45,
			"end_line": 62,
			"comment": "\n     Get the unencoded XML declaration.\n     @return XML declaration\n     "
		},
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseByteData",
			"arg_types": "Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 94,
			"end_line": 146,
			"comment": " todo - this is getting gnarly. needs a rewrite."
		}
	],
	"Jsoup-53b": [
		{
			"class_file": "org/jsoup/parser/TokenQueue.java",
			"method_name": "chompBalanced",
			"arg_types": "CC",
			"type": "method",
			"signature": "org.jsoup.parser.TokenQueue.chompBalanced(char, char)",
			"begin_line": 260,
			"end_line": 284,
			"comment": "\n     * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n     * contains text strings; use unescape for that.\n     * @param open opener\n     * @param close closer\n     * @return data matched from the queue\n     "
		}
	],
	"Jsoup-54b": [
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "copyAttributes",
			"arg_types": "Lorg/jsoup/nodes/Node;Lorg/w3c/dom/Element;",
			"type": "method",
			"signature": "copyAttributes(org.jsoup.nodes.Node, Element)",
			"begin_line": 122,
			"end_line": 128,
			"comment": ""
		}
	],
	"Jsoup-55b": [
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 869,
			"end_line": 885,
			"comment": ""
		}
	],
	"Jsoup-56b": [
		{
			"class_file": "org/jsoup/nodes/DocumentType.java",
			"method_name": "outerHtmlHead",
			"arg_types": "Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;",
			"type": "method",
			"signature": "org.jsoup.nodes.DocumentType.outerHtmlHead(java.lang.Appendable, int, org.jsoup.nodes.Document.OutputSettings)",
			"begin_line": 48,
			"end_line": 63,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Token.java",
			"method_name": "reset",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Token.Doctype.reset()",
			"begin_line": 43,
			"end_line": 50,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 13,
			"end_line": 34,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$Doctype;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.insert(org.jsoup.parser.Token.Doctype)",
			"begin_line": 99,
			"end_line": 102,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 1181,
			"end_line": 1204,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/DocumentType.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;",
			"type": "constructor",
			"signature": "org.jsoup.nodes.DocumentType.DocumentType(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
			"begin_line": 26,
			"end_line": 32,
			"comment": "\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     "
		}
	],
	"Jsoup-57b": [
		{
			"class_file": "org/jsoup/nodes/Attributes.java",
			"method_name": "removeIgnoreCase",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Attributes.removeIgnoreCase(java.lang.String)",
			"begin_line": 118,
			"end_line": 127,
			"comment": "\n     Remove an attribute by key. <b>Case insensitive.</b>\n     @param key attribute key to remove\n     "
		}
	],
	"Jsoup-58b": [
		{
			"class_file": "org/jsoup/Jsoup.java",
			"method_name": "isValid",
			"arg_types": "Ljava/lang/String;Lorg/jsoup/safety/Whitelist;",
			"type": "method",
			"signature": "org.jsoup.Jsoup.isValid(java.lang.String, org.jsoup.safety.Whitelist)",
			"begin_line": 249,
			"end_line": 251,
			"comment": "\n     Test if the input body HTML has only tags and attributes allowed by the Whitelist. Useful for form validation.\n     <p>The input HTML should still be run through the cleaner to set up enforced attributes, and to tidy the output.\n     <p>Assumes the HTML is a body fragment (i.e. will be used in an existing HTML document body.)\n     @param bodyHtml HTML to test\n     @param whitelist whitelist to test against\n     @return true if no tags or attributes were removed; false otherwise\n     @see #clean(String, org.jsoup.safety.Whitelist) \n     "
		},
		{
			"class_file": "org/jsoup/safety/Cleaner.java",
			"method_name": "isValid",
			"arg_types": "Lorg/jsoup/nodes/Document;",
			"type": "method",
			"signature": "org.jsoup.safety.Cleaner.isValid(org.jsoup.nodes.Document)",
			"begin_line": 73,
			"end_line": 79,
			"comment": "\n     Determines if the input document <b>body</b>is valid, against the whitelist. It is considered valid if all the tags and attributes\n     in the input HTML are allowed by the whitelist, and that there is no content in the <code>head</code>.\n     <p>\n     This method can be used as a validator for user input. An invalid document will still be cleaned successfully\n     using the {@link #clean(Document)} document. If using as a validator, it is recommended to still clean the document\n     to ensure enforced attributes are set correctly, and that the output is tidied.\n     </p>\n     @param dirtyDocument document to test\n     @return true if no tags or attributes need to be removed; false if they do\n     "
		}
	],
	"Jsoup-59b": [
		{
			"class_file": "org/jsoup/parser/Token.java",
			"method_name": "newAttribute",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Token.Tag.newAttribute()",
			"begin_line": 100,
			"end_line": 122,
			"comment": ""
		}
	],
	"Jsoup-60b": [
		{
			"class_file": "org/jsoup/parser/TokenQueue.java",
			"method_name": "chompBalanced",
			"arg_types": "CC",
			"type": "method",
			"signature": "org.jsoup.parser.TokenQueue.chompBalanced(char, char)",
			"begin_line": 260,
			"end_line": 290,
			"comment": "\n     * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n     * contains text strings; use unescape for that.\n     * @param open opener\n     * @param close closer\n     * @return data matched from the queue\n     "
		},
		{
			"class_file": "org/jsoup/select/QueryParser.java",
			"method_name": "parse",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.select.QueryParser.parse(java.lang.String)",
			"begin_line": 37,
			"end_line": 40,
			"comment": "\n     * Parse a CSS query into an Evaluator.\n     * @param query CSS query\n     * @return Evaluator\n     "
		}
	],
	"Jsoup-61b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "hasClass",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.hasClass(java.lang.String)",
			"begin_line": 1091,
			"end_line": 1132,
			"comment": " performance sensitive"
		}
	],
	"Jsoup-62b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "anyOtherEndTag",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.anyOtherEndTag(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 763,
			"end_line": 782,
			"comment": ""
		}
	],
	"Jsoup-63b": [
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "read",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Tokeniser.read()",
			"begin_line": 43,
			"end_line": 65,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"selfClosingFlagAcknowledged"
			],
			"begin_line": 36,
			"end_line": 36,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "emit",
			"arg_types": "Lorg/jsoup/parser/Token;",
			"type": "method",
			"signature": "org.jsoup.parser.Tokeniser.emit(org.jsoup.parser.Token)",
			"begin_line": 67,
			"end_line": 83,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "insertEmpty",
			"arg_types": "Lorg/jsoup/parser/Token$StartTag;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.insertEmpty(org.jsoup.parser.Token.StartTag)",
			"begin_line": 221,
			"end_line": 235,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tokeniser.java",
			"method_name": "acknowledgeSelfClosingFlag",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Tokeniser.acknowledgeSelfClosingFlag()",
			"begin_line": 124,
			"end_line": 126,
			"comment": ""
		}
	],
	"Jsoup-64b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "handleRawtext",
			"arg_types": "Lorg/jsoup/parser/Token$StartTag;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(org.jsoup.parser.Token.StartTag, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1488,
			"end_line": 1493,
			"comment": ""
		}
	],
	"Jsoup-65b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "clearStackToTableRowContext",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.clearStackToTableRowContext()",
			"begin_line": 363,
			"end_line": 365,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "clearStackToTableBodyContext",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.clearStackToTableBodyContext()",
			"begin_line": 359,
			"end_line": 361,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1031,
			"end_line": 1073,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1091,
			"end_line": 1137,
			"comment": ""
		}
	],
	"Jsoup-66b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "doClone",
			"arg_types": "Lorg/jsoup/nodes/Node;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.doClone(org.jsoup.nodes.Node)",
			"begin_line": 1397,
			"end_line": 1406,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "ensureChildNodes",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.ensureChildNodes()",
			"begin_line": 87,
			"end_line": 92,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "onContentsChanged",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.NodeList.onContentsChanged()",
			"begin_line": 1413,
			"end_line": 1415,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "<init>",
			"arg_types": "Lorg/jsoup/nodes/Element;I",
			"type": "constructor",
			"signature": "org.jsoup.nodes.Element.NodeList.NodeList(int)",
			"begin_line": 1409,
			"end_line": 1411,
			"comment": ""
		}
	],
	"Jsoup-67b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "inSpecificScope",
			"arg_types": "[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.inSpecificScope(java.lang.String[], java.lang.String[], java.lang.String[])",
			"begin_line": 466,
			"end_line": 480,
			"comment": ""
		}
	],
	"Jsoup-68b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "inSpecificScope",
			"arg_types": "[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.inSpecificScope(java.lang.String[], java.lang.String[], java.lang.String[])",
			"begin_line": 466,
			"end_line": 486,
			"comment": ""
		}
	],
	"Jsoup-69b": [],
	"Jsoup-70b": [
		{
			"class_file": "org/jsoup/nodes/Element.java",
			"method_name": "preserveWhitespace",
			"arg_types": "Lorg/jsoup/nodes/Node;",
			"type": "method",
			"signature": "org.jsoup.nodes.Element.preserveWhitespace(org.jsoup.nodes.Node)",
			"begin_line": 1087,
			"end_line": 1097,
			"comment": ""
		}
	],
	"Jsoup-71b": [
		{
			"class_file": "org/jsoup/select/QueryParser.java",
			"method_name": "findElements",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.select.QueryParser.findElements()",
			"begin_line": 148,
			"end_line": 206,
			"comment": ""
		}
	],
	"Jsoup-72b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "cacheString",
			"arg_types": "[C[Ljava/lang/String;II",
			"type": "method",
			"signature": "org.jsoup.parser.CharacterReader.cacheString(char[], java.lang.String[], int, int)",
			"begin_line": 423,
			"end_line": 451,
			"comment": "\n     * Caches short strings, as a flywheel pattern, to reduce GC load. Just for this doc, to prevent leaks.\n     * <p />\n     * Simplistic, and on hash collisions just falls back to creating a new string, vs a full HashMap with Entry list.\n     * That saves both having to create objects as hash keys, and running through the entry list, at the expense of\n     * some more duplicates.\n     "
		}
	],
	"Jsoup-73b": [
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"namespaces"
			],
			"begin_line": 73,
			"end_line": 73,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "<init>",
			"arg_types": "Lorg/w3c/dom/Document;",
			"type": "constructor",
			"signature": "W3CBuilder(Document)",
			"begin_line": 76,
			"end_line": 78,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "tail",
			"arg_types": "Lorg/jsoup/nodes/Node;I",
			"type": "method",
			"signature": "org.jsoup.helper.W3CDom.W3CBuilder.tail(org.jsoup.nodes.Node, int)",
			"begin_line": 112,
			"end_line": 116,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "updateNamespaces",
			"arg_types": "Lorg/jsoup/nodes/Element;",
			"type": "method",
			"signature": "org.jsoup.helper.W3CDom.W3CBuilder.updateNamespaces(org.jsoup.nodes.Element)",
			"begin_line": 130,
			"end_line": 150,
			"comment": "\n         * Finds any namespaces defined in this element. Returns any tag prefix.\n         "
		},
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "head",
			"arg_types": "Lorg/jsoup/nodes/Node;I",
			"type": "method",
			"signature": "org.jsoup.helper.W3CDom.W3CBuilder.head(org.jsoup.nodes.Node, int)",
			"begin_line": 80,
			"end_line": 110,
			"comment": ""
		}
	],
	"Jsoup-74b": [
		{
			"class_file": "org/jsoup/helper/StringUtil.java",
			"method_name": "appendNormalisedWhitespace",
			"arg_types": "Ljava/lang/StringBuilder;Ljava/lang/String;Z",
			"type": "method",
			"signature": "org.jsoup.helper.StringUtil.appendNormalisedWhitespace(java.lang.StringBuilder, java.lang.String, boolean)",
			"begin_line": 151,
			"end_line": 171,
			"comment": "\n     * After normalizing the whitespace within a string, appends it to a string builder.\n     * @param accum builder to append to\n     * @param string string to normalize whitespace within\n     * @param stripLeading set to true if you wish to remove any leading whitespace\n     "
		}
	],
	"Jsoup-75b": [
		{
			"class_file": "org/jsoup/nodes/Attributes.java",
			"method_name": "html",
			"arg_types": "Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;",
			"type": "method",
			"signature": "org.jsoup.nodes.Attributes.html(java.lang.Appendable, org.jsoup.nodes.Document.OutputSettings)",
			"begin_line": 310,
			"end_line": 326,
			"comment": ""
		}
	],
	"Jsoup-76b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 252,
			"end_line": 764,
			"comment": ""
		}
	],
	"Jsoup-77b": [
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "popStackToClose",
			"arg_types": "Lorg/jsoup/parser/Token$EndTag;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.popStackToClose(org.jsoup.parser.Token.EndTag)",
			"begin_line": 116,
			"end_line": 136,
			"comment": "\n     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not\n     * found, skips.\n     *\n     * @param endTag tag to close\n     "
		}
	],
	"Jsoup-78b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseInputStream",
			"arg_types": "Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseInputStream(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 93,
			"end_line": 157,
			"comment": ""
		}
	],
	"Jsoup-79b": [
		{
			"class_file": "org/jsoup/nodes/LeafNode.java",
			"method_name": "ensureChildNodes",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.LeafNode.ensureChildNodes()",
			"begin_line": 92,
			"end_line": 95,
			"comment": ""
		}
	],
	"Jsoup-80b": [
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$Comment;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.insert(org.jsoup.parser.Token.Comment)",
			"begin_line": 83,
			"end_line": 97,
			"comment": ""
		}
	],
	"Jsoup-81b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseInputStream",
			"arg_types": "Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseInputStream(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 95,
			"end_line": 168,
			"comment": ""
		}
	],
	"Jsoup-82b": [
		{
			"class_file": "org/jsoup/helper/DataUtil.java",
			"method_name": "parseInputStream",
			"arg_types": "Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/parser/Parser;",
			"type": "method",
			"signature": "org.jsoup.helper.DataUtil.parseInputStream(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser)",
			"begin_line": 95,
			"end_line": 175,
			"comment": ""
		}
	],
	"Jsoup-83b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "consumeTagName",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.CharacterReader.consumeTagName()",
			"begin_line": 244,
			"end_line": 260,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 143,
			"end_line": 176,
			"comment": " from < or </ in data, will have start or end tag pending"
		},
		{
			"class_file": "org/jsoup/parser/TokeniserState.java",
			"method_name": "read",
			"arg_types": "Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;",
			"type": "method",
			"signature": "org.jsoup.parser.TokeniserState.read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)",
			"begin_line": 552,
			"end_line": 593,
			"comment": " from tagname <xxx"
		}
	],
	"Jsoup-84b": [
		{
			"class_file": "org/jsoup/helper/W3CDom.java",
			"method_name": "head",
			"arg_types": "Lorg/jsoup/nodes/Node;I",
			"type": "method",
			"signature": "org.jsoup.helper.W3CDom.W3CBuilder.head(org.jsoup.nodes.Node, int)",
			"begin_line": 82,
			"end_line": 115,
			"comment": ""
		}
	],
	"Jsoup-85b": [
		{
			"class_file": "org/jsoup/nodes/Attribute.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;",
			"type": "constructor",
			"signature": "org.jsoup.nodes.Attribute.Attribute(java.lang.String, java.lang.String, org.jsoup.nodes.Attributes)",
			"begin_line": 42,
			"end_line": 48,
			"comment": "\n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key; case is preserved.\n     * @param val attribute value\n     * @param parent the containing Attributes (this Attribute is not automatically added to said Attributes)\n     * @see #createFromEncoded"
		}
	],
	"Jsoup-86b": [
		{
			"class_file": "org/jsoup/nodes/Comment.java",
			"method_name": "asXmlDeclaration",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Comment.asXmlDeclaration()",
			"begin_line": 74,
			"end_line": 84,
			"comment": "\n     * Attempt to cast this comment to an XML Declaration note.\n     * @return an XML declaration if it could be parsed as one, null otherwise.\n     "
		}
	],
	"Jsoup-87b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "getFromStack",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.getFromStack(java.lang.String)",
			"begin_line": 312,
			"end_line": 320,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "isSpecial",
			"arg_types": "Lorg/jsoup/nodes/Element;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.isSpecial(org.jsoup.nodes.Element)",
			"begin_line": 578,
			"end_line": 583,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "inSpecificScope",
			"arg_types": "[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.inSpecificScope(java.lang.String[], java.lang.String[], java.lang.String[])",
			"begin_line": 469,
			"end_line": 486,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "getActiveFormattingElement",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.getActiveFormattingElement(java.lang.String)",
			"begin_line": 684,
			"end_line": 693,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "reconstructFormattingElements",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.reconstructFormattingElements()",
			"begin_line": 624,
			"end_line": 660,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "exitTableBody",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.exitTableBody(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1082,
			"end_line": 1091,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1217,
			"end_line": 1303,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 980,
			"end_line": 1026,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "anyOtherEndTag",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.anyOtherEndTag(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 767,
			"end_line": 786,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 808,
			"end_line": 892,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "generateImpliedEndTags",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.generateImpliedEndTags(java.lang.String)",
			"begin_line": 568,
			"end_line": 572,
			"comment": "\n     11.2.5.2 Closing elements that have implied end tags<p/>\n     When the steps below require the UA to generate implied end tags, then, while the current node is a dd element, a\n     dt element, an li element, an option element, an optgroup element, a p element, an rp element, or an rt element,\n     the UA must pop the current node off the stack of open elements.\n\n     @param excludeTag If a step requires the UA to generate implied end tags but lists an element to exclude from the\n     process, then the UA must perform the above steps as if that element was not in the above list.\n     "
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1357,
			"end_line": 1402,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "inSelectScope",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.inSelectScope(java.lang.String)",
			"begin_line": 514,
			"end_line": 525,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 908,
			"end_line": 942,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "anythingElse",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 894,
			"end_line": 905,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "clearStackToContext",
			"arg_types": "[Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.clearStackToContext(java.lang.String...)",
			"begin_line": 375,
			"end_line": 383,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 945,
			"end_line": 977,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 252,
			"end_line": 765,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "popStackToClose",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.popStackToClose(java.lang.String)",
			"begin_line": 333,
			"end_line": 340,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilderState.java",
			"method_name": "process",
			"arg_types": "Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilderState.process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)",
			"begin_line": 1161,
			"end_line": 1203,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "popStackToClose",
			"arg_types": "[Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.popStackToClose(java.lang.String...)",
			"begin_line": 343,
			"end_line": 350,
			"comment": " elnames is sorted, comes from Constants"
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "isSameFormattingElement",
			"arg_types": "Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.isSameFormattingElement(org.jsoup.nodes.Element, org.jsoup.nodes.Element)",
			"begin_line": 616,
			"end_line": 622,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "popStackToBefore",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.popStackToBefore(java.lang.String)",
			"begin_line": 352,
			"end_line": 361,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "resetInsertionMode",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.resetInsertionMode()",
			"begin_line": 412,
			"end_line": 459,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/Tag.java",
			"method_name": "<init>",
			"arg_types": "Ljava/lang/String;",
			"type": "constructor",
			"signature": "org.jsoup.parser.Tag.Tag(java.lang.String)",
			"begin_line": 26,
			"end_line": 28,
			"comment": ""
		}
	],
	"Jsoup-88b": [
		{
			"class_file": "org/jsoup/nodes/Attribute.java",
			"method_name": "getValue",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.Attribute.getValue()",
			"begin_line": 79,
			"end_line": 81,
			"comment": "\n     Get the attribute value.\n     @return the attribute value\n     "
		}
	],
	"Jsoup-89b": [
		{
			"class_file": "org/jsoup/nodes/Attribute.java",
			"method_name": "setValue",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Attribute.setValue(java.lang.String)",
			"begin_line": 87,
			"end_line": 96,
			"comment": "\n     Set the attribute value.\n     @param val the new attribute value; must not be null\n     "
		}
	],
	"Jsoup-90b": [
		{
			"class_file": "org/jsoup/helper/HttpConnection.java",
			"method_name": "looksLikeUtf8",
			"arg_types": "[B",
			"type": "method",
			"signature": "org.jsoup.helper.HttpConnection.Base.looksLikeUtf8(byte[])",
			"begin_line": 398,
			"end_line": 434,
			"comment": ""
		}
	],
	"Jsoup-91b": [
		{
			"class_file": "org/jsoup/parser/CharacterReader.java",
			"method_name": "<init>",
			"arg_types": "Ljava/io/Reader;I",
			"type": "constructor",
			"signature": "org.jsoup.parser.CharacterReader.CharacterReader(java.io.Reader, int)",
			"begin_line": 30,
			"end_line": 37,
			"comment": ""
		}
	],
	"Jsoup-92b": [
		{
			"class_file": "org/jsoup/parser/HtmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$StartTag;",
			"type": "method",
			"signature": "org.jsoup.parser.HtmlTreeBuilder.insert(org.jsoup.parser.Token.StartTag)",
			"begin_line": 197,
			"end_line": 213,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/nodes/Attributes.java",
			"method_name": "add",
			"arg_types": "Ljava/lang/String;Ljava/lang/String;",
			"type": "method",
			"signature": "org.jsoup.nodes.Attributes.add(java.lang.String, java.lang.String)",
			"begin_line": 118,
			"end_line": 123,
			"comment": "\n     * Adds a new attribute. Will produce duplicates if the key already exists.\n     * @see Attributes#put(String, String)\n     "
		},
		{
			"class_file": "org/jsoup/parser/Token.java",
			"method_name": "newAttribute",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.parser.Token.Tag.newAttribute()",
			"begin_line": 100,
			"end_line": 124,
			"comment": ""
		},
		{
			"class_file": "org/jsoup/parser/XmlTreeBuilder.java",
			"method_name": "insert",
			"arg_types": "Lorg/jsoup/parser/Token$StartTag;",
			"type": "method",
			"signature": "org.jsoup.parser.XmlTreeBuilder.insert(org.jsoup.parser.Token.StartTag)",
			"begin_line": 75,
			"end_line": 88,
			"comment": ""
		}
	],
	"Jsoup-93b": [
		{
			"class_file": "org/jsoup/nodes/FormElement.java",
			"method_name": "formData",
			"arg_types": "",
			"type": "method",
			"signature": "org.jsoup.nodes.FormElement.formData()",
			"begin_line": 78,
			"end_line": 113,
			"comment": "\n     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the\n     * list will not be reflected in the DOM.\n     * @return a list of key vals\n     "
		}
	]
}