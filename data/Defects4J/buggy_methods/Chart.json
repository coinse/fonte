{
	"Chart-1b": [
		{
			"class_file": "org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
			"method_name": "getLegendItems",
			"arg_types": "",
			"type": "method",
			"signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems()",
			"begin_line": 1790,
			"end_line": 1822,
			"comment": "\r\n     * Returns a (possibly empty) collection of legend items for the series\r\n     * that this renderer is responsible for drawing.\r\n     *\r\n     * @return The legend item collection (never <code>null</code>).\r\n     *\r\n     * @see #getLegendItem(int, int)\r\n     "
		}
	],
	"Chart-2b": [
		{
			"class_file": "org/jfree/data/general/DatasetUtilities.java",
			"method_name": "iterateDomainBounds",
			"arg_types": "Lorg/jfree/data/xy/XYDataset;Z",
			"type": "method",
			"signature": "org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset, boolean)",
			"begin_line": 740,
			"end_line": 785,
			"comment": "\r\n     * Iterates over the items in an {@link XYDataset} to find\r\n     * the range of x-values.\r\n     *\r\n     * @param dataset  the dataset (<code>null</code> not permitted).\r\n     * @param includeInterval  a flag that determines, for an\r\n     *          {@link IntervalXYDataset}, whether the x-interval or just the\r\n     *          x-value is used to determine the overall range.\r\n     *\r\n     * @return The range (possibly <code>null</code>).\r\n     "
		},
		{
			"class_file": "org/jfree/data/general/DatasetUtilities.java",
			"method_name": "iterateRangeBounds",
			"arg_types": "Lorg/jfree/data/xy/XYDataset;Z",
			"type": "method",
			"signature": "org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset, boolean)",
			"begin_line": 1229,
			"end_line": 1289,
			"comment": "\r\n     * Iterates over the data items of the xy dataset to find\r\n     * the range bounds.\r\n     *\r\n     * @param dataset  the dataset (<code>null</code> not permitted).\r\n     * @param includeInterval  a flag that determines, for an\r\n     *          {@link IntervalXYDataset}, whether the y-interval or just the\r\n     *          y-value is used to determine the overall range.\r\n     *\r\n     * @return The range (possibly <code>null</code>).\r\n     *\r\n     * @since 1.0.10\r\n     "
		}
	],
	"Chart-3b": [
		{
			"class_file": "org/jfree/data/time/TimeSeries.java",
			"method_name": "createCopy",
			"arg_types": "II",
			"type": "method",
			"signature": "org.jfree.data.time.TimeSeries.createCopy(int, int)",
			"begin_line": 1048,
			"end_line": 1072,
			"comment": "\r\n     * Creates a new timeseries by copying a subset of the data in this time\r\n     * series.\r\n     *\r\n     * @param start  the index of the first time period to copy.\r\n     * @param end  the index of the last time period to copy.\r\n     *\r\n     * @return A series containing a copy of this times series from start until\r\n     *         end.\r\n     *\r\n     * @throws CloneNotSupportedException if there is a cloning problem.\r\n     "
		}
	],
	"Chart-4b": [
		{
			"class_file": "org/jfree/chart/plot/XYPlot.java",
			"method_name": "getDataRange",
			"arg_types": "Lorg/jfree/chart/axis/ValueAxis;",
			"type": "method",
			"signature": "org.jfree.chart.plot.XYPlot.getDataRange(org.jfree.chart.axis.ValueAxis)",
			"begin_line": 4425,
			"end_line": 4519,
			"comment": "\r\n     * Returns the range for the specified axis.\r\n     *\r\n     * @param axis  the axis.\r\n     *\r\n     * @return The range.\r\n     "
		}
	],
	"Chart-5b": [
		{
			"class_file": "org/jfree/data/xy/XYSeries.java",
			"method_name": "addOrUpdate",
			"arg_types": "Ljava/lang/Number;Ljava/lang/Number;",
			"type": "method",
			"signature": "org.jfree.data.xy.XYSeries.addOrUpdate(java.lang.Number, java.lang.Number)",
			"begin_line": 540,
			"end_line": 576,
			"comment": "\r\n     * Adds or updates an item in the series and sends a\r\n     * {@link SeriesChangeEvent} to all registered listeners.\r\n     *\r\n     * @param x  the x-value (<code>null</code> not permitted).\r\n     * @param y  the y-value (<code>null</code> permitted).\r\n     *\r\n     * @return A copy of the overwritten data item, or <code>null</code> if no\r\n     *         item was overwritten.\r\n     "
		}
	],
	"Chart-6b": [
		{
			"class_file": "org/jfree/chart/util/ShapeList.java",
			"method_name": "equals",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "org.jfree.chart.util.ShapeList.equals(java.lang.Object)",
			"begin_line": 103,
			"end_line": 113,
			"comment": "\n     * Tests the list for equality with another object (typically also a list).\n     *\n     * @param obj  the other object (<code>null</code> permitted).\n     *\n     * @return A boolean.\n     "
		}
	],
	"Chart-7b": [
		{
			"class_file": "org/jfree/data/time/TimePeriodValues.java",
			"method_name": "updateBounds",
			"arg_types": "Lorg/jfree/data/time/TimePeriod;I",
			"type": "method",
			"signature": "org.jfree.data.time.TimePeriodValues.updateBounds(org.jfree.data.time.TimePeriod, int)",
			"begin_line": 257,
			"end_line": 335,
			"comment": "\r\n     * Update the index values for the maximum and minimum bounds.\r\n     * \r\n     * @param period  the time period.\r\n     * @param index  the index of the time period.\r\n     "
		}
	],
	"Chart-8b": [
		{
			"class_file": "org/jfree/data/time/Week.java",
			"method_name": "<init>",
			"arg_types": "Ljava/util/Date;Ljava/util/TimeZone;",
			"type": "constructor",
			"signature": "org.jfree.data.time.Week.Week(java.util.Date, java.util.TimeZone)",
			"begin_line": 173,
			"end_line": 176,
			"comment": "\r\n     * Creates a time period for the week in which the specified date/time\r\n     * falls, calculated relative to the specified time zone.\r\n     *\r\n     * @param time  the date/time (<code>null</code> not permitted).\r\n     * @param zone  the time zone (<code>null</code> not permitted).\r\n     *\r\n     * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.\r\n     "
		}
	],
	"Chart-9b": [
		{
			"class_file": "org/jfree/data/time/TimeSeries.java",
			"method_name": "createCopy",
			"arg_types": "Lorg/jfree/data/time/RegularTimePeriod;Lorg/jfree/data/time/RegularTimePeriod;",
			"type": "method",
			"signature": "org.jfree.data.time.TimeSeries.createCopy(org.jfree.data.time.RegularTimePeriod, org.jfree.data.time.RegularTimePeriod)",
			"begin_line": 918,
			"end_line": 956,
			"comment": "\r\n     * Creates a new timeseries by copying a subset of the data in this time\r\n     * series.\r\n     *\r\n     * @param start  the first time period to copy (<code>null</code> not\r\n     *         permitted).\r\n     * @param end  the last time period to copy (<code>null</code> not\r\n     *         permitted).\r\n     *\r\n     * @return A time series containing a copy of this time series from start\r\n     *         until end.\r\n     *\r\n     * @throws CloneNotSupportedException if there is a cloning problem.\r\n     "
		}
	],
	"Chart-10b": [
		{
			"class_file": "org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java",
			"method_name": "generateToolTipFragment",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator.generateToolTipFragment(java.lang.String)",
			"begin_line": 64,
			"end_line": 67,
			"comment": "\r\n     * Generates a tooltip string to go in an HTML image map.\r\n     *\r\n     * @param toolTipText  the tooltip.\r\n     * \r\n     * @return The formatted HTML area tag attribute(s).\r\n     "
		}
	],
	"Chart-11b": [
		{
			"class_file": "org/jfree/chart/util/ShapeUtilities.java",
			"method_name": "equal",
			"arg_types": "Ljava/awt/geom/GeneralPath;Ljava/awt/geom/GeneralPath;",
			"type": "method",
			"signature": "org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath, java.awt.geom.GeneralPath)",
			"begin_line": 264,
			"end_line": 296,
			"comment": "\n     * Tests two polygons for equality.  If both are <code>null</code> this\n     * method returns <code>true</code>.\n     *\n     * @param p1  path 1 (<code>null</code> permitted).\n     * @param p2  path 2 (<code>null</code> permitted).\n     *\n     * @return A boolean.\n     "
		}
	],
	"Chart-12b": [
		{
			"class_file": "org/jfree/chart/plot/MultiplePiePlot.java",
			"method_name": "<init>",
			"arg_types": "Lorg/jfree/data/category/CategoryDataset;",
			"type": "constructor",
			"signature": "org.jfree.chart.plot.MultiplePiePlot.MultiplePiePlot(org.jfree.data.category.CategoryDataset)",
			"begin_line": 143,
			"end_line": 158,
			"comment": "\r\n     * Creates a new plot.\r\n     *\r\n     * @param dataset  the dataset (<code>null</code> permitted).\r\n     "
		}
	],
	"Chart-13b": [
		{
			"class_file": "org/jfree/chart/block/BorderArrangement.java",
			"method_name": "arrangeFF",
			"arg_types": "Lorg/jfree/chart/block/BlockContainer;Ljava/awt/Graphics2D;Lorg/jfree/chart/block/RectangleConstraint;",
			"type": "method",
			"signature": "org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)",
			"begin_line": 422,
			"end_line": 489,
			"comment": "\r\n     * Arranges the items within a container.\r\n     *\r\n     * @param container  the container.\r\n     * @param constraint  the constraint.\r\n     * @param g2  the graphics device.\r\n     *\r\n     * @return The container size after the arrangement.\r\n     "
		}
	],
	"Chart-14b": [
		{
			"class_file": "org/jfree/chart/plot/CategoryPlot.java",
			"method_name": "removeRangeMarker",
			"arg_types": "ILorg/jfree/chart/plot/Marker;Lorg/jfree/chart/util/Layer;Z",
			"type": "method",
			"signature": "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)",
			"begin_line": 2434,
			"end_line": 2453,
			"comment": "\r\n     * Removes a marker for a specific dataset/renderer and sends a\r\n     * {@link PlotChangeEvent} to all registered listeners.\r\n     *\r\n     * @param index  the dataset/renderer index.\r\n     * @param marker  the marker.\r\n     * @param layer  the layer (foreground or background).\r\n     * @param notify  notify listeners.\r\n     *\r\n     * @return A boolean indicating whether or not the marker was actually \r\n     *         removed.\r\n     *\r\n     * @since 1.0.10\r\n     * \r\n     * @see #addRangeMarker(int, Marker, Layer, boolean)\r\n     "
		},
		{
			"class_file": "org/jfree/chart/plot/XYPlot.java",
			"method_name": "removeDomainMarker",
			"arg_types": "ILorg/jfree/chart/plot/Marker;Lorg/jfree/chart/util/Layer;Z",
			"type": "method",
			"signature": "org.jfree.chart.plot.XYPlot.removeDomainMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)",
			"begin_line": 2282,
			"end_line": 2298,
			"comment": "\r\n     * Removes a marker for a specific dataset/renderer and, if requested, \r\n     * sends a {@link PlotChangeEvent} to all registered listeners.\r\n     *\r\n     * @param index  the dataset/renderer index.\r\n     * @param marker  the marker.\r\n     * @param layer  the layer (foreground or background).\r\n     * @param notify  notify listeners?\r\n     *\r\n     * @return A boolean indicating whether or not the marker was actually \r\n     *         removed.\r\n     *\r\n     * @since 1.0.10\r\n     "
		},
		{
			"class_file": "org/jfree/chart/plot/CategoryPlot.java",
			"method_name": "removeDomainMarker",
			"arg_types": "ILorg/jfree/chart/plot/Marker;Lorg/jfree/chart/util/Layer;Z",
			"type": "method",
			"signature": "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)",
			"begin_line": 2155,
			"end_line": 2171,
			"comment": "\r\n     * Removes a marker for a specific dataset/renderer and, if requested, \r\n     * sends a {@link PlotChangeEvent} to all registered listeners.\r\n     *\r\n     * @param index the dataset/renderer index.\r\n     * @param marker the marker.\r\n     * @param layer the layer (foreground or background).\r\n     *\r\n     * @return A boolean indicating whether or not the marker was actually \r\n     *         removed.\r\n     *\r\n     * @since 1.0.10\r\n     "
		},
		{
			"class_file": "org/jfree/chart/plot/XYPlot.java",
			"method_name": "removeRangeMarker",
			"arg_types": "ILorg/jfree/chart/plot/Marker;Lorg/jfree/chart/util/Layer;Z",
			"type": "method",
			"signature": "org.jfree.chart.plot.XYPlot.removeRangeMarker(int, org.jfree.chart.plot.Marker, org.jfree.chart.util.Layer, boolean)",
			"begin_line": 2515,
			"end_line": 2534,
			"comment": "\r\n     * Removes a marker for a specific dataset/renderer and sends a\r\n     * {@link PlotChangeEvent} to all registered listeners.\r\n     *\r\n     * @param index  the dataset/renderer index.\r\n     * @param marker  the marker.\r\n     * @param layer  the layer (foreground or background).\r\n     * @param notify  notify listeners?\r\n     *\r\n     * @return A boolean indicating whether or not the marker was actually \r\n     *         removed.\r\n     *\r\n     * @since 1.0.10\r\n     "
		}
	],
	"Chart-15b": [
		{
			"class_file": "org/jfree/chart/plot/PiePlot.java",
			"method_name": "getMaximumExplodePercent",
			"arg_types": "",
			"type": "method",
			"signature": "org.jfree.chart.plot.PiePlot.getMaximumExplodePercent()",
			"begin_line": 1377,
			"end_line": 1388,
			"comment": "\r\n     * Returns the maximum explode percent.\r\n     * \r\n     * @return The percent.\r\n     "
		},
		{
			"class_file": "org/jfree/chart/plot/PiePlot.java",
			"method_name": "initialise",
			"arg_types": "Ljava/awt/Graphics2D;Ljava/awt/geom/Rectangle2D;Lorg/jfree/chart/plot/PiePlot;Ljava/lang/Integer;Lorg/jfree/chart/plot/PlotRenderingInfo;",
			"type": "method",
			"signature": "org.jfree.chart.plot.PiePlot.initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PiePlot, java.lang.Integer, org.jfree.chart.plot.PlotRenderingInfo)",
			"begin_line": 2046,
			"end_line": 2056,
			"comment": "\r\n     * Initialises the drawing procedure.  This method will be called before \r\n     * the first item is rendered, giving the plot an opportunity to initialise\r\n     * any state information it wants to maintain.\r\n     *\r\n     * @param g2  the graphics device.\r\n     * @param plotArea  the plot area (<code>null</code> not permitted).\r\n     * @param plot  the plot.\r\n     * @param index  the secondary index (<code>null</code> for primary \r\n     *               renderer).\r\n     * @param info  collects chart rendering information for return to caller.\r\n     * \r\n     * @return A state object (maintains state information relevant to one \r\n     *         chart drawing).\r\n     "
		}
	],
	"Chart-16b": [
		{
			"class_file": "org/jfree/data/category/DefaultIntervalCategoryDataset.java",
			"method_name": "<init>",
			"arg_types": "[Ljava/lang/Comparable;[Ljava/lang/Comparable;[[Ljava/lang/Number;[[Ljava/lang/Number;",
			"type": "constructor",
			"signature": "org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(java.lang.Comparable[], java.lang.Comparable[], java.lang.Number[][], java.lang.Number[][])",
			"begin_line": 142,
			"end_line": 212,
			"comment": "\r\n     * Constructs a DefaultIntervalCategoryDataset, populates it with data\r\n     * from the arrays, and uses the supplied names for the series and the\r\n     * supplied objects for the categories.\r\n     *\r\n     * @param seriesKeys  the series keys (if <code>null</code>, series keys\r\n     *         will be generated automatically).\r\n     * @param categoryKeys  the category keys (if <code>null</code>, category \r\n     *         keys will be generated automatically).\r\n     * @param starts  the start values data, indexed as data[series][category].\r\n     * @param ends  the end values data, indexed as data[series][category].\r\n     "
		},
		{
			"class_file": "org/jfree/data/category/DefaultIntervalCategoryDataset.java",
			"method_name": "setCategoryKeys",
			"arg_types": "[Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(java.lang.Comparable[])",
			"begin_line": 334,
			"end_line": 351,
			"comment": "\r\n     * Sets the categories for the dataset.\r\n     *\r\n     * @param categoryKeys  an array of objects representing the categories in \r\n     *                      the dataset.\r\n     *                      \r\n     * @see #getRowKeys()\r\n     * @see #setSeriesKeys(Comparable[])\r\n     "
		}
	],
	"Chart-17b": [
		{
			"class_file": "org/jfree/data/time/TimeSeries.java",
			"method_name": "clone",
			"arg_types": "",
			"type": "method",
			"signature": "org.jfree.data.time.TimeSeries.clone()",
			"begin_line": 856,
			"end_line": 859,
			"comment": "\r\n     * Returns a clone of the time series.\r\n     * <P>\r\n     * Notes:\r\n     * <ul>\r\n     *   <li>no need to clone the domain and range descriptions, since String \r\n     *     object is immutable;</li>\r\n     *   <li>we pass over to the more general method clone(start, end).</li>\r\n     * </ul>\r\n     *\r\n     * @return A clone of the time series.\r\n     * \r\n     * @throws CloneNotSupportedException not thrown by this class, but \r\n     *         subclasses may differ.\r\n     "
		}
	],
	"Chart-18b": [
		{
			"class_file": "org/jfree/data/DefaultKeyedValues.java",
			"method_name": "removeValue",
			"arg_types": "Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.DefaultKeyedValues.removeValue(java.lang.Comparable)",
			"begin_line": 332,
			"end_line": 338,
			"comment": "\n     * Removes a value from the collection.\n     *\n     * @param key  the item key (<code>null</code> not permitted).\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * @throws UnknownKeyException if <code>key</code> is not recognised.\n     "
		},
		{
			"class_file": "org/jfree/data/DefaultKeyedValues.java",
			"method_name": "removeValue",
			"arg_types": "I",
			"type": "method",
			"signature": "org.jfree.data.DefaultKeyedValues.removeValue(int)",
			"begin_line": 315,
			"end_line": 321,
			"comment": "\n     * Removes a value from the collection.\n     *\n     * @param index  the index of the item to remove (in the range \n     *     <code>0</code> to <code>getItemCount() - 1</code>).\n     *     \n     * @throws IndexOutOfBoundsException if <code>index</code> is not within\n     *     the specified range.\n     "
		},
		{
			"class_file": "org/jfree/data/DefaultKeyedValues2D.java",
			"method_name": "removeColumn",
			"arg_types": "Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.DefaultKeyedValues2D.removeColumn(java.lang.Comparable)",
			"begin_line": 454,
			"end_line": 461,
			"comment": "\r\n     * Removes a column from the table.\r\n     *\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @throws UnknownKeyException if the table does not contain a column with\r\n     *     the specified key.\r\n     * @throws IllegalArgumentException if <code>columnKey</code> is \r\n     *     <code>null</code>.\r\n     * \r\n     * @see #removeColumn(int)\r\n     * @see #removeRow(Comparable)\r\n     "
		}
	],
	"Chart-19b": [
		{
			"class_file": "org/jfree/chart/plot/CategoryPlot.java",
			"method_name": "getDomainAxisIndex",
			"arg_types": "Lorg/jfree/chart/axis/CategoryAxis;",
			"type": "method",
			"signature": "org.jfree.chart.plot.CategoryPlot.getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)",
			"begin_line": 697,
			"end_line": 699,
			"comment": "\r\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\r\n     * is not assigned to the plot.\r\n     * \r\n     * @param axis  the axis (<code>null</code> not permitted).\r\n     * \r\n     * @return The axis index.\r\n     * \r\n     * @see #getDomainAxis(int)\r\n     * @see #getRangeAxisIndex(ValueAxis)\r\n     * \r\n     * @since 1.0.3\r\n     "
		},
		{
			"class_file": "org/jfree/chart/plot/CategoryPlot.java",
			"method_name": "getRangeAxisIndex",
			"arg_types": "Lorg/jfree/chart/axis/ValueAxis;",
			"type": "method",
			"signature": "org.jfree.chart.plot.CategoryPlot.getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)",
			"begin_line": 972,
			"end_line": 982,
			"comment": "\r\n     * Returns the index of the specified axis, or <code>-1</code> if the axis\r\n     * is not assigned to the plot.\r\n     *\r\n     * @param axis  the axis (<code>null</code> not permitted).\r\n     *\r\n     * @return The axis index.\r\n     * \r\n     * @see #getRangeAxis(int)\r\n     * @see #getDomainAxisIndex(CategoryAxis)\r\n     * \r\n     * @since 1.0.7\r\n     "
		}
	],
	"Chart-20b": [
		{
			"class_file": "org/jfree/chart/plot/ValueMarker.java",
			"method_name": "<init>",
			"arg_types": "DLjava/awt/Paint;Ljava/awt/Stroke;Ljava/awt/Paint;Ljava/awt/Stroke;F",
			"type": "constructor",
			"signature": "org.jfree.chart.plot.ValueMarker.ValueMarker(double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)",
			"begin_line": 93,
			"end_line": 97,
			"comment": "\r\n     * Creates a new value marker.\r\n     * \r\n     * @param value  the value.\r\n     * @param paint  the paint (<code>null</code> not permitted).\r\n     * @param stroke  the stroke (<code>null</code> not permitted).\r\n     * @param outlinePaint  the outline paint (<code>null</code> permitted).\r\n     * @param outlineStroke  the outline stroke (<code>null</code> permitted).\r\n     * @param alpha  the alpha transparency (in the range 0.0f to 1.0f).\r\n     "
		}
	],
	"Chart-21b": [
		{
			"class_file": "org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java",
			"method_name": "add",
			"arg_types": "Lorg/jfree/data/statistics/BoxAndWhiskerItem;Ljava/lang/Comparable;Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable)",
			"begin_line": 144,
			"end_line": 193,
			"comment": "\r\n     * Adds a list of values relating to one Box and Whisker entity to the \r\n     * table.  The various median values are calculated.\r\n     *\r\n     * @param item  a box and whisker item (<code>null</code> not permitted).\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @see #add(List, Comparable, Comparable)\r\n     "
		},
		{
			"class_file": "org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java",
			"method_name": "updateBounds",
			"arg_types": "",
			"type": "method",
			"signature": "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds()",
			"begin_line": 739,
			"end_line": 742,
			"comment": "\r\n     * Resets the cached bounds, by iterating over the entire dataset to find\r\n     * the current bounds.\r\n     "
		}
	],
	"Chart-22b": [
		{
			"class_file": "org/jfree/data/KeyedObjects2D.java",
			"method_name": "getObject",
			"arg_types": "Ljava/lang/Comparable;Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.KeyedObjects2D.getObject(java.lang.Comparable, java.lang.Comparable)",
			"begin_line": 214,
			"end_line": 238,
			"comment": "\r\n     * Returns the object for the given row and column keys.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     * \r\n     * @throws IllegalArgumentException if <code>rowKey<code> or \r\n     *         <code>columnKey</code> is <code>null</code>.\r\n     * @throws UnknownKeyException if <code>rowKey</code> or \r\n     *         <code>columnKey</code> is not recognised.\r\n     "
		},
		{
			"class_file": "org/jfree/data/KeyedObjects2D.java",
			"method_name": "removeColumn",
			"arg_types": "Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.KeyedObjects2D.removeColumn(java.lang.Comparable)",
			"begin_line": 369,
			"end_line": 381,
			"comment": "\r\n     * Removes an entire column from the table.\r\n     *\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.\r\n     * \r\n     * @see #removeRow(Comparable)\r\n     "
		},
		{
			"class_file": "org/jfree/data/KeyedObjects2D.java",
			"method_name": "removeObject",
			"arg_types": "Ljava/lang/Comparable;Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.KeyedObjects2D.removeObject(java.lang.Comparable, java.lang.Comparable)",
			"begin_line": 296,
			"end_line": 320,
			"comment": "\r\n     * Removes an object from the table by setting it to <code>null</code>.  If\r\n     * all the objects in the specified row and/or column are now \r\n     * <code>null</code>, the row and/or column is removed from the table.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @see #addObject(Object, Comparable, Comparable)\r\n     "
		},
		{
			"class_file": "org/jfree/data/KeyedObjects2D.java",
			"method_name": "removeRow",
			"arg_types": "Ljava/lang/Comparable;",
			"type": "method",
			"signature": "org.jfree.data.KeyedObjects2D.removeRow(java.lang.Comparable)",
			"begin_line": 343,
			"end_line": 346,
			"comment": "\r\n     * Removes an entire row from the table.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * \r\n     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.\r\n     * \r\n     * @see #removeColumn(Comparable)\r\n     "
		}
	],
	"Chart-23b": [],
	"Chart-24b": [
		{
			"class_file": "org/jfree/chart/renderer/GrayPaintScale.java",
			"method_name": "getPaint",
			"arg_types": "D",
			"type": "method",
			"signature": "org.jfree.chart.renderer.GrayPaintScale.getPaint(double)",
			"begin_line": 123,
			"end_line": 129,
			"comment": "\r\n     * Returns a paint for the specified value.\r\n     * \r\n     * @param value  the value (must be within the range specified by the\r\n     *         lower and upper bounds for the scale).\r\n     * \r\n     * @return A paint for the specified value.\r\n     "
		}
	],
	"Chart-25b": [
		{
			"class_file": "org/jfree/chart/renderer/category/StatisticalBarRenderer.java",
			"method_name": "drawVerticalItem",
			"arg_types": "Ljava/awt/Graphics2D;Lorg/jfree/chart/renderer/category/CategoryItemRendererState;Ljava/awt/geom/Rectangle2D;Lorg/jfree/chart/plot/CategoryPlot;Lorg/jfree/chart/axis/CategoryAxis;Lorg/jfree/chart/axis/ValueAxis;Lorg/jfree/data/statistics/StatisticalCategoryDataset;II",
			"type": "method",
			"signature": "org.jfree.chart.renderer.category.StatisticalBarRenderer.drawVerticalItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.statistics.StatisticalCategoryDataset, int, int)",
			"begin_line": 373,
			"end_line": 500,
			"comment": "\r\n     * Draws an item for a plot with a vertical orientation.\r\n     * \r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the data.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     "
		},
		{
			"class_file": "org/jfree/chart/renderer/category/StatisticalBarRenderer.java",
			"method_name": "drawHorizontalItem",
			"arg_types": "Ljava/awt/Graphics2D;Lorg/jfree/chart/renderer/category/CategoryItemRendererState;Ljava/awt/geom/Rectangle2D;Lorg/jfree/chart/plot/CategoryPlot;Lorg/jfree/chart/axis/CategoryAxis;Lorg/jfree/chart/axis/ValueAxis;Lorg/jfree/data/statistics/StatisticalCategoryDataset;II",
			"type": "method",
			"signature": "org.jfree.chart.renderer.category.StatisticalBarRenderer.drawHorizontalItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.statistics.StatisticalCategoryDataset, int, int)",
			"begin_line": 230,
			"end_line": 358,
			"comment": "\r\n     * Draws an item for a plot with a horizontal orientation.\r\n     * \r\n     * @param g2  the graphics device.\r\n     * @param state  the renderer state.\r\n     * @param dataArea  the data area.\r\n     * @param plot  the plot.\r\n     * @param domainAxis  the domain axis.\r\n     * @param rangeAxis  the range axis.\r\n     * @param dataset  the data.\r\n     * @param row  the row index (zero-based).\r\n     * @param column  the column index (zero-based).\r\n     "
		}
	],
	"Chart-26b": [
		{
			"class_file": "org/jfree/chart/axis/Axis.java",
			"method_name": "drawLabel",
			"arg_types": "Ljava/lang/String;Ljava/awt/Graphics2D;Ljava/awt/geom/Rectangle2D;Ljava/awt/geom/Rectangle2D;Lorg/jfree/chart/util/RectangleEdge;Lorg/jfree/chart/axis/AxisState;Lorg/jfree/chart/plot/PlotRenderingInfo;",
			"type": "method",
			"signature": "org.jfree.chart.axis.Axis.drawLabel(java.lang.String, java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, org.jfree.chart.util.RectangleEdge, org.jfree.chart.axis.AxisState, org.jfree.chart.plot.PlotRenderingInfo)",
			"begin_line": 1092,
			"end_line": 1200,
			"comment": "\r\n     * Draws the axis label.\r\n     *\r\n     * @param label  the label text.\r\n     * @param g2  the graphics device.\r\n     * @param plotArea  the plot area.\r\n     * @param dataArea  the area inside the axes.\r\n     * @param edge  the location of the axis.\r\n     * @param state  the axis state (<code>null</code> not permitted).\r\n     * @param plotState  the plot state (<code>null</code> permitted).\r\n     *\r\n     * @return Information about the axis.\r\n     "
		}
	]
}