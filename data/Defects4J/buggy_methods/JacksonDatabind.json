{
	"JacksonDatabind-1b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java",
			"method_name": "serializeAsColumn",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsColumn(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 582,
			"end_line": 624,
			"comment": "\n     * Alternative to {@link #serializeAsField} that is used when a POJO\n     * is serialized as JSON Array; the difference is that no field names\n     * are written.\n     * \n     * @since 2.1\n     "
		}
	],
	"JacksonDatabind-2b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeTree",
			"arg_types": "Lcom/fasterxml/jackson/core/TreeNode;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeTree(com.fasterxml.jackson.core.TreeNode)",
			"begin_line": 790,
			"end_line": 796,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeObject",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeObject(java.lang.Object)",
			"begin_line": 780,
			"end_line": 788,
			"comment": ""
		}
	],
	"JacksonDatabind-3b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
			"method_name": "_deserializeCustom",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._deserializeCustom(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 84,
			"end_line": 105,
			"comment": "\n     * Offlined version used when we do not use the default deserialization method.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 43,
			"end_line": 79,
			"comment": ""
		}
	],
	"JacksonDatabind-4b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 42,
			"end_line": 79,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
			"method_name": "_deserializeCustom",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._deserializeCustom(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 84,
			"end_line": 106,
			"comment": "\n     * Offlined version used when we do not use the default deserialization method.\n     "
		}
	],
	"JacksonDatabind-5b": [
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
			"method_name": "_addMethodMixIns",
			"arg_types": "Ljava/lang/Class;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethodMap;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethodMap;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass._addMethodMixIns(java.lang.Class<?>, com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap, java.lang.Class<?>, com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap)",
			"begin_line": 634,
			"end_line": 662,
			"comment": ""
		}
	],
	"JacksonDatabind-6b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "parseAsISO8601",
			"arg_types": "Ljava/lang/String;Ljava/text/ParsePosition;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601(java.lang.String, java.text.ParsePosition)",
			"begin_line": 359,
			"end_line": 434,
			"comment": ""
		}
	],
	"JacksonDatabind-7b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 403,
			"end_line": 411,
			"comment": "\n     * Helper method used by standard deserializer.\n     * \n     * @since 2.3\n     "
		}
	],
	"JacksonDatabind-8b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
			"method_name": "verifyNonDup",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/AnnotatedWithParams;IZ",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.CreatorCollector.verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams, int, boolean)",
			"begin_line": 276,
			"end_line": 308,
			"comment": ""
		}
	],
	"JacksonDatabind-9b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java",
			"method_name": "serialize",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdKeySerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 24,
			"end_line": 35,
			"comment": ""
		}
	],
	"JacksonDatabind-10b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/AnyGetterWriter.java",
			"method_name": "getAndSerialize",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndSerialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 36,
			"end_line": 52,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/AnyGetterWriter.java",
			"method_name": "<init>",
			"arg_types": "Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;",
			"type": "constructor",
			"signature": "com.fasterxml.jackson.databind.ser.AnyGetterWriter.AnyGetterWriter(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.ser.std.MapSerializer)",
			"begin_line": 27,
			"end_line": 34,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/AnyGetterWriter.java",
			"method_name": "getAndFilter",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/ser/PropertyFilter;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndFilter(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.PropertyFilter)",
			"begin_line": 57,
			"end_line": 75,
			"comment": "\n     * @since 2.3\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/AnyGetterWriter.java",
			"method_name": "resolve",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.AnyGetterWriter.resolve(com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 78,
			"end_line": 83,
			"comment": " Note: NOT part of ResolvableSerializer..."
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
			"method_name": "constructBeanSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription)",
			"begin_line": 334,
			"end_line": 424,
			"comment": "\n     * Method called to construct serializer for serializing specified bean type.\n     * \n     * @since 2.1\n     "
		}
	],
	"JacksonDatabind-11b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "_fromVariable",
			"arg_types": "Ljava/lang/reflect/TypeVariable;Lcom/fasterxml/jackson/databind/type/TypeBindings;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory._fromVariable(java.lang.reflect.TypeVariable<?>, com.fasterxml.jackson.databind.type.TypeBindings)",
			"begin_line": 889,
			"end_line": 930,
			"comment": ""
		}
	],
	"JacksonDatabind-12b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/MapDeserializer.java",
			"method_name": "isCachable",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable()",
			"begin_line": 298,
			"end_line": 305,
			"comment": "\n     * Turns out that these are expensive enough to create so that caching\n     * does make sense.\n     *<p>\n     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is\n     * a value type deserializer; this caused an issue with 2.4.4 of\n     * JAXB Annotations (failing a test).\n     * It is also possible that some other settings could make deserializers\n     * un-cacheable; but on the other hand, caching can make a big positive\n     * difference with performance... so it's a hard choice.\n     * \n     * @since 2.4.4\n     "
		}
	],
	"JacksonDatabind-13b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
			"method_name": "findObjectId",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/annotation/ObjectIdGenerator;Lcom/fasterxml/jackson/annotation/ObjectIdResolver;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(java.lang.Object, com.fasterxml.jackson.annotation.ObjectIdGenerator<?>, com.fasterxml.jackson.annotation.ObjectIdResolver)",
			"begin_line": 81,
			"end_line": 131,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java",
			"method_name": "deserializeSetAndReturn",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)",
			"begin_line": 80,
			"end_line": 101,
			"comment": ""
		}
	],
	"JacksonDatabind-14b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectReader.java",
			"method_name": "_bindAsTree",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectReader._bindAsTree(com.fasterxml.jackson.core.JsonParser)",
			"begin_line": 1468,
			"end_line": 1486,
			"comment": ""
		}
	],
	"JacksonDatabind-15b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
			"method_name": "createSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 125,
			"end_line": 167,
			"comment": "\n     * Main serializer constructor method. We will have to be careful\n     * with respect to ordering of various method calls: essentially\n     * we want to reliably figure out which classes are standard types,\n     * and which are beans. The problem is that some bean Classes may\n     * implement standard interfaces (say, {@link java.lang.Iterable}.\n     *<p>\n     * Note: sub-classes may choose to complete replace implementation,\n     * if they want to alter priority of serializer lookups.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 106,
			"end_line": 128,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "isEmpty",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)",
			"begin_line": 183,
			"end_line": 188,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java",
			"method_name": "findConvertingSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.BeanPropertyWriter)",
			"begin_line": 357,
			"end_line": 376,
			"comment": "\n     * Helper method that can be used to see if specified property is annotated\n     * to indicate use of a converter for property value (in case of container types,\n     * it is container type itself, not key or content type).\n     * \n     * @since 2.2\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "serializeWithType",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)",
			"begin_line": 164,
			"end_line": 173,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "acceptJsonFormatVisitor",
			"arg_types": "Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 216,
			"end_line": 225,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "serialize",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 151,
			"end_line": 162,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
			"method_name": "isEmpty",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.isEmpty(java.lang.Object)",
			"begin_line": 175,
			"end_line": 181,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
			"method_name": "findConvertingContentSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/JsonSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer<?>)",
			"begin_line": 245,
			"end_line": 270,
			"comment": "\n     * Helper method that can be used to see if specified property has annotation\n     * indicating that a converter is to be used for contained values (contents\n     * of structured types; array/List/Map values)\n     * \n     * @param existingSerializer (optional) configured content\n     *    serializer if one already exists.\n     * \n     * @since 2.2\n     "
		}
	],
	"JacksonDatabind-16b": [
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
			"method_name": "_add",
			"arg_types": "Ljava/lang/annotation/Annotation;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.AnnotationMap._add(java.lang.annotation.Annotation)",
			"begin_line": 107,
			"end_line": 113,
			"comment": ""
		}
	],
	"JacksonDatabind-17b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectMapper.java",
			"method_name": "useForType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 167,
			"end_line": 193,
			"comment": "\n         * Method called to check if the default type handler should be\n         * used for given type.\n         * Note: \"natural types\" (String, Boolean, Integer, Double) will never\n         * use typing; that is both due to them being concrete and final,\n         * and since actual serializers and deserializers will also ignore any\n         * attempts to enforce typing.\n         "
		}
	],
	"JacksonDatabind-18b": [
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "nextValue",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.MappingIterator.nextValue()",
			"begin_line": 234,
			"end_line": 262,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "close",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.MappingIterator.close()",
			"begin_line": 187,
			"end_line": 192,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "<init>",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JsonDeserializer;ZLjava/lang/Object;",
			"type": "constructor",
			"signature": "com.fasterxml.jackson.databind.MappingIterator.MappingIterator(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JsonDeserializer<?>, boolean, java.lang.Object)",
			"begin_line": 112,
			"end_line": 145,
			"comment": "\n     * @param managedParser Whether we \"own\" the {@link JsonParser} passed or not:\n     *   if true, it was created by {@link ObjectReader} and code here needs to\n     *   close it; if false, it was passed by calling code and should not be\n     *   closed by iterator.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "hasNextValue",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.MappingIterator.hasNextValue()",
			"begin_line": 208,
			"end_line": 232,
			"comment": "\n     * Equivalent of {@link #next} but one that may throw checked\n     * exceptions from Jackson due to invalid input.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"_hasNextChecked"
			],
			"begin_line": 98,
			"end_line": 98,
			"comment": "\n     * State of the iterator\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/MappingIterator.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"_parser"
			],
			"begin_line": 69,
			"end_line": 69,
			"comment": "\n     * Underlying parser used for reading content to bind. Initialized\n     * as not <code>null</code> but set as <code>null</null> when\n     * iterator is closed, to denote closing.\n     "
		}
	],
	"JacksonDatabind-19b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "_mapType",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory._mapType(java.lang.Class<?>)",
			"begin_line": 1018,
			"end_line": 1031,
			"comment": ""
		}
	],
	"JacksonDatabind-20b": [
		{
			"class_file": "com/fasterxml/jackson/databind/node/ObjectNode.java",
			"method_name": "setAll",
			"arg_types": "Ljava/util/Map;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.node.ObjectNode.setAll(java.util.Map<java.lang.String, ? extends com.fasterxml.jackson.databind.JsonNode>)",
			"begin_line": 324,
			"end_line": 334,
			"comment": "\n     * Method for adding given properties to this object node, overriding\n     * any existing values for those properties.\n     * \n     * @param properties Properties to add\n     * \n     * @return This node after adding/replacing property values (to allow chaining)\n     *\n     * @since 2.1\n     "
		}
	],
	"JacksonDatabind-21b": [],
	"JacksonDatabind-22b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
			"method_name": "buildContainerSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean)",
			"begin_line": 544,
			"end_line": 628,
			"comment": "\n     * @since 2.1\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
			"method_name": "_createSerializer2",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean)",
			"begin_line": 170,
			"end_line": 248,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
			"method_name": "buildMapSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/type/MapType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.type.MapType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)",
			"begin_line": 737,
			"end_line": 791,
			"comment": "\n     * Helper method that handles configuration details when constructing serializers for\n     * {@link java.util.Map} types.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
			"method_name": "buildCollectionSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/type/CollectionType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.type.CollectionType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)",
			"begin_line": 636,
			"end_line": 701,
			"comment": "\n     * Helper method that handles configuration details when constructing serializers for\n     * {@link java.util.List} types that support efficient by-index access\n     * \n     * @since 2.1\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
			"method_name": "buildArraySerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/type/ArrayType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildArraySerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.type.ArrayType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)",
			"begin_line": 831,
			"end_line": 874,
			"comment": "\n     * Helper method that handles configuration details when constructing serializers for\n     * <code>Object[]</code> (and subtypes, except for String).\n     "
		}
	],
	"JacksonDatabind-23b": [],
	"JacksonDatabind-24b": [
		{
			"class_file": "com/fasterxml/jackson/databind/cfg/BaseSettings.java",
			"method_name": "withDateFormat",
			"arg_types": "Ljava/text/DateFormat;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.withDateFormat(java.text.DateFormat)",
			"begin_line": 230,
			"end_line": 238,
			"comment": ""
		}
	],
	"JacksonDatabind-25b": [
		{
			"class_file": "com/fasterxml/jackson/databind/module/SimpleAbstractTypeResolver.java",
			"method_name": "findTypeMapping",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver.findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 70,
			"end_line": 81,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
			"method_name": "modifyTypeByAnnotation",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 468,
			"end_line": 543,
			"comment": "\n     * Method called to see if given method has annotations that indicate\n     * a more specific type than what the argument specifies.\n     * If annotations are present, they must specify compatible Class;\n     * instance of which can be assigned using the method. This means\n     * that the Class has to be raw class of type, or its sub-class\n     * (or, implementing class if original Class instance is an interface).\n     *\n     * @param a Method or field that the type is associated with\n     * @param type Type derived from the setter argument\n     *\n     * @return Original type if no annotations are present; or a more\n     *   specific type derived from it if type annotation(s) was found\n     *\n     * @throws JsonMappingException if invalid annotation is found\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
			"method_name": "modifyTypeByAnnotation",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated, T)",
			"begin_line": 1747,
			"end_line": 1811,
			"comment": "\n     * Method called to see if given method has annotations that indicate\n     * a more specific type than what the argument specifies.\n     * If annotations are present, they must specify compatible Class;\n     * instance of which can be assigned using the method. This means\n     * that the Class has to be raw class of type, or its sub-class\n     * (or, implementing class if original Class instance is an interface).\n     *\n     * @param a Method or field that the type is associated with\n     * @param type Type of field, or the setter argument\n     *\n     * @return Original type if no annotations are present; or a more\n     *   specific type derived from it if type annotation(s) was found\n     *\n     * @throws JsonMappingException if invalid annotation is found\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java",
			"method_name": "_findDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String)",
			"begin_line": 144,
			"end_line": 184,
			"comment": ""
		}
	],
	"JacksonDatabind-26b": [],
	"JacksonDatabind-27b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
			"method_name": "deserializeUsingPropertyBasedWithExternalTypeId",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 773,
			"end_line": 857,
			"comment": ""
		}
	],
	"JacksonDatabind-28b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.ObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 94,
			"end_line": 107,
			"comment": ""
		}
	],
	"JacksonDatabind-29b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java",
			"method_name": "_deserializeAndSet",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;ILjava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, int, java.lang.String)",
			"begin_line": 241,
			"end_line": 261,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java",
			"method_name": "_deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;ILjava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, int, java.lang.String)",
			"begin_line": 221,
			"end_line": 239,
			"comment": ""
		}
	],
	"JacksonDatabind-30b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "<init>",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "constructor",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.TokenBuffer(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 177,
			"end_line": 188,
			"comment": "\n     * @since 2.7\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectMapper.java",
			"method_name": "_convert",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectMapper._convert(java.lang.Object, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 3408,
			"end_line": 3455,
			"comment": "\n     * Actual conversion implementation: instead of using existing read\n     * and write methods, much of code is inlined. Reason for this is\n     * that we must avoid root value wrapping/unwrapping both for efficiency and\n     * for correctness. If root value wrapping/unwrapping is actually desired,\n     * caller must use explicit <code>writeValue</code> and\n     * <code>readValue</code> methods.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "copyCurrentEvent",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.copyCurrentEvent(com.fasterxml.jackson.core.JsonParser)",
			"begin_line": 917,
			"end_line": 990,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectMapper.java",
			"method_name": "valueToTree",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectMapper.valueToTree(java.lang.Object)",
			"begin_line": 2504,
			"end_line": 2520,
			"comment": "\n     * Reverse of {@link #treeToValue}; given a value (usually bean), will\n     * construct equivalent JSON Tree representation. Functionally similar\n     * to serializing value into JSON and parsing JSON as tree, but\n     * more efficient.\n     *<p>\n     * NOTE: while results are usually identical to that of serialization followed\n     * by deserialization, this is not always the case. In some cases serialization\n     * into intermediate representation will retain encapsulation of things like\n     * raw value ({@link com.fasterxml.jackson.databind.util.RawValue}) or basic\n     * node identity ({@link JsonNode}). If so, result is a valid tree, but values\n     * are not re-constructed through actual JSON representation. So if transformation\n     * requires actual materialization of JSON (or other data format that this mapper\n     * produces), it will be necessary to do actual serialization.\n     * \n     * @param <T> Actual node type; usually either basic {@link JsonNode} or\n     *  {@link com.fasterxml.jackson.databind.node.ObjectNode}\n     * @param fromValue Bean value to convert\n     * @return Root node of the resulting JSON tree\n     "
		}
	],
	"JacksonDatabind-31b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "I",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(int)",
			"begin_line": 758,
			"end_line": 761,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeRawValue",
			"arg_types": "[CII",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue(char[], int, int)",
			"begin_line": 742,
			"end_line": 745,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "D",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(double)",
			"begin_line": 768,
			"end_line": 771,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.lang.String)",
			"begin_line": 796,
			"end_line": 802,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "Ljava/math/BigInteger;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.math.BigInteger)",
			"begin_line": 787,
			"end_line": 794,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "J",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(long)",
			"begin_line": 763,
			"end_line": 766,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeString",
			"arg_types": "Lcom/fasterxml/jackson/core/SerializableString;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeString(com.fasterxml.jackson.core.SerializableString)",
			"begin_line": 681,
			"end_line": 688,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeTree",
			"arg_types": "Lcom/fasterxml/jackson/core/TreeNode;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeTree(com.fasterxml.jackson.core.TreeNode)",
			"begin_line": 843,
			"end_line": 857,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeObject",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeObject(java.lang.Object)",
			"begin_line": 820,
			"end_line": 841,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeString",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeString(java.lang.String)",
			"begin_line": 667,
			"end_line": 674,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "Ljava/math/BigDecimal;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(java.math.BigDecimal)",
			"begin_line": 778,
			"end_line": 785,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeBoolean",
			"arg_types": "Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeBoolean(boolean)",
			"begin_line": 804,
			"end_line": 807,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeRawValue",
			"arg_types": "Ljava/lang/String;II",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue(java.lang.String, int, int)",
			"begin_line": 734,
			"end_line": 740,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "S",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(short)",
			"begin_line": 753,
			"end_line": 756,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeRawValue",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue(java.lang.String)",
			"begin_line": 729,
			"end_line": 732,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNull",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNull()",
			"begin_line": 809,
			"end_line": 812,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/TokenBuffer.java",
			"method_name": "writeNumber",
			"arg_types": "F",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(float)",
			"begin_line": 773,
			"end_line": 776,
			"comment": ""
		}
	],
	"JacksonDatabind-32b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 483,
			"end_line": 542,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 213,
			"end_line": 277,
			"comment": ""
		}
	],
	"JacksonDatabind-33b": [
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
			"method_name": "findNameForSerialization",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/Annotated;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)",
			"begin_line": 730,
			"end_line": 755,
			"comment": ""
		}
	],
	"JacksonDatabind-34b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
			"method_name": "acceptJsonFormatVisitor",
			"arg_types": "Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 73,
			"end_line": 87,
			"comment": ""
		}
	],
	"JacksonDatabind-35b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java",
			"method_name": "_deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 78,
			"end_line": 120,
			"comment": "\n     * Method that handles type information wrapper, locates actual\n     * subtype deserializer to use, and calls it to do actual\n     * deserialization.\n     "
		}
	],
	"JacksonDatabind-36b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "_cloneFormat",
			"arg_types": "Ljava/text/DateFormat;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/lang/Boolean;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat._cloneFormat(java.text.DateFormat, java.lang.String, java.util.TimeZone, java.util.Locale, java.lang.Boolean)",
			"begin_line": 545,
			"end_line": 558,
			"comment": ""
		}
	],
	"JacksonDatabind-37b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/SimpleType.java",
			"method_name": "_narrow",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)",
			"begin_line": 119,
			"end_line": 137,
			"comment": ""
		}
	],
	"JacksonDatabind-38b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/SimpleType.java",
			"method_name": "construct",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)",
			"begin_line": 100,
			"end_line": 118,
			"comment": "\n     * Method that should NOT to be used by application code:\n     * it does NOT properly handle inspection of super-types, so neither parent\n     * Classes nor implemented Interfaces are accessible with resulting type\n     * instance. Instead, please use {@link TypeFactory}'s <code>constructType</code>\n     * methods which handle introspection appropriately.\n     *<p>\n     * Note that prior to 2.7, method usage was not limited and would typically\n     * have worked acceptably: the problem comes from inability to resolve super-type\n     * information, for which {@link TypeFactory} is needed.\n     * \n     * @deprecated Since 2.7\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/CollectionType.java",
			"method_name": "construct",
			"arg_types": "Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.CollectionType.construct(java.lang.Class<?>, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 46,
			"end_line": 54,
			"comment": "\n     * @deprecated Since 2.7, remove from 2.8\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/MapType.java",
			"method_name": "construct",
			"arg_types": "Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.MapType.construct(java.lang.Class<?>, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 42,
			"end_line": 50,
			"comment": ""
		}
	],
	"JacksonDatabind-39b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 30,
			"end_line": 37,
			"comment": ""
		}
	],
	"JacksonDatabind-40b": [],
	"JacksonDatabind-41b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructType",
			"arg_types": "Ljava/lang/reflect/Type;Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type, java.lang.Class<?>)",
			"begin_line": 600,
			"end_line": 603,
			"comment": "\n     * @deprecated Since 2.7 (accidentally removed in 2.7.0; added back in 2.7.1)\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructType",
			"arg_types": "Ljava/lang/reflect/Type;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 608,
			"end_line": 611,
			"comment": "\n     * @deprecated Since 2.7 (accidentally removed in 2.7.0; added back in 2.7.1)\n     "
		}
	],
	"JacksonDatabind-42b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java",
			"method_name": "_deserializeFromEmptyString",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std._deserializeFromEmptyString()",
			"begin_line": 277,
			"end_line": 285,
			"comment": ""
		}
	],
	"JacksonDatabind-43b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java",
			"method_name": "deserializeSetAndReturn",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object)",
			"begin_line": 74,
			"end_line": 96,
			"comment": ""
		}
	],
	"JacksonDatabind-44b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/SimpleType.java",
			"method_name": "_narrow",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)",
			"begin_line": 121,
			"end_line": 141,
			"comment": ""
		}
	],
	"JacksonDatabind-45b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 49,
			"end_line": 81,
			"comment": ""
		}
	],
	"JacksonDatabind-46b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/ReferenceType.java",
			"method_name": "getGenericSignature",
			"arg_types": "Ljava/lang/StringBuilder;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature(java.lang.StringBuilder)",
			"begin_line": 150,
			"end_line": 158,
			"comment": ""
		}
	],
	"JacksonDatabind-47b": [
		{
			"class_file": "com/fasterxml/jackson/databind/AnnotationIntrospector.java",
			"method_name": "refineSerializationType",
			"arg_types": "Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.AnnotationIntrospector.refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 795,
			"end_line": 896,
			"comment": "\n     * Method called to find out possible type refinements to use\n     * for deserialization.\n     *\n     * @since 2.7\n     "
		}
	],
	"JacksonDatabind-48b": [
		{
			"class_file": "com/fasterxml/jackson/databind/DeserializationConfig.java",
			"method_name": "getDefaultVisibilityChecker",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.DeserializationConfig.getDefaultVisibilityChecker()",
			"begin_line": 770,
			"end_line": 784,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/SerializationConfig.java",
			"method_name": "getDefaultVisibilityChecker",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.SerializationConfig.getDefaultVisibilityChecker()",
			"begin_line": 860,
			"end_line": 875,
			"comment": ""
		}
	],
	"JacksonDatabind-49b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java",
			"method_name": "generateId",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.impl.WritableObjectId.generateId(java.lang.Object)",
			"begin_line": 46,
			"end_line": 52,
			"comment": ""
		}
	],
	"JacksonDatabind-50b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
			"method_name": "_deserializeUsingPropertyBased",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 376,
			"end_line": 474,
			"comment": "\n     * Method called to deserialize bean using \"property-based creator\":\n     * this means that a non-default constructor or factory method is\n     * called, and then possibly other setters. The trick is that\n     * values for creator method need to be buffered, first; and\n     * due to non-guaranteed ordering possibly some other properties\n     * as well.\n     "
		}
	],
	"JacksonDatabind-51b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java",
			"method_name": "_findDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String)",
			"begin_line": 140,
			"end_line": 191,
			"comment": ""
		}
	],
	"JacksonDatabind-52b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "resolve",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 456,
			"end_line": 624,
			"comment": "\n     * Method called to finalize setup of this deserializer,\n     * after deserializer itself has been registered.\n     * This is needed to handle recursive and transitive dependencies.\n     "
		}
	],
	"JacksonDatabind-53b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"_typeCache"
			],
			"begin_line": 117,
			"end_line": 117,
			"comment": "\n     * Since type resolution can be expensive (specifically when resolving\n     * actual generic types), we will use small cache to avoid repetitive\n     * resolution of core types\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "_fromClass",
			"arg_types": "Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory._fromClass(com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class<?>, com.fasterxml.jackson.databind.type.TypeBindings)",
			"begin_line": 1152,
			"end_line": 1229,
			"comment": "\n     * @param bindings Mapping of formal parameter declarations (for generic\n     *   types) into actual types\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructSpecializedType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class<?>)",
			"begin_line": 312,
			"end_line": 454,
			"comment": "\n     * Factory method for creating a subtype of given base type, as defined\n     * by specified subclass; but retaining generic type information if any.\n     * Can be used, for example, to get equivalent of \"HashMap&lt;String,Integer&gt;\"\n     * from \"Map&lt;String,Integer&gt;\" by giving <code>HashMap.class</code>\n     * as subclass.\n     "
		}
	],
	"JacksonDatabind-54b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/PropertyBuilder.java",
			"method_name": "buildWriter",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.introspect.AnnotatedMember, boolean)",
			"begin_line": 67,
			"end_line": 171,
			"comment": "\n     * @param contentTypeSer Optional explicit type information serializer\n     *    to use for contained values (only used for properties that are\n     *    of container type)\n     "
		}
	],
	"JacksonDatabind-55b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java",
			"method_name": "getFallbackKeySerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializationConfig;Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.StdKeySerializers.getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class<?>)",
			"begin_line": 67,
			"end_line": 86,
			"comment": "\n     * Method called if no specified key serializer was located; will return a\n     * \"default\" key serializer.\n     *\n     * @since 2.7\n     "
		}
	],
	"JacksonDatabind-56b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java",
			"method_name": "_deserialize",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.Std._deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 205,
			"end_line": 276,
			"comment": ""
		}
	],
	"JacksonDatabind-57b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectReader.java",
			"method_name": "readValues",
			"arg_types": "[BII",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectReader.readValues(byte[], int, int)",
			"begin_line": 1435,
			"end_line": 1443,
			"comment": "\n     * Overloaded version of {@link #readValue(InputStream)}.\n     "
		}
	],
	"JacksonDatabind-58b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "constructSettableProperty",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 703,
			"end_line": 752,
			"comment": "\n     * Method that will construct a regular bean property setter using\n     * the given setter method.\n     *\n     * @return Property constructed, if any; or null to indicate that\n     *   there should be no property based on given definitions.\n     "
		}
	],
	"JacksonDatabind-59b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructSpecializedType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class<?>)",
			"begin_line": 342,
			"end_line": 474,
			"comment": "\n     * Factory method for creating a subtype of given base type, as defined\n     * by specified subclass; but retaining generic type information if any.\n     * Can be used, for example, to get equivalent of \"HashMap&lt;String,Integer&gt;\"\n     * from \"Map&lt;String,Integer&gt;\" by giving <code>HashMap.class</code>\n     * as subclass.\n     "
		}
	],
	"JacksonDatabind-60b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/JsonValueSerializer.java",
			"method_name": "serializeWithType",
			"arg_types": "Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer)",
			"begin_line": 195,
			"end_line": 242,
			"comment": ""
		}
	],
	"JacksonDatabind-61b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectMapper.java",
			"method_name": "useForType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder.useForType(com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 228,
			"end_line": 263,
			"comment": "\n         * Method called to check if the default type handler should be\n         * used for given type.\n         * Note: \"natural types\" (String, Boolean, Integer, Double) will never\n         * use typing; that is both due to them being concrete and final,\n         * and since actual serializers and deserializers will also ignore any\n         * attempts to enforce typing.\n         "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
			"method_name": "buildTypeDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Ljava/util/Collection;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)",
			"begin_line": 97,
			"end_line": 144,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
			"method_name": "buildTypeSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Ljava/util/Collection;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>)",
			"begin_line": 67,
			"end_line": 89,
			"comment": ""
		}
	],
	"JacksonDatabind-62b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 169,
			"end_line": 208,
			"comment": "\n     * Method called to finalize setup of this deserializer,\n     * when it is known for which property deserializer is needed\n     * for.\n     "
		}
	],
	"JacksonDatabind-63b": [
		{
			"class_file": "com/fasterxml/jackson/databind/JsonMappingException.java",
			"method_name": "getDescription",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.JsonMappingException.Reference.getDescription()",
			"begin_line": 119,
			"end_line": 152,
			"comment": ""
		}
	],
	"JacksonDatabind-64b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/PropertyBuilder.java",
			"method_name": "buildWriter",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.introspect.AnnotatedMember, boolean)",
			"begin_line": 89,
			"end_line": 216,
			"comment": "\n     * @param contentTypeSer Optional explicit type information serializer\n     *    to use for contained values (only used for properties that are\n     *    of container type)\n     "
		}
	],
	"JacksonDatabind-65b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
			"method_name": "deserializeKey",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.deserializeKey(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 115,
			"end_line": 134,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
			"method_name": "findFactoryMethod",
			"arg_types": "[Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findFactoryMethod(java.lang.Class<?>...)",
			"begin_line": 519,
			"end_line": 537,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
			"method_name": "isFactoryMethod",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethod;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod)",
			"begin_line": 539,
			"end_line": 570,
			"comment": ""
		}
	],
	"JacksonDatabind-66b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
			"method_name": "deserializeKey",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.DelegatingKD.deserializeKey(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 306,
			"end_line": 324,
			"comment": ""
		}
	],
	"JacksonDatabind-67b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
			"method_name": "createKeyDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 1384,
			"end_line": 1416,
			"comment": ""
		}
	],
	"JacksonDatabind-68b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromDouble",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1286,
			"end_line": 1311,
			"comment": "\n     * Method called to deserialize POJO value from a JSON floating-point\n     * number.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromNumber",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1212,
			"end_line": 1258,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromBoolean",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1316,
			"end_line": 1330,
			"comment": "\n     * Method called to deserialize POJO value from a JSON boolean value (true, false)\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromObjectUsingNonDefault",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1189,
			"end_line": 1206,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromArray",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1332,
			"end_line": 1380,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
			"method_name": "deserializeFromString",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 1260,
			"end_line": 1280,
			"comment": ""
		}
	],
	"JacksonDatabind-69b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
			"method_name": "verifyNonDup",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/AnnotatedWithParams;IZ",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.CreatorCollector.verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams, int, boolean)",
			"begin_line": 299,
			"end_line": 341,
			"comment": "\n     * @return True if specified Creator is to be used\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
			"method_name": "addDelegatingCreator",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/AnnotatedWithParams;Z[Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.CreatorCollector.addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams, boolean, com.fasterxml.jackson.databind.deser.SettableBeanProperty[])",
			"begin_line": 161,
			"end_line": 171,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
			"method_name": "addPropertyCreator",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/AnnotatedWithParams;Z[Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.CreatorCollector.addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams, boolean, com.fasterxml.jackson.databind.deser.SettableBeanProperty[])",
			"begin_line": 173,
			"end_line": 195,
			"comment": ""
		}
	],
	"JacksonDatabind-70b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
			"method_name": "remove",
			"arg_types": "Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)",
			"begin_line": 426,
			"end_line": 453,
			"comment": "\n     * Specialized method for removing specified existing entry.\n     * NOTE: entry MUST exist, otherwise an exception is thrown.\n     "
		}
	],
	"JacksonDatabind-71b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
			"method_name": "forType",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.forType(java.lang.Class<?>)",
			"begin_line": 70,
			"end_line": 116,
			"comment": ""
		}
	],
	"JacksonDatabind-72b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java",
			"method_name": "writeReplace",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.writeReplace()",
			"begin_line": 160,
			"end_line": 166,
			"comment": ""
		}
	],
	"JacksonDatabind-73b": [
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
			"method_name": "removeNonVisible",
			"arg_types": "Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.removeNonVisible(boolean)",
			"begin_line": 644,
			"end_line": 683,
			"comment": "\n     * @param inferMutators Whether mutators can be \"pulled in\" by visible\n     *    accessors or not. \n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
			"method_name": "_removeUnwantedAccessor",
			"arg_types": "Ljava/util/Map;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._removeUnwantedAccessor(java.util.Map<java.lang.String, com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder>)",
			"begin_line": 723,
			"end_line": 733,
			"comment": "\n     * Method called to further get rid of unwanted individual accessors,\n     * based on read/write settings and rules for \"pulling in\" accessors\n     * (or not).\n     "
		}
	],
	"JacksonDatabind-74b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java",
			"method_name": "_deserializeTypedUsingDefaultImpl",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/util/TokenBuffer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.util.TokenBuffer)",
			"begin_line": 133,
			"end_line": 160,
			"comment": " off-lined to keep main method lean and mean..."
		}
	],
	"JacksonDatabind-75b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/EnumSerializer.java",
			"method_name": "construct",
			"arg_types": "Ljava/lang/Class;Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/annotation/JsonFormat$Value;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.EnumSerializer.construct(java.lang.Class<?>, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.annotation.JsonFormat.Value)",
			"begin_line": 77,
			"end_line": 88,
			"comment": "\n     * Factory method used by {@link com.fasterxml.jackson.databind.ser.BasicSerializerFactory}\n     * for constructing serializer instance of Enum types.\n     * \n     * @since 2.1\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/EnumSerializer.java",
			"method_name": "_isShapeWrittenUsingIndex",
			"arg_types": "Ljava/lang/Class;Lcom/fasterxml/jackson/annotation/JsonFormat$Value;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.EnumSerializer._isShapeWrittenUsingIndex(java.lang.Class<?>, com.fasterxml.jackson.annotation.JsonFormat.Value, boolean)",
			"begin_line": 216,
			"end_line": 239,
			"comment": "\n     * Helper method called to check whether serialization should be done using\n     * index (number) or not.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/EnumSerializer.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 95,
			"end_line": 111,
			"comment": "\n     * To support some level of per-property configuration, we will need\n     * to make things contextual. We are limited to \"textual vs index\"\n     * choice here, however.\n     "
		}
	],
	"JacksonDatabind-76b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java",
			"method_name": "deserializeUsingPropertyBasedWithUnwrapped",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 565,
			"end_line": 637,
			"comment": ""
		}
	],
	"JacksonDatabind-77b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "createBeanDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)",
			"begin_line": 96,
			"end_line": 145,
			"comment": "\n     * Method that {@link DeserializerCache}s call to create a new\n     * deserializer for types other than Collections, Maps, arrays and\n     * enums.\n     "
		}
	],
	"JacksonDatabind-78b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "createBeanDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)",
			"begin_line": 110,
			"end_line": 158,
			"comment": "\n     * Method that {@link DeserializerCache}s call to create a new\n     * deserializer for types other than Collections, Maps, arrays and\n     * enums.\n     "
		}
	],
	"JacksonDatabind-79b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 383,
			"end_line": 516,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
			"method_name": "findObjectReferenceInfo",
			"arg_types": "Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/introspect/ObjectIdInfo;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.introspect.ObjectIdInfo)",
			"begin_line": 576,
			"end_line": 583,
			"comment": ""
		}
	],
	"JacksonDatabind-80b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java",
			"method_name": "collectAndResolveSubtypesByClass",
			"arg_types": "Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 57,
			"end_line": 95,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java",
			"method_name": "collectAndResolveSubtypesByTypeId",
			"arg_types": "Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 127,
			"end_line": 164,
			"comment": ""
		}
	],
	"JacksonDatabind-81b": [
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
			"method_name": "refineSerializationType",
			"arg_types": "Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 738,
			"end_line": 848,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
			"method_name": "refineDeserializationType",
			"arg_types": "Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 1108,
			"end_line": 1164,
			"comment": ""
		}
	],
	"JacksonDatabind-82b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "addBeanProps",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBuilder;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)",
			"begin_line": 472,
			"end_line": 615,
			"comment": "\n     * Method called to figure out settable properties for the\n     * bean deserializer to use.\n     *<p>\n     * Note: designed to be overridable, and effort is made to keep interface\n     * similar between versions.\n     "
		}
	],
	"JacksonDatabind-83b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java",
			"method_name": "deserialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 103,
			"end_line": 159,
			"comment": ""
		}
	],
	"JacksonDatabind-84b": [],
	"JacksonDatabind-85b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 48,
			"end_line": 95,
			"comment": ""
		}
	],
	"JacksonDatabind-86b": [],
	"JacksonDatabind-87b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "_clearFormats",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats()",
			"begin_line": 593,
			"end_line": 599,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "parseAsISO8601",
			"arg_types": "Ljava/lang/String;Ljava/text/ParsePosition;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601(java.lang.String, java.text.ParsePosition, boolean)",
			"begin_line": 428,
			"end_line": 549,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "<clinit>",
			"arg_types": "",
			"type": "field",
			"varNames": [
				"ALL_FORMATS"
			],
			"begin_line": 62,
			"end_line": 67,
			"comment": "\n     * For error messages we'll also need a list of all formats.\n     "
		}
	],
	"JacksonDatabind-88b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java",
			"method_name": "_typeFromId",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DatabindContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver._typeFromId(java.lang.String, com.fasterxml.jackson.databind.DatabindContext)",
			"begin_line": 45,
			"end_line": 78,
			"comment": ""
		}
	],
	"JacksonDatabind-89b": [],
	"JacksonDatabind-90b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/ValueInstantiator.java",
			"method_name": "canInstantiate",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.ValueInstantiator.canInstantiate()",
			"begin_line": 70,
			"end_line": 76,
			"comment": "\n     * Method that will return true if any of <code>canCreateXxx</code> method\n     * returns true: that is, if there is any way that an instance could\n     * be created.\n     "
		}
	],
	"JacksonDatabind-91b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
			"method_name": "_hasCustomHandlers",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.DeserializerCache._hasCustomHandlers(com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 536,
			"end_line": 546,
			"comment": "\n     * Helper method used to prevent both caching and cache lookups for structured\n     * types that have custom value handlers\n     *\n     * @since 2.8.11\n     "
		}
	],
	"JacksonDatabind-92b": [],
	"JacksonDatabind-93b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
			"method_name": "validateSubType",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.validateSubType(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 67,
			"end_line": 99,
			"comment": ""
		}
	],
	"JacksonDatabind-94b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
			"method_name": "validateSubType",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.validateSubType(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 71,
			"end_line": 111,
			"comment": ""
		}
	],
	"JacksonDatabind-95b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeParser.java",
			"method_name": "parseType",
			"arg_types": "Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeParser.parseType(com.fasterxml.jackson.databind.type.TypeParser.MyTokenizer)",
			"begin_line": 40,
			"end_line": 60,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructParametricType",
			"arg_types": "Ljava/lang/Class;[Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructParametricType(java.lang.Class<?>, java.lang.Class<?>...)",
			"begin_line": 892,
			"end_line": 899,
			"comment": "\n     * Factory method for constructing {@link JavaType} that\n     * represents a parameterized type. For example, to represent\n     * type <code>List&lt;Set&lt;Integer>></code>, you could\n     * call\n     *<pre>\n     *  JavaType inner = TypeFactory.constructParametrizedType(Set.class, Set.class, Integer.class);\n     *  return TypeFactory.constructParametrizedType(ArrayList.class, List.class, inner);\n     *</pre>\n     *<p>\n     * The reason for first two arguments to be separate is that parameterization may\n     * apply to a super-type. For example, if generic type was instead to be\n     * constructed for <code>ArrayList&lt;Integer></code>, the usual call would be:\n     *<pre>\n     *  TypeFactory.constructParametrizedType(ArrayList.class, List.class, Integer.class);\n     *</pre>\n     * since parameterization is applied to {@link java.util.List}.\n     * In most cases distinction does not matter, but there are types where it does;\n     * one such example is parameterization of types that implement {@link java.util.Iterator}.\n     *<p>\n     * NOTE: type modifiers are NOT called on constructed type.\n     * \n     * @param parametrized Actual full type\n     * @param parameterClasses Type parameters to apply\n     *\n     * @since 2.5 NOTE: was briefly deprecated for 2.6\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/type/TypeFactory.java",
			"method_name": "constructSpecializedType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType, java.lang.Class<?>)",
			"begin_line": 342,
			"end_line": 412,
			"comment": "\n     * Factory method for creating a subtype of given base type, as defined\n     * by specified subclass; but retaining generic type information if any.\n     * Can be used, for example, to get equivalent of \"HashMap&lt;String,Integer&gt;\"\n     * from \"Map&lt;String,Integer&gt;\" by giving <code>HashMap.class</code>\n     * as subclass.\n     "
		}
	],
	"JacksonDatabind-96b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
			"method_name": "_addExplicitAnyCreator",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/deser/impl/CreatorCollector;Lcom/fasterxml/jackson/databind/deser/impl/CreatorCandidate;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.deser.impl.CreatorCollector, com.fasterxml.jackson.databind.deser.impl.CreatorCandidate)",
			"begin_line": 701,
			"end_line": 752,
			"comment": "\n     * Helper method called when there is the explicit \"is-creator\", but no mode declaration.\n     *\n     * @since 2.9.2\n     "
		}
	],
	"JacksonDatabind-97b": [
		{
			"class_file": "com/fasterxml/jackson/databind/node/POJONode.java",
			"method_name": "serialize",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.node.POJONode.serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)",
			"begin_line": 104,
			"end_line": 116,
			"comment": ""
		}
	],
	"JacksonDatabind-98b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java",
			"method_name": "complete",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer;Lcom/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer, com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator)",
			"begin_line": 255,
			"end_line": 311,
			"comment": "\n     * Variant called when creation of the POJO involves buffering of creator properties\n     * as well as property-based creator.\n     "
		}
	],
	"JacksonDatabind-99b": [
		{
			"class_file": "com/fasterxml/jackson/databind/type/ReferenceType.java",
			"method_name": "buildCanonicalName",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()",
			"begin_line": 162,
			"end_line": 170,
			"comment": ""
		}
	],
	"JacksonDatabind-100b": [
		{
			"class_file": "com/fasterxml/jackson/databind/node/TreeTraversingParser.java",
			"method_name": "getBinaryValue",
			"arg_types": "Lcom/fasterxml/jackson/core/Base64Variant;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.node.TreeTraversingParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)",
			"begin_line": 354,
			"end_line": 376,
			"comment": ""
		}
	],
	"JacksonDatabind-101b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
			"method_name": "deserializeUsingPropertyBasedWithUnwrapped",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 735,
			"end_line": 836,
			"comment": ""
		}
	],
	"JacksonDatabind-102b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 61,
			"end_line": 136,
			"comment": ""
		}
	],
	"JacksonDatabind-103b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
			"method_name": "_weirdKey",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/String;Ljava/lang/Exception;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer._weirdKey(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String, java.lang.Exception)",
			"begin_line": 260,
			"end_line": 263,
			"comment": " @since 2.9"
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/SettableAnyProperty.java",
			"method_name": "_throwAsIOE",
			"arg_types": "Ljava/lang/Exception;Ljava/lang/Object;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.SettableAnyProperty._throwAsIOE(java.lang.Exception, java.lang.Object, java.lang.Object)",
			"begin_line": 194,
			"end_line": 215,
			"comment": "\n     * @param e Exception to re-throw or wrap\n     * @param propName Name of property (from Json input) to set\n     * @param value Value of the property\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
			"method_name": "includeFilterSuppressNulls",
			"arg_types": "Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.includeFilterSuppressNulls(java.lang.Object)",
			"begin_line": 158,
			"end_line": 175,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
			"method_name": "wrapException",
			"arg_types": "Ljava/lang/Throwable;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapException(java.lang.Throwable)",
			"begin_line": 445,
			"end_line": 457,
			"comment": "\n     * @deprecated Since 2.7 call either {@link #unwrapAndWrapException} or\n     *  {@link #wrapAsJsonMappingException}\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/DatabindContext.java",
			"method_name": "resolveSubType",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.DatabindContext.resolveSubType(com.fasterxml.jackson.databind.JavaType, java.lang.String)",
			"begin_line": 170,
			"end_line": 202,
			"comment": "\n     * Lookup method called when code needs to resolve class name from input;\n     * usually simple lookup\n     *\n     * @since 2.9\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/DeserializationContext.java",
			"method_name": "parseDate",
			"arg_types": "Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.DeserializationContext.parseDate(java.lang.String)",
			"begin_line": 706,
			"end_line": 716,
			"comment": "\n     * Convenience method for parsing a Date from given String, using\n     * currently configured date format (accessed using\n     * {@link DeserializationConfig#getDateFormat()}).\n     *<p>\n     * Implementation will handle thread-safety issues related to\n     * date formats such that first time this method is called,\n     * date format is cloned, and cloned instance will be retained\n     * for use during this deserialization round.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "buildBuilderBasedDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)",
			"begin_line": 265,
			"end_line": 323,
			"comment": "\n     * Method for constructing a bean deserializer that uses specified\n     * intermediate Builder for binding data, and construction of the\n     * value instance.\n     * Note that implementation is mostly copied from the regular\n     * BeanDeserializer build method.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/JsonMappingException.java",
			"method_name": "fromUnexpectedIOE",
			"arg_types": "Ljava/io/IOException;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(java.io.IOException)",
			"begin_line": 335,
			"end_line": 340,
			"comment": "\n     * Factory method used when \"upgrading\" an {@link IOException} into\n     * {@link JsonMappingException}: usually only needed to comply with\n     * a signature.\n     *<p>\n     * NOTE: since 2.9 should usually NOT be used on input-side (deserialization)\n     *    exceptions; instead use method(s) of <code>InputMismatchException</code>\n     * \n     * @since 2.1\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/JsonMappingException.java",
			"method_name": "wrapWithPath",
			"arg_types": "Ljava/lang/Throwable;Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable, com.fasterxml.jackson.databind.JsonMappingException.Reference)",
			"begin_line": 372,
			"end_line": 397,
			"comment": "\n     * Method that can be called to either create a new JsonMappingException\n     * (if underlying exception is not a JsonMappingException), or augment\n     * given exception with given path/reference information.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
			"method_name": "_throwAsIOE",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/Exception;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(com.fasterxml.jackson.core.JsonParser, java.lang.Exception, java.lang.Object)",
			"begin_line": 580,
			"end_line": 600,
			"comment": "\n     * Method that takes in exception of any type, and casts or wraps it\n     * to an IOException or its subclass.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
			"method_name": "deserializeKey",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.deserializeKey(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 120,
			"end_line": 141,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
			"method_name": "_throwAsIOE",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/Exception;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(com.fasterxml.jackson.core.JsonParser, java.lang.Exception)",
			"begin_line": 605,
			"end_line": 612,
			"comment": "\n     * @since 2.7\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/PropertyBuilder.java",
			"method_name": "buildWriter",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.introspect.AnnotatedMember, boolean)",
			"begin_line": 91,
			"end_line": 244,
			"comment": "\n     * @param contentTypeSer Optional explicit type information serializer\n     *    to use for contained values (only used for properties that are\n     *    of container type)\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
			"method_name": "instantiateBean",
			"arg_types": "Z",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.instantiateBean(boolean)",
			"begin_line": 344,
			"end_line": 366,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/DeserializerCache.java",
			"method_name": "_createAndCache2",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/deser/DeserializerFactory;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 258,
			"end_line": 300,
			"comment": "\n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
			"method_name": "buildBeanDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)",
			"begin_line": 201,
			"end_line": 256,
			"comment": "\n     * Method that is to actually build a bean deserializer instance.\n     * All basic sanity checks have been done to know that what we have\n     * may be a valid bean type, and that there are no default simple\n     * deserializers.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
			"method_name": "_wrapAsIOE",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Exception;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator, java.lang.Exception)",
			"begin_line": 501,
			"end_line": 510,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
			"method_name": "findTypeDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 1554,
			"end_line": 1593,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/SerializerProvider.java",
			"method_name": "_createAndCacheUntypedSerializer",
			"arg_types": "Ljava/lang/Class;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(java.lang.Class<?>)",
			"begin_line": 1330,
			"end_line": 1349,
			"comment": "\n     * Method that will try to construct a value serializer; and if\n     * one is successfully created, cache it for reuse.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/SerializerProvider.java",
			"method_name": "_createAndCacheUntypedSerializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 1351,
			"end_line": 1369,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/DeserializationContext.java",
			"method_name": "instantiationException",
			"arg_types": "Ljava/lang/Class;Ljava/lang/Throwable;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(java.lang.Class<?>, java.lang.Throwable)",
			"begin_line": 1597,
			"end_line": 1611,
			"comment": "\n     * Helper method for constructing instantiation exception for specified type,\n     * to indicate problem with physically constructing instance of\n     * specified class (missing constructor, exception from constructor)\n     *<p>\n     * Note that most of the time this method should NOT be called directly; instead,\n     * {@link #handleInstantiationProblem} should be called which will call this method\n     * if necessary.\n     "
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
			"method_name": "_parseDate",
			"arg_types": "Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 514,
			"end_line": 528,
			"comment": "\n     * @since 2.8\n     "
		}
	],
	"JacksonDatabind-104b": [
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "_format",
			"arg_types": "Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;Ljava/lang/StringBuffer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat._format(java.util.TimeZone, java.util.Locale, java.util.Date, java.lang.StringBuffer)",
			"begin_line": 432,
			"end_line": 481,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/util/StdDateFormat.java",
			"method_name": "pad4",
			"arg_types": "Ljava/lang/StringBuffer;I",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.util.StdDateFormat.pad4(java.lang.StringBuffer, int)",
			"begin_line": 511,
			"end_line": 520,
			"comment": ""
		}
	],
	"JacksonDatabind-105b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java",
			"method_name": "find",
			"arg_types": "Ljava/lang/Class;Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.JdkDeserializers.find(java.lang.Class<?>, java.lang.String)",
			"begin_line": 28,
			"end_line": 50,
			"comment": ""
		}
	],
	"JacksonDatabind-106b": [
		{
			"class_file": "com/fasterxml/jackson/databind/node/TreeTraversingParser.java",
			"method_name": "getLongValue",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.node.TreeTraversingParser.getLongValue()",
			"begin_line": 311,
			"end_line": 315,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/node/TreeTraversingParser.java",
			"method_name": "getIntValue",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.node.TreeTraversingParser.getIntValue()",
			"begin_line": 305,
			"end_line": 309,
			"comment": ""
		}
	],
	"JacksonDatabind-107b": [
		{
			"class_file": "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java",
			"method_name": "_findDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/String;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String)",
			"begin_line": 146,
			"end_line": 199,
			"comment": ""
		}
	],
	"JacksonDatabind-108b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ObjectReader.java",
			"method_name": "readTree",
			"arg_types": "Lcom/fasterxml/jackson/core/JsonParser;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ObjectReader.readTree(com.fasterxml.jackson.core.JsonParser)",
			"begin_line": 1166,
			"end_line": 1170,
			"comment": "\n     * Convenience method that binds content read using given parser, using\n     * configuration of this reader, except that content is bound as\n     * JSON tree instead of configured root value type.\n     * Returns {@link JsonNode} that represents the root of the resulting tree, if there\n     * was content to read, or {@code null} if no more content is accessible\n     * via passed {@link JsonParser}.\n     *<p>\n     * NOTE! Behavior with end-of-input (no more content) differs between this\n     * {@code readTree} method, and all other methods that take input source: latter\n     * will return \"missing node\", NOT {@code null}\n     *<p>\n     * Note: if an object was specified with {@link #withValueToUpdate}, it\n     * will be ignored.\n     *<p>\n     * NOTE: this method never tries to auto-detect format, since actual\n     * (data-format specific) parser is given.\n     "
		}
	],
	"JacksonDatabind-109b": [
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.Base.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 92,
			"end_line": 105,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 49,
			"end_line": 63,
			"comment": ""
		}
	],
	"JacksonDatabind-110b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java",
			"method_name": "findForCollection",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.findForCollection(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType)",
			"begin_line": 64,
			"end_line": 86,
			"comment": ""
		}
	],
	"JacksonDatabind-111b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 49,
			"end_line": 56,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.FieldProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 87,
			"end_line": 94,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/MethodProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.MethodProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 78,
			"end_line": 85,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/SetterlessProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 62,
			"end_line": 69,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 48,
			"end_line": 55,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
			"method_name": "readResolve",
			"arg_types": "",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.FieldProperty.readResolve()",
			"begin_line": 214,
			"end_line": 216,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/CreatorProperty.java",
			"method_name": "withValueDeserializer",
			"arg_types": "Lcom/fasterxml/jackson/databind/JsonDeserializer;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.CreatorProperty.withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)",
			"begin_line": 129,
			"end_line": 136,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer.java",
			"method_name": "getNullValue",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)",
			"begin_line": 41,
			"end_line": 44,
			"comment": ""
		},
		{
			"class_file": "com/fasterxml/jackson/databind/deser/impl/SetterlessProperty.java",
			"method_name": "setAndReturn",
			"arg_types": "Ljava/lang/Object;Ljava/lang/Object;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.setAndReturn(java.lang.Object, java.lang.Object)",
			"begin_line": 150,
			"end_line": 155,
			"comment": ""
		}
	],
	"JacksonDatabind-112b": [
		{
			"class_file": "com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java",
			"method_name": "createContextual",
			"arg_types": "Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;",
			"type": "method",
			"signature": "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty)",
			"begin_line": 99,
			"end_line": 134,
			"comment": "\n    /**********************************************************\n    /* Validation, post-processing\n    /**********************************************************\n     "
		}
	]
}