{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-57b",
  "repositoryPath": "/tmp/Jsoup-57b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "select",
  "functionId": "select___cssQuery-String",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n@throws Selector.SelectorParseException (unchecked) on an invalid CSS query.\n",
  "functionStartLine": 286,
  "functionEndLine": 288,
  "numCommitsSeen": 184,
  "timeTaken": 3305,
  "changeHistory": [
    "6e14804768c3553c0670ea08135675d67d51d811",
    "842977c381b8d48bf12719e3f5cf6fd669379957",
    "f31916f55db7d57b67b71c469105978692b88cf5",
    "ca8bad78bf898f808ad6028d4a7c09a69bc65b84",
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "e4ff08f2bad145ec500228de112c8e821e8725cc",
    "04025259e96d3676097e84126fb55124b92c50ed"
  ],
  "changeHistoryShort": {
    "6e14804768c3553c0670ea08135675d67d51d811": "Ydocchange",
    "842977c381b8d48bf12719e3f5cf6fd669379957": "Ydocchange",
    "f31916f55db7d57b67b71c469105978692b88cf5": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "ca8bad78bf898f808ad6028d4a7c09a69bc65b84": "Ydocchange",
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c": "Ydocchange",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "e4ff08f2bad145ec500228de112c8e821e8725cc": "Yreturntypechange",
    "04025259e96d3676097e84126fb55124b92c50ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e14804768c3553c0670ea08135675d67d51d811": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc for selector parse exceptions\n\nFixes #507\n",
      "commitDate": "4/8/15, 8:04 PM",
      "commitName": "6e14804768c3553c0670ea08135675d67d51d811",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "4/6/15, 9:44 PM",
      "commitNameOld": "2bef2e7ce9b8089a9e0ae3cf82f7625a5b93ed09",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String cssQuery) {\n    return Selector.select(cssQuery, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 257,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n@throws Selector.SelectorParseException (unchecked) on an invalid CSS query.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
        "newValue": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n@throws Selector.SelectorParseException (unchecked) on an invalid CSS query.\n"
      }
    },
    "842977c381b8d48bf12719e3f5cf6fd669379957": {
      "type": "Ydocchange",
      "commitMessage": "Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules.\n",
      "commitDate": "1/3/15, 7:15 AM",
      "commitName": "842977c381b8d48bf12719e3f5cf6fd669379957",
      "commitAuthor": "offa",
      "commitDateOld": "10/27/14, 10:38 PM",
      "commitNameOld": "990285bdbb080038fef44cd2306526b4cba520d5",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 67.4,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String cssQuery) {\n    return Selector.select(cssQuery, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 254,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
        "newValue": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\u003c/p\u003e\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n"
      }
    },
    "f31916f55db7d57b67b71c469105978692b88cf5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Tweaked Element#select documentation to reinforce CSS selector syntax.\n",
      "commitDate": "8/29/11, 6:27 PM",
      "commitName": "f31916f55db7d57b67b71c469105978692b88cf5",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Tweaked Element#select documentation to reinforce CSS selector syntax.\n",
          "commitDate": "8/29/11, 6:27 PM",
          "commitName": "f31916f55db7d57b67b71c469105978692b88cf5",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 58.59,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "actualSource": "public Elements select(String cssQuery) {\n    return Selector.select(cssQuery, this);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 212,
          "functionName": "select",
          "functionAnnotation": "",
          "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Elements select(String query) {\n-    return Selector.select(query, this);\n+public Elements select(String cssQuery) {\n+    return Selector.select(cssQuery, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[query-String]",
            "newValue": "[cssQuery-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Tweaked Element#select documentation to reinforce CSS selector syntax.\n",
          "commitDate": "8/29/11, 6:27 PM",
          "commitName": "f31916f55db7d57b67b71c469105978692b88cf5",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 58.59,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "actualSource": "public Elements select(String cssQuery) {\n    return Selector.select(cssQuery, this);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 212,
          "functionName": "select",
          "functionAnnotation": "",
          "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Elements select(String query) {\n-    return Selector.select(query, this);\n+public Elements select(String cssQuery) {\n+    return Selector.select(cssQuery, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Tweaked Element#select documentation to reinforce CSS selector syntax.\n",
          "commitDate": "8/29/11, 6:27 PM",
          "commitName": "f31916f55db7d57b67b71c469105978692b88cf5",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 58.59,
          "commitsBetweenForRepo": 47,
          "commitsBetweenForFile": 1,
          "actualSource": "public Elements select(String cssQuery) {\n    return Selector.select(cssQuery, this);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 212,
          "functionName": "select",
          "functionAnnotation": "",
          "functionDoc": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Elements select(String query) {\n-    return Selector.select(query, this);\n+public Elements select(String cssQuery) {\n+    return Selector.select(cssQuery, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Find elements that match the {@link Selector} query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
            "newValue": "Find elements that match the {@link Selector} CSS query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param cssQuery a {@link Selector} CSS-like query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n"
          }
        }
      ]
    },
    "ca8bad78bf898f808ad6028d4a7c09a69bc65b84": {
      "type": "Ydocchange",
      "commitMessage": "Added Elements.not(selector) method, to remove undesired results from selector results.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "ca8bad78bf898f808ad6028d4a7c09a69bc65b84",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "13c2af3f24fceda5b44776a5257112ac7218d038",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String query) {\n    return Selector.select(query, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 198,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "Find elements that match the {@link Selector} query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
        "newValue": "Find elements that match the {@link Selector} query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n"
      }
    },
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c": {
      "type": "Ydocchange",
      "commitMessage": "Selector documentation\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "671e03b570f586b6583feb1ee3ddb5d5c62bd50c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "496e6a1e56c3af11c8071820c74565bc55f1850d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String query) {\n    return Selector.select(query, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 160,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n",
        "newValue": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\u003cp/\u003e\nSee the query syntax documentation in {@link org.jsoup.select.Selector}.\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n@see org.jsoup.select.Selector\n"
      }
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String query) {\n    return Selector.select(query, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 151,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Find elements that match the selector query, with this element as the starting context. Matched elements\nmay include this element, or any of its children.\n\u003cp/\u003e\nThis method is generally more powerful to use than the DOM-type {@code getElementBy*} methods, because\nmultiple filters can be combined, e.g.:\n\u003cul\u003e\n\u003cli\u003e{@code el.select(\"a[href]\")} - finds links ({@code a} tags with {@code href} attributes)\n\u003cli\u003e{@code el.select(\"a[href*\u003dexample.com]\")} - finds links pointing to example.com (loosely)\n\u003c/ul\u003e\n\n@param query a {@link Selector} query\n@return elements that match the query (empty if none match)\n"
      }
    },
    "e4ff08f2bad145ec500228de112c8e821e8725cc": {
      "type": "Yreturntypechange",
      "commitMessage": "Renamed ElementList to Elements\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e4ff08f2bad145ec500228de112c8e821e8725cc",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "1f3cfcfb08a5e7454e61513389b814c7da6072ac",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Elements select(String query) {\n    return Selector.select(query, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 68,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n-public ElementList select(String query) {\n+public Elements select(String query) {\n     return Selector.select(query, this);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "ElementList",
        "newValue": "Elements"
      }
    },
    "04025259e96d3676097e84126fb55124b92c50ed": {
      "type": "Yintroduced",
      "commitMessage": "Initial, partial implementation of Selector.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "04025259e96d3676097e84126fb55124b92c50ed",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,3 @@\n+public ElementList select(String query) {\n+    return Selector.select(query, this);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public ElementList select(String query) {\n    return Selector.select(query, this);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 68,
      "functionName": "select",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}