{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-41b",
  "repositoryPath": "/tmp/Jsoup-41b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "outerHtmlHead",
  "functionId": "outerHtmlHead___accum-StringBuilder__depth-int__out-Document.OutputSettings",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1104,
  "functionEndLine": 1121,
  "numCommitsSeen": 229,
  "timeTaken": 2942,
  "changeHistory": [
    "6c4f16f233cdfd7aedef33374609e9aa4ede255c",
    "3982ea1198b8d780b42587e16ace3407bf7621e1",
    "e064bc4842d1412a0421435332f55908fddcc866",
    "694efa8bac3d66717efe7e202e47347355e07c0b",
    "13c2af3f24fceda5b44776a5257112ac7218d038",
    "e256bb7fc5979de256371bb324f1ca1330e38112",
    "57bce6dc8424637621f6b660855f23e72a08c4b3",
    "9824d000c7b73f52a277dcc83b55602225154fb2",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
    "a52e669ca8bc48265accd57d610c0258f7891841",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60"
  ],
  "changeHistoryShort": {
    "6c4f16f233cdfd7aedef33374609e9aa4ede255c": "Ybodychange",
    "3982ea1198b8d780b42587e16ace3407bf7621e1": "Ybodychange",
    "e064bc4842d1412a0421435332f55908fddcc866": "Ybodychange",
    "694efa8bac3d66717efe7e202e47347355e07c0b": "Ybodychange",
    "13c2af3f24fceda5b44776a5257112ac7218d038": "Ybodychange",
    "e256bb7fc5979de256371bb324f1ca1330e38112": "Ybodychange",
    "57bce6dc8424637621f6b660855f23e72a08c4b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "9824d000c7b73f52a277dcc83b55602225154fb2": "Ybodychange",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a52e669ca8bc48265accd57d610c0258f7891841": "Ybodychange",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": "Ybodychange",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c4f16f233cdfd7aedef33374609e9aa4ede255c": {
      "type": "Ybodychange",
      "commitMessage": "Support for HTML output syntax, enabled by default\n\nIntroduced the ability to chose between HTML and XML output, and made\nHTML the default. This means img tags are\noutput as \u003cimg\u003e, not \u003cimg /\u003e. XML is the default when using the\nXmlTreeBuilder. Control this with the\nDocument.OutputSettings.syntax() method.\n\nTightened the scope of what characters are escaped in attributes and\ntextnodes, to align with the spec. Also, when\nusing the extended escape entities map, only escape a character if the\ncurrent output charset does not support it.\nThis produces smaller, more legible HTML, with greated control over the\noutput (by setting charset and escape mode).\n\nFixes #322\nFixes #373\nFixes #346\nFixes #150\n",
      "commitDate": "11/17/13, 7:11 PM",
      "commitName": "6c4f16f233cdfd7aedef33374609e9aa4ede255c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "11/16/13, 4:48 PM",
      "commitNameOld": "c07ba8a34b6a6d6665928e106fea67bd9144e4e0",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.outline()))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing()) {\n        if (out.syntax() \u003d\u003d Document.OutputSettings.Syntax.html \u0026\u0026 tag.isEmpty())\n            accum.append(\u0027\u003e\u0027);\n        else\n            accum.append(\" /\u003e\");\n    } else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1067,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,13 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.outline()))\n         indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n-        accum.append(\" /\u003e\");\n-    else\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing()) {\n+        if (out.syntax() \u003d\u003d Document.OutputSettings.Syntax.html \u0026\u0026 tag.isEmpty())\n+            accum.append(\u0027\u003e\u0027);\n+        else\n+            accum.append(\" /\u003e\");\n+    } else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3982ea1198b8d780b42587e16ace3407bf7621e1": {
      "type": "Ybodychange",
      "commitMessage": "Tweaked koz\u0027s changes in merge prep.\n\nAdds outline mode to Document.OutputSettings.\n\nFixes #274\n",
      "commitDate": "1/26/13, 5:07 PM",
      "commitName": "3982ea1198b8d780b42587e16ace3407bf7621e1",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/26/13, 4:46 PM",
      "commitNameOld": "a44e18aa3c1fcd25a68a5965f9490d8f7d026509",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.outline()))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1069,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.forceAllElementAsBlock()))\n+    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.outline()))\n         indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e064bc4842d1412a0421435332f55908fddcc866": {
      "type": "Ybodychange",
      "commitMessage": "#273 :\tProvide an output setting to render all elements as block ",
      "commitDate": "12/14/12, 2:51 AM",
      "commitName": "e064bc4842d1412a0421435332f55908fddcc866",
      "commitAuthor": "Jerome Kowalczyk",
      "commitDateOld": "9/23/12, 1:05 PM",
      "commitNameOld": "1e30a157667af1fa7108d985dcb858a801832887",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 81.62,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.forceAllElementAsBlock()))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1044,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n+    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock()) || out.forceAllElementAsBlock()))\n         indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "694efa8bac3d66717efe7e202e47347355e07c0b": {
      "type": "Ybodychange",
      "commitMessage": "Tweaked Element.outerHtml() method to not generate initial newline on first output element.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "694efa8bac3d66717efe7e202e47347355e07c0b",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "29c9d48278aafb4a4390e3ee923cd68e6086a17f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 959,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    if (out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n+    if (accum.length() \u003e 0 \u0026\u0026 out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n         indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "13c2af3f24fceda5b44776a5257112ac7218d038": {
      "type": "Ybodychange",
      "commitMessage": "Output format tweak\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "13c2af3f24fceda5b44776a5257112ac7218d038",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "5ca6b4041d0605025f1a1582a605d2aee377bc1c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 969,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    if (out.prettyPrint() \u0026\u0026 (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)))\n+    if (out.prettyPrint() \u0026\u0026 (tag.formatAsBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().formatAsBlock())))\n         indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e256bb7fc5979de256371bb324f1ca1330e38112": {
      "type": "Ybodychange",
      "commitMessage": "Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.\n\nFixes #8\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e256bb7fc5979de256371bb324f1ca1330e38112",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e4917452778b4e1b19b2fcbe9f258e9e4061a97f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (out.prettyPrint() \u0026\u0026 (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)))\n        indent(accum, depth, out);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 928,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum, depth);\n+    if (out.prettyPrint() \u0026\u0026 (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)))\n+        indent(accum, depth, out);\n     accum.append(\"\u003c\").append(tagName());\n     attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "57bce6dc8424637621f6b660855f23e72a08c4b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "9824d000c7b73f52a277dcc83b55602225154fb2",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 898,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n-void outerHtmlHead(StringBuilder accum, int depth) {\n+void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n         indent(accum, depth);\n-    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n+    accum.append(\"\u003c\").append(tagName());\n+    attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[accum-StringBuilder, depth-int]",
            "newValue": "[accum-StringBuilder, depth-int, out-Document.OutputSettings]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "9824d000c7b73f52a277dcc83b55602225154fb2",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName());\n    attributes.html(accum, out);\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 898,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n-void outerHtmlHead(StringBuilder accum, int depth) {\n+void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n         indent(accum, depth);\n-    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n+    accum.append(\"\u003c\").append(tagName());\n+    attributes.html(accum, out);\n     if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "9824d000c7b73f52a277dcc83b55602225154fb2": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output format for empty elements and auto-detected self closing tags.\n\nCloses #27\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9824d000c7b73f52a277dcc83b55602225154fb2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "847e03ecfe09ae074844e5821ee185cd8c581f42",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 898,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n         indent(accum, depth);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())\n         accum.append(\" /\u003e\");\n     else\n         accum.append(\"\u003e\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 829,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n         accum.append(\" /\u003e\");\n-    } else {\n+    else\n         accum.append(\"\u003e\");\n-        html(accum);\n-        if (tag.canContainBlock())\n-            indent(accum);\n-        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "outerHtml",
            "newValue": "outerHtmlHead"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 829,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n         accum.append(\" /\u003e\");\n-    } else {\n+    else\n         accum.append(\"\u003e\");\n-        html(accum);\n-        if (tag.canContainBlock())\n-            indent(accum);\n-        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[accum-StringBuilder]",
            "newValue": "[accum-StringBuilder, depth-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum, depth);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n        accum.append(\" /\u003e\");\n    else\n        accum.append(\"\u003e\");\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 829,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty())\n         accum.append(\" /\u003e\");\n-    } else {\n+    else\n         accum.append(\"\u003e\");\n-        html(accum);\n-        if (tag.canContainBlock())\n-            indent(accum);\n-        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a52e669ca8bc48265accd57d610c0258f7891841": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output (pretty-print)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "a52e669ca8bc48265accd57d610c0258f7891841",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "93e9d84da0e87896aaaac14769eece487ba9e64d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        if (tag.canContainBlock())\n            indent(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 705,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n void outerHtml(StringBuilder accum) {\n+    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n+        indent(accum);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        if (tag.canContainBlock())\n-            accum.append(\"\\n\");\n         html(accum);\n+        if (tag.canContainBlock())\n+            indent(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-        if (tag.isBlock())\n-            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": {
      "type": "Ybodychange",
      "commitMessage": "Whitespace tests\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        if (tag.canContainBlock())\n            accum.append(\"\\n\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n        if (tag.isBlock())\n            accum.append(\"\\n\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 572,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,14 @@\n void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n+        if (tag.canContainBlock())\n+            accum.append(\"\\n\");\n         html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+        if (tag.isBlock())\n+            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
      "commitMessage": "Use string builders for HTML creation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[accum-StringBuilder]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
            "newValue": ""
          }
        }
      ]
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 516,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n"
      }
    },
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": {
      "type": "Yintroduced",
      "commitMessage": "All nodes have outerHtml method, elements have (inner) HTML.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "0e4c8bf728d368fed47e458f5f91517c677f1d60",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,12 @@\n+public String outerHtml() {\n+    StringBuilder accum \u003d new StringBuilder();\n+    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+        accum.append(\" /\u003e\");\n+    } else {\n+        accum.append(\"\u003e\");\n+        accum.append(html());\n+        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+    }\n+    return accum.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 204,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}