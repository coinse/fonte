{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-41b",
  "repositoryPath": "/tmp/Jsoup-41b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "outerHtmlTail",
  "functionId": "outerHtmlTail___accum-StringBuilder__depth-int__out-Document.OutputSettings",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1123,
  "functionEndLine": 1131,
  "numCommitsSeen": 229,
  "timeTaken": 2780,
  "changeHistory": [
    "d94f56c25485b622ebf3b35b71868c74b9501ece",
    "3982ea1198b8d780b42587e16ace3407bf7621e1",
    "e064bc4842d1412a0421435332f55908fddcc866",
    "13c2af3f24fceda5b44776a5257112ac7218d038",
    "e256bb7fc5979de256371bb324f1ca1330e38112",
    "57bce6dc8424637621f6b660855f23e72a08c4b3",
    "9824d000c7b73f52a277dcc83b55602225154fb2",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
    "a52e669ca8bc48265accd57d610c0258f7891841",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60"
  ],
  "changeHistoryShort": {
    "d94f56c25485b622ebf3b35b71868c74b9501ece": "Ybodychange",
    "3982ea1198b8d780b42587e16ace3407bf7621e1": "Ybodychange",
    "e064bc4842d1412a0421435332f55908fddcc866": "Ybodychange",
    "13c2af3f24fceda5b44776a5257112ac7218d038": "Ybodychange",
    "e256bb7fc5979de256371bb324f1ca1330e38112": "Ybodychange",
    "57bce6dc8424637621f6b660855f23e72a08c4b3": "Yparameterchange",
    "9824d000c7b73f52a277dcc83b55602225154fb2": "Ybodychange",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a52e669ca8bc48265accd57d610c0258f7891841": "Ybodychange",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": "Ybodychange",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d94f56c25485b622ebf3b35b71868c74b9501ece": {
      "type": "Ybodychange",
      "commitMessage": "Fixed overzealous indenting in outerHtmlTail\n",
      "commitDate": "1/26/13, 6:18 PM",
      "commitName": "d94f56c25485b622ebf3b35b71868c74b9501ece",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/26/13, 5:07 PM",
      "commitNameOld": "3982ea1198b8d780b42587e16ace3407bf7621e1",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.outline() \u0026\u0026 (childNodes.size() \u003e 1 || (childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.get(0) instanceof TextNode)))))))\n            indent(accum, depth, out);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1083,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n-        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.outline() \u0026\u0026 childNodes.size() \u003e 1 || (childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.get(0) instanceof TextNode))))))\n+        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.outline() \u0026\u0026 (childNodes.size() \u003e 1 || (childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.get(0) instanceof TextNode)))))))\n             indent(accum, depth, out);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3982ea1198b8d780b42587e16ace3407bf7621e1": {
      "type": "Ybodychange",
      "commitMessage": "Tweaked koz\u0027s changes in merge prep.\n\nAdds outline mode to Document.OutputSettings.\n\nFixes #274\n",
      "commitDate": "1/26/13, 5:07 PM",
      "commitName": "3982ea1198b8d780b42587e16ace3407bf7621e1",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/26/13, 4:46 PM",
      "commitNameOld": "a44e18aa3c1fcd25a68a5965f9490d8f7d026509",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.outline() \u0026\u0026 childNodes.size() \u003e 1 || (childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.get(0) instanceof TextNode))))))\n            indent(accum, depth, out);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1083,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n-        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003e 1) || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.iterator().next() instanceof TextNode)))))\n+        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.outline() \u0026\u0026 childNodes.size() \u003e 1 || (childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.get(0) instanceof TextNode))))))\n             indent(accum, depth, out);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e064bc4842d1412a0421435332f55908fddcc866": {
      "type": "Ybodychange",
      "commitMessage": "#273 :\tProvide an output setting to render all elements as block ",
      "commitDate": "12/14/12, 2:51 AM",
      "commitName": "e064bc4842d1412a0421435332f55908fddcc866",
      "commitAuthor": "Jerome Kowalczyk",
      "commitDateOld": "9/23/12, 1:05 PM",
      "commitNameOld": "1e30a157667af1fa7108d985dcb858a801832887",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 81.62,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003e 1) || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.iterator().next() instanceof TextNode)))))\n            indent(accum, depth, out);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1058,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n-        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.formatAsBlock())\n+        if (out.prettyPrint() \u0026\u0026 (!childNodes.isEmpty() \u0026\u0026 (tag.formatAsBlock() || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003e 1) || (out.forceAllElementAsBlock() \u0026\u0026 childNodes.size() \u003d\u003d 1 \u0026\u0026 !(childNodes.iterator().next() instanceof TextNode)))))\n             indent(accum, depth, out);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "13c2af3f24fceda5b44776a5257112ac7218d038": {
      "type": "Ybodychange",
      "commitMessage": "Output format tweak\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "13c2af3f24fceda5b44776a5257112ac7218d038",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "5ca6b4041d0605025f1a1582a605d2aee377bc1c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.formatAsBlock())\n            indent(accum, depth, out);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 983,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n-        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n+        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.formatAsBlock())\n             indent(accum, depth, out);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e256bb7fc5979de256371bb324f1ca1330e38112": {
      "type": "Ybodychange",
      "commitMessage": "Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.\n\nFixes #8\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e256bb7fc5979de256371bb324f1ca1330e38112",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e4917452778b4e1b19b2fcbe9f258e9e4061a97f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n            indent(accum, depth, out);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 942,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n-        if (!childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n-            indent(accum, depth);\n+        if (out.prettyPrint() \u0026\u0026 !childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n+            indent(accum, depth, out);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "57bce6dc8424637621f6b660855f23e72a08c4b3": {
      "type": "Yparameterchange",
      "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "9824d000c7b73f52a277dcc83b55602225154fb2",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (!childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n            indent(accum, depth);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 912,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n-void outerHtmlTail(StringBuilder accum, int depth) {\n+void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\n     if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n         if (!childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n             indent(accum, depth);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[accum-StringBuilder, depth-int]",
        "newValue": "[accum-StringBuilder, depth-int, out-Document.OutputSettings]"
      }
    },
    "9824d000c7b73f52a277dcc83b55602225154fb2": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output format for empty elements and auto-detected self closing tags.\n\nCloses #27\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9824d000c7b73f52a277dcc83b55602225154fb2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "847e03ecfe09ae074844e5821ee185cd8c581f42",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlTail(StringBuilder accum, int depth) {\n    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n        if (!childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n            indent(accum, depth);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 912,
      "functionName": "outerHtmlTail",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtmlTail(StringBuilder accum, int depth) {\n-    if (!tag.isEmpty()) {\n-        if (tag.canContainBlock())\n+    if (!(childNodes.isEmpty() \u0026\u0026 tag.isSelfClosing())) {\n+        if (!childNodes.isEmpty() \u0026\u0026 tag.canContainBlock())\n             indent(accum, depth);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlTail(StringBuilder accum, int depth) {\n    if (!tag.isEmpty()) {\n        if (tag.canContainBlock())\n            indent(accum, depth);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 843,
          "functionName": "outerHtmlTail",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n-void outerHtml(StringBuilder accum) {\n-    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n-    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n-        accum.append(\" /\u003e\");\n-    } else {\n-        accum.append(\"\u003e\");\n-        html(accum);\n+void outerHtmlTail(StringBuilder accum, int depth) {\n+    if (!tag.isEmpty()) {\n         if (tag.canContainBlock())\n-            indent(accum);\n+            indent(accum, depth);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "outerHtml",
            "newValue": "outerHtmlTail"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlTail(StringBuilder accum, int depth) {\n    if (!tag.isEmpty()) {\n        if (tag.canContainBlock())\n            indent(accum, depth);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 843,
          "functionName": "outerHtmlTail",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n-void outerHtml(StringBuilder accum) {\n-    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n-    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n-        accum.append(\" /\u003e\");\n-    } else {\n-        accum.append(\"\u003e\");\n-        html(accum);\n+void outerHtmlTail(StringBuilder accum, int depth) {\n+    if (!tag.isEmpty()) {\n         if (tag.canContainBlock())\n-            indent(accum);\n+            indent(accum, depth);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[accum-StringBuilder]",
            "newValue": "[accum-StringBuilder, depth-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "916d5399a698ccf3eb2e0f02f4cad234fedec177",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlTail(StringBuilder accum, int depth) {\n    if (!tag.isEmpty()) {\n        if (tag.canContainBlock())\n            indent(accum, depth);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 843,
          "functionName": "outerHtmlTail",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n-void outerHtml(StringBuilder accum) {\n-    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n-        indent(accum);\n-    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n-    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n-        accum.append(\" /\u003e\");\n-    } else {\n-        accum.append(\"\u003e\");\n-        html(accum);\n+void outerHtmlTail(StringBuilder accum, int depth) {\n+    if (!tag.isEmpty()) {\n         if (tag.canContainBlock())\n-            indent(accum);\n+            indent(accum, depth);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a52e669ca8bc48265accd57d610c0258f7891841": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output (pretty-print)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "a52e669ca8bc48265accd57d610c0258f7891841",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "93e9d84da0e87896aaaac14769eece487ba9e64d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        if (tag.canContainBlock())\n            indent(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 705,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n void outerHtml(StringBuilder accum) {\n+    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n+        indent(accum);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        if (tag.canContainBlock())\n-            accum.append(\"\\n\");\n         html(accum);\n+        if (tag.canContainBlock())\n+            indent(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-        if (tag.isBlock())\n-            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": {
      "type": "Ybodychange",
      "commitMessage": "Whitespace tests\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        if (tag.canContainBlock())\n            accum.append(\"\\n\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n        if (tag.isBlock())\n            accum.append(\"\\n\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 572,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,14 @@\n void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n+        if (tag.canContainBlock())\n+            accum.append(\"\\n\");\n         html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+        if (tag.isBlock())\n+            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
      "commitMessage": "Use string builders for HTML creation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[accum-StringBuilder]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
            "newValue": ""
          }
        }
      ]
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 516,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n"
      }
    },
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": {
      "type": "Yintroduced",
      "commitMessage": "All nodes have outerHtml method, elements have (inner) HTML.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "0e4c8bf728d368fed47e458f5f91517c677f1d60",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,12 @@\n+public String outerHtml() {\n+    StringBuilder accum \u003d new StringBuilder();\n+    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+        accum.append(\" /\u003e\");\n+    } else {\n+        accum.append(\"\u003e\");\n+        accum.append(html());\n+        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+    }\n+    return accum.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 204,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}