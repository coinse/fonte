{
  "origin": "codeshovel",
  "repositoryName": "Csv-12b",
  "repositoryPath": "/tmp/Csv-12b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVParser.java",
  "functionName": "initializeHeader",
  "functionId": "initializeHeader",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVParser.java",
  "functionAnnotation": "",
  "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
  "functionStartLine": 339,
  "functionEndLine": 375,
  "numCommitsSeen": 256,
  "timeTaken": 2598,
  "changeHistory": [
    "a6a92598de5983c7278b0daba1a839e5a3db463b",
    "4695d73e3b1974454d55a30be2b1c3a4bddbf3db",
    "aa0762d538c52f4384f629bb799769f5f85c1c9e",
    "f51f89828df4d763148362e312e310435864ba96",
    "b67524da7fd146634c7112b23e95d1d45c398b82",
    "32ffe82a5ff35a659b73ecd5bab3dda392cb8471",
    "99c3819bec33a0999b743b6827e6b48fcdd9c8ad",
    "88a7e755e61ea5129f0f50b3ec04605cc492b457",
    "07a73d28244ae51a2703f67b82d6f02aa5d81c5c",
    "7d51af94049daa66b9ed893c9eb282bc92bd3fbf",
    "ce4e72701b1ad4caabc3bd668bd058fff082f2b6",
    "5ec59afdda90cffe90ec6c8d6e663f616aaec91b",
    "b3553addb7d7355cb339dc4c357ba31debb24013",
    "fcc0d15c7b541191f14b0861d945cbbeba770d10",
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
    "1533facb1986631465467af2475ae9df1ed5a8be",
    "390800f28802a5c9e020e5aa901c67d5a9a618c2",
    "69997467d419487cb4098ff116188091907b5ff1",
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
    "4c530ac40dcd17e70abb0a2b28c6a557d2520117",
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "3cd5c85e8a9e1cdcaad4059d5aa3eb4c15228ecf",
    "43987a7d781598d1f7896a07c78755a62698efbd",
    "d0035e6c7a3f911a735485e0893e26950c15f098",
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55",
    "aee6c50e2830c007a572cc96a57bc105308acc49"
  ],
  "changeHistoryShort": {
    "a6a92598de5983c7278b0daba1a839e5a3db463b": "Yformatchange",
    "4695d73e3b1974454d55a30be2b1c3a4bddbf3db": "Ybodychange",
    "aa0762d538c52f4384f629bb799769f5f85c1c9e": "Ybodychange",
    "f51f89828df4d763148362e312e310435864ba96": "Ybodychange",
    "b67524da7fd146634c7112b23e95d1d45c398b82": "Ybodychange",
    "32ffe82a5ff35a659b73ecd5bab3dda392cb8471": "Yformatchange",
    "99c3819bec33a0999b743b6827e6b48fcdd9c8ad": "Ybodychange",
    "88a7e755e61ea5129f0f50b3ec04605cc492b457": "Ymultichange(Ybodychange,Ydocchange)",
    "07a73d28244ae51a2703f67b82d6f02aa5d81c5c": "Yformatchange",
    "7d51af94049daa66b9ed893c9eb282bc92bd3fbf": "Yformatchange",
    "ce4e72701b1ad4caabc3bd668bd058fff082f2b6": "Ybodychange",
    "5ec59afdda90cffe90ec6c8d6e663f616aaec91b": "Ydocchange",
    "b3553addb7d7355cb339dc4c357ba31debb24013": "Ybodychange",
    "fcc0d15c7b541191f14b0861d945cbbeba770d10": "Ybodychange",
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f": "Ybodychange",
    "1533facb1986631465467af2475ae9df1ed5a8be": "Ybodychange",
    "390800f28802a5c9e020e5aa901c67d5a9a618c2": "Ybodychange",
    "69997467d419487cb4098ff116188091907b5ff1": "Ybodychange",
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": "Yparameterchange",
    "4c530ac40dcd17e70abb0a2b28c6a557d2520117": "Ybodychange",
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad": "Ybodychange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Ymultichange(Ybodychange,Yparametermetachange)",
    "3cd5c85e8a9e1cdcaad4059d5aa3eb4c15228ecf": "Ybodychange",
    "43987a7d781598d1f7896a07c78755a62698efbd": "Ybodychange",
    "d0035e6c7a3f911a735485e0893e26950c15f098": "Ymultichange(Yreturntypechange,Ybodychange)",
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55": "Ybodychange",
    "aee6c50e2830c007a572cc96a57bc105308acc49": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6a92598de5983c7278b0daba1a839e5a3db463b": {
      "type": "Yformatchange",
      "commitMessage": "Make checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617066 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/10/14, 1:50 AM",
      "commitName": "a6a92598de5983c7278b0daba1a839e5a3db463b",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "7/21/14, 9:28 AM",
      "commitNameOld": "4695d73e3b1974454d55a30be2b1c3a4bddbf3db",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 19.68,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getAllowMissingColumnNames()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 340,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "",
      "extendedDetails": {}
    },
    "4695d73e3b1974454d55a30be2b1c3a4bddbf3db": {
      "type": "Ybodychange",
      "commitMessage": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/14, 9:28 AM",
      "commitName": "4695d73e3b1974454d55a30be2b1c3a4bddbf3db",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "7/21/14, 9:23 AM",
      "commitNameOld": "aa0762d538c52f4384f629bb799769f5f85c1c9e",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getAllowMissingColumnNames()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 341,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "@@ -1,31 +1,31 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] headerRecord \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 headerRecord \u003d nextRecord.values();\n             }\n         } else {\n-            if (this.format.isSkippingHeaderRecord()) {\n+            if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             headerRecord \u003d formatHeader;\n         }\n         if (headerRecord !\u003d null) {\n             for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                 final String header \u003d headerRecord[i];\n                 final boolean containsHeader \u003d hdrMap.containsKey(header);\n                 final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n-                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isAllowMissingColumnNames()))) {\n+                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getAllowMissingColumnNames()))) {\n                     throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                 }\n                 hdrMap.put(header, Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aa0762d538c52f4384f629bb799769f5f85c1c9e": {
      "type": "Ybodychange",
      "commitMessage": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/14, 9:23 AM",
      "commitName": "aa0762d538c52f4384f629bb799769f5f85c1c9e",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "7/19/14, 9:37 PM",
      "commitNameOld": "62345245e994c35cb37d55502fc0313bc2a189d4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 1.49,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.isSkippingHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isAllowMissingColumnNames()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 341,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "@@ -1,31 +1,31 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] headerRecord \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 headerRecord \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.isSkippingHeaderRecord()) {\n                 this.nextRecord();\n             }\n             headerRecord \u003d formatHeader;\n         }\n         if (headerRecord !\u003d null) {\n             for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                 final String header \u003d headerRecord[i];\n                 final boolean containsHeader \u003d hdrMap.containsKey(header);\n                 final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n-                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isIgnoringEmptyHeaders()))) {\n+                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isAllowMissingColumnNames()))) {\n                     throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                 }\n                 hdrMap.put(header, Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f51f89828df4d763148362e312e310435864ba96": {
      "type": "Ybodychange",
      "commitMessage": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/14/14, 12:25 PM",
      "commitName": "f51f89828df4d763148362e312e310435864ba96",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "7/11/14, 11:42 AM",
      "commitNameOld": "b67524da7fd146634c7112b23e95d1d45c398b82",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.isSkippingHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isIgnoringEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 359,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "@@ -1,31 +1,31 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] headerRecord \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 headerRecord \u003d nextRecord.values();\n             }\n         } else {\n-            if (this.format.getSkipHeaderRecord()) {\n+            if (this.format.isSkippingHeaderRecord()) {\n                 this.nextRecord();\n             }\n             headerRecord \u003d formatHeader;\n         }\n         if (headerRecord !\u003d null) {\n             for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                 final String header \u003d headerRecord[i];\n                 final boolean containsHeader \u003d hdrMap.containsKey(header);\n                 final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n-                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n+                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.isIgnoringEmptyHeaders()))) {\n                     throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                 }\n                 hdrMap.put(header, Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b67524da7fd146634c7112b23e95d1d45c398b82": {
      "type": "Ybodychange",
      "commitMessage": "CSV-122: NullPointerException when empty header string and and null string of \"\". Thanks to Mike Lewis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/11/14, 11:42 AM",
      "commitName": "b67524da7fd146634c7112b23e95d1d45c398b82",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "6/19/14, 10:28 AM",
      "commitNameOld": "3cd50672f71813a847054e5d6ba1894fda0e5dec",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 22.05,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 359,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "@@ -1,31 +1,31 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] headerRecord \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 headerRecord \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             headerRecord \u003d formatHeader;\n         }\n         if (headerRecord !\u003d null) {\n             for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                 final String header \u003d headerRecord[i];\n                 final boolean containsHeader \u003d hdrMap.containsKey(header);\n-                final boolean emptyHeader \u003d header.trim().isEmpty();\n+                final boolean emptyHeader \u003d header \u003d\u003d null || header.trim().isEmpty();\n                 if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n                     throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                 }\n                 hdrMap.put(header, Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "32ffe82a5ff35a659b73ecd5bab3dda392cb8471": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle: \u0027+\u0027 should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/14, 8:53 AM",
      "commitName": "32ffe82a5ff35a659b73ecd5bab3dda392cb8471",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/16/14, 8:44 AM",
      "commitNameOld": "4b2a4caa305c2e309c199080d5710f6e1a935a7d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 360,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "",
      "extendedDetails": {}
    },
    "99c3819bec33a0999b743b6827e6b48fcdd9c8ad": {
      "type": "Ybodychange",
      "commitMessage": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/12/14, 8:38 AM",
      "commitName": "99c3819bec33a0999b743b6827e6b48fcdd9c8ad",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/7/14, 3:12 PM",
      "commitNameOld": "88a7e755e61ea5129f0f50b3ec04605cc492b457",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 35.73,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] headerRecord \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                headerRecord \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord \u003d formatHeader;\n        }\n        if (headerRecord !\u003d null) {\n            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n                final String header \u003d headerRecord[i];\n                final boolean containsHeader \u003d hdrMap.containsKey(header);\n                final boolean emptyHeader \u003d header.trim().isEmpty();\n                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                }\n                hdrMap.put(header, Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 357,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
      "diff": "@@ -1,28 +1,31 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n-        String[] header \u003d null;\n+        String[] headerRecord \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n-                header \u003d nextRecord.values();\n+                headerRecord \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n-            header \u003d formatHeader;\n+            headerRecord \u003d formatHeader;\n         }\n-        if (header !\u003d null) {\n-            for (int i \u003d 0; i \u003c header.length; i++) {\n-                if (hdrMap.containsKey(header[i])) {\n-                    throw new IllegalArgumentException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+        if (headerRecord !\u003d null) {\n+            for (int i \u003d 0; i \u003c headerRecord.length; i++) {\n+                final String header \u003d headerRecord[i];\n+                final boolean containsHeader \u003d hdrMap.containsKey(header);\n+                final boolean emptyHeader \u003d header.trim().isEmpty();\n+                if (containsHeader \u0026\u0026 (!emptyHeader || (emptyHeader \u0026\u0026 !this.format.getIgnoreEmptyHeaders()))) {\n+                    throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header + \"\\\" in \" + Arrays.toString(headerRecord));\n                 }\n-                hdrMap.put(header[i], Integer.valueOf(i));\n+                hdrMap.put(header, Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "88a7e755e61ea5129f0f50b3ec04605cc492b457": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "CSV-113 Check whether ISE/IAE are being used appropriately\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/14, 3:12 PM",
      "commitName": "88a7e755e61ea5129f0f50b3ec04605cc492b457",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "CSV-113 Check whether ISE/IAE are being used appropriately\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593148 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/14, 3:12 PM",
          "commitName": "88a7e755e61ea5129f0f50b3ec04605cc492b457",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "5/5/14, 11:45 AM",
          "commitNameOld": "c08219e0d7a739f6b8c850123ed4161d97bb00cd",
          "commitAuthorOld": "Benedikt Ritter",
          "daysBetweenCommits": 2.14,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                if (hdrMap.containsKey(header[i])) {\n                    throw new IllegalArgumentException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                }\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 357,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
          "diff": "@@ -1,28 +1,28 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 header \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 if (hdrMap.containsKey(header[i])) {\n-                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+                    throw new IllegalArgumentException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                 }\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "CSV-113 Check whether ISE/IAE are being used appropriately\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593148 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/14, 3:12 PM",
          "commitName": "88a7e755e61ea5129f0f50b3ec04605cc492b457",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "5/5/14, 11:45 AM",
          "commitNameOld": "c08219e0d7a739f6b8c850123ed4161d97bb00cd",
          "commitAuthorOld": "Benedikt Ritter",
          "daysBetweenCommits": 2.14,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                if (hdrMap.containsKey(header[i])) {\n                    throw new IllegalArgumentException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                }\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 357,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n",
          "diff": "@@ -1,28 +1,28 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 header \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 if (hdrMap.containsKey(header[i])) {\n-                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+                    throw new IllegalArgumentException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                 }\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n",
            "newValue": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n@throws IOException if there is a problem reading the header or skipping the first record\n"
          }
        }
      ]
    },
    "07a73d28244ae51a2703f67b82d6f02aa5d81c5c": {
      "type": "Yformatchange",
      "commitMessage": "Fix checkstyle error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/5/14, 11:36 AM",
      "commitName": "07a73d28244ae51a2703f67b82d6f02aa5d81c5c",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "5/4/14, 10:01 AM",
      "commitNameOld": "7d51af94049daa66b9ed893c9eb282bc92bd3fbf",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                if (hdrMap.containsKey(header[i])) {\n                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                }\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 351,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "7d51af94049daa66b9ed893c9eb282bc92bd3fbf": {
      "type": "Yformatchange",
      "commitMessage": "Make checkstyle happy (line is longer than 120 characters)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592382 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/4/14, 10:01 AM",
      "commitName": "7d51af94049daa66b9ed893c9eb282bc92bd3fbf",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "5/4/14, 9:22 AM",
      "commitNameOld": "ce4e72701b1ad4caabc3bd668bd058fff082f2b6",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                if (hdrMap.containsKey(header[i])) {\n                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                }\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 351,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "ce4e72701b1ad4caabc3bd668bd058fff082f2b6": {
      "type": "Ybodychange",
      "commitMessage": "CSV-112: HeaderMap is inconsistent when it is parsed from an input with duplicate columns names. Reported by Romain Gossé\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592371 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/4/14, 9:22 AM",
      "commitName": "ce4e72701b1ad4caabc3bd668bd058fff082f2b6",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "5/4/14, 9:08 AM",
      "commitNameOld": "c84328e64a226304d277be6164b85351502edd94",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                if (hdrMap.containsKey(header[i])) {\n                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n                }\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 349,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n",
      "diff": "@@ -1,25 +1,28 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord nextRecord \u003d this.nextRecord();\n             if (nextRecord !\u003d null) {\n                 header \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n+                if (hdrMap.containsKey(header[i])) {\n+                    throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+                }\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5ec59afdda90cffe90ec6c8d6e663f616aaec91b": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1558889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/16/14, 11:07 AM",
      "commitName": "5ec59afdda90cffe90ec6c8d6e663f616aaec91b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "1/16/14, 11:05 AM",
      "commitNameOld": "b3553addb7d7355cb339dc4c357ba31debb24013",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 326,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Initializes the name to index mapping if the format defines a header.\n",
        "newValue": "Initializes the name to index mapping if the format defines a header.\n\n@return null if the format has no header.\n"
      }
    },
    "b3553addb7d7355cb339dc4c357ba31debb24013": {
      "type": "Ybodychange",
      "commitMessage": "The local variable record is hiding a field from type CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1558888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/16/14, 11:05 AM",
      "commitName": "b3553addb7d7355cb339dc4c357ba31debb24013",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/18/13, 7:57 AM",
      "commitNameOld": "22601f647f2ce9a05fa4ce20ea356492c670940c",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 120.17,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord nextRecord \u003d this.nextRecord();\n            if (nextRecord !\u003d null) {\n                header \u003d nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 324,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,25 +1,25 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n-            final CSVRecord record \u003d this.nextRecord();\n-            if (record !\u003d null) {\n-                header \u003d record.values();\n+            final CSVRecord nextRecord \u003d this.nextRecord();\n+            if (nextRecord !\u003d null) {\n+                header \u003d nextRecord.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fcc0d15c7b541191f14b0861d945cbbeba770d10": {
      "type": "Ybodychange",
      "commitMessage": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 7:04 PM",
      "commitName": "fcc0d15c7b541191f14b0861d945cbbeba770d10",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/31/13, 7:03 PM",
      "commitNameOld": "316a51f5208bc95f22124d1579882131a4f441b2",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    final String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord record \u003d this.nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 351,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,25 +1,25 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n-    String[] formatHeader \u003d this.format.getHeader();\n+    final String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord record \u003d this.nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             if (this.format.getSkipHeaderRecord()) {\n                 this.nextRecord();\n             }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f": {
      "type": "Ybodychange",
      "commitMessage": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 8:39 AM",
      "commitName": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 2:24 PM",
      "commitNameOld": "e6759b8c109cc7babd5b20b5982a3c423fccb4f7",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord record \u003d this.nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 322,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,22 +1,25 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n-        final CSVRecord record \u003d this.nextRecord();\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n+            final CSVRecord record \u003d this.nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n+            if (this.format.getSkipHeaderRecord()) {\n+                this.nextRecord();\n+            }\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1533facb1986631465467af2475ae9df1ed5a8be": {
      "type": "Ybodychange",
      "commitMessage": "When withHeader is set to any non-null value, the first record is the first \u003cem\u003edata\u003c/em\u003e record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 1:36 PM",
      "commitName": "1533facb1986631465467af2475ae9df1ed5a8be",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 12:32 PM",
      "commitNameOld": "390800f28802a5c9e020e5aa901c67d5a9a618c2",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        final CSVRecord record \u003d this.nextRecord();\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 322,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,22 +1,22 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     String[] formatHeader \u003d this.format.getHeader();\n     if (formatHeader !\u003d null) {\n+        final CSVRecord record \u003d this.nextRecord();\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (formatHeader.length \u003d\u003d 0) {\n-            final CSVRecord record \u003d this.nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "390800f28802a5c9e020e5aa901c67d5a9a618c2": {
      "type": "Ybodychange",
      "commitMessage": "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 12:32 PM",
      "commitName": "390800f28802a5c9e020e5aa901c67d5a9a618c2",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 10:36 AM",
      "commitNameOld": "69997467d419487cb4098ff116188091907b5ff1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    String[] formatHeader \u003d this.format.getHeader();\n    if (formatHeader !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (formatHeader.length \u003d\u003d 0) {\n            final CSVRecord record \u003d this.nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d formatHeader;\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 322,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,22 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n-    if (this.format.getHeader() !\u003d null) {\n+    String[] formatHeader \u003d this.format.getHeader();\n+    if (formatHeader !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n-        if (this.format.getHeader().length \u003d\u003d 0) {\n+        if (formatHeader.length \u003d\u003d 0) {\n             final CSVRecord record \u003d this.nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n-            header \u003d this.format.getHeader();\n+            header \u003d formatHeader;\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "69997467d419487cb4098ff116188091907b5ff1": {
      "type": "Ybodychange",
      "commitMessage": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 10:36 AM",
      "commitName": "69997467d419487cb4098ff116188091907b5ff1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 9:26 AM",
      "commitNameOld": "61fdb7a03a22065de4c63525a4b836ba616aa1f1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (this.format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (this.format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord record \u003d this.nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d this.format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 322,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n-    if (format.getHeader() !\u003d null) {\n+    if (this.format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n-        if (format.getHeader().length \u003d\u003d 0) {\n-            final CSVRecord record \u003d nextRecord();\n+        if (this.format.getHeader().length \u003d\u003d 0) {\n+            final CSVRecord record \u003d this.nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n-            header \u003d format.getHeader();\n+            header \u003d this.format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": {
      "type": "Yparameterchange",
      "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/23/13, 8:06 PM",
      "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/7/13, 8:12 AM",
      "commitNameOld": "71c69df6dda034e9aa18ad07782ba88643423f58",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 47.5,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord record \u003d nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 257,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n-private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader() throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             final CSVRecord record \u003d nextRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[format-CSVFormat(modifiers-final)]",
        "newValue": "[]"
      }
    },
    "4c530ac40dcd17e70abb0a2b28c6a557d2520117": {
      "type": "Ybodychange",
      "commitMessage": "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461307 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/13, 1:52 PM",
      "commitName": "4c530ac40dcd17e70abb0a2b28c6a557d2520117",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/26/13, 10:48 AM",
      "commitNameOld": "d10442b68a673444a3d6716d2d7f1cf98618ce05",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord record \u003d nextRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 246,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            final CSVRecord rec \u003d nextRecord();\n-            if (rec !\u003d null) {\n-                header \u003d rec.values();\n+            final CSVRecord record \u003d nextRecord();\n+            if (record !\u003d null) {\n+                header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad": {
      "type": "Ybodychange",
      "commitMessage": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:13 AM",
      "commitName": "0e8084ab27bdd1e183b243b6c4cef97d603d23ad",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:11 AM",
      "commitNameOld": "3b938ba40d050c319be41a415daf5832e6097d72",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord rec \u003d nextRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 229,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            final CSVRecord rec \u003d getRecord();\n+            final CSVRecord rec \u003d nextRecord();\n             if (rec !\u003d null) {\n                 header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/11/12, 8:47 AM",
          "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/11/12, 7:02 AM",
          "commitNameOld": "4bc562f47b46372a5ac11498fe5312846dedded4",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord rec \u003d getRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 218,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,21 +1,21 @@\n-private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            CSVRecord rec \u003d getRecord();\n+            final CSVRecord rec \u003d getRecord();\n             if (rec !\u003d null) {\n                 header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/11/12, 8:47 AM",
          "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/11/12, 7:02 AM",
          "commitNameOld": "4bc562f47b46372a5ac11498fe5312846dedded4",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            final CSVRecord rec \u003d getRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 218,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,21 +1,21 @@\n-private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(final CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            CSVRecord rec \u003d getRecord();\n+            final CSVRecord rec \u003d getRecord();\n             if (rec !\u003d null) {\n                 header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[format-CSVFormat]",
            "newValue": "[format-CSVFormat(modifiers-final)]"
          }
        }
      ]
    },
    "3cd5c85e8a9e1cdcaad4059d5aa3eb4c15228ecf": {
      "type": "Ybodychange",
      "commitMessage": "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/12/12, 6:41 AM",
      "commitName": "3cd5c85e8a9e1cdcaad4059d5aa3eb4c15228ecf",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/12/12, 6:14 AM",
      "commitNameOld": "25f4b3e9985684ed07bfbf8238d9148960001e7e",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord rec \u003d getRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 219,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n-        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n+        hdrMap \u003d new LinkedHashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord rec \u003d getRecord();\n             if (rec !\u003d null) {\n                 header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "43987a7d781598d1f7896a07c78755a62698efbd": {
      "type": "Ybodychange",
      "commitMessage": "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/22/12, 3:16 PM",
      "commitName": "43987a7d781598d1f7896a07c78755a62698efbd",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/21/12, 4:46 PM",
      "commitNameOld": "65ab9db952daebf62fc092c90f7f74cbb25b8c0f",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord rec \u003d getRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 173,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            CSVRecord record \u003d getRecord();\n-            if (record !\u003d null) {\n-                header \u003d record.values();\n+            CSVRecord rec \u003d getRecord();\n+            if (rec !\u003d null) {\n+                header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d0035e6c7a3f911a735485e0893e26950c15f098": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/21/12, 9:01 AM",
      "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/21/12, 9:01 AM",
          "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "3/17/12, 5:29 AM",
          "commitNameOld": "c9dedff12e98a34ab4225bc65f810c0954207f11",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 4.15,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 175,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,19 +1,21 @@\n-private void initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+    Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n-        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], Integer.valueOf(i));\n+                hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n+    return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Map\u003cString,Integer\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/21/12, 9:01 AM",
          "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "3/17/12, 5:29 AM",
          "commitNameOld": "c9dedff12e98a34ab4225bc65f810c0954207f11",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 4.15,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 175,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,19 +1,21 @@\n-private void initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+    Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n-        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], Integer.valueOf(i));\n+                hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n+    return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55": {
      "type": "Ybodychange",
      "commitMessage": "Explict boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 9:11 PM",
      "commitName": "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/16/12, 6:39 PM",
      "commitNameOld": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void initializeHeader(CSVFormat format) throws IOException {\n    if (format.getHeader() !\u003d null) {\n        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                headerMapping.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 179,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void initializeHeader(CSVFormat format) throws IOException {\n     if (format.getHeader() !\u003d null) {\n         headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], i);\n+                headerMapping.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aee6c50e2830c007a572cc96a57bc105308acc49": {
      "type": "Yintroduced",
      "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 6:39 PM",
      "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,19 @@\n+private void initializeHeader(CSVFormat format) throws IOException {\n+    if (format.getHeader() !\u003d null) {\n+        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        String[] header \u003d null;\n+        if (format.getHeader().length \u003d\u003d 0) {\n+            CSVRecord record \u003d getRecord();\n+            if (record !\u003d null) {\n+                header \u003d record.values();\n+            }\n+        } else {\n+            header \u003d format.getHeader();\n+        }\n+        if (header !\u003d null) {\n+            for (int i \u003d 0; i \u003c header.length; i++) {\n+                headerMapping.put(header[i], i);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void initializeHeader(CSVFormat format) throws IOException {\n    if (format.getHeader() !\u003d null) {\n        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                headerMapping.put(header[i], i);\n            }\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 179,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n"
    }
  }
}