{
  "origin": "codeshovel",
  "repositoryName": "Math-9b",
  "repositoryPath": "/tmp/Math-9b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Vector3D.java",
  "functionName": "dotProduct",
  "functionId": "dotProduct___v-Vector__Euclidean3D__(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
  "functionAnnotation": "",
  "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathArrays#linearCombination(double, double, double, double, double, double)\n",
  "functionStartLine": 452,
  "functionEndLine": 455,
  "numCommitsSeen": 10,
  "timeTaken": 11879,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "dd4efa43349e74832b092ba33a92275b68cab9d3",
    "def9fbf8701afa6937fe582c7572c7be011c319f",
    "0aa6277c80b0aa1257f893f0c0699f8a58de2c83"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "dd4efa43349e74832b092ba33a92275b68cab9d3": "Ymultichange(Ybodychange,Ydocchange)",
    "def9fbf8701afa6937fe582c7572c7be011c319f": "Ymultichange(Ybodychange,Ydocchange)",
    "0aa6277c80b0aa1257f893f0c0699f8a58de2c83": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return MathArrays.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n}",
      "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
      "functionStartLine": 452,
      "functionName": "dotProduct",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathArrays#linearCombination(double, double, double, double, double, double)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
        "newPath": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "oldMethodName": "dotProduct",
        "newMethodName": "dotProduct"
      }
    },
    "dd4efa43349e74832b092ba33a92275b68cab9d3": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "MATH-689\nMoved arrays utilities from \"MathUtils\" to \"MathArrays\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1182134 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/11, 3:55 PM",
      "commitName": "dd4efa43349e74832b092ba33a92275b68cab9d3",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-689\nMoved arrays utilities from \"MathUtils\" to \"MathArrays\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1182134 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/11/11, 3:55 PM",
          "commitName": "dd4efa43349e74832b092ba33a92275b68cab9d3",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/11, 8:02 AM",
          "commitNameOld": "def9fbf8701afa6937fe582c7572c7be011c319f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 67.33,
          "commitsBetweenForRepo": 282,
          "commitsBetweenForFile": 1,
          "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return MathArrays.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n}",
          "path": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
          "functionStartLine": 428,
          "functionName": "dotProduct",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathArrays#linearCombination(double, double, double, double, double, double)\n",
          "diff": "@@ -1,4 +1,4 @@\n public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n     final Vector3D v3 \u003d (Vector3D) v;\n-    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n+    return MathArrays.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-689\nMoved arrays utilities from \"MathUtils\" to \"MathArrays\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1182134 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/11/11, 3:55 PM",
          "commitName": "dd4efa43349e74832b092ba33a92275b68cab9d3",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/11, 8:02 AM",
          "commitNameOld": "def9fbf8701afa6937fe582c7572c7be011c319f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 67.33,
          "commitsBetweenForRepo": 282,
          "commitsBetweenForFile": 1,
          "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return MathArrays.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n}",
          "path": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
          "functionStartLine": 428,
          "functionName": "dotProduct",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathArrays#linearCombination(double, double, double, double, double, double)\n",
          "diff": "@@ -1,4 +1,4 @@\n public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n     final Vector3D v3 \u003d (Vector3D) v;\n-    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n+    return MathArrays.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathUtils#linearCombination(double, double, double, double, double, double)\n",
            "newValue": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathArrays#linearCombination(double, double, double, double, double, double)\n"
          }
        }
      ]
    },
    "def9fbf8701afa6937fe582c7572c7be011c319f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Use the new highly accurate linearCombination utility methods in 3D Euclidean geometry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/5/11, 8:02 AM",
      "commitName": "def9fbf8701afa6937fe582c7572c7be011c319f",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Use the new highly accurate linearCombination utility methods in 3D Euclidean geometry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154253 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/11, 8:02 AM",
          "commitName": "def9fbf8701afa6937fe582c7572c7be011c319f",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/3/11, 12:22 PM",
          "commitNameOld": "88c700c10b3e001fcd0662848fe0cc2c9d5a6336",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 62.82,
          "commitsBetweenForRepo": 160,
          "commitsBetweenForFile": 1,
          "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n}",
          "path": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
          "functionStartLine": 427,
          "functionName": "dotProduct",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathUtils#linearCombination(double, double, double, double, double, double)\n",
          "diff": "@@ -1,4 +1,4 @@\n public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n     final Vector3D v3 \u003d (Vector3D) v;\n-    return x * v3.x + y * v3.y + z * v3.z;\n+    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Use the new highly accurate linearCombination utility methods in 3D Euclidean geometry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154253 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/11, 8:02 AM",
          "commitName": "def9fbf8701afa6937fe582c7572c7be011c319f",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/3/11, 12:22 PM",
          "commitNameOld": "88c700c10b3e001fcd0662848fe0cc2c9d5a6336",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 62.82,
          "commitsBetweenForRepo": 160,
          "commitsBetweenForFile": 1,
          "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n}",
          "path": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
          "functionStartLine": 427,
          "functionName": "dotProduct",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathUtils#linearCombination(double, double, double, double, double, double)\n",
          "diff": "@@ -1,4 +1,4 @@\n public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n     final Vector3D v3 \u003d (Vector3D) v;\n-    return x * v3.x + y * v3.y + z * v3.z;\n+    return MathUtils.linearCombination(x, v3.x, y, v3.y, z, v3.z);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@inheritDoc}\n",
            "newValue": "@inheritDoc}\n\u003cp\u003e\nThe implementation uses specific multiplication and addition\nalgorithms to preserve accuracy and reduce cancellation effects.\nIt should be very accurate even for nearly orthogonal vectors.\n\u003c/p\u003e\n\n@see MathUtils#linearCombination(double, double, double, double, double, double)\n"
          }
        }
      ]
    },
    "0aa6277c80b0aa1257f893f0c0699f8a58de2c83": {
      "type": "Yintroduced",
      "commitMessage": "Added a consistent classes hierarchy for Euclidean spaces in dimension 1, 2 and 3\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1131123 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/3/11, 11:02 AM",
      "commitName": "0aa6277c80b0aa1257f893f0c0699f8a58de2c83",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,4 @@\n+public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n+    final Vector3D v3 \u003d (Vector3D) v;\n+    return x * v3.x + y * v3.y + z * v3.z;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double dotProduct(final Vector\u003cEuclidean3D\u003e v) {\n    final Vector3D v3 \u003d (Vector3D) v;\n    return x * v3.x + y * v3.y + z * v3.z;\n}",
      "path": "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java",
      "functionStartLine": 422,
      "functionName": "dotProduct",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n"
    }
  }
}