{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-9b",
  "repositoryPath": "/tmp/Jsoup-9b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Entities.java",
  "functionName": "unescape",
  "functionId": "unescape___string-String",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Entities.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 61,
  "functionEndLine": 93,
  "numCommitsSeen": 12,
  "timeTaken": 910,
  "changeHistory": [
    "20ed24cefb5df53c48021459af98bef83c55f241",
    "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
    "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
    "f8841edabba28d6125dd87ed72f557e85570066b",
    "17486e2fa5b542b1f68b9b60efbefecd216a4a48"
  ],
  "changeHistoryShort": {
    "20ed24cefb5df53c48021459af98bef83c55f241": "Ybodychange",
    "5e52f1b266173593fab32fe9d8a4963066b2f2fe": "Ybodychange",
    "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7": "Ybodychange",
    "f8841edabba28d6125dd87ed72f557e85570066b": "Ymultichange(Yfilerename,Ybodychange,Yrename,Yparameterchange)",
    "17486e2fa5b542b1f68b9b60efbefecd216a4a48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "20ed24cefb5df53c48021459af98bef83c55f241": {
      "type": "Ybodychange",
      "commitMessage": "Fixed issue in Entities when unescaping \u0026#36; (\"$\")\n\nFixes #34\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "20ed24cefb5df53c48021459af98bef83c55f241",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "a83d5f1a692d468e71edd96801caa156492b4817",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    Matcher m \u003d unescapePattern.matcher(string);\n    StringBuffer accum \u003d new StringBuffer(string.length());\n    while (m.find()) {\n        int charval \u003d -1;\n        String num \u003d m.group(3);\n        if (num !\u003d null) {\n            try {\n                int base \u003d m.group(2) !\u003d null ? 16 : 10;\n                charval \u003d Integer.valueOf(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name \u003d m.group(1);\n            if (full.containsKey(name))\n                charval \u003d full.get(name);\n        }\n        if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n            String c \u003d Character.toString((char) charval);\n            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n        } else {\n            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Entities.java",
      "functionStartLine": 45,
      "functionName": "unescape",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n static String unescape(String string) {\n     if (!string.contains(\"\u0026\"))\n         return string;\n     Matcher m \u003d unescapePattern.matcher(string);\n     StringBuffer accum \u003d new StringBuffer(string.length());\n     while (m.find()) {\n         int charval \u003d -1;\n         String num \u003d m.group(3);\n         if (num !\u003d null) {\n             try {\n                 int base \u003d m.group(2) !\u003d null ? 16 : 10;\n                 charval \u003d Integer.valueOf(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n             String name \u003d m.group(1);\n             if (full.containsKey(name))\n                 charval \u003d full.get(name);\n         }\n         if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n             String c \u003d Character.toString((char) charval);\n-            m.appendReplacement(accum, c);\n+            m.appendReplacement(accum, Matcher.quoteReplacement(c));\n         } else {\n-            m.appendReplacement(accum, m.group(0));\n+            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n         }\n     }\n     m.appendTail(accum);\n     return accum.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5e52f1b266173593fab32fe9d8a4963066b2f2fe": {
      "type": "Ybodychange",
      "commitMessage": "Fixed support for case-sensitive HTML escape entities.\n\nFixes #31\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "18e9a8f2ba83bd50dff8766bb0dab902a317f2f5",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    Matcher m \u003d unescapePattern.matcher(string);\n    StringBuffer accum \u003d new StringBuffer(string.length());\n    while (m.find()) {\n        int charval \u003d -1;\n        String num \u003d m.group(3);\n        if (num !\u003d null) {\n            try {\n                int base \u003d m.group(2) !\u003d null ? 16 : 10;\n                charval \u003d Integer.valueOf(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name \u003d m.group(1);\n            if (full.containsKey(name))\n                charval \u003d full.get(name);\n        }\n        if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n            String c \u003d Character.toString((char) charval);\n            m.appendReplacement(accum, c);\n        } else {\n            m.appendReplacement(accum, m.group(0));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Entities.java",
      "functionStartLine": 47,
      "functionName": "unescape",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n static String unescape(String string) {\n     if (!string.contains(\"\u0026\"))\n         return string;\n     Matcher m \u003d unescapePattern.matcher(string);\n     StringBuffer accum \u003d new StringBuffer(string.length());\n     while (m.find()) {\n         int charval \u003d -1;\n         String num \u003d m.group(3);\n         if (num !\u003d null) {\n             try {\n                 int base \u003d m.group(2) !\u003d null ? 16 : 10;\n                 charval \u003d Integer.valueOf(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n-            String name \u003d m.group(1).toLowerCase();\n+            String name \u003d m.group(1);\n             if (full.containsKey(name))\n                 charval \u003d full.get(name);\n         }\n         if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n             String c \u003d Character.toString((char) charval);\n             m.appendReplacement(accum, c);\n         } else {\n             m.appendReplacement(accum, m.group(0));\n         }\n     }\n     m.appendTail(accum);\n     return accum.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7": {
      "type": "Ybodychange",
      "commitMessage": "Simplified Entity unescaper\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "f8841edabba28d6125dd87ed72f557e85570066b",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    Matcher m \u003d unescapePattern.matcher(string);\n    StringBuffer accum \u003d new StringBuffer(string.length());\n    while (m.find()) {\n        int charval \u003d -1;\n        String num \u003d m.group(3);\n        if (num !\u003d null) {\n            try {\n                int base \u003d m.group(2) !\u003d null ? 16 : 10;\n                charval \u003d Integer.valueOf(num, base);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            String name \u003d m.group(1).toLowerCase();\n            if (full.containsKey(name))\n                charval \u003d full.get(name);\n        }\n        if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n            String c \u003d Character.toString((char) charval);\n            m.appendReplacement(accum, c);\n        } else {\n            m.appendReplacement(accum, m.group(0));\n        }\n    }\n    m.appendTail(accum);\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Entities.java",
      "functionStartLine": 44,
      "functionName": "unescape",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,45 +1,29 @@\n static String unescape(String string) {\n     if (!string.contains(\"\u0026\"))\n         return string;\n-    StringBuilder accum \u003d new StringBuilder(string.length());\n-    TokenQueue cq \u003d new TokenQueue(string);\n-    while (!cq.isEmpty()) {\n-        accum.append(cq.consumeTo(\"\u0026\"));\n-        if (!cq.matches(\"\u0026\")) {\n-            accum.append(cq.remainder());\n-            break;\n-        }\n-        cq.advance();\n-        String val;\n+    Matcher m \u003d unescapePattern.matcher(string);\n+    StringBuffer accum \u003d new StringBuffer(string.length());\n+    while (m.find()) {\n         int charval \u003d -1;\n-        boolean isNum \u003d false;\n-        if (cq.matches(\"#\")) {\n-            isNum \u003d true;\n-            cq.consume();\n-        }\n-        val \u003d cq.consumeWord();\n-        if (val.length() \u003d\u003d 0) {\n-            accum.append(\"\u0026\");\n-            continue;\n-        }\n-        if (cq.matches(\";\"))\n-            cq.advance();\n-        if (isNum) {\n+        String num \u003d m.group(3);\n+        if (num !\u003d null) {\n             try {\n-                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n-                    charval \u003d Integer.valueOf(val.substring(1), 16);\n-                else\n-                    charval \u003d Integer.valueOf(val, 10);\n+                int base \u003d m.group(2) !\u003d null ? 16 : 10;\n+                charval \u003d Integer.valueOf(num, base);\n             } catch (NumberFormatException e) {\n             }\n         } else {\n-            if (full.containsKey(val.toLowerCase()))\n-                charval \u003d full.get(val.toLowerCase());\n+            String name \u003d m.group(1).toLowerCase();\n+            if (full.containsKey(name))\n+                charval \u003d full.get(name);\n         }\n-        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n-            accum.append(\"\u0026\").append(val).append(\";\");\n-        else\n-            accum.append((char) charval);\n+        if (charval !\u003d -1 || charval \u003e 0xFFFF) {\n+            String c \u003d Character.toString((char) charval);\n+            m.appendReplacement(accum, c);\n+        } else {\n+            m.appendReplacement(accum, m.group(0));\n+        }\n     }\n+    m.appendTail(accum);\n     return accum.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f8841edabba28d6125dd87ed72f557e85570066b": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "Working on escape/unescape routine.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f8841edabba28d6125dd87ed72f557e85570066b",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Working on escape/unescape routine.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "f8841edabba28d6125dd87ed72f557e85570066b",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    StringBuilder accum \u003d new StringBuilder(string.length());\n    TokenQueue cq \u003d new TokenQueue(string);\n    while (!cq.isEmpty()) {\n        accum.append(cq.consumeTo(\"\u0026\"));\n        if (!cq.matches(\"\u0026\")) {\n            accum.append(cq.remainder());\n            break;\n        }\n        cq.advance();\n        String val;\n        int charval \u003d -1;\n        boolean isNum \u003d false;\n        if (cq.matches(\"#\")) {\n            isNum \u003d true;\n            cq.consume();\n        }\n        val \u003d cq.consumeWord();\n        if (val.length() \u003d\u003d 0) {\n            accum.append(\"\u0026\");\n            continue;\n        }\n        if (cq.matches(\";\"))\n            cq.advance();\n        if (isNum) {\n            try {\n                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n                    charval \u003d Integer.valueOf(val.substring(1), 16);\n                else\n                    charval \u003d Integer.valueOf(val, 10);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            if (full.containsKey(val.toLowerCase()))\n                charval \u003d full.get(val.toLowerCase());\n        }\n        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n            accum.append(\"\u0026\").append(val).append(\";\");\n        else\n            accum.append((char) charval);\n    }\n    return accum.toString();\n}",
          "path": "src/main/java/org/jsoup/nodes/Entities.java",
          "functionStartLine": 44,
          "functionName": "unescape",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,45 @@\n-static String escape(String string, Charset charset) {\n-    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n-    CharsetEncoder encoder \u003d charset.newEncoder();\n-    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n-        Character c \u003d string.charAt(pos);\n-        if (fullByVal.containsKey((int) c))\n-            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n-        else if (encoder.canEncode(c))\n-            accum.append(c);\n+static String unescape(String string) {\n+    if (!string.contains(\"\u0026\"))\n+        return string;\n+    StringBuilder accum \u003d new StringBuilder(string.length());\n+    TokenQueue cq \u003d new TokenQueue(string);\n+    while (!cq.isEmpty()) {\n+        accum.append(cq.consumeTo(\"\u0026\"));\n+        if (!cq.matches(\"\u0026\")) {\n+            accum.append(cq.remainder());\n+            break;\n+        }\n+        cq.advance();\n+        String val;\n+        int charval \u003d -1;\n+        boolean isNum \u003d false;\n+        if (cq.matches(\"#\")) {\n+            isNum \u003d true;\n+            cq.consume();\n+        }\n+        val \u003d cq.consumeWord();\n+        if (val.length() \u003d\u003d 0) {\n+            accum.append(\"\u0026\");\n+            continue;\n+        }\n+        if (cq.matches(\";\"))\n+            cq.advance();\n+        if (isNum) {\n+            try {\n+                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n+                    charval \u003d Integer.valueOf(val.substring(1), 16);\n+                else\n+                    charval \u003d Integer.valueOf(val, 10);\n+            } catch (NumberFormatException e) {\n+            }\n+        } else {\n+            if (full.containsKey(val.toLowerCase()))\n+                charval \u003d full.get(val.toLowerCase());\n+        }\n+        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n+            accum.append(\"\u0026\").append(val).append(\";\");\n         else\n-            accum.append(\"\u0026#\").append((int) c).append(\";\");\n+            accum.append((char) charval);\n     }\n     return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/jsoup/Entities.java",
            "newPath": "src/main/java/org/jsoup/nodes/Entities.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Working on escape/unescape routine.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "f8841edabba28d6125dd87ed72f557e85570066b",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    StringBuilder accum \u003d new StringBuilder(string.length());\n    TokenQueue cq \u003d new TokenQueue(string);\n    while (!cq.isEmpty()) {\n        accum.append(cq.consumeTo(\"\u0026\"));\n        if (!cq.matches(\"\u0026\")) {\n            accum.append(cq.remainder());\n            break;\n        }\n        cq.advance();\n        String val;\n        int charval \u003d -1;\n        boolean isNum \u003d false;\n        if (cq.matches(\"#\")) {\n            isNum \u003d true;\n            cq.consume();\n        }\n        val \u003d cq.consumeWord();\n        if (val.length() \u003d\u003d 0) {\n            accum.append(\"\u0026\");\n            continue;\n        }\n        if (cq.matches(\";\"))\n            cq.advance();\n        if (isNum) {\n            try {\n                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n                    charval \u003d Integer.valueOf(val.substring(1), 16);\n                else\n                    charval \u003d Integer.valueOf(val, 10);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            if (full.containsKey(val.toLowerCase()))\n                charval \u003d full.get(val.toLowerCase());\n        }\n        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n            accum.append(\"\u0026\").append(val).append(\";\");\n        else\n            accum.append((char) charval);\n    }\n    return accum.toString();\n}",
          "path": "src/main/java/org/jsoup/nodes/Entities.java",
          "functionStartLine": 44,
          "functionName": "unescape",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,45 @@\n-static String escape(String string, Charset charset) {\n-    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n-    CharsetEncoder encoder \u003d charset.newEncoder();\n-    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n-        Character c \u003d string.charAt(pos);\n-        if (fullByVal.containsKey((int) c))\n-            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n-        else if (encoder.canEncode(c))\n-            accum.append(c);\n+static String unescape(String string) {\n+    if (!string.contains(\"\u0026\"))\n+        return string;\n+    StringBuilder accum \u003d new StringBuilder(string.length());\n+    TokenQueue cq \u003d new TokenQueue(string);\n+    while (!cq.isEmpty()) {\n+        accum.append(cq.consumeTo(\"\u0026\"));\n+        if (!cq.matches(\"\u0026\")) {\n+            accum.append(cq.remainder());\n+            break;\n+        }\n+        cq.advance();\n+        String val;\n+        int charval \u003d -1;\n+        boolean isNum \u003d false;\n+        if (cq.matches(\"#\")) {\n+            isNum \u003d true;\n+            cq.consume();\n+        }\n+        val \u003d cq.consumeWord();\n+        if (val.length() \u003d\u003d 0) {\n+            accum.append(\"\u0026\");\n+            continue;\n+        }\n+        if (cq.matches(\";\"))\n+            cq.advance();\n+        if (isNum) {\n+            try {\n+                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n+                    charval \u003d Integer.valueOf(val.substring(1), 16);\n+                else\n+                    charval \u003d Integer.valueOf(val, 10);\n+            } catch (NumberFormatException e) {\n+            }\n+        } else {\n+            if (full.containsKey(val.toLowerCase()))\n+                charval \u003d full.get(val.toLowerCase());\n+        }\n+        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n+            accum.append(\"\u0026\").append(val).append(\";\");\n         else\n-            accum.append(\"\u0026#\").append((int) c).append(\";\");\n+            accum.append((char) charval);\n     }\n     return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "Working on escape/unescape routine.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "f8841edabba28d6125dd87ed72f557e85570066b",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    StringBuilder accum \u003d new StringBuilder(string.length());\n    TokenQueue cq \u003d new TokenQueue(string);\n    while (!cq.isEmpty()) {\n        accum.append(cq.consumeTo(\"\u0026\"));\n        if (!cq.matches(\"\u0026\")) {\n            accum.append(cq.remainder());\n            break;\n        }\n        cq.advance();\n        String val;\n        int charval \u003d -1;\n        boolean isNum \u003d false;\n        if (cq.matches(\"#\")) {\n            isNum \u003d true;\n            cq.consume();\n        }\n        val \u003d cq.consumeWord();\n        if (val.length() \u003d\u003d 0) {\n            accum.append(\"\u0026\");\n            continue;\n        }\n        if (cq.matches(\";\"))\n            cq.advance();\n        if (isNum) {\n            try {\n                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n                    charval \u003d Integer.valueOf(val.substring(1), 16);\n                else\n                    charval \u003d Integer.valueOf(val, 10);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            if (full.containsKey(val.toLowerCase()))\n                charval \u003d full.get(val.toLowerCase());\n        }\n        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n            accum.append(\"\u0026\").append(val).append(\";\");\n        else\n            accum.append((char) charval);\n    }\n    return accum.toString();\n}",
          "path": "src/main/java/org/jsoup/nodes/Entities.java",
          "functionStartLine": 44,
          "functionName": "unescape",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,45 @@\n-static String escape(String string, Charset charset) {\n-    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n-    CharsetEncoder encoder \u003d charset.newEncoder();\n-    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n-        Character c \u003d string.charAt(pos);\n-        if (fullByVal.containsKey((int) c))\n-            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n-        else if (encoder.canEncode(c))\n-            accum.append(c);\n+static String unescape(String string) {\n+    if (!string.contains(\"\u0026\"))\n+        return string;\n+    StringBuilder accum \u003d new StringBuilder(string.length());\n+    TokenQueue cq \u003d new TokenQueue(string);\n+    while (!cq.isEmpty()) {\n+        accum.append(cq.consumeTo(\"\u0026\"));\n+        if (!cq.matches(\"\u0026\")) {\n+            accum.append(cq.remainder());\n+            break;\n+        }\n+        cq.advance();\n+        String val;\n+        int charval \u003d -1;\n+        boolean isNum \u003d false;\n+        if (cq.matches(\"#\")) {\n+            isNum \u003d true;\n+            cq.consume();\n+        }\n+        val \u003d cq.consumeWord();\n+        if (val.length() \u003d\u003d 0) {\n+            accum.append(\"\u0026\");\n+            continue;\n+        }\n+        if (cq.matches(\";\"))\n+            cq.advance();\n+        if (isNum) {\n+            try {\n+                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n+                    charval \u003d Integer.valueOf(val.substring(1), 16);\n+                else\n+                    charval \u003d Integer.valueOf(val, 10);\n+            } catch (NumberFormatException e) {\n+            }\n+        } else {\n+            if (full.containsKey(val.toLowerCase()))\n+                charval \u003d full.get(val.toLowerCase());\n+        }\n+        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n+            accum.append(\"\u0026\").append(val).append(\";\");\n         else\n-            accum.append(\"\u0026#\").append((int) c).append(\";\");\n+            accum.append((char) charval);\n     }\n     return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "escape",
            "newValue": "unescape"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Working on escape/unescape routine.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "f8841edabba28d6125dd87ed72f557e85570066b",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static String unescape(String string) {\n    if (!string.contains(\"\u0026\"))\n        return string;\n    StringBuilder accum \u003d new StringBuilder(string.length());\n    TokenQueue cq \u003d new TokenQueue(string);\n    while (!cq.isEmpty()) {\n        accum.append(cq.consumeTo(\"\u0026\"));\n        if (!cq.matches(\"\u0026\")) {\n            accum.append(cq.remainder());\n            break;\n        }\n        cq.advance();\n        String val;\n        int charval \u003d -1;\n        boolean isNum \u003d false;\n        if (cq.matches(\"#\")) {\n            isNum \u003d true;\n            cq.consume();\n        }\n        val \u003d cq.consumeWord();\n        if (val.length() \u003d\u003d 0) {\n            accum.append(\"\u0026\");\n            continue;\n        }\n        if (cq.matches(\";\"))\n            cq.advance();\n        if (isNum) {\n            try {\n                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n                    charval \u003d Integer.valueOf(val.substring(1), 16);\n                else\n                    charval \u003d Integer.valueOf(val, 10);\n            } catch (NumberFormatException e) {\n            }\n        } else {\n            if (full.containsKey(val.toLowerCase()))\n                charval \u003d full.get(val.toLowerCase());\n        }\n        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n            accum.append(\"\u0026\").append(val).append(\";\");\n        else\n            accum.append((char) charval);\n    }\n    return accum.toString();\n}",
          "path": "src/main/java/org/jsoup/nodes/Entities.java",
          "functionStartLine": 44,
          "functionName": "unescape",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,45 @@\n-static String escape(String string, Charset charset) {\n-    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n-    CharsetEncoder encoder \u003d charset.newEncoder();\n-    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n-        Character c \u003d string.charAt(pos);\n-        if (fullByVal.containsKey((int) c))\n-            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n-        else if (encoder.canEncode(c))\n-            accum.append(c);\n+static String unescape(String string) {\n+    if (!string.contains(\"\u0026\"))\n+        return string;\n+    StringBuilder accum \u003d new StringBuilder(string.length());\n+    TokenQueue cq \u003d new TokenQueue(string);\n+    while (!cq.isEmpty()) {\n+        accum.append(cq.consumeTo(\"\u0026\"));\n+        if (!cq.matches(\"\u0026\")) {\n+            accum.append(cq.remainder());\n+            break;\n+        }\n+        cq.advance();\n+        String val;\n+        int charval \u003d -1;\n+        boolean isNum \u003d false;\n+        if (cq.matches(\"#\")) {\n+            isNum \u003d true;\n+            cq.consume();\n+        }\n+        val \u003d cq.consumeWord();\n+        if (val.length() \u003d\u003d 0) {\n+            accum.append(\"\u0026\");\n+            continue;\n+        }\n+        if (cq.matches(\";\"))\n+            cq.advance();\n+        if (isNum) {\n+            try {\n+                if (val.charAt(0) \u003d\u003d \u0027x\u0027 || val.charAt(0) \u003d\u003d \u0027X\u0027)\n+                    charval \u003d Integer.valueOf(val.substring(1), 16);\n+                else\n+                    charval \u003d Integer.valueOf(val, 10);\n+            } catch (NumberFormatException e) {\n+            }\n+        } else {\n+            if (full.containsKey(val.toLowerCase()))\n+                charval \u003d full.get(val.toLowerCase());\n+        }\n+        if (charval \u003d\u003d -1 || charval \u003e 0xFFFF)\n+            accum.append(\"\u0026\").append(val).append(\";\");\n         else\n-            accum.append(\"\u0026#\").append((int) c).append(\";\");\n+            accum.append((char) charval);\n     }\n     return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[string-String, charset-Charset]",
            "newValue": "[string-String]"
          }
        }
      ]
    },
    "17486e2fa5b542b1f68b9b60efbefecd216a4a48": {
      "type": "Yintroduced",
      "commitMessage": "Draft implementation of Entities, for customisable entity escaping.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,14 @@\n+static String escape(String string, Charset charset) {\n+    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n+    CharsetEncoder encoder \u003d charset.newEncoder();\n+    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n+        Character c \u003d string.charAt(pos);\n+        if (fullByVal.containsKey((int) c))\n+            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n+        else if (encoder.canEncode(c))\n+            accum.append(c);\n+        else\n+            accum.append(\"\u0026#\").append((int) c).append(\";\");\n+    }\n+    return accum.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "static String escape(String string, Charset charset) {\n    StringBuilder accum \u003d new StringBuilder((int) (string.length() * 1.5));\n    CharsetEncoder encoder \u003d charset.newEncoder();\n    for (int pos \u003d 0; pos \u003c string.length(); pos++) {\n        Character c \u003d string.charAt(pos);\n        if (fullByVal.containsKey((int) c))\n            accum.append(\"\u0026\").append(fullByVal.get((int) c)).append(\";\");\n        else if (encoder.canEncode(c))\n            accum.append(c);\n        else\n            accum.append(\"\u0026#\").append((int) c).append(\";\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/Entities.java",
      "functionStartLine": 20,
      "functionName": "escape",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}