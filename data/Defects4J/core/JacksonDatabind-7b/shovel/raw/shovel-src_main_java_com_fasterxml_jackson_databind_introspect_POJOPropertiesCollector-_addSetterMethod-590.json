{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "POJOPropertiesCollector.java",
  "functionName": "_addSetterMethod",
  "functionId": "_addSetterMethod___m-AnnotatedMethod__ai-AnnotationIntrospector",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 590,
  "functionEndLine": 624,
  "numCommitsSeen": 49,
  "timeTaken": 3419,
  "changeHistory": [
    "328cc7e3cb4f3f423b4ba229c3fa358635352ba9",
    "9664b5f4694f03d83b775c732bd868e90049791e",
    "054467f2dce77e1a1f1aa074772d6860fa52b5ca",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd",
    "2fd4ffd9963545ce735a58957a84afb90809561e"
  ],
  "changeHistoryShort": {
    "328cc7e3cb4f3f423b4ba229c3fa358635352ba9": "Ybodychange",
    "9664b5f4694f03d83b775c732bd868e90049791e": "Ybodychange",
    "054467f2dce77e1a1f1aa074772d6860fa52b5ca": "Ybodychange",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": "Ybodychange",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": "Ybodychange",
    "2fd4ffd9963545ce735a58957a84afb90809561e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "328cc7e3cb4f3f423b4ba229c3fa358635352ba9": {
      "type": "Ybodychange",
      "commitMessage": "Connected `AnnotationIntrospector.findImplicitPropertyName()` from `POJOPropertiesCollector`; now some of `TestScalaLikeImplicitProperties` tests pass\n",
      "commitDate": "5/7/14, 11:25 PM",
      "commitName": "328cc7e3cb4f3f423b4ba229c3fa358635352ba9",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/7/14, 10:51 PM",
      "commitNameOld": "4e387c241b7c92f2e4d862f6217189e55472125e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n    boolean nameExplicit \u003d (pn !\u003d null);\n    if (!nameExplicit) {\n        implName \u003d (ai \u003d\u003d null) ? null : ai.findImplicitPropertyName(m);\n        if (implName \u003d\u003d null) {\n            implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        }\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d (ai \u003d\u003d null) ? null : ai.findImplicitPropertyName(m);\n        if (implName \u003d\u003d null) {\n            implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        }\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (pn.isEmpty()) {\n            pn \u003d _propNameFromSimple(implName);\n            nameExplicit \u003d false;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, pn, nameExplicit, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 581,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,31 @@\n protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n     String implName;\n     boolean visible;\n     PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n     boolean nameExplicit \u003d (pn !\u003d null);\n     if (!nameExplicit) {\n-        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        implName \u003d (ai \u003d\u003d null) ? null : ai.findImplicitPropertyName(m);\n+        if (implName \u003d\u003d null) {\n+            implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        }\n         if (implName \u003d\u003d null) {\n             return;\n         }\n         visible \u003d _visibilityChecker.isSetterVisible(m);\n     } else {\n-        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        implName \u003d (ai \u003d\u003d null) ? null : ai.findImplicitPropertyName(m);\n+        if (implName \u003d\u003d null) {\n+            implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        }\n         if (implName \u003d\u003d null) {\n             implName \u003d m.getName();\n         }\n         if (pn.isEmpty()) {\n             pn \u003d _propNameFromSimple(implName);\n             nameExplicit \u003d false;\n         }\n         visible \u003d true;\n     }\n     boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n     _property(implName).addSetter(m, pn, nameExplicit, visible, ignore);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9664b5f4694f03d83b775c732bd868e90049791e": {
      "type": "Ybodychange",
      "commitMessage": "...\n",
      "commitDate": "3/30/14, 8:52 PM",
      "commitName": "9664b5f4694f03d83b775c732bd868e90049791e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/30/14, 7:22 PM",
      "commitNameOld": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n    boolean nameExplicit \u003d (pn !\u003d null);\n    if (!nameExplicit) {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (pn.isEmpty()) {\n            pn \u003d _propNameFromSimple(implName);\n            nameExplicit \u003d false;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, pn, nameExplicit, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 557,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,25 @@\n protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n     String implName;\n     boolean visible;\n     PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n-    String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n-    boolean nameExplicit \u003d (explName !\u003d null);\n+    boolean nameExplicit \u003d (pn !\u003d null);\n     if (!nameExplicit) {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             return;\n         }\n         visible \u003d _visibilityChecker.isSetterVisible(m);\n     } else {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             implName \u003d m.getName();\n         }\n-        if (explName.length() \u003d\u003d 0) {\n-            explName \u003d implName;\n+        if (pn.isEmpty()) {\n+            pn \u003d _propNameFromSimple(implName);\n             nameExplicit \u003d false;\n         }\n         visible \u003d true;\n     }\n     boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n-    _property(implName).addSetter(m, explName, nameExplicit, visible, ignore);\n+    _property(implName).addSetter(m, pn, nameExplicit, visible, ignore);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "054467f2dce77e1a1f1aa074772d6860fa52b5ca": {
      "type": "Ybodychange",
      "commitMessage": "Fix #428\n",
      "commitDate": "3/28/14, 4:09 PM",
      "commitName": "054467f2dce77e1a1f1aa074772d6860fa52b5ca",
      "commitAuthor": "Tatu",
      "commitDateOld": "3/28/14, 3:51 PM",
      "commitNameOld": "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n    String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    boolean nameExplicit \u003d (explName !\u003d null);\n    if (!nameExplicit) {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (explName.length() \u003d\u003d 0) {\n            explName \u003d implName;\n            nameExplicit \u003d false;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, explName, nameExplicit, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 556,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,26 @@\n protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n     String implName;\n     boolean visible;\n     PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n     String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n-    if (explName \u003d\u003d null) {\n+    boolean nameExplicit \u003d (explName !\u003d null);\n+    if (!nameExplicit) {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             return;\n         }\n         visible \u003d _visibilityChecker.isSetterVisible(m);\n     } else {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             implName \u003d m.getName();\n         }\n         if (explName.length() \u003d\u003d 0) {\n             explName \u003d implName;\n+            nameExplicit \u003d false;\n         }\n         visible \u003d true;\n     }\n     boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n-    _property(implName).addSetter(m, explName, true, visible, ignore);\n+    _property(implName).addSetter(m, explName, nameExplicit, visible, ignore);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": {
      "type": "Ybodychange",
      "commitMessage": "Groundwork for addressing renaming of explicit names with PropertyNamingStrategy\n",
      "commitDate": "3/28/14, 3:51 PM",
      "commitName": "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
      "commitAuthor": "Tatu",
      "commitDateOld": "3/14/14, 10:00 PM",
      "commitNameOld": "9036ebc9fe0cad9cabc8506629f6ec2d5f3d225a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 13.74,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n    String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    if (explName \u003d\u003d null) {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (explName.length() \u003d\u003d 0) {\n            explName \u003d implName;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, explName, true, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 549,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n     String implName;\n     boolean visible;\n     PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n     String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n     if (explName \u003d\u003d null) {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             return;\n         }\n         visible \u003d _visibilityChecker.isSetterVisible(m);\n     } else {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             implName \u003d m.getName();\n         }\n         if (explName.length() \u003d\u003d 0) {\n             explName \u003d implName;\n         }\n         visible \u003d true;\n     }\n     boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n-    _property(implName).addSetter(m, explName, visible, ignore);\n+    _property(implName).addSetter(m, explName, true, visible, ignore);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": {
      "type": "Ybodychange",
      "commitMessage": "Complete [Issue#69] implementation\n",
      "commitDate": "9/4/12, 10:10 PM",
      "commitName": "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/4/12, 9:46 PM",
      "commitNameOld": "257da8e4ce33fe77a05f9867ce3e187e522a1b8e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n    String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    if (explName \u003d\u003d null) {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (explName.length() \u003d\u003d 0) {\n            explName \u003d implName;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, explName, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 509,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,24 @@\n protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n     String implName;\n     boolean visible;\n-    String explName \u003d (ai \u003d\u003d null) ? null : ai.findDeserializationName(m);\n+    PropertyName pn \u003d (ai \u003d\u003d null) ? null : ai.findNameForDeserialization(m);\n+    String explName \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n     if (explName \u003d\u003d null) {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             return;\n         }\n         visible \u003d _visibilityChecker.isSetterVisible(m);\n     } else {\n         implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n         if (implName \u003d\u003d null) {\n             implName \u003d m.getName();\n         }\n         if (explName.length() \u003d\u003d 0) {\n             explName \u003d implName;\n         }\n         visible \u003d true;\n     }\n     boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n     _property(implName).addSetter(m, explName, visible, ignore);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2fd4ffd9963545ce735a58957a84afb90809561e": {
      "type": "Yintroduced",
      "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
      "commitDate": "2/17/12, 10:40 PM",
      "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,23 @@\n+protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n+    String implName;\n+    boolean visible;\n+    String explName \u003d (ai \u003d\u003d null) ? null : ai.findDeserializationName(m);\n+    if (explName \u003d\u003d null) {\n+        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        if (implName \u003d\u003d null) {\n+            return;\n+        }\n+        visible \u003d _visibilityChecker.isSetterVisible(m);\n+    } else {\n+        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n+        if (implName \u003d\u003d null) {\n+            implName \u003d m.getName();\n+        }\n+        if (explName.length() \u003d\u003d 0) {\n+            explName \u003d implName;\n+        }\n+        visible \u003d true;\n+    }\n+    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n+    _property(implName).addSetter(m, explName, visible, ignore);\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void _addSetterMethod(AnnotatedMethod m, AnnotationIntrospector ai) {\n    String implName;\n    boolean visible;\n    String explName \u003d (ai \u003d\u003d null) ? null : ai.findDeserializationName(m);\n    if (explName \u003d\u003d null) {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            return;\n        }\n        visible \u003d _visibilityChecker.isSetterVisible(m);\n    } else {\n        implName \u003d BeanUtil.okNameForMutator(m, _mutatorPrefix);\n        if (implName \u003d\u003d null) {\n            implName \u003d m.getName();\n        }\n        if (explName.length() \u003d\u003d 0) {\n            explName \u003d implName;\n        }\n        visible \u003d true;\n    }\n    boolean ignore \u003d (ai \u003d\u003d null) ? false : ai.hasIgnoreMarker(m);\n    _property(implName).addSetter(m, explName, visible, ignore);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
      "functionStartLine": 495,
      "functionName": "_addSetterMethod",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}