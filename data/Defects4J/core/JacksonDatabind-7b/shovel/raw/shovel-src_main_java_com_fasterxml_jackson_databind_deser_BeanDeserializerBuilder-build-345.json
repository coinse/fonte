{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanDeserializerBuilder.java",
  "functionName": "build",
  "functionId": "build",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n",
  "functionStartLine": 345,
  "functionEndLine": 378,
  "numCommitsSeen": 32,
  "timeTaken": 893,
  "changeHistory": [
    "8bdd49b36c8c05483669f6bd50b3839016f78983",
    "4c8ee2eba68368f90ddb501d6f5c059ded1b3329",
    "60e30f499e9318b2b18c3cbac4edc2bfcf6d6d66",
    "2fd4ffd9963545ce735a58957a84afb90809561e",
    "34a8adf9c4b5e757f82011a5657a779c03cb133b",
    "d453182b63249c2c597a54229a4242e1ce1921d0",
    "d6e90d0259da622ddc593215361acdec3950bfe8",
    "19ab5808eb8e47662f1d55408fdb186320061f13",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "8bdd49b36c8c05483669f6bd50b3839016f78983": "Ybodychange",
    "4c8ee2eba68368f90ddb501d6f5c059ded1b3329": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
    "60e30f499e9318b2b18c3cbac4edc2bfcf6d6d66": "Ybodychange",
    "2fd4ffd9963545ce735a58957a84afb90809561e": "Ymultichange(Yreturntypechange,Ydocchange)",
    "34a8adf9c4b5e757f82011a5657a779c03cb133b": "Ybodychange",
    "d453182b63249c2c597a54229a4242e1ce1921d0": "Ybodychange",
    "d6e90d0259da622ddc593215361acdec3950bfe8": "Ymultichange(Yparameterchange,Ybodychange)",
    "19ab5808eb8e47662f1d55408fdb186320061f13": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bdd49b36c8c05483669f6bd50b3839016f78983": {
      "type": "Ybodychange",
      "commitMessage": "Complete handling of property description -- need to test still\n",
      "commitDate": "7/26/13, 4:18 PM",
      "commitName": "8bdd49b36c8c05483669f6bd50b3839016f78983",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/26/13, 2:42 PM",
      "commitNameOld": "1488cef12ee88e25dd0161f1b85c552a32775778",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, PropertyMetadata.STD_REQUIRED);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 353,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n",
      "diff": "@@ -1,19 +1,19 @@\n public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n-        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n+        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, PropertyMetadata.STD_REQUIRED);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4c8ee2eba68368f90ddb501d6f5c059ded1b3329": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "Improve BeanProperty to include \u0027isRequired()\u0027, as well as a method to traverse type/property hierarcy (JsonFormatVisitor)\n",
      "commitDate": "11/18/12, 7:56 PM",
      "commitName": "4c8ee2eba68368f90ddb501d6f5c059ded1b3329",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Improve BeanProperty to include \u0027isRequired()\u0027, as well as a method to traverse type/property hierarcy (JsonFormatVisitor)\n",
          "commitDate": "11/18/12, 7:56 PM",
          "commitName": "4c8ee2eba68368f90ddb501d6f5c059ded1b3329",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/16/12, 9:07 PM",
          "commitNameOld": "93ecc24ae85d5db13e640ff8c7c50aa11827412f",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 317,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n",
          "diff": "@@ -1,19 +1,19 @@\n-public BeanDeserializer build() {\n+public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n-        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader);\n+        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "BeanDeserializer",
            "newValue": "JsonDeserializer\u003c?\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Improve BeanProperty to include \u0027isRequired()\u0027, as well as a method to traverse type/property hierarcy (JsonFormatVisitor)\n",
          "commitDate": "11/18/12, 7:56 PM",
          "commitName": "4c8ee2eba68368f90ddb501d6f5c059ded1b3329",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/16/12, 9:07 PM",
          "commitNameOld": "93ecc24ae85d5db13e640ff8c7c50aa11827412f",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 317,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n",
          "diff": "@@ -1,19 +1,19 @@\n-public BeanDeserializer build() {\n+public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n-        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader);\n+        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Improve BeanProperty to include \u0027isRequired()\u0027, as well as a method to traverse type/property hierarcy (JsonFormatVisitor)\n",
          "commitDate": "11/18/12, 7:56 PM",
          "commitName": "4c8ee2eba68368f90ddb501d6f5c059ded1b3329",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/16/12, 9:07 PM",
          "commitNameOld": "93ecc24ae85d5db13e640ff8c7c50aa11827412f",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 317,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n",
          "diff": "@@ -1,19 +1,19 @@\n-public BeanDeserializer build() {\n+public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n-        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader);\n+        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader, true);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n",
            "newValue": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n\u003cp\u003e\nNOTE: Signature of this method did unfortunately change between Jackson 2.1\nand Jackson 2.2\n"
          }
        }
      ]
    },
    "60e30f499e9318b2b18c3cbac4edc2bfcf6d6d66": {
      "type": "Ybodychange",
      "commitMessage": "Implement [JACKSON-792]; can now handle Object Id forward references correctly\n",
      "commitDate": "3/5/12, 10:34 PM",
      "commitName": "60e30f499e9318b2b18c3cbac4edc2bfcf6d6d66",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/17/12, 10:40 PM",
      "commitNameOld": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 17.0,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanDeserializer build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 305,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n",
      "diff": "@@ -1,19 +1,19 @@\n public BeanDeserializer build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n-        ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n+        ObjectIdValueProperty prop \u003d new ObjectIdValueProperty(_objectIdReader);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2fd4ffd9963545ce735a58957a84afb90809561e": {
      "type": "Ymultichange(Yreturntypechange,Ydocchange)",
      "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
      "commitDate": "2/17/12, 10:40 PM",
      "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
          "commitDate": "2/17/12, 10:40 PM",
          "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/8/12, 10:07 PM",
          "commitNameOld": "34a8adf9c4b5e757f82011a5657a779c03cb133b",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 9.02,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public BeanDeserializer build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 305,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n",
          "diff": "@@ -1,19 +1,19 @@\n-public JsonDeserializer\u003c?\u003e build() {\n+public BeanDeserializer build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n         ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JsonDeserializer\u003c?\u003e",
            "newValue": "BeanDeserializer"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
          "commitDate": "2/17/12, 10:40 PM",
          "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/8/12, 10:07 PM",
          "commitNameOld": "34a8adf9c4b5e757f82011a5657a779c03cb133b",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 9.02,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public BeanDeserializer build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 305,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n",
          "diff": "@@ -1,19 +1,19 @@\n-public JsonDeserializer\u003c?\u003e build() {\n+public BeanDeserializer build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n     if (_objectIdReader !\u003d null) {\n         ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n         propertyMap \u003d propertyMap.withProperty(prop);\n     }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Method for constructing a {@link BeanDeserializer}, given all\ninformation collected.\n"
          }
        }
      ]
    },
    "34a8adf9c4b5e757f82011a5657a779c03cb133b": {
      "type": "Ybodychange",
      "commitMessage": "Yay! First end-to-end version of Object Id handling...\n",
      "commitDate": "2/8/12, 10:07 PM",
      "commitName": "34a8adf9c4b5e757f82011a5657a779c03cb133b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/7/12, 9:05 PM",
      "commitNameOld": "d71dffac80c387b8f48090e9c43fd3e5a5207e27",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    if (_objectIdReader !\u003d null) {\n        ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n        propertyMap \u003d propertyMap.withProperty(prop);\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 271,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,19 @@\n public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n+    if (_objectIdReader !\u003d null) {\n+        ObjectIdProperty prop \u003d new ObjectIdProperty(_objectIdReader);\n+        propertyMap \u003d propertyMap.withProperty(prop);\n+    }\n     return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d453182b63249c2c597a54229a4242e1ce1921d0": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring Object Id handling, after realizing first attempt is too limiting\n",
      "commitDate": "2/6/12, 10:44 PM",
      "commitName": "d453182b63249c2c597a54229a4242e1ce1921d0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/3/12, 9:50 PM",
      "commitNameOld": "eafafffda5d43e4ae2b2d6eb3a06c89575224b94",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 3.04,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 259,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n-    return new BeanDeserializer(_beanDesc, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n+    return new BeanDeserializer(this, _beanDesc, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, anyViews);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6e90d0259da622ddc593215361acdec3950bfe8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Remove BeanProperty refererence from BeanDeserializer\n",
      "commitDate": "1/30/12, 7:15 PM",
      "commitName": "d6e90d0259da622ddc593215361acdec3950bfe8",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Remove BeanProperty refererence from BeanDeserializer\n",
          "commitDate": "1/30/12, 7:15 PM",
          "commitName": "d6e90d0259da622ddc593215361acdec3950bfe8",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 3.87,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    return new BeanDeserializer(_beanDesc, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 251,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n-public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n+public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n-    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n+    return new BeanDeserializer(_beanDesc, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[forProperty-BeanProperty]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Remove BeanProperty refererence from BeanDeserializer\n",
          "commitDate": "1/30/12, 7:15 PM",
          "commitName": "d6e90d0259da622ddc593215361acdec3950bfe8",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 3.87,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonDeserializer\u003c?\u003e build() {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    return new BeanDeserializer(_beanDesc, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
          "functionStartLine": 251,
          "functionName": "build",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n-public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n+public JsonDeserializer\u003c?\u003e build() {\n     Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n     BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n     boolean anyViews \u003d !_defaultViewInclusion;\n     if (!anyViews) {\n         for (SettableBeanProperty prop : props) {\n             if (prop.hasViews()) {\n                 anyViews \u003d true;\n                 break;\n             }\n         }\n     }\n-    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n+    return new BeanDeserializer(_beanDesc, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "19ab5808eb8e47662f1d55408fdb186320061f13": {
      "type": "Ybodychange",
      "commitMessage": "Getting back to implement deserialization-with-view\n",
      "commitDate": "1/26/12, 10:26 PM",
      "commitName": "19ab5808eb8e47662f1d55408fdb186320061f13",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/22/12, 10:57 PM",
      "commitNameOld": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n    propertyMap.assignIndexes();\n    boolean anyViews \u003d !_defaultViewInclusion;\n    if (!anyViews) {\n        for (SettableBeanProperty prop : props) {\n            if (prop.hasViews()) {\n                anyViews \u003d true;\n                break;\n            }\n        }\n    }\n    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 251,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,15 @@\n public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n-    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(_properties.values());\n+    Collection\u003cSettableBeanProperty\u003e props \u003d _properties.values();\n+    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(props);\n     propertyMap.assignIndexes();\n-    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables);\n+    boolean anyViews \u003d !_defaultViewInclusion;\n+    if (!anyViews) {\n+        for (SettableBeanProperty prop : props) {\n+            if (prop.hasViews()) {\n+                anyViews \u003d true;\n+                break;\n+            }\n+        }\n+    }\n+    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables, anyViews);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,5 @@\n+public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n+    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(_properties.values());\n+    propertyMap.assignIndexes();\n+    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JsonDeserializer\u003c?\u003e build(BeanProperty forProperty) {\n    BeanPropertyMap propertyMap \u003d new BeanPropertyMap(_properties.values());\n    propertyMap.assignIndexes();\n    return new BeanDeserializer(_beanDesc, forProperty, _valueInstantiator, propertyMap, _backRefProperties, _ignorableProps, _ignoreAllUnknown, _anySetter, _injectables);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java",
      "functionStartLine": 270,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}