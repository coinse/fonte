{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StdValueInstantiator.java",
  "functionName": "createUsingDelegate",
  "functionId": "createUsingDelegate___ctxt-DeserializationContext__delegate-Object",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 239,
  "functionEndLine": 268,
  "numCommitsSeen": 22,
  "timeTaken": 781,
  "changeHistory": [
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
    "7555fa2b7e070b2bc50bfc0bd4e18526e3962b1f",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026": "Ybodychange",
    "7555fa2b7e070b2bc50bfc0bd4e18526e3962b1f": "Yparameterchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026": {
      "type": "Ybodychange",
      "commitMessage": "Fix [JACKSON-712], inability to use Injectables with delegation constructor\n",
      "commitDate": "1/19/12, 3:58 PM",
      "commitName": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/14/12, 11:03 PM",
      "commitNameOld": "7555fa2b7e070b2bc50bfc0bd4e18526e3962b1f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 4.7,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object createUsingDelegate(DeserializationContext ctxt, Object delegate) throws IOException, JsonProcessingException {\n    if (_delegateCreator \u003d\u003d null) {\n        throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n    }\n    try {\n        if (_delegateArguments \u003d\u003d null) {\n            return _delegateCreator.call1(delegate);\n        }\n        final int len \u003d _delegateArguments.length;\n        Object[] args \u003d new Object[len];\n        for (int i \u003d 0; i \u003c len; ++i) {\n            CreatorProperty prop \u003d _delegateArguments[i];\n            if (prop \u003d\u003d null) {\n                args[i] \u003d delegate;\n            } else {\n                args[i] \u003d ctxt.findInjectableValue(prop.getInjectableValueId(), prop, null);\n            }\n        }\n        return _delegateCreator.call(args);\n    } catch (ExceptionInInitializerError e) {\n        throw wrapException(e);\n    } catch (Exception e) {\n        throw wrapException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
      "functionStartLine": 244,
      "functionName": "createUsingDelegate",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,26 @@\n @Override\n public Object createUsingDelegate(DeserializationContext ctxt, Object delegate) throws IOException, JsonProcessingException {\n     if (_delegateCreator \u003d\u003d null) {\n         throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n     }\n     try {\n-        return _delegateCreator.call1(delegate);\n+        if (_delegateArguments \u003d\u003d null) {\n+            return _delegateCreator.call1(delegate);\n+        }\n+        final int len \u003d _delegateArguments.length;\n+        Object[] args \u003d new Object[len];\n+        for (int i \u003d 0; i \u003c len; ++i) {\n+            CreatorProperty prop \u003d _delegateArguments[i];\n+            if (prop \u003d\u003d null) {\n+                args[i] \u003d delegate;\n+            } else {\n+                args[i] \u003d ctxt.findInjectableValue(prop.getInjectableValueId(), prop, null);\n+            }\n+        }\n+        return _delegateCreator.call(args);\n     } catch (ExceptionInInitializerError e) {\n         throw wrapException(e);\n     } catch (Exception e) {\n         throw wrapException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7555fa2b7e070b2bc50bfc0bd4e18526e3962b1f": {
      "type": "Yparameterchange",
      "commitMessage": "Implemented [JACKSON-690]: pass DeserializationContext to ValueInstantiator.createXxx methods\n",
      "commitDate": "1/14/12, 11:03 PM",
      "commitName": "7555fa2b7e070b2bc50bfc0bd4e18526e3962b1f",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/28/11, 10:35 AM",
      "commitNameOld": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 17.52,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object createUsingDelegate(DeserializationContext ctxt, Object delegate) throws IOException, JsonProcessingException {\n    if (_delegateCreator \u003d\u003d null) {\n        throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n    }\n    try {\n        return _delegateCreator.call1(delegate);\n    } catch (ExceptionInInitializerError e) {\n        throw wrapException(e);\n    } catch (Exception e) {\n        throw wrapException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
      "functionStartLine": 242,
      "functionName": "createUsingDelegate",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n-public Object createUsingDelegate(Object delegate) throws IOException, JsonProcessingException {\n+public Object createUsingDelegate(DeserializationContext ctxt, Object delegate) throws IOException, JsonProcessingException {\n     if (_delegateCreator \u003d\u003d null) {\n         throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n     }\n     try {\n         return _delegateCreator.call1(delegate);\n     } catch (ExceptionInInitializerError e) {\n         throw wrapException(e);\n     } catch (Exception e) {\n         throw wrapException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[delegate-Object]",
        "newValue": "[ctxt-DeserializationContext, delegate-Object]"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,13 @@\n+@Override\n+public Object createUsingDelegate(Object delegate) throws IOException, JsonProcessingException {\n+    if (_delegateCreator \u003d\u003d null) {\n+        throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n+    }\n+    try {\n+        return _delegateCreator.call1(delegate);\n+    } catch (ExceptionInInitializerError e) {\n+        throw wrapException(e);\n+    } catch (Exception e) {\n+        throw wrapException(e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Object createUsingDelegate(Object delegate) throws IOException, JsonProcessingException {\n    if (_delegateCreator \u003d\u003d null) {\n        throw new IllegalStateException(\"No delegate constructor for \" + getValueTypeDesc());\n    }\n    try {\n        return _delegateCreator.call1(delegate);\n    } catch (ExceptionInInitializerError e) {\n        throw wrapException(e);\n    } catch (Exception e) {\n        throw wrapException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
      "functionStartLine": 238,
      "functionName": "createUsingDelegate",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}