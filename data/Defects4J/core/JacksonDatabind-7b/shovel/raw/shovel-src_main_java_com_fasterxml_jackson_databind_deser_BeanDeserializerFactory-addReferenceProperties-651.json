{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanDeserializerFactory.java",
  "functionName": "addReferenceProperties",
  "functionId": "addReferenceProperties___ctxt-DeserializationContext__beanDesc-BeanDescription__builder-BeanDeserializerBuilder",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
  "functionStartLine": 651,
  "functionEndLine": 673,
  "numCommitsSeen": 102,
  "timeTaken": 4097,
  "changeHistory": [
    "69d9c105be5d51257b1624bdacf644caa7d6f6e8",
    "9db4d99c6c425b779f1bb79ad4db667702657600",
    "1dcce980954c9acef708aa9a0a128f04564bdd25",
    "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455",
    "b37ff33bbc7885f21a208bee4f42126468f55d41",
    "28bde0726d83be7f70ca4586abee6f536bfc8885",
    "4489c26bd4384249f198cc052bfb54eeffd4ae23",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "69d9c105be5d51257b1624bdacf644caa7d6f6e8": "Ybodychange",
    "9db4d99c6c425b779f1bb79ad4db667702657600": "Ybodychange",
    "1dcce980954c9acef708aa9a0a128f04564bdd25": "Ybodychange",
    "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455": "Ybodychange",
    "b37ff33bbc7885f21a208bee4f42126468f55d41": "Ymultichange(Yparameterchange,Ybodychange)",
    "28bde0726d83be7f70ca4586abee6f536bfc8885": "Yparameterchange",
    "4489c26bd4384249f198cc052bfb54eeffd4ae23": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "69d9c105be5d51257b1624bdacf644caa7d6f6e8": {
      "type": "Ybodychange",
      "commitMessage": "Bit of refactoring to allow easier access to find wrapper name in use (if any)\n",
      "commitDate": "3/13/13, 3:20 PM",
      "commitName": "69d9c105be5d51257b1624bdacf644caa7d6f6e8",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/13, 8:22 PM",
      "commitNameOld": "c8fbc8010a23a7fea255c2a9c3ba4366c937865f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 21.75,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            Type genericType;\n            if (m instanceof AnnotatedMethod) {\n                genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n            } else {\n                genericType \u003d m.getRawType();\n            }\n            SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), m);\n            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, propDef, genericType));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 631,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "@@ -1,17 +1,17 @@\n protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             Type genericType;\n             if (m instanceof AnnotatedMethod) {\n                 genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n             } else {\n                 genericType \u003d m.getRawType();\n             }\n-            SimpleBeanPropertyDefinition propDef \u003d new SimpleBeanPropertyDefinition(m);\n+            SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), m);\n             builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, propDef, genericType));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9db4d99c6c425b779f1bb79ad4db667702657600": {
      "type": "Ybodychange",
      "commitMessage": "Yet more refactoring: making more use of BeanPropertyDefinition\n",
      "commitDate": "1/26/12, 1:07 PM",
      "commitName": "9db4d99c6c425b779f1bb79ad4db667702657600",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/26/12, 12:33 PM",
      "commitNameOld": "1dcce980954c9acef708aa9a0a128f04564bdd25",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            Type genericType;\n            if (m instanceof AnnotatedMethod) {\n                genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n            } else {\n                genericType \u003d m.getRawType();\n            }\n            SimpleBeanPropertyDefinition propDef \u003d new SimpleBeanPropertyDefinition(m);\n            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, propDef, genericType));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1008,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "@@ -1,16 +1,17 @@\n protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             Type genericType;\n             if (m instanceof AnnotatedMethod) {\n                 genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n             } else {\n                 genericType \u003d m.getRawType();\n             }\n-            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), m, genericType));\n+            SimpleBeanPropertyDefinition propDef \u003d new SimpleBeanPropertyDefinition(m);\n+            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, propDef, genericType));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1dcce980954c9acef708aa9a0a128f04564bdd25": {
      "type": "Ybodychange",
      "commitMessage": "Bit more renaming for consistency\n",
      "commitDate": "1/26/12, 12:33 PM",
      "commitName": "1dcce980954c9acef708aa9a0a128f04564bdd25",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/26/12, 12:01 PM",
      "commitNameOld": "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            Type genericType;\n            if (m instanceof AnnotatedMethod) {\n                genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n            } else {\n                genericType \u003d m.getRawType();\n            }\n            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), m, genericType));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1006,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "@@ -1,16 +1,16 @@\n protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             Type genericType;\n             if (m instanceof AnnotatedMethod) {\n-                genericType \u003d ((AnnotatedMethod) m).getParameterType(0);\n+                genericType \u003d ((AnnotatedMethod) m).getGenericParameterType(0);\n             } else {\n                 genericType \u003d m.getRawType();\n             }\n             builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), m, genericType));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455": {
      "type": "Ybodychange",
      "commitMessage": "...\n",
      "commitDate": "1/26/12, 12:01 PM",
      "commitName": "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 5:01 PM",
      "commitNameOld": "e14295471644955129d9f1a70a66207e7ee50856",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            Type genericType;\n            if (m instanceof AnnotatedMethod) {\n                genericType \u003d ((AnnotatedMethod) m).getParameterType(0);\n            } else {\n                genericType \u003d m.getRawType();\n            }\n            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), m, genericType));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1006,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "@@ -1,14 +1,16 @@\n protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n+            Type genericType;\n             if (m instanceof AnnotatedMethod) {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedMethod) m));\n+                genericType \u003d ((AnnotatedMethod) m).getParameterType(0);\n             } else {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedField) m));\n+                genericType \u003d m.getRawType();\n             }\n+            builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), m, genericType));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b37ff33bbc7885f21a208bee4f42126468f55d41": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
      "commitDate": "1/24/12, 4:19 PM",
      "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
      "commitAuthor": "Tatu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
          "commitDate": "1/24/12, 4:19 PM",
          "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 2:46 PM",
          "commitNameOld": "bf355caa0821e58968df3bf6c12f612639224e47",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            if (m instanceof AnnotatedMethod) {\n                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedMethod) m));\n            } else {\n                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedField) m));\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 1120,
          "functionName": "addReferenceProperties",
          "functionAnnotation": "",
          "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
          "diff": "@@ -1,14 +1,14 @@\n-protected void addReferenceProperties(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n+protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             if (m instanceof AnnotatedMethod) {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n+                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedMethod) m));\n             } else {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n+                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedField) m));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-DeserializationConfig, beanDesc-BeanDescription, builder-BeanDeserializerBuilder]",
            "newValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, builder-BeanDeserializerBuilder]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
          "commitDate": "1/24/12, 4:19 PM",
          "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 2:46 PM",
          "commitNameOld": "bf355caa0821e58968df3bf6c12f612639224e47",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            if (m instanceof AnnotatedMethod) {\n                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedMethod) m));\n            } else {\n                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedField) m));\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 1120,
          "functionName": "addReferenceProperties",
          "functionAnnotation": "",
          "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
          "diff": "@@ -1,14 +1,14 @@\n-protected void addReferenceProperties(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n+protected void addReferenceProperties(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             if (m instanceof AnnotatedMethod) {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n+                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedMethod) m));\n             } else {\n-                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n+                builder.addBackReferenceProperty(name, constructSettableProperty(ctxt, beanDesc, m.getName(), (AnnotatedField) m));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "28bde0726d83be7f70ca4586abee6f536bfc8885": {
      "type": "Yparameterchange",
      "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
      "commitDate": "1/22/12, 10:57 PM",
      "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/19/12, 3:58 PM",
      "commitNameOld": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 3.29,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            if (m instanceof AnnotatedMethod) {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n            } else {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1141,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "@@ -1,14 +1,14 @@\n-protected void addReferenceProperties(DeserializationConfig config, BasicBeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n+protected void addReferenceProperties(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n     Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n     if (refs !\u003d null) {\n         for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n             String name \u003d en.getKey();\n             AnnotatedMember m \u003d en.getValue();\n             if (m instanceof AnnotatedMethod) {\n                 builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n             } else {\n                 builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, beanDesc-BasicBeanDescription, builder-BeanDeserializerBuilder]",
        "newValue": "[config-DeserializationConfig, beanDesc-BeanDescription, builder-BeanDeserializerBuilder]"
      }
    },
    "4489c26bd4384249f198cc052bfb54eeffd4ae23": {
      "type": "Ydocchange",
      "commitMessage": "Complete [JACKSON-756] fix for 2.0.0\n",
      "commitDate": "1/17/12, 5:09 PM",
      "commitName": "4489c26bd4384249f198cc052bfb54eeffd4ae23",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/17/12, 4:32 PM",
      "commitNameOld": "a7013c485f63be90d6c0319e57ae1a1c380cc32c",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void addReferenceProperties(DeserializationConfig config, BasicBeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            if (m instanceof AnnotatedMethod) {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n            } else {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1128,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n\n@since 1.6\n",
        "newValue": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,14 @@\n+protected void addReferenceProperties(DeserializationConfig config, BasicBeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n+    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n+    if (refs !\u003d null) {\n+        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n+            String name \u003d en.getKey();\n+            AnnotatedMember m \u003d en.getValue();\n+            if (m instanceof AnnotatedMethod) {\n+                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n+            } else {\n+                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void addReferenceProperties(DeserializationConfig config, BasicBeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException {\n    Map\u003cString, AnnotatedMember\u003e refs \u003d beanDesc.findBackReferenceProperties();\n    if (refs !\u003d null) {\n        for (Map.Entry\u003cString, AnnotatedMember\u003e en : refs.entrySet()) {\n            String name \u003d en.getKey();\n            AnnotatedMember m \u003d en.getValue();\n            if (m instanceof AnnotatedMethod) {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedMethod) m));\n            } else {\n                builder.addBackReferenceProperty(name, constructSettableProperty(config, beanDesc, m.getName(), (AnnotatedField) m));\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1173,
      "functionName": "addReferenceProperties",
      "functionAnnotation": "",
      "functionDoc": "Method that will find if bean has any managed- or back-reference properties,\nand if so add them to bean, to be linked during resolution phase.\n\n@since 1.6\n"
    }
  }
}