{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeserializationContext.java",
  "functionName": "findRootValueDeserializer",
  "functionId": "findRootValueDeserializer___type-JavaType",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
  "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
  "functionDoc": "Method for finding a deserializer for root-level value.\n",
  "functionStartLine": 378,
  "functionEndLine": 394,
  "numCommitsSeen": 84,
  "timeTaken": 2101,
  "changeHistory": [
    "4f90dbca87b680cb10abdb0df5129491da3486d2",
    "f72fe21f7e7c306d42722456a5eff319155df99e",
    "060ce11a33baa8a1c951cb5b7a857d5d81db09ef",
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
    "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
    "06c20b1814a497cda59d46609ca03bfac20f64f1",
    "b37ff33bbc7885f21a208bee4f42126468f55d41",
    "53fb8522b402a409139175cbf867afa924e549f5",
    "e8dc60358d2ebd71948ba261cb66146695871304"
  ],
  "changeHistoryShort": {
    "4f90dbca87b680cb10abdb0df5129491da3486d2": "Ybodychange",
    "f72fe21f7e7c306d42722456a5eff319155df99e": "Ybodychange",
    "060ce11a33baa8a1c951cb5b7a857d5d81db09ef": "Ybodychange",
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce": "Ymultichange(Ybodychange,Yannotationchange,Ydocchange)",
    "9b9d04371fadb457e2f9b9d67f643c59d706aedc": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
    "06c20b1814a497cda59d46609ca03bfac20f64f1": "Ymultichange(Ymovefromfile,Ymodifierchange,Yannotationchange,Ydocchange)",
    "b37ff33bbc7885f21a208bee4f42126468f55d41": "Ybodychange",
    "53fb8522b402a409139175cbf867afa924e549f5": "Ybodychange",
    "e8dc60358d2ebd71948ba261cb66146695871304": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4f90dbca87b680cb10abdb0df5129491da3486d2": {
      "type": "Ybodychange",
      "commitMessage": "Further improvements to contextualization for deser side\n",
      "commitDate": "9/5/13, 9:45 PM",
      "commitName": "4f90dbca87b680cb10abdb0df5129491da3486d2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/5/13, 8:55 PM",
      "commitNameOld": "47ac6bd51e63b0cbfef2e431a94193433d15077a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    deser \u003d (JsonDeserializer\u003cObject\u003e) handleSecondaryContextualization(deser, null);\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
      "functionStartLine": 326,
      "functionName": "findRootValueDeserializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method for finding a deserializer for root-level value.\n",
      "diff": "@@ -1,14 +1,14 @@\n @SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n     JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n     if (deser \u003d\u003d null) {\n         return null;\n     }\n-    deser \u003d (JsonDeserializer\u003cObject\u003e) handleContextualization(deser, null);\n+    deser \u003d (JsonDeserializer\u003cObject\u003e) handleSecondaryContextualization(deser, null);\n     TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n     if (typeDeser !\u003d null) {\n         typeDeser \u003d typeDeser.forProperty(null);\n         return new TypeWrappedDeserializer(typeDeser, deser);\n     }\n     return deser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f72fe21f7e7c306d42722456a5eff319155df99e": {
      "type": "Ybodychange",
      "commitMessage": "Bit of groundwork for (possibly?) implementing #224; contextualization isolated in one place\n",
      "commitDate": "9/4/13, 10:07 PM",
      "commitName": "f72fe21f7e7c306d42722456a5eff319155df99e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/21/13, 6:08 PM",
      "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 14.17,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    deser \u003d (JsonDeserializer\u003cObject\u003e) handleContextualization(deser, null);\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
      "functionStartLine": 326,
      "functionName": "findRootValueDeserializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method for finding a deserializer for root-level value.\n",
      "diff": "@@ -1,16 +1,14 @@\n @SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n     JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n     if (deser \u003d\u003d null) {\n         return null;\n     }\n-    if (deser instanceof ContextualDeserializer) {\n-        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n-    }\n+    deser \u003d (JsonDeserializer\u003cObject\u003e) handleContextualization(deser, null);\n     TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n     if (typeDeser !\u003d null) {\n         typeDeser \u003d typeDeser.forProperty(null);\n         return new TypeWrappedDeserializer(typeDeser, deser);\n     }\n     return deser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "060ce11a33baa8a1c951cb5b7a857d5d81db09ef": {
      "type": "Ybodychange",
      "commitMessage": "Implemented [JACKSON-776], refactoring of DeserializationContext\n",
      "commitDate": "2/1/12, 10:18 PM",
      "commitName": "060ce11a33baa8a1c951cb5b7a857d5d81db09ef",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/31/12, 1:04 PM",
      "commitNameOld": "d0bb3152ceec7c33c700d21454b34700968a526a",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 1.38,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    if (deser instanceof ContextualDeserializer) {\n        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n    }\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
      "functionStartLine": 316,
      "functionName": "findRootValueDeserializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method for finding a deserializer for root-level value.\n",
      "diff": "@@ -1,16 +1,16 @@\n @SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n-    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n+    JsonDeserializer\u003cObject\u003e deser \u003d _cache.findValueDeserializer(this, _factory, type);\n     if (deser \u003d\u003d null) {\n         return null;\n     }\n     if (deser instanceof ContextualDeserializer) {\n         deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n     }\n     TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n     if (typeDeser !\u003d null) {\n         typeDeser \u003d typeDeser.forProperty(null);\n         return new TypeWrappedDeserializer(typeDeser, deser);\n     }\n     return deser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce": {
      "type": "Ymultichange(Ybodychange,Yannotationchange,Ydocchange)",
      "commitMessage": "More elimination of BeanProperty passing, getting close: one new (transient) unit test failure to fix\n",
      "commitDate": "1/31/12, 12:45 PM",
      "commitName": "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
      "commitAuthor": "Tatu",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "More elimination of BeanProperty passing, getting close: one new (transient) unit test failure to fix\n",
          "commitDate": "1/31/12, 12:45 PM",
          "commitName": "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/30/12, 9:20 AM",
          "commitNameOld": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.14,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    if (deser instanceof ContextualDeserializer) {\n        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n    }\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 199,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method for finding a deserializer for root-level value.\n",
          "diff": "@@ -1,3 +1,16 @@\n+@SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n-    return _deserCache.findRootValueDeserializer(this, type);\n+    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n+    if (deser \u003d\u003d null) {\n+        return null;\n+    }\n+    if (deser instanceof ContextualDeserializer) {\n+        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n+    }\n+    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n+    if (typeDeser !\u003d null) {\n+        typeDeser \u003d typeDeser.forProperty(null);\n+        return new TypeWrappedDeserializer(typeDeser, deser);\n+    }\n+    return deser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "More elimination of BeanProperty passing, getting close: one new (transient) unit test failure to fix\n",
          "commitDate": "1/31/12, 12:45 PM",
          "commitName": "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/30/12, 9:20 AM",
          "commitNameOld": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.14,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    if (deser instanceof ContextualDeserializer) {\n        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n    }\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 199,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method for finding a deserializer for root-level value.\n",
          "diff": "@@ -1,3 +1,16 @@\n+@SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n-    return _deserCache.findRootValueDeserializer(this, type);\n+    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n+    if (deser \u003d\u003d null) {\n+        return null;\n+    }\n+    if (deser instanceof ContextualDeserializer) {\n+        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n+    }\n+    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n+    if (typeDeser !\u003d null) {\n+        typeDeser \u003d typeDeser.forProperty(null);\n+        return new TypeWrappedDeserializer(typeDeser, deser);\n+    }\n+    return deser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@SuppressWarnings(\"unchecked\")"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "More elimination of BeanProperty passing, getting close: one new (transient) unit test failure to fix\n",
          "commitDate": "1/31/12, 12:45 PM",
          "commitName": "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/30/12, 9:20 AM",
          "commitNameOld": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.14,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n    if (deser \u003d\u003d null) {\n        return null;\n    }\n    if (deser instanceof ContextualDeserializer) {\n        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n    }\n    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n    if (typeDeser !\u003d null) {\n        typeDeser \u003d typeDeser.forProperty(null);\n        return new TypeWrappedDeserializer(typeDeser, deser);\n    }\n    return deser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 199,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method for finding a deserializer for root-level value.\n",
          "diff": "@@ -1,3 +1,16 @@\n+@SuppressWarnings(\"unchecked\")\n public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n-    return _deserCache.findRootValueDeserializer(this, type);\n+    JsonDeserializer\u003cObject\u003e deser \u003d _deserCache.findValueDeserializer(this, type);\n+    if (deser \u003d\u003d null) {\n+        return null;\n+    }\n+    if (deser instanceof ContextualDeserializer) {\n+        deser \u003d (JsonDeserializer\u003cObject\u003e) ((ContextualDeserializer) deser).createContextual(this, null);\n+    }\n+    TypeDeserializer typeDeser \u003d _factory.findTypeDeserializer(_config, type);\n+    if (typeDeser !\u003d null) {\n+        typeDeser \u003d typeDeser.forProperty(null);\n+        return new TypeWrappedDeserializer(typeDeser, deser);\n+    }\n+    return deser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
            "newValue": "Method for finding a deserializer for root-level value.\n"
          }
        }
      ]
    },
    "9b9d04371fadb457e2f9b9d67f643c59d706aedc": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Minor renaming\n",
      "commitDate": "1/30/12, 9:20 AM",
      "commitName": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Minor renaming\n",
          "commitDate": "1/30/12, 9:20 AM",
          "commitName": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/30/12, 8:24 AM",
          "commitNameOld": "2e5121ee9a521fe27e9caeaa91349183548a8820",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    return _deserCache.findRootValueDeserializer(this, type);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 189,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,3 +1,3 @@\n-public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserCache.findTypedValueDeserializer(this, type, property);\n+public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n+    return _deserCache.findRootValueDeserializer(this, type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "findTypedValueDeserializer",
            "newValue": "findRootValueDeserializer"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Minor renaming\n",
          "commitDate": "1/30/12, 9:20 AM",
          "commitName": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/30/12, 8:24 AM",
          "commitNameOld": "2e5121ee9a521fe27e9caeaa91349183548a8820",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    return _deserCache.findRootValueDeserializer(this, type);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 189,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,3 +1,3 @@\n-public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserCache.findTypedValueDeserializer(this, type, property);\n+public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n+    return _deserCache.findRootValueDeserializer(this, type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[type-JavaType, property-BeanProperty]",
            "newValue": "[type-JavaType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Minor renaming\n",
          "commitDate": "1/30/12, 9:20 AM",
          "commitName": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/30/12, 8:24 AM",
          "commitNameOld": "2e5121ee9a521fe27e9caeaa91349183548a8820",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    return _deserCache.findRootValueDeserializer(this, type);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 189,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,3 +1,3 @@\n-public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserCache.findTypedValueDeserializer(this, type, property);\n+public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n+    return _deserCache.findRootValueDeserializer(this, type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Minor renaming\n",
          "commitDate": "1/30/12, 9:20 AM",
          "commitName": "9b9d04371fadb457e2f9b9d67f643c59d706aedc",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/30/12, 8:24 AM",
          "commitNameOld": "2e5121ee9a521fe27e9caeaa91349183548a8820",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n    return _deserCache.findRootValueDeserializer(this, type);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 189,
          "functionName": "findRootValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,3 +1,3 @@\n-public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserCache.findTypedValueDeserializer(this, type, property);\n+public final JsonDeserializer\u003cObject\u003e findRootValueDeserializer(JavaType type) throws JsonMappingException {\n+    return _deserCache.findRootValueDeserializer(this, type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
            "newValue": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findRootValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n"
          }
        }
      ]
    },
    "06c20b1814a497cda59d46609ca03bfac20f64f1": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yannotationchange,Ydocchange)",
      "commitMessage": "Simplified DeserializationContext handling a bit by removing StdDeserializationContext, demoting functionaliyt\n",
      "commitDate": "1/29/12, 9:36 PM",
      "commitName": "06c20b1814a497cda59d46609ca03bfac20f64f1",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Simplified DeserializationContext handling a bit by removing StdDeserializationContext, demoting functionaliyt\n",
          "commitDate": "1/29/12, 9:36 PM",
          "commitName": "06c20b1814a497cda59d46609ca03bfac20f64f1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/29/12, 4:44 PM",
          "commitNameOld": "f0e232d14f4085bac5b5c40eb5efae2aaad5fbec",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserCache.findTypedValueDeserializer(this, type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 188,
          "functionName": "findTypedValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n-public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n+public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n     return _deserCache.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/com/fasterxml/jackson/databind/deser/StdDeserializationContext.java",
            "newPath": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
            "oldMethodName": "findTypedValueDeserializer",
            "newMethodName": "findTypedValueDeserializer"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Simplified DeserializationContext handling a bit by removing StdDeserializationContext, demoting functionaliyt\n",
          "commitDate": "1/29/12, 9:36 PM",
          "commitName": "06c20b1814a497cda59d46609ca03bfac20f64f1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/29/12, 4:44 PM",
          "commitNameOld": "f0e232d14f4085bac5b5c40eb5efae2aaad5fbec",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserCache.findTypedValueDeserializer(this, type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 188,
          "functionName": "findTypedValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n-public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n+public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n     return _deserCache.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, final]"
          }
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Simplified DeserializationContext handling a bit by removing StdDeserializationContext, demoting functionaliyt\n",
          "commitDate": "1/29/12, 9:36 PM",
          "commitName": "06c20b1814a497cda59d46609ca03bfac20f64f1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/29/12, 4:44 PM",
          "commitNameOld": "f0e232d14f4085bac5b5c40eb5efae2aaad5fbec",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserCache.findTypedValueDeserializer(this, type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 188,
          "functionName": "findTypedValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n-public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n+public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n     return _deserCache.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": ""
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Simplified DeserializationContext handling a bit by removing StdDeserializationContext, demoting functionaliyt\n",
          "commitDate": "1/29/12, 9:36 PM",
          "commitName": "06c20b1814a497cda59d46609ca03bfac20f64f1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/29/12, 4:44 PM",
          "commitNameOld": "f0e232d14f4085bac5b5c40eb5efae2aaad5fbec",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserCache.findTypedValueDeserializer(this, type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
          "functionStartLine": 188,
          "functionName": "findTypedValueDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n-public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n+public final JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n     return _deserCache.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Convenience method, functionally same as:\n\u003cpre\u003e\n getDeserializerProvider().findTypedValueDeserializer(getConfig(), propertyType, property);\n\u003c/pre\u003e\n"
          }
        }
      ]
    },
    "b37ff33bbc7885f21a208bee4f42126468f55d41": {
      "type": "Ybodychange",
      "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
      "commitDate": "1/24/12, 4:19 PM",
      "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 1:02 PM",
      "commitNameOld": "53fb8522b402a409139175cbf867afa924e549f5",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserCache.findTypedValueDeserializer(this, type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/StdDeserializationContext.java",
      "functionStartLine": 111,
      "functionName": "findTypedValueDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserProvider.findTypedValueDeserializer(this, type, property);\n+    return _deserCache.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "53fb8522b402a409139175cbf867afa924e549f5": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
      "commitDate": "1/24/12, 1:02 PM",
      "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 11:23 AM",
      "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserProvider.findTypedValueDeserializer(this, type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/StdDeserializationContext.java",
      "functionStartLine": 110,
      "functionName": "findTypedValueDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n-    return _deserProvider.findTypedValueDeserializer(_config, type, property);\n+    return _deserProvider.findTypedValueDeserializer(this, type, property);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e8dc60358d2ebd71948ba261cb66146695871304": {
      "type": "Yintroduced",
      "commitMessage": "cleanup\n",
      "commitDate": "1/23/12, 10:43 PM",
      "commitName": "e8dc60358d2ebd71948ba261cb66146695871304",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n+    return _deserProvider.findTypedValueDeserializer(_config, type, property);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic JsonDeserializer\u003cObject\u003e findTypedValueDeserializer(JavaType type, BeanProperty property) throws JsonMappingException {\n    return _deserProvider.findTypedValueDeserializer(_config, type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/StdDeserializationContext.java",
      "functionStartLine": 110,
      "functionName": "findTypedValueDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}