{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicBeanDescription.java",
  "functionName": "getFactoryMethods",
  "functionId": "getFactoryMethods",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 392,
  "functionEndLine": 406,
  "numCommitsSeen": 26,
  "timeTaken": 954,
  "changeHistory": [
    "28bde0726d83be7f70ca4586abee6f536bfc8885",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "28bde0726d83be7f70ca4586abee6f536bfc8885": "Yannotationchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "28bde0726d83be7f70ca4586abee6f536bfc8885": {
      "type": "Yannotationchange",
      "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
      "commitDate": "1/22/12, 10:57 PM",
      "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/19/12, 2:36 PM",
      "commitNameOld": "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 3.35,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic List\u003cAnnotatedMethod\u003e getFactoryMethods() {\n    List\u003cAnnotatedMethod\u003e candidates \u003d _classInfo.getStaticMethods();\n    if (candidates.isEmpty()) {\n        return candidates;\n    }\n    ArrayList\u003cAnnotatedMethod\u003e result \u003d new ArrayList\u003cAnnotatedMethod\u003e();\n    for (AnnotatedMethod am : candidates) {\n        if (isFactoryMethod(am)) {\n            result.add(am);\n        }\n    }\n    return result;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
      "functionStartLine": 256,
      "functionName": "getFactoryMethods",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,14 @@\n+@Override\n public List\u003cAnnotatedMethod\u003e getFactoryMethods() {\n     List\u003cAnnotatedMethod\u003e candidates \u003d _classInfo.getStaticMethods();\n     if (candidates.isEmpty()) {\n         return candidates;\n     }\n     ArrayList\u003cAnnotatedMethod\u003e result \u003d new ArrayList\u003cAnnotatedMethod\u003e();\n     for (AnnotatedMethod am : candidates) {\n         if (isFactoryMethod(am)) {\n             result.add(am);\n         }\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,13 @@\n+public List\u003cAnnotatedMethod\u003e getFactoryMethods() {\n+    List\u003cAnnotatedMethod\u003e candidates \u003d _classInfo.getStaticMethods();\n+    if (candidates.isEmpty()) {\n+        return candidates;\n+    }\n+    ArrayList\u003cAnnotatedMethod\u003e result \u003d new ArrayList\u003cAnnotatedMethod\u003e();\n+    for (AnnotatedMethod am : candidates) {\n+        if (isFactoryMethod(am)) {\n+            result.add(am);\n+        }\n+    }\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public List\u003cAnnotatedMethod\u003e getFactoryMethods() {\n    List\u003cAnnotatedMethod\u003e candidates \u003d _classInfo.getStaticMethods();\n    if (candidates.isEmpty()) {\n        return candidates;\n    }\n    ArrayList\u003cAnnotatedMethod\u003e result \u003d new ArrayList\u003cAnnotatedMethod\u003e();\n    for (AnnotatedMethod am : candidates) {\n        if (isFactoryMethod(am)) {\n            result.add(am);\n        }\n    }\n    return result;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
      "functionStartLine": 317,
      "functionName": "getFactoryMethods",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}