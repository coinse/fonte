{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-7b",
  "repositoryPath": "/tmp/JacksonDatabind-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenBuffer.java",
  "functionName": "copyCurrentStructure",
  "functionId": "copyCurrentStructure___jp-JsonParser",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 955,
  "functionEndLine": 991,
  "numCommitsSeen": 34,
  "timeTaken": 3389,
  "changeHistory": [
    "bc38763d9ce4058b8354fbe8e6476d3affa74946",
    "5fa08ecd5a7be950aa36cf8bd98fe83a5c699a9e",
    "767ecb29a5a79f799113d13eb137389ff5a4c2c5",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17"
  ],
  "changeHistoryShort": {
    "bc38763d9ce4058b8354fbe8e6476d3affa74946": "Ybodychange",
    "5fa08ecd5a7be950aa36cf8bd98fe83a5c699a9e": "Ybodychange",
    "767ecb29a5a79f799113d13eb137389ff5a4c2c5": "Ybodychange",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc38763d9ce4058b8354fbe8e6476d3affa74946": {
      "type": "Ybodychange",
      "commitMessage": "Implemented #277\n",
      "commitDate": "8/10/13, 9:37 AM",
      "commitName": "bc38763d9ce4058b8354fbe8e6476d3affa74946",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/7/13, 7:21 PM",
      "commitNameOld": "f6315d8e540ec5665dfa0cd2ba52920ff69c8ef3",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n    JsonToken t \u003d jp.getCurrentToken();\n    if (t \u003d\u003d JsonToken.FIELD_NAME) {\n        if (_mayHaveNativeIds) {\n            _checkNativeIds(jp);\n        }\n        writeFieldName(jp.getCurrentName());\n        t \u003d jp.nextToken();\n    }\n    if (_mayHaveNativeIds) {\n        _checkNativeIds(jp);\n    }\n    switch(t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default:\n            copyCurrentEvent(jp);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
      "functionStartLine": 921,
      "functionName": "copyCurrentStructure",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,38 +1,32 @@\n @Override\n public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n     JsonToken t \u003d jp.getCurrentToken();\n     if (t \u003d\u003d JsonToken.FIELD_NAME) {\n+        if (_mayHaveNativeIds) {\n+            _checkNativeIds(jp);\n+        }\n         writeFieldName(jp.getCurrentName());\n         t \u003d jp.nextToken();\n     }\n+    if (_mayHaveNativeIds) {\n+        _checkNativeIds(jp);\n+    }\n     switch(t) {\n         case START_ARRAY:\n-            if (_hasNativeTypeIds) {\n-                _copyTypeId(jp);\n-            }\n-            if (_hasNativeObjectIds) {\n-                _copyObjectId(jp);\n-            }\n             writeStartArray();\n             while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndArray();\n             break;\n         case START_OBJECT:\n-            if (_hasNativeTypeIds) {\n-                _copyTypeId(jp);\n-            }\n-            if (_hasNativeObjectIds) {\n-                _copyObjectId(jp);\n-            }\n             writeStartObject();\n             while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndObject();\n             break;\n         default:\n             copyCurrentEvent(jp);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5fa08ecd5a7be950aa36cf8bd98fe83a5c699a9e": {
      "type": "Ybodychange",
      "commitMessage": "Change to work with \u0027untyped\u0027 type/object ids\n",
      "commitDate": "8/5/13, 6:55 PM",
      "commitName": "5fa08ecd5a7be950aa36cf8bd98fe83a5c699a9e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/4/13, 5:24 PM",
      "commitNameOld": "c35736f43cfe0a7d2e5c0d3939a96b978e25876e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n    JsonToken t \u003d jp.getCurrentToken();\n    if (t \u003d\u003d JsonToken.FIELD_NAME) {\n        writeFieldName(jp.getCurrentName());\n        t \u003d jp.nextToken();\n    }\n    switch(t) {\n        case START_ARRAY:\n            if (_hasNativeTypeIds) {\n                _copyTypeId(jp);\n            }\n            if (_hasNativeObjectIds) {\n                _copyObjectId(jp);\n            }\n            writeStartArray();\n            while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            if (_hasNativeTypeIds) {\n                _copyTypeId(jp);\n            }\n            if (_hasNativeObjectIds) {\n                _copyObjectId(jp);\n            }\n            writeStartObject();\n            while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default:\n            copyCurrentEvent(jp);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
      "functionStartLine": 856,
      "functionName": "copyCurrentStructure",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,32 +1,38 @@\n @Override\n public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n     JsonToken t \u003d jp.getCurrentToken();\n     if (t \u003d\u003d JsonToken.FIELD_NAME) {\n         writeFieldName(jp.getCurrentName());\n         t \u003d jp.nextToken();\n     }\n     switch(t) {\n         case START_ARRAY:\n             if (_hasNativeTypeIds) {\n                 _copyTypeId(jp);\n             }\n+            if (_hasNativeObjectIds) {\n+                _copyObjectId(jp);\n+            }\n             writeStartArray();\n             while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndArray();\n             break;\n         case START_OBJECT:\n             if (_hasNativeTypeIds) {\n                 _copyTypeId(jp);\n             }\n+            if (_hasNativeObjectIds) {\n+                _copyObjectId(jp);\n+            }\n             writeStartObject();\n             while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndObject();\n             break;\n         default:\n             copyCurrentEvent(jp);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "767ecb29a5a79f799113d13eb137389ff5a4c2c5": {
      "type": "Ybodychange",
      "commitMessage": "Try to add support for retaining type ids via TokenBuffer\n",
      "commitDate": "8/4/13, 5:17 PM",
      "commitName": "767ecb29a5a79f799113d13eb137389ff5a4c2c5",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/25/13, 10:12 PM",
      "commitNameOld": "a455b53c75d4649461ba3e7fdcc625f2cd223202",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 9.8,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n    JsonToken t \u003d jp.getCurrentToken();\n    if (t \u003d\u003d JsonToken.FIELD_NAME) {\n        writeFieldName(jp.getCurrentName());\n        t \u003d jp.nextToken();\n    }\n    switch(t) {\n        case START_ARRAY:\n            if (_hasNativeTypeIds) {\n                _copyTypeId(jp);\n            }\n            writeStartArray();\n            while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            if (_hasNativeTypeIds) {\n                _copyTypeId(jp);\n            }\n            writeStartObject();\n            while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default:\n            copyCurrentEvent(jp);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
      "functionStartLine": 799,
      "functionName": "copyCurrentStructure",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,32 @@\n @Override\n public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n     JsonToken t \u003d jp.getCurrentToken();\n     if (t \u003d\u003d JsonToken.FIELD_NAME) {\n         writeFieldName(jp.getCurrentName());\n         t \u003d jp.nextToken();\n     }\n     switch(t) {\n         case START_ARRAY:\n+            if (_hasNativeTypeIds) {\n+                _copyTypeId(jp);\n+            }\n             writeStartArray();\n             while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndArray();\n             break;\n         case START_OBJECT:\n+            if (_hasNativeTypeIds) {\n+                _copyTypeId(jp);\n+            }\n             writeStartObject();\n             while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                 copyCurrentStructure(jp);\n             }\n             writeEndObject();\n             break;\n         default:\n             copyCurrentEvent(jp);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": {
      "type": "Yintroduced",
      "commitMessage": "Yet more clean up\n",
      "commitDate": "12/23/11, 8:38 AM",
      "commitName": "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,26 @@\n+@Override\n+public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n+    JsonToken t \u003d jp.getCurrentToken();\n+    if (t \u003d\u003d JsonToken.FIELD_NAME) {\n+        writeFieldName(jp.getCurrentName());\n+        t \u003d jp.nextToken();\n+    }\n+    switch(t) {\n+        case START_ARRAY:\n+            writeStartArray();\n+            while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n+                copyCurrentStructure(jp);\n+            }\n+            writeEndArray();\n+            break;\n+        case START_OBJECT:\n+            writeStartObject();\n+            while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n+                copyCurrentStructure(jp);\n+            }\n+            writeEndObject();\n+            break;\n+        default:\n+            copyCurrentEvent(jp);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {\n    JsonToken t \u003d jp.getCurrentToken();\n    if (t \u003d\u003d JsonToken.FIELD_NAME) {\n        writeFieldName(jp.getCurrentName());\n        t \u003d jp.nextToken();\n    }\n    switch(t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() !\u003d JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() !\u003d JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default:\n            copyCurrentEvent(jp);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
      "functionStartLine": 693,
      "functionName": "copyCurrentStructure",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}