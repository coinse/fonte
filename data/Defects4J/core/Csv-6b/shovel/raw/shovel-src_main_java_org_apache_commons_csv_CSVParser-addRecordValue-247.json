{
  "origin": "codeshovel",
  "repositoryName": "Csv-6b",
  "repositoryPath": "/tmp/Csv-6b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVParser.java",
  "functionName": "addRecordValue",
  "functionId": "addRecordValue",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVParser.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 247,
  "functionEndLine": 255,
  "numCommitsSeen": 118,
  "timeTaken": 1313,
  "changeHistory": [
    "316a51f5208bc95f22124d1579882131a4f441b2",
    "69997467d419487cb4098ff116188091907b5ff1",
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b"
  ],
  "changeHistoryShort": {
    "316a51f5208bc95f22124d1579882131a4f441b2": "Yformatchange",
    "69997467d419487cb4098ff116188091907b5ff1": "Ybodychange",
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "316a51f5208bc95f22124d1579882131a4f441b2": {
      "type": "Yformatchange",
      "commitMessage": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 7:03 PM",
      "commitName": "316a51f5208bc95f22124d1579882131a4f441b2",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/31/13, 8:39 AM",
      "commitNameOld": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private void addRecordValue() {\n    final String input \u003d this.reusableToken.content.toString();\n    final String nullString \u003d this.format.getNullString();\n    if (nullString \u003d\u003d null) {\n        this.record.add(input);\n    } else {\n        this.record.add(input.equalsIgnoreCase(nullString) ? null : input);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 274,
      "functionName": "addRecordValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "69997467d419487cb4098ff116188091907b5ff1": {
      "type": "Ybodychange",
      "commitMessage": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 10:36 AM",
      "commitName": "69997467d419487cb4098ff116188091907b5ff1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 9:26 AM",
      "commitNameOld": "61fdb7a03a22065de4c63525a4b836ba616aa1f1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void addRecordValue() {\n    final String input \u003d this.reusableToken.content.toString();\n    final String nullString \u003d this.format.getNullString();\n    if (nullString \u003d\u003d null) {\n        this.record.add(input);\n    } else {\n        this.record.add(input.equalsIgnoreCase(nullString) ? null : input);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 245,
      "functionName": "addRecordValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n private void addRecordValue() {\n-    final String input \u003d reusableToken.content.toString();\n+    final String input \u003d this.reusableToken.content.toString();\n     final String nullString \u003d this.format.getNullString();\n     if (nullString \u003d\u003d null) {\n-        record.add(input);\n+        this.record.add(input);\n     } else {\n-        record.add(input.equalsIgnoreCase(nullString) ? null : input);\n+        this.record.add(input.equalsIgnoreCase(nullString) ? null : input);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": {
      "type": "Yintroduced",
      "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/23/13, 8:06 PM",
      "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
      "commitAuthor": "Gary D. Gregory",
      "diff": "@@ -0,0 +1,9 @@\n+private void addRecordValue() {\n+    final String input \u003d reusableToken.content.toString();\n+    final String nullString \u003d this.format.getNullString();\n+    if (nullString \u003d\u003d null) {\n+        record.add(input);\n+    } else {\n+        record.add(input.equalsIgnoreCase(nullString) ? null : input);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void addRecordValue() {\n    final String input \u003d reusableToken.content.toString();\n    final String nullString \u003d this.format.getNullString();\n    if (nullString \u003d\u003d null) {\n        record.add(input);\n    } else {\n        record.add(input.equalsIgnoreCase(nullString) ? null : input);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 226,
      "functionName": "addRecordValue",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}