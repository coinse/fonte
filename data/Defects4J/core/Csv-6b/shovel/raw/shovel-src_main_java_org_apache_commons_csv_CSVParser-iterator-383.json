{
  "origin": "codeshovel",
  "repositoryName": "Csv-6b",
  "repositoryPath": "/tmp/Csv-6b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVParser.java",
  "functionName": "iterator",
  "functionId": "iterator",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVParser.java",
  "functionAnnotation": "",
  "functionDoc": "Returns an iterator on the records.\n\n\u003cp\u003eIOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\nIf the parser is closed a call to {@code next()} will throw a\nNoSuchElementException.\u003c/p\u003e\n",
  "functionStartLine": 383,
  "functionEndLine": 429,
  "numCommitsSeen": 118,
  "timeTaken": 2267,
  "changeHistory": [
    "412d05d166540dc3dc97ac5c08958934ea7112b3",
    "316a51f5208bc95f22124d1579882131a4f441b2",
    "69997467d419487cb4098ff116188091907b5ff1",
    "f78b5a14ca34f6176890b00308868b664b696148",
    "f656bb7cb671794cd35b319b30fb6d6ebab310ce",
    "933cf2d038b2a5b6381fc6ee4a04e52d4994cde2",
    "6306dd71817e91eb556fd28f2f4cc6c7675e169d",
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "25f4b3e9985684ed07bfbf8238d9148960001e7e",
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5",
    "bf06bed9b8905ccf5409179263707074167ccfc4",
    "aee6c50e2830c007a572cc96a57bc105308acc49",
    "b30da4450fdaec0e542755f4a8a283c3cbe50d8d",
    "eb6ffbb7f3d658b8b57258e706f30fc749db70d8",
    "f7220c40b18193ffa4b02fb6645b1e14db38cc44",
    "2ec4c994c0458ef893af9bd518849bec21b2dec4",
    "045dbbbe4ab84618cee8ba27d00b9283ce0a2715"
  ],
  "changeHistoryShort": {
    "412d05d166540dc3dc97ac5c08958934ea7112b3": "Ymultichange(Ybodychange,Ydocchange)",
    "316a51f5208bc95f22124d1579882131a4f441b2": "Yformatchange",
    "69997467d419487cb4098ff116188091907b5ff1": "Ybodychange",
    "f78b5a14ca34f6176890b00308868b664b696148": "Ybodychange",
    "f656bb7cb671794cd35b319b30fb6d6ebab310ce": "Ydocchange",
    "933cf2d038b2a5b6381fc6ee4a04e52d4994cde2": "Ybodychange",
    "6306dd71817e91eb556fd28f2f4cc6c7675e169d": "Ybodychange",
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad": "Ybodychange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Ybodychange",
    "25f4b3e9985684ed07bfbf8238d9148960001e7e": "Ybodychange",
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5": "Ydocchange",
    "bf06bed9b8905ccf5409179263707074167ccfc4": "Yformatchange",
    "aee6c50e2830c007a572cc96a57bc105308acc49": "Ymultichange(Yreturntypechange,Ybodychange)",
    "b30da4450fdaec0e542755f4a8a283c3cbe50d8d": "Ybodychange",
    "eb6ffbb7f3d658b8b57258e706f30fc749db70d8": "Ybodychange",
    "f7220c40b18193ffa4b02fb6645b1e14db38cc44": "Ybodychange",
    "2ec4c994c0458ef893af9bd518849bec21b2dec4": "Ybodychange",
    "045dbbbe4ab84618cee8ba27d00b9283ce0a2715": "Yintroduced"
  },
  "changeHistoryDetails": {
    "412d05d166540dc3dc97ac5c08958934ea7112b3": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/13, 12:41 PM",
      "commitName": "412d05d166540dc3dc97ac5c08958934ea7112b3",
      "commitAuthor": "Benedikt Ritter",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/1/13, 12:41 PM",
          "commitName": "412d05d166540dc3dc97ac5c08958934ea7112b3",
          "commitAuthor": "Benedikt Ritter",
          "commitDateOld": "8/1/13, 7:39 AM",
          "commitNameOld": "efdcb376e814d6e1b9a6b3e2cdb6914ccdf70dfe",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.21,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return CSVParser.this.nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (CSVParser.this.isClosed()) {\n                return false;\n            }\n            if (this.current \u003d\u003d null) {\n                this.current \u003d this.getNextRecord();\n            }\n            return this.current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            if (CSVParser.this.isClosed()) {\n                throw new NoSuchElementException(\"CSVParser has been closed\");\n            }\n            CSVRecord next \u003d this.current;\n            this.current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d this.getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 391,
          "functionName": "iterator",
          "functionAnnotation": "",
          "functionDoc": "Returns an iterator on the records.\n\n\u003cp\u003eIOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\nIf the parser is closed a call to {@code next()} will throw a\nNoSuchElementException.\u003c/p\u003e\n",
          "diff": "@@ -1,43 +1,43 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n                 return CSVParser.this.nextRecord();\n             } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n             if (CSVParser.this.isClosed()) {\n                 return false;\n             }\n             if (this.current \u003d\u003d null) {\n                 this.current \u003d this.getNextRecord();\n             }\n             return this.current !\u003d null;\n         }\n \n         public CSVRecord next() {\n             if (CSVParser.this.isClosed()) {\n-                return null;\n+                throw new NoSuchElementException(\"CSVParser has been closed\");\n             }\n             CSVRecord next \u003d this.current;\n             this.current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d this.getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/1/13, 12:41 PM",
          "commitName": "412d05d166540dc3dc97ac5c08958934ea7112b3",
          "commitAuthor": "Benedikt Ritter",
          "commitDateOld": "8/1/13, 7:39 AM",
          "commitNameOld": "efdcb376e814d6e1b9a6b3e2cdb6914ccdf70dfe",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.21,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return CSVParser.this.nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (CSVParser.this.isClosed()) {\n                return false;\n            }\n            if (this.current \u003d\u003d null) {\n                this.current \u003d this.getNextRecord();\n            }\n            return this.current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            if (CSVParser.this.isClosed()) {\n                throw new NoSuchElementException(\"CSVParser has been closed\");\n            }\n            CSVRecord next \u003d this.current;\n            this.current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d this.getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 391,
          "functionName": "iterator",
          "functionAnnotation": "",
          "functionDoc": "Returns an iterator on the records.\n\n\u003cp\u003eIOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\nIf the parser is closed a call to {@code next()} will throw a\nNoSuchElementException.\u003c/p\u003e\n",
          "diff": "@@ -1,43 +1,43 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n                 return CSVParser.this.nextRecord();\n             } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n             if (CSVParser.this.isClosed()) {\n                 return false;\n             }\n             if (this.current \u003d\u003d null) {\n                 this.current \u003d this.getNextRecord();\n             }\n             return this.current !\u003d null;\n         }\n \n         public CSVRecord next() {\n             if (CSVParser.this.isClosed()) {\n-                return null;\n+                throw new NoSuchElementException(\"CSVParser has been closed\");\n             }\n             CSVRecord next \u003d this.current;\n             this.current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d this.getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n",
            "newValue": "Returns an iterator on the records.\n\n\u003cp\u003eIOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\nIf the parser is closed a call to {@code next()} will throw a\nNoSuchElementException.\u003c/p\u003e\n"
          }
        }
      ]
    },
    "316a51f5208bc95f22124d1579882131a4f441b2": {
      "type": "Yformatchange",
      "commitMessage": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 7:03 PM",
      "commitName": "316a51f5208bc95f22124d1579882131a4f441b2",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/31/13, 8:39 AM",
      "commitNameOld": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return CSVParser.this.nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (CSVParser.this.isClosed()) {\n                return false;\n            }\n            if (this.current \u003d\u003d null) {\n                this.current \u003d this.getNextRecord();\n            }\n            return this.current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            if (CSVParser.this.isClosed()) {\n                return null;\n            }\n            CSVRecord next \u003d this.current;\n            this.current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d this.getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 389,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "69997467d419487cb4098ff116188091907b5ff1": {
      "type": "Ybodychange",
      "commitMessage": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 10:36 AM",
      "commitName": "69997467d419487cb4098ff116188091907b5ff1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 9:26 AM",
      "commitNameOld": "61fdb7a03a22065de4c63525a4b836ba616aa1f1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return CSVParser.this.nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (CSVParser.this.isClosed()) {\n                return false;\n            }\n            if (this.current \u003d\u003d null) {\n                this.current \u003d this.getNextRecord();\n            }\n            return this.current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            if (CSVParser.this.isClosed()) {\n                return null;\n            }\n            CSVRecord next \u003d this.current;\n            this.current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d this.getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 356,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "@@ -1,43 +1,43 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n-                return nextRecord();\n+                return CSVParser.this.nextRecord();\n             } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n-            if (isClosed()) {\n+            if (CSVParser.this.isClosed()) {\n                 return false;\n             }\n-            if (current \u003d\u003d null) {\n-                current \u003d getNextRecord();\n+            if (this.current \u003d\u003d null) {\n+                this.current \u003d this.getNextRecord();\n             }\n-            return current !\u003d null;\n+            return this.current !\u003d null;\n         }\n \n         public CSVRecord next() {\n-            if (isClosed()) {\n+            if (CSVParser.this.isClosed()) {\n                 return null;\n             }\n-            CSVRecord next \u003d current;\n-            current \u003d null;\n+            CSVRecord next \u003d this.current;\n+            this.current \u003d null;\n             if (next \u003d\u003d null) {\n-                next \u003d getNextRecord();\n+                next \u003d this.getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f78b5a14ca34f6176890b00308868b664b696148": {
      "type": "Ybodychange",
      "commitMessage": "Change CSVFormat#Iterable\u003cCSVRecord\u003e parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable\u003cCSVRecord\u003e. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 9:22 AM",
      "commitName": "f78b5a14ca34f6176890b00308868b664b696148",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 7:50 AM",
      "commitNameOld": "7af334d7d52ea245d71b9f17749360a4db0debf0",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (isClosed()) {\n                return false;\n            }\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            if (isClosed()) {\n                return null;\n            }\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 301,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "@@ -1,37 +1,43 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n                 return nextRecord();\n             } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n+            if (isClosed()) {\n+                return false;\n+            }\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n         public CSVRecord next() {\n+            if (isClosed()) {\n+                return null;\n+            }\n             CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f656bb7cb671794cd35b319b30fb6d6ebab310ce": {
      "type": "Ydocchange",
      "commitMessage": "Fix spelling in Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/19/13, 10:07 PM",
      "commitName": "f656bb7cb671794cd35b319b30fb6d6ebab310ce",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "11/15/12, 2:44 PM",
      "commitNameOld": "7fa5b4e68f16b4d4b33141ff7adae7d6caa3bf9b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 124.27,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 258,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
        "newValue": "Returns an iterator on the records. IOExceptions occurring during the iteration are wrapped in a\nRuntimeException.\n"
      }
    },
    "933cf2d038b2a5b6381fc6ee4a04e52d4994cde2": {
      "type": "Ybodychange",
      "commitMessage": "Add // TODO comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398749 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/16/12, 4:51 AM",
      "commitName": "933cf2d038b2a5b6381fc6ee4a04e52d4994cde2",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/15/12, 9:27 AM",
      "commitNameOld": "7d8c7f17ff5ee965b7e1d47e667fcd878d59c6aa",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 259,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6306dd71817e91eb556fd28f2f4cc6c7675e169d": {
      "type": "Ybodychange",
      "commitMessage": "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:18 AM",
      "commitName": "6306dd71817e91eb556fd28f2f4cc6c7675e169d",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:16 AM",
      "commitNameOld": "9542a399b8fe5eafa87c22fb29590a923f0786d1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 259,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "0e8084ab27bdd1e183b243b6c4cef97d603d23ad": {
      "type": "Ybodychange",
      "commitMessage": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:13 AM",
      "commitName": "0e8084ab27bdd1e183b243b6c4cef97d603d23ad",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:11 AM",
      "commitNameOld": "3b938ba40d050c319be41a415daf5832e6097d72",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return nextRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 259,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "@@ -1,37 +1,37 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n-                return getRecord();\n+                return nextRecord();\n             } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n         public CSVRecord next() {\n             CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Ybodychange",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 7:02 AM",
      "commitNameOld": "4bc562f47b46372a5ac11498fe5312846dedded4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (final IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 248,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "@@ -1,37 +1,37 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n         private CSVRecord getNextRecord() {\n             try {\n                 return getRecord();\n-            } catch (IOException e) {\n+            } catch (final IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n         public CSVRecord next() {\n             CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "25f4b3e9985684ed07bfbf8238d9148960001e7e": {
      "type": "Ybodychange",
      "commitMessage": "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/12/12, 6:14 AM",
      "commitName": "25f4b3e9985684ed07bfbf8238d9148960001e7e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/12/12, 5:59 AM",
      "commitNameOld": "473727be265240adf6d15a1d7abad2f0f31967fd",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 236,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "@@ -1,37 +1,37 @@\n public Iterator\u003cCSVRecord\u003e iterator() {\n     return new Iterator\u003cCSVRecord\u003e() {\n \n         private CSVRecord current;\n \n+        private CSVRecord getNextRecord() {\n+            try {\n+                return getRecord();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n         public CSVRecord next() {\n             CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n-        private CSVRecord getNextRecord() {\n-            try {\n-                return getRecord();\n-            } catch (IOException e) {\n-                throw new RuntimeException(e);\n-            }\n-        }\n-\n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5": {
      "type": "Ydocchange",
      "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 1:12 PM",
      "commitName": "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:40 PM",
      "commitNameOld": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 225,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
        "newValue": "Returns an iterator on the records. IOExceptions occuring during the iteration are wrapped in a\nRuntimeException.\n"
      }
    },
    "bf06bed9b8905ccf5409179263707074167ccfc4": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 12:40 PM",
      "commitName": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:35 PM",
      "commitNameOld": "6a132b40abbefb97ff58528eab8a8835fb353df1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 210,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "aee6c50e2830c007a572cc96a57bc105308acc49": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 6:39 PM",
      "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 1:52 AM",
          "commitNameOld": "38670dbe9232dc9b56d6464c42293e745974cf60",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 1.7,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 207,
          "functionName": "iterator",
          "functionAnnotation": "",
          "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
          "diff": "@@ -1,37 +1,37 @@\n-public Iterator\u003cString[]\u003e iterator() {\n-    return new Iterator\u003cString[]\u003e() {\n+public Iterator\u003cCSVRecord\u003e iterator() {\n+    return new Iterator\u003cCSVRecord\u003e() {\n \n-        private String[] current;\n+        private CSVRecord current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n-        public String[] next() {\n-            String[] next \u003d current;\n+        public CSVRecord next() {\n+            CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n-        private String[] getNextRecord() {\n+        private CSVRecord getNextRecord() {\n             try {\n                 return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Iterator\u003cString[]\u003e",
            "newValue": "Iterator\u003cCSVRecord\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 1:52 AM",
          "commitNameOld": "38670dbe9232dc9b56d6464c42293e745974cf60",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 1.7,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator\u003cCSVRecord\u003e iterator() {\n    return new Iterator\u003cCSVRecord\u003e() {\n\n        private CSVRecord current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public CSVRecord next() {\n            CSVRecord next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private CSVRecord getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 207,
          "functionName": "iterator",
          "functionAnnotation": "",
          "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
          "diff": "@@ -1,37 +1,37 @@\n-public Iterator\u003cString[]\u003e iterator() {\n-    return new Iterator\u003cString[]\u003e() {\n+public Iterator\u003cCSVRecord\u003e iterator() {\n+    return new Iterator\u003cCSVRecord\u003e() {\n \n-        private String[] current;\n+        private CSVRecord current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n-        public String[] next() {\n-            String[] next \u003d current;\n+        public CSVRecord next() {\n+            CSVRecord next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n-        private String[] getNextRecord() {\n+        private CSVRecord getNextRecord() {\n             try {\n                 return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "b30da4450fdaec0e542755f4a8a283c3cbe50d8d": {
      "type": "Ybodychange",
      "commitMessage": "It\u0027s not a line, it\u0027s a record\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300665 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/14/12, 10:59 AM",
      "commitName": "b30da4450fdaec0e542755f4a8a283c3cbe50d8d",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/14/12, 10:57 AM",
      "commitNameOld": "eb6ffbb7f3d658b8b57258e706f30fc749db70d8",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cString[]\u003e iterator() {\n    return new Iterator\u003cString[]\u003e() {\n\n        private String[] current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextRecord();\n            }\n            return current !\u003d null;\n        }\n\n        public String[] next() {\n            String[] next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextRecord();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private String[] getNextRecord() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 180,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
      "diff": "@@ -1,37 +1,37 @@\n public Iterator\u003cString[]\u003e iterator() {\n     return new Iterator\u003cString[]\u003e() {\n \n         private String[] current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n-                current \u003d getNextLine();\n+                current \u003d getNextRecord();\n             }\n             return current !\u003d null;\n         }\n \n         public String[] next() {\n             String[] next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n-                next \u003d getNextLine();\n+                next \u003d getNextRecord();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n-        private String[] getNextLine() {\n+        private String[] getNextRecord() {\n             try {\n                 return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "eb6ffbb7f3d658b8b57258e706f30fc749db70d8": {
      "type": "Ybodychange",
      "commitMessage": "Not needed outside the iterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300664 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/14/12, 10:57 AM",
      "commitName": "eb6ffbb7f3d658b8b57258e706f30fc749db70d8",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/14/12, 10:43 AM",
      "commitNameOld": "f7220c40b18193ffa4b02fb6645b1e14db38cc44",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cString[]\u003e iterator() {\n    return new Iterator\u003cString[]\u003e() {\n\n        private String[] current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextLine();\n            }\n            return current !\u003d null;\n        }\n\n        public String[] next() {\n            String[] next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextLine();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private String[] getNextLine() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 180,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
      "diff": "@@ -1,37 +1,37 @@\n public Iterator\u003cString[]\u003e iterator() {\n     return new Iterator\u003cString[]\u003e() {\n \n-        String[] current;\n+        private String[] current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextLine();\n             }\n             return current !\u003d null;\n         }\n \n         public String[] next() {\n             String[] next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextLine();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         private String[] getNextLine() {\n             try {\n                 return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n             throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f7220c40b18193ffa4b02fb6645b1e14db38cc44": {
      "type": "Ybodychange",
      "commitMessage": "CSV-60 CSVParser.iterator().remove() should throw throw new UnsupportedOperationException()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300661 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/14/12, 10:43 AM",
      "commitName": "f7220c40b18193ffa4b02fb6645b1e14db38cc44",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/14/12, 10:42 AM",
      "commitNameOld": "3cb5801a985c0d6a9ca3dc794b4e89a292b4a9c6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cString[]\u003e iterator() {\n    return new Iterator\u003cString[]\u003e() {\n\n        String[] current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextLine();\n            }\n            return current !\u003d null;\n        }\n\n        public String[] next() {\n            String[] next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextLine();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private String[] getNextLine() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 180,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
      "diff": "@@ -1,36 +1,37 @@\n public Iterator\u003cString[]\u003e iterator() {\n     return new Iterator\u003cString[]\u003e() {\n \n         String[] current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextLine();\n             }\n             return current !\u003d null;\n         }\n \n         public String[] next() {\n             String[] next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextLine();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         private String[] getNextLine() {\n             try {\n                 return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n+            throw new UnsupportedOperationException();\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2ec4c994c0458ef893af9bd518849bec21b2dec4": {
      "type": "Ybodychange",
      "commitMessage": "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/12, 1:59 AM",
      "commitName": "2ec4c994c0458ef893af9bd518849bec21b2dec4",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "3/7/12, 4:00 PM",
      "commitNameOld": "a65806a126d71477b3538b571c45f27de054ff84",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.42,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator\u003cString[]\u003e iterator() {\n    return new Iterator\u003cString[]\u003e() {\n\n        String[] current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextLine();\n            }\n            return current !\u003d null;\n        }\n\n        public String[] next() {\n            String[] next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextLine();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private String[] getNextLine() {\n            try {\n                return getRecord();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 182,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n",
      "diff": "@@ -1,36 +1,36 @@\n public Iterator\u003cString[]\u003e iterator() {\n     return new Iterator\u003cString[]\u003e() {\n \n         String[] current;\n \n         public boolean hasNext() {\n             if (current \u003d\u003d null) {\n                 current \u003d getNextLine();\n             }\n             return current !\u003d null;\n         }\n \n         public String[] next() {\n             String[] next \u003d current;\n             current \u003d null;\n             if (next \u003d\u003d null) {\n                 next \u003d getNextLine();\n                 if (next \u003d\u003d null) {\n                     throw new NoSuchElementException(\"No more CSV records available\");\n                 }\n             }\n             return next;\n         }\n \n         private String[] getNextLine() {\n             try {\n-                return getLine();\n+                return getRecord();\n             } catch (IOException e) {\n                 throw new RuntimeException(e);\n             }\n         }\n \n         public void remove() {\n         }\n     };\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "045dbbbe4ab84618cee8ba27d00b9283ce0a2715": {
      "type": "Yintroduced",
      "commitMessage": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 3:04 PM",
      "commitName": "045dbbbe4ab84618cee8ba27d00b9283ce0a2715",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,36 @@\n+public Iterator\u003cString[]\u003e iterator() {\n+    return new Iterator\u003cString[]\u003e() {\n+\n+        String[] current;\n+\n+        public boolean hasNext() {\n+            if (current \u003d\u003d null) {\n+                current \u003d getNextLine();\n+            }\n+            return current !\u003d null;\n+        }\n+\n+        public String[] next() {\n+            String[] next \u003d current;\n+            current \u003d null;\n+            if (next \u003d\u003d null) {\n+                next \u003d getNextLine();\n+                if (next \u003d\u003d null) {\n+                    throw new NoSuchElementException(\"No more CSV records available\");\n+                }\n+            }\n+            return next;\n+        }\n+\n+        private String[] getNextLine() {\n+            try {\n+                return getLine();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n+        public void remove() {\n+        }\n+    };\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Iterator\u003cString[]\u003e iterator() {\n    return new Iterator\u003cString[]\u003e() {\n\n        String[] current;\n\n        public boolean hasNext() {\n            if (current \u003d\u003d null) {\n                current \u003d getNextLine();\n            }\n            return current !\u003d null;\n        }\n\n        public String[] next() {\n            String[] next \u003d current;\n            current \u003d null;\n            if (next \u003d\u003d null) {\n                next \u003d getNextLine();\n                if (next \u003d\u003d null) {\n                    throw new NoSuchElementException(\"No more CSV records available\");\n                }\n            }\n            return next;\n        }\n\n        private String[] getNextLine() {\n            try {\n                return getLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public void remove() {\n        }\n    };\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 221,
      "functionName": "iterator",
      "functionAnnotation": "",
      "functionDoc": "Returns an iterator on the records. IOExceptions occuring\nduring the iteration are wrapped in a RuntimeException.\n"
    }
  }
}