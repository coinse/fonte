{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-2b",
  "repositoryPath": "/tmp/Jsoup-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "outerHtml",
  "functionId": "outerHtml___accum-StringBuilder",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 757,
  "functionEndLine": 773,
  "numCommitsSeen": 72,
  "timeTaken": 1052,
  "changeHistory": [
    "a52e669ca8bc48265accd57d610c0258f7891841",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60"
  ],
  "changeHistoryShort": {
    "a52e669ca8bc48265accd57d610c0258f7891841": "Ybodychange",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": "Ybodychange",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a52e669ca8bc48265accd57d610c0258f7891841": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output (pretty-print)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "a52e669ca8bc48265accd57d610c0258f7891841",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "93e9d84da0e87896aaaac14769eece487ba9e64d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n        indent(accum);\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        if (tag.canContainBlock())\n            indent(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 705,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n void outerHtml(StringBuilder accum) {\n+    if (isBlock() || (parent() !\u003d null \u0026\u0026 parent().tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0))\n+        indent(accum);\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        if (tag.canContainBlock())\n-            accum.append(\"\\n\");\n         html(accum);\n+        if (tag.canContainBlock())\n+            indent(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n-        if (tag.isBlock())\n-            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": {
      "type": "Ybodychange",
      "commitMessage": "Whitespace tests\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        if (tag.canContainBlock())\n            accum.append(\"\\n\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n        if (tag.isBlock())\n            accum.append(\"\\n\");\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 572,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,14 @@\n void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n+        if (tag.canContainBlock())\n+            accum.append(\"\\n\");\n         html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+        if (tag.isBlock())\n+            accum.append(\"\\n\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
      "commitMessage": "Use string builders for HTML creation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[accum-StringBuilder]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        html(accum);\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 575,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,10 @@\n-public String outerHtml() {\n-    StringBuilder accum \u003d new StringBuilder();\n+void outerHtml(StringBuilder accum) {\n     accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n     if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n         accum.append(\" /\u003e\");\n     } else {\n         accum.append(\"\u003e\");\n-        accum.append(html());\n+        html(accum);\n         accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n     }\n-    return accum.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
            "newValue": ""
          }
        }
      ]
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 516,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get the outer HTML for this element. E.g. on a {@code div} with one empty {@code p}, would return\n{@code \u003cdiv\u003e\u003cp\u003e\u003c/p\u003e\u003c/div\u003e}.\n\n@return the outer HTML\n@see #html()\n"
      }
    },
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": {
      "type": "Yintroduced",
      "commitMessage": "All nodes have outerHtml method, elements have (inner) HTML.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "0e4c8bf728d368fed47e458f5f91517c677f1d60",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,12 @@\n+public String outerHtml() {\n+    StringBuilder accum \u003d new StringBuilder();\n+    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n+    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n+        accum.append(\" /\u003e\");\n+    } else {\n+        accum.append(\"\u003e\");\n+        accum.append(html());\n+        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n+    }\n+    return accum.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String outerHtml() {\n    StringBuilder accum \u003d new StringBuilder();\n    accum.append(\"\u003c\").append(tagName()).append(attributes.html());\n    if (childNodes.isEmpty() \u0026\u0026 tag.isEmpty()) {\n        accum.append(\" /\u003e\");\n    } else {\n        accum.append(\"\u003e\");\n        accum.append(html());\n        accum.append(\"\u003c/\").append(tagName()).append(\"\u003e\");\n    }\n    return accum.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 204,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}