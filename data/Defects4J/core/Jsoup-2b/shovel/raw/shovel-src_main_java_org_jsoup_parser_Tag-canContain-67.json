{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-2b",
  "repositoryPath": "/tmp/Jsoup-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Tag.java",
  "functionName": "canContain",
  "functionId": "canContain___child-Tag",
  "sourceFilePath": "src/main/java/org/jsoup/parser/Tag.java",
  "functionAnnotation": "",
  "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
  "functionStartLine": 67,
  "functionEndLine": 99,
  "numCommitsSeen": 21,
  "timeTaken": 648,
  "changeHistory": [
    "6788a6daf22fc16c752cfa51d53b17a9436df1c0",
    "98e828a29423b72397d8783c4d02159e50bd50a4",
    "9c8969d48f776ce2f1bbcac73a2e0b4c85c71556",
    "ada77956bb99a098503ee57446fcd8cb59cd3354",
    "b8b73080085bed3b2062e1a90ed940056997a0ff",
    "e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d",
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
    "548ce13435a00bb447fbffdbca8c5ce3be752ee4"
  ],
  "changeHistoryShort": {
    "6788a6daf22fc16c752cfa51d53b17a9436df1c0": "Ybodychange",
    "98e828a29423b72397d8783c4d02159e50bd50a4": "Ybodychange",
    "9c8969d48f776ce2f1bbcac73a2e0b4c85c71556": "Ymodifierchange",
    "ada77956bb99a098503ee57446fcd8cb59cd3354": "Ybodychange",
    "b8b73080085bed3b2062e1a90ed940056997a0ff": "Ybodychange",
    "e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d": "Ybodychange",
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268": "Ybodychange",
    "548ce13435a00bb447fbffdbca8c5ce3be752ee4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6788a6daf22fc16c752cfa51d53b17a9436df1c0": {
      "type": "Ybodychange",
      "commitMessage": "Parse \u003cframeset\u003e outside of \u003cbody\u003e\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "6788a6daf22fc16c752cfa51d53b17a9436df1c0",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"noscript\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n            return true;\n        }\n        return false;\n    }\n    if (this.tagName.equals(\"dt\") \u0026\u0026 child.tagName.equals(\"dd\"))\n        return false;\n    if (this.tagName.equals(\"dd\") \u0026\u0026 child.tagName.equals(\"dt\"))\n        return false;\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 65,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,22 +1,22 @@\n boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n     if (this.empty || this.isData())\n         return false;\n     if (this.tagName.equals(\"head\")) {\n-        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n+        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"noscript\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n             return true;\n         }\n         return false;\n     }\n     if (this.tagName.equals(\"dt\") \u0026\u0026 child.tagName.equals(\"dd\"))\n         return false;\n     if (this.tagName.equals(\"dd\") \u0026\u0026 child.tagName.equals(\"dt\"))\n         return false;\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "98e828a29423b72397d8783c4d02159e50bd50a4": {
      "type": "Ybodychange",
      "commitMessage": "Fixed parse of unclosed \u003cdl\u003e\u003cdt\u003eFoo\u003cdd\u003eBar\u003c/dl\u003e runs.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "98e828a29423b72397d8783c4d02159e50bd50a4",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "9c8969d48f776ce2f1bbcac73a2e0b4c85c71556",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n            return true;\n        }\n        return false;\n    }\n    if (this.tagName.equals(\"dt\") \u0026\u0026 child.tagName.equals(\"dd\"))\n        return false;\n    if (this.tagName.equals(\"dd\") \u0026\u0026 child.tagName.equals(\"dt\"))\n        return false;\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 69,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,18 +1,22 @@\n boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n     if (this.empty || this.isData())\n         return false;\n     if (this.tagName.equals(\"head\")) {\n         if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n             return true;\n         }\n         return false;\n     }\n+    if (this.tagName.equals(\"dt\") \u0026\u0026 child.tagName.equals(\"dd\"))\n+        return false;\n+    if (this.tagName.equals(\"dd\") \u0026\u0026 child.tagName.equals(\"dt\"))\n+        return false;\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9c8969d48f776ce2f1bbcac73a2e0b4c85c71556": {
      "type": "Ymodifierchange",
      "commitMessage": "Knock access down\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9c8969d48f776ce2f1bbcac73a2e0b4c85c71556",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "40979c984d6ceebd50dab1ba516babb1570841a7",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 69,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,18 +1,18 @@\n-public boolean canContain(Tag child) {\n+boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n     if (this.empty || this.isData())\n         return false;\n     if (this.tagName.equals(\"head\")) {\n         if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n             return true;\n         }\n         return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "ada77956bb99a098503ee57446fcd8cb59cd3354": {
      "type": "Ybodychange",
      "commitMessage": "todo note\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "ada77956bb99a098503ee57446fcd8cb59cd3354",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "b8b73080085bed3b2062e1a90ed940056997a0ff",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 70,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "b8b73080085bed3b2062e1a90ed940056997a0ff": {
      "type": "Ybodychange",
      "commitMessage": "Fixed head canContain\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "b8b73080085bed3b2062e1a90ed940056997a0ff",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 70,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,18 +1,18 @@\n public boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n     if (this.empty || this.isData())\n         return false;\n     if (this.tagName.equals(\"head\")) {\n-        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n+        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n             return true;\n         }\n         return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d": {
      "type": "Ybodychange",
      "commitMessage": "Implicit parent creation for elements, more general document structure creation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "4bd743a3a5492d1d185bd21f421e49ce3a27af7c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty || this.isData())\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 70,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,18 +1,18 @@\n public boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n-    if (this.empty)\n+    if (this.empty || this.isData())\n         return false;\n     if (this.tagName.equals(\"head\")) {\n         if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n             return true;\n         }\n         return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268": {
      "type": "Ybodychange",
      "commitMessage": "Reimplemented parser.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e65b503c2054ec715d75815c07187e41182efe18",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty)\n        return false;\n    if (this.tagName.equals(\"head\")) {\n        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 65,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n",
      "diff": "@@ -1,12 +1,18 @@\n public boolean canContain(Tag child) {\n     Validate.notNull(child);\n     if (child.isBlock \u0026\u0026 !this.canContainBlock)\n         return false;\n     if (!child.isBlock \u0026\u0026 !this.canContainInline)\n         return false;\n     if (this.optionalClosing \u0026\u0026 this.equals(child))\n         return false;\n     if (this.empty)\n         return false;\n+    if (this.tagName.equals(\"head\")) {\n+        if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") || child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n+            return true;\n+        }\n+        return false;\n+    }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "548ce13435a00bb447fbffdbca8c5ce3be752ee4": {
      "type": "Yintroduced",
      "commitMessage": "Initial implementation of Tag.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "548ce13435a00bb447fbffdbca8c5ce3be752ee4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,12 @@\n+public boolean canContain(Tag child) {\n+    Validate.notNull(child);\n+    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n+        return false;\n+    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n+        return false;\n+    if (this.optionalClosing \u0026\u0026 this.equals(child))\n+        return false;\n+    if (this.empty)\n+        return false;\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean canContain(Tag child) {\n    Validate.notNull(child);\n    if (child.isBlock \u0026\u0026 !this.canContainBlock)\n        return false;\n    if (!child.isBlock \u0026\u0026 !this.canContainInline)\n        return false;\n    if (this.optionalClosing \u0026\u0026 this.equals(child))\n        return false;\n    if (this.empty)\n        return false;\n    return true;\n}",
      "path": "src/main/java/org/jsoup/parser/Tag.java",
      "functionStartLine": 61,
      "functionName": "canContain",
      "functionAnnotation": "",
      "functionDoc": "     Test if this tag, the prospective parent, can accept the proposed child.\n\n@ @param child potential child tag.\n     @return true if this can contain child.\n"
    }
  }
}