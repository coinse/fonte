{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-34b",
  "repositoryPath": "/tmp/Jsoup-34b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CharacterReader.java",
  "functionName": "nextIndexOf",
  "functionId": "nextIndexOf___seq-CharSequence",
  "sourceFilePath": "src/main/java/org/jsoup/parser/CharacterReader.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the number of characters between the current position and the next instance of the input sequence\n\n@param seq scan target\n@return offset between current position and next instance of target. -1 if not found.\n",
  "functionStartLine": 82,
  "functionEndLine": 98,
  "numCommitsSeen": 10,
  "timeTaken": 184,
  "changeHistory": [
    "231aab61e228513853d08374e188217933f70986"
  ],
  "changeHistoryShort": {
    "231aab61e228513853d08374e188217933f70986": "Yintroduced"
  },
  "changeHistoryDetails": {
    "231aab61e228513853d08374e188217933f70986": {
      "type": "Yintroduced",
      "commitMessage": "Replaced Strings with char array in CharacterReader, for well improved parse times.\n\nFaster to scan, and less garbage created.\n",
      "commitDate": "6/3/12, 6:44 PM",
      "commitName": "231aab61e228513853d08374e188217933f70986",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,15 @@\n+int nextIndexOf(CharSequence seq) {\n+    char startChar \u003d seq.charAt(0);\n+    for (int offset \u003d pos; offset \u003c length; offset++) {\n+        if (startChar !\u003d input[offset])\n+            while (++offset \u003c length \u0026\u0026 startChar !\u003d input[offset]) ;\n+        if (offset \u003c length) {\n+            int i \u003d offset + 1;\n+            int last \u003d i + seq.length() - 1;\n+            for (int j \u003d 1; i \u003c last \u0026\u0026 seq.charAt(j) \u003d\u003d input[i]; i++, j++) ;\n+            if (i \u003d\u003d last)\n+                return offset - pos;\n+        }\n+    }\n+    return -1;\n+}\n\\ No newline at end of file\n",
      "actualSource": "int nextIndexOf(CharSequence seq) {\n    char startChar \u003d seq.charAt(0);\n    for (int offset \u003d pos; offset \u003c length; offset++) {\n        if (startChar !\u003d input[offset])\n            while (++offset \u003c length \u0026\u0026 startChar !\u003d input[offset]) ;\n        if (offset \u003c length) {\n            int i \u003d offset + 1;\n            int last \u003d i + seq.length() - 1;\n            for (int j \u003d 1; i \u003c last \u0026\u0026 seq.charAt(j) \u003d\u003d input[i]; i++, j++) ;\n            if (i \u003d\u003d last)\n                return offset - pos;\n        }\n    }\n    return -1;\n}",
      "path": "src/main/java/org/jsoup/parser/CharacterReader.java",
      "functionStartLine": 82,
      "functionName": "nextIndexOf",
      "functionAnnotation": "",
      "functionDoc": "Returns the number of characters between the current position and the next instance of the input sequence\n\n@param seq scan target\n@return offset between current position and next instance of target. -1 if not found.\n"
    }
  }
}