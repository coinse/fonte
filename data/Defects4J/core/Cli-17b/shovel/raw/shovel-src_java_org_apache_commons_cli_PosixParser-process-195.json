{
  "origin": "codeshovel",
  "repositoryName": "Cli-17b",
  "repositoryPath": "/tmp/Cli-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PosixParser.java",
  "functionName": "process",
  "functionId": "process___value-String",
  "sourceFilePath": "src/java/org/apache/commons/cli/PosixParser.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eIf there is a current option and it can have an argument\nvalue then add the token to the processed tokens list and \nset the current option to null.\u003c/p\u003e\n\u003cp\u003eIf there is a current option and it can have argument\nvalues then add the token to the processed tokens list.\u003c/p\u003e\n\u003cp\u003eIf there is not a current option add the special token\n\"\u003cb\u003e--\u003c/b\u003e\" and the current \u003ccode\u003evalue\u003c/code\u003e to the processed\ntokens list.  The add all the remaining \u003ccode\u003eargument\u003c/code\u003e\nvalues to the processed tokens list.\u003c/p\u003e\n\n@param value The current token\n",
  "functionStartLine": 195,
  "functionEndLine": 215,
  "numCommitsSeen": 28,
  "timeTaken": 855,
  "changeHistory": [
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "745d1a535c9cf45d24455afc150b808981c8e0df",
    "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
    "4fbf5978d9473a2504a554cbe53dc29c49dd67b5",
    "f9df51847e354190206432ba87661586e6dc814d",
    "1060ee73965dc30d92afbad80525bd4cdabe9153",
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
    "66d0ae6216730abd8bd736e210be73229c8e807b"
  ],
  "changeHistoryShort": {
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ybodychange",
    "745d1a535c9cf45d24455afc150b808981c8e0df": "Ydocchange",
    "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Ydocchange,Yrename,Yparameterchange)",
    "4fbf5978d9473a2504a554cbe53dc29c49dd67b5": "Ybodychange",
    "f9df51847e354190206432ba87661586e6dc814d": "Ybodychange",
    "1060ee73965dc30d92afbad80525bd4cdabe9153": "Ybodychange",
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
    "66d0ae6216730abd8bd736e210be73229c8e807b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ybodychange",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/9/02, 3:47 PM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "commitDateOld": "9/19/02, 3:59 PM",
      "commitNameOld": "c08f73835beda155421d78ee4f96d9e11c501159",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 81.03,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "private void process(String value) {\n    if ((currentOption !\u003d null) \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
      "path": "src/java/org/apache/commons/cli/PosixParser.java",
      "functionStartLine": 237,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eIf there is a current option and it can have an argument\nvalue then add the token to the processed tokens list and \nset the current option to null.\u003c/p\u003e\n\u003cp\u003eIf there is a current option and it can have argument\nvalues then add the token to the processed tokens list.\u003c/p\u003e\n\u003cp\u003eIf there is not a current option add the special token\n\"\u003cb\u003e--\u003c/b\u003e\" and the current \u003ccode\u003evalue\u003c/code\u003e to the processed\ntokens list.  The add all the remaining \u003ccode\u003eargument\u003c/code\u003e\nvalues to the processed tokens list.\u003c/p\u003e\n\n@param value The current token\n",
      "diff": "@@ -1,14 +1,14 @@\n private void process(String value) {\n-    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+    if ((currentOption !\u003d null) \u0026\u0026 currentOption.hasArg()) {\n         if (currentOption.hasArg()) {\n             tokens.add(value);\n             currentOption \u003d null;\n         } else if (currentOption.hasArgs()) {\n             tokens.add(value);\n         }\n     } else {\n         eatTheRest \u003d true;\n         tokens.add(\"--\");\n         tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "745d1a535c9cf45d24455afc150b808981c8e0df": {
      "type": "Ydocchange",
      "commitMessage": "javadoc updates\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/26/02, 1:15 PM",
      "commitName": "745d1a535c9cf45d24455afc150b808981c8e0df",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/24/02, 3:15 PM",
      "commitNameOld": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 1.92,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
      "path": "src/java/org/apache/commons/cli/PosixParser.java",
      "functionStartLine": 213,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eIf there is a current option and it can have an argument\nvalue then add the token to the processed tokens list and \nset the current option to null.\u003c/p\u003e\n\u003cp\u003eIf there is a current option and it can have argument\nvalues then add the token to the processed tokens list.\u003c/p\u003e\n\u003cp\u003eIf there is not a current option add the special token\n\"\u003cb\u003e--\u003c/b\u003e\" and the current \u003ccode\u003evalue\u003c/code\u003e to the processed\ntokens list.  The add all the remaining \u003ccode\u003eargument\u003c/code\u003e\nvalues to the processed tokens list.\u003c/p\u003e\n\n@param value The current token\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "\u003cp\u003eIf there is a current option and it can have an argument\nvalue then add the token to the processed tokens list and \nset the current option to null.\u003c/p\u003e\n\u003cp\u003eIf there is a current option and it can have argument\nvalues then add the token to the processed tokens list.\u003c/p\u003e\n\u003cp\u003eIf there is not a current option add the special token\n\"\u003cb\u003e--\u003c/b\u003e\" and the current \u003ccode\u003evalue\u003c/code\u003e to the processed\ntokens list.  The add all the remaining \u003ccode\u003eargument\u003c/code\u003e\nvalues to the processed tokens list.\u003c/p\u003e\n\n@param value The current token\n"
      }
    },
    "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Ydocchange,Yrename,Yparameterchange)",
      "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/24/02, 3:15 PM",
      "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/cli/GnuParser.java",
            "newPath": "src/java/org/apache/commons/cli/PosixParser.java",
            "oldMethodName": "processArgs",
            "newMethodName": "process"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ParseException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
            "newValue": ""
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "processArgs",
            "newValue": "process"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "separated the argument flattening from the Option processing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129804 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/24/02, 3:15 PM",
          "commitName": "dde69934d7f0bee13e4cd1fc99a7d60ce95a0c78",
          "commitAuthor": "John Keyes",
          "commitDateOld": "8/18/02, 12:07 PM",
          "commitNameOld": "04490af06faa8fd1be15da88172beb32218dd336",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 6.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void process(String value) {\n    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption \u003d null;\n        } else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    } else {\n        eatTheRest \u003d true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}",
          "path": "src/java/org/apache/commons/cli/PosixParser.java",
          "functionStartLine": 83,
          "functionName": "process",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n-        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n-    }\n-    while (iter.hasNext()) {\n-        String var \u003d (String) iter.next();\n-        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n-            iter.previous();\n-            break;\n-        } else if (!opt.addValue(var)) {\n-            iter.previous();\n-            return;\n+private void process(String value) {\n+    if (currentOption !\u003d null \u0026\u0026 currentOption.hasArg()) {\n+        if (currentOption.hasArg()) {\n+            tokens.add(value);\n+            currentOption \u003d null;\n+        } else if (currentOption.hasArgs()) {\n+            tokens.add(value);\n         }\n+    } else {\n+        eatTheRest \u003d true;\n+        tokens.add(\"--\");\n+        tokens.add(value);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[opt-Option, iter-ListIterator]",
            "newValue": "[value-String]"
          }
        }
      ]
    },
    "4fbf5978d9473a2504a554cbe53dc29c49dd67b5": {
      "type": "Ybodychange",
      "commitMessage": "bug no. 11456 - optional argument values implemented\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/15/02, 3:05 PM",
      "commitName": "4fbf5978d9473a2504a554cbe53dc29c49dd67b5",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/14/02, 3:27 PM",
      "commitNameOld": "f9df51847e354190206432ba87661586e6dc814d",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else if (!opt.addValue(var)) {\n            iter.previous();\n            return;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/GnuParser.java",
      "functionStartLine": 184,
      "functionName": "processArgs",
      "functionAnnotation": "",
      "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
      "diff": "@@ -1,15 +1,15 @@\n public void processArgs(Option opt, ListIterator iter) throws ParseException {\n-    if (!iter.hasNext()) {\n+    if (!iter.hasNext() \u0026\u0026 !opt.hasOptionalArg()) {\n         throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n     }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n         if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n         } else if (!opt.addValue(var)) {\n             iter.previous();\n             return;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f9df51847e354190206432ba87661586e6dc814d": {
      "type": "Ybodychange",
      "commitMessage": "iterator for all Option instances parsed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129799 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/14/02, 3:27 PM",
      "commitName": "f9df51847e354190206432ba87661586e6dc814d",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/4/02, 4:04 PM",
      "commitNameOld": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 9.97,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else if (!opt.addValue(var)) {\n            iter.previous();\n            return;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/GnuParser.java",
      "functionStartLine": 184,
      "functionName": "processArgs",
      "functionAnnotation": "",
      "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
      "diff": "@@ -1,33 +1,15 @@\n public void processArgs(Option opt, ListIterator iter) throws ParseException {\n     if (!iter.hasNext()) {\n         throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n     }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n         if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n-        } else {\n-            char sep \u003d opt.getValueSeparator();\n-            if (sep \u003e 0) {\n-                int findex;\n-                while ((findex \u003d var.indexOf(sep)) !\u003d -1) {\n-                    String val \u003d var.substring(0, findex);\n-                    var \u003d var.substring(findex + 1);\n-                    if (!opt.addValue(val)) {\n-                        iter.previous();\n-                        return;\n-                    }\n-                }\n-                if (!opt.addValue(var)) {\n-                    iter.previous();\n-                    return;\n-                }\n-                ;\n-            } else if (!opt.addValue(var)) {\n-                iter.previous();\n-                return;\n-            }\n+        } else if (!opt.addValue(var)) {\n+            iter.previous();\n+            return;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1060ee73965dc30d92afbad80525bd4cdabe9153": {
      "type": "Ybodychange",
      "commitMessage": "bug 11458 fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/4/02, 4:04 PM",
      "commitName": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/3/02, 4:45 PM",
      "commitNameOld": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else {\n            char sep \u003d opt.getValueSeparator();\n            if (sep \u003e 0) {\n                int findex;\n                while ((findex \u003d var.indexOf(sep)) !\u003d -1) {\n                    String val \u003d var.substring(0, findex);\n                    var \u003d var.substring(findex + 1);\n                    if (!opt.addValue(val)) {\n                        iter.previous();\n                        return;\n                    }\n                }\n                if (!opt.addValue(var)) {\n                    iter.previous();\n                    return;\n                }\n                ;\n            } else if (!opt.addValue(var)) {\n                iter.previous();\n                return;\n            }\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/GnuParser.java",
      "functionStartLine": 183,
      "functionName": "processArgs",
      "functionAnnotation": "",
      "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
      "diff": "@@ -1,17 +1,33 @@\n public void processArgs(Option opt, ListIterator iter) throws ParseException {\n     if (!iter.hasNext()) {\n         throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n     }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n         if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n         } else {\n-            if (!opt.addValue(var)) {\n+            char sep \u003d opt.getValueSeparator();\n+            if (sep \u003e 0) {\n+                int findex;\n+                while ((findex \u003d var.indexOf(sep)) !\u003d -1) {\n+                    String val \u003d var.substring(0, findex);\n+                    var \u003d var.substring(findex + 1);\n+                    if (!opt.addValue(val)) {\n+                        iter.previous();\n+                        return;\n+                    }\n+                }\n+                if (!opt.addValue(var)) {\n+                    iter.previous();\n+                    return;\n+                }\n+                ;\n+            } else if (!opt.addValue(var)) {\n                 iter.previous();\n-                break;\n+                return;\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee": {
      "type": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
      "commitMessage": "its now possible to specify the number of argument values an option can have, refactored parsers argument value handling, refactored argument handling in Option, added getOptions method on CommandLine to return an array of the processed Options\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/3/02, 4:45 PM",
      "commitName": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "its now possible to specify the number of argument values an option can have, refactored parsers argument value handling, refactored argument handling in Option, added getOptions method on CommandLine to return an array of the processed Options\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129794 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/3/02, 4:45 PM",
          "commitName": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/4/02, 3:32 PM",
          "commitNameOld": "66d0ae6216730abd8bd736e210be73229c8e807b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 30.05,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else {\n            if (!opt.addValue(var)) {\n                iter.previous();\n                break;\n            }\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/GnuParser.java",
          "functionStartLine": 183,
          "functionName": "processArgs",
          "functionAnnotation": "",
          "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
          "diff": "@@ -1,11 +1,17 @@\n-public void processMultipleArgs(Option opt, ListIterator iter) {\n+public void processArgs(Option opt, ListIterator iter) throws ParseException {\n+    if (!iter.hasNext()) {\n+        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n+    }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n-        if (var.startsWith(\"-\")) {\n+        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n         } else {\n-            opt.addValue(var);\n+            if (!opt.addValue(var)) {\n+                iter.previous();\n+                break;\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "processMultipleArgs",
            "newValue": "processArgs"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "its now possible to specify the number of argument values an option can have, refactored parsers argument value handling, refactored argument handling in Option, added getOptions method on CommandLine to return an array of the processed Options\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129794 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/3/02, 4:45 PM",
          "commitName": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/4/02, 3:32 PM",
          "commitNameOld": "66d0ae6216730abd8bd736e210be73229c8e807b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 30.05,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else {\n            if (!opt.addValue(var)) {\n                iter.previous();\n                break;\n            }\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/GnuParser.java",
          "functionStartLine": 183,
          "functionName": "processArgs",
          "functionAnnotation": "",
          "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
          "diff": "@@ -1,11 +1,17 @@\n-public void processMultipleArgs(Option opt, ListIterator iter) {\n+public void processArgs(Option opt, ListIterator iter) throws ParseException {\n+    if (!iter.hasNext()) {\n+        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n+    }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n-        if (var.startsWith(\"-\")) {\n+        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n         } else {\n-            opt.addValue(var);\n+            if (!opt.addValue(var)) {\n+                iter.previous();\n+                break;\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "its now possible to specify the number of argument values an option can have, refactored parsers argument value handling, refactored argument handling in Option, added getOptions method on CommandLine to return an array of the processed Options\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129794 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/3/02, 4:45 PM",
          "commitName": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/4/02, 3:32 PM",
          "commitNameOld": "66d0ae6216730abd8bd736e210be73229c8e807b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 30.05,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public void processArgs(Option opt, ListIterator iter) throws ParseException {\n    if (!iter.hasNext()) {\n        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n    }\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else {\n            if (!opt.addValue(var)) {\n                iter.previous();\n                break;\n            }\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/GnuParser.java",
          "functionStartLine": 183,
          "functionName": "processArgs",
          "functionAnnotation": "",
          "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n",
          "diff": "@@ -1,11 +1,17 @@\n-public void processMultipleArgs(Option opt, ListIterator iter) {\n+public void processArgs(Option opt, ListIterator iter) throws ParseException {\n+    if (!iter.hasNext()) {\n+        throw new MissingArgumentException(\"no argument for:\" + opt.getOpt());\n+    }\n     while (iter.hasNext()) {\n         String var \u003d (String) iter.next();\n-        if (var.startsWith(\"-\")) {\n+        if (!var.equals(\"-\") \u0026\u0026 var.startsWith(\"-\")) {\n             iter.previous();\n             break;\n         } else {\n-            opt.addValue(var);\n+            if (!opt.addValue(var)) {\n+                iter.previous();\n+                break;\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "66d0ae6216730abd8bd736e210be73229c8e807b": {
      "type": "Yintroduced",
      "commitMessage": "implemented the parser factory, added new unit tests for the GnuParser, a good deal of refactoring for both parsers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129778 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/4/02, 3:32 PM",
      "commitName": "66d0ae6216730abd8bd736e210be73229c8e807b",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,11 @@\n+public void processMultipleArgs(Option opt, ListIterator iter) {\n+    while (iter.hasNext()) {\n+        String var \u003d (String) iter.next();\n+        if (var.startsWith(\"-\")) {\n+            iter.previous();\n+            break;\n+        } else {\n+            opt.addValue(var);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void processMultipleArgs(Option opt, ListIterator iter) {\n    while (iter.hasNext()) {\n        String var \u003d (String) iter.next();\n        if (var.startsWith(\"-\")) {\n            iter.previous();\n            break;\n        } else {\n            opt.addValue(var);\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/GnuParser.java",
      "functionStartLine": 184,
      "functionName": "processMultipleArgs",
      "functionAnnotation": "",
      "functionDoc": "It the option can accept multiple argument values then\nkeep adding values until the next option token is encountered.\n\n@param opt the specified option\n@param iter the iterator over the command line tokens\n"
    }
  }
}