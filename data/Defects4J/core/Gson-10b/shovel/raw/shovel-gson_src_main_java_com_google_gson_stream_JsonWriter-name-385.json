{
  "origin": "codeshovel",
  "repositoryName": "Gson-10b",
  "repositoryPath": "/tmp/Gson-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonWriter.java",
  "functionName": "name",
  "functionId": "name___name-String",
  "sourceFilePath": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
  "functionAnnotation": "",
  "functionDoc": "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer.\n",
  "functionStartLine": 385,
  "functionEndLine": 397,
  "numCommitsSeen": 17,
  "timeTaken": 820,
  "changeHistory": [
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
    "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e"
  ],
  "changeHistoryShort": {
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c": "Ybodychange",
    "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48": "Ybodychange",
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075": "Ybodychange",
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c": {
      "type": "Ybodychange",
      "commitMessage": "Switch on ints rather than enums in JsonReader.\n\nUsing enums was triggering this Android bug:\nhttp://code.google.com/p/android/issues/detail?id\u003d36349\n",
      "commitDate": "8/14/12, 2:32 PM",
      "commitName": "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
      "commitAuthor": "Jesse Wilson",
      "commitDateOld": "6/29/12, 7:46 PM",
      "commitNameOld": "1c7aee40f3d0d6f50b3d149e94a2b3b4627ca8a9",
      "commitAuthorOld": "Jesse Wilson",
      "daysBetweenCommits": 45.78,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonWriter name(String name) throws IOException {\n    if (name \u003d\u003d null) {\n        throw new NullPointerException(\"name \u003d\u003d null\");\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException();\n    }\n    if (stackSize \u003d\u003d 0) {\n        throw new IllegalStateException(\"JsonWriter is closed.\");\n    }\n    deferredName \u003d name;\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 385,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer.\n",
      "diff": "@@ -1,13 +1,13 @@\n public JsonWriter name(String name) throws IOException {\n     if (name \u003d\u003d null) {\n         throw new NullPointerException(\"name \u003d\u003d null\");\n     }\n     if (deferredName !\u003d null) {\n         throw new IllegalStateException();\n     }\n-    if (stack.isEmpty()) {\n+    if (stackSize \u003d\u003d 0) {\n         throw new IllegalStateException(\"JsonWriter is closed.\");\n     }\n     deferredName \u003d name;\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48": {
      "type": "Ybodychange",
      "commitMessage": "Permit multiple top-level values in JsonWriter in lenient mode. Also fix some cases where we don\u0027t throw the right thing on a closed JsonWriter.\n\nI\u0027d prefer to not support multiple top-level values, but we support it in JsonReader and it\u0027s easier to be consistent. Kevin Hayen\u0027s patch pointed me in the right direction here, but I needed to do more work to cover some of the edge cases.\n\nFixes issue 397.\n",
      "commitDate": "2/12/12, 12:42 PM",
      "commitName": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
      "commitAuthor": "Jesse Wilson",
      "commitDateOld": "9/30/11, 12:08 AM",
      "commitNameOld": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
      "commitAuthorOld": "Jesse Wilson",
      "daysBetweenCommits": 135.56,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonWriter name(String name) throws IOException {\n    if (name \u003d\u003d null) {\n        throw new NullPointerException(\"name \u003d\u003d null\");\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException();\n    }\n    if (stack.isEmpty()) {\n        throw new IllegalStateException(\"JsonWriter is closed.\");\n    }\n    deferredName \u003d name;\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 337,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer.\n",
      "diff": "@@ -1,10 +1,13 @@\n public JsonWriter name(String name) throws IOException {\n     if (name \u003d\u003d null) {\n         throw new NullPointerException(\"name \u003d\u003d null\");\n     }\n     if (deferredName !\u003d null) {\n         throw new IllegalStateException();\n     }\n+    if (stack.isEmpty()) {\n+        throw new IllegalStateException(\"JsonWriter is closed.\");\n+    }\n     deferredName \u003d name;\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075": {
      "type": "Ybodychange",
      "commitMessage": "Adopt JsonElementWriter in GSON.\nAdd setSerializeNulls() to JsonWriter, so nulls can be skipped from serialization. This does not yet impact JsonElementWriter.\n\nOne change in behavior: if the only value is skipped, we now emit \"null\" rather than \"\".\n",
      "commitDate": "9/30/11, 12:08 AM",
      "commitName": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
      "commitAuthor": "Jesse Wilson",
      "commitDateOld": "9/29/11, 11:26 PM",
      "commitNameOld": "d26c8189182fa96691cc8e0d0f312469ee0627bb",
      "commitAuthorOld": "Jesse Wilson",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonWriter name(String name) throws IOException {\n    if (name \u003d\u003d null) {\n        throw new NullPointerException(\"name \u003d\u003d null\");\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException();\n    }\n    deferredName \u003d name;\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 333,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer.\n",
      "diff": "@@ -1,8 +1,10 @@\n public JsonWriter name(String name) throws IOException {\n     if (name \u003d\u003d null) {\n         throw new NullPointerException(\"name \u003d\u003d null\");\n     }\n-    beforeName();\n-    string(name);\n+    if (deferredName !\u003d null) {\n+        throw new IllegalStateException();\n+    }\n+    deferredName \u003d name;\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e": {
      "type": "Yintroduced",
      "commitMessage": "Brand new classes for streaming JSON efficiently.\n\nNotable features:\n - Efficiency. The parser is faster than the current javacc parser. It\u0027s also faster than popular libraries for JSON streaming.\n - Toggle lenient/strict\n - Toggle pretty/compact\n - Friendly error messages on bad JSON\n - GSON-quality Javadoc\n - Non-execute prefix handling\n\nThis doesn\u0027t wire JsonReader up into Gson just yet. That\u0027s coming soon...\n",
      "commitDate": "8/26/10, 1:44 AM",
      "commitName": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
      "commitAuthor": "Jesse Wilson",
      "diff": "@@ -0,0 +1,8 @@\n+public JsonWriter name(String name) throws IOException {\n+    if (name \u003d\u003d null) {\n+        throw new NullPointerException(\"name \u003d\u003d null\");\n+    }\n+    beforeName();\n+    string(name);\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JsonWriter name(String name) throws IOException {\n    if (name \u003d\u003d null) {\n        throw new NullPointerException(\"name \u003d\u003d null\");\n    }\n    beforeName();\n    string(name);\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 261,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer.\n"
    }
  }
}