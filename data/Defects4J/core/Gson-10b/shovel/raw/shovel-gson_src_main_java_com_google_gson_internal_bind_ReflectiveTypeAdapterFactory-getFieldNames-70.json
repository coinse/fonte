{
  "origin": "codeshovel",
  "repositoryName": "Gson-10b",
  "repositoryPath": "/tmp/Gson-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReflectiveTypeAdapterFactory.java",
  "functionName": "getFieldNames",
  "functionId": "getFieldNames___f-Field",
  "sourceFilePath": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
  "functionAnnotation": "",
  "functionDoc": "first element holds the default name\n",
  "functionStartLine": 70,
  "functionEndLine": 89,
  "numCommitsSeen": 85,
  "timeTaken": 2366,
  "changeHistory": [
    "8537c8932f0d9bd3338a5048fb65a8506c7a8247",
    "109915d93a2b36c26b49c0fabb1947a5a892cb25",
    "b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc",
    "e23973afec37fd1691f87a8c25dc8307c11b97e9",
    "25c6ae177b1ca56db7f3c29eb574bdd032a06165",
    "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
    "f276d1382775e962d1a0a4b9e7e3e08496252861",
    "3331dcdab08792f6281ab6343532031a52f54003"
  ],
  "changeHistoryShort": {
    "8537c8932f0d9bd3338a5048fb65a8506c7a8247": "Ybodychange",
    "109915d93a2b36c26b49c0fabb1947a5a892cb25": "Ymultichange(Yrename,Yreturntypechange,Ydocchange)",
    "b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc": "Ybodychange",
    "e23973afec37fd1691f87a8c25dc8307c11b97e9": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "25c6ae177b1ca56db7f3c29eb574bdd032a06165": "Ymultichange(Ymovefromfile,Ymodifierchange,Yformatchange)",
    "f1f8b666ec665b41446ddb3d68de115d8ce91d2f": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "f276d1382775e962d1a0a4b9e7e3e08496252861": "Ymultichange(Yrename,Ybodychange)",
    "3331dcdab08792f6281ab6343532031a52f54003": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8537c8932f0d9bd3338a5048fb65a8506c7a8247": {
      "type": "Ybodychange",
      "commitMessage": "Optimize list allocation for every reflective field.\n\nThe common cases (no @SerializedName and a single-value @SerializedName) now use a specialized one-element collection. Cases with alternate names use a much more space efficient ArrayList which is exactly sized.\n\nThis is also a performance win for adapter initialization since an index-based loop was used on the returned type for which LinkedList is not suited for.\n",
      "commitDate": "4/26/16, 9:28 PM",
      "commitName": "8537c8932f0d9bd3338a5048fb65a8506c7a8247",
      "commitAuthor": "Jake Wharton",
      "commitDateOld": "12/26/15, 10:39 PM",
      "commitNameOld": "7a1c94f9863bfc6915eaa56236dcef46876d4674",
      "commitAuthorOld": "Jake Wharton",
      "daysBetweenCommits": 121.91,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cString\u003e getFieldNames(Field f) {\n    SerializedName annotation \u003d f.getAnnotation(SerializedName.class);\n    if (annotation \u003d\u003d null) {\n        String name \u003d fieldNamingPolicy.translateName(f);\n        return Collections.singletonList(name);\n    }\n    String serializedName \u003d annotation.value();\n    String[] alternates \u003d annotation.alternate();\n    if (alternates.length \u003d\u003d 0) {\n        return Collections.singletonList(serializedName);\n    }\n    List\u003cString\u003e fieldNames \u003d new ArrayList\u003cString\u003e(alternates.length + 1);\n    fieldNames.add(serializedName);\n    for (String alternate : alternates) {\n        fieldNames.add(alternate);\n    }\n    return fieldNames;\n}",
      "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
      "functionStartLine": 70,
      "functionName": "getFieldNames",
      "functionAnnotation": "",
      "functionDoc": "first element holds the default name\n",
      "diff": "@@ -1,3 +1,18 @@\n private List\u003cString\u003e getFieldNames(Field f) {\n-    return getFieldName(fieldNamingPolicy, f);\n+    SerializedName annotation \u003d f.getAnnotation(SerializedName.class);\n+    if (annotation \u003d\u003d null) {\n+        String name \u003d fieldNamingPolicy.translateName(f);\n+        return Collections.singletonList(name);\n+    }\n+    String serializedName \u003d annotation.value();\n+    String[] alternates \u003d annotation.alternate();\n+    if (alternates.length \u003d\u003d 0) {\n+        return Collections.singletonList(serializedName);\n+    }\n+    List\u003cString\u003e fieldNames \u003d new ArrayList\u003cString\u003e(alternates.length + 1);\n+    fieldNames.add(serializedName);\n+    for (String alternate : alternates) {\n+        fieldNames.add(alternate);\n+    }\n+    return fieldNames;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "109915d93a2b36c26b49c0fabb1947a5a892cb25": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ydocchange)",
      "commitMessage": "Implemented support for multiple values for SerializedName annotation.\n",
      "commitDate": "10/3/15, 2:01 AM",
      "commitName": "109915d93a2b36c26b49c0fabb1947a5a892cb25",
      "commitAuthor": "Inderjeet Singh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Implemented support for multiple values for SerializedName annotation.\n",
          "commitDate": "10/3/15, 2:01 AM",
          "commitName": "109915d93a2b36c26b49c0fabb1947a5a892cb25",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "11/16/14, 2:55 PM",
          "commitNameOld": "8d5a41329ec2f4db3aed02c20d379baf92840b37",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 320.42,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cString\u003e getFieldNames(Field f) {\n    return getFieldName(fieldNamingPolicy, f);\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 70,
          "functionName": "getFieldNames",
          "functionAnnotation": "",
          "functionDoc": "first element holds the default name\n",
          "diff": "@@ -1,3 +1,3 @@\n-private String getFieldName(Field f) {\n+private List\u003cString\u003e getFieldNames(Field f) {\n     return getFieldName(fieldNamingPolicy, f);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getFieldName",
            "newValue": "getFieldNames"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Implemented support for multiple values for SerializedName annotation.\n",
          "commitDate": "10/3/15, 2:01 AM",
          "commitName": "109915d93a2b36c26b49c0fabb1947a5a892cb25",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "11/16/14, 2:55 PM",
          "commitNameOld": "8d5a41329ec2f4db3aed02c20d379baf92840b37",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 320.42,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cString\u003e getFieldNames(Field f) {\n    return getFieldName(fieldNamingPolicy, f);\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 70,
          "functionName": "getFieldNames",
          "functionAnnotation": "",
          "functionDoc": "first element holds the default name\n",
          "diff": "@@ -1,3 +1,3 @@\n-private String getFieldName(Field f) {\n+private List\u003cString\u003e getFieldNames(Field f) {\n     return getFieldName(fieldNamingPolicy, f);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "List\u003cString\u003e"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Implemented support for multiple values for SerializedName annotation.\n",
          "commitDate": "10/3/15, 2:01 AM",
          "commitName": "109915d93a2b36c26b49c0fabb1947a5a892cb25",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "11/16/14, 2:55 PM",
          "commitNameOld": "8d5a41329ec2f4db3aed02c20d379baf92840b37",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 320.42,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cString\u003e getFieldNames(Field f) {\n    return getFieldName(fieldNamingPolicy, f);\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 70,
          "functionName": "getFieldNames",
          "functionAnnotation": "",
          "functionDoc": "first element holds the default name\n",
          "diff": "@@ -1,3 +1,3 @@\n-private String getFieldName(Field f) {\n+private List\u003cString\u003e getFieldNames(Field f) {\n     return getFieldName(fieldNamingPolicy, f);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "first element holds the default name\n"
          }
        }
      ]
    },
    "b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc": {
      "type": "Ybodychange",
      "commitMessage": "fixed issue 469 by adding a TypeAdapterFactory for throwables that ignores cause if it is self-referencing\n",
      "commitDate": "11/16/14, 2:25 PM",
      "commitName": "b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc",
      "commitAuthor": "Inderjeet Singh",
      "commitDateOld": "8/4/14, 9:58 AM",
      "commitNameOld": "117d8ea68ff953a271c492736ba3eed3bb209da2",
      "commitAuthorOld": "Jake Wharton",
      "daysBetweenCommits": 104.23,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "private String getFieldName(Field f) {\n    return getFieldName(fieldNamingPolicy, f);\n}",
      "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
      "functionStartLine": 66,
      "functionName": "getFieldName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,3 @@\n private String getFieldName(Field f) {\n-    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n-    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n+    return getFieldName(fieldNamingPolicy, f);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e23973afec37fd1691f87a8c25dc8307c11b97e9": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Smash together ReflectiveTypeAdapterFactory and its subclass. The separation was useful earlier when we were contemplating keeping Gson and MiniGson separate.\n",
      "commitDate": "11/20/11, 9:42 PM",
      "commitName": "e23973afec37fd1691f87a8c25dc8307c11b97e9",
      "commitAuthor": "Jesse Wilson",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Smash together ReflectiveTypeAdapterFactory and its subclass. The separation was useful earlier when we were contemplating keeping Gson and MiniGson separate.\n",
          "commitDate": "11/20/11, 9:42 PM",
          "commitName": "e23973afec37fd1691f87a8c25dc8307c11b97e9",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "11/20/11, 7:23 AM",
          "commitNameOld": "7e760143fdc8b689daeebdee33ad6ea7d0a62a56",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.6,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private String getFieldName(Field f) {\n    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 69,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n-protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n-    return f.getName();\n+private String getFieldName(Field f) {\n+    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n+    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[declaringClazz-Class\u003c?\u003e, f-Field, declaredType-Type]",
            "newValue": "[f-Field]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Smash together ReflectiveTypeAdapterFactory and its subclass. The separation was useful earlier when we were contemplating keeping Gson and MiniGson separate.\n",
          "commitDate": "11/20/11, 9:42 PM",
          "commitName": "e23973afec37fd1691f87a8c25dc8307c11b97e9",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "11/20/11, 7:23 AM",
          "commitNameOld": "7e760143fdc8b689daeebdee33ad6ea7d0a62a56",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.6,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private String getFieldName(Field f) {\n    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 69,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n-protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n-    return f.getName();\n+private String getFieldName(Field f) {\n+    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n+    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Smash together ReflectiveTypeAdapterFactory and its subclass. The separation was useful earlier when we were contemplating keeping Gson and MiniGson separate.\n",
          "commitDate": "11/20/11, 9:42 PM",
          "commitName": "e23973afec37fd1691f87a8c25dc8307c11b97e9",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "11/20/11, 7:23 AM",
          "commitNameOld": "7e760143fdc8b689daeebdee33ad6ea7d0a62a56",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.6,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private String getFieldName(Field f) {\n    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 69,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,4 @@\n-protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n-    return f.getName();\n+private String getFieldName(Field f) {\n+    SerializedName serializedName \u003d f.getAnnotation(SerializedName.class);\n+    return serializedName \u003d\u003d null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "25c6ae177b1ca56db7f3c29eb574bdd032a06165": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yformatchange)",
      "commitMessage": "Down to 22 failing tests.\n\nConsolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don\u0027t need to ever do reflection to lookup a constructor at construction time.\n\nCleaned up some buggy type adapters, particularly around handling of null.\n\nRemoved dead code for object graph navigation.\n\nMoved some classes into \u0027internal\u0027 so they are visible to the \u0027bind\u0027 subpackage.\n\nTurned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.\n\nAdded an API to request the \u0027next\u0027 type adapter for a type. This allows type adapters to compose other type adapters. We\u0027re using this in two places:\n - where the user has excluded a type from serialization but not deserialization, we need to use the \"default\" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.\n - similarly when a DOM type serializer is registered but no deserializer, or vice versa.\nThis is the biggest change to the MiniGson core.\n\nFor backwards compatibility, return null for the empty string.\n\nSimplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.\n\nMore useful error messages when calling getAsBoolean on a JsonNull.\n\nRemove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don\u0027t interject ourselves between the users\u0027 various type adapters.\n",
      "commitDate": "9/11/11, 12:04 AM",
      "commitName": "25c6ae177b1ca56db7f3c29eb574bdd032a06165",
      "commitAuthor": "Jesse Wilson",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Down to 22 failing tests.\n\nConsolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don\u0027t need to ever do reflection to lookup a constructor at construction time.\n\nCleaned up some buggy type adapters, particularly around handling of null.\n\nRemoved dead code for object graph navigation.\n\nMoved some classes into \u0027internal\u0027 so they are visible to the \u0027bind\u0027 subpackage.\n\nTurned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.\n\nAdded an API to request the \u0027next\u0027 type adapter for a type. This allows type adapters to compose other type adapters. We\u0027re using this in two places:\n - where the user has excluded a type from serialization but not deserialization, we need to use the \"default\" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.\n - similarly when a DOM type serializer is registered but no deserializer, or vice versa.\nThis is the biggest change to the MiniGson core.\n\nFor backwards compatibility, return null for the empty string.\n\nSimplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.\n\nMore useful error messages when calling getAsBoolean on a JsonNull.\n\nRemove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don\u0027t interject ourselves between the users\u0027 various type adapters.\n",
          "commitDate": "9/11/11, 12:04 AM",
          "commitName": "25c6ae177b1ca56db7f3c29eb574bdd032a06165",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "9/9/11, 1:17 AM",
          "commitNameOld": "cdd5d80b85155c21c61f888fb3e70c65e72edef7",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 53,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n     return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
            "newPath": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
            "oldMethodName": "getFieldName",
            "newMethodName": "getFieldName"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Down to 22 failing tests.\n\nConsolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don\u0027t need to ever do reflection to lookup a constructor at construction time.\n\nCleaned up some buggy type adapters, particularly around handling of null.\n\nRemoved dead code for object graph navigation.\n\nMoved some classes into \u0027internal\u0027 so they are visible to the \u0027bind\u0027 subpackage.\n\nTurned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.\n\nAdded an API to request the \u0027next\u0027 type adapter for a type. This allows type adapters to compose other type adapters. We\u0027re using this in two places:\n - where the user has excluded a type from serialization but not deserialization, we need to use the \"default\" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.\n - similarly when a DOM type serializer is registered but no deserializer, or vice versa.\nThis is the biggest change to the MiniGson core.\n\nFor backwards compatibility, return null for the empty string.\n\nSimplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.\n\nMore useful error messages when calling getAsBoolean on a JsonNull.\n\nRemove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don\u0027t interject ourselves between the users\u0027 various type adapters.\n",
          "commitDate": "9/11/11, 12:04 AM",
          "commitName": "25c6ae177b1ca56db7f3c29eb574bdd032a06165",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "9/9/11, 1:17 AM",
          "commitNameOld": "cdd5d80b85155c21c61f888fb3e70c65e72edef7",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 53,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n     return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Down to 22 failing tests.\n\nConsolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don\u0027t need to ever do reflection to lookup a constructor at construction time.\n\nCleaned up some buggy type adapters, particularly around handling of null.\n\nRemoved dead code for object graph navigation.\n\nMoved some classes into \u0027internal\u0027 so they are visible to the \u0027bind\u0027 subpackage.\n\nTurned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.\n\nAdded an API to request the \u0027next\u0027 type adapter for a type. This allows type adapters to compose other type adapters. We\u0027re using this in two places:\n - where the user has excluded a type from serialization but not deserialization, we need to use the \"default\" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.\n - similarly when a DOM type serializer is registered but no deserializer, or vice versa.\nThis is the biggest change to the MiniGson core.\n\nFor backwards compatibility, return null for the empty string.\n\nSimplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.\n\nMore useful error messages when calling getAsBoolean on a JsonNull.\n\nRemove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don\u0027t interject ourselves between the users\u0027 various type adapters.\n",
          "commitDate": "9/11/11, 12:04 AM",
          "commitName": "25c6ae177b1ca56db7f3c29eb574bdd032a06165",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "9/9/11, 1:17 AM",
          "commitNameOld": "cdd5d80b85155c21c61f888fb3e70c65e72edef7",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java",
          "functionStartLine": 53,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+protected String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n     return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f1f8b666ec665b41446ddb3d68de115d8ce91d2f": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Implemented support for FieldNamingPolicy with MiniGson.\n",
      "commitDate": "8/2/11, 7:51 PM",
      "commitName": "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
      "commitAuthor": "Inderjeet Singh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Implemented support for FieldNamingPolicy with MiniGson.\n",
          "commitDate": "8/2/11, 7:51 PM",
          "commitName": "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 6:25 PM",
          "commitNameOld": "98aa12458904cd8cb74ca40a905ddc790e14501b",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 143,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return true;\n+public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+    return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "serializeField",
            "newValue": "getFieldName"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Implemented support for FieldNamingPolicy with MiniGson.\n",
          "commitDate": "8/2/11, 7:51 PM",
          "commitName": "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 6:25 PM",
          "commitNameOld": "98aa12458904cd8cb74ca40a905ddc790e14501b",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 143,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return true;\n+public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+    return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[declaringClazz-Class\u003c?\u003e, f-Field, declaringType-Type]",
            "newValue": "[declaringClazz-Class\u003c?\u003e, f-Field, declaredType-Type]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Implemented support for FieldNamingPolicy with MiniGson.\n",
          "commitDate": "8/2/11, 7:51 PM",
          "commitName": "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 6:25 PM",
          "commitNameOld": "98aa12458904cd8cb74ca40a905ddc790e14501b",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 143,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return true;\n+public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+    return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "String"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implemented support for FieldNamingPolicy with MiniGson.\n",
          "commitDate": "8/2/11, 7:51 PM",
          "commitName": "f1f8b666ec665b41446ddb3d68de115d8ce91d2f",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 6:25 PM",
          "commitNameOld": "98aa12458904cd8cb74ca40a905ddc790e14501b",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n    return f.getName();\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 143,
          "functionName": "getFieldName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return true;\n+public String getFieldName(Class\u003c?\u003e declaringClazz, Field f, Type declaredType) {\n+    return f.getName();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f276d1382775e962d1a0a4b9e7e3e08496252861": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Added support for deserialization exclusion strategy.\n",
      "commitDate": "8/2/11, 6:19 PM",
      "commitName": "f276d1382775e962d1a0a4b9e7e3e08496252861",
      "commitAuthor": "Inderjeet Singh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Added support for deserialization exclusion strategy.\n",
          "commitDate": "8/2/11, 6:19 PM",
          "commitName": "f276d1382775e962d1a0a4b9e7e3e08496252861",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 5:47 PM",
          "commitNameOld": "3331dcdab08792f6281ab6343532031a52f54003",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n    return true;\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 117,
          "functionName": "serializeField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean skipField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return false;\n+public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "skipField",
            "newValue": "serializeField"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added support for deserialization exclusion strategy.\n",
          "commitDate": "8/2/11, 6:19 PM",
          "commitName": "f276d1382775e962d1a0a4b9e7e3e08496252861",
          "commitAuthor": "Inderjeet Singh",
          "commitDateOld": "8/2/11, 5:47 PM",
          "commitNameOld": "3331dcdab08792f6281ab6343532031a52f54003",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n    return true;\n}",
          "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
          "functionStartLine": 117,
          "functionName": "serializeField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean skipField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n-    return false;\n+public boolean serializeField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "3331dcdab08792f6281ab6343532031a52f54003": {
      "type": "Yintroduced",
      "commitMessage": "Using serializationExclusionStrategy while navigating through fields to decide which ones to skip.\n",
      "commitDate": "8/2/11, 5:47 PM",
      "commitName": "3331dcdab08792f6281ab6343532031a52f54003",
      "commitAuthor": "Inderjeet Singh",
      "diff": "@@ -0,0 +1,3 @@\n+public boolean skipField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean skipField(Class\u003c?\u003e declaringClazz, Field f, Type declaringType) {\n    return false;\n}",
      "path": "gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java",
      "functionStartLine": 115,
      "functionName": "skipField",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}