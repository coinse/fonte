{
  "origin": "codeshovel",
  "repositoryName": "Gson-10b",
  "repositoryPath": "/tmp/Gson-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonWriter.java",
  "functionName": "close",
  "functionId": "close___empty-int__nonempty-int__closeBracket-String",
  "sourceFilePath": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
  "functionAnnotation": "",
  "functionDoc": "Closes the current scope by appending any necessary whitespace and the\ngiven bracket.\n",
  "functionStartLine": 335,
  "functionEndLine": 351,
  "numCommitsSeen": 29,
  "timeTaken": 818,
  "changeHistory": [
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e"
  ],
  "changeHistoryShort": {
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c": "Ymultichange(Yparameterchange,Ybodychange)",
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075": "Ybodychange",
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35c13173b0c509fd7088566fcc8f75473d5a3b7c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Switch on ints rather than enums in JsonReader.\n\nUsing enums was triggering this Android bug:\nhttp://code.google.com/p/android/issues/detail?id\u003d36349\n",
      "commitDate": "8/14/12, 2:32 PM",
      "commitName": "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
      "commitAuthor": "Jesse Wilson",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Switch on ints rather than enums in JsonReader.\n\nUsing enums was triggering this Android bug:\nhttp://code.google.com/p/android/issues/detail?id\u003d36349\n",
          "commitDate": "8/14/12, 2:32 PM",
          "commitName": "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "6/29/12, 7:46 PM",
          "commitNameOld": "1c7aee40f3d0d6f50b3d149e94a2b3b4627ca8a9",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 45.78,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsonWriter close(int empty, int nonempty, String closeBracket) throws IOException {\n    int context \u003d peek();\n    if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n        throw new IllegalStateException(\"Nesting problem.\");\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException(\"Dangling name: \" + deferredName);\n    }\n    stackSize--;\n    if (context \u003d\u003d nonempty) {\n        newline();\n    }\n    out.write(closeBracket);\n    return this;\n}",
          "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
          "functionStartLine": 335,
          "functionName": "close",
          "functionAnnotation": "",
          "functionDoc": "Closes the current scope by appending any necessary whitespace and the\ngiven bracket.\n",
          "diff": "@@ -1,15 +1,15 @@\n-private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n-    JsonScope context \u003d peek();\n+private JsonWriter close(int empty, int nonempty, String closeBracket) throws IOException {\n+    int context \u003d peek();\n     if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n-        throw new IllegalStateException(\"Nesting problem: \" + stack);\n+        throw new IllegalStateException(\"Nesting problem.\");\n     }\n     if (deferredName !\u003d null) {\n         throw new IllegalStateException(\"Dangling name: \" + deferredName);\n     }\n-    stack.remove(stack.size() - 1);\n+    stackSize--;\n     if (context \u003d\u003d nonempty) {\n         newline();\n     }\n     out.write(closeBracket);\n     return this;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[empty-JsonScope, nonempty-JsonScope, closeBracket-String]",
            "newValue": "[empty-int, nonempty-int, closeBracket-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Switch on ints rather than enums in JsonReader.\n\nUsing enums was triggering this Android bug:\nhttp://code.google.com/p/android/issues/detail?id\u003d36349\n",
          "commitDate": "8/14/12, 2:32 PM",
          "commitName": "35c13173b0c509fd7088566fcc8f75473d5a3b7c",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "6/29/12, 7:46 PM",
          "commitNameOld": "1c7aee40f3d0d6f50b3d149e94a2b3b4627ca8a9",
          "commitAuthorOld": "Jesse Wilson",
          "daysBetweenCommits": 45.78,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsonWriter close(int empty, int nonempty, String closeBracket) throws IOException {\n    int context \u003d peek();\n    if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n        throw new IllegalStateException(\"Nesting problem.\");\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException(\"Dangling name: \" + deferredName);\n    }\n    stackSize--;\n    if (context \u003d\u003d nonempty) {\n        newline();\n    }\n    out.write(closeBracket);\n    return this;\n}",
          "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
          "functionStartLine": 335,
          "functionName": "close",
          "functionAnnotation": "",
          "functionDoc": "Closes the current scope by appending any necessary whitespace and the\ngiven bracket.\n",
          "diff": "@@ -1,15 +1,15 @@\n-private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n-    JsonScope context \u003d peek();\n+private JsonWriter close(int empty, int nonempty, String closeBracket) throws IOException {\n+    int context \u003d peek();\n     if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n-        throw new IllegalStateException(\"Nesting problem: \" + stack);\n+        throw new IllegalStateException(\"Nesting problem.\");\n     }\n     if (deferredName !\u003d null) {\n         throw new IllegalStateException(\"Dangling name: \" + deferredName);\n     }\n-    stack.remove(stack.size() - 1);\n+    stackSize--;\n     if (context \u003d\u003d nonempty) {\n         newline();\n     }\n     out.write(closeBracket);\n     return this;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bb7f0b6bb01b0e98e32229cb528772a66a9d6075": {
      "type": "Ybodychange",
      "commitMessage": "Adopt JsonElementWriter in GSON.\nAdd setSerializeNulls() to JsonWriter, so nulls can be skipped from serialization. This does not yet impact JsonElementWriter.\n\nOne change in behavior: if the only value is skipped, we now emit \"null\" rather than \"\".\n",
      "commitDate": "9/30/11, 12:08 AM",
      "commitName": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
      "commitAuthor": "Jesse Wilson",
      "commitDateOld": "9/29/11, 11:26 PM",
      "commitNameOld": "d26c8189182fa96691cc8e0d0f312469ee0627bb",
      "commitAuthorOld": "Jesse Wilson",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n    JsonScope context \u003d peek();\n    if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n        throw new IllegalStateException(\"Nesting problem: \" + stack);\n    }\n    if (deferredName !\u003d null) {\n        throw new IllegalStateException(\"Dangling name: \" + deferredName);\n    }\n    stack.remove(stack.size() - 1);\n    if (context \u003d\u003d nonempty) {\n        newline();\n    }\n    out.write(closeBracket);\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 295,
      "functionName": "close",
      "functionAnnotation": "",
      "functionDoc": "Closes the current scope by appending any necessary whitespace and the\ngiven bracket.\n",
      "diff": "@@ -1,12 +1,15 @@\n private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n     JsonScope context \u003d peek();\n     if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n         throw new IllegalStateException(\"Nesting problem: \" + stack);\n     }\n+    if (deferredName !\u003d null) {\n+        throw new IllegalStateException(\"Dangling name: \" + deferredName);\n+    }\n     stack.remove(stack.size() - 1);\n     if (context \u003d\u003d nonempty) {\n         newline();\n     }\n     out.write(closeBracket);\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "765a9f1ecdfaf96f3587f488385111c9d6a4927e": {
      "type": "Yintroduced",
      "commitMessage": "Brand new classes for streaming JSON efficiently.\n\nNotable features:\n - Efficiency. The parser is faster than the current javacc parser. It\u0027s also faster than popular libraries for JSON streaming.\n - Toggle lenient/strict\n - Toggle pretty/compact\n - Friendly error messages on bad JSON\n - GSON-quality Javadoc\n - Non-execute prefix handling\n\nThis doesn\u0027t wire JsonReader up into Gson just yet. That\u0027s coming soon...\n",
      "commitDate": "8/26/10, 1:44 AM",
      "commitName": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
      "commitAuthor": "Jesse Wilson",
      "diff": "@@ -0,0 +1,12 @@\n+private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n+    JsonScope context \u003d peek();\n+    if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n+        throw new IllegalStateException(\"Nesting problem: \" + stack);\n+    }\n+    stack.remove(stack.size() - 1);\n+    if (context \u003d\u003d nonempty) {\n+        newline();\n+    }\n+    out.write(closeBracket);\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private JsonWriter close(JsonScope empty, JsonScope nonempty, String closeBracket) throws IOException {\n    JsonScope context \u003d peek();\n    if (context !\u003d nonempty \u0026\u0026 context !\u003d empty) {\n        throw new IllegalStateException(\"Nesting problem: \" + stack);\n    }\n    stack.remove(stack.size() - 1);\n    if (context \u003d\u003d nonempty) {\n        newline();\n    }\n    out.write(closeBracket);\n    return this;\n}",
      "path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
      "functionStartLine": 226,
      "functionName": "close",
      "functionAnnotation": "",
      "functionDoc": "Closes the current scope by appending any necessary whitespace and the\ngiven bracket.\n"
    }
  }
}