{
  "origin": "codeshovel",
  "repositoryName": "Gson-6b",
  "repositoryPath": "/tmp/Gson-6b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeToken.java",
  "functionName": "get",
  "functionId": "get___type-Class__T__",
  "sourceFilePath": "gson/src/main/java/com/google/gson/reflect/TypeToken.java",
  "functionAnnotation": "",
  "functionDoc": "Gets type literal for the given {@code Class} instance.\n",
  "functionStartLine": 302,
  "functionEndLine": 304,
  "numCommitsSeen": 16,
  "timeTaken": 595,
  "changeHistory": [
    "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009",
    "57d1f32de5bf3a7dd54613384cc7e979fba2660b"
  ],
  "changeHistoryShort": {
    "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009": "Ymultichange(Ybodychange,Ydocchange)",
    "57d1f32de5bf3a7dd54613384cc7e979fba2660b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Swap out GSON\u0027s type mechanics with the Type resolution code from Guice.\n\nThe most significant impact of this change is that fields whose types are type parameters should now GSONify just fine. For example, consider the class below.\n\nabstract class Foo\u003cA, B\u003e {\n   A a;\n   B b;\n   List\u003cA\u003e list;\n   Map\u003cA, List\u003cB\u003e\u003e map;\n}\nclass RealFoo extends Foo\u003cString, Integer\u003e {...}\n\nThis is a reasonable checkpoint but some work still needs to be done for this. In particular, the level of visibility of methods in TypeToken and Type should be reconsidered; we\u0027re exposing more than we need to!\n",
      "commitDate": "12/3/10, 12:07 AM",
      "commitName": "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009",
      "commitAuthor": "Jesse Wilson",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Swap out GSON\u0027s type mechanics with the Type resolution code from Guice.\n\nThe most significant impact of this change is that fields whose types are type parameters should now GSONify just fine. For example, consider the class below.\n\nabstract class Foo\u003cA, B\u003e {\n   A a;\n   B b;\n   List\u003cA\u003e list;\n   Map\u003cA, List\u003cB\u003e\u003e map;\n}\nclass RealFoo extends Foo\u003cString, Integer\u003e {...}\n\nThis is a reasonable checkpoint but some work still needs to be done for this. In particular, the level of visibility of methods in TypeToken and Type should be reconsidered; we\u0027re exposing more than we need to!\n",
          "commitDate": "12/3/10, 12:07 AM",
          "commitName": "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "9/23/09, 10:45 AM",
          "commitNameOld": "3b0f8f4340c68d8fde0840befbc1b89afa14933f",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 435.6,
          "commitsBetweenForRepo": 227,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n    return new TypeToken\u003cT\u003e(type);\n}",
          "path": "gson/src/main/java/com/google/gson/reflect/TypeToken.java",
          "functionStartLine": 330,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Gets type literal for the given {@code Class} instance.\n",
          "diff": "@@ -1,3 +1,3 @@\n public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n-    return new SimpleTypeToken\u003cT\u003e(type);\n+    return new TypeToken\u003cT\u003e(type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Swap out GSON\u0027s type mechanics with the Type resolution code from Guice.\n\nThe most significant impact of this change is that fields whose types are type parameters should now GSONify just fine. For example, consider the class below.\n\nabstract class Foo\u003cA, B\u003e {\n   A a;\n   B b;\n   List\u003cA\u003e list;\n   Map\u003cA, List\u003cB\u003e\u003e map;\n}\nclass RealFoo extends Foo\u003cString, Integer\u003e {...}\n\nThis is a reasonable checkpoint but some work still needs to be done for this. In particular, the level of visibility of methods in TypeToken and Type should be reconsidered; we\u0027re exposing more than we need to!\n",
          "commitDate": "12/3/10, 12:07 AM",
          "commitName": "d1ddab2e6ffcd938ac0d133fd46caf5fb2417009",
          "commitAuthor": "Jesse Wilson",
          "commitDateOld": "9/23/09, 10:45 AM",
          "commitNameOld": "3b0f8f4340c68d8fde0840befbc1b89afa14933f",
          "commitAuthorOld": "Inderjeet Singh",
          "daysBetweenCommits": 435.6,
          "commitsBetweenForRepo": 227,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n    return new TypeToken\u003cT\u003e(type);\n}",
          "path": "gson/src/main/java/com/google/gson/reflect/TypeToken.java",
          "functionStartLine": 330,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Gets type literal for the given {@code Class} instance.\n",
          "diff": "@@ -1,3 +1,3 @@\n public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n-    return new SimpleTypeToken\u003cT\u003e(type);\n+    return new TypeToken\u003cT\u003e(type);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Gets type token for the given {@code Class} instance.\n",
            "newValue": "Gets type literal for the given {@code Class} instance.\n"
          }
        }
      ]
    },
    "57d1f32de5bf3a7dd54613384cc7e979fba2660b": {
      "type": "Yintroduced",
      "commitMessage": "moved gson as a project under trunk\n",
      "commitDate": "8/31/08, 8:13 PM",
      "commitName": "57d1f32de5bf3a7dd54613384cc7e979fba2660b",
      "commitAuthor": "Inderjeet Singh",
      "diff": "@@ -0,0 +1,3 @@\n+public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n+    return new SimpleTypeToken\u003cT\u003e(type);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static \u003cT\u003e TypeToken\u003cT\u003e get(Class\u003cT\u003e type) {\n    return new SimpleTypeToken\u003cT\u003e(type);\n}",
      "path": "gson/src/main/java/com/google/gson/reflect/TypeToken.java",
      "functionStartLine": 362,
      "functionName": "get",
      "functionAnnotation": "",
      "functionDoc": "Gets type token for the given {@code Class} instance.\n"
    }
  }
}