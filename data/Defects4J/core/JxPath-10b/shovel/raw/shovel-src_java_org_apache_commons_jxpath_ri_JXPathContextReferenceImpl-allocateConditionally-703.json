{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathContextReferenceImpl.java",
  "functionName": "allocateConditionally",
  "functionId": "allocateConditionally___className-String__existenceCheckClassName-String",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
  "functionAnnotation": "",
  "functionDoc": "Checks if existenceCheckClass exists on the class path. If so, allocates\nan instance of the specified class, otherwise returns null.\n",
  "functionStartLine": 703,
  "functionEndLine": 720,
  "numCommitsSeen": 55,
  "timeTaken": 1303,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "f636a25d9df08e6aef0283a1c5ccb60e03783eef"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Yformatchange",
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a": "Ydocchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "f636a25d9df08e6aef0283a1c5ccb60e03783eef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Yformatchange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "1/10/07, 2:44 PM",
      "commitNameOld": "0d7e7dc5d0d27a43b01770f8a7f7c860eacdbbd1",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 40.03,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object allocateConditionally(String className, String existenceCheckClassName) {\n    try {\n        try {\n            Class.forName(existenceCheckClassName);\n        } catch (ClassNotFoundException ex) {\n            return null;\n        }\n        Class cls \u003d Class.forName(className);\n        return cls.newInstance();\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot allocate \" + className, ex);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 711,
      "functionName": "allocateConditionally",
      "functionAnnotation": "",
      "functionDoc": "Checks if existenceCheckClass exists on the class path. If so, allocates\nan instance of the specified class, otherwise returns null.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a": {
      "type": "Ydocchange",
      "commitMessage": "Introduced prefix registration with JXPathContext\nFixed a number or problems with namespace matching\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/31/04, 6:55 PM",
      "commitName": "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "3/24/04, 7:49 PM",
      "commitNameOld": "a0849ed9a4368948696a472afb57ba6938007e88",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 6.96,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object allocateConditionally(String className, String existenceCheckClassName) {\n    try {\n        try {\n            Class.forName(existenceCheckClassName);\n        } catch (ClassNotFoundException ex) {\n            return null;\n        }\n        Class cls \u003d Class.forName(className);\n        return cls.newInstance();\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot allocate \" + className, ex);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 684,
      "functionName": "allocateConditionally",
      "functionAnnotation": "",
      "functionDoc": "Checks if existenceCheckClass exists on the class path. If so, allocates\nan instance of the specified class, otherwise returns null.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Checks if existenceCheckClass exists on the class path. If so,\nallocates an instance of the specified class, otherwise\nreturns null.\n",
        "newValue": "Checks if existenceCheckClass exists on the class path. If so, allocates\nan instance of the specified class, otherwise returns null.\n"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object allocateConditionally(String className, String existenceCheckClassName) {\n    try {\n        try {\n            Class.forName(existenceCheckClassName);\n        } catch (ClassNotFoundException ex) {\n            return null;\n        }\n        Class cls \u003d Class.forName(className);\n        return cls.newInstance();\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot allocate \" + className, ex);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 544,
      "functionName": "allocateConditionally",
      "functionAnnotation": "",
      "functionDoc": "Checks if existenceCheckClass exists on the class path. If so,\nallocates an instance of the specified class, otherwise\nreturns null.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f636a25d9df08e6aef0283a1c5ccb60e03783eef": {
      "type": "Yintroduced",
      "commitMessage": "Removed run-time dependency on DOM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136755 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/02, 5:41 PM",
      "commitName": "f636a25d9df08e6aef0283a1c5ccb60e03783eef",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,13 @@\n+public static Object allocateConditionally(String className, String existenceCheckClassName) {\n+    try {\n+        try {\n+            Class.forName(existenceCheckClassName);\n+        } catch (ClassNotFoundException ex) {\n+            return null;\n+        }\n+        Class cls \u003d Class.forName(className);\n+        return cls.newInstance();\n+    } catch (Exception ex) {\n+        throw new JXPathException(\"Cannot allocate \" + className, ex);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Object allocateConditionally(String className, String existenceCheckClassName) {\n    try {\n        try {\n            Class.forName(existenceCheckClassName);\n        } catch (ClassNotFoundException ex) {\n            return null;\n        }\n        Class cls \u003d Class.forName(className);\n        return cls.newInstance();\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot allocate \" + className, ex);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 472,
      "functionName": "allocateConditionally",
      "functionAnnotation": "",
      "functionDoc": "Checks if existenceCheckClass exists on the class path. If so,\nallocates an instance of the specified class, otherwise\nreturns null.\n"
    }
  }
}