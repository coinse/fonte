{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EvalContext.java",
  "functionName": "hasNext",
  "functionId": "hasNext",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
  "functionAnnotation": "",
  "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n",
  "functionStartLine": 95,
  "functionEndLine": 106,
  "numCommitsSeen": 35,
  "timeTaken": 879,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "04d66747e69273ed8ed520ddfefb86d85755e4b1",
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe",
    "112774edae824e6e07ed9d64f637b4b7c19cea3b"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "04d66747e69273ed8ed520ddfefb86d85755e4b1": "Ybodychange",
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe": "Ybodychange",
    "112774edae824e6e07ed9d64f637b4b7c19cea3b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "1/31/07, 9:24 AM",
      "commitNameOld": "ce272ae94782474f58d0c18e0f1a8c9a7a8dda42",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 19.25,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasNext() {\n    if (pointerIterator !\u003d null) {\n        return pointerIterator.hasNext();\n    }\n    if (getDocumentOrder() !\u003d 0) {\n        return constructIterator();\n    }\n    if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n        performIteratorStep();\n    }\n    return !done;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 95,
      "functionName": "hasNext",
      "functionAnnotation": "",
      "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n",
      "diff": "@@ -1,13 +1,12 @@\n public boolean hasNext() {\n     if (pointerIterator !\u003d null) {\n         return pointerIterator.hasNext();\n     }\n     if (getDocumentOrder() !\u003d 0) {\n         return constructIterator();\n-    } else {\n-        if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n-            performIteratorStep();\n-        }\n-        return !done;\n     }\n+    if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n+        performIteratorStep();\n+    }\n+    return !done;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:20 PM",
      "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 46.18,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasNext() {\n    if (pointerIterator !\u003d null) {\n        return pointerIterator.hasNext();\n    }\n    if (getDocumentOrder() !\u003d 0) {\n        return constructIterator();\n    } else {\n        if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n            performIteratorStep();\n        }\n        return !done;\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 139,
      "functionName": "hasNext",
      "functionAnnotation": "",
      "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "04d66747e69273ed8ed520ddfefb86d85755e4b1": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a problem with iteration - calling hasNext() multiple times would mess up the iteration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136818 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/19/02, 8:43 PM",
      "commitName": "04d66747e69273ed8ed520ddfefb86d85755e4b1",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "7/3/02, 2:12 PM",
      "commitNameOld": "cc0637b2a262c45f047d3f273d2100bd138bf169",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 108.27,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasNext() {\n    if (pointerIterator !\u003d null) {\n        return pointerIterator.hasNext();\n    }\n    if (getDocumentOrder() !\u003d 0) {\n        return constructIterator();\n    } else {\n        if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n            performIteratorStep();\n        }\n        return !done;\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 135,
      "functionName": "hasNext",
      "functionAnnotation": "",
      "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n",
      "diff": "@@ -1,21 +1,13 @@\n public boolean hasNext() {\n     if (pointerIterator !\u003d null) {\n         return pointerIterator.hasNext();\n     }\n     if (getDocumentOrder() !\u003d 0) {\n         return constructIterator();\n     } else {\n-        if (done) {\n-            return false;\n+        if (!done \u0026\u0026 !hasPerformedIteratorStep) {\n+            performIteratorStep();\n         }\n-        if (position \u003d\u003d 0) {\n-            while (nextSet()) {\n-                if (nextNode()) {\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n-        return true;\n+        return !done;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe": {
      "type": "Ybodychange",
      "commitMessage": "Fix problems with document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136754 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/02, 5:41 PM",
      "commitName": "e2fc81a168891ac4fff974989f0fd7b2519fcbbe",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "5/7/02, 5:40 PM",
      "commitNameOld": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 21.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasNext() {\n    if (pointerIterator !\u003d null) {\n        return pointerIterator.hasNext();\n    }\n    if (getDocumentOrder() !\u003d 0) {\n        return constructIterator();\n    } else {\n        if (done) {\n            return false;\n        }\n        if (position \u003d\u003d 0) {\n            while (nextSet()) {\n                if (nextNode()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 134,
      "functionName": "hasNext",
      "functionAnnotation": "",
      "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n",
      "diff": "@@ -1,14 +1,21 @@\n public boolean hasNext() {\n-    if (done) {\n-        return false;\n+    if (pointerIterator !\u003d null) {\n+        return pointerIterator.hasNext();\n     }\n-    if (position \u003d\u003d 0) {\n-        while (nextSet()) {\n-            if (nextNode()) {\n-                return true;\n-            }\n+    if (getDocumentOrder() !\u003d 0) {\n+        return constructIterator();\n+    } else {\n+        if (done) {\n+            return false;\n         }\n-        return false;\n+        if (position \u003d\u003d 0) {\n+            while (nextSet()) {\n+                if (nextNode()) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }\n+        return true;\n     }\n-    return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "112774edae824e6e07ed9d64f637b4b7c19cea3b": {
      "type": "Yintroduced",
      "commitMessage": "Now implements Iterator\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136734 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:36 PM",
      "commitName": "112774edae824e6e07ed9d64f637b4b7c19cea3b",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,14 @@\n+public boolean hasNext() {\n+    if (done) {\n+        return false;\n+    }\n+    if (position \u003d\u003d 0) {\n+        while (nextSet()) {\n+            if (nextNode()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean hasNext() {\n    if (done) {\n        return false;\n    }\n    if (position \u003d\u003d 0) {\n        while (nextSet()) {\n            if (nextNode()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 110,
      "functionName": "hasNext",
      "functionAnnotation": "",
      "functionDoc": "Returns true if there are mode nodes matching the context\u0027s constraints.\n"
    }
  }
}