{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathContextReferenceImpl.java",
  "functionName": "getValue",
  "functionId": "getValue___xpath-String__expr-Expression",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 323,
  "functionEndLine": 363,
  "numCommitsSeen": 68,
  "timeTaken": 1701,
  "changeHistory": [
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
    "a0849ed9a4368948696a472afb57ba6938007e88",
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b",
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079",
    "7d07031398b3e9e0062d597d0ace291a58b59bfe",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
    "f2a27fe7e7f663e44314e846f3b8ba3bdff1f902",
    "323e8b214459b3977973c01a048a979dc778f100",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
    "989fbe2e44ad4e994dc810fa54290636a7339712",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "65bf4da7590edc460ec68e18f35d201ec685bf86",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "d0a64d141367867db5b745734f5c7330644b71ca",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": "Ybodychange",
    "a0849ed9a4368948696a472afb57ba6938007e88": "Ybodychange",
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b": "Ybodychange",
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079": "Ybodychange",
    "7d07031398b3e9e0062d597d0ace291a58b59bfe": "Ybodychange",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": "Ybodychange",
    "f2a27fe7e7f663e44314e846f3b8ba3bdff1f902": "Ybodychange",
    "323e8b214459b3977973c01a048a979dc778f100": "Ybodychange",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Ybodychange",
    "989fbe2e44ad4e994dc810fa54290636a7339712": "Ybodychange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ybodychange",
    "65bf4da7590edc460ec68e18f35d201ec685bf86": "Ybodychange",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "d0a64d141367867db5b745734f5c7330644b71ca": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "207c6dd98407506ff367d072be25b56f37989215": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": {
      "type": "Ybodychange",
      "commitMessage": "Introduced specialized exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@329481 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/29/05, 2:07 PM",
      "commitName": "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/29/05, 12:02 PM",
      "commitNameOld": "39b19d33418245cf67dd1ce97d472b65b14e8d3d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result \u003d\u003d null) {\n        if (expr instanceof Path) {\n            if (!isLenient()) {\n                throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n            }\n        }\n        return null;\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getImmediateParentPointer();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 322,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result \u003d\u003d null) {\n         if (expr instanceof Path) {\n             if (!isLenient()) {\n-                throw new JXPathException(\"No value for xpath: \" + xpath);\n+                throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n             }\n         }\n         return null;\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n         if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n-            throw new JXPathException(\"No value for xpath: \" + xpath);\n+            throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValuePointer();\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             NodePointer parent \u003d ((NodePointer) result).getImmediateParentPointer();\n             if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n-                throw new JXPathException(\"No value for xpath: \" + xpath);\n+                throw new JXPathNotFoundException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a0849ed9a4368948696a472afb57ba6938007e88": {
      "type": "Ybodychange",
      "commitMessage": "getParent() will now return the actual parent NodePointer, \nnot some intermediate helper NodePointer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136900 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/04, 7:49 PM",
      "commitName": "a0849ed9a4368948696a472afb57ba6938007e88",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "3/1/04, 5:32 PM",
      "commitNameOld": "d73d9bf24a5fb76383f519e5d4df00f9b634c19b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 23.1,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result \u003d\u003d null) {\n        if (expr instanceof Path) {\n            if (!isLenient()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        return null;\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getImmediateParentPointer();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 310,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result \u003d\u003d null) {\n         if (expr instanceof Path) {\n             if (!isLenient()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         return null;\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n         if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n             throw new JXPathException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValuePointer();\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n-            NodePointer parent \u003d ((NodePointer) result).getParent();\n+            NodePointer parent \u003d ((NodePointer) result).getImmediateParentPointer();\n             if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b": {
      "type": "Ybodychange",
      "commitMessage": "Fix for bug #26899.   See http://nagoya.apache.org/bugzilla/show_bug.cgi?id\u003d26899\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136897 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/1/04, 5:32 PM",
      "commitName": "d73d9bf24a5fb76383f519e5d4df00f9b634c19b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/29/04, 6:17 AM",
      "commitNameOld": "4fc265a938e1e9d13c407d4668ec8c864e85d799",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 1.47,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result \u003d\u003d null) {\n        if (expr instanceof Path) {\n            if (!isLenient()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        return null;\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getParent();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 310,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,29 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n+    if (result \u003d\u003d null) {\n+        if (expr instanceof Path) {\n+            if (!isLenient()) {\n+                throw new JXPathException(\"No value for xpath: \" + xpath);\n+            }\n+        }\n+        return null;\n+    }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n         if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n             throw new JXPathException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValuePointer();\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             NodePointer parent \u003d ((NodePointer) result).getParent();\n             if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug 22988\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/03, 1:50 PM",
      "commitName": "6f2f15a10b8d846e984f1604a4bfd85baeb8d079",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/23/03, 6:52 PM",
      "commitNameOld": "885fb67a4ecf7c64696d679762b8a28489ead61f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 15.79,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getParent();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 292,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,21 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n-        if (!lenient \u0026\u0026 result \u003d\u003d null) {\n+        if (!isLenient() \u0026\u0026 result \u003d\u003d null) {\n             throw new JXPathException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValuePointer();\n-        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n+        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             NodePointer parent \u003d ((NodePointer) result).getParent();\n             if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7d07031398b3e9e0062d597d0ace291a58b59bfe": {
      "type": "Ybodychange",
      "commitMessage": "Added support for relative contexts\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/18/03, 4:59 PM",
      "commitName": "7d07031398b3e9e0062d597d0ace291a58b59bfe",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/18/03, 10:11 AM",
      "commitNameOld": "71886475c020639aa58be577ab5dc019333ae408",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!lenient \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getParent();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 286,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,21 @@\n public Object getValue(String xpath, Expression expr) {\n-    Object result \u003d expr.computeValue(getRootContext());\n+    Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n         if (!lenient \u0026\u0026 result \u003d\u003d null) {\n             throw new JXPathException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValuePointer();\n         if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n             NodePointer parent \u003d ((NodePointer) result).getParent();\n             if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": {
      "type": "Ybodychange",
      "commitMessage": "Renamed isNode to !isContainer\nCleaned up asPath\nIgnore exceptions during a property iteration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/27/02, 5:02 PM",
      "commitName": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/19/02, 8:44 PM",
      "commitNameOld": "2b59f56fe188f2a6569b9fbb136e80299a603c90",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 38.89,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!lenient \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValuePointer();\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getParent();\n            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 223,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,21 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getRootContext());\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n         if (!lenient \u0026\u0026 result \u003d\u003d null) {\n             throw new JXPathException(\"No value for xpath: \" + xpath);\n         }\n     }\n     if (result instanceof NodePointer) {\n+        result \u003d ((NodePointer) result).getValuePointer();\n         if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n             NodePointer parent \u003d ((NodePointer) result).getParent();\n-            if (parent \u003d\u003d null || parent.isNode() || !parent.isActual()) {\n+            if (parent \u003d\u003d null || !parent.isContainer() || !parent.isActual()) {\n                 throw new JXPathException(\"No value for xpath: \" + xpath);\n             }\n         }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f2a27fe7e7f663e44314e846f3b8ba3bdff1f902": {
      "type": "Ybodychange",
      "commitMessage": "Fixed this bug: setLenient(true) did not have the advertised effect in some cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136811 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:26 PM",
      "commitName": "f2a27fe7e7f663e44314e846f3b8ba3bdff1f902",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/26/02, 3:29 PM",
      "commitNameOld": "48e1a07f2923036311b3ecc0ac90f4eb812d805d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 47.16,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n        if (!lenient \u0026\u0026 result \u003d\u003d null) {\n            throw new JXPathException(\"No value for xpath: \" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            NodePointer parent \u003d ((NodePointer) result).getParent();\n            if (parent \u003d\u003d null || parent.isNode() || !parent.isActual()) {\n                throw new JXPathException(\"No value for xpath: \" + xpath);\n            }\n        }\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 212,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,20 @@\n public Object getValue(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getRootContext());\n-    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n-        throw new JXPathException(\"No value for xpath: \" + xpath);\n-    }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n+        if (!lenient \u0026\u0026 result \u003d\u003d null) {\n+            throw new JXPathException(\"No value for xpath: \" + xpath);\n+        }\n     }\n     if (result instanceof NodePointer) {\n+        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n+            NodePointer parent \u003d ((NodePointer) result).getParent();\n+            if (parent \u003d\u003d null || parent.isNode() || !parent.isActual()) {\n+                throw new JXPathException(\"No value for xpath: \" + xpath);\n+            }\n+        }\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "323e8b214459b3977973c01a048a979dc778f100": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/02, 5:40 PM",
      "commitName": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/27/02, 9:37 PM",
      "commitNameOld": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.84,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 199,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath, Expression expr) {\n-    Object result \u003d getRootContext().eval(expr);\n+    Object result \u003d expr.computeValue(getRootContext());\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:37 PM",
      "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d getRootContext().eval(expr);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 201,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-public Object getValue(String xpath) {\n-    Object result \u003d eval(xpath, true);\n+public Object getValue(String xpath, Expression expr) {\n+    Object result \u003d getRootContext().eval(expr);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[xpath-String]",
            "newValue": "[xpath-String, expr-Expression]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d getRootContext().eval(expr);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 201,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-public Object getValue(String xpath) {\n-    Object result \u003d eval(xpath, true);\n+public Object getValue(String xpath, Expression expr) {\n+    Object result \u003d getRootContext().eval(expr);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr) {\n    Object result \u003d getRootContext().eval(expr);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 201,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-public Object getValue(String xpath) {\n-    Object result \u003d eval(xpath, true);\n+public Object getValue(String xpath, Expression expr) {\n+    Object result \u003d getRootContext().eval(expr);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
            "newValue": ""
          }
        }
      ]
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 195,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n-        throw new RuntimeException(\"No value for xpath: \" + xpath);\n+        throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Ybodychange",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.87,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 190,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getCanonicalValue();\n+        result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "989fbe2e44ad4e994dc810fa54290636a7339712": {
      "type": "Ybodychange",
      "commitMessage": "Simplified ExpressionContext implementation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136727 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:32 PM",
      "commitName": "989fbe2e44ad4e994dc810fa54290636a7339712",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/21/02, 2:52 PM",
      "commitNameOld": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getCanonicalValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 195,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n-        result \u003d ctx.getContextNodePointer();\n+        result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getCanonicalValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ybodychange",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getCanonicalValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 194,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n     if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getPrimitiveValue();\n+        result \u003d ((NodePointer) result).getCanonicalValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "65bf4da7590edc460ec68e18f35d201ec685bf86": {
      "type": "Ybodychange",
      "commitMessage": "Removed dependency on DOM from everywhere except where needed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/11/02, 7:28 PM",
      "commitName": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/9/02, 8:40 PM",
      "commitNameOld": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getPrimitiveValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 186,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,17 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n-    if (result instanceof Pointer) {\n-        result \u003d ((Pointer) result).getValue();\n-    }\n-    if (result instanceof Node) {\n-        result \u003d EvalContext.stringValue((Node) result);\n+    if (result instanceof NodePointer) {\n+        result \u003d ((NodePointer) result).getPrimitiveValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/26/01, 4:37 PM",
      "commitNameOld": "d0a64d141367867db5b745734f5c7330644b71ca",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 195.17,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 187,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d0a64d141367867db5b745734f5c7330644b71ca": {
      "type": "Ybodychange",
      "commitMessage": "Added support for non-lenient mode\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136708 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/26/01, 4:37 PM",
      "commitName": "d0a64d141367867db5b745734f5c7330644b71ca",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/25/01, 6:21 PM",
      "commitNameOld": "3ec25ca8751eba756316184f4f8d3be1361a0027",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 146,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,17 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n+    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n+        throw new RuntimeException(\"No value for xpath: \" + xpath);\n+    }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n     if (result instanceof Pointer) {\n         result \u003d ((Pointer) result).getValue();\n     }\n     if (result instanceof Node) {\n         result \u003d EvalContext.stringValue((Node) result);\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/8/01, 1:59 PM",
      "commitNameOld": "163440e05f7cd4680973e99144f7d60f343ebeaa",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 13.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 146,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,18 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n-    if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getValue();\n-    } else if (result instanceof EvalContext) {\n+    if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n-        while (ctx.nextSet()) {\n-            if (ctx.next()) {\n-                result \u003d ctx.getCurrentNodePointer().getValue();\n-                break;\n-            }\n-        }\n+        result \u003d ctx.getContextNodePointer();\n+    }\n+    if (result instanceof Pointer) {\n+        result \u003d ((Pointer) result).getValue();\n     }\n     if (result instanceof Node) {\n         result \u003d EvalContext.stringValue((Node) result);\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ybodychange",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 11.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    } else if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        while (ctx.nextSet()) {\n            if (ctx.next()) {\n                result \u003d ctx.getCurrentNodePointer().getValue();\n                break;\n            }\n        }\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 145,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,15 +1,18 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     } else if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         while (ctx.nextSet()) {\n             if (ctx.next()) {\n                 result \u003d ctx.getCurrentNodePointer().getValue();\n                 break;\n             }\n         }\n     }\n+    if (result instanceof Node) {\n+        result \u003d EvalContext.stringValue((Node) result);\n+    }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,15 @@\n+public Object getValue(String xpath) {\n+    Object result \u003d eval(xpath, true);\n+    if (result instanceof NodePointer) {\n+        result \u003d ((NodePointer) result).getValue();\n+    } else if (result instanceof EvalContext) {\n+        EvalContext ctx \u003d (EvalContext) result;\n+        while (ctx.nextSet()) {\n+            if (ctx.next()) {\n+                result \u003d ctx.getCurrentNodePointer().getValue();\n+                break;\n+            }\n+        }\n+    }\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    } else if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        while (ctx.nextSet()) {\n            if (ctx.next()) {\n                result \u003d ctx.getCurrentNodePointer().getValue();\n                break;\n            }\n        }\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 144,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n"
    }
  }
}