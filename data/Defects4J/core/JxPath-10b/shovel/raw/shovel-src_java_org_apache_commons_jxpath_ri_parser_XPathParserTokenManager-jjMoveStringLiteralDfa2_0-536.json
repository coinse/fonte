{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XPathParserTokenManager.java",
  "functionName": "jjMoveStringLiteralDfa2_0",
  "functionId": "jjMoveStringLiteralDfa2_0___old0-long__active0-long__old1-long__active1-long",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 536,
  "functionEndLine": 597,
  "numCommitsSeen": 6,
  "timeTaken": 913,
  "changeHistory": [
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "632e72228ad994efa19c0a9ae84923718f259cdf",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": "Ybodychange",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Ybodychange",
    "632e72228ad994efa19c0a9ae84923718f259cdf": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": {
      "type": "Ybodychange",
      "commitMessage": "Optimized parser by using SKIP instead of SPECIAL_CHARACTER\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/03, 6:28 PM",
      "commitName": "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/24/03, 5:49 PM",
      "commitNameOld": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 59.03,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n        return jjStartNfa_0(0, old0, old1);\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x2L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0x7000000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x20104000000000L, active1, 0L);\n        case 100:\n            if ((active0 \u0026 0x10000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 28, 12);\n            else if ((active0 \u0026 0x20000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 29, 12);\n            return jjMoveStringLiteralDfa3_0(active0, 0x80000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x420000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0x800L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x240800000000L, active1, 0x60L);\n        case 109:\n            if ((active1 \u0026 0x200L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 73, 12);\n            return jjMoveStringLiteralDfa3_0(active0, 0xc0010200000000L, active1, 0x100L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0xa00000000000000L, active1, 0x80L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000L, active1, 0x404L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0x8100002000000000L, active1, 0x2001L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x3880000000000L, active1, 0L);\n        case 116:\n            if ((active1 \u0026 0x8L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 67, 12);\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0x1010L);\n        case 118:\n            if ((active0 \u0026 0x40000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 30, 12);\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0L);\n        case 121:\n            if ((active0 \u0026 0x10000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 52, 12);\n            break;\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 536,
      "functionName": "jjMoveStringLiteralDfa2_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,61 +1,61 @@\n private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n     if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n         return jjStartNfa_0(0, old0, old1);\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(1, active0, active1);\n         return 2;\n     }\n     switch(curChar) {\n         case 97:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x2L);\n         case 98:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x7000000000000000L, active1, 0L);\n         case 99:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x20104000000000L, active1, 0L);\n         case 100:\n-            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 24, 13);\n-            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 25, 13);\n-            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n+            if ((active0 \u0026 0x10000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 28, 12);\n+            else if ((active0 \u0026 0x20000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 29, 12);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x80000000L, active1, 0L);\n         case 101:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x420000000000L, active1, 0L);\n         case 105:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0x800L);\n         case 108:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x240800000000L, active1, 0x60L);\n         case 109:\n-            if ((active1 \u0026 0x20L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 69, 13);\n-            return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n+            if ((active1 \u0026 0x200L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 73, 12);\n+            return jjMoveStringLiteralDfa3_0(active0, 0xc0010200000000L, active1, 0x100L);\n         case 110:\n-            return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0xa00000000000000L, active1, 0x80L);\n         case 111:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x400000000L, active1, 0x404L);\n         case 114:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0x200L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x8100002000000000L, active1, 0x2001L);\n         case 115:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x3880000000000L, active1, 0L);\n         case 116:\n-            if ((active0 \u0026 0x8000000000000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 63, 13);\n-            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n+            if ((active1 \u0026 0x8L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 67, 12);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0x1010L);\n         case 118:\n-            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 26, 13);\n+            if ((active0 \u0026 0x40000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 30, 12);\n             break;\n         case 120:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0L);\n         case 121:\n-            if ((active0 \u0026 0x1000000000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 48, 13);\n+            if ((active0 \u0026 0x10000000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 52, 12);\n             break;\n         default:\n             break;\n     }\n     return jjStartNfa_0(1, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Ybodychange",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 230.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n        return jjStartNfa_0(0, old0, old1);\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n        case 100:\n            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 24, 13);\n            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 25, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n        case 109:\n            if ((active1 \u0026 0x20L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 69, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0x200L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n        case 116:\n            if ((active0 \u0026 0x8000000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 63, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n        case 118:\n            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 26, 13);\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n        case 121:\n            if ((active0 \u0026 0x1000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 48, 13);\n            break;\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 536,
      "functionName": "jjMoveStringLiteralDfa2_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,61 +1,61 @@\n private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n     if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n         return jjStartNfa_0(0, old0, old1);\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(1, active0, active1);\n         return 2;\n     }\n     switch(curChar) {\n         case 97:\n             return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n         case 98:\n             return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n         case 99:\n             return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n         case 100:\n             if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 24, 13);\n             else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 25, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n         case 101:\n             return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n         case 105:\n             return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n         case 108:\n             return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n         case 109:\n             if ((active1 \u0026 0x20L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 69, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n         case 110:\n             return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n         case 111:\n             return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n         case 114:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0x200L);\n         case 115:\n             return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n         case 116:\n             if ((active0 \u0026 0x8000000000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 63, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n         case 117:\n             return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n         case 118:\n             if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 26, 13);\n             break;\n         case 120:\n             return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n         case 121:\n             if ((active0 \u0026 0x1000000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 48, 13);\n             break;\n         default:\n             break;\n     }\n     return jjStartNfa_0(1, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "632e72228ad994efa19c0a9ae84923718f259cdf": {
      "type": "Ybodychange",
      "commitMessage": "Added support for id() and key()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/02, 3:47 PM",
      "commitName": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 259.98,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n        return jjStartNfa_0(0, old0, old1);\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n        case 100:\n            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 24, 13);\n            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 25, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n        case 109:\n            if ((active1 \u0026 0x20L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 69, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n        case 116:\n            if ((active0 \u0026 0x8000000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 63, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n        case 118:\n            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 26, 13);\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n        case 121:\n            if ((active0 \u0026 0x1000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 48, 13);\n            break;\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 534,
      "functionName": "jjMoveStringLiteralDfa2_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,57 +1,61 @@\n private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n     if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n         return jjStartNfa_0(0, old0, old1);\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(1, active0, active1);\n         return 2;\n     }\n     switch(curChar) {\n         case 97:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x1020000000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0L);\n         case 98:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x380000000000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x700000000000000L, active1, 0L);\n         case 99:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x1010400000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x2010400000000L, active1, 0L);\n         case 100:\n             if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 24, 13);\n             else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 25, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n         case 101:\n             return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n         case 105:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x80L);\n         case 108:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x3L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x6L);\n         case 109:\n-            if ((active1 \u0026 0x10L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 68, 13);\n-            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x8L);\n+            if ((active1 \u0026 0x20L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 69, 13);\n+            return jjMoveStringLiteralDfa3_0(active0, 0xc001020000000L, active1, 0x10L);\n         case 110:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x4L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0xa0000000000000L, active1, 0x8L);\n         case 111:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x20L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x4000000040000000L, active1, 0x40L);\n         case 114:\n-            return jjMoveStringLiteralDfa3_0(active0, 0xc08000200000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x1810000200000000L, active1, 0L);\n         case 115:\n             return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n         case 116:\n-            if ((active0 \u0026 0x4000000000000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 62, 13);\n+            if ((active0 \u0026 0x8000000000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 63, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x80L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0x101L);\n         case 118:\n             if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 26, 13);\n             break;\n         case 120:\n             return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n+        case 121:\n+            if ((active0 \u0026 0x1000000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 48, 13);\n+            break;\n         default:\n             break;\n     }\n     return jjStartNfa_0(1, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 29.94,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n        return jjStartNfa_0(0, old0, old1);\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1020000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0x380000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1010400000000L, active1, 0L);\n        case 100:\n            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 24, 13);\n            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 25, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x40L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x3L);\n        case 109:\n            if ((active1 \u0026 0x10L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 68, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x8L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x4L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x20L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0xc08000200000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n        case 116:\n            if ((active0 \u0026 0x4000000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 62, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x80L);\n        case 118:\n            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 26, 13);\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 532,
      "functionName": "jjMoveStringLiteralDfa2_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,57 +1,57 @@\n private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n     if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n         return jjStartNfa_0(0, old0, old1);\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(1, active0, active1);\n         return 2;\n     }\n     switch(curChar) {\n         case 97:\n             return jjMoveStringLiteralDfa3_0(active0, 0x1020000000000000L, active1, 0L);\n         case 98:\n             return jjMoveStringLiteralDfa3_0(active0, 0x380000000000000L, active1, 0L);\n         case 99:\n             return jjMoveStringLiteralDfa3_0(active0, 0x1010400000000L, active1, 0L);\n         case 100:\n             if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 24, 13);\n             else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 25, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n         case 101:\n             return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n         case 105:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x20L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x40L);\n         case 108:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x1L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x3L);\n         case 109:\n-            if ((active1 \u0026 0x8L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(2, 67, 13);\n-            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x4L);\n+            if ((active1 \u0026 0x10L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 68, 13);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x8L);\n         case 110:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x2L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x4L);\n         case 111:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x10L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x20L);\n         case 114:\n             return jjMoveStringLiteralDfa3_0(active0, 0xc08000200000000L, active1, 0L);\n         case 115:\n             return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n         case 116:\n             if ((active0 \u0026 0x4000000000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 62, 13);\n             return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x80L);\n         case 118:\n             if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(2, 26, 13);\n             break;\n         case 120:\n             return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n         default:\n             break;\n     }\n     return jjStartNfa_0(1, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,57 @@\n+private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n+    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n+        return jjStartNfa_0(0, old0, old1);\n+    try {\n+        curChar \u003d input_stream.readChar();\n+    } catch (java.io.IOException e) {\n+        jjStopStringLiteralDfa_0(1, active0, active1);\n+        return 2;\n+    }\n+    switch(curChar) {\n+        case 97:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x1020000000000000L, active1, 0L);\n+        case 98:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x380000000000000L, active1, 0L);\n+        case 99:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x1010400000000L, active1, 0L);\n+        case 100:\n+            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 24, 13);\n+            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 25, 13);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n+        case 101:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n+        case 105:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x20L);\n+        case 108:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x1L);\n+        case 109:\n+            if ((active1 \u0026 0x8L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 67, 13);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x4L);\n+        case 110:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x2L);\n+        case 111:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x10L);\n+        case 114:\n+            return jjMoveStringLiteralDfa3_0(active0, 0xc08000200000000L, active1, 0L);\n+        case 115:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n+        case 116:\n+            if ((active0 \u0026 0x4000000000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 62, 13);\n+            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n+        case 117:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x40L);\n+        case 118:\n+            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(2, 26, 13);\n+            break;\n+        case 120:\n+            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n+        default:\n+            break;\n+    }\n+    return jjStartNfa_0(1, active0, active1);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {\n    if (((active0 \u0026\u003d old0) | (active1 \u0026\u003d old1)) \u003d\u003d 0L)\n        return jjStartNfa_0(0, old0, old1);\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1020000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0x380000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1010400000000L, active1, 0L);\n        case 100:\n            if ((active0 \u0026 0x1000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 24, 13);\n            else if ((active0 \u0026 0x2000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 25, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x42000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0x20L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x24080000000L, active1, 0x1L);\n        case 109:\n            if ((active1 \u0026 0x8L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 67, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x6001020000000L, active1, 0x4L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0x50000000000000L, active1, 0x2L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x2000000040000000L, active1, 0x10L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0xc08000200000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x388000000000L, active1, 0L);\n        case 116:\n            if ((active0 \u0026 0x4000000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 62, 13);\n            return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000400000000000L, active1, 0x40L);\n        case 118:\n            if ((active0 \u0026 0x4000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(2, 26, 13);\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 532,
      "functionName": "jjMoveStringLiteralDfa2_0",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}