{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathContextReferenceImpl.java",
  "functionName": "getValue",
  "functionId": "getValue___xpath-String__expr-Expression__requiredType-Class",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 374,
  "functionEndLine": 389,
  "numCommitsSeen": 68,
  "timeTaken": 1801,
  "changeHistory": [
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "163440e05f7cd4680973e99144f7d60f343ebeaa"
  ],
  "changeHistoryShort": {
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ybodychange",
    "163440e05f7cd4680973e99144f7d60f343ebeaa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": {
      "type": "Ybodychange",
      "commitMessage": "Introduced specialized exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@329481 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/29/05, 2:07 PM",
      "commitName": "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/29/05, 12:02 PM",
      "commitNameOld": "39b19d33418245cf67dd1ce97d472b65b14e8d3d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr, Class requiredType) {\n    Object value \u003d getValue(xpath, expr);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathTypeConversionException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 373,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n public Object getValue(String xpath, Expression expr, Class requiredType) {\n     Object value \u003d getValue(xpath, expr);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n         if (!TypeUtils.canConvert(value, requiredType)) {\n-            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n+            throw new JXPathTypeConversionException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n         value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Expression expr, Class requiredType) {\n    Object value \u003d getValue(xpath, expr);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 278,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:37 PM",
      "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr, Class requiredType) {\n    Object value \u003d getValue(xpath, expr);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 226,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Object getValue(String xpath, Class requiredType) {\n-    Object value \u003d getValue(xpath);\n+public Object getValue(String xpath, Expression expr, Class requiredType) {\n+    Object value \u003d getValue(xpath, expr);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n         if (!TypeUtils.canConvert(value, requiredType)) {\n             throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n         value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[xpath-String, requiredType-Class]",
            "newValue": "[xpath-String, expr-Expression, requiredType-Class]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr, Class requiredType) {\n    Object value \u003d getValue(xpath, expr);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 226,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Object getValue(String xpath, Class requiredType) {\n-    Object value \u003d getValue(xpath);\n+public Object getValue(String xpath, Expression expr, Class requiredType) {\n+    Object value \u003d getValue(xpath, expr);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n         if (!TypeUtils.canConvert(value, requiredType)) {\n             throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n         value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/27/02, 9:37 PM",
          "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/25/02, 8:28 PM",
          "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue(String xpath, Expression expr, Class requiredType) {\n    Object value \u003d getValue(xpath, expr);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
          "functionStartLine": 226,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Object getValue(String xpath, Class requiredType) {\n-    Object value \u003d getValue(xpath);\n+public Object getValue(String xpath, Expression expr, Class requiredType) {\n+    Object value \u003d getValue(xpath, expr);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n         if (!TypeUtils.canConvert(value, requiredType)) {\n             throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n         value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Calls getValue(xpath), converts the result to the required type\nand returns the result of the conversion.\n",
            "newValue": ""
          }
        }
      ]
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Class requiredType) {\n    Object value \u003d getValue(xpath);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 216,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Calls getValue(xpath), converts the result to the required type\nand returns the result of the conversion.\n",
      "diff": "@@ -1,10 +1,10 @@\n public Object getValue(String xpath, Class requiredType) {\n     Object value \u003d getValue(xpath);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n         if (!TypeUtils.canConvert(value, requiredType)) {\n-            throw new RuntimeException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n+            throw new JXPathException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n         value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ybodychange",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath, Class requiredType) {\n    Object value \u003d getValue(xpath);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new RuntimeException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 215,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Calls getValue(xpath), converts the result to the required type\nand returns the result of the conversion.\n",
      "diff": "@@ -1,10 +1,10 @@\n public Object getValue(String xpath, Class requiredType) {\n     Object value \u003d getValue(xpath);\n     if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n-        if (!Types.canConvert(value, requiredType)) {\n+        if (!TypeUtils.canConvert(value, requiredType)) {\n             throw new RuntimeException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n         }\n-        value \u003d Types.convert(value, requiredType);\n+        value \u003d TypeUtils.convert(value, requiredType);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "163440e05f7cd4680973e99144f7d60f343ebeaa": {
      "type": "Yintroduced",
      "commitMessage": "Added getValue(expr,class) that can perform type conversion\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136701 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/01, 1:59 PM",
      "commitName": "163440e05f7cd4680973e99144f7d60f343ebeaa",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,10 @@\n+public Object getValue(String xpath, Class requiredType) {\n+    Object value \u003d getValue(xpath);\n+    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n+        if (!Types.canConvert(value, requiredType)) {\n+            throw new RuntimeException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n+        }\n+        value \u003d Types.convert(value, requiredType);\n+    }\n+    return value;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object getValue(String xpath, Class requiredType) {\n    Object value \u003d getValue(xpath);\n    if (value !\u003d null \u0026\u0026 requiredType !\u003d null) {\n        if (!Types.canConvert(value, requiredType)) {\n            throw new RuntimeException(\"Invalid expression type. \u0027\" + xpath + \"\u0027 returns \" + value.getClass().getName() + \". It cannot be converted to \" + requiredType.getName());\n        }\n        value \u003d Types.convert(value, requiredType);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 170,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Calls getValue(xpath), converts the result to the required type\nand returns the result of the conversion.\n"
    }
  }
}