{
  "origin": "codeshovel",
  "repositoryName": "JxPath-10b",
  "repositoryPath": "/tmp/JxPath-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XPathParser.java",
  "functionName": "WildcardName",
  "functionId": "WildcardName",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1673,
  "functionEndLine": 1794,
  "numCommitsSeen": 7,
  "timeTaken": 1455,
  "changeHistory": [
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "632e72228ad994efa19c0a9ae84923718f259cdf",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": "Ybodychange",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Ybodychange",
    "632e72228ad994efa19c0a9ae84923718f259cdf": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": {
      "type": "Ybodychange",
      "commitMessage": "Optimized parser by using SKIP instead of SPECIAL_CHARACTER\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/03, 6:28 PM",
      "commitName": "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/24/03, 5:49 PM",
      "commitNameOld": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 59.03,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public final Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 \u003d null;\n    switch(jj_nt.kind) {\n        case 88:\n            jj_consume_token(88);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 \u003d token.image;\n    switch(jj_nt.kind) {\n        case 79:\n            jj_consume_token(79);\n            switch(jj_nt.kind) {\n                case 88:\n                    jj_consume_token(88);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_KEY:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_NULL:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case FUNCTION_FORMAT_NUMBER:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] \u003d jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 \u003d token.image;\n            break;\n        default:\n            jj_la1[37] \u003d jj_gen;\n            ;\n    }\n    if (nc2 !\u003d null) {\n        qn \u003d compiler.qname(nc1, nc2);\n    } else {\n        qn \u003d compiler.qname(null, nc1);\n    }\n    {\n        if (true)\n            return qn;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 1673,
      "functionName": "WildcardName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,124 +1,124 @@\n public final Object WildcardName() throws ParseException {\n     Object qn;\n     String nc1, nc2 \u003d null;\n     switch(jj_nt.kind) {\n-        case 84:\n-            jj_consume_token(84);\n+        case 88:\n+            jj_consume_token(88);\n             break;\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NODE:\n         case TEXT:\n         case COMMENT:\n         case PI:\n         case FUNCTION_LAST:\n         case FUNCTION_POSITION:\n         case FUNCTION_COUNT:\n         case FUNCTION_ID:\n         case FUNCTION_KEY:\n         case FUNCTION_LOCAL_NAME:\n         case FUNCTION_NAMESPACE_URI:\n         case FUNCTION_NAME:\n         case FUNCTION_STRING:\n         case FUNCTION_CONCAT:\n         case FUNCTION_STARTS_WITH:\n         case FUNCTION_CONTAINS:\n         case FUNCTION_SUBSTRING_BEFORE:\n         case FUNCTION_SUBSTRING_AFTER:\n         case FUNCTION_SUBSTRING:\n         case FUNCTION_STRING_LENGTH:\n         case FUNCTION_NORMALIZE_SPACE:\n         case FUNCTION_TRANSLATE:\n         case FUNCTION_BOOLEAN:\n         case FUNCTION_NOT:\n         case FUNCTION_TRUE:\n         case FUNCTION_FALSE:\n         case FUNCTION_NULL:\n         case FUNCTION_LANG:\n         case FUNCTION_NUMBER:\n         case FUNCTION_SUM:\n         case FUNCTION_FLOOR:\n         case FUNCTION_CEILING:\n         case FUNCTION_ROUND:\n         case FUNCTION_FORMAT_NUMBER:\n         case NCName:\n             NCName();\n             break;\n         default:\n             jj_la1[35] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     nc1 \u003d token.image;\n     switch(jj_nt.kind) {\n-        case 75:\n-            jj_consume_token(75);\n+        case 79:\n+            jj_consume_token(79);\n             switch(jj_nt.kind) {\n-                case 84:\n-                    jj_consume_token(84);\n+                case 88:\n+                    jj_consume_token(88);\n                     break;\n                 case OR:\n                 case AND:\n                 case MOD:\n                 case DIV:\n                 case NODE:\n                 case TEXT:\n                 case COMMENT:\n                 case PI:\n                 case FUNCTION_LAST:\n                 case FUNCTION_POSITION:\n                 case FUNCTION_COUNT:\n                 case FUNCTION_ID:\n                 case FUNCTION_KEY:\n                 case FUNCTION_LOCAL_NAME:\n                 case FUNCTION_NAMESPACE_URI:\n                 case FUNCTION_NAME:\n                 case FUNCTION_STRING:\n                 case FUNCTION_CONCAT:\n                 case FUNCTION_STARTS_WITH:\n                 case FUNCTION_CONTAINS:\n                 case FUNCTION_SUBSTRING_BEFORE:\n                 case FUNCTION_SUBSTRING_AFTER:\n                 case FUNCTION_SUBSTRING:\n                 case FUNCTION_STRING_LENGTH:\n                 case FUNCTION_NORMALIZE_SPACE:\n                 case FUNCTION_TRANSLATE:\n                 case FUNCTION_BOOLEAN:\n                 case FUNCTION_NOT:\n                 case FUNCTION_TRUE:\n                 case FUNCTION_FALSE:\n                 case FUNCTION_NULL:\n                 case FUNCTION_LANG:\n                 case FUNCTION_NUMBER:\n                 case FUNCTION_SUM:\n                 case FUNCTION_FLOOR:\n                 case FUNCTION_CEILING:\n                 case FUNCTION_ROUND:\n                 case FUNCTION_FORMAT_NUMBER:\n                 case NCName:\n                     NCName();\n                     break;\n                 default:\n                     jj_la1[36] \u003d jj_gen;\n                     jj_consume_token(-1);\n                     throw new ParseException();\n             }\n             nc2 \u003d token.image;\n             break;\n         default:\n             jj_la1[37] \u003d jj_gen;\n             ;\n     }\n     if (nc2 !\u003d null) {\n         qn \u003d compiler.qname(nc1, nc2);\n     } else {\n         qn \u003d compiler.qname(null, nc1);\n     }\n     {\n         if (true)\n             return qn;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Ybodychange",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 230.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "public final Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 \u003d null;\n    switch(jj_nt.kind) {\n        case 84:\n            jj_consume_token(84);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 \u003d token.image;\n    switch(jj_nt.kind) {\n        case 75:\n            jj_consume_token(75);\n            switch(jj_nt.kind) {\n                case 84:\n                    jj_consume_token(84);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_KEY:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_NULL:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case FUNCTION_FORMAT_NUMBER:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] \u003d jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 \u003d token.image;\n            break;\n        default:\n            jj_la1[37] \u003d jj_gen;\n            ;\n    }\n    if (nc2 !\u003d null) {\n        qn \u003d compiler.qname(nc1, nc2);\n    } else {\n        qn \u003d compiler.qname(null, nc1);\n    }\n    {\n        if (true)\n            return qn;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 1673,
      "functionName": "WildcardName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,122 +1,124 @@\n public final Object WildcardName() throws ParseException {\n     Object qn;\n     String nc1, nc2 \u003d null;\n     switch(jj_nt.kind) {\n-        case 83:\n-            jj_consume_token(83);\n+        case 84:\n+            jj_consume_token(84);\n             break;\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NODE:\n         case TEXT:\n         case COMMENT:\n         case PI:\n         case FUNCTION_LAST:\n         case FUNCTION_POSITION:\n         case FUNCTION_COUNT:\n         case FUNCTION_ID:\n         case FUNCTION_KEY:\n         case FUNCTION_LOCAL_NAME:\n         case FUNCTION_NAMESPACE_URI:\n         case FUNCTION_NAME:\n         case FUNCTION_STRING:\n         case FUNCTION_CONCAT:\n         case FUNCTION_STARTS_WITH:\n         case FUNCTION_CONTAINS:\n         case FUNCTION_SUBSTRING_BEFORE:\n         case FUNCTION_SUBSTRING_AFTER:\n         case FUNCTION_SUBSTRING:\n         case FUNCTION_STRING_LENGTH:\n         case FUNCTION_NORMALIZE_SPACE:\n         case FUNCTION_TRANSLATE:\n         case FUNCTION_BOOLEAN:\n         case FUNCTION_NOT:\n         case FUNCTION_TRUE:\n         case FUNCTION_FALSE:\n         case FUNCTION_NULL:\n         case FUNCTION_LANG:\n         case FUNCTION_NUMBER:\n         case FUNCTION_SUM:\n         case FUNCTION_FLOOR:\n         case FUNCTION_CEILING:\n         case FUNCTION_ROUND:\n+        case FUNCTION_FORMAT_NUMBER:\n         case NCName:\n             NCName();\n             break;\n         default:\n             jj_la1[35] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     nc1 \u003d token.image;\n     switch(jj_nt.kind) {\n-        case 74:\n-            jj_consume_token(74);\n+        case 75:\n+            jj_consume_token(75);\n             switch(jj_nt.kind) {\n-                case 83:\n-                    jj_consume_token(83);\n+                case 84:\n+                    jj_consume_token(84);\n                     break;\n                 case OR:\n                 case AND:\n                 case MOD:\n                 case DIV:\n                 case NODE:\n                 case TEXT:\n                 case COMMENT:\n                 case PI:\n                 case FUNCTION_LAST:\n                 case FUNCTION_POSITION:\n                 case FUNCTION_COUNT:\n                 case FUNCTION_ID:\n                 case FUNCTION_KEY:\n                 case FUNCTION_LOCAL_NAME:\n                 case FUNCTION_NAMESPACE_URI:\n                 case FUNCTION_NAME:\n                 case FUNCTION_STRING:\n                 case FUNCTION_CONCAT:\n                 case FUNCTION_STARTS_WITH:\n                 case FUNCTION_CONTAINS:\n                 case FUNCTION_SUBSTRING_BEFORE:\n                 case FUNCTION_SUBSTRING_AFTER:\n                 case FUNCTION_SUBSTRING:\n                 case FUNCTION_STRING_LENGTH:\n                 case FUNCTION_NORMALIZE_SPACE:\n                 case FUNCTION_TRANSLATE:\n                 case FUNCTION_BOOLEAN:\n                 case FUNCTION_NOT:\n                 case FUNCTION_TRUE:\n                 case FUNCTION_FALSE:\n                 case FUNCTION_NULL:\n                 case FUNCTION_LANG:\n                 case FUNCTION_NUMBER:\n                 case FUNCTION_SUM:\n                 case FUNCTION_FLOOR:\n                 case FUNCTION_CEILING:\n                 case FUNCTION_ROUND:\n+                case FUNCTION_FORMAT_NUMBER:\n                 case NCName:\n                     NCName();\n                     break;\n                 default:\n                     jj_la1[36] \u003d jj_gen;\n                     jj_consume_token(-1);\n                     throw new ParseException();\n             }\n             nc2 \u003d token.image;\n             break;\n         default:\n             jj_la1[37] \u003d jj_gen;\n             ;\n     }\n     if (nc2 !\u003d null) {\n         qn \u003d compiler.qname(nc1, nc2);\n     } else {\n         qn \u003d compiler.qname(null, nc1);\n     }\n     {\n         if (true)\n             return qn;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "632e72228ad994efa19c0a9ae84923718f259cdf": {
      "type": "Ybodychange",
      "commitMessage": "Added support for id() and key()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/02, 3:47 PM",
      "commitName": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 259.98,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "public final Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 \u003d null;\n    switch(jj_nt.kind) {\n        case 83:\n            jj_consume_token(83);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 \u003d token.image;\n    switch(jj_nt.kind) {\n        case 74:\n            jj_consume_token(74);\n            switch(jj_nt.kind) {\n                case 83:\n                    jj_consume_token(83);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_KEY:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_NULL:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] \u003d jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 \u003d token.image;\n            break;\n        default:\n            jj_la1[37] \u003d jj_gen;\n            ;\n    }\n    if (nc2 !\u003d null) {\n        qn \u003d compiler.qname(nc1, nc2);\n    } else {\n        qn \u003d compiler.qname(null, nc1);\n    }\n    {\n        if (true)\n            return qn;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 1659,
      "functionName": "WildcardName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,120 +1,122 @@\n public final Object WildcardName() throws ParseException {\n     Object qn;\n     String nc1, nc2 \u003d null;\n     switch(jj_nt.kind) {\n-        case 82:\n-            jj_consume_token(82);\n+        case 83:\n+            jj_consume_token(83);\n             break;\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NODE:\n         case TEXT:\n         case COMMENT:\n         case PI:\n         case FUNCTION_LAST:\n         case FUNCTION_POSITION:\n         case FUNCTION_COUNT:\n         case FUNCTION_ID:\n+        case FUNCTION_KEY:\n         case FUNCTION_LOCAL_NAME:\n         case FUNCTION_NAMESPACE_URI:\n         case FUNCTION_NAME:\n         case FUNCTION_STRING:\n         case FUNCTION_CONCAT:\n         case FUNCTION_STARTS_WITH:\n         case FUNCTION_CONTAINS:\n         case FUNCTION_SUBSTRING_BEFORE:\n         case FUNCTION_SUBSTRING_AFTER:\n         case FUNCTION_SUBSTRING:\n         case FUNCTION_STRING_LENGTH:\n         case FUNCTION_NORMALIZE_SPACE:\n         case FUNCTION_TRANSLATE:\n         case FUNCTION_BOOLEAN:\n         case FUNCTION_NOT:\n         case FUNCTION_TRUE:\n         case FUNCTION_FALSE:\n         case FUNCTION_NULL:\n         case FUNCTION_LANG:\n         case FUNCTION_NUMBER:\n         case FUNCTION_SUM:\n         case FUNCTION_FLOOR:\n         case FUNCTION_CEILING:\n         case FUNCTION_ROUND:\n         case NCName:\n             NCName();\n             break;\n         default:\n             jj_la1[35] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     nc1 \u003d token.image;\n     switch(jj_nt.kind) {\n-        case 73:\n-            jj_consume_token(73);\n+        case 74:\n+            jj_consume_token(74);\n             switch(jj_nt.kind) {\n-                case 82:\n-                    jj_consume_token(82);\n+                case 83:\n+                    jj_consume_token(83);\n                     break;\n                 case OR:\n                 case AND:\n                 case MOD:\n                 case DIV:\n                 case NODE:\n                 case TEXT:\n                 case COMMENT:\n                 case PI:\n                 case FUNCTION_LAST:\n                 case FUNCTION_POSITION:\n                 case FUNCTION_COUNT:\n                 case FUNCTION_ID:\n+                case FUNCTION_KEY:\n                 case FUNCTION_LOCAL_NAME:\n                 case FUNCTION_NAMESPACE_URI:\n                 case FUNCTION_NAME:\n                 case FUNCTION_STRING:\n                 case FUNCTION_CONCAT:\n                 case FUNCTION_STARTS_WITH:\n                 case FUNCTION_CONTAINS:\n                 case FUNCTION_SUBSTRING_BEFORE:\n                 case FUNCTION_SUBSTRING_AFTER:\n                 case FUNCTION_SUBSTRING:\n                 case FUNCTION_STRING_LENGTH:\n                 case FUNCTION_NORMALIZE_SPACE:\n                 case FUNCTION_TRANSLATE:\n                 case FUNCTION_BOOLEAN:\n                 case FUNCTION_NOT:\n                 case FUNCTION_TRUE:\n                 case FUNCTION_FALSE:\n                 case FUNCTION_NULL:\n                 case FUNCTION_LANG:\n                 case FUNCTION_NUMBER:\n                 case FUNCTION_SUM:\n                 case FUNCTION_FLOOR:\n                 case FUNCTION_CEILING:\n                 case FUNCTION_ROUND:\n                 case NCName:\n                     NCName();\n                     break;\n                 default:\n                     jj_la1[36] \u003d jj_gen;\n                     jj_consume_token(-1);\n                     throw new ParseException();\n             }\n             nc2 \u003d token.image;\n             break;\n         default:\n             jj_la1[37] \u003d jj_gen;\n             ;\n     }\n     if (nc2 !\u003d null) {\n         qn \u003d compiler.qname(nc1, nc2);\n     } else {\n         qn \u003d compiler.qname(null, nc1);\n     }\n     {\n         if (true)\n             return qn;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 29.94,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public final Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 \u003d null;\n    switch(jj_nt.kind) {\n        case 82:\n            jj_consume_token(82);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 \u003d token.image;\n    switch(jj_nt.kind) {\n        case 73:\n            jj_consume_token(73);\n            switch(jj_nt.kind) {\n                case 82:\n                    jj_consume_token(82);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_NULL:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] \u003d jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 \u003d token.image;\n            break;\n        default:\n            jj_la1[37] \u003d jj_gen;\n            ;\n    }\n    if (nc2 !\u003d null) {\n        qn \u003d compiler.qname(nc1, nc2);\n    } else {\n        qn \u003d compiler.qname(null, nc1);\n    }\n    {\n        if (true)\n            return qn;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 1645,
      "functionName": "WildcardName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,118 +1,120 @@\n public final Object WildcardName() throws ParseException {\n     Object qn;\n     String nc1, nc2 \u003d null;\n     switch(jj_nt.kind) {\n-        case 81:\n-            jj_consume_token(81);\n+        case 82:\n+            jj_consume_token(82);\n             break;\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NODE:\n         case TEXT:\n         case COMMENT:\n         case PI:\n         case FUNCTION_LAST:\n         case FUNCTION_POSITION:\n         case FUNCTION_COUNT:\n         case FUNCTION_ID:\n         case FUNCTION_LOCAL_NAME:\n         case FUNCTION_NAMESPACE_URI:\n         case FUNCTION_NAME:\n         case FUNCTION_STRING:\n         case FUNCTION_CONCAT:\n         case FUNCTION_STARTS_WITH:\n         case FUNCTION_CONTAINS:\n         case FUNCTION_SUBSTRING_BEFORE:\n         case FUNCTION_SUBSTRING_AFTER:\n         case FUNCTION_SUBSTRING:\n         case FUNCTION_STRING_LENGTH:\n         case FUNCTION_NORMALIZE_SPACE:\n         case FUNCTION_TRANSLATE:\n         case FUNCTION_BOOLEAN:\n         case FUNCTION_NOT:\n         case FUNCTION_TRUE:\n         case FUNCTION_FALSE:\n+        case FUNCTION_NULL:\n         case FUNCTION_LANG:\n         case FUNCTION_NUMBER:\n         case FUNCTION_SUM:\n         case FUNCTION_FLOOR:\n         case FUNCTION_CEILING:\n         case FUNCTION_ROUND:\n         case NCName:\n             NCName();\n             break;\n         default:\n             jj_la1[35] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     nc1 \u003d token.image;\n     switch(jj_nt.kind) {\n-        case 72:\n-            jj_consume_token(72);\n+        case 73:\n+            jj_consume_token(73);\n             switch(jj_nt.kind) {\n-                case 81:\n-                    jj_consume_token(81);\n+                case 82:\n+                    jj_consume_token(82);\n                     break;\n                 case OR:\n                 case AND:\n                 case MOD:\n                 case DIV:\n                 case NODE:\n                 case TEXT:\n                 case COMMENT:\n                 case PI:\n                 case FUNCTION_LAST:\n                 case FUNCTION_POSITION:\n                 case FUNCTION_COUNT:\n                 case FUNCTION_ID:\n                 case FUNCTION_LOCAL_NAME:\n                 case FUNCTION_NAMESPACE_URI:\n                 case FUNCTION_NAME:\n                 case FUNCTION_STRING:\n                 case FUNCTION_CONCAT:\n                 case FUNCTION_STARTS_WITH:\n                 case FUNCTION_CONTAINS:\n                 case FUNCTION_SUBSTRING_BEFORE:\n                 case FUNCTION_SUBSTRING_AFTER:\n                 case FUNCTION_SUBSTRING:\n                 case FUNCTION_STRING_LENGTH:\n                 case FUNCTION_NORMALIZE_SPACE:\n                 case FUNCTION_TRANSLATE:\n                 case FUNCTION_BOOLEAN:\n                 case FUNCTION_NOT:\n                 case FUNCTION_TRUE:\n                 case FUNCTION_FALSE:\n+                case FUNCTION_NULL:\n                 case FUNCTION_LANG:\n                 case FUNCTION_NUMBER:\n                 case FUNCTION_SUM:\n                 case FUNCTION_FLOOR:\n                 case FUNCTION_CEILING:\n                 case FUNCTION_ROUND:\n                 case NCName:\n                     NCName();\n                     break;\n                 default:\n                     jj_la1[36] \u003d jj_gen;\n                     jj_consume_token(-1);\n                     throw new ParseException();\n             }\n             nc2 \u003d token.image;\n             break;\n         default:\n             jj_la1[37] \u003d jj_gen;\n             ;\n     }\n     if (nc2 !\u003d null) {\n         qn \u003d compiler.qname(nc1, nc2);\n     } else {\n         qn \u003d compiler.qname(null, nc1);\n     }\n     {\n         if (true)\n             return qn;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,118 @@\n+public final Object WildcardName() throws ParseException {\n+    Object qn;\n+    String nc1, nc2 \u003d null;\n+    switch(jj_nt.kind) {\n+        case 81:\n+            jj_consume_token(81);\n+            break;\n+        case OR:\n+        case AND:\n+        case MOD:\n+        case DIV:\n+        case NODE:\n+        case TEXT:\n+        case COMMENT:\n+        case PI:\n+        case FUNCTION_LAST:\n+        case FUNCTION_POSITION:\n+        case FUNCTION_COUNT:\n+        case FUNCTION_ID:\n+        case FUNCTION_LOCAL_NAME:\n+        case FUNCTION_NAMESPACE_URI:\n+        case FUNCTION_NAME:\n+        case FUNCTION_STRING:\n+        case FUNCTION_CONCAT:\n+        case FUNCTION_STARTS_WITH:\n+        case FUNCTION_CONTAINS:\n+        case FUNCTION_SUBSTRING_BEFORE:\n+        case FUNCTION_SUBSTRING_AFTER:\n+        case FUNCTION_SUBSTRING:\n+        case FUNCTION_STRING_LENGTH:\n+        case FUNCTION_NORMALIZE_SPACE:\n+        case FUNCTION_TRANSLATE:\n+        case FUNCTION_BOOLEAN:\n+        case FUNCTION_NOT:\n+        case FUNCTION_TRUE:\n+        case FUNCTION_FALSE:\n+        case FUNCTION_LANG:\n+        case FUNCTION_NUMBER:\n+        case FUNCTION_SUM:\n+        case FUNCTION_FLOOR:\n+        case FUNCTION_CEILING:\n+        case FUNCTION_ROUND:\n+        case NCName:\n+            NCName();\n+            break;\n+        default:\n+            jj_la1[35] \u003d jj_gen;\n+            jj_consume_token(-1);\n+            throw new ParseException();\n+    }\n+    nc1 \u003d token.image;\n+    switch(jj_nt.kind) {\n+        case 72:\n+            jj_consume_token(72);\n+            switch(jj_nt.kind) {\n+                case 81:\n+                    jj_consume_token(81);\n+                    break;\n+                case OR:\n+                case AND:\n+                case MOD:\n+                case DIV:\n+                case NODE:\n+                case TEXT:\n+                case COMMENT:\n+                case PI:\n+                case FUNCTION_LAST:\n+                case FUNCTION_POSITION:\n+                case FUNCTION_COUNT:\n+                case FUNCTION_ID:\n+                case FUNCTION_LOCAL_NAME:\n+                case FUNCTION_NAMESPACE_URI:\n+                case FUNCTION_NAME:\n+                case FUNCTION_STRING:\n+                case FUNCTION_CONCAT:\n+                case FUNCTION_STARTS_WITH:\n+                case FUNCTION_CONTAINS:\n+                case FUNCTION_SUBSTRING_BEFORE:\n+                case FUNCTION_SUBSTRING_AFTER:\n+                case FUNCTION_SUBSTRING:\n+                case FUNCTION_STRING_LENGTH:\n+                case FUNCTION_NORMALIZE_SPACE:\n+                case FUNCTION_TRANSLATE:\n+                case FUNCTION_BOOLEAN:\n+                case FUNCTION_NOT:\n+                case FUNCTION_TRUE:\n+                case FUNCTION_FALSE:\n+                case FUNCTION_LANG:\n+                case FUNCTION_NUMBER:\n+                case FUNCTION_SUM:\n+                case FUNCTION_FLOOR:\n+                case FUNCTION_CEILING:\n+                case FUNCTION_ROUND:\n+                case NCName:\n+                    NCName();\n+                    break;\n+                default:\n+                    jj_la1[36] \u003d jj_gen;\n+                    jj_consume_token(-1);\n+                    throw new ParseException();\n+            }\n+            nc2 \u003d token.image;\n+            break;\n+        default:\n+            jj_la1[37] \u003d jj_gen;\n+            ;\n+    }\n+    if (nc2 !\u003d null) {\n+        qn \u003d compiler.qname(nc1, nc2);\n+    } else {\n+        qn \u003d compiler.qname(null, nc1);\n+    }\n+    {\n+        if (true)\n+            return qn;\n+    }\n+    throw new Error(\"Missing return statement in function\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 \u003d null;\n    switch(jj_nt.kind) {\n        case 81:\n            jj_consume_token(81);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 \u003d token.image;\n    switch(jj_nt.kind) {\n        case 72:\n            jj_consume_token(72);\n            switch(jj_nt.kind) {\n                case 81:\n                    jj_consume_token(81);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] \u003d jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 \u003d token.image;\n            break;\n        default:\n            jj_la1[37] \u003d jj_gen;\n            ;\n    }\n    if (nc2 !\u003d null) {\n        qn \u003d compiler.qname(nc1, nc2);\n    } else {\n        qn \u003d compiler.qname(null, nc1);\n    }\n    {\n        if (true)\n            return qn;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 1629,
      "functionName": "WildcardName",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}