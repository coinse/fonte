{
  "origin": "codeshovel",
  "repositoryName": "Csv-10b",
  "repositoryPath": "/tmp/Csv-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "withHeader",
  "functionId": "withHeader___header-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n@see #withSkipHeaderRecord(boolean)\n",
  "functionStartLine": 786,
  "functionEndLine": 789,
  "numCommitsSeen": 201,
  "timeTaken": 3268,
  "changeHistory": [
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
    "1533facb1986631465467af2475ae9df1ed5a8be",
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
    "6a34b823c807325bc251ef43c66c307adcd947b8",
    "73ec29f75f1dd6f0c52e9c310dc4f8414346f49a",
    "6e57364216b78bca031f764b8d0a46494ba27b46",
    "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "67bbc35289bb3435eae0bd6f20cc6b15280e66e0",
    "93fc1f9363d911cb0a974f993d9266a89a63c41e",
    "3296f59696d9ba83eb6791c6064f0e6a33e765fc",
    "38741a48c692ae2fc13cd2445e77ace6ecea1156",
    "c9dedff12e98a34ab4225bc65f810c0954207f11",
    "aee6c50e2830c007a572cc96a57bc105308acc49",
    "bbb2da1b69cdd6c44407d0192ecb1129d4c81e39",
    "740a1b699338923098486fc16d8df967be388160",
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e",
    "70337bef8f5eacd4ecac22b2625a20224f77ff20",
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
    "42476f4b08fe4b075aa36f688f0801857f3635d9"
  ],
  "changeHistoryShort": {
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f": "Ymultichange(Ybodychange,Ydocchange)",
    "1533facb1986631465467af2475ae9df1ed5a8be": "Ydocchange",
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
    "6a34b823c807325bc251ef43c66c307adcd947b8": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
    "73ec29f75f1dd6f0c52e9c310dc4f8414346f49a": "Ybodychange",
    "6e57364216b78bca031f764b8d0a46494ba27b46": "Ybodychange",
    "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737": "Ybodychange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Yparametermetachange",
    "67bbc35289bb3435eae0bd6f20cc6b15280e66e0": "Ybodychange",
    "93fc1f9363d911cb0a974f993d9266a89a63c41e": "Ymultichange(Ydocchange,Yformatchange)",
    "3296f59696d9ba83eb6791c6064f0e6a33e765fc": "Ydocchange",
    "38741a48c692ae2fc13cd2445e77ace6ecea1156": "Ybodychange",
    "c9dedff12e98a34ab4225bc65f810c0954207f11": "Ybodychange",
    "aee6c50e2830c007a572cc96a57bc105308acc49": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
    "bbb2da1b69cdd6c44407d0192ecb1129d4c81e39": "Ydocchange",
    "740a1b699338923098486fc16d8df967be388160": "Ybodychange",
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e": "Ydocchange",
    "70337bef8f5eacd4ecac22b2625a20224f77ff20": "Ybodychange",
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
    "42476f4b08fe4b075aa36f688f0801857f3635d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97d34575a1074197b8a1b5832d3b2cd3e7656d8f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 8:39 AM",
      "commitName": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/31/13, 8:39 AM",
          "commitName": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/30/13, 1:44 PM",
          "commitNameOld": "f881372d92d4bf07848f0b9ccae99488d30ab8eb",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 656,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n@see #withSkipHeaderRecord(boolean)\n",
          "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/31/13, 8:39 AM",
          "commitName": "97d34575a1074197b8a1b5832d3b2cd3e7656d8f",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/30/13, 1:44 PM",
          "commitNameOld": "f881372d92d4bf07848f0b9ccae99488d30ab8eb",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 656,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n@see #withSkipHeaderRecord(boolean)\n",
          "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\nWhen this option is is set to any non-null value, the first record is the first \u003cem\u003edata\u003c/em\u003e record, not the\nheader record.\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
            "newValue": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n@see #withSkipHeaderRecord(boolean)\n"
          }
        }
      ]
    },
    "1533facb1986631465467af2475ae9df1ed5a8be": {
      "type": "Ydocchange",
      "commitMessage": "When withHeader is set to any non-null value, the first record is the first \u003cem\u003edata\u003c/em\u003e record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 1:36 PM",
      "commitName": "1533facb1986631465467af2475ae9df1ed5a8be",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 12:32 PM",
      "commitNameOld": "390800f28802a5c9e020e5aa901c67d5a9a618c2",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 637,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\nWhen this option is is set to any non-null value, the first record is the first \u003cem\u003edata\u003c/em\u003e record, not the\nheader record.\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
        "newValue": "Sets the header of the format. The header can either be parsed automatically from the input file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\nWhen this option is is set to any non-null value, the first record is the first \u003cem\u003edata\u003c/em\u003e record, not the\nheader record.\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n"
      }
    },
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 7:42 AM",
      "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 7:42 AM",
          "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/24/13, 3:18 PM",
          "commitNameOld": "1579c1786a3100a0a71d5efecd45c914ca530cce",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 35.68,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 626,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
          "diff": "@@ -1,4 +1,3 @@\n-public CSVFormatBuilder withHeader(final String... header) {\n-    this.header \u003d header;\n-    return this;\n+public CSVFormat withHeader(final String... header) {\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "CSVFormatBuilder",
            "newValue": "CSVFormat"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 7:42 AM",
          "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/24/13, 3:18 PM",
          "commitNameOld": "1579c1786a3100a0a71d5efecd45c914ca530cce",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 35.68,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 626,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
          "diff": "@@ -1,4 +1,3 @@\n-public CSVFormatBuilder withHeader(final String... header) {\n-    this.header \u003d header;\n-    return this;\n+public CSVFormat withHeader(final String... header) {\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 7:42 AM",
          "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/24/13, 3:18 PM",
          "commitNameOld": "1579c1786a3100a0a71d5efecd45c914ca530cce",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 35.68,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 626,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n",
          "diff": "@@ -1,4 +1,3 @@\n-public CSVFormatBuilder withHeader(final String... header) {\n-    this.header \u003d header;\n-    return this;\n+public CSVFormat withHeader(final String... header) {\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return This builder with the specified header\n",
            "newValue": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A new CSVFormat that is equal to this but with the specified header\n"
          }
        }
      ]
    },
    "6a34b823c807325bc251ef43c66c307adcd947b8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/12, 1:50 PM",
      "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/14/12, 1:50 PM",
          "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/16/12, 5:09 PM",
          "commitNameOld": "d266471b4cdc2bdf7529747534f35c7b78fca6b0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 28.9,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormatBuilder withHeader(final String... header) {\n    this.header \u003d header;\n    return this;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 608,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return This builder with the specified header\n",
          "diff": "@@ -1,3 +1,4 @@\n-public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, header);\n+public CSVFormatBuilder withHeader(final String... header) {\n+    this.header \u003d header;\n+    return this;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "CSVFormat",
            "newValue": "CSVFormatBuilder"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/14/12, 1:50 PM",
          "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/16/12, 5:09 PM",
          "commitNameOld": "d266471b4cdc2bdf7529747534f35c7b78fca6b0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 28.9,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormatBuilder withHeader(final String... header) {\n    this.header \u003d header;\n    return this;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 608,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return This builder with the specified header\n",
          "diff": "@@ -1,3 +1,4 @@\n-public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, header);\n+public CSVFormatBuilder withHeader(final String... header) {\n+    this.header \u003d header;\n+    return this;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/14/12, 1:50 PM",
          "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/16/12, 5:09 PM",
          "commitNameOld": "d266471b4cdc2bdf7529747534f35c7b78fca6b0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 28.9,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormatBuilder withHeader(final String... header) {\n    this.header \u003d header;\n    return this;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 608,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return This builder with the specified header\n",
          "diff": "@@ -1,3 +1,4 @@\n-public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, header);\n+public CSVFormatBuilder withHeader(final String... header) {\n+    this.header \u003d header;\n+    return this;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
            "newValue": "Sets the header of the format. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return This builder with the specified header\n"
          }
        }
      ]
    },
    "73ec29f75f1dd6f0c52e9c310dc4f8414346f49a": {
      "type": "Ybodychange",
      "commitMessage": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/16/12, 11:20 AM",
      "commitName": "73ec29f75f1dd6f0c52e9c310dc4f8414346f49a",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/15/12, 4:02 PM",
      "commitNameOld": "42757c237647f4c1aab5a163d1b96136b8426df0",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 535,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6e57364216b78bca031f764b8d0a46494ba27b46": {
      "type": "Ybodychange",
      "commitMessage": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:56 PM",
      "commitName": "6e57364216b78bca031f764b8d0a46494ba27b46",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 9:53 PM",
      "commitNameOld": "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 510,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, encapsulator, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n+    return new CSVFormat(delimiter, quoteChar, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737": {
      "type": "Ybodychange",
      "commitMessage": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:53 PM",
      "commitName": "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 9:37 PM",
      "commitNameOld": "33eb71e9a144bc8ab0ff303a1b2f0a00c489f727",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, encapsulator, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 510,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(final String... header) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n+    return new CSVFormat(delimiter, encapsulator, quotePolicy, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 7:39 AM",
      "commitNameOld": "67bbc35289bb3435eae0bd6f20cc6b15280e66e0",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(final String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 441,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n-public CSVFormat withHeader(String... header) {\n+public CSVFormat withHeader(final String... header) {\n     return new CSVFormat(delimiter, encapsulator, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[header-String]",
        "newValue": "[header-String(modifiers-final)]"
      }
    },
    "67bbc35289bb3435eae0bd6f20cc6b15280e66e0": {
      "type": "Ybodychange",
      "commitMessage": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 7:39 AM",
      "commitName": "67bbc35289bb3435eae0bd6f20cc6b15280e66e0",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 7:31 AM",
      "commitNameOld": "b5589d0fcb0509ff0ff4815bda31b7d75b92f92e",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 441,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(String... header) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, ignoreSurroundingSpaces, ignoreEmptyLines, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "93fc1f9363d911cb0a974f993d9266a89a63c41e": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 12:47 PM",
      "commitName": "93fc1f9363d911cb0a974f993d9266a89a63c41e",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/11/12, 12:47 PM",
          "commitName": "93fc1f9363d911cb0a974f993d9266a89a63c41e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "9/11/12, 12:40 PM",
          "commitNameOld": "bf06bed9b8905ccf5409179263707074167ccfc4",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 440,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
            "newValue": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/11/12, 12:47 PM",
          "commitName": "93fc1f9363d911cb0a974f993d9266a89a63c41e",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "9/11/12, 12:40 PM",
          "commitNameOld": "bf06bed9b8905ccf5409179263707074167ccfc4",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 440,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can either be parsed automatically from the\ninput file with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader();\n\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003e\nCSVFormat format \u003d aformat.withHeader(\u0026quot;name\u0026quot;, \u0026quot;email\u0026quot;, \u0026quot;phone\u0026quot;);\n\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "3296f59696d9ba83eb6791c6064f0e6a33e765fc": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc tweak\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307042 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/29/12, 11:48 AM",
      "commitName": "3296f59696d9ba83eb6791c6064f0e6a33e765fc",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/28/12, 6:35 AM",
      "commitNameOld": "6a91c050616bea399ce8a272d283fc4c6c4a393c",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 400,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
        "newValue": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d aformat.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n"
      }
    },
    "38741a48c692ae2fc13cd2445e77ace6ecea1156": {
      "type": "Ybodychange",
      "commitMessage": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/12, 12:02 PM",
      "commitName": "38741a48c692ae2fc13cd2445e77ace6ecea1156",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/26/12, 11:31 AM",
      "commitNameOld": "5063b16c7a6d806a0a229fdf4ff2a16d74f287b5",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 394,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(String... header) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, surroundingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c9dedff12e98a34ab4225bc65f810c0954207f11": {
      "type": "Ybodychange",
      "commitMessage": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/17/12, 5:29 AM",
      "commitName": "c9dedff12e98a34ab4225bc65f810c0954207f11",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/16/12, 6:39 PM",
      "commitNameOld": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 376,
      "functionName": "withHeader",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
      "diff": "@@ -1,3 +1,3 @@\n public CSVFormat withHeader(String... header) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aee6c50e2830c007a572cc96a57bc105308acc49": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 6:39 PM",
      "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 401,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "@@ -1,3 +1,3 @@\n-public CSVFormat withLineSeparator(String lineSeparator) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n+public CSVFormat withHeader(String... header) {\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "withLineSeparator",
            "newValue": "withHeader"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 401,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "@@ -1,3 +1,3 @@\n-public CSVFormat withLineSeparator(String lineSeparator) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n+public CSVFormat withHeader(String... header) {\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[lineSeparator-String]",
            "newValue": "[header-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 401,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "@@ -1,3 +1,3 @@\n-public CSVFormat withLineSeparator(String lineSeparator) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n+public CSVFormat withHeader(String... header) {\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withHeader(String... header) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 401,
          "functionName": "withHeader",
          "functionAnnotation": "",
          "functionDoc": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n",
          "diff": "@@ -1,3 +1,3 @@\n-public CSVFormat withLineSeparator(String lineSeparator) {\n-    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n+public CSVFormat withHeader(String... header) {\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator, header);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns a copy of this format using the specified output line separator.\n\n@param lineSeparator the line separator to be used for output.\n@return A copy of this format using the specified output line separator\n",
            "newValue": "Returns a copy of this format using the specified header. The header can\neither be parsed automatically from the input file with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader();\u003c/pre\u003e\n\nor specified manually with:\n\n\u003cpre\u003eCSVFormat format \u003d CSVFormat.DEFAULT.withHeader(\"name\", \"email\", \"phone\");\u003c/pre\u003e\n\n@param header the header, \u003ctt\u003enull\u003c/tt\u003e if disabled, empty if parsed automatically, user specified otherwise.\n@return A copy of this format using the specified header\n"
          }
        }
      ]
    },
    "bbb2da1b69cdd6c44407d0192ecb1129d4c81e39": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300678 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/14/12, 11:34 AM",
      "commitName": "bbb2da1b69cdd6c44407d0192ecb1129d4c81e39",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/11/12, 4:01 PM",
      "commitNameOld": "740a1b699338923098486fc16d8df967be388160",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 371,
      "functionName": "withLineSeparator",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified output line separator.\n\n@param lineSeparator the line separator to be used for output.\n@return A copy of this format using the specified output line separator\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns a copy of this format using the specified line separator.\n\n@param lineSeparator the line separator\n@return A copy of this format using the specified line separator\n",
        "newValue": "Returns a copy of this format using the specified output line separator.\n\n@param lineSeparator the line separator to be used for output.\n@return A copy of this format using the specified output line separator\n"
      }
    },
    "740a1b699338923098486fc16d8df967be388160": {
      "type": "Ybodychange",
      "commitMessage": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/11/12, 4:01 PM",
      "commitName": "740a1b699338923098486fc16d8df967be388160",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "3/9/12, 10:15 AM",
      "commitNameOld": "883780bcf69e7842b781632c98ac32caf824aa16",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 369,
      "functionName": "withLineSeparator",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified line separator.\n\n@param lineSeparator the line separator\n@return A copy of this format using the specified line separator\n",
      "diff": "@@ -1,5 +1,3 @@\n public CSVFormat withLineSeparator(String lineSeparator) {\n-    CSVFormat format \u003d clone();\n-    format.lineSeparator \u003d lineSeparator;\n-    return format;\n+    return new CSVFormat(delimiter, encapsulator, commentStart, escape, leadingSpacesIgnored, trailingSpacesIgnored, unicodeEscapesInterpreted, emptyLinesIgnored, lineSeparator);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e": {
      "type": "Ydocchange",
      "commitMessage": "More Javadoc for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298176 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/7/12, 2:34 PM",
      "commitName": "194e21c283fa857bf1a121b8f37ba3346a11cf2e",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "3/7/12, 8:32 AM",
      "commitNameOld": "898b7f9629f8f9a02b9d4785d4c287b4549c3990",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    CSVFormat format \u003d clone();\n    format.lineSeparator \u003d lineSeparator;\n    return format;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 347,
      "functionName": "withLineSeparator",
      "functionAnnotation": "",
      "functionDoc": "Returns a copy of this format using the specified line separator.\n\n@param lineSeparator the line separator\n@return A copy of this format using the specified line separator\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Returns a copy of this format using the specified line separator.\n\n@param lineSeparator the line separator\n@return A copy of this format using the specified line separator\n"
      }
    },
    "70337bef8f5eacd4ecac22b2625a20224f77ff20": {
      "type": "Ybodychange",
      "commitMessage": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/11/11, 1:34 PM",
      "commitName": "70337bef8f5eacd4ecac22b2625a20224f77ff20",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "11/10/11, 3:58 AM",
      "commitNameOld": "2598862d94b7f6f3dfae057193b4f0cb5be8dee8",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 1.4,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    CSVFormat format \u003d clone();\n    format.lineSeparator \u003d lineSeparator;\n    return format;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 195,
      "functionName": "withLineSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,5 @@\n public CSVFormat withLineSeparator(String lineSeparator) {\n-    CSVFormat format \u003d (CSVFormat) clone();\n+    CSVFormat format \u003d clone();\n     format.lineSeparator \u003d lineSeparator;\n     return format;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
      "commitMessage": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 8:54 AM",
      "commitName": "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/9/11, 8:54 AM",
          "commitName": "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "11/9/11, 8:21 AM",
          "commitNameOld": "42476f4b08fe4b075aa36f688f0801857f3635d9",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    CSVFormat format \u003d (CSVFormat) clone();\n    format.lineSeparator \u003d lineSeparator;\n    return format;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 186,
          "functionName": "withLineSeparator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n-public CSVStrategy withLineSeparator(String lineSeparator) {\n-    CSVStrategy strategy \u003d (CSVStrategy) clone();\n-    strategy.lineSeparator \u003d lineSeparator;\n-    return strategy;\n+public CSVFormat withLineSeparator(String lineSeparator) {\n+    CSVFormat format \u003d (CSVFormat) clone();\n+    format.lineSeparator \u003d lineSeparator;\n+    return format;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/csv/CSVStrategy.java",
            "newPath": "src/main/java/org/apache/commons/csv/CSVFormat.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/9/11, 8:54 AM",
          "commitName": "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "11/9/11, 8:21 AM",
          "commitNameOld": "42476f4b08fe4b075aa36f688f0801857f3635d9",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    CSVFormat format \u003d (CSVFormat) clone();\n    format.lineSeparator \u003d lineSeparator;\n    return format;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 186,
          "functionName": "withLineSeparator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n-public CSVStrategy withLineSeparator(String lineSeparator) {\n-    CSVStrategy strategy \u003d (CSVStrategy) clone();\n-    strategy.lineSeparator \u003d lineSeparator;\n-    return strategy;\n+public CSVFormat withLineSeparator(String lineSeparator) {\n+    CSVFormat format \u003d (CSVFormat) clone();\n+    format.lineSeparator \u003d lineSeparator;\n+    return format;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "CSVStrategy",
            "newValue": "CSVFormat"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/9/11, 8:54 AM",
          "commitName": "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "11/9/11, 8:21 AM",
          "commitNameOld": "42476f4b08fe4b075aa36f688f0801857f3635d9",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVFormat withLineSeparator(String lineSeparator) {\n    CSVFormat format \u003d (CSVFormat) clone();\n    format.lineSeparator \u003d lineSeparator;\n    return format;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 186,
          "functionName": "withLineSeparator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n-public CSVStrategy withLineSeparator(String lineSeparator) {\n-    CSVStrategy strategy \u003d (CSVStrategy) clone();\n-    strategy.lineSeparator \u003d lineSeparator;\n-    return strategy;\n+public CSVFormat withLineSeparator(String lineSeparator) {\n+    CSVFormat format \u003d (CSVFormat) clone();\n+    format.lineSeparator \u003d lineSeparator;\n+    return format;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "42476f4b08fe4b075aa36f688f0801857f3635d9": {
      "type": "Yintroduced",
      "commitMessage": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 8:21 AM",
      "commitName": "42476f4b08fe4b075aa36f688f0801857f3635d9",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,5 @@\n+public CSVStrategy withLineSeparator(String lineSeparator) {\n+    CSVStrategy strategy \u003d (CSVStrategy) clone();\n+    strategy.lineSeparator \u003d lineSeparator;\n+    return strategy;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public CSVStrategy withLineSeparator(String lineSeparator) {\n    CSVStrategy strategy \u003d (CSVStrategy) clone();\n    strategy.lineSeparator \u003d lineSeparator;\n    return strategy;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVStrategy.java",
      "functionStartLine": 186,
      "functionName": "withLineSeparator",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}