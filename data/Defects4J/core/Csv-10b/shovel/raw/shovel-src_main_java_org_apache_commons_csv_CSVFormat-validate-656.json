{
  "origin": "codeshovel",
  "repositoryName": "Csv-10b",
  "repositoryPath": "/tmp/Csv-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "validate",
  "functionId": "validate",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
  "functionStartLine": 656,
  "functionEndLine": 686,
  "numCommitsSeen": 174,
  "timeTaken": 3026,
  "changeHistory": [
    "35d101c2adecd51730f88e43941d85d16034886f",
    "fcc0d15c7b541191f14b0861d945cbbeba770d10",
    "f881372d92d4bf07848f0b9ccae99488d30ab8eb",
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
    "961cce294c5c1ad222965501e03c2f6bfe9d6935",
    "db11c04d29dd50f4405c51043b40f0d47d15925d",
    "6a34b823c807325bc251ef43c66c307adcd947b8",
    "33c004f5258f7bba447d1ecec96ce468d081c686",
    "6f94c8a3daa2c967542659f7026eda4a3aef6aaf",
    "bdb5842eefc24b52286fa9c1cfe1871a93d30f44",
    "6e57364216b78bca031f764b8d0a46494ba27b46",
    "a50d473a3bd44b84281a5d94432bf7e812472b68",
    "f074aeedfe62c388b57c0e8f490897d444d59b30",
    "f342cb2caf9ab9d9d74625a5244b29cfce181e67",
    "03a6b5031938b652bcc0f12dfba6713eea954578",
    "ae47fb8432095e48b8e754c767bb9037dfa5c5fa",
    "e331df694cfb3279cf4e5e4aea7fffa7ade099a8",
    "50e2719bb646870dc08dd71f2bc2314ce46def76",
    "5e7945e1ceeb6cce60e3da5caf4d57f7bf531689",
    "93fc1f9363d911cb0a974f993d9266a89a63c41e",
    "bf06bed9b8905ccf5409179263707074167ccfc4",
    "a65806a126d71477b3538b571c45f27de054ff84"
  ],
  "changeHistoryShort": {
    "35d101c2adecd51730f88e43941d85d16034886f": "Ybodychange",
    "fcc0d15c7b541191f14b0861d945cbbeba770d10": "Ybodychange",
    "f881372d92d4bf07848f0b9ccae99488d30ab8eb": "Ybodychange",
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8": "Ymultichange(Ymodifierchange,Yformatchange)",
    "961cce294c5c1ad222965501e03c2f6bfe9d6935": "Yformatchange",
    "db11c04d29dd50f4405c51043b40f0d47d15925d": "Yformatchange",
    "6a34b823c807325bc251ef43c66c307adcd947b8": "Ymultichange(Ymodifierchange,Yformatchange)",
    "33c004f5258f7bba447d1ecec96ce468d081c686": "Ybodychange",
    "6f94c8a3daa2c967542659f7026eda4a3aef6aaf": "Ybodychange",
    "bdb5842eefc24b52286fa9c1cfe1871a93d30f44": "Ybodychange",
    "6e57364216b78bca031f764b8d0a46494ba27b46": "Ybodychange",
    "a50d473a3bd44b84281a5d94432bf7e812472b68": "Ybodychange",
    "f074aeedfe62c388b57c0e8f490897d444d59b30": "Ybodychange",
    "f342cb2caf9ab9d9d74625a5244b29cfce181e67": "Ybodychange",
    "03a6b5031938b652bcc0f12dfba6713eea954578": "Ybodychange",
    "ae47fb8432095e48b8e754c767bb9037dfa5c5fa": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "e331df694cfb3279cf4e5e4aea7fffa7ade099a8": "Ybodychange",
    "50e2719bb646870dc08dd71f2bc2314ce46def76": "Ybodychange",
    "5e7945e1ceeb6cce60e3da5caf4d57f7bf531689": "Yformatchange",
    "93fc1f9363d911cb0a974f993d9266a89a63c41e": "Yformatchange",
    "bf06bed9b8905ccf5409179263707074167ccfc4": "Yformatchange",
    "a65806a126d71477b3538b571c45f27de054ff84": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35d101c2adecd51730f88e43941d85d16034886f": {
      "type": "Ybodychange",
      "commitMessage": "CSV-114 CSVFormat constructor should reject a header array with duplicate entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593076 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/14, 10:27 AM",
      "commitName": "35d101c2adecd51730f88e43941d85d16034886f",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "5/6/14, 11:37 AM",
      "commitNameOld": "692a1e362dfab949006d3419d1addbfe12552c73",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 641,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,27 +1,20 @@\n void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n-    if (header !\u003d null) {\n-        final Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n-        set.addAll(Arrays.asList(header));\n-        if (set.size() !\u003d header.length) {\n-            throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n-        }\n-    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fcc0d15c7b541191f14b0861d945cbbeba770d10": {
      "type": "Ybodychange",
      "commitMessage": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/13, 7:04 PM",
      "commitName": "fcc0d15c7b541191f14b0861d945cbbeba770d10",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/31/13, 10:43 AM",
      "commitNameOld": "c0d91d205d5494dc402dab13edcc89679aecd547",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n    if (header !\u003d null) {\n        final Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n        set.addAll(Arrays.asList(header));\n        if (set.size() !\u003d header.length) {\n            throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 502,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,27 +1,27 @@\n void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n     if (header !\u003d null) {\n-        Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n+        final Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n         set.addAll(Arrays.asList(header));\n         if (set.size() !\u003d header.length) {\n             throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f881372d92d4bf07848f0b9ccae99488d30ab8eb": {
      "type": "Ybodychange",
      "commitMessage": "Validate that headers do not contain duplicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508618 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 1:44 PM",
      "commitName": "f881372d92d4bf07848f0b9ccae99488d30ab8eb",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 1:36 PM",
      "commitNameOld": "1533facb1986631465467af2475ae9df1ed5a8be",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n    if (header !\u003d null) {\n        Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n        set.addAll(Arrays.asList(header));\n        if (set.size() !\u003d header.length) {\n            throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 506,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,20 +1,27 @@\n void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n+    if (header !\u003d null) {\n+        Set\u003cString\u003e set \u003d new HashSet\u003cString\u003e(header.length);\n+        set.addAll(Arrays.asList(header));\n+        if (set.size() !\u003d header.length) {\n+            throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));\n+        }\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "75f39a81a77b3680c21cd3f810da62ebbe9944b8": {
      "type": "Ymultichange(Ymodifierchange,Yformatchange)",
      "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 7:42 AM",
      "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 7:42 AM",
          "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/24/13, 3:18 PM",
          "commitNameOld": "1579c1786a3100a0a71d5efecd45c914ca530cce",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 35.68,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 495,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,20 +1,20 @@\n-private void validate() throws IllegalStateException {\n+void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 7:42 AM",
          "commitName": "75f39a81a77b3680c21cd3f810da62ebbe9944b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/24/13, 3:18 PM",
          "commitNameOld": "1579c1786a3100a0a71d5efecd45c914ca530cce",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 35.68,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 495,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,20 +1,20 @@\n-private void validate() throws IllegalStateException {\n+void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "961cce294c5c1ad222965501e03c2f6bfe9d6935": {
      "type": "Yformatchange",
      "commitMessage": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/20/13, 5:39 AM",
      "commitName": "961cce294c5c1ad222965501e03c2f6bfe9d6935",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "3/20/13, 3:23 AM",
      "commitNameOld": "2018c0c41f569f8eb7f694ac9e3868675b307c1b",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 581,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "",
      "extendedDetails": {}
    },
    "db11c04d29dd50f4405c51043b40f0d47d15925d": {
      "type": "Yformatchange",
      "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/17/12, 10:00 AM",
      "commitName": "db11c04d29dd50f4405c51043b40f0d47d15925d",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "11/15/12, 2:43 PM",
      "commitNameOld": "eeeafa5faa784cdf632f6235a987104c7355bb32",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 1.8,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 571,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6a34b823c807325bc251ef43c66c307adcd947b8": {
      "type": "Ymultichange(Ymodifierchange,Yformatchange)",
      "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/12, 1:50 PM",
      "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/14/12, 1:50 PM",
          "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/16/12, 5:09 PM",
          "commitNameOld": "d266471b4cdc2bdf7529747534f35c7b78fca6b0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 28.9,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 450,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,20 +1,20 @@\n-void validate() throws IllegalStateException {\n+private void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/14/12, 1:50 PM",
          "commitName": "6a34b823c807325bc251ef43c66c307adcd947b8",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/16/12, 5:09 PM",
          "commitNameOld": "d266471b4cdc2bdf7529747534f35c7b78fca6b0",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 28.9,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 450,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,20 +1,20 @@\n-void validate() throws IllegalStateException {\n+private void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "33c004f5258f7bba447d1ecec96ce468d081c686": {
      "type": "Ybodychange",
      "commitMessage": "Invalid use of \u003d\u003d to compare Character equality; add tests to detect this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398357 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/15/12, 9:04 AM",
      "commitName": "33c004f5258f7bba447d1ecec96ce468d081c686",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "10/15/12, 9:02 AM",
      "commitNameOld": "6f94c8a3daa2c967542659f7026eda4a3aef6aaf",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 194,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,20 +1,20 @@\n void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n-    if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n+    if (quoteChar !\u003d null \u0026\u0026 quoteChar.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n-    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n+    if (escape !\u003d null \u0026\u0026 escape.equals(commentStart)) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6f94c8a3daa2c967542659f7026eda4a3aef6aaf": {
      "type": "Ybodychange",
      "commitMessage": "Explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/15/12, 9:02 AM",
      "commitName": "6f94c8a3daa2c967542659f7026eda4a3aef6aaf",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "10/15/12, 8:53 AM",
      "commitNameOld": "7c770e0b53235e90a216ae3b214048b765cda0c0",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 194,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,20 +1,20 @@\n void validate() throws IllegalStateException {\n-    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar) {\n+    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar.charValue()) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n-    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n+    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape.charValue()) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n-    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n+    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart.charValue()) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n         throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bdb5842eefc24b52286fa9c1cfe1871a93d30f44": {
      "type": "Ybodychange",
      "commitMessage": "Validation fails if no quotes mode set but no escape character is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/14/12, 4:22 PM",
      "commitName": "bdb5842eefc24b52286fa9c1cfe1871a93d30f44",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:54 PM",
      "commitNameOld": "79eb6e039273f706828a63c1821ccc993bba3902",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.73,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 180,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,17 +1,20 @@\n void validate() throws IllegalStateException {\n     if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar) {\n         throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n+    if (escape \u003d\u003d null \u0026\u0026 quotePolicy \u003d\u003d Quote.NONE) {\n+        throw new IllegalStateException(\"No quotes mode set but no escape character is set\");\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6e57364216b78bca031f764b8d0a46494ba27b46": {
      "type": "Ybodychange",
      "commitMessage": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:56 PM",
      "commitName": "6e57364216b78bca031f764b8d0a46494ba27b46",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 9:53 PM",
      "commitNameOld": "0030e1a9a23972e0c7dcc6caf21d753aa5dbf737",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar) {\n        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 180,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,17 +1,17 @@\n void validate() throws IllegalStateException {\n-    if (encapsulator !\u003d null \u0026\u0026 delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n+    if (quoteChar !\u003d null \u0026\u0026 delimiter \u003d\u003d quoteChar) {\n+        throw new IllegalStateException(\"The quoteChar character and the delimiter cannot be the same (\u0027\" + quoteChar + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n-    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n-        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+    if (quoteChar !\u003d null \u0026\u0026 quoteChar \u003d\u003d commentStart) {\n+        throw new IllegalStateException(\"The comment start character and the quoteChar cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a50d473a3bd44b84281a5d94432bf7e812472b68": {
      "type": "Ybodychange",
      "commitMessage": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (\u0027,\u0027) seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397930 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 12:15 PM",
      "commitName": "a50d473a3bd44b84281a5d94432bf7e812472b68",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 12:05 PM",
      "commitNameOld": "f074aeedfe62c388b57c0e8f490897d444d59b30",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (encapsulator !\u003d null \u0026\u0026 delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 175,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,17 +1,17 @@\n void validate() throws IllegalStateException {\n-    if (delimiter \u003d\u003d encapsulator) {\n+    if (encapsulator !\u003d null \u0026\u0026 delimiter \u003d\u003d encapsulator) {\n         throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n     }\n-    if (delimiter \u003d\u003d escape) {\n+    if (escape !\u003d null \u0026\u0026 delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n-    if (delimiter \u003d\u003d commentStart) {\n+    if (commentStart !\u003d null \u0026\u0026 delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f074aeedfe62c388b57c0e8f490897d444d59b30": {
      "type": "Ybodychange",
      "commitMessage": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (\u0027,\u0027) seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 12:05 PM",
      "commitName": "f074aeedfe62c388b57c0e8f490897d444d59b30",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 11:58 AM",
      "commitNameOld": "df592767fc0b0a4c4528256198ced0c4763e9e66",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 175,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,20 +1,17 @@\n void validate() throws IllegalStateException {\n-    if (delimiter \u003d\u003d null) {\n-        throw new IllegalStateException(\"The delimiter character cannot be null\");\n-    }\n     if (delimiter \u003d\u003d encapsulator) {\n         throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f342cb2caf9ab9d9d74625a5244b29cfce181e67": {
      "type": "Ybodychange",
      "commitMessage": "Validation checks the delimiter character cannot be null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:38 AM",
      "commitName": "f342cb2caf9ab9d9d74625a5244b29cfce181e67",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 9:11 AM",
      "commitNameOld": "03a6b5031938b652bcc0f12dfba6713eea954578",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d null) {\n        throw new IllegalStateException(\"The delimiter character cannot be null\");\n    }\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 175,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,17 +1,20 @@\n void validate() throws IllegalStateException {\n+    if (delimiter \u003d\u003d null) {\n+        throw new IllegalStateException(\"The delimiter character cannot be null\");\n+    }\n     if (delimiter \u003d\u003d encapsulator) {\n         throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "03a6b5031938b652bcc0f12dfba6713eea954578": {
      "type": "Ybodychange",
      "commitMessage": "Add missing single-quote\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:11 AM",
      "commitName": "03a6b5031938b652bcc0f12dfba6713eea954578",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "10/13/12, 9:10 AM",
      "commitNameOld": "933a950c88c402752b189fe3890cd8aef1536fd1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 175,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,17 +1,17 @@\n void validate() throws IllegalStateException {\n     if (delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n+        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d escape) {\n         throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ae47fb8432095e48b8e754c767bb9037dfa5c5fa": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:08 AM",
      "commitName": "ae47fb8432095e48b8e754c767bb9037dfa5c5fa",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/13/12, 9:08 AM",
          "commitName": "ae47fb8432095e48b8e754c767bb9037dfa5c5fa",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/13/12, 9:03 AM",
          "commitNameOld": "e331df694cfb3279cf4e5e4aea7fffa7ade099a8",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 175,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,17 +1,17 @@\n-void validate() throws IllegalArgumentException {\n+void validate() throws IllegalStateException {\n     if (delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n+        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n     }\n     if (delimiter \u003d\u003d escape) {\n-        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n+        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalArgumentException]",
            "newValue": "[IllegalStateException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/13/12, 9:08 AM",
          "commitName": "ae47fb8432095e48b8e754c767bb9037dfa5c5fa",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/13/12, 9:03 AM",
          "commitNameOld": "e331df694cfb3279cf4e5e4aea7fffa7ade099a8",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 175,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,17 +1,17 @@\n-void validate() throws IllegalArgumentException {\n+void validate() throws IllegalStateException {\n     if (delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n+        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n     }\n     if (delimiter \u003d\u003d escape) {\n-        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n+        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/13/12, 9:08 AM",
          "commitName": "ae47fb8432095e48b8e754c767bb9037dfa5c5fa",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/13/12, 9:03 AM",
          "commitNameOld": "e331df694cfb3279cf4e5e4aea7fffa7ade099a8",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void validate() throws IllegalStateException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 175,
          "functionName": "validate",
          "functionAnnotation": "",
          "functionDoc": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,17 +1,17 @@\n-void validate() throws IllegalArgumentException {\n+void validate() throws IllegalStateException {\n     if (delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n+        throw new IllegalStateException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n     }\n     if (delimiter \u003d\u003d escape) {\n-        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n+        throw new IllegalStateException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n+        throw new IllegalStateException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
            "newValue": "Verifies the consistency of the parameters and throws an IllegalStateException if necessary.\n\n@throws IllegalStateException\n"
          }
        }
      ]
    },
    "e331df694cfb3279cf4e5e4aea7fffa7ade099a8": {
      "type": "Ybodychange",
      "commitMessage": "Use the single quote char to delineate a char in error messages. Remove a trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397872 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:03 AM",
      "commitName": "e331df694cfb3279cf4e5e4aea7fffa7ade099a8",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/12/12, 11:27 PM",
      "commitNameOld": "50e2719bb646870dc08dd71f2bc2314ce46def76",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.4,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 173,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
      "diff": "@@ -1,17 +1,17 @@\n void validate() throws IllegalArgumentException {\n     if (delimiter \u003d\u003d encapsulator) {\n-        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n+        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\u0027\" + encapsulator + \")\");\n     }\n     if (delimiter \u003d\u003d escape) {\n-        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n+        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\u0027\" + escape + \"\u0027)\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n     if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n-        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\u0027\" + commentStart + \"\u0027)\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "50e2719bb646870dc08dd71f2bc2314ce46def76": {
      "type": "Ybodychange",
      "commitMessage": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/12, 11:27 PM",
      "commitName": "50e2719bb646870dc08dd71f2bc2314ce46def76",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/12/12, 10:39 PM",
      "commitNameOld": "bb7d696218902c8b0709be066032162db588628d",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 173,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
      "diff": "@@ -1,17 +1,17 @@\n void validate() throws IllegalArgumentException {\n     if (delimiter \u003d\u003d encapsulator) {\n         throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n     }\n     if (delimiter \u003d\u003d escape) {\n         throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n     }\n     if (delimiter \u003d\u003d commentStart) {\n         throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n     }\n-    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n+    if (encapsulator !\u003d null \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n         throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n     }\n-    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n+    if (escape !\u003d null \u0026\u0026 escape \u003d\u003d commentStart) {\n         throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5e7945e1ceeb6cce60e3da5caf4d57f7bf531689": {
      "type": "Yformatchange",
      "commitMessage": "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 9:14 PM",
      "commitName": "5e7945e1ceeb6cce60e3da5caf4d57f7bf531689",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 2:09 PM",
      "commitNameOld": "57a1aef278cb457ba80725508756f5cf053da170",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.3,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 183,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "93fc1f9363d911cb0a974f993d9266a89a63c41e": {
      "type": "Yformatchange",
      "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 12:47 PM",
      "commitName": "93fc1f9363d911cb0a974f993d9266a89a63c41e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:40 PM",
      "commitNameOld": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 183,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "bf06bed9b8905ccf5409179263707074167ccfc4": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 12:40 PM",
      "commitName": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:35 PM",
      "commitNameOld": "6a132b40abbefb97ff58528eab8a8835fb353df1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 183,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a65806a126d71477b3538b571c45f27de054ff84": {
      "type": "Yintroduced",
      "commitMessage": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/7/12, 4:00 PM",
      "commitName": "a65806a126d71477b3538b571c45f27de054ff84",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,17 @@\n+void validate() throws IllegalArgumentException {\n+    if (delimiter \u003d\u003d encapsulator) {\n+        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n+    }\n+    if (delimiter \u003d\u003d escape) {\n+        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n+    }\n+    if (delimiter \u003d\u003d commentStart) {\n+        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+    }\n+    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n+        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+    }\n+    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n+        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void validate() throws IllegalArgumentException {\n    if (delimiter \u003d\u003d encapsulator) {\n        throw new IllegalArgumentException(\"The encapsulator character and the delimiter cannot be the same (\\\"\" + encapsulator + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d escape) {\n        throw new IllegalArgumentException(\"The escape character and the delimiter cannot be the same (\\\"\" + escape + \"\\\")\");\n    }\n    if (delimiter \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the delimiter cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (encapsulator !\u003d DISABLED \u0026\u0026 encapsulator \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start character and the encapsulator cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n    if (escape !\u003d DISABLED \u0026\u0026 escape \u003d\u003d commentStart) {\n        throw new IllegalArgumentException(\"The comment start and the escape character cannot be the same (\\\"\" + commentStart + \"\\\")\");\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 143,
      "functionName": "validate",
      "functionAnnotation": "",
      "functionDoc": "Verifies the consistency of the parameters and throws an IllegalArgumentException if necessary.\n"
    }
  }
}