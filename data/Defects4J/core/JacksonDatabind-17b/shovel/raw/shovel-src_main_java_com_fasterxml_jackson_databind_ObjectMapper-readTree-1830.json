{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectMapper.java",
  "functionName": "readTree",
  "functionId": "readTree___content-String",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
  "functionAnnotation": "",
  "functionDoc": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n",
  "functionStartLine": 1830,
  "functionEndLine": 1835,
  "numCommitsSeen": 136,
  "timeTaken": 10388,
  "changeHistory": [
    "d06026f73b52bafc7cc1a44ae86e5405d97f8350",
    "6d3fc10bcaed6834823eed08d1b8990b71590e5a",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "d06026f73b52bafc7cc1a44ae86e5405d97f8350": "Ybodychange",
    "6d3fc10bcaed6834823eed08d1b8990b71590e5a": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d06026f73b52bafc7cc1a44ae86e5405d97f8350": {
      "type": "Ybodychange",
      "commitMessage": "Fix compilation problem (due to Collections.emptyIterator()), upgrade to \u0027createParser\u0027 etc (from \u0027createJsonParser\u0027)\n",
      "commitDate": "11/15/12, 6:18 PM",
      "commitName": "d06026f73b52bafc7cc1a44ae86e5405d97f8350",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/12/12, 4:33 PM",
      "commitNameOld": "5b772b1f1e97c80c394765e8f4443ac0f9dea637",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 3.07,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonNode readTree(String content) throws IOException, JsonProcessingException {\n    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createParser(content), JSON_NODE_TYPE);\n    return (n \u003d\u003d null) ? NullNode.instance : n;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 1655,
      "functionName": "readTree",
      "functionAnnotation": "",
      "functionDoc": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n",
      "diff": "@@ -1,4 +1,4 @@\n public JsonNode readTree(String content) throws IOException, JsonProcessingException {\n-    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createJsonParser(content), JSON_NODE_TYPE);\n+    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createParser(content), JSON_NODE_TYPE);\n     return (n \u003d\u003d null) ? NullNode.instance : n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6d3fc10bcaed6834823eed08d1b8990b71590e5a": {
      "type": "Ydocchange",
      "commitMessage": "Add back support for deserializing JsonLocation (using ValueInstiator, for added style points)\n",
      "commitDate": "12/28/11, 12:52 AM",
      "commitName": "6d3fc10bcaed6834823eed08d1b8990b71590e5a",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/24/11, 10:07 PM",
      "commitNameOld": "c3fbb3ad1e0b83ccc56a876fe9c7a2adfd4dd210",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 3.11,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonNode readTree(String content) throws IOException, JsonProcessingException {\n    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createJsonParser(content), JSON_NODE_TYPE);\n    return (n \u003d\u003d null) ? NullNode.instance : n;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 1433,
      "functionName": "readTree",
      "functionAnnotation": "",
      "functionDoc": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n@since 1.3\n",
        "newValue": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,4 @@\n+public JsonNode readTree(String content) throws IOException, JsonProcessingException {\n+    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createJsonParser(content), JSON_NODE_TYPE);\n+    return (n \u003d\u003d null) ? NullNode.instance : n;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JsonNode readTree(String content) throws IOException, JsonProcessingException {\n    JsonNode n \u003d (JsonNode) _readMapAndClose(_jsonFactory.createJsonParser(content), JSON_NODE_TYPE);\n    return (n \u003d\u003d null) ? NullNode.instance : n;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 1540,
      "functionName": "readTree",
      "functionAnnotation": "",
      "functionDoc": "Method to deserialize JSON content as tree expressed using set of {@link JsonNode} instances.\nReturns root of the resulting tree (where root can consist of just a single node if the current\nevent is a value event, not container).\n\n@param content JSON content to parse to build the JSON tree.\n@since 1.3\n"
    }
  }
}