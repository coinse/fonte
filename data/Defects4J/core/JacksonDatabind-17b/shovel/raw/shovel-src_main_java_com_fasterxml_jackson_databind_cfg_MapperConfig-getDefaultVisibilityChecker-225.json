{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MapperConfig.java",
  "functionName": "getDefaultVisibilityChecker",
  "functionId": "getDefaultVisibilityChecker",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
  "functionAnnotation": "",
  "functionDoc": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n",
  "functionStartLine": 225,
  "functionEndLine": 227,
  "numCommitsSeen": 26,
  "timeTaken": 741,
  "changeHistory": [
    "c733a7f1e744121343da2851df27b581aab79e68",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "c733a7f1e744121343da2851df27b581aab79e68": "Yfilerename",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c733a7f1e744121343da2851df27b581aab79e68": {
      "type": "Yfilerename",
      "commitMessage": "Yet more config refactoring\n",
      "commitDate": "1/18/12, 8:25 PM",
      "commitName": "c733a7f1e744121343da2851df27b581aab79e68",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/18/12, 8:24 PM",
      "commitNameOld": "4beb90c7e1e42df733c8514ec38395d556c2d574",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public VisibilityChecker\u003c?\u003e getDefaultVisibilityChecker() {\n    return _base.getVisibilityChecker();\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
      "functionStartLine": 341,
      "functionName": "getDefaultVisibilityChecker",
      "functionAnnotation": "",
      "functionDoc": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java"
      }
    },
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": {
      "type": "Ydocchange",
      "commitMessage": "Last pieces of the first round of refactoring: again compiles, may work\n",
      "commitDate": "12/23/11, 5:38 PM",
      "commitName": "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/11, 12:31 AM",
      "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public VisibilityChecker\u003c?\u003e getDefaultVisibilityChecker() {\n    return _base.getVisibilityChecker();\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
      "functionStartLine": 334,
      "functionName": "getDefaultVisibilityChecker",
      "functionAnnotation": "",
      "functionDoc": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n\n@since 1.5\n",
        "newValue": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,3 @@\n+public VisibilityChecker\u003c?\u003e getDefaultVisibilityChecker() {\n+    return _base.getVisibilityChecker();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public VisibilityChecker\u003c?\u003e getDefaultVisibilityChecker() {\n    return _base.getVisibilityChecker();\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
      "functionStartLine": 433,
      "functionName": "getDefaultVisibilityChecker",
      "functionAnnotation": "",
      "functionDoc": "Accessor for object used for determining whether specific property elements\n(method, constructors, fields) can be auto-detected based on\ntheir visibility (access modifiers). Can be changed to allow\ndifferent minimum visibility levels for auto-detection. Note\nthat this is the global handler; individual types (classes)\ncan further override active checker used (using\n{@link JsonAutoDetect} annotation)\n\n@since 1.5\n"
    }
  }
}