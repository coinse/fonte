{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JacksonAnnotationIntrospector.java",
  "functionName": "findNameForDeserialization",
  "functionId": "findNameForDeserialization___a-Annotated",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 658,
  "functionEndLine": 689,
  "numCommitsSeen": 60,
  "timeTaken": 1996,
  "changeHistory": [
    "d0b0273b9a04649cbc044ac092cc0eab0dc698f9",
    "7a27bc22bb530765b187d2835b463f0df194cbd8",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd"
  ],
  "changeHistoryShort": {
    "d0b0273b9a04649cbc044ac092cc0eab0dc698f9": "Ybodychange",
    "7a27bc22bb530765b187d2835b463f0df194cbd8": "Ybodychange",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0b0273b9a04649cbc044ac092cc0eab0dc698f9": {
      "type": "Ybodychange",
      "commitMessage": "Impelment #442\n",
      "commitDate": "4/22/14, 7:17 PM",
      "commitName": "d0b0273b9a04649cbc044ac092cc0eab0dc698f9",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/13/14, 10:47 PM",
      "commitNameOld": "be7d645c8c460307c5329ea5b367fbeefa294992",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 8.85,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic PropertyName findNameForDeserialization(Annotated a) {\n    String name;\n    JsonSetter js \u003d a.getAnnotation(JsonSetter.class);\n    if (js !\u003d null) {\n        name \u003d js.value();\n    } else {\n        JsonProperty pann \u003d a.getAnnotation(JsonProperty.class);\n        if (pann !\u003d null) {\n            name \u003d pann.value();\n        } else if (a.hasAnnotation(JsonDeserialize.class) || a.hasAnnotation(JsonView.class) || a.hasAnnotation(JsonUnwrapped.class) || a.hasAnnotation(JsonBackReference.class) || a.hasAnnotation(JsonManagedReference.class)) {\n            name \u003d \"\";\n        } else {\n            return null;\n        }\n    }\n    if (name.length() \u003d\u003d 0) {\n        return PropertyName.USE_DEFAULT;\n    }\n    return new PropertyName(name);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 717,
      "functionName": "findNameForDeserialization",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,21 @@\n @Override\n public PropertyName findNameForDeserialization(Annotated a) {\n     String name;\n     JsonSetter js \u003d a.getAnnotation(JsonSetter.class);\n     if (js !\u003d null) {\n         name \u003d js.value();\n     } else {\n         JsonProperty pann \u003d a.getAnnotation(JsonProperty.class);\n         if (pann !\u003d null) {\n             name \u003d pann.value();\n-        } else if (a.hasAnnotation(JsonDeserialize.class) || a.hasAnnotation(JsonView.class) || a.hasAnnotation(JsonBackReference.class) || a.hasAnnotation(JsonManagedReference.class)) {\n+        } else if (a.hasAnnotation(JsonDeserialize.class) || a.hasAnnotation(JsonView.class) || a.hasAnnotation(JsonUnwrapped.class) || a.hasAnnotation(JsonBackReference.class) || a.hasAnnotation(JsonManagedReference.class)) {\n             name \u003d \"\";\n         } else {\n             return null;\n         }\n     }\n     if (name.length() \u003d\u003d 0) {\n         return PropertyName.USE_DEFAULT;\n     }\n     return new PropertyName(name);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7a27bc22bb530765b187d2835b463f0df194cbd8": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring to eliminate deprecated introspection methods\n",
      "commitDate": "12/30/13, 7:34 PM",
      "commitName": "7a27bc22bb530765b187d2835b463f0df194cbd8",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "10/21/13, 8:37 PM",
      "commitNameOld": "ddb9e39a4924c40d919a6fd04ada1d6f7e11dd4a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 70.0,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic PropertyName findNameForDeserialization(Annotated a) {\n    String name;\n    JsonSetter js \u003d a.getAnnotation(JsonSetter.class);\n    if (js !\u003d null) {\n        name \u003d js.value();\n    } else {\n        JsonProperty pann \u003d a.getAnnotation(JsonProperty.class);\n        if (pann !\u003d null) {\n            name \u003d pann.value();\n        } else if (a.hasAnnotation(JsonDeserialize.class) || a.hasAnnotation(JsonView.class) || a.hasAnnotation(JsonBackReference.class) || a.hasAnnotation(JsonManagedReference.class)) {\n            name \u003d \"\";\n        } else {\n            return null;\n        }\n    }\n    if (name.length() \u003d\u003d 0) {\n        return PropertyName.USE_DEFAULT;\n    }\n    return new PropertyName(name);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 690,
      "functionName": "findNameForDeserialization",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,21 @@\n @Override\n public PropertyName findNameForDeserialization(Annotated a) {\n     String name;\n-    if (a instanceof AnnotatedField) {\n-        name \u003d findDeserializationName((AnnotatedField) a);\n-    } else if (a instanceof AnnotatedMethod) {\n-        name \u003d findDeserializationName((AnnotatedMethod) a);\n-    } else if (a instanceof AnnotatedParameter) {\n-        name \u003d findDeserializationName((AnnotatedParameter) a);\n+    JsonSetter js \u003d a.getAnnotation(JsonSetter.class);\n+    if (js !\u003d null) {\n+        name \u003d js.value();\n     } else {\n-        name \u003d null;\n-    }\n-    if (name !\u003d null) {\n-        if (name.length() \u003d\u003d 0) {\n-            return PropertyName.USE_DEFAULT;\n+        JsonProperty pann \u003d a.getAnnotation(JsonProperty.class);\n+        if (pann !\u003d null) {\n+            name \u003d pann.value();\n+        } else if (a.hasAnnotation(JsonDeserialize.class) || a.hasAnnotation(JsonView.class) || a.hasAnnotation(JsonBackReference.class) || a.hasAnnotation(JsonManagedReference.class)) {\n+            name \u003d \"\";\n+        } else {\n+            return null;\n         }\n-        return new PropertyName(name);\n     }\n-    return null;\n+    if (name.length() \u003d\u003d 0) {\n+        return PropertyName.USE_DEFAULT;\n+    }\n+    return new PropertyName(name);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": {
      "type": "Yintroduced",
      "commitMessage": "Complete [Issue#69] implementation\n",
      "commitDate": "9/4/12, 10:10 PM",
      "commitName": "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,20 @@\n+@Override\n+public PropertyName findNameForDeserialization(Annotated a) {\n+    String name;\n+    if (a instanceof AnnotatedField) {\n+        name \u003d findDeserializationName((AnnotatedField) a);\n+    } else if (a instanceof AnnotatedMethod) {\n+        name \u003d findDeserializationName((AnnotatedMethod) a);\n+    } else if (a instanceof AnnotatedParameter) {\n+        name \u003d findDeserializationName((AnnotatedParameter) a);\n+    } else {\n+        name \u003d null;\n+    }\n+    if (name !\u003d null) {\n+        if (name.length() \u003d\u003d 0) {\n+            return PropertyName.USE_DEFAULT;\n+        }\n+        return new PropertyName(name);\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic PropertyName findNameForDeserialization(Annotated a) {\n    String name;\n    if (a instanceof AnnotatedField) {\n        name \u003d findDeserializationName((AnnotatedField) a);\n    } else if (a instanceof AnnotatedMethod) {\n        name \u003d findDeserializationName((AnnotatedMethod) a);\n    } else if (a instanceof AnnotatedParameter) {\n        name \u003d findDeserializationName((AnnotatedParameter) a);\n    } else {\n        name \u003d null;\n    }\n    if (name !\u003d null) {\n        if (name.length() \u003d\u003d 0) {\n            return PropertyName.USE_DEFAULT;\n        }\n        return new PropertyName(name);\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 655,
      "functionName": "findNameForDeserialization",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}