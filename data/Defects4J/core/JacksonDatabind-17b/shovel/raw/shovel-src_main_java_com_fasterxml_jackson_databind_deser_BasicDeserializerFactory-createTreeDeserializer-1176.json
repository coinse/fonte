{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicDeserializerFactory.java",
  "functionName": "createTreeDeserializer",
  "functionId": "createTreeDeserializer___config-DeserializationConfig__nodeType-JavaType__beanDesc-BeanDescription",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 1176,
  "functionEndLine": 1189,
  "numCommitsSeen": 178,
  "timeTaken": 6325,
  "changeHistory": [
    "d6e90d0259da622ddc593215361acdec3950bfe8",
    "e5d31900983a1e187c1fe5eb737353ddb74909d0",
    "857ddd27198f3dd9fb95800b3728ea26fa47130b",
    "bf355caa0821e58968df3bf6c12f612639224e47",
    "f0b28a96644b3dc22c997a05975de335dfed0418",
    "9e5042210349cbdac5b55b220fed7962fcaa63be",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "d6e90d0259da622ddc593215361acdec3950bfe8": "Yparameterchange",
    "e5d31900983a1e187c1fe5eb737353ddb74909d0": "Ybodychange",
    "857ddd27198f3dd9fb95800b3728ea26fa47130b": "Ybodychange",
    "bf355caa0821e58968df3bf6c12f612639224e47": "Yparameterchange",
    "f0b28a96644b3dc22c997a05975de335dfed0418": "Yparameterchange",
    "9e5042210349cbdac5b55b220fed7962fcaa63be": "Yparameterchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6e90d0259da622ddc593215361acdec3950bfe8": {
      "type": "Yparameterchange",
      "commitMessage": "Remove BeanProperty refererence from BeanDeserializer\n",
      "commitDate": "1/30/12, 7:15 PM",
      "commitName": "d6e90d0259da622ddc593215361acdec3950bfe8",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/30/12, 6:25 PM",
      "commitNameOld": "bddad95e819c264eb6f2b6bc993801048825e60a",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 1035,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n-public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n     JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, nodeType-JavaType, beanDesc-BeanDescription, property-BeanProperty]",
        "newValue": "[config-DeserializationConfig, nodeType-JavaType, beanDesc-BeanDescription]"
      }
    },
    "e5d31900983a1e187c1fe5eb737353ddb74909d0": {
      "type": "Ybodychange",
      "commitMessage": "Remove BeanProperty from being passed to Deserializers\n",
      "commitDate": "1/30/12, 3:55 PM",
      "commitName": "e5d31900983a1e187c1fe5eb737353ddb74909d0",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/30/12, 9:05 AM",
      "commitNameOld": "082511bd55135d237757dbee3eb7246e6b786f27",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 1035,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n-    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc, property);\n+    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "857ddd27198f3dd9fb95800b3728ea26fa47130b": {
      "type": "Ybodychange",
      "commitMessage": "Cosmetic refactoring: making Deserializers callbacks more similar, passing same common args\n",
      "commitDate": "1/24/12, 4:51 PM",
      "commitName": "857ddd27198f3dd9fb95800b3728ea26fa47130b",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 4:19 PM",
      "commitNameOld": "b37ff33bbc7885f21a208bee4f42126468f55d41",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc, property);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 564,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n-    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n+    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, beanDesc, property);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bf355caa0821e58968df3bf6c12f612639224e47": {
      "type": "Yparameterchange",
      "commitMessage": "Yet more refactoring, trying to remove back-refs from DeserializerFactory to context/cache\n",
      "commitDate": "1/24/12, 2:46 PM",
      "commitName": "bf355caa0821e58968df3bf6c12f612639224e47",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 1:27 PM",
      "commitNameOld": "f0b28a96644b3dc22c997a05975de335dfed0418",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 489,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n-public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n+public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n     JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, nodeType-JavaType, property-BeanProperty]",
        "newValue": "[config-DeserializationConfig, nodeType-JavaType, beanDesc-BeanDescription, property-BeanProperty]"
      }
    },
    "f0b28a96644b3dc22c997a05975de335dfed0418": {
      "type": "Yparameterchange",
      "commitMessage": "...\n",
      "commitDate": "1/24/12, 1:27 PM",
      "commitName": "f0b28a96644b3dc22c997a05975de335dfed0418",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 1:02 PM",
      "commitNameOld": "53fb8522b402a409139175cbf867afa924e549f5",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 543,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n-public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerCache p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n+public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n     JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, p-DeserializerCache, nodeType-JavaType, property-BeanProperty]",
        "newValue": "[config-DeserializationConfig, nodeType-JavaType, property-BeanProperty]"
      }
    },
    "9e5042210349cbdac5b55b220fed7962fcaa63be": {
      "type": "Yparameterchange",
      "commitMessage": "Deser refactoring, renaming\n",
      "commitDate": "1/24/12, 11:23 AM",
      "commitName": "9e5042210349cbdac5b55b220fed7962fcaa63be",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 11:00 AM",
      "commitNameOld": "29be671c04f3a90863874234663227dd4568b326",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerCache p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 557,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n-public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerProvider p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n+public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerCache p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n     @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n     JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n     if (custom !\u003d null) {\n         return custom;\n     }\n     return JsonNodeDeserializer.getDeserializer(nodeClass);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, p-DeserializerProvider, nodeType-JavaType, property-BeanProperty]",
        "newValue": "[config-DeserializationConfig, p-DeserializerCache, nodeType-JavaType, property-BeanProperty]"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,9 @@\n+@Override\n+public JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerProvider p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n+    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n+    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n+    if (custom !\u003d null) {\n+        return custom;\n+    }\n+    return JsonNodeDeserializer.getDeserializer(nodeClass);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic JsonDeserializer\u003c?\u003e createTreeDeserializer(DeserializationConfig config, DeserializerProvider p, JavaType nodeType, BeanProperty property) throws JsonMappingException {\n    @SuppressWarnings(\"unchecked\") Class\u003c? extends JsonNode\u003e nodeClass \u003d (Class\u003c? extends JsonNode\u003e) nodeType.getRawClass();\n    JsonDeserializer\u003c?\u003e custom \u003d _findCustomTreeNodeDeserializer(nodeClass, config, property);\n    if (custom !\u003d null) {\n        return custom;\n    }\n    return JsonNodeDeserializer.getDeserializer(nodeClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 507,
      "functionName": "createTreeDeserializer",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}