{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "POJOPropertyBuilder.java",
  "functionName": "_findExplicitNames",
  "functionId": "_findExplicitNames___node-Linked__? extends AnnotatedMember____renamed-Set__PropertyName__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 906,
  "functionEndLine": 925,
  "numCommitsSeen": 84,
  "timeTaken": 2453,
  "changeHistory": [
    "1962410d5a95cc9e359f3b789ff935adf7f315ea",
    "2bd58f5b74ef6d0b90255351a2fa6846d2c9b5f1",
    "a769351d239c09fbe544d18f489e31a078879a44",
    "26a052b3b473f22c6573c2f10aa30625a5cb407f",
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
    "11f78112961d71b2123ffd8aebb650671f1989a9",
    "65c410c0c40724f763e0b4bce2db6d43bf078818",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "1962410d5a95cc9e359f3b789ff935adf7f315ea": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "2bd58f5b74ef6d0b90255351a2fa6846d2c9b5f1": "Ybodychange",
    "a769351d239c09fbe544d18f489e31a078879a44": "Ybodychange",
    "26a052b3b473f22c6573c2f10aa30625a5cb407f": "Ybodychange",
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0": "Ybodychange",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": "Ybodychange",
    "11f78112961d71b2123ffd8aebb650671f1989a9": "Ybodychange",
    "65c410c0c40724f763e0b4bce2db6d43bf078818": "Ymultichange(Yparameterchange,Yreturntypechange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1962410d5a95cc9e359f3b789ff935adf7f315ea": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
      "commitDate": "4/14/14, 8:07 PM",
      "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d new HashSet\u003cPropertyName\u003e();\n        }\n        renamed.add(node.name);\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 852,
          "functionName": "_findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,12 @@\n-private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n+private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         if (!node.isNameExplicit || node.name \u003d\u003d null) {\n             continue;\n         }\n-        PropertyName name \u003d node.name;\n-        if (name.equals(_name)) {\n-            continue;\n-        }\n         if (renamed \u003d\u003d null) {\n-            renamed \u003d node;\n-        } else {\n-            if (!name.equals(renamed.name)) {\n-                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n-            }\n+            renamed \u003d new HashSet\u003cPropertyName\u003e();\n         }\n+        renamed.add(node.name);\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "findRenamed",
            "newValue": "_findExplicitNames"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d new HashSet\u003cPropertyName\u003e();\n        }\n        renamed.add(node.name);\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 852,
          "functionName": "_findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,12 @@\n-private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n+private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         if (!node.isNameExplicit || node.name \u003d\u003d null) {\n             continue;\n         }\n-        PropertyName name \u003d node.name;\n-        if (name.equals(_name)) {\n-            continue;\n-        }\n         if (renamed \u003d\u003d null) {\n-            renamed \u003d node;\n-        } else {\n-            if (!name.equals(renamed.name)) {\n-                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n-            }\n+            renamed \u003d new HashSet\u003cPropertyName\u003e();\n         }\n+        renamed.add(node.name);\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[node-Linked\u003c? extends AnnotatedMember\u003e, renamed-Linked\u003c? extends AnnotatedMember\u003e]",
            "newValue": "[node-Linked\u003c? extends AnnotatedMember\u003e, renamed-Set\u003cPropertyName\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d new HashSet\u003cPropertyName\u003e();\n        }\n        renamed.add(node.name);\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 852,
          "functionName": "_findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,12 @@\n-private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n+private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         if (!node.isNameExplicit || node.name \u003d\u003d null) {\n             continue;\n         }\n-        PropertyName name \u003d node.name;\n-        if (name.equals(_name)) {\n-            continue;\n-        }\n         if (renamed \u003d\u003d null) {\n-            renamed \u003d node;\n-        } else {\n-            if (!name.equals(renamed.name)) {\n-                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n-            }\n+            renamed \u003d new HashSet\u003cPropertyName\u003e();\n         }\n+        renamed.add(node.name);\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Linked\u003c? extends AnnotatedMember\u003e",
            "newValue": "Set\u003cPropertyName\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d new HashSet\u003cPropertyName\u003e();\n        }\n        renamed.add(node.name);\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 852,
          "functionName": "_findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,12 @@\n-private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n+private Set\u003cPropertyName\u003e _findExplicitNames(Linked\u003c? extends AnnotatedMember\u003e node, Set\u003cPropertyName\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         if (!node.isNameExplicit || node.name \u003d\u003d null) {\n             continue;\n         }\n-        PropertyName name \u003d node.name;\n-        if (name.equals(_name)) {\n-            continue;\n-        }\n         if (renamed \u003d\u003d null) {\n-            renamed \u003d node;\n-        } else {\n-            if (!name.equals(renamed.name)) {\n-                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n-            }\n+            renamed \u003d new HashSet\u003cPropertyName\u003e();\n         }\n+        renamed.add(node.name);\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2bd58f5b74ef6d0b90255351a2fa6846d2c9b5f1": {
      "type": "Ybodychange",
      "commitMessage": "add one redundant (for new code) null check back.\n",
      "commitDate": "3/30/14, 9:11 PM",
      "commitName": "2bd58f5b74ef6d0b90255351a2fa6846d2c9b5f1",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/30/14, 9:05 PM",
      "commitNameOld": "a769351d239c09fbe544d18f489e31a078879a44",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n            continue;\n        }\n        PropertyName name \u003d node.name;\n        if (name.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!name.equals(renamed.name)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 772,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n-        if (!node.isNameExplicit) {\n+        if (!node.isNameExplicit || node.name \u003d\u003d null) {\n             continue;\n         }\n         PropertyName name \u003d node.name;\n         if (name.equals(_name)) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!name.equals(renamed.name)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a769351d239c09fbe544d18f489e31a078879a44": {
      "type": "Ybodychange",
      "commitMessage": "Last part of this round of refactoring aimed at passing full PropertyName (not just simple name) via POJO properties collector\n",
      "commitDate": "3/30/14, 9:05 PM",
      "commitName": "a769351d239c09fbe544d18f489e31a078879a44",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/30/14, 8:48 PM",
      "commitNameOld": "26a052b3b473f22c6573c2f10aa30625a5cb407f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit) {\n            continue;\n        }\n        PropertyName name \u003d node.name;\n        if (name.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!name.equals(renamed.name)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 772,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "26a052b3b473f22c6573c2f10aa30625a5cb407f": {
      "type": "Ybodychange",
      "commitMessage": "Trying to refactor property introspection to use PropertyName, to help with namespaced names handling (-\u003e xml)\n",
      "commitDate": "3/30/14, 8:48 PM",
      "commitName": "26a052b3b473f22c6573c2f10aa30625a5cb407f",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/30/14, 7:22 PM",
      "commitNameOld": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit) {\n            continue;\n        }\n        PropertyName name \u003d node.name;\n        if (name.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!name.equals(renamed.name)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 772,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         if (!node.isNameExplicit) {\n             continue;\n         }\n-        String name \u003d node.name;\n-        if (name.equals(_name.getSimpleName())) {\n+        PropertyName name \u003d node.name;\n+        if (name.equals(_name)) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!name.equals(renamed.name)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0": {
      "type": "Ybodychange",
      "commitMessage": "fix a compatibility problem with scala module: can not just drop old semi-internal methods without deprecation\n",
      "commitDate": "3/30/14, 7:22 PM",
      "commitName": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/28/14, 4:09 PM",
      "commitNameOld": "054467f2dce77e1a1f1aa074772d6860fa52b5ca",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 2.13,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        if (!node.isNameExplicit) {\n            continue;\n        }\n        String name \u003d node.name;\n        if (name.equals(_name.getSimpleName())) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!name.equals(renamed.name)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 736,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n-        String name \u003d node.name;\n-        if (name \u003d\u003d null) {\n+        if (!node.isNameExplicit) {\n             continue;\n         }\n+        String name \u003d node.name;\n         if (name.equals(_name.getSimpleName())) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!name.equals(renamed.name)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": {
      "type": "Ybodychange",
      "commitMessage": "Groundwork for addressing renaming of explicit names with PropertyNamingStrategy\n",
      "commitDate": "3/28/14, 3:51 PM",
      "commitName": "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
      "commitAuthor": "Tatu",
      "commitDateOld": "3/14/14, 8:55 PM",
      "commitNameOld": "11f78112961d71b2123ffd8aebb650671f1989a9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 13.79,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        String name \u003d node.name;\n        if (name \u003d\u003d null) {\n            continue;\n        }\n        if (name.equals(_name.getSimpleName())) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!name.equals(renamed.name)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 696,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n-        String explName \u003d node.explicitName;\n-        if (explName \u003d\u003d null) {\n+        String name \u003d node.name;\n+        if (name \u003d\u003d null) {\n             continue;\n         }\n-        if (explName.equals(_name.getSimpleName())) {\n+        if (name.equals(_name.getSimpleName())) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n-            if (!explName.equals(renamed.explicitName)) {\n-                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n+            if (!name.equals(renamed.name)) {\n+                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.name + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.name + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "11f78112961d71b2123ffd8aebb650671f1989a9": {
      "type": "Ybodychange",
      "commitMessage": "Fixed #369\n",
      "commitDate": "3/14/14, 8:55 PM",
      "commitName": "11f78112961d71b2123ffd8aebb650671f1989a9",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "10/18/13, 11:52 PM",
      "commitNameOld": "b009194c5f68fa4d773723113beeed3ae9308b9d",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 146.88,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        String explName \u003d node.explicitName;\n        if (explName \u003d\u003d null) {\n            continue;\n        }\n        if (explName.equals(_name.getSimpleName())) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!explName.equals(renamed.explicitName)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 677,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         String explName \u003d node.explicitName;\n         if (explName \u003d\u003d null) {\n             continue;\n         }\n-        if (explName.equals(_name)) {\n+        if (explName.equals(_name.getSimpleName())) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!explName.equals(renamed.explicitName)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "65c410c0c40724f763e0b4bce2db6d43bf078818": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange)",
      "commitMessage": "refactoring\n",
      "commitDate": "1/27/12, 8:44 PM",
      "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/27/12, 8:44 PM",
          "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.93,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        String explName \u003d node.explicitName;\n        if (explName \u003d\u003d null) {\n            continue;\n        }\n        if (explName.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!explName.equals(renamed.explicitName)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 519,
          "functionName": "findRenamed",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-private Node\u003c? extends AnnotatedMember\u003e findRenamed(Node\u003c? extends AnnotatedMember\u003e node, Node\u003c? extends AnnotatedMember\u003e renamed) {\n+private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         String explName \u003d node.explicitName;\n         if (explName \u003d\u003d null) {\n             continue;\n         }\n         if (explName.equals(_name)) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!explName.equals(renamed.explicitName)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[node-Node\u003c? extends AnnotatedMember\u003e, renamed-Node\u003c? extends AnnotatedMember\u003e]",
            "newValue": "[node-Linked\u003c? extends AnnotatedMember\u003e, renamed-Linked\u003c? extends AnnotatedMember\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/27/12, 8:44 PM",
          "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.93,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        String explName \u003d node.explicitName;\n        if (explName \u003d\u003d null) {\n            continue;\n        }\n        if (explName.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!explName.equals(renamed.explicitName)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 519,
          "functionName": "findRenamed",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-private Node\u003c? extends AnnotatedMember\u003e findRenamed(Node\u003c? extends AnnotatedMember\u003e node, Node\u003c? extends AnnotatedMember\u003e renamed) {\n+private Linked\u003c? extends AnnotatedMember\u003e findRenamed(Linked\u003c? extends AnnotatedMember\u003e node, Linked\u003c? extends AnnotatedMember\u003e renamed) {\n     for (; node !\u003d null; node \u003d node.next) {\n         String explName \u003d node.explicitName;\n         if (explName \u003d\u003d null) {\n             continue;\n         }\n         if (explName.equals(_name)) {\n             continue;\n         }\n         if (renamed \u003d\u003d null) {\n             renamed \u003d node;\n         } else {\n             if (!explName.equals(renamed.explicitName)) {\n                 throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n             }\n         }\n     }\n     return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Node\u003c? extends AnnotatedMember\u003e",
            "newValue": "Linked\u003c? extends AnnotatedMember\u003e"
          }
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,19 @@\n+private Node\u003c? extends AnnotatedMember\u003e findRenamed(Node\u003c? extends AnnotatedMember\u003e node, Node\u003c? extends AnnotatedMember\u003e renamed) {\n+    for (; node !\u003d null; node \u003d node.next) {\n+        String explName \u003d node.explicitName;\n+        if (explName \u003d\u003d null) {\n+            continue;\n+        }\n+        if (explName.equals(_name)) {\n+            continue;\n+        }\n+        if (renamed \u003d\u003d null) {\n+            renamed \u003d node;\n+        } else {\n+            if (!explName.equals(renamed.explicitName)) {\n+                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n+            }\n+        }\n+    }\n+    return renamed;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node\u003c? extends AnnotatedMember\u003e findRenamed(Node\u003c? extends AnnotatedMember\u003e node, Node\u003c? extends AnnotatedMember\u003e renamed) {\n    for (; node !\u003d null; node \u003d node.next) {\n        String explName \u003d node.explicitName;\n        if (explName \u003d\u003d null) {\n            continue;\n        }\n        if (explName.equals(_name)) {\n            continue;\n        }\n        if (renamed \u003d\u003d null) {\n            renamed \u003d node;\n        } else {\n            if (!explName.equals(renamed.explicitName)) {\n                throw new IllegalStateException(\"Conflicting property name definitions: \u0027\" + renamed.explicitName + \"\u0027 (for \" + renamed.value + \") vs \u0027\" + node.explicitName + \"\u0027 (for \" + node.value + \")\");\n            }\n        }\n    }\n    return renamed;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 481,
      "functionName": "findRenamed",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}