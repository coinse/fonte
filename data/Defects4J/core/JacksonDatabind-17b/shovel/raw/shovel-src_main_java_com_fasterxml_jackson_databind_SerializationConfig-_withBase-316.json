{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-17b",
  "repositoryPath": "/tmp/JacksonDatabind-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SerializationConfig.java",
  "functionName": "_withBase",
  "functionId": "_withBase___newBase-BaseSettings",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 316,
  "functionEndLine": 318,
  "numCommitsSeen": 82,
  "timeTaken": 1256,
  "changeHistory": [
    "eafafffda5d43e4ae2b2d6eb3a06c89575224b94",
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
    "8be5ba0d47a94773a40619840fb6381f241757f3",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "eafafffda5d43e4ae2b2d6eb3a06c89575224b94": "Yfilerename",
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": "Yfilerename",
    "8be5ba0d47a94773a40619840fb6381f241757f3": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yannotationchange,Ydocchange)",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": "Ybodychange",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eafafffda5d43e4ae2b2d6eb3a06c89575224b94": {
      "type": "Yfilerename",
      "commitMessage": "Reorg things a bit: SerializationConfig, DeserializationConfig back at main level (so widely used), BeanPropertyDefinition moved under introspect\n",
      "commitDate": "2/3/12, 9:50 PM",
      "commitName": "eafafffda5d43e4ae2b2d6eb3a06c89575224b94",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/3/12, 7:42 PM",
      "commitNameOld": "c166fa380d2716480ff4a0548bc062744defb57f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
      "functionStartLine": 253,
      "functionName": "_withBase",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/cfg/SerializationConfig.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java"
      }
    },
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": {
      "type": "Yfilerename",
      "commitMessage": "Implemented [JACKSON-777] (renamed SerializationConfig.Feature, DeserializationConfig.Feature); various other restructure\n",
      "commitDate": "2/2/12, 11:30 AM",
      "commitName": "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 10:18 PM",
      "commitNameOld": "060ce11a33baa8a1c951cb5b7a857d5d81db09ef",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/cfg/SerializationConfig.java",
      "functionStartLine": 259,
      "functionName": "_withBase",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/cfg/SerializationConfig.java"
      }
    },
    "8be5ba0d47a94773a40619840fb6381f241757f3": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange,Yannotationchange,Ydocchange)",
      "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
      "commitDate": "1/19/12, 11:13 PM",
      "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "with",
            "newValue": "_withBase"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[features-Feature]",
            "newValue": "[newBase-BaseSettings]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private, final]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": ""
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Start work on [JACKSON-747], per-call changing of Ser/DeserConfig Features (like WRAP_ROOT_VALUE)\n",
          "commitDate": "1/19/12, 11:13 PM",
          "commitName": "8be5ba0d47a94773a40619840fb6381f241757f3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 12:31 PM",
          "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private final SerializationConfig _withBase(BaseSettings newBase) {\n    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
          "functionStartLine": 496,
          "functionName": "_withBase",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,3 @@\n-@Override\n-public SerializationConfig with(Feature... features) {\n-    int flags \u003d _featureFlags;\n-    for (Feature f : features) {\n-        flags |\u003d f.getMask();\n-    }\n-    return new SerializationConfig(this, _mapperFeatures, flags);\n+private final SerializationConfig _withBase(BaseSettings newBase) {\n+    return (_base \u003d\u003d newBase) ? this : new SerializationConfig(this, newBase);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n",
            "newValue": ""
          }
        }
      ]
    },
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": {
      "type": "Ybodychange",
      "commitMessage": "Completed major rewrite of handling of on/off features for ObjectMapper/SerConfig/DeserConfig\n",
      "commitDate": "1/19/12, 12:31 PM",
      "commitName": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/18/12, 10:41 PM",
      "commitNameOld": "3108d85c7ca25507a10bd6d4b49b7a2fb807329b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.58,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic SerializationConfig with(Feature... features) {\n    int flags \u003d _featureFlags;\n    for (Feature f : features) {\n        flags |\u003d f.getMask();\n    }\n    return new SerializationConfig(this, _mapperFeatures, flags);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
      "functionStartLine": 503,
      "functionName": "with",
      "functionAnnotation": "@Override",
      "functionDoc": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public SerializationConfig with(Feature... features) {\n     int flags \u003d _featureFlags;\n     for (Feature f : features) {\n         flags |\u003d f.getMask();\n     }\n-    return new SerializationConfig(this, flags);\n+    return new SerializationConfig(this, _mapperFeatures, flags);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": {
      "type": "Ydocchange",
      "commitMessage": "Last pieces of the first round of refactoring: again compiles, may work\n",
      "commitDate": "12/23/11, 5:38 PM",
      "commitName": "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/11, 12:31 AM",
      "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic SerializationConfig with(Feature... features) {\n    int flags \u003d _featureFlags;\n    for (Feature f : features) {\n        flags |\u003d f.getMask();\n    }\n    return new SerializationConfig(this, flags);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
      "functionStartLine": 603,
      "functionName": "with",
      "functionAnnotation": "@Override",
      "functionDoc": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n\n@since 1.9\n",
        "newValue": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+public SerializationConfig with(Feature... features) {\n+    int flags \u003d _featureFlags;\n+    for (Feature f : features) {\n+        flags |\u003d f.getMask();\n+    }\n+    return new SerializationConfig(this, flags);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic SerializationConfig with(Feature... features) {\n    int flags \u003d _featureFlags;\n    for (Feature f : features) {\n        flags |\u003d f.getMask();\n    }\n    return new SerializationConfig(this, flags);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java",
      "functionStartLine": 691,
      "functionName": "with",
      "functionAnnotation": "@Override",
      "functionDoc": "Fluent factory method that will construct and return a new configuration\nobject instance with specified features enabled.\n\n@since 1.9\n"
    }
  }
}