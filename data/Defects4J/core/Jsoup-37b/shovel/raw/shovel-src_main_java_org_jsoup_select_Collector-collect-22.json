{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-37b",
  "repositoryPath": "/tmp/Jsoup-37b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Collector.java",
  "functionName": "collect",
  "functionId": "collect___eval-Evaluator__root-Element",
  "sourceFilePath": "src/main/java/org/jsoup/select/Collector.java",
  "functionAnnotation": "",
  "functionDoc": "     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n\n@ @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n",
  "functionStartLine": 22,
  "functionEndLine": 26,
  "numCommitsSeen": 10,
  "timeTaken": 292,
  "changeHistory": [
    "bbca7db20b9a45fb3d8efb29447349ed8593649c",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c",
    "3dd9e66bc21c6f53aaa21ce45666610f68540555",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2"
  ],
  "changeHistoryShort": {
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": "Ybodychange",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Ybodychange",
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c": "Ydocchange",
    "3dd9e66bc21c6f53aaa21ce45666610f68540555": "Ymultichange(Yreturntypechange,Ybodychange)",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": {
      "type": "Ybodychange",
      "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "ae7308a2832897f351712e44f656a3e71fac7efc",
      "commitAuthorOld": "Anton Kazennikov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Elements collect(Evaluator eval, Element root) {\n    Elements elements \u003d new Elements();\n    new NodeTraversor(new Accumulator(root, elements, eval)).traverse(root);\n    return elements;\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 22,
      "functionName": "collect",
      "functionAnnotation": "",
      "functionDoc": "     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n\n@ @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n",
      "diff": "@@ -1,5 +1,5 @@\n public static Elements collect(Evaluator eval, Element root) {\n     Elements elements \u003d new Elements();\n-    new NodeTraversor(new Accumulator(elements, eval)).traverse(root);\n+    new NodeTraversor(new Accumulator(root, elements, eval)).traverse(root);\n     return elements;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Ybodychange",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "671e03b570f586b6583feb1ee3ddb5d5c62bd50c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Elements collect(Evaluator eval, Element root) {\n    Elements elements \u003d new Elements();\n    new NodeTraversor(new Accumulator(elements, eval)).traverse(root);\n    return elements;\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 22,
      "functionName": "collect",
      "functionAnnotation": "",
      "functionDoc": "     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n\n@ @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n",
      "diff": "@@ -1,5 +1,5 @@\n public static Elements collect(Evaluator eval, Element root) {\n     Elements elements \u003d new Elements();\n-    accumulateMatches(eval, elements, root);\n+    new NodeTraversor(new Accumulator(elements, eval)).traverse(root);\n     return elements;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "671e03b570f586b6583feb1ee3ddb5d5c62bd50c": {
      "type": "Ydocchange",
      "commitMessage": "Selector documentation\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "671e03b570f586b6583feb1ee3ddb5d5c62bd50c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "80c826dc46a5270826c411d3741bfab8c98eb42e",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Elements collect(Evaluator eval, Element root) {\n    Elements elements \u003d new Elements();\n    accumulateMatches(eval, elements, root);\n    return elements;\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 21,
      "functionName": "collect",
      "functionAnnotation": "",
      "functionDoc": "     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n\n@ @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n\n@ @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n"
      }
    },
    "3dd9e66bc21c6f53aaa21ce45666610f68540555": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Have Element DOM methods return Elements instead of List\u003cElement\u003e, to give ready access to .select(query)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "3dd9e66bc21c6f53aaa21ce45666610f68540555",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Have Element DOM methods return Elements instead of List\u003cElement\u003e, to give ready access to .select(query)\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "3dd9e66bc21c6f53aaa21ce45666610f68540555",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "f435b791e193cfe771d7dbd28d2822c32a0889e2",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Elements collect(Evaluator eval, Element root) {\n    Elements elements \u003d new Elements();\n    accumulateMatches(eval, elements, root);\n    return elements;\n}",
          "path": "src/main/java/org/jsoup/select/Collector.java",
          "functionStartLine": 15,
          "functionName": "collect",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n-public static List\u003cElement\u003e collect(Evaluator eval, Element root) {\n-    List\u003cElement\u003e elements \u003d new ArrayList\u003cElement\u003e();\n+public static Elements collect(Evaluator eval, Element root) {\n+    Elements elements \u003d new Elements();\n     accumulateMatches(eval, elements, root);\n-    return Collections.unmodifiableList(elements);\n+    return elements;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "List\u003cElement\u003e",
            "newValue": "Elements"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Have Element DOM methods return Elements instead of List\u003cElement\u003e, to give ready access to .select(query)\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "3dd9e66bc21c6f53aaa21ce45666610f68540555",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "f435b791e193cfe771d7dbd28d2822c32a0889e2",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Elements collect(Evaluator eval, Element root) {\n    Elements elements \u003d new Elements();\n    accumulateMatches(eval, elements, root);\n    return elements;\n}",
          "path": "src/main/java/org/jsoup/select/Collector.java",
          "functionStartLine": 15,
          "functionName": "collect",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,5 @@\n-public static List\u003cElement\u003e collect(Evaluator eval, Element root) {\n-    List\u003cElement\u003e elements \u003d new ArrayList\u003cElement\u003e();\n+public static Elements collect(Evaluator eval, Element root) {\n+    Elements elements \u003d new Elements();\n     accumulateMatches(eval, elements, root);\n-    return Collections.unmodifiableList(elements);\n+    return elements;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": {
      "type": "Yintroduced",
      "commitMessage": "Implemented:\n * Element.getElementsByClass\n * Element.getElementsWithAttribute\n * Element.getElementsWithAttributeValue\n * Element.className\n * Element.hasClass\n * Elmenet.classNames\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f435b791e193cfe771d7dbd28d2822c32a0889e2",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,5 @@\n+public static List\u003cElement\u003e collect(Evaluator eval, Element root) {\n+    List\u003cElement\u003e elements \u003d new ArrayList\u003cElement\u003e();\n+    accumulateMatches(eval, elements, root);\n+    return Collections.unmodifiableList(elements);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static List\u003cElement\u003e collect(Evaluator eval, Element root) {\n    List\u003cElement\u003e elements \u003d new ArrayList\u003cElement\u003e();\n    accumulateMatches(eval, elements, root);\n    return Collections.unmodifiableList(elements);\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 15,
      "functionName": "collect",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}