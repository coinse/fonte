{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-37b",
  "repositoryPath": "/tmp/Jsoup-37b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HtmlTreeBuilder.java",
  "functionName": "inSpecificScope",
  "functionId": "inSpecificScope___targetNames-String[]__baseTypes-String[]__extraTypes-String[]",
  "sourceFilePath": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 456,
  "functionEndLine": 470,
  "numCommitsSeen": 14,
  "timeTaken": 1926,
  "changeHistory": [
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": "Ymovefromfile",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": {
      "type": "Ymovefromfile",
      "commitMessage": "First draft of a simple XML treebuilder / parser.\n\nThis provides an alternative to the HTML5 parser which enforces HTML\nsemantics on the parsed input. The simple XML parser has no understanding\nof HTML, and will parse the input as-is into a DOM.\n",
      "commitDate": "2/26/12, 5:23 PM",
      "commitName": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/30/11, 6:13 PM",
      "commitNameOld": "1e84edbe208aab0c9330eadc50f9773d81d70cd6",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 149.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n    Iterator\u003cElement\u003e it \u003d stack.descendingIterator();\n    while (it.hasNext()) {\n        Element el \u003d it.next();\n        String elName \u003d el.nodeName();\n        if (StringUtil.in(elName, targetNames))\n            return true;\n        if (StringUtil.in(elName, baseTypes))\n            return false;\n        if (extraTypes !\u003d null \u0026\u0026 StringUtil.in(elName, extraTypes))\n            return false;\n    }\n    Validate.fail(\"Should not be reachable\");\n    return false;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 406,
      "functionName": "inSpecificScope",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/jsoup/parser/TreeBuilder.java",
        "newPath": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
        "oldMethodName": "inSpecificScope",
        "newMethodName": "inSpecificScope"
      }
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,15 @@\n+private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n+    Iterator\u003cElement\u003e it \u003d stack.descendingIterator();\n+    while (it.hasNext()) {\n+        Element el \u003d it.next();\n+        String elName \u003d el.nodeName();\n+        if (StringUtil.in(elName, targetNames))\n+            return true;\n+        if (StringUtil.in(elName, baseTypes))\n+            return false;\n+        if (extraTypes !\u003d null \u0026\u0026 StringUtil.in(elName, extraTypes))\n+            return false;\n+    }\n+    Validate.fail(\"Should not be reachable\");\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {\n    Iterator\u003cElement\u003e it \u003d stack.descendingIterator();\n    while (it.hasNext()) {\n        Element el \u003d it.next();\n        String elName \u003d el.nodeName();\n        if (StringUtil.in(elName, targetNames))\n            return true;\n        if (StringUtil.in(elName, baseTypes))\n            return false;\n        if (extraTypes !\u003d null \u0026\u0026 StringUtil.in(elName, extraTypes))\n            return false;\n    }\n    Validate.fail(\"Should not be reachable\");\n    return false;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 433,
      "functionName": "inSpecificScope",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}