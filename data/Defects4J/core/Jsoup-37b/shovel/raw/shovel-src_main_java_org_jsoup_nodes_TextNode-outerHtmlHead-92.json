{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-37b",
  "repositoryPath": "/tmp/Jsoup-37b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TextNode.java",
  "functionName": "outerHtmlHead",
  "functionId": "outerHtmlHead___accum-StringBuilder__depth-int__out-Document.OutputSettings",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/TextNode.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 92,
  "functionEndLine": 101,
  "numCommitsSeen": 80,
  "timeTaken": 730,
  "changeHistory": [
    "d6fd1637307f6b088eb226c3f979085725530f32",
    "3982ea1198b8d780b42587e16ace3407bf7621e1",
    "1fd0a617cb216113997569937b43ec7c7a9c2fd2",
    "e064bc4842d1412a0421435332f55908fddcc866",
    "13c2af3f24fceda5b44776a5257112ac7218d038",
    "e256bb7fc5979de256371bb324f1ca1330e38112",
    "57bce6dc8424637621f6b660855f23e72a08c4b3",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
    "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85",
    "a52e669ca8bc48265accd57d610c0258f7891841",
    "496e6a1e56c3af11c8071820c74565bc55f1850d",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60",
    "ac95e9f55bc7ffb60febb341571d85635dada8fd"
  ],
  "changeHistoryShort": {
    "d6fd1637307f6b088eb226c3f979085725530f32": "Ybodychange",
    "3982ea1198b8d780b42587e16ace3407bf7621e1": "Ybodychange",
    "1fd0a617cb216113997569937b43ec7c7a9c2fd2": "Ybodychange",
    "e064bc4842d1412a0421435332f55908fddcc866": "Ybodychange",
    "13c2af3f24fceda5b44776a5257112ac7218d038": "Ybodychange",
    "e256bb7fc5979de256371bb324f1ca1330e38112": "Ybodychange",
    "57bce6dc8424637621f6b660855f23e72a08c4b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85": "Ybodychange",
    "a52e669ca8bc48265accd57d610c0258f7891841": "Ybodychange",
    "496e6a1e56c3af11c8071820c74565bc55f1850d": "Ybodychange",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": "Ybodychange",
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": "Yrename",
    "ac95e9f55bc7ffb60febb341571d85635dada8fd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6fd1637307f6b088eb226c3f979085725530f32": {
      "type": "Ybodychange",
      "commitMessage": "Performance improvment for Element.text\n\nIncrease the speed of getting an element\u0027s text content by 220%, by\nreducing new object creation. Also reduces GC load.\n",
      "commitDate": "11/16/13, 2:02 PM",
      "commitName": "d6fd1637307f6b088eb226c3f979085725530f32",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/26/13, 5:07 PM",
      "commitNameOld": "3982ea1198b8d780b42587e16ace3407bf7621e1",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 293.87,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.outline() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n        indent(accum, depth, out);\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent()))\n        StringUtil.appendNormalisedWhitespace(accum, html, false);\n    else\n        accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 92,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-    String html \u003d Entities.escape(getWholeText(), out);\n-    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent())) {\n-        html \u003d normaliseWhitespace(html);\n-    }\n     if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.outline() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n         indent(accum, depth, out);\n-    accum.append(html);\n+    String html \u003d Entities.escape(getWholeText(), out);\n+    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent()))\n+        StringUtil.appendNormalisedWhitespace(accum, html, false);\n+    else\n+        accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3982ea1198b8d780b42587e16ace3407bf7621e1": {
      "type": "Ybodychange",
      "commitMessage": "Tweaked koz\u0027s changes in merge prep.\n\nAdds outline mode to Document.OutputSettings.\n\nFixes #274\n",
      "commitDate": "1/26/13, 5:07 PM",
      "commitName": "3982ea1198b8d780b42587e16ace3407bf7621e1",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/26/13, 4:46 PM",
      "commitNameOld": "a44e18aa3c1fcd25a68a5965f9490d8f7d026509",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent())) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.outline() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n        indent(accum, depth, out);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 92,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     String html \u003d Entities.escape(getWholeText(), out);\n     if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent())) {\n         html \u003d normaliseWhitespace(html);\n     }\n-    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.forceAllElementAsBlock() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n+    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.outline() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n         indent(accum, depth, out);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1fd0a617cb216113997569937b43ec7c7a9c2fd2": {
      "type": "Ybodychange",
      "commitMessage": "Modified Element.text() to build text by traversing child nodes rather than recursing.\n\nFixes #271\n",
      "commitDate": "12/26/12, 2:24 PM",
      "commitName": "1fd0a617cb216113997569937b43ec7c7a9c2fd2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "c114eb0589d947dfe6f047c546380c3cfe413453",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 543.47,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent())) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth, out);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 92,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     String html \u003d Entities.escape(getWholeText(), out);\n-    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n+    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !Element.preserveWhitespace((Element) parent())) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank())\n         indent(accum, depth, out);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e064bc4842d1412a0421435332f55908fddcc866": {
      "type": "Ybodychange",
      "commitMessage": "#273 :\tProvide an output setting to render all elements as block ",
      "commitDate": "12/14/12, 2:51 AM",
      "commitName": "e064bc4842d1412a0421435332f55908fddcc866",
      "commitAuthor": "Jerome Kowalczyk",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "c114eb0589d947dfe6f047c546380c3cfe413453",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 530.99,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.forceAllElementAsBlock() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n        indent(accum, depth, out);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 92,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     String html \u003d Entities.escape(getWholeText(), out);\n     if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n-    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank())\n+    if (out.prettyPrint() \u0026\u0026 ((siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank()) || (out.forceAllElementAsBlock() \u0026\u0026 siblingNodes().size() \u003e 0 \u0026\u0026 !isBlank())))\n         indent(accum, depth, out);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "13c2af3f24fceda5b44776a5257112ac7218d038": {
      "type": "Ybodychange",
      "commitMessage": "Output format tweak\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "13c2af3f24fceda5b44776a5257112ac7218d038",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e256bb7fc5979de256371bb324f1ca1330e38112",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth, out);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 72,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     String html \u003d Entities.escape(getWholeText(), out);\n     if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n-    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n+    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().formatAsBlock() \u0026\u0026 !isBlank())\n         indent(accum, depth, out);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e256bb7fc5979de256371bb324f1ca1330e38112": {
      "type": "Ybodychange",
      "commitMessage": "Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.\n\nFixes #8\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e256bb7fc5979de256371bb324f1ca1330e38112",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "f548940dd8be5f8c93ef17a8896b2807aa2a08bc",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth, out);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 72,
      "functionName": "outerHtmlHead",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n     String html \u003d Entities.escape(getWholeText(), out);\n-    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n+    if (out.prettyPrint() \u0026\u0026 parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n-    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n-        indent(accum, depth);\n+    if (out.prettyPrint() \u0026\u0026 siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n+        indent(accum, depth, out);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "57bce6dc8424637621f6b660855f23e72a08c4b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth);\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 68,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,9 @@\n-void outerHtmlHead(StringBuilder accum, int depth) {\n-    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n+    String html \u003d Entities.escape(getWholeText(), out);\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n         indent(accum, depth);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[accum-StringBuilder, depth-int]",
            "newValue": "[accum-StringBuilder, depth-int, out-Document.OutputSettings]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added ability to configure the document\u0027s output charset.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "57bce6dc8424637621f6b660855f23e72a08c4b3",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n    String html \u003d Entities.escape(getWholeText(), out);\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth);\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 68,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,9 @@\n-void outerHtmlHead(StringBuilder accum, int depth) {\n-    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n+    String html \u003d Entities.escape(getWholeText(), out);\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n         indent(accum, depth);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth);\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 68,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "outerHtml",
            "newValue": "outerHtmlHead"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth);\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 68,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[accum-StringBuilder]",
            "newValue": "[accum-StringBuilder, depth-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtmlHead(StringBuilder accum, int depth) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum, depth);\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 68,
          "functionName": "outerHtmlHead",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,9 @@\n-void outerHtml(StringBuilder accum) {\n+void outerHtmlHead(StringBuilder accum, int depth) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n-        indent(accum);\n+        indent(accum, depth);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85": {
      "type": "Ybodychange",
      "commitMessage": "TextNode performance tweaks\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f0f3eab9c34cc32c6ad06a991fe572d243ca9e85",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "f607d8fcf01d7053b61b63aabfb8c4d7a0f7e02f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n        indent(accum);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 68,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n void outerHtml(StringBuilder accum) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n-    if (!isBlank() \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)\n+    if (siblingIndex() \u003d\u003d 0 \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 !isBlank())\n         indent(accum);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a52e669ca8bc48265accd57d610c0258f7891841": {
      "type": "Ybodychange",
      "commitMessage": "Improved HTML output (pretty-print)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "a52e669ca8bc48265accd57d610c0258f7891841",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "d24b485e252d9e86858207da7a57678d41d3f72c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    if (!isBlank() \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)\n        indent(accum);\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 46,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,9 @@\n void outerHtml(StringBuilder accum) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n     if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n+    if (!isBlank() \u0026\u0026 parentNode instanceof Element \u0026\u0026 ((Element) parentNode).tag().canContainBlock() \u0026\u0026 siblingIndex() \u003d\u003d 0)\n+        indent(accum);\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "496e6a1e56c3af11c8071820c74565bc55f1850d": {
      "type": "Ybodychange",
      "commitMessage": "Preserve whitespace in children of \u003cpre\u003e\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "496e6a1e56c3af11c8071820c74565bc55f1850d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 31,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n void outerHtml(StringBuilder accum) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n-    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace()) {\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).preserveWhitespace()) {\n         html \u003d normaliseWhitespace(html);\n     }\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": {
      "type": "Ybodychange",
      "commitMessage": "Whitespace tests\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace()) {\n        html \u003d normaliseWhitespace(html);\n    }\n    accum.append(html);\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 31,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,7 @@\n void outerHtml(StringBuilder accum) {\n     String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n-    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n-        html \u003d normaliseWhitespace(html).trim();\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace()) {\n+        html \u003d normaliseWhitespace(html);\n+    }\n     accum.append(html);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7898cdffecce78996012bd06eac0792dd4b6ac6d": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Use string builders for HTML creation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n        html \u003d normaliseWhitespace(html).trim();\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 31,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,6 @@\n-public String outerHtml() {\n-    return StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtml(StringBuilder accum) {\n+    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n+        html \u003d normaliseWhitespace(html).trim();\n+    accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[accum-StringBuilder]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n        html \u003d normaliseWhitespace(html).trim();\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 31,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,6 @@\n-public String outerHtml() {\n-    return StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtml(StringBuilder accum) {\n+    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n+        html \u003d normaliseWhitespace(html).trim();\n+    accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n        html \u003d normaliseWhitespace(html).trim();\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 31,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,6 @@\n-public String outerHtml() {\n-    return StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtml(StringBuilder accum) {\n+    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n+        html \u003d normaliseWhitespace(html).trim();\n+    accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use string builders for HTML creation.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void outerHtml(StringBuilder accum) {\n    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n        html \u003d normaliseWhitespace(html).trim();\n    accum.append(html);\n}",
          "path": "src/main/java/org/jsoup/nodes/TextNode.java",
          "functionStartLine": 31,
          "functionName": "outerHtml",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,6 @@\n-public String outerHtml() {\n-    return StringEscapeUtils.escapeHtml(getWholeText());\n+void outerHtml(StringBuilder accum) {\n+    String html \u003d StringEscapeUtils.escapeHtml(getWholeText());\n+    if (parent() instanceof Element \u0026\u0026 !((Element) parent()).tag().preserveWhitespace())\n+        html \u003d normaliseWhitespace(html).trim();\n+    accum.append(html);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "0e4c8bf728d368fed47e458f5f91517c677f1d60": {
      "type": "Yrename",
      "commitMessage": "All nodes have outerHtml method, elements have (inner) HTML.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "0e4c8bf728d368fed47e458f5f91517c677f1d60",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "ac95e9f55bc7ffb60febb341571d85635dada8fd",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String outerHtml() {\n    return StringEscapeUtils.escapeHtml(getWholeText());\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 30,
      "functionName": "outerHtml",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n-public String html() {\n+public String outerHtml() {\n     return StringEscapeUtils.escapeHtml(getWholeText());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "html",
        "newValue": "outerHtml"
      }
    },
    "ac95e9f55bc7ffb60febb341571d85635dada8fd": {
      "type": "Yintroduced",
      "commitMessage": "Nodes get to html() method.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "ac95e9f55bc7ffb60febb341571d85635dada8fd",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,3 @@\n+public String html() {\n+    return StringEscapeUtils.escapeHtml(getWholeText());\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String html() {\n    return StringEscapeUtils.escapeHtml(getWholeText());\n}",
      "path": "src/main/java/org/jsoup/nodes/TextNode.java",
      "functionStartLine": 30,
      "functionName": "html",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}