{
  "origin": "codeshovel",
  "repositoryName": "Cli-31b",
  "repositoryPath": "/tmp/Cli-31b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HelpFormatter.java",
  "functionName": "printUsage",
  "functionId": "printUsage___pw-PrintWriter__width-int__app-String__options-Options",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
  "functionAnnotation": "",
  "functionDoc": "Prints the usage statement for the specified application.\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
  "functionStartLine": 537,
  "functionEndLine": 592,
  "numCommitsSeen": 44,
  "timeTaken": 1772,
  "changeHistory": [
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "180a16def56be368c2c33a56c1778b8d7ce170c7",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac",
    "6f972cf56d7a3054bac902fecb6d3dd5ee310dea",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
    "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8",
    "a0212835ed42e03a01c2c930a695e478a0884f68",
    "62670f565aa434b6cb614c1054a8ea5bc3715f25",
    "c7127329dad2c5d6284532da09ddc0fdefd67436"
  ],
  "changeHistoryShort": {
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "180a16def56be368c2c33a56c1778b8d7ce170c7": "Ydocchange",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Yformatchange",
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac": "Ybodychange",
    "6f972cf56d7a3054bac902fecb6d3dd5ee310dea": "Ybodychange",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ymultichange(Ydocchange,Yformatchange)",
    "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b": "Ymultichange(Ybodychange,Ydocchange)",
    "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8": "Ybodychange",
    "a0212835ed42e03a01c2c930a695e478a0884f68": "Ybodychange",
    "62670f565aa434b6cb614c1054a8ea5bc3715f25": "Ybodychange",
    "c7127329dad2c5d6284532da09ddc0fdefd67436": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10, 2:45 AM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10, 2:42 AM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    List optList \u003d new ArrayList(options.getOptions());\n    Collections.sort(optList, getOptionComparator());\n    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 537,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "Prints the usage statement for the specified application.\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/HelpFormatter.java",
        "newPath": "src/main/java/org/apache/commons/cli/HelpFormatter.java"
      }
    },
    "180a16def56be368c2c33a56c1778b8d7ce170c7": {
      "type": "Ydocchange",
      "commitMessage": "Added a parameter in HelpFormatter to specify the separator displayed between a long option and its value (CLI-169)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@954899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/10, 7:11 AM",
      "commitName": "180a16def56be368c2c33a56c1778b8d7ce170c7",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/28/09, 9:22 AM",
      "commitNameOld": "6a999186695d404ccb6c1528df68fe2eb42863c2",
      "commitAuthorOld": "Jim Jagielski",
      "daysBetweenCommits": 382.91,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    List optList \u003d new ArrayList(options.getOptions());\n    Collections.sort(optList, getOptionComparator());\n    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 537,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "Prints the usage statement for the specified application.\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
        "newValue": "Prints the usage statement for the specified application.\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n"
      }
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Yformatchange",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08, 1:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08, 3:22 AM",
      "commitNameOld": "d36adebd3547279b709960c902c3fb7b89a9a4ef",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 59.91,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    List optList \u003d new ArrayList(options.getOptions());\n    Collections.sort(optList, getOptionComparator());\n    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 502,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
      "diff": "",
      "extendedDetails": {}
    },
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac": {
      "type": "Ybodychange",
      "commitMessage": "Making the OptionComparator modifiable so people can change the order in which arguments are printed by the HelpFormatter - as requested in CLI-155\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@655735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/12/08, 9:54 PM",
      "commitName": "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/7/08, 11:40 PM",
      "commitNameOld": "4f407378c93b9e2a8e24c855e8bed5eb12bf7a06",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 4.93,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    List optList \u003d new ArrayList(options.getOptions());\n    Collections.sort(optList, getOptionComparator());\n    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 510,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
      "diff": "@@ -1,23 +1,23 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n     final Collection processedGroups \u003d new ArrayList();\n     Option option;\n     List optList \u003d new ArrayList(options.getOptions());\n-    Collections.sort(optList, new OptionComparator());\n+    Collections.sort(optList, getOptionComparator());\n     for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n         if (group !\u003d null) {\n             if (!processedGroups.contains(group)) {\n                 processedGroups.add(group);\n                 appendOptionGroup(buff, group);\n             }\n         } else {\n             appendOption(buff, option, option.isRequired());\n         }\n         if (i.hasNext()) {\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6f972cf56d7a3054bac902fecb6d3dd5ee310dea": {
      "type": "Ybodychange",
      "commitMessage": "Applying Brian Egge\u0027s enhancement from CLI-131\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@544762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/6/07, 1:01 AM",
      "commitName": "6f972cf56d7a3054bac902fecb6d3dd5ee310dea",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/28/07, 1:01 AM",
      "commitNameOld": "79a1091bd0a2dba7decacd23beac8104f3b5a5cb",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 9.0,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    List optList \u003d new ArrayList(options.getOptions());\n    Collections.sort(optList, new OptionComparator());\n    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 432,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
      "diff": "@@ -1,21 +1,23 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n     final Collection processedGroups \u003d new ArrayList();\n     Option option;\n-    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n+    List optList \u003d new ArrayList(options.getOptions());\n+    Collections.sort(optList, new OptionComparator());\n+    for (Iterator i \u003d optList.iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n         if (group !\u003d null) {\n             if (!processedGroups.contains(group)) {\n                 processedGroups.add(group);\n                 appendOptionGroup(buff, group);\n             }\n         } else {\n             appendOption(buff, option, option.isRequired());\n         }\n         if (i.hasNext()) {\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/9/02, 3:47 PM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/9/02, 3:47 PM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/19/02, 2:50 PM",
          "commitNameOld": "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 20.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
          "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 470,
          "functionName": "printUsage",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n@see #appendOptionGroup(StringBuffer,OptionGroup)\n@see #appendOption(StringBuffer,Option,boolean)\n",
            "newValue": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/9/02, 3:47 PM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/19/02, 2:50 PM",
          "commitNameOld": "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 20.04,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
          "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 470,
          "functionName": "printUsage",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width The number of characters to display per line\n@param app The application name\n@param options The command line Options\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "applied some fixes to HelpFormatter, thanks to Rob and Boon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/19/02, 2:50 PM",
      "commitName": "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "applied some fixes to HelpFormatter, thanks to Rob and Boon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/19/02, 2:50 PM",
          "commitName": "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/15/02, 2:22 PM",
          "commitNameOld": "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 4.02,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
          "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 227,
          "functionName": "printUsage",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n@see #appendOptionGroup(StringBuffer,OptionGroup)\n@see #appendOption(StringBuffer,Option,boolean)\n",
          "diff": "@@ -1,38 +1,21 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n-    ArrayList list \u003d new ArrayList();\n+    final Collection processedGroups \u003d new ArrayList();\n     Option option;\n     for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n-        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n-            list.add(group);\n-            Collection names \u003d group.getNames();\n-            buff.append(\"[\");\n-            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n-                buff.append(iter.next());\n-                if (iter.hasNext()) {\n-                    buff.append(\" | \");\n-                }\n+        if (group !\u003d null) {\n+            if (!processedGroups.contains(group)) {\n+                processedGroups.add(group);\n+                appendOptionGroup(buff, group);\n             }\n-            buff.append(\"]\");\n         } else {\n-            if (!option.isRequired()) {\n-                buff.append(\"[\");\n-            }\n-            if (!\" \".equals(option.getOpt())) {\n-                buff.append(\"-\").append(option.getOpt());\n-            } else {\n-                buff.append(\"--\").append(option.getLongOpt());\n-            }\n-            if (option.hasArg() \u0026\u0026 option.getArgName() !\u003d null) {\n-                buff.append(\" \").append(option.getArgName());\n-            }\n-            if (!option.isRequired()) {\n-                buff.append(\"]\");\n-            }\n+            appendOption(buff, option, option.isRequired());\n+        }\n+        if (i.hasNext()) {\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "applied some fixes to HelpFormatter, thanks to Rob and Boon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129850 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/19/02, 2:50 PM",
          "commitName": "6bcbf153c4497c38c4c36c3a04c1eac1f4cc153b",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/15/02, 2:22 PM",
          "commitNameOld": "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 4.02,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    final Collection processedGroups \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null) {\n            if (!processedGroups.contains(group)) {\n                processedGroups.add(group);\n                appendOptionGroup(buff, group);\n            }\n        } else {\n            appendOption(buff, option, option.isRequired());\n        }\n        if (i.hasNext()) {\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
          "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 227,
          "functionName": "printUsage",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n@see #appendOptionGroup(StringBuffer,OptionGroup)\n@see #appendOption(StringBuffer,Option,boolean)\n",
          "diff": "@@ -1,38 +1,21 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n-    ArrayList list \u003d new ArrayList();\n+    final Collection processedGroups \u003d new ArrayList();\n     Option option;\n     for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n-        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n-            list.add(group);\n-            Collection names \u003d group.getNames();\n-            buff.append(\"[\");\n-            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n-                buff.append(iter.next());\n-                if (iter.hasNext()) {\n-                    buff.append(\" | \");\n-                }\n+        if (group !\u003d null) {\n+            if (!processedGroups.contains(group)) {\n+                processedGroups.add(group);\n+                appendOptionGroup(buff, group);\n             }\n-            buff.append(\"]\");\n         } else {\n-            if (!option.isRequired()) {\n-                buff.append(\"[\");\n-            }\n-            if (!\" \".equals(option.getOpt())) {\n-                buff.append(\"-\").append(option.getOpt());\n-            } else {\n-                buff.append(\"--\").append(option.getLongOpt());\n-            }\n-            if (option.hasArg() \u0026\u0026 option.getArgName() !\u003d null) {\n-                buff.append(\" \").append(option.getArgName());\n-            }\n-            if (!option.isRequired()) {\n-                buff.append(\"]\");\n-            }\n+            appendOption(buff, option, option.isRequired());\n+        }\n+        if (i.hasNext()) {\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n",
            "newValue": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n@see #appendOptionGroup(StringBuffer,OptionGroup)\n@see #appendOption(StringBuffer,Option,boolean)\n"
          }
        }
      ]
    },
    "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8": {
      "type": "Ybodychange",
      "commitMessage": "some fixes to avoid \u0027null\u0027 appearing in the help output\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129844 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/15/02, 2:22 PM",
      "commitName": "4c34483ea18c6a4f259f19a6d18637bb1fbae1e8",
      "commitAuthor": "John Keyes",
      "commitDateOld": "10/11/02, 4:10 PM",
      "commitNameOld": "a0212835ed42e03a01c2c930a695e478a0884f68",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 34.97,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    ArrayList list \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n            list.add(group);\n            Collection names \u003d group.getNames();\n            buff.append(\"[\");\n            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                buff.append(iter.next());\n                if (iter.hasNext()) {\n                    buff.append(\" | \");\n                }\n            }\n            buff.append(\"]\");\n        } else {\n            if (!option.isRequired()) {\n                buff.append(\"[\");\n            }\n            if (!\" \".equals(option.getOpt())) {\n                buff.append(\"-\").append(option.getOpt());\n            } else {\n                buff.append(\"--\").append(option.getLongOpt());\n            }\n            if (option.hasArg() \u0026\u0026 option.getArgName() !\u003d null) {\n                buff.append(\" \").append(option.getArgName());\n            }\n            if (!option.isRequired()) {\n                buff.append(\"]\");\n            }\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 225,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n",
      "diff": "@@ -1,41 +1,38 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n     ArrayList list \u003d new ArrayList();\n     Option option;\n     for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n         if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n             list.add(group);\n             Collection names \u003d group.getNames();\n             buff.append(\"[\");\n             for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                 buff.append(iter.next());\n                 if (iter.hasNext()) {\n                     buff.append(\" | \");\n                 }\n             }\n             buff.append(\"]\");\n         } else {\n             if (!option.isRequired()) {\n                 buff.append(\"[\");\n             }\n             if (!\" \".equals(option.getOpt())) {\n                 buff.append(\"-\").append(option.getOpt());\n             } else {\n                 buff.append(\"--\").append(option.getLongOpt());\n             }\n-            if (option.hasArg()) {\n-                buff.append(\" \");\n-            }\n-            if (option.hasArg()) {\n-                buff.append(option.getArgName());\n+            if (option.hasArg() \u0026\u0026 option.getArgName() !\u003d null) {\n+                buff.append(\" \").append(option.getArgName());\n             }\n             if (!option.isRequired()) {\n                 buff.append(\"]\");\n             }\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a0212835ed42e03a01c2c930a695e478a0884f68": {
      "type": "Ybodychange",
      "commitMessage": "some fixes for autousage and padding\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129821 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/02, 4:10 PM",
      "commitName": "a0212835ed42e03a01c2c930a695e478a0884f68",
      "commitAuthor": "John Keyes",
      "commitDateOld": "10/8/02, 2:24 PM",
      "commitNameOld": "62670f565aa434b6cb614c1054a8ea5bc3715f25",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 3.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    ArrayList list \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n            list.add(group);\n            Collection names \u003d group.getNames();\n            buff.append(\"[\");\n            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                buff.append(iter.next());\n                if (iter.hasNext()) {\n                    buff.append(\" | \");\n                }\n            }\n            buff.append(\"]\");\n        } else {\n            if (!option.isRequired()) {\n                buff.append(\"[\");\n            }\n            if (!\" \".equals(option.getOpt())) {\n                buff.append(\"-\").append(option.getOpt());\n            } else {\n                buff.append(\"--\").append(option.getLongOpt());\n            }\n            if (option.hasArg()) {\n                buff.append(\" \");\n            }\n            if (option.hasArg()) {\n                buff.append(option.getArgName());\n            }\n            if (!option.isRequired()) {\n                buff.append(\"]\");\n            }\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 225,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n",
      "diff": "@@ -1,43 +1,41 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n     ArrayList list \u003d new ArrayList();\n     Option option;\n     for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n         if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n             list.add(group);\n             Collection names \u003d group.getNames();\n             buff.append(\"[\");\n             for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                 buff.append(iter.next());\n                 if (iter.hasNext()) {\n                     buff.append(\" | \");\n                 }\n             }\n             buff.append(\"]\");\n         } else {\n             if (!option.isRequired()) {\n                 buff.append(\"[\");\n             }\n             if (!\" \".equals(option.getOpt())) {\n                 buff.append(\"-\").append(option.getOpt());\n             } else {\n                 buff.append(\"--\").append(option.getLongOpt());\n             }\n-            if (option.getValueSeparator() !\u003d (char) 0) {\n-                buff.append(option.getValueSeparator());\n-            } else if (option.hasArg()) {\n+            if (option.hasArg()) {\n                 buff.append(\" \");\n             }\n             if (option.hasArg()) {\n                 buff.append(option.getArgName());\n             }\n             if (!option.isRequired()) {\n                 buff.append(\"]\");\n             }\n             buff.append(\" \");\n         }\n     }\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62670f565aa434b6cb614c1054a8ea5bc3715f25": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug 13425, added argName support, fixed some bugs in the HelpFormatter\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129819 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/8/02, 2:24 PM",
      "commitName": "62670f565aa434b6cb614c1054a8ea5bc3715f25",
      "commitAuthor": "John Keyes",
      "commitDateOld": "9/19/02, 3:59 PM",
      "commitNameOld": "c08f73835beda155421d78ee4f96d9e11c501159",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 18.93,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    ArrayList list \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n            list.add(group);\n            Collection names \u003d group.getNames();\n            buff.append(\"[\");\n            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                buff.append(iter.next());\n                if (iter.hasNext()) {\n                    buff.append(\" | \");\n                }\n            }\n            buff.append(\"]\");\n        } else {\n            if (!option.isRequired()) {\n                buff.append(\"[\");\n            }\n            if (!\" \".equals(option.getOpt())) {\n                buff.append(\"-\").append(option.getOpt());\n            } else {\n                buff.append(\"--\").append(option.getLongOpt());\n            }\n            if (option.getValueSeparator() !\u003d (char) 0) {\n                buff.append(option.getValueSeparator());\n            } else if (option.hasArg()) {\n                buff.append(\" \");\n            }\n            if (option.hasArg()) {\n                buff.append(option.getArgName());\n            }\n            if (!option.isRequired()) {\n                buff.append(\"]\");\n            }\n            buff.append(\" \");\n        }\n    }\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 225,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n",
      "diff": "@@ -1,35 +1,43 @@\n public void printUsage(PrintWriter pw, int width, String app, Options options) {\n     StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n     ArrayList list \u003d new ArrayList();\n     Option option;\n     for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n         option \u003d (Option) i.next();\n         OptionGroup group \u003d options.getOptionGroup(option);\n         if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n             list.add(group);\n             Collection names \u003d group.getNames();\n             buff.append(\"[\");\n             for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                 buff.append(iter.next());\n                 if (iter.hasNext()) {\n                     buff.append(\" | \");\n                 }\n             }\n             buff.append(\"]\");\n         } else {\n             if (!option.isRequired()) {\n                 buff.append(\"[\");\n             }\n-            buff.append(\"-\").append(option.getOpt());\n+            if (!\" \".equals(option.getOpt())) {\n+                buff.append(\"-\").append(option.getOpt());\n+            } else {\n+                buff.append(\"--\").append(option.getLongOpt());\n+            }\n+            if (option.getValueSeparator() !\u003d (char) 0) {\n+                buff.append(option.getValueSeparator());\n+            } else if (option.hasArg()) {\n+                buff.append(\" \");\n+            }\n             if (option.hasArg()) {\n-                buff.append(\" arg\");\n+                buff.append(option.getArgName());\n             }\n             if (!option.isRequired()) {\n                 buff.append(\"]\");\n             }\n             buff.append(\" \");\n         }\n     }\n-    System.out.println(\"-\u003e\" + buff.toString());\n     printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c7127329dad2c5d6284532da09ddc0fdefd67436": {
      "type": "Yintroduced",
      "commitMessage": "added automatic usage generation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/22/02, 3:49 PM",
      "commitName": "c7127329dad2c5d6284532da09ddc0fdefd67436",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,35 @@\n+public void printUsage(PrintWriter pw, int width, String app, Options options) {\n+    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n+    ArrayList list \u003d new ArrayList();\n+    Option option;\n+    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n+        option \u003d (Option) i.next();\n+        OptionGroup group \u003d options.getOptionGroup(option);\n+        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n+            list.add(group);\n+            Collection names \u003d group.getNames();\n+            buff.append(\"[\");\n+            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n+                buff.append(iter.next());\n+                if (iter.hasNext()) {\n+                    buff.append(\" | \");\n+                }\n+            }\n+            buff.append(\"]\");\n+        } else {\n+            if (!option.isRequired()) {\n+                buff.append(\"[\");\n+            }\n+            buff.append(\"-\").append(option.getOpt());\n+            if (option.hasArg()) {\n+                buff.append(\" arg\");\n+            }\n+            if (!option.isRequired()) {\n+                buff.append(\"]\");\n+            }\n+            buff.append(\" \");\n+        }\n+    }\n+    System.out.println(\"-\u003e\" + buff.toString());\n+    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void printUsage(PrintWriter pw, int width, String app, Options options) {\n    StringBuffer buff \u003d new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");\n    ArrayList list \u003d new ArrayList();\n    Option option;\n    for (Iterator i \u003d options.getOptions().iterator(); i.hasNext(); ) {\n        option \u003d (Option) i.next();\n        OptionGroup group \u003d options.getOptionGroup(option);\n        if (group !\u003d null \u0026\u0026 !list.contains(group)) {\n            list.add(group);\n            Collection names \u003d group.getNames();\n            buff.append(\"[\");\n            for (Iterator iter \u003d names.iterator(); iter.hasNext(); ) {\n                buff.append(iter.next());\n                if (iter.hasNext()) {\n                    buff.append(\" | \");\n                }\n            }\n            buff.append(\"]\");\n        } else {\n            if (!option.isRequired()) {\n                buff.append(\"[\");\n            }\n            buff.append(\"-\").append(option.getOpt());\n            if (option.hasArg()) {\n                buff.append(\" arg\");\n            }\n            if (!option.isRequired()) {\n                buff.append(\"]\");\n            }\n            buff.append(\" \");\n        }\n    }\n    System.out.println(\"-\u003e\" + buff.toString());\n    printWrapped(pw, width, buff.toString().indexOf(\u0027 \u0027) + 1, buff.toString());\n}",
      "path": "src/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 225,
      "functionName": "printUsage",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePrints the usage statement for the specified application.\u003c/p\u003e\n\n@param pw The PrintWriter to print the usage statement\n@param width ??\n@param appName The application name\n@param options The command line Options\n"
    }
  }
}