{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-46b",
  "repositoryPath": "/tmp/Jsoup-46b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataUtil.java",
  "functionName": "getCharsetFromContentType",
  "functionId": "getCharsetFromContentType___contentType-String",
  "sourceFilePath": "src/main/java/org/jsoup/helper/DataUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
  "functionStartLine": 195,
  "functionEndLine": 212,
  "numCommitsSeen": 34,
  "timeTaken": 771,
  "changeHistory": [
    "bb16e0693819afb821bce6943d8cbd178266a63e",
    "f052908ec90e12bdc6b67915ef2290aa9eefa48b",
    "8963e2ac79a97e694c388622e935a0471267e9eb",
    "561d12a9894210d9f5a8a41d655361732a39b6c8",
    "437d8eca9f51dd0ed7af5b828412ee96ac192f17",
    "ce843ec83988e3e3318fa7db38133b06be741a1f",
    "7eeb74d133625c8819ba8da52e37f4e4db4b8a26"
  ],
  "changeHistoryShort": {
    "bb16e0693819afb821bce6943d8cbd178266a63e": "Ybodychange",
    "f052908ec90e12bdc6b67915ef2290aa9eefa48b": "Ybodychange",
    "8963e2ac79a97e694c388622e935a0471267e9eb": "Ymultichange(Ybodychange,Ydocchange)",
    "561d12a9894210d9f5a8a41d655361732a39b6c8": "Ybodychange",
    "437d8eca9f51dd0ed7af5b828412ee96ac192f17": "Yformatchange",
    "ce843ec83988e3e3318fa7db38133b06be741a1f": "Yfilerename",
    "7eeb74d133625c8819ba8da52e37f4e4db4b8a26": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb16e0693819afb821bce6943d8cbd178266a63e": {
      "type": "Ybodychange",
      "commitMessage": "Java 1.5 support\n\nFixes #375\n",
      "commitDate": "9/27/14, 5:08 PM",
      "commitName": "bb16e0693819afb821bce6943d8cbd178266a63e",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "11/18/13, 9:50 AM",
      "commitNameOld": "5dab7a2379aaa7141c6c4e8306a139a6b8dd3ada",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 313.26,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset \u003d m.group(1).trim();\n        charset \u003d charset.replace(\"charset\u003d\", \"\");\n        if (charset.length() \u003d\u003d 0)\n            return null;\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n            charset \u003d charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException e) {\n            return null;\n        }\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/helper/DataUtil.java",
      "functionStartLine": 175,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
      "diff": "@@ -1,21 +1,21 @@\n static String getCharsetFromContentType(String contentType) {\n     if (contentType \u003d\u003d null)\n         return null;\n     Matcher m \u003d charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset \u003d m.group(1).trim();\n         charset \u003d charset.replace(\"charset\u003d\", \"\");\n-        if (charset.isEmpty())\n+        if (charset.length() \u003d\u003d 0)\n             return null;\n         try {\n             if (Charset.isSupported(charset))\n                 return charset;\n             charset \u003d charset.toUpperCase(Locale.ENGLISH);\n             if (Charset.isSupported(charset))\n                 return charset;\n         } catch (IllegalCharsetNameException e) {\n             return null;\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f052908ec90e12bdc6b67915ef2290aa9eefa48b": {
      "type": "Ybodychange",
      "commitMessage": "Make http charset detection code more robust\n\nFixes #321\n",
      "commitDate": "11/10/13, 5:18 PM",
      "commitName": "f052908ec90e12bdc6b67915ef2290aa9eefa48b",
      "commitAuthor": "fabse",
      "commitDateOld": "12/11/12, 2:51 AM",
      "commitNameOld": "f9f37e19876202a1db257a9e59452b0f10035fbf",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 334.6,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset \u003d m.group(1).trim();\n        charset \u003d charset.replace(\"charset\u003d\", \"\");\n        if (charset.isEmpty())\n            return null;\n        try {\n            if (Charset.isSupported(charset))\n                return charset;\n            charset \u003d charset.toUpperCase(Locale.ENGLISH);\n            if (Charset.isSupported(charset))\n                return charset;\n        } catch (IllegalCharsetNameException e) {\n            return null;\n        }\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/helper/DataUtil.java",
      "functionStartLine": 167,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
      "diff": "@@ -1,14 +1,21 @@\n static String getCharsetFromContentType(String contentType) {\n     if (contentType \u003d\u003d null)\n         return null;\n     Matcher m \u003d charsetPattern.matcher(contentType);\n     if (m.find()) {\n         String charset \u003d m.group(1).trim();\n-        if (Charset.isSupported(charset))\n-            return charset;\n-        charset \u003d charset.toUpperCase(Locale.ENGLISH);\n-        if (Charset.isSupported(charset))\n-            return charset;\n+        charset \u003d charset.replace(\"charset\u003d\", \"\");\n+        if (charset.isEmpty())\n+            return null;\n+        try {\n+            if (Charset.isSupported(charset))\n+                return charset;\n+            charset \u003d charset.toUpperCase(Locale.ENGLISH);\n+            if (Charset.isSupported(charset))\n+                return charset;\n+        } catch (IllegalCharsetNameException e) {\n+            return null;\n+        }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8963e2ac79a97e694c388622e935a0471267e9eb": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "If the charset from the server is not supported, fail-back to UTF8.\n\nFixes #215\n",
      "commitDate": "7/18/12, 10:33 PM",
      "commitName": "8963e2ac79a97e694c388622e935a0471267e9eb",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "If the charset from the server is not supported, fail-back to UTF8.\n\nFixes #215\n",
          "commitDate": "7/18/12, 10:33 PM",
          "commitName": "8963e2ac79a97e694c388622e935a0471267e9eb",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "5/14/12, 5:35 AM",
          "commitNameOld": "561d12a9894210d9f5a8a41d655361732a39b6c8",
          "commitAuthorOld": "OKA133",
          "daysBetweenCommits": 65.71,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset \u003d m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset \u003d charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n    }\n    return null;\n}",
          "path": "src/main/java/org/jsoup/helper/DataUtil.java",
          "functionStartLine": 127,
          "functionName": "getCharsetFromContentType",
          "functionAnnotation": "",
          "functionDoc": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
          "diff": "@@ -1,9 +1,14 @@\n static String getCharsetFromContentType(String contentType) {\n     if (contentType \u003d\u003d null)\n         return null;\n     Matcher m \u003d charsetPattern.matcher(contentType);\n     if (m.find()) {\n-        return m.group(1).trim().toUpperCase(Locale.ENGLISH);\n+        String charset \u003d m.group(1).trim();\n+        if (Charset.isSupported(charset))\n+            return charset;\n+        charset \u003d charset.toUpperCase(Locale.ENGLISH);\n+        if (Charset.isSupported(charset))\n+            return charset;\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "If the charset from the server is not supported, fail-back to UTF8.\n\nFixes #215\n",
          "commitDate": "7/18/12, 10:33 PM",
          "commitName": "8963e2ac79a97e694c388622e935a0471267e9eb",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "5/14/12, 5:35 AM",
          "commitNameOld": "561d12a9894210d9f5a8a41d655361732a39b6c8",
          "commitAuthorOld": "OKA133",
          "daysBetweenCommits": 65.71,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        String charset \u003d m.group(1).trim();\n        if (Charset.isSupported(charset))\n            return charset;\n        charset \u003d charset.toUpperCase(Locale.ENGLISH);\n        if (Charset.isSupported(charset))\n            return charset;\n    }\n    return null;\n}",
          "path": "src/main/java/org/jsoup/helper/DataUtil.java",
          "functionStartLine": 127,
          "functionName": "getCharsetFromContentType",
          "functionAnnotation": "",
          "functionDoc": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
          "diff": "@@ -1,9 +1,14 @@\n static String getCharsetFromContentType(String contentType) {\n     if (contentType \u003d\u003d null)\n         return null;\n     Matcher m \u003d charsetPattern.matcher(contentType);\n     if (m.find()) {\n-        return m.group(1).trim().toUpperCase(Locale.ENGLISH);\n+        String charset \u003d m.group(1).trim();\n+        if (Charset.isSupported(charset))\n+            return charset;\n+        charset \u003d charset.toUpperCase(Locale.ENGLISH);\n+        if (Charset.isSupported(charset))\n+            return charset;\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Parse out a charset from a content type header.\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
            "newValue": "Parse out a charset from a content type header. If the charset is not supported, returns null (so the default\nwill kick in.)\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n"
          }
        }
      ]
    },
    "561d12a9894210d9f5a8a41d655361732a39b6c8": {
      "type": "Ybodychange",
      "commitMessage": "Use English-locale settings when uppercasing charset.\r\nFixes a problem with Turkish characters, see: http://mattryall.net/blog/2009/02/the-infamous-turkish-locale-bug",
      "commitDate": "5/14/12, 5:35 AM",
      "commitName": "561d12a9894210d9f5a8a41d655361732a39b6c8",
      "commitAuthor": "OKA133",
      "commitDateOld": "3/25/12, 9:57 PM",
      "commitNameOld": "1d31086acba06579c4e7d5928dbba9ca8a0128b1",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 49.32,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        return m.group(1).trim().toUpperCase(Locale.ENGLISH);\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/helper/DataUtil.java",
      "functionStartLine": 126,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header.\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
      "diff": "@@ -1,9 +1,9 @@\n static String getCharsetFromContentType(String contentType) {\n     if (contentType \u003d\u003d null)\n         return null;\n     Matcher m \u003d charsetPattern.matcher(contentType);\n     if (m.find()) {\n-        return m.group(1).trim().toUpperCase();\n+        return m.group(1).trim().toUpperCase(Locale.ENGLISH);\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "437d8eca9f51dd0ed7af5b828412ee96ac192f17": {
      "type": "Yformatchange",
      "commitMessage": "Handle  unclosed \u003ctitle\u003e tags in document by breaking out of the title at the next start tag, instead of\neating up to the end of the document.\n\nFixes #82\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "437d8eca9f51dd0ed7af5b828412ee96ac192f17",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        return m.group(1).trim().toUpperCase();\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/helper/DataUtil.java",
      "functionStartLine": 107,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header.\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "ce843ec83988e3e3318fa7db38133b06be741a1f": {
      "type": "Yfilerename",
      "commitMessage": "Initial implementation of Connection\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "ce843ec83988e3e3318fa7db38133b06be741a1f",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "eec6bb02b3ce782af30f72048b800b8588c1908f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        return m.group(1).trim().toUpperCase();\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/helper/DataUtil.java",
      "functionStartLine": 84,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header.\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/jsoup/DataUtil.java",
        "newPath": "src/main/java/org/jsoup/helper/DataUtil.java"
      }
    },
    "7eeb74d133625c8819ba8da52e37f4e4db4b8a26": {
      "type": "Yintroduced",
      "commitMessage": "Automatically determine charset when parsing from URL or File.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,9 @@\n+static String getCharsetFromContentType(String contentType) {\n+    if (contentType \u003d\u003d null)\n+        return null;\n+    Matcher m \u003d charsetPattern.matcher(contentType);\n+    if (m.find()) {\n+        return m.group(1).trim().toUpperCase();\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static String getCharsetFromContentType(String contentType) {\n    if (contentType \u003d\u003d null)\n        return null;\n    Matcher m \u003d charsetPattern.matcher(contentType);\n    if (m.find()) {\n        return m.group(1).trim().toUpperCase();\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/DataUtil.java",
      "functionStartLine": 108,
      "functionName": "getCharsetFromContentType",
      "functionAnnotation": "",
      "functionDoc": "Parse out a charset from a content type header.\n\n@param contentType e.g. \"text/html; charset\u003dEUC-JP\"\n@return \"EUC-JP\", or null if not found. Charset is trimmed and uppercased.\n"
    }
  }
}