{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-10b",
  "repositoryPath": "/tmp/Jsoup-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Document.java",
  "functionName": "normaliseTextNodes",
  "functionId": "normaliseTextNodes___element-Element",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Document.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 121,
  "functionEndLine": 137,
  "numCommitsSeen": 50,
  "timeTaken": 557,
  "changeHistory": [
    "82855b07f5336d30c70dc20548ab7ab8adeac05e",
    "aec561f3328980182f299e61eaae45420245141b",
    "27a52f90a25699bebe23ff1ff94d6db361fdb11d",
    "d24b485e252d9e86858207da7a57678d41d3f72c"
  ],
  "changeHistoryShort": {
    "82855b07f5336d30c70dc20548ab7ab8adeac05e": "Yrename",
    "aec561f3328980182f299e61eaae45420245141b": "Ybodychange",
    "27a52f90a25699bebe23ff1ff94d6db361fdb11d": "Ybodychange",
    "d24b485e252d9e86858207da7a57678d41d3f72c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82855b07f5336d30c70dc20548ab7ab8adeac05e": {
      "type": "Yrename",
      "commitMessage": "Document normalisation now more correctly enforces document structure.\n - ensure only one head and one body element, both under html el\n - allow html/head/noscript/img for some site\u0027s analytic pattern\n\nFixes #43\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "82855b07f5336d30c70dc20548ab7ab8adeac05e",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e256bb7fc5979de256371bb324f1ca1330e38112",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "actualSource": "private void normaliseTextNodes(Element element) {\n    List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn \u003d (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n    for (int i \u003d toMove.size() - 1; i \u003e\u003d 0; i--) {\n        Node node \u003d toMove.get(i);\n        element.removeChild(node);\n        body().prependChild(new TextNode(\" \", \"\"));\n        body().prependChild(node);\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Document.java",
      "functionStartLine": 121,
      "functionName": "normaliseTextNodes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n-private void normalise(Element element) {\n+private void normaliseTextNodes(Element element) {\n     List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n     for (Node node : element.childNodes) {\n         if (node instanceof TextNode) {\n             TextNode tn \u003d (TextNode) node;\n             if (!tn.isBlank())\n                 toMove.add(tn);\n         }\n     }\n     for (int i \u003d toMove.size() - 1; i \u003e\u003d 0; i--) {\n         Node node \u003d toMove.get(i);\n         element.removeChild(node);\n         body().prependChild(new TextNode(\" \", \"\"));\n         body().prependChild(node);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "normalise",
        "newValue": "normaliseTextNodes"
      }
    },
    "aec561f3328980182f299e61eaae45420245141b": {
      "type": "Ybodychange",
      "commitMessage": "Added :has(selector) pseudo-selector.\nAdded Element#parents() and Elements#parents() methods.\n\nFixes #20\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "aec561f3328980182f299e61eaae45420245141b",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "27a52f90a25699bebe23ff1ff94d6db361fdb11d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void normalise(Element element) {\n    List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn \u003d (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n    for (int i \u003d toMove.size() - 1; i \u003e\u003d 0; i--) {\n        Node node \u003d toMove.get(i);\n        element.removeChild(node);\n        body().prependChild(new TextNode(\" \", \"\"));\n        body().prependChild(node);\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Document.java",
      "functionStartLine": 113,
      "functionName": "normalise",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,16 @@\n private void normalise(Element element) {\n     List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n     for (Node node : element.childNodes) {\n         if (node instanceof TextNode) {\n             TextNode tn \u003d (TextNode) node;\n             if (!tn.isBlank())\n                 toMove.add(tn);\n         }\n     }\n-    for (Node node : toMove) {\n+    for (int i \u003d toMove.size() - 1; i \u003e\u003d 0; i--) {\n+        Node node \u003d toMove.get(i);\n         element.removeChild(node);\n-        body().prependChild(node);\n         body().prependChild(new TextNode(\" \", \"\"));\n+        body().prependChild(node);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "27a52f90a25699bebe23ff1ff94d6db361fdb11d": {
      "type": "Ybodychange",
      "commitMessage": "Fix an issue where text order was incorrect when parsing pre-document HTML.\n\nFixes #23\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "27a52f90a25699bebe23ff1ff94d6db361fdb11d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "6b60af669bc6102f0328af330532986b8670f3ac",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "private void normalise(Element element) {\n    List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn \u003d (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n    for (Node node : toMove) {\n        element.removeChild(node);\n        body().prependChild(node);\n        body().prependChild(new TextNode(\" \", \"\"));\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Document.java",
      "functionStartLine": 113,
      "functionName": "normalise",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n private void normalise(Element element) {\n     List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n     for (Node node : element.childNodes) {\n         if (node instanceof TextNode) {\n             TextNode tn \u003d (TextNode) node;\n             if (!tn.isBlank())\n                 toMove.add(tn);\n         }\n     }\n     for (Node node : toMove) {\n         element.removeChild(node);\n-        body().appendChild(new TextNode(\" \", \"\"));\n-        body().appendChild(node);\n+        body().prependChild(node);\n+        body().prependChild(new TextNode(\" \", \"\"));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d24b485e252d9e86858207da7a57678d41d3f72c": {
      "type": "Yintroduced",
      "commitMessage": "Improved document normalisation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "d24b485e252d9e86858207da7a57678d41d3f72c",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,15 @@\n+private void normalise(Element element) {\n+    List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n+    for (Node node : element.childNodes) {\n+        if (node instanceof TextNode) {\n+            TextNode tn \u003d (TextNode) node;\n+            if (!tn.isBlank())\n+                toMove.add(tn);\n+        }\n+    }\n+    for (Node node : toMove) {\n+        element.removeChild(node);\n+        body().appendChild(new TextNode(\" \", \"\"));\n+        body().appendChild(node);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void normalise(Element element) {\n    List\u003cNode\u003e toMove \u003d new ArrayList\u003cNode\u003e();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn \u003d (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n    for (Node node : toMove) {\n        element.removeChild(node);\n        body().appendChild(new TextNode(\" \", \"\"));\n        body().appendChild(node);\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Document.java",
      "functionStartLine": 111,
      "functionName": "normalise",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}