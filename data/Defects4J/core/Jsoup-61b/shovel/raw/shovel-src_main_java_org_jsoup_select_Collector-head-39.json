{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-61b",
  "repositoryPath": "/tmp/Jsoup-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Collector.java",
  "functionName": "head",
  "functionId": "$head___node-Node__depth-int",
  "sourceFilePath": "src/main/java/org/jsoup/select/Collector.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 39,
  "functionEndLine": 45,
  "numCommitsSeen": 10,
  "timeTaken": 506,
  "changeHistory": [
    "bbca7db20b9a45fb3d8efb29447349ed8593649c",
    "ae7308a2832897f351712e44f656a3e71fac7efc",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858"
  ],
  "changeHistoryShort": {
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": "Ybodychange",
    "ae7308a2832897f351712e44f656a3e71fac7efc": "Ybodychange",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": {
      "type": "Ybodychange",
      "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "ae7308a2832897f351712e44f656a3e71fac7efc",
      "commitAuthorOld": "Anton Kazennikov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public void head(Node node, int depth) {\n    if (node instanceof Element) {\n        Element el \u003d (Element) node;\n        if (eval.matches(root, el))\n            elements.add(el);\n    }\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 39,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n public void head(Node node, int depth) {\n     if (node instanceof Element) {\n         Element el \u003d (Element) node;\n-        if (eval.matches(el, el))\n+        if (eval.matches(root, el))\n             elements.add(el);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ae7308a2832897f351712e44f656a3e71fac7efc": {
      "type": "Ybodychange",
      "commitMessage": "Evaluator.match(Element test) -\u003e\nEvaluator.match(Element root, Element test)\nchange\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "ae7308a2832897f351712e44f656a3e71fac7efc",
      "commitAuthor": "Anton Kazennikov",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "b57bab46e4241cd3cacce52cb6ff310bbf69eb7b",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "public void head(Node node, int depth) {\n    if (node instanceof Element) {\n        Element el \u003d (Element) node;\n        if (eval.matches(el, el))\n            elements.add(el);\n    }\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 38,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n public void head(Node node, int depth) {\n     if (node instanceof Element) {\n         Element el \u003d (Element) node;\n-        if (eval.matches(el))\n+        if (eval.matches(el, el))\n             elements.add(el);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Yintroduced",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,7 @@\n+public void head(Node node, int depth) {\n+    if (node instanceof Element) {\n+        Element el \u003d (Element) node;\n+        if (eval.matches(el))\n+            elements.add(el);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void head(Node node, int depth) {\n    if (node instanceof Element) {\n        Element el \u003d (Element) node;\n        if (eval.matches(el))\n            elements.add(el);\n    }\n}",
      "path": "src/main/java/org/jsoup/select/Collector.java",
      "functionStartLine": 37,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}