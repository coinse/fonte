{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-61b",
  "repositoryPath": "/tmp/Jsoup-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "hasClass",
  "functionId": "hasClass___className-String",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1091,
  "functionEndLine": 1132,
  "numCommitsSeen": 117,
  "timeTaken": 3433,
  "changeHistory": [
    "4f5a56459a98e21780d813919da66de9eee91b74",
    "d3c582598890d1e5e31e4f26e8452ad2dbf40b47",
    "495cb3d885125843cb409372a38ac25f13d3b2f6",
    "bbca7db20b9a45fb3d8efb29447349ed8593649c",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2"
  ],
  "changeHistoryShort": {
    "4f5a56459a98e21780d813919da66de9eee91b74": "Ybodychange",
    "d3c582598890d1e5e31e4f26e8452ad2dbf40b47": "Ybodychange",
    "495cb3d885125843cb409372a38ac25f13d3b2f6": "Ymultichange(Ybodychange,Ydocchange)",
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": "Ymultichange(Ybodychange,Ydocchange)",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4f5a56459a98e21780d813919da66de9eee91b74": {
      "type": "Ybodychange",
      "commitMessage": "Changelog for #753 and tidied up comments a little\n\nFixes #753\n",
      "commitDate": "8/24/16, 5:04 PM",
      "commitName": "4f5a56459a98e21780d813919da66de9eee91b74",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "8/23/16, 8:11 AM",
      "commitNameOld": "d3c582598890d1e5e31e4f26e8452ad2dbf40b47",
      "commitAuthorOld": "benoit",
      "daysBetweenCommits": 1.37,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasClass(String className) {\n    final String classAttr \u003d attributes.get(\"class\");\n    final int len \u003d classAttr.length();\n    final int wantLen \u003d className.length();\n    if (len \u003d\u003d 0 || len \u003c wantLen) {\n        return false;\n    }\n    if (len \u003d\u003d wantLen) {\n        return className.equalsIgnoreCase(classAttr);\n    }\n    boolean inClass \u003d false;\n    int start \u003d 0;\n    for (int i \u003d 0; i \u003c len; i++) {\n        if (Character.isWhitespace(classAttr.charAt(i))) {\n            if (inClass) {\n                if (i - start \u003d\u003d wantLen \u0026\u0026 classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                    return true;\n                }\n                inClass \u003d false;\n            }\n        } else {\n            if (!inClass) {\n                inClass \u003d true;\n                start \u003d i;\n            }\n        }\n    }\n    if (inClass \u0026\u0026 len - start \u003d\u003d wantLen) {\n        return classAttr.regionMatches(true, start, className, 0, wantLen);\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1061,
      "functionName": "hasClass",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,32 +1,32 @@\n public boolean hasClass(String className) {\n-    String classAttr \u003d attributes.get(\"class\");\n-    final int end \u003d classAttr.length();\n-    final int classNameLength \u003d className.length();\n-    if (end \u003d\u003d 0 || end \u003c classNameLength) {\n+    final String classAttr \u003d attributes.get(\"class\");\n+    final int len \u003d classAttr.length();\n+    final int wantLen \u003d className.length();\n+    if (len \u003d\u003d 0 || len \u003c wantLen) {\n         return false;\n     }\n-    if (end \u003d\u003d classNameLength) {\n+    if (len \u003d\u003d wantLen) {\n         return className.equalsIgnoreCase(classAttr);\n     }\n     boolean inClass \u003d false;\n     int start \u003d 0;\n-    for (int i \u003d 0; i \u003c end; i++) {\n+    for (int i \u003d 0; i \u003c len; i++) {\n         if (Character.isWhitespace(classAttr.charAt(i))) {\n             if (inClass) {\n-                if (i - start \u003d\u003d classNameLength \u0026\u0026 classAttr.regionMatches(true, start, className, 0, classNameLength)) {\n+                if (i - start \u003d\u003d wantLen \u0026\u0026 classAttr.regionMatches(true, start, className, 0, wantLen)) {\n                     return true;\n                 }\n                 inClass \u003d false;\n             }\n         } else {\n             if (!inClass) {\n                 inClass \u003d true;\n                 start \u003d i;\n             }\n         }\n     }\n-    if (inClass \u0026\u0026 end - start \u003d\u003d classNameLength) {\n-        return classAttr.regionMatches(true, start, className, 0, classNameLength);\n+    if (inClass \u0026\u0026 len - start \u003d\u003d wantLen) {\n+        return classAttr.regionMatches(true, start, className, 0, wantLen);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d3c582598890d1e5e31e4f26e8452ad2dbf40b47": {
      "type": "Ybodychange",
      "commitMessage": "optimize Element#hasClass this method is perf sensitive (CPU and memory\nallocations)\nThis replace the regexp split with a custom implementation that do not\nallocate unneeded memory.\nWith this patch a simple test calling Element#select in a loop for\nseveral selector went from 3Gb allocated to 10Mb.\nGC times were reduced.\nFixes #752",
      "commitDate": "8/23/16, 8:11 AM",
      "commitName": "d3c582598890d1e5e31e4f26e8452ad2dbf40b47",
      "commitAuthor": "benoit",
      "commitDateOld": "8/5/16, 3:05 PM",
      "commitNameOld": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 17.71,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasClass(String className) {\n    String classAttr \u003d attributes.get(\"class\");\n    final int end \u003d classAttr.length();\n    final int classNameLength \u003d className.length();\n    if (end \u003d\u003d 0 || end \u003c classNameLength) {\n        return false;\n    }\n    if (end \u003d\u003d classNameLength) {\n        return className.equalsIgnoreCase(classAttr);\n    }\n    boolean inClass \u003d false;\n    int start \u003d 0;\n    for (int i \u003d 0; i \u003c end; i++) {\n        if (Character.isWhitespace(classAttr.charAt(i))) {\n            if (inClass) {\n                if (i - start \u003d\u003d classNameLength \u0026\u0026 classAttr.regionMatches(true, start, className, 0, classNameLength)) {\n                    return true;\n                }\n                inClass \u003d false;\n            }\n        } else {\n            if (!inClass) {\n                inClass \u003d true;\n                start \u003d i;\n            }\n        }\n    }\n    if (inClass \u0026\u0026 end - start \u003d\u003d classNameLength) {\n        return classAttr.regionMatches(true, start, className, 0, classNameLength);\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 1068,
      "functionName": "hasClass",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,32 @@\n public boolean hasClass(String className) {\n     String classAttr \u003d attributes.get(\"class\");\n-    if (classAttr.equals(\"\") || classAttr.length() \u003c className.length())\n+    final int end \u003d classAttr.length();\n+    final int classNameLength \u003d className.length();\n+    if (end \u003d\u003d 0 || end \u003c classNameLength) {\n         return false;\n-    final String[] classes \u003d classSplit.split(classAttr);\n-    for (String name : classes) {\n-        if (className.equalsIgnoreCase(name))\n-            return true;\n+    }\n+    if (end \u003d\u003d classNameLength) {\n+        return className.equalsIgnoreCase(classAttr);\n+    }\n+    boolean inClass \u003d false;\n+    int start \u003d 0;\n+    for (int i \u003d 0; i \u003c end; i++) {\n+        if (Character.isWhitespace(classAttr.charAt(i))) {\n+            if (inClass) {\n+                if (i - start \u003d\u003d classNameLength \u0026\u0026 classAttr.regionMatches(true, start, className, 0, classNameLength)) {\n+                    return true;\n+                }\n+                inClass \u003d false;\n+            }\n+        } else {\n+            if (!inClass) {\n+                inClass \u003d true;\n+                start \u003d i;\n+            }\n+        }\n+    }\n+    if (inClass \u0026\u0026 end - start \u003d\u003d classNameLength) {\n+        return classAttr.regionMatches(true, start, className, 0, classNameLength);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "495cb3d885125843cb409372a38ac25f13d3b2f6": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Speed improvement for .class selector\n\n2.5x to 14x on Android 5.\n",
      "commitDate": "4/6/15, 9:33 PM",
      "commitName": "495cb3d885125843cb409372a38ac25f13d3b2f6",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Speed improvement for .class selector\n\n2.5x to 14x on Android 5.\n",
          "commitDate": "4/6/15, 9:33 PM",
          "commitName": "495cb3d885125843cb409372a38ac25f13d3b2f6",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/29/15, 6:10 PM",
          "commitNameOld": "8391b7231a2519557d41209d728acc4f422af381",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 8.14,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean hasClass(String className) {\n    String classAttr \u003d attributes.get(\"class\");\n    if (classAttr.equals(\"\") || classAttr.length() \u003c className.length())\n        return false;\n    final String[] classes \u003d classSplit.split(classAttr);\n    for (String name : classes) {\n        if (className.equalsIgnoreCase(name))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 1034,
          "functionName": "hasClass",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,11 @@\n public boolean hasClass(String className) {\n-    Set\u003cString\u003e classNames \u003d classNames();\n-    for (String name : classNames) {\n+    String classAttr \u003d attributes.get(\"class\");\n+    if (classAttr.equals(\"\") || classAttr.length() \u003c className.length())\n+        return false;\n+    final String[] classes \u003d classSplit.split(classAttr);\n+    for (String name : classes) {\n         if (className.equalsIgnoreCase(name))\n             return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Speed improvement for .class selector\n\n2.5x to 14x on Android 5.\n",
          "commitDate": "4/6/15, 9:33 PM",
          "commitName": "495cb3d885125843cb409372a38ac25f13d3b2f6",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/29/15, 6:10 PM",
          "commitNameOld": "8391b7231a2519557d41209d728acc4f422af381",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 8.14,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean hasClass(String className) {\n    String classAttr \u003d attributes.get(\"class\");\n    if (classAttr.equals(\"\") || classAttr.length() \u003c className.length())\n        return false;\n    final String[] classes \u003d classSplit.split(classAttr);\n    for (String name : classes) {\n        if (className.equalsIgnoreCase(name))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 1034,
          "functionName": "hasClass",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,11 @@\n public boolean hasClass(String className) {\n-    Set\u003cString\u003e classNames \u003d classNames();\n-    for (String name : classNames) {\n+    String classAttr \u003d attributes.get(\"class\");\n+    if (classAttr.equals(\"\") || classAttr.length() \u003c className.length())\n+        return false;\n+    final String[] classes \u003d classSplit.split(classAttr);\n+    for (String name : classes) {\n         if (className.equalsIgnoreCase(name))\n             return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Tests if this element has a class. Case insensitive.\n\n@param className name of class to check for\n@return true if it does, false if not\n",
            "newValue": ""
          }
        }
      ]
    },
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "ca8bad78bf898f808ad6028d4a7c09a69bc65b84",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean hasClass(String className) {\n    Set\u003cString\u003e classNames \u003d classNames();\n    for (String name : classNames) {\n        if (className.equalsIgnoreCase(name))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 894,
          "functionName": "hasClass",
          "functionAnnotation": "",
          "functionDoc": "Tests if this element has a class. Case insensitive.\n\n@param className name of class to check for\n@return true if it does, false if not\n",
          "diff": "@@ -1,3 +1,8 @@\n public boolean hasClass(String className) {\n-    return classNames().contains(className);\n+    Set\u003cString\u003e classNames \u003d classNames();\n+    for (String name : classNames) {\n+        if (className.equalsIgnoreCase(name))\n+            return true;\n+    }\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "ca8bad78bf898f808ad6028d4a7c09a69bc65b84",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean hasClass(String className) {\n    Set\u003cString\u003e classNames \u003d classNames();\n    for (String name : classNames) {\n        if (className.equalsIgnoreCase(name))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 894,
          "functionName": "hasClass",
          "functionAnnotation": "",
          "functionDoc": "Tests if this element has a class. Case insensitive.\n\n@param className name of class to check for\n@return true if it does, false if not\n",
          "diff": "@@ -1,3 +1,8 @@\n public boolean hasClass(String className) {\n-    return classNames().contains(className);\n+    Set\u003cString\u003e classNames \u003d classNames();\n+    for (String name : classNames) {\n+        if (className.equalsIgnoreCase(name))\n+            return true;\n+    }\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Tests if this element has a class.\n\n@param className name of class to check for\n@return true if it does, false if not\n",
            "newValue": "Tests if this element has a class. Case insensitive.\n\n@param className name of class to check for\n@return true if it does, false if not\n"
          }
        }
      ]
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean hasClass(String className) {\n    return classNames().contains(className);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 505,
      "functionName": "hasClass",
      "functionAnnotation": "",
      "functionDoc": "Tests if this element has a class.\n\n@param className name of class to check for\n@return true if it does, false if not\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Tests if this element has a class.\n\n@param className name of class to check for\n@return true if it does, false if not\n"
      }
    },
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": {
      "type": "Yintroduced",
      "commitMessage": "Implemented:\n * Element.getElementsByClass\n * Element.getElementsWithAttribute\n * Element.getElementsWithAttributeValue\n * Element.className\n * Element.hasClass\n * Elmenet.classNames\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f435b791e193cfe771d7dbd28d2822c32a0889e2",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,3 @@\n+public boolean hasClass(String className) {\n+    return classNames().contains(className);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean hasClass(String className) {\n    return classNames().contains(className);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 200,
      "functionName": "hasClass",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}