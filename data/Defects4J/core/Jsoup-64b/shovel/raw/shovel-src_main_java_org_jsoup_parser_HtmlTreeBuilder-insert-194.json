{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-64b",
  "repositoryPath": "/tmp/Jsoup-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HtmlTreeBuilder.java",
  "functionName": "insert",
  "functionId": "insert___startTag-Token.StartTag",
  "sourceFilePath": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 194,
  "functionEndLine": 208,
  "numCommitsSeen": 33,
  "timeTaken": 2726,
  "changeHistory": [
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
    "e99193605b688e923d20054c13db897cff751607",
    "2518e92a052d922d81d11e28b8e5205639fed9a7",
    "c3c952e55f10b07dd9d4a9121db1b3828b0a1bc7",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
    "7fe868089855c33d6345e740bfdbe6f140794598",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d": "Ybodychange",
    "e99193605b688e923d20054c13db897cff751607": "Ybodychange",
    "2518e92a052d922d81d11e28b8e5205639fed9a7": "Ybodychange",
    "c3c952e55f10b07dd9d4a9121db1b3828b0a1bc7": "Ybodychange",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": "Ymovefromfile",
    "7fe868089855c33d6345e740bfdbe6f140794598": "Yformatchange",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d": {
      "type": "Ybodychange",
      "commitMessage": "Introduced ParseSettings for tag and attribute name case options.\n",
      "commitDate": "8/5/16, 3:05 PM",
      "commitName": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "4/23/16, 12:53 PM",
      "commitNameOld": "31be24fb9312af091f7e751b6011b1ed5bb03795",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 104.09,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing()) {\n        Element el \u003d insertEmpty(startTag);\n        stack.add(el);\n        tokeniser.transition(TokeniserState.Data);\n        tokeniser.emit(emptyEnd.reset().name(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 174,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n Element insert(Token.StartTag startTag) {\n     if (startTag.isSelfClosing()) {\n         Element el \u003d insertEmpty(startTag);\n         stack.add(el);\n         tokeniser.transition(TokeniserState.Data);\n         tokeniser.emit(emptyEnd.reset().name(el.tagName()));\n         return el;\n     }\n-    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n+    Element el \u003d new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));\n     insert(el);\n     return el;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e99193605b688e923d20054c13db897cff751607": {
      "type": "Ybodychange",
      "commitMessage": "Reuse Tokens, instead of creating all the time\n\nSaves an awful lot of GC. These are just data transfer objects, so not\nworth creating every time.\n",
      "commitDate": "10/27/14, 9:29 PM",
      "commitName": "e99193605b688e923d20054c13db897cff751607",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/27/14, 7:17 PM",
      "commitNameOld": "17796e34f7a9d00ba1d22db36af26cdea0fb28b7",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing()) {\n        Element el \u003d insertEmpty(startTag);\n        stack.add(el);\n        tokeniser.transition(TokeniserState.Data);\n        tokeniser.emit(emptyEnd.reset().name(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 171,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n Element insert(Token.StartTag startTag) {\n     if (startTag.isSelfClosing()) {\n         Element el \u003d insertEmpty(startTag);\n         stack.add(el);\n         tokeniser.transition(TokeniserState.Data);\n-        tokeniser.emit(new Token.EndTag(el.tagName()));\n+        tokeniser.emit(emptyEnd.reset().name(el.tagName()));\n         return el;\n     }\n     Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n     insert(el);\n     return el;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2518e92a052d922d81d11e28b8e5205639fed9a7": {
      "type": "Ybodychange",
      "commitMessage": "Fixed support for self-closing script tags.\n\nFixes #305\n",
      "commitDate": "10/6/13, 1:46 PM",
      "commitName": "2518e92a052d922d81d11e28b8e5205639fed9a7",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "2/7/13, 5:38 PM",
      "commitNameOld": "c5792eb641b13f8a853b6f065b6998053d106b7d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 240.8,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing()) {\n        Element el \u003d insertEmpty(startTag);\n        stack.add(el);\n        tokeniser.transition(TokeniserState.Data);\n        tokeniser.emit(new Token.EndTag(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 156,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n Element insert(Token.StartTag startTag) {\n     if (startTag.isSelfClosing()) {\n         Element el \u003d insertEmpty(startTag);\n         stack.add(el);\n+        tokeniser.transition(TokeniserState.Data);\n         tokeniser.emit(new Token.EndTag(el.tagName()));\n         return el;\n     }\n     Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n     insert(el);\n     return el;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c3c952e55f10b07dd9d4a9121db1b3828b0a1bc7": {
      "type": "Ybodychange",
      "commitMessage": "When parsing, allow all tags to self-close.\n\nTags that aren\u0027t expected to self-close will get an end tag.\n\nFixes #2458\n",
      "commitDate": "1/26/13, 6:33 PM",
      "commitName": "c3c952e55f10b07dd9d4a9121db1b3828b0a1bc7",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "5/26/12, 2:12 PM",
      "commitNameOld": "5c43ce2d83e44cd46049a7f0bfaeb5d9a322c032",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 245.22,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing()) {\n        Element el \u003d insertEmpty(startTag);\n        stack.add(el);\n        tokeniser.emit(new Token.EndTag(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 145,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,11 @@\n Element insert(Token.StartTag startTag) {\n-    if (startTag.isSelfClosing() \u0026\u0026 !Tag.isKnownTag(startTag.name())) {\n+    if (startTag.isSelfClosing()) {\n         Element el \u003d insertEmpty(startTag);\n-        process(new Token.EndTag(el.tagName()));\n+        stack.add(el);\n+        tokeniser.emit(new Token.EndTag(el.tagName()));\n         return el;\n     }\n     Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n     insert(el);\n     return el;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": {
      "type": "Ymovefromfile",
      "commitMessage": "First draft of a simple XML treebuilder / parser.\n\nThis provides an alternative to the HTML5 parser which enforces HTML\nsemantics on the parsed input. The simple XML parser has no understanding\nof HTML, and will parse the input as-is into a DOM.\n",
      "commitDate": "2/26/12, 5:23 PM",
      "commitName": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/30/11, 6:13 PM",
      "commitNameOld": "1e84edbe208aab0c9330eadc50f9773d81d70cd6",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 149.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing() \u0026\u0026 !Tag.isKnownTag(startTag.name())) {\n        Element el \u003d insertEmpty(startTag);\n        process(new Token.EndTag(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
      "functionStartLine": 144,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/jsoup/parser/TreeBuilder.java",
        "newPath": "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
        "oldMethodName": "insert",
        "newMethodName": "insert"
      }
    },
    "7fe868089855c33d6345e740bfdbe6f140794598": {
      "type": "Yformatchange",
      "commitMessage": "Fixed an issue when parsing \u003cscript\u003e tags.\n\nWhen in body where the tokeniser wouldn\u0027t switch to the InScript state, which meant that data in a \u003cscript\u003e wouldn\u0027t parse correctly.\n\nFixes #104\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "7fe868089855c33d6345e740bfdbe6f140794598",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "ab4890183496beea6d4908c4adb672e15c1136a5",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing() \u0026\u0026 !Tag.isKnownTag(startTag.name())) {\n        Element el \u003d insertEmpty(startTag);\n        process(new Token.EndTag(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 172,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,10 @@\n+Element insert(Token.StartTag startTag) {\n+    if (startTag.isSelfClosing() \u0026\u0026 !Tag.isKnownTag(startTag.name())) {\n+        Element el \u003d insertEmpty(startTag);\n+        process(new Token.EndTag(el.tagName()));\n+        return el;\n+    }\n+    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n+    insert(el);\n+    return el;\n+}\n\\ No newline at end of file\n",
      "actualSource": "Element insert(Token.StartTag startTag) {\n    if (startTag.isSelfClosing() \u0026\u0026 !Tag.isKnownTag(startTag.name())) {\n        Element el \u003d insertEmpty(startTag);\n        process(new Token.EndTag(el.tagName()));\n        return el;\n    }\n    Element el \u003d new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 171,
      "functionName": "insert",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}