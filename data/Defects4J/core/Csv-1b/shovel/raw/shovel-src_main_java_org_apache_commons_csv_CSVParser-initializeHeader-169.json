{
  "origin": "codeshovel",
  "repositoryName": "Csv-1b",
  "repositoryPath": "/tmp/Csv-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVParser.java",
  "functionName": "initializeHeader",
  "functionId": "initializeHeader___format-CSVFormat",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVParser.java",
  "functionAnnotation": "",
  "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
  "functionStartLine": 169,
  "functionEndLine": 193,
  "numCommitsSeen": 36,
  "timeTaken": 587,
  "changeHistory": [
    "43987a7d781598d1f7896a07c78755a62698efbd",
    "d0035e6c7a3f911a735485e0893e26950c15f098",
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55",
    "aee6c50e2830c007a572cc96a57bc105308acc49"
  ],
  "changeHistoryShort": {
    "43987a7d781598d1f7896a07c78755a62698efbd": "Ybodychange",
    "d0035e6c7a3f911a735485e0893e26950c15f098": "Ymultichange(Yreturntypechange,Ybodychange)",
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55": "Ybodychange",
    "aee6c50e2830c007a572cc96a57bc105308acc49": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43987a7d781598d1f7896a07c78755a62698efbd": {
      "type": "Ybodychange",
      "commitMessage": "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/22/12, 3:16 PM",
      "commitName": "43987a7d781598d1f7896a07c78755a62698efbd",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/21/12, 4:46 PM",
      "commitNameOld": "65ab9db952daebf62fc092c90f7f74cbb25b8c0f",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord rec \u003d getRecord();\n            if (rec !\u003d null) {\n                header \u003d rec.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 173,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,21 +1,21 @@\n private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n     Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n         hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n-            CSVRecord record \u003d getRecord();\n-            if (record !\u003d null) {\n-                header \u003d record.values();\n+            CSVRecord rec \u003d getRecord();\n+            if (rec !\u003d null) {\n+                header \u003d rec.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n                 hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n     return hdrMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d0035e6c7a3f911a735485e0893e26950c15f098": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/21/12, 9:01 AM",
      "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/21/12, 9:01 AM",
          "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "3/17/12, 5:29 AM",
          "commitNameOld": "c9dedff12e98a34ab4225bc65f810c0954207f11",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 4.15,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 175,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,19 +1,21 @@\n-private void initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+    Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n-        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], Integer.valueOf(i));\n+                hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n+    return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Map\u003cString,Integer\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/21/12, 9:01 AM",
          "commitName": "d0035e6c7a3f911a735485e0893e26950c15f098",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "3/17/12, 5:29 AM",
          "commitNameOld": "c9dedff12e98a34ab4225bc65f810c0954207f11",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 4.15,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "actualSource": "private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n    Map\u003cString, Integer\u003e hdrMap \u003d null;\n    if (format.getHeader() !\u003d null) {\n        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                hdrMap.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n    return hdrMap;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
          "functionStartLine": 175,
          "functionName": "initializeHeader",
          "functionAnnotation": "",
          "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
          "diff": "@@ -1,19 +1,21 @@\n-private void initializeHeader(CSVFormat format) throws IOException {\n+private Map\u003cString, Integer\u003e initializeHeader(CSVFormat format) throws IOException {\n+    Map\u003cString, Integer\u003e hdrMap \u003d null;\n     if (format.getHeader() !\u003d null) {\n-        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        hdrMap \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], Integer.valueOf(i));\n+                hdrMap.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n+    return hdrMap;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55": {
      "type": "Ybodychange",
      "commitMessage": "Explict boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 9:11 PM",
      "commitName": "7d07c1915c7fbabb9deb83c3ecb0d04d7ba15b55",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/16/12, 6:39 PM",
      "commitNameOld": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void initializeHeader(CSVFormat format) throws IOException {\n    if (format.getHeader() !\u003d null) {\n        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                headerMapping.put(header[i], Integer.valueOf(i));\n            }\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 179,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void initializeHeader(CSVFormat format) throws IOException {\n     if (format.getHeader() !\u003d null) {\n         headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n         String[] header \u003d null;\n         if (format.getHeader().length \u003d\u003d 0) {\n             CSVRecord record \u003d getRecord();\n             if (record !\u003d null) {\n                 header \u003d record.values();\n             }\n         } else {\n             header \u003d format.getHeader();\n         }\n         if (header !\u003d null) {\n             for (int i \u003d 0; i \u003c header.length; i++) {\n-                headerMapping.put(header[i], i);\n+                headerMapping.put(header[i], Integer.valueOf(i));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aee6c50e2830c007a572cc96a57bc105308acc49": {
      "type": "Yintroduced",
      "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 6:39 PM",
      "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,19 @@\n+private void initializeHeader(CSVFormat format) throws IOException {\n+    if (format.getHeader() !\u003d null) {\n+        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n+        String[] header \u003d null;\n+        if (format.getHeader().length \u003d\u003d 0) {\n+            CSVRecord record \u003d getRecord();\n+            if (record !\u003d null) {\n+                header \u003d record.values();\n+            }\n+        } else {\n+            header \u003d format.getHeader();\n+        }\n+        if (header !\u003d null) {\n+            for (int i \u003d 0; i \u003c header.length; i++) {\n+                headerMapping.put(header[i], i);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void initializeHeader(CSVFormat format) throws IOException {\n    if (format.getHeader() !\u003d null) {\n        headerMapping \u003d new HashMap\u003cString, Integer\u003e();\n        String[] header \u003d null;\n        if (format.getHeader().length \u003d\u003d 0) {\n            CSVRecord record \u003d getRecord();\n            if (record !\u003d null) {\n                header \u003d record.values();\n            }\n        } else {\n            header \u003d format.getHeader();\n        }\n        if (header !\u003d null) {\n            for (int i \u003d 0; i \u003c header.length; i++) {\n                headerMapping.put(header[i], i);\n            }\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVParser.java",
      "functionStartLine": 179,
      "functionName": "initializeHeader",
      "functionAnnotation": "",
      "functionDoc": "Initializes the name to index mapping if the format defines a header.\n"
    }
  }
}