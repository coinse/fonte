{
  "origin": "codeshovel",
  "repositoryName": "Collections-25b",
  "repositoryPath": "/tmp/Collections-25b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CollatingIterator.java",
  "functionName": "least",
  "functionId": "least",
  "sourceFilePath": "src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n",
  "functionStartLine": 352,
  "functionEndLine": 376,
  "numCommitsSeen": 38,
  "timeTaken": 4705,
  "changeHistory": [
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf",
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
    "4303c163b15bd43cb34626c0cd2c7984e5644297",
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa",
    "e4ba77b3b117b17efbbfd8f67ef31a5b76ded65a",
    "d16bc8509fc423540a131184552649de1bbcaf98",
    "1088244314d5fb7a5d197ad5d15cf5a85a821f3e",
    "f26c68bf7bd4f73f1c21eb9d1c197bb2ebf08f2b",
    "2d1bbdb5aaf2219c8db6b5195cf6c4594eb0d8af",
    "32487bf55bb0e2ed7945788e79c0347813aa400c"
  ],
  "changeHistoryShort": {
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf": "Ymovefromfile",
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9": "Ybodychange",
    "4303c163b15bd43cb34626c0cd2c7984e5644297": "Ymultichange(Ybodychange,Ydocchange)",
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa": "Yfilerename",
    "e4ba77b3b117b17efbbfd8f67ef31a5b76ded65a": "Ybodychange",
    "d16bc8509fc423540a131184552649de1bbcaf98": "Ybodychange",
    "1088244314d5fb7a5d197ad5d15cf5a85a821f3e": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "f26c68bf7bd4f73f1c21eb9d1c197bb2ebf08f2b": "Yfilerename",
    "2d1bbdb5aaf2219c8db6b5195cf6c4594eb0d8af": "Ydocchange",
    "32487bf55bb0e2ed7945788e79c0347813aa400c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf": {
      "type": "Ymovefromfile",
      "commitMessage": "[COLLECTIONS-452] Change package to o.a.c.collections4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1469004 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/17/13, 10:37 AM",
      "commitName": "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "4/16/13, 1:12 PM",
      "commitNameOld": "6a12cf861dc449eb650009078e0308f7da89ad61",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                final E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java",
      "functionStartLine": 352,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java",
        "newPath": "src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java",
        "oldMethodName": "least",
        "newMethodName": "least"
      }
    },
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9": {
      "type": "Ybodychange",
      "commitMessage": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1429905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/7/13, 9:15 AM",
      "commitName": "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "1/7/13, 8:48 AM",
      "commitNameOld": "745dd6673f3f40ae080d9c27501cf1452213d96f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                final E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java",
      "functionStartLine": 352,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n",
      "diff": "@@ -1,25 +1,25 @@\n private int least() {\n     int leastIndex \u003d -1;\n     E leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n         if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n-                E curObject \u003d values.get(i);\n+                final E curObject \u003d values.get(i);\n                 if (comparator \u003d\u003d null) {\n                     throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                 }\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4303c163b15bd43cb34626c0cd2c7984e5644297": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Add change for 3.2.2 also for 4.0 release, fix javadoc for COLLECTIONS-331.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366195 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/26/12, 1:50 PM",
      "commitName": "4303c163b15bd43cb34626c0cd2c7984e5644297",
      "commitAuthor": "Thomas Neidhart",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Add change for 3.2.2 also for 4.0 release, fix javadoc for COLLECTIONS-331.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/26/12, 1:50 PM",
          "commitName": "4303c163b15bd43cb34626c0cd2c7984e5644297",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "7/15/12, 4:45 AM",
          "commitNameOld": "eb1e54d9910f8b15779177e9bd1d6cd77da9bb60",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 11.38,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
          "path": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java",
          "functionStartLine": 351,
          "functionName": "least",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n",
          "diff": "@@ -1,25 +1,25 @@\n private int least() {\n     int leastIndex \u003d -1;\n     E leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n         if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 E curObject \u003d values.get(i);\n                 if (comparator \u003d\u003d null) {\n-                    throw new NullPointerException(\"You must invoke setComparator() to set a compator first.\");\n+                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                 }\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Add change for 3.2.2 also for 4.0 release, fix javadoc for COLLECTIONS-331.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/26/12, 1:50 PM",
          "commitName": "4303c163b15bd43cb34626c0cd2c7984e5644297",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "7/15/12, 4:45 AM",
          "commitNameOld": "eb1e54d9910f8b15779177e9bd1d6cd77da9bb60",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 11.38,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
          "path": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java",
          "functionStartLine": 351,
          "functionName": "least",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n",
          "diff": "@@ -1,25 +1,25 @@\n private int least() {\n     int leastIndex \u003d -1;\n     E leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n         if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 E curObject \u003d values.get(i);\n                 if (comparator \u003d\u003d null) {\n-                    throw new NullPointerException(\"You must invoke setComparator() to set a compator first.\");\n+                    throw new NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n                 }\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
            "newValue": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws NullPointerException if no comparator is set\n"
          }
        }
      ]
    },
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa": {
      "type": "Yfilerename",
      "commitMessage": "MOve to standard Maven layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1298531 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/12, 11:29 AM",
      "commitName": "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "12/23/11, 8:17 AM",
      "commitNameOld": "e57889f7fc125b6f10203fa00d15dac81f577a6d",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 76.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a compator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java",
      "functionStartLine": 351,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
        "newPath": "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java"
      }
    },
    "e4ba77b3b117b17efbbfd8f67ef31a5b76ded65a": {
      "type": "Ybodychange",
      "commitMessage": "PR: COLLECTIONS-331\nDocumented the requirement to use a comparator.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1079587 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/11, 2:31 PM",
      "commitName": "e4ba77b3b117b17efbbfd8f67ef31a5b76ded65a",
      "commitAuthor": "Jochen Wiedmann",
      "commitDateOld": "9/14/09, 10:29 PM",
      "commitNameOld": "d16bc8509fc423540a131184552649de1bbcaf98",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 539.71,
      "commitsBetweenForRepo": 274,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                E curObject \u003d values.get(i);\n                if (comparator \u003d\u003d null) {\n                    throw new NullPointerException(\"You must invoke setComparator() to set a compator first.\");\n                }\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
      "functionStartLine": 351,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,22 +1,25 @@\n private int least() {\n     int leastIndex \u003d -1;\n     E leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n         if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 E curObject \u003d values.get(i);\n+                if (comparator \u003d\u003d null) {\n+                    throw new NullPointerException(\"You must invoke setComparator() to set a compator first.\");\n+                }\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d16bc8509fc423540a131184552649de1bbcaf98": {
      "type": "Ybodychange",
      "commitMessage": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified in commit r738956.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@814997 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/14/09, 10:29 PM",
      "commitName": "d16bc8509fc423540a131184552649de1bbcaf98",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "9/12/09, 2:46 AM",
      "commitNameOld": "ed205c04fc8f9c95bc498d51e6fec3a6a052ca11",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 2.82,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    E leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                E curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
      "functionStartLine": 339,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
      "diff": "@@ -1,22 +1,22 @@\n private int least() {\n     int leastIndex \u003d -1;\n-    Object leastObject \u003d null;\n+    E leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n         if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n-                Object curObject \u003d values.get(i);\n+                E curObject \u003d values.get(i);\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1088244314d5fb7a5d197ad5d15cf5a85a821f3e": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "Javadoc and Code tidy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/29/03, 3:37 PM",
      "commitName": "1088244314d5fb7a5d197ad5d15cf5a85a821f3e",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Javadoc and Code tidy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/29/03, 3:37 PM",
          "commitName": "1088244314d5fb7a5d197ad5d15cf5a85a821f3e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/29/03, 3:02 PM",
          "commitNameOld": "22d14c1895eac7e8cf37bc6291cd7928751c371c",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
          "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
          "functionStartLine": 361,
          "functionName": "least",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,22 +1,22 @@\n-private int least() throws IllegalStateException {\n+private int least() {\n     int leastIndex \u003d -1;\n     Object leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n-        if (!valueSet.get(i)) {\n+        if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 Object curObject \u003d values.get(i);\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalStateException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Javadoc and Code tidy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/29/03, 3:37 PM",
          "commitName": "1088244314d5fb7a5d197ad5d15cf5a85a821f3e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/29/03, 3:02 PM",
          "commitNameOld": "22d14c1895eac7e8cf37bc6291cd7928751c371c",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
          "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
          "functionStartLine": 361,
          "functionName": "least",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,22 +1,22 @@\n-private int least() throws IllegalStateException {\n+private int least() {\n     int leastIndex \u003d -1;\n     Object leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n-        if (!valueSet.get(i)) {\n+        if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 Object curObject \u003d values.get(i);\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Javadoc and Code tidy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/29/03, 3:37 PM",
          "commitName": "1088244314d5fb7a5d197ad5d15cf5a85a821f3e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/29/03, 3:02 PM",
          "commitNameOld": "22d14c1895eac7e8cf37bc6291cd7928751c371c",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private int least() {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (valueSet.get(i) \u003d\u003d false) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
          "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
          "functionStartLine": 361,
          "functionName": "least",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n",
          "diff": "@@ -1,22 +1,22 @@\n-private int least() throws IllegalStateException {\n+private int least() {\n     int leastIndex \u003d -1;\n     Object leastObject \u003d null;\n     for (int i \u003d 0; i \u003c values.size(); i++) {\n-        if (!valueSet.get(i)) {\n+        if (valueSet.get(i) \u003d\u003d false) {\n             set(i);\n         }\n         if (valueSet.get(i)) {\n             if (leastIndex \u003d\u003d -1) {\n                 leastIndex \u003d i;\n                 leastObject \u003d values.get(i);\n             } else {\n                 Object curObject \u003d values.get(i);\n                 if (comparator.compare(curObject, leastObject) \u003c 0) {\n                     leastObject \u003d curObject;\n                     leastIndex \u003d i;\n                 }\n             }\n         }\n     }\n     return leastIndex;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n",
            "newValue": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n\n@throws IllegalStateException\n"
          }
        }
      ]
    },
    "f26c68bf7bd4f73f1c21eb9d1c197bb2ebf08f2b": {
      "type": "Yfilerename",
      "commitMessage": "Moved all iterators to new iterators subpackage.\nDeprecated all iterator classes in the main package released in 2.0.\nRemoved all iterator classes from the main package that were not\n released yet.\nMoved test code for iterators into new iterators subpackage.\nDeleted old iterator test code in the main package.\nModified main package TestAll to invoke iterators subpackage TestAll.\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130777 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/15/02, 4:13 PM",
      "commitName": "f26c68bf7bd4f73f1c21eb9d1c197bb2ebf08f2b",
      "commitAuthor": "pjack",
      "commitDateOld": "8/15/02, 1:09 PM",
      "commitNameOld": "fceaa29c48dcffdf53c5c0f6360d59951b042251",
      "commitAuthorOld": "pjack",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() throws IllegalStateException {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (!valueSet.get(i)) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java",
      "functionStartLine": 274,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/collections/CollatingIterator.java",
        "newPath": "src/java/org/apache/commons/collections/iterators/CollatingIterator.java"
      }
    },
    "2d1bbdb5aaf2219c8db6b5195cf6c4594eb0d8af": {
      "type": "Ydocchange",
      "commitMessage": "add no-arg constructor\nfix method name\nadd some javadoc comments\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130747 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/10/02, 7:06 AM",
      "commitName": "2d1bbdb5aaf2219c8db6b5195cf6c4594eb0d8af",
      "commitAuthor": "Rodney Waldhoff",
      "commitDateOld": "7/9/02, 9:48 AM",
      "commitNameOld": "32487bf55bb0e2ed7945788e79c0347813aa400c",
      "commitAuthorOld": "Rodney Waldhoff",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private int least() throws IllegalStateException {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (!valueSet.get(i)) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/java/org/apache/commons/collections/CollatingIterator.java",
      "functionStartLine": 220,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Returns the index of the least element in {@link #values},\n{@link #set(int) setting} any uninitialized values.\n"
      }
    },
    "32487bf55bb0e2ed7945788e79c0347813aa400c": {
      "type": "Yintroduced",
      "commitMessage": "add CollatingIterator and tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130745 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/9/02, 9:48 AM",
      "commitName": "32487bf55bb0e2ed7945788e79c0347813aa400c",
      "commitAuthor": "Rodney Waldhoff",
      "diff": "@@ -0,0 +1,22 @@\n+private int least() throws IllegalStateException {\n+    int leastIndex \u003d -1;\n+    Object leastObject \u003d null;\n+    for (int i \u003d 0; i \u003c values.size(); i++) {\n+        if (!valueSet.get(i)) {\n+            set(i);\n+        }\n+        if (valueSet.get(i)) {\n+            if (leastIndex \u003d\u003d -1) {\n+                leastIndex \u003d i;\n+                leastObject \u003d values.get(i);\n+            } else {\n+                Object curObject \u003d values.get(i);\n+                if (comparator.compare(curObject, leastObject) \u003c 0) {\n+                    leastObject \u003d curObject;\n+                    leastIndex \u003d i;\n+                }\n+            }\n+        }\n+    }\n+    return leastIndex;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private int least() throws IllegalStateException {\n    int leastIndex \u003d -1;\n    Object leastObject \u003d null;\n    for (int i \u003d 0; i \u003c values.size(); i++) {\n        if (!valueSet.get(i)) {\n            set(i);\n        }\n        if (valueSet.get(i)) {\n            if (leastIndex \u003d\u003d -1) {\n                leastIndex \u003d i;\n                leastObject \u003d values.get(i);\n            } else {\n                Object curObject \u003d values.get(i);\n                if (comparator.compare(curObject, leastObject) \u003c 0) {\n                    leastObject \u003d curObject;\n                    leastIndex \u003d i;\n                }\n            }\n        }\n    }\n    return leastIndex;\n}",
      "path": "src/java/org/apache/commons/collections/CollatingIterator.java",
      "functionStartLine": 183,
      "functionName": "least",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}