{
  "origin": "codeshovel",
  "repositoryName": "Collections-25b",
  "repositoryPath": "/tmp/Collections-25b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IteratorUtils.java",
  "functionName": "toList",
  "functionId": "toList___iterator-Iterator__? extends E__(modifiers-final)__estimatedSize-int(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/collections4/IteratorUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param \u003cE\u003e the element type\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
  "functionStartLine": 1138,
  "functionEndLine": 1150,
  "numCommitsSeen": 111,
  "timeTaken": 5965,
  "changeHistory": [
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf",
    "38e3a7435f31c08445b359f130c4bb123061a1e4",
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa",
    "c301ea06f5f32d76b65bfeb920ce0eadc13cd702",
    "79a39dac13db25cf3f33eefcfc6fdfac90f046ae",
    "5b1e83924116780c04ba5fadcb2673cb318d812d"
  ],
  "changeHistoryShort": {
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf": "Ymovefromfile",
    "38e3a7435f31c08445b359f130c4bb123061a1e4": "Ydocchange",
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9": "Ymultichange(Ybodychange,Yparametermetachange)",
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa": "Yfilerename",
    "c301ea06f5f32d76b65bfeb920ce0eadc13cd702": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "79a39dac13db25cf3f33eefcfc6fdfac90f046ae": "Ydocchange",
    "5b1e83924116780c04ba5fadcb2673cb318d812d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf": {
      "type": "Ymovefromfile",
      "commitMessage": "[COLLECTIONS-452] Change package to o.a.c.collections4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1469004 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/17/13, 10:37 AM",
      "commitName": "a8d1066b5ec6b8ec6db6bdb47d947fccaa7d07bf",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "4/16/13, 1:12 PM",
      "commitNameOld": "6a12cf861dc449eb650009078e0308f7da89ad61",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
      "path": "src/main/java/org/apache/commons/collections4/IteratorUtils.java",
      "functionStartLine": 977,
      "functionName": "toList",
      "functionAnnotation": "",
      "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param \u003cE\u003e the element type\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/collections/IteratorUtils.java",
        "newPath": "src/main/java/org/apache/commons/collections4/IteratorUtils.java",
        "oldMethodName": "toList",
        "newMethodName": "toList"
      }
    },
    "38e3a7435f31c08445b359f130c4bb123061a1e4": {
      "type": "Ydocchange",
      "commitMessage": "Complete javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436822 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/22/13, 1:54 AM",
      "commitName": "38e3a7435f31c08445b359f130c4bb123061a1e4",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/20/13, 5:28 PM",
      "commitNameOld": "80ec6a5e29bf3686abddd468b4502dac28e47b2f",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 1.35,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
      "path": "src/main/java/org/apache/commons/collections/IteratorUtils.java",
      "functionStartLine": 932,
      "functionName": "toList",
      "functionAnnotation": "",
      "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param \u003cE\u003e the element type\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
        "newValue": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param \u003cE\u003e the element type\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n"
      }
    },
    "9aea104d8abb2269d032e13b70edc9d94c2cb2e9": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1429905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/7/13, 9:15 AM",
      "commitName": "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1429905 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/7/13, 9:15 AM",
          "commitName": "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/15/12, 8:00 AM",
          "commitNameOld": "6b73b4d72de6d4b5adea2431c467765734643dcb",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 176.09,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
          "path": "src/main/java/org/apache/commons/collections/IteratorUtils.java",
          "functionStartLine": 875,
          "functionName": "toList",
          "functionAnnotation": "",
          "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n+public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n     if (iterator \u003d\u003d null) {\n         throw new NullPointerException(\"Iterator must not be null\");\n     }\n     if (estimatedSize \u003c 1) {\n         throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n     }\n-    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n+    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n     while (iterator.hasNext()) {\n         list.add(iterator.next());\n     }\n     return list;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1429905 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/7/13, 9:15 AM",
          "commitName": "9aea104d8abb2269d032e13b70edc9d94c2cb2e9",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/15/12, 8:00 AM",
          "commitNameOld": "6b73b4d72de6d4b5adea2431c467765734643dcb",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 176.09,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
          "path": "src/main/java/org/apache/commons/collections/IteratorUtils.java",
          "functionStartLine": 875,
          "functionName": "toList",
          "functionAnnotation": "",
          "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n+public static \u003cE\u003e List\u003cE\u003e toList(final Iterator\u003c? extends E\u003e iterator, final int estimatedSize) {\n     if (iterator \u003d\u003d null) {\n         throw new NullPointerException(\"Iterator must not be null\");\n     }\n     if (estimatedSize \u003c 1) {\n         throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n     }\n-    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n+    final List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n     while (iterator.hasNext()) {\n         list.add(iterator.next());\n     }\n     return list;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[iterator-Iterator\u003c? extends E\u003e, estimatedSize-int]",
            "newValue": "[iterator-Iterator\u003c? extends E\u003e(modifiers-final), estimatedSize-int(modifiers-final)]"
          }
        }
      ]
    },
    "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa": {
      "type": "Yfilerename",
      "commitMessage": "MOve to standard Maven layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1298531 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/12, 11:29 AM",
      "commitName": "8ffb78ec50a5d3a79dbd0e76c36c50f3263594aa",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "12/23/11, 8:17 AM",
      "commitNameOld": "e57889f7fc125b6f10203fa00d15dac81f577a6d",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 76.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
      "path": "src/main/java/org/apache/commons/collections/IteratorUtils.java",
      "functionStartLine": 877,
      "functionName": "toList",
      "functionAnnotation": "",
      "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/collections/IteratorUtils.java",
        "newPath": "src/main/java/org/apache/commons/collections/IteratorUtils.java"
      }
    },
    "c301ea06f5f32d76b65bfeb920ce0eadc13cd702": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.\n\nAlso see the following revisions:\n\n    ------------------------------------------------------------------------\n    r753392 | mbenson | 2009-03-13 13:39:53 -0700 (Fri, 13 Mar 2009) | 1 line\n    \n    revert IteratorUtils stuff; toList() works fine for this--duh\n    ------------------------------------------------------------------------\n    r751850 | mbenson | 2009-03-09 14:34:44 -0700 (Mon, 09 Mar 2009) | 1 line\n    \n    add iterable(Iterator)\n    ------------------------------------------------------------------------\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@815061 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/14/09, 10:55 PM",
      "commitName": "c301ea06f5f32d76b65bfeb920ce0eadc13cd702",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.\n\nAlso see the following revisions:\n\n    ------------------------------------------------------------------------\n    r753392 | mbenson | 2009-03-13 13:39:53 -0700 (Fri, 13 Mar 2009) | 1 line\n    \n    revert IteratorUtils stuff; toList() works fine for this--duh\n    ------------------------------------------------------------------------\n    r751850 | mbenson | 2009-03-09 14:34:44 -0700 (Mon, 09 Mar 2009) | 1 line\n    \n    add iterable(Iterator)\n    ------------------------------------------------------------------------\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@815061 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/09, 10:55 PM",
          "commitName": "c301ea06f5f32d76b65bfeb920ce0eadc13cd702",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "9/12/09, 2:46 AM",
          "commitNameOld": "ed205c04fc8f9c95bc498d51e6fec3a6a052ca11",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 2.84,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
          "path": "src/java/org/apache/commons/collections/IteratorUtils.java",
          "functionStartLine": 846,
          "functionName": "toList",
          "functionAnnotation": "",
          "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static List toList(Iterator iterator, int estimatedSize) {\n+public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n     if (iterator \u003d\u003d null) {\n         throw new NullPointerException(\"Iterator must not be null\");\n     }\n     if (estimatedSize \u003c 1) {\n         throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n     }\n-    List list \u003d new ArrayList(estimatedSize);\n+    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n     while (iterator.hasNext()) {\n         list.add(iterator.next());\n     }\n     return list;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[iterator-Iterator, estimatedSize-int]",
            "newValue": "[iterator-Iterator\u003c? extends E\u003e, estimatedSize-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.\n\nAlso see the following revisions:\n\n    ------------------------------------------------------------------------\n    r753392 | mbenson | 2009-03-13 13:39:53 -0700 (Fri, 13 Mar 2009) | 1 line\n    \n    revert IteratorUtils stuff; toList() works fine for this--duh\n    ------------------------------------------------------------------------\n    r751850 | mbenson | 2009-03-09 14:34:44 -0700 (Mon, 09 Mar 2009) | 1 line\n    \n    add iterable(Iterator)\n    ------------------------------------------------------------------------\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@815061 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/09, 10:55 PM",
          "commitName": "c301ea06f5f32d76b65bfeb920ce0eadc13cd702",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "9/12/09, 2:46 AM",
          "commitNameOld": "ed205c04fc8f9c95bc498d51e6fec3a6a052ca11",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 2.84,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
          "path": "src/java/org/apache/commons/collections/IteratorUtils.java",
          "functionStartLine": 846,
          "functionName": "toList",
          "functionAnnotation": "",
          "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static List toList(Iterator iterator, int estimatedSize) {\n+public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n     if (iterator \u003d\u003d null) {\n         throw new NullPointerException(\"Iterator must not be null\");\n     }\n     if (estimatedSize \u003c 1) {\n         throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n     }\n-    List list \u003d new ArrayList(estimatedSize);\n+    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n     while (iterator.hasNext()) {\n         list.add(iterator.next());\n     }\n     return list;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "List",
            "newValue": "List\u003cE\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Merging from -r468106:814127 of collections_jdk5_branch - namely where this code was generified; mostly in r738956.\n\nAlso see the following revisions:\n\n    ------------------------------------------------------------------------\n    r753392 | mbenson | 2009-03-13 13:39:53 -0700 (Fri, 13 Mar 2009) | 1 line\n    \n    revert IteratorUtils stuff; toList() works fine for this--duh\n    ------------------------------------------------------------------------\n    r751850 | mbenson | 2009-03-09 14:34:44 -0700 (Mon, 09 Mar 2009) | 1 line\n    \n    add iterable(Iterator)\n    ------------------------------------------------------------------------\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@815061 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/09, 10:55 PM",
          "commitName": "c301ea06f5f32d76b65bfeb920ce0eadc13cd702",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "9/12/09, 2:46 AM",
          "commitNameOld": "ed205c04fc8f9c95bc498d51e6fec3a6a052ca11",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 2.84,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
          "path": "src/java/org/apache/commons/collections/IteratorUtils.java",
          "functionStartLine": 846,
          "functionName": "toList",
          "functionAnnotation": "",
          "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static List toList(Iterator iterator, int estimatedSize) {\n+public static \u003cE\u003e List\u003cE\u003e toList(Iterator\u003c? extends E\u003e iterator, int estimatedSize) {\n     if (iterator \u003d\u003d null) {\n         throw new NullPointerException(\"Iterator must not be null\");\n     }\n     if (estimatedSize \u003c 1) {\n         throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n     }\n-    List list \u003d new ArrayList(estimatedSize);\n+    List\u003cE\u003e list \u003d new ArrayList\u003cE\u003e(estimatedSize);\n     while (iterator.hasNext()) {\n         list.add(iterator.next());\n     }\n     return list;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "79a39dac13db25cf3f33eefcfc6fdfac90f046ae": {
      "type": "Ydocchange",
      "commitMessage": "Add since tags and Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/04, 3:53 PM",
      "commitName": "79a39dac13db25cf3f33eefcfc6fdfac90f046ae",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "3/19/04, 4:21 PM",
      "commitNameOld": "c1d10f003e532100ef2f96a9b6dfd95d987ee4e2",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 20.94,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "public static List toList(Iterator iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List list \u003d new ArrayList(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
      "path": "src/java/org/apache/commons/collections/IteratorUtils.java",
      "functionStartLine": 785,
      "functionName": "toList",
      "functionAnnotation": "",
      "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n",
        "newValue": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@return a list of the iterator contents\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n"
      }
    },
    "5b1e83924116780c04ba5fadcb2673cb318d812d": {
      "type": "Yintroduced",
      "commitMessage": "Add specific classes (singleton) for empty cases\nAdd toList and toArray\nRename certain methods to toXxx and asXxx\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130793 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/17/02, 3:14 PM",
      "commitName": "5b1e83924116780c04ba5fadcb2673cb318d812d",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,13 @@\n+public static List toList(Iterator iterator, int estimatedSize) {\n+    if (iterator \u003d\u003d null) {\n+        throw new NullPointerException(\"Iterator must not be null\");\n+    }\n+    if (estimatedSize \u003c 1) {\n+        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n+    }\n+    List list \u003d new ArrayList(estimatedSize);\n+    while (iterator.hasNext()) {\n+        list.add(iterator.next());\n+    }\n+    return list;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static List toList(Iterator iterator, int estimatedSize) {\n    if (iterator \u003d\u003d null) {\n        throw new NullPointerException(\"Iterator must not be null\");\n    }\n    if (estimatedSize \u003c 1) {\n        throw new IllegalArgumentException(\"Estimated size must be greater than 0\");\n    }\n    List list \u003d new ArrayList(estimatedSize);\n    while (iterator.hasNext()) {\n        list.add(iterator.next());\n    }\n    return list;\n}",
      "path": "src/java/org/apache/commons/collections/IteratorUtils.java",
      "functionStartLine": 521,
      "functionName": "toList",
      "functionAnnotation": "",
      "functionDoc": "Gets a list based on an iterator.\n\u003cp\u003e\nAs the wrapped Iterator is traversed, an ArrayList of its values is\ncreated. At the end, the list is returned.\n\n@param iterator the iterator to use, not null\n@param estimatedSize the initial size of the ArrayList\n@throws NullPointerException if iterator parameter is null\n@throws IllegalArgumentException if the size is less than 1\n"
    }
  }
}