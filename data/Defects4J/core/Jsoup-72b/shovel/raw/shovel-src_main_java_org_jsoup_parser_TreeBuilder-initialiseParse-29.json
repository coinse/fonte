{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-72b",
  "repositoryPath": "/tmp/Jsoup-72b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TreeBuilder.java",
  "functionName": "initialiseParse",
  "functionId": "initialiseParse___input-Reader__baseUri-String__errors-ParseErrorList__settings-ParseSettings",
  "sourceFilePath": "src/main/java/org/jsoup/parser/TreeBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 29,
  "functionEndLine": 41,
  "numCommitsSeen": 70,
  "timeTaken": 1675,
  "changeHistory": [
    "654bc6f981587bd4b39b66702550bad33e1eacc9",
    "e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb",
    "1203bd459fe137e78a2a6dc2969f3c4995b726ce",
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
    "7d7a298864223fd4ecea3acaa42257d24ddec1e8",
    "e47d90818b1918b436d252212e90a03ddf503b59",
    "01a62698797658b0f51d323fdfb5e9744d843773",
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
    "be94f5547d6b8f15ee48117afe46ae302c361464",
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
    "433d2f180058b8b73e1951c6cfbb986714e68b0f",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "654bc6f981587bd4b39b66702550bad33e1eacc9": "Yparameterchange",
    "e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb": "Ybodychange",
    "1203bd459fe137e78a2a6dc2969f3c4995b726ce": "Ybodychange",
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d": "Ymultichange(Yparameterchange,Ybodychange)",
    "7d7a298864223fd4ecea3acaa42257d24ddec1e8": "Ybodychange",
    "e47d90818b1918b436d252212e90a03ddf503b59": "Ybodychange",
    "01a62698797658b0f51d323fdfb5e9744d843773": "Ybodychange",
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257": "Ymultichange(Yparameterchange,Ybodychange)",
    "be94f5547d6b8f15ee48117afe46ae302c361464": "Ybodychange",
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e": "Ybodychange",
    "433d2f180058b8b73e1951c6cfbb986714e68b0f": "Ymultichange(Yparameterchange,Ybodychange)",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": "Ymodifierchange",
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8": "Ybodychange",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "654bc6f981587bd4b39b66702550bad33e1eacc9": {
      "type": "Yparameterchange",
      "commitMessage": "Stream network loading (#905)\n\nImplements a stream based input reader.\r\n\r\nThis changes URL \u0026 file inputs from buffering the whole content into a\r\nstring before starting to parse, into a stream based read.\r\n\r\nMemory consumption when loading large pages from the network or a file is substantially reduced.",
      "commitDate": "6/24/17, 11:47 PM",
      "commitName": "654bc6f981587bd4b39b66702550bad33e1eacc9",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "6/17/17, 3:36 PM",
      "commitNameOld": "e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 7.34,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    this.settings \u003d settings;\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    currentToken \u003d null;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003c\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 29,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n-protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n+protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     this.settings \u003d settings;\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n     currentToken \u003d null;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new ArrayList\u003c\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[input-String, baseUri-String, errors-ParseErrorList, settings-ParseSettings]",
        "newValue": "[input-Reader, baseUri-String, errors-ParseErrorList, settings-ParseSettings]"
      }
    },
    "e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb": {
      "type": "Ybodychange",
      "commitMessage": "Updated from Java 5 to Java 7\n",
      "commitDate": "6/17/17, 3:36 PM",
      "commitName": "e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "6/12/17, 7:46 PM",
      "commitNameOld": "1203bd459fe137e78a2a6dc2969f3c4995b726ce",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 4.83,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    this.settings \u003d settings;\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    currentToken \u003d null;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003c\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 28,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     this.settings \u003d settings;\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n     currentToken \u003d null;\n     tokeniser \u003d new Tokeniser(reader, errors);\n-    stack \u003d new ArrayList\u003cElement\u003e(32);\n+    stack \u003d new ArrayList\u003c\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1203bd459fe137e78a2a6dc2969f3c4995b726ce": {
      "type": "Ybodychange",
      "commitMessage": "Make sure the HTML parser is correctly reset before reuse\n\nOtherwise the stack and current form element were stuffed if the\nDataUtil needed to reparse after switching content encoding.\n\nAlso, was needlessly redecoding when the character set was \"utf-8\"\nbecause the check was case sensitive.\n",
      "commitDate": "6/12/17, 7:46 PM",
      "commitName": "1203bd459fe137e78a2a6dc2969f3c4995b726ce",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "8/5/16, 3:05 PM",
      "commitNameOld": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 311.2,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    this.settings \u003d settings;\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    currentToken \u003d null;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003cElement\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 28,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     this.settings \u003d settings;\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n+    currentToken \u003d null;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new ArrayList\u003cElement\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Introduced ParseSettings for tag and attribute name case options.\n",
      "commitDate": "8/5/16, 3:05 PM",
      "commitName": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Introduced ParseSettings for tag and attribute name case options.\n",
          "commitDate": "8/5/16, 3:05 PM",
          "commitName": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/5/15, 2:58 PM",
          "commitNameOld": "3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 397.0,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    this.settings \u003d settings;\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003cElement\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 28,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,11 @@\n-protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n+    this.settings \u003d settings;\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new ArrayList\u003cElement\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[input-String, baseUri-String, errors-ParseErrorList]",
            "newValue": "[input-String, baseUri-String, errors-ParseErrorList, settings-ParseSettings]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Introduced ParseSettings for tag and attribute name case options.\n",
          "commitDate": "8/5/16, 3:05 PM",
          "commitName": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/5/15, 2:58 PM",
          "commitNameOld": "3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 397.0,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    this.settings \u003d settings;\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003cElement\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 28,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,11 @@\n-protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n+    this.settings \u003d settings;\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new ArrayList\u003cElement\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7d7a298864223fd4ecea3acaa42257d24ddec1e8": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Use a CharacterBuffer in CharacterReader\"\n\nThis reverts commit e47d90818b1918b436d252212e90a03ddf503b59.\n\nOn further review this has a negative impact. Counter intuitive, need\nto dig in more.\n",
      "commitDate": "10/28/14, 10:14 PM",
      "commitName": "7d7a298864223fd4ecea3acaa42257d24ddec1e8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/28/14, 9:37 PM",
      "commitNameOld": "e47d90818b1918b436d252212e90a03ddf503b59",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003cElement\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 25,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,10 @@\n protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n+    Validate.notNull(baseUri, \"BaseURI must not be null\");\n+    doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    init(baseUri, errors);\n+    this.errors \u003d errors;\n+    tokeniser \u003d new Tokeniser(reader, errors);\n+    stack \u003d new ArrayList\u003cElement\u003e(32);\n+    this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e47d90818b1918b436d252212e90a03ddf503b59": {
      "type": "Ybodychange",
      "commitMessage": "Use a CharacterBuffer in CharacterReader\n\nSaves two large char[] allocations (round-tripping through string)\n",
      "commitDate": "10/28/14, 9:37 PM",
      "commitName": "e47d90818b1918b436d252212e90a03ddf503b59",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/27/14, 9:29 PM",
      "commitNameOld": "e99193605b688e923d20054c13db897cff751607",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    reader \u003d new CharacterReader(input);\n    init(baseUri, errors);\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 26,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,5 @@\n protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n-    Validate.notNull(baseUri, \"BaseURI must not be null\");\n-    doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    this.errors \u003d errors;\n-    tokeniser \u003d new Tokeniser(reader, errors);\n-    stack \u003d new ArrayList\u003cElement\u003e(32);\n-    this.baseUri \u003d baseUri;\n+    init(baseUri, errors);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "01a62698797658b0f51d323fdfb5e9744d843773": {
      "type": "Ybodychange",
      "commitMessage": "Use ArrayList instead of LinkedList\n\nMuch less GC - less iterators, lest next items, etc.\n",
      "commitDate": "10/26/14, 5:40 PM",
      "commitName": "01a62698797658b0f51d323fdfb5e9744d843773",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/17/14, 1:23 PM",
      "commitNameOld": "e936b1b664500166bef0403011c5924c7bd7d086",
      "commitAuthorOld": "offa",
      "daysBetweenCommits": 9.18,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new ArrayList\u003cElement\u003e(32);\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 21,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n-    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n+    stack \u003d new ArrayList\u003cElement\u003e(32);\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
      "commitDate": "3/20/12, 9:55 PM",
      "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
          "commitDate": "3/20/12, 9:55 PM",
          "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/19/12, 9:02 PM",
          "commitNameOld": "be94f5547d6b8f15ee48117afe46ae302c361464",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.04,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,10 @@\n-protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    this.trackErrors \u003d trackErrors;\n-    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[input-String, baseUri-String, trackErrors-boolean]",
            "newValue": "[input-String, baseUri-String, errors-ParseErrorList]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
          "commitDate": "3/20/12, 9:55 PM",
          "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/19/12, 9:02 PM",
          "commitNameOld": "be94f5547d6b8f15ee48117afe46ae302c361464",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.04,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,10 @@\n-protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    this.trackErrors \u003d trackErrors;\n-    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "be94f5547d6b8f15ee48117afe46ae302c361464": {
      "type": "Ybodychange",
      "commitMessage": "Added support to optionally keep track of errors while tokenising and tree-building.\n",
      "commitDate": "3/19/12, 9:02 PM",
      "commitName": "be94f5547d6b8f15ee48117afe46ae302c361464",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "3/4/12, 5:18 PM",
      "commitNameOld": "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 15.11,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.trackErrors \u003d trackErrors;\n    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 24,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    tokeniser \u003d new Tokeniser(reader);\n+    this.trackErrors \u003d trackErrors;\n+    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n-    errors \u003d new ArrayList\u003cParseError\u003e();\n-    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed invocation of alternative parser in Jsoup.Connection.\nUpdated test to confirm.\n",
      "commitDate": "3/4/12, 5:18 PM",
      "commitName": "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "2/27/12, 8:55 PM",
      "commitNameOld": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 24,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,11 @@\n protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+    Validate.notNull(input, \"String input must not be null\");\n+    Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n     errors \u003d new ArrayList\u003cParseError\u003e();\n     this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "433d2f180058b8b73e1951c6cfbb986714e68b0f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
      "commitDate": "2/27/12, 8:55 PM",
      "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
          "commitDate": "2/27/12, 8:55 PM",
          "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "2/26/12, 5:23 PM",
          "commitNameOld": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,9 @@\n-protected void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n+    errors \u003d new ArrayList\u003cParseError\u003e();\n+    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[input-String, baseUri-String]",
            "newValue": "[input-String, baseUri-String, trackErrors-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
          "commitDate": "2/27/12, 8:55 PM",
          "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "2/26/12, 5:23 PM",
          "commitNameOld": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,9 @@\n-protected void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n+    errors \u003d new ArrayList\u003cParseError\u003e();\n+    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": {
      "type": "Ymodifierchange",
      "commitMessage": "First draft of a simple XML treebuilder / parser.\n\nThis provides an alternative to the HTML5 parser which enforces HTML\nsemantics on the parsed input. The simple XML parser has no understanding\nof HTML, and will parse the input as-is into a DOM.\n",
      "commitDate": "2/26/12, 5:23 PM",
      "commitName": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/30/11, 6:13 PM",
      "commitNameOld": "1e84edbe208aab0c9330eadc50f9773d81d70cd6",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 149.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 23,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n-private void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8": {
      "type": "Ybodychange",
      "commitMessage": "Fix Java 1.5 compatibility\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "e30ed5d35cbcb92584d7fee8ae862f3929e443d8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 42,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n private void initialiseParse(String input, String baseUri) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n-    stack \u003d new LinkedList\u003cElement\u003e();\n+    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,7 @@\n+private void initialiseParse(String input, String baseUri) {\n+    doc \u003d new Document(baseUri);\n+    reader \u003d new CharacterReader(input);\n+    tokeniser \u003d new Tokeniser(reader);\n+    stack \u003d new LinkedList\u003cElement\u003e();\n+    this.baseUri \u003d baseUri;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new LinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 41,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}