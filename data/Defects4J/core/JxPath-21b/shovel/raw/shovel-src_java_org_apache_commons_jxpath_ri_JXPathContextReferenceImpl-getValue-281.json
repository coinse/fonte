{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathContextReferenceImpl.java",
  "functionName": "getValue",
  "functionId": "getValue___xpath-String",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
  "functionAnnotation": "",
  "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n\n@param xpath expression\n@return Object found\n",
  "functionStartLine": 281,
  "functionEndLine": 316,
  "numCommitsSeen": 63,
  "timeTaken": 1885,
  "changeHistory": [
    "00d67383c2e842626710831782f7ec768d1ddc1c",
    "48decea3eb6debf024f66fe3d4bb540d63ea9a95",
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
    "989fbe2e44ad4e994dc810fa54290636a7339712",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "65bf4da7590edc460ec68e18f35d201ec685bf86",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "d0a64d141367867db5b745734f5c7330644b71ca",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": "Ydocchange",
    "48decea3eb6debf024f66fe3d4bb540d63ea9a95": "Yformatchange",
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b": "Ybodychange",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": "Ybodychange",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Ybodychange",
    "989fbe2e44ad4e994dc810fa54290636a7339712": "Ybodychange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ybodychange",
    "65bf4da7590edc460ec68e18f35d201ec685bf86": "Ybodychange",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "d0a64d141367867db5b745734f5c7330644b71ca": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "207c6dd98407506ff367d072be25b56f37989215": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618149 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 6:04 PM",
      "commitName": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "7/18/07, 1:22 PM",
      "commitNameOld": "626e5e5994a651085e9d2ccb1ca99c701f88bc68",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 200.24,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Expression expression \u003d compileExpression(xpath);\n    return getValue(xpath, expression);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 282,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n\n@param xpath expression\n@return Object found\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
        "newValue": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n\n@param xpath expression\n@return Object found\n"
      }
    },
    "48decea3eb6debf024f66fe3d4bb540d63ea9a95": {
      "type": "Yformatchange",
      "commitMessage": "trailing ws\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@556965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/17/07, 9:38 AM",
      "commitName": "48decea3eb6debf024f66fe3d4bb540d63ea9a95",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "7/6/07, 2:17 PM",
      "commitNameOld": "40a0e6643ba0759a0349a998d61f64e39875cef9",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 10.81,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Expression expression \u003d compileExpression(xpath);\n    return getValue(xpath, expression);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 255,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d73d9bf24a5fb76383f519e5d4df00f9b634c19b": {
      "type": "Ybodychange",
      "commitMessage": "Fix for bug #26899.   See http://nagoya.apache.org/bugzilla/show_bug.cgi?id\u003d26899\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136897 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/1/04, 5:32 PM",
      "commitName": "d73d9bf24a5fb76383f519e5d4df00f9b634c19b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/29/04, 6:17 AM",
      "commitNameOld": "4fc265a938e1e9d13c407d4668ec8c864e85d799",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 1.47,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Expression expression \u003d compileExpression(xpath);\n    return getValue(xpath, expression);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 243,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,3 +1,4 @@\n public Object getValue(String xpath) {\n-    return getValue(xpath, compileExpression(xpath));\n+    Expression expression \u003d compileExpression(xpath);\n+    return getValue(xpath, expression);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": {
      "type": "Ybodychange",
      "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:37 PM",
      "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 8:28 PM",
      "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.05,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    return getValue(xpath, compileExpression(xpath));\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 197,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,3 @@\n public Object getValue(String xpath) {\n-    Object result \u003d eval(xpath, true);\n-    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n-        throw new JXPathException(\"No value for xpath: \" + xpath);\n-    }\n-    if (result instanceof EvalContext) {\n-        EvalContext ctx \u003d (EvalContext) result;\n-        result \u003d ctx.getSingleNodePointer();\n-    }\n-    if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getValue();\n-    }\n-    return result;\n+    return getValue(xpath, compileExpression(xpath));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new JXPathException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 195,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n-        throw new RuntimeException(\"No value for xpath: \" + xpath);\n+        throw new JXPathException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Ybodychange",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.87,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 190,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getCanonicalValue();\n+        result \u003d ((NodePointer) result).getValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "989fbe2e44ad4e994dc810fa54290636a7339712": {
      "type": "Ybodychange",
      "commitMessage": "Simplified ExpressionContext implementation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136727 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:32 PM",
      "commitName": "989fbe2e44ad4e994dc810fa54290636a7339712",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/21/02, 2:52 PM",
      "commitNameOld": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getSingleNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getCanonicalValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 195,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n-        result \u003d ctx.getContextNodePointer();\n+        result \u003d ctx.getSingleNodePointer();\n     }\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getCanonicalValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ybodychange",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getCanonicalValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 194,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n     if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getPrimitiveValue();\n+        result \u003d ((NodePointer) result).getCanonicalValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "65bf4da7590edc460ec68e18f35d201ec685bf86": {
      "type": "Ybodychange",
      "commitMessage": "Removed dependency on DOM from everywhere except where needed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/11/02, 7:28 PM",
      "commitName": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/9/02, 8:40 PM",
      "commitNameOld": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getPrimitiveValue();\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 186,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,17 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result \u003d\u003d null \u0026\u0026 !lenient) {\n         throw new RuntimeException(\"No value for xpath: \" + xpath);\n     }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n-    if (result instanceof Pointer) {\n-        result \u003d ((Pointer) result).getValue();\n-    }\n-    if (result instanceof Node) {\n-        result \u003d EvalContext.stringValue((Node) result);\n+    if (result instanceof NodePointer) {\n+        result \u003d ((NodePointer) result).getPrimitiveValue();\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/26/01, 4:37 PM",
      "commitNameOld": "d0a64d141367867db5b745734f5c7330644b71ca",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 195.17,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 187,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d0a64d141367867db5b745734f5c7330644b71ca": {
      "type": "Ybodychange",
      "commitMessage": "Added support for non-lenient mode\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136708 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/26/01, 4:37 PM",
      "commitName": "d0a64d141367867db5b745734f5c7330644b71ca",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/25/01, 6:21 PM",
      "commitNameOld": "3ec25ca8751eba756316184f4f8d3be1361a0027",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n        throw new RuntimeException(\"No value for xpath: \" + xpath);\n    }\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 146,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,14 +1,17 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n+    if (result \u003d\u003d null \u0026\u0026 !lenient) {\n+        throw new RuntimeException(\"No value for xpath: \" + xpath);\n+    }\n     if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         result \u003d ctx.getContextNodePointer();\n     }\n     if (result instanceof Pointer) {\n         result \u003d ((Pointer) result).getValue();\n     }\n     if (result instanceof Node) {\n         result \u003d EvalContext.stringValue((Node) result);\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/8/01, 1:59 PM",
      "commitNameOld": "163440e05f7cd4680973e99144f7d60f343ebeaa",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 13.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        result \u003d ctx.getContextNodePointer();\n    }\n    if (result instanceof Pointer) {\n        result \u003d ((Pointer) result).getValue();\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 146,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,18 +1,14 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n-    if (result instanceof NodePointer) {\n-        result \u003d ((NodePointer) result).getValue();\n-    } else if (result instanceof EvalContext) {\n+    if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n-        while (ctx.nextSet()) {\n-            if (ctx.next()) {\n-                result \u003d ctx.getCurrentNodePointer().getValue();\n-                break;\n-            }\n-        }\n+        result \u003d ctx.getContextNodePointer();\n+    }\n+    if (result instanceof Pointer) {\n+        result \u003d ((Pointer) result).getValue();\n     }\n     if (result instanceof Node) {\n         result \u003d EvalContext.stringValue((Node) result);\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ybodychange",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 11.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    } else if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        while (ctx.nextSet()) {\n            if (ctx.next()) {\n                result \u003d ctx.getCurrentNodePointer().getValue();\n                break;\n            }\n        }\n    }\n    if (result instanceof Node) {\n        result \u003d EvalContext.stringValue((Node) result);\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 145,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n",
      "diff": "@@ -1,15 +1,18 @@\n public Object getValue(String xpath) {\n     Object result \u003d eval(xpath, true);\n     if (result instanceof NodePointer) {\n         result \u003d ((NodePointer) result).getValue();\n     } else if (result instanceof EvalContext) {\n         EvalContext ctx \u003d (EvalContext) result;\n         while (ctx.nextSet()) {\n             if (ctx.next()) {\n                 result \u003d ctx.getCurrentNodePointer().getValue();\n                 break;\n             }\n         }\n     }\n+    if (result instanceof Node) {\n+        result \u003d EvalContext.stringValue((Node) result);\n+    }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,15 @@\n+public Object getValue(String xpath) {\n+    Object result \u003d eval(xpath, true);\n+    if (result instanceof NodePointer) {\n+        result \u003d ((NodePointer) result).getValue();\n+    } else if (result instanceof EvalContext) {\n+        EvalContext ctx \u003d (EvalContext) result;\n+        while (ctx.nextSet()) {\n+            if (ctx.next()) {\n+                result \u003d ctx.getCurrentNodePointer().getValue();\n+                break;\n+            }\n+        }\n+    }\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object getValue(String xpath) {\n    Object result \u003d eval(xpath, true);\n    if (result instanceof NodePointer) {\n        result \u003d ((NodePointer) result).getValue();\n    } else if (result instanceof EvalContext) {\n        EvalContext ctx \u003d (EvalContext) result;\n        while (ctx.nextSet()) {\n            if (ctx.next()) {\n                result \u003d ctx.getCurrentNodePointer().getValue();\n                break;\n            }\n        }\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 144,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Traverses the xpath and returns the resulting object. Primitive\ntypes are wrapped into objects.\n"
    }
  }
}