{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ValueUtils.java",
  "functionName": "getValue",
  "functionId": "getValue___bean-Object__propertyDescriptor-PropertyDescriptor",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n\n@param bean to read\n@param propertyDescriptor indicating what to read\n@return Object value\n",
  "functionStartLine": 358,
  "functionEndLine": 378,
  "numCommitsSeen": 38,
  "timeTaken": 1573,
  "changeHistory": [
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "43eabbabfd78e9877246cdb15ebaa28132b37f6c",
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "2735dfce721fbf083b91b3b7695d8672c28200ae",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": "Ydocchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "43eabbabfd78e9877246cdb15ebaa28132b37f6c": "Ybodychange",
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268": "Ymultichange(Ydocchange,Yformatchange)",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Yfilerename",
    "2735dfce721fbf083b91b3b7695d8672c28200ae": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 12:19 PM",
      "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/16/07, 11:29 PM",
      "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 48.53,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + (bean \u003d\u003d null ? \"null\" : bean.getClass().getName()) + \".\" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 358,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n\n@param bean to read\n@param propertyDescriptor indicating what to read\n@return Object value\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n",
        "newValue": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n\n@param bean to read\n@param propertyDescriptor indicating what to read\n@return Object value\n"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:33 PM",
      "commitNameOld": "594ff3b180fd1ac7addb40e2c32a15e4567eed3c",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 46.17,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + (bean \u003d\u003d null ? \"null\" : bean.getClass().getName()) + \".\" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 336,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "43eabbabfd78e9877246cdb15ebaa28132b37f6c": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136819 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/19/02, 8:43 PM",
      "commitName": "43eabbabfd78e9877246cdb15ebaa28132b37f6c",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/12/02, 1:57 PM",
      "commitNameOld": "5daa84bffadb43f33f6719baaff3dfc20c91628a",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 7.28,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + (bean \u003d\u003d null ? \"null\" : bean.getClass().getName()) + \".\" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 278,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n",
      "diff": "@@ -1,13 +1,13 @@\n public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n     Object value;\n     try {\n         Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n         if (method \u003d\u003d null) {\n             throw new JXPathException(\"No read method\");\n         }\n         value \u003d method.invoke(bean, new Object[0]);\n     } catch (Exception ex) {\n-        throw new JXPathException(\"Cannot access property: \" + propertyDescriptor.getName(), ex);\n+        throw new JXPathException(\"Cannot access property: \" + (bean \u003d\u003d null ? \"null\" : bean.getClass().getName()) + \".\" + propertyDescriptor.getName(), ex);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Documentation clean-up and removal of deprecated methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/02, 8:22 PM",
      "commitName": "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Documentation clean-up and removal of deprecated methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136768 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/15/02, 8:22 PM",
          "commitName": "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "5/8/02, 4:03 PM",
          "commitNameOld": "6ff8b63f6ab36abcbe49ddfe2c73d3e1a4e43ac0",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 38.18,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
          "functionStartLine": 278,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Documentation clean-up and removal of deprecated methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136768 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/15/02, 8:22 PM",
          "commitName": "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "5/8/02, 4:03 PM",
          "commitNameOld": "6ff8b63f6ab36abcbe49ddfe2c73d3e1a4e43ac0",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 38.18,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
          "functionStartLine": 278,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "Returns the value of the bean\u0027s property represented by\nthe supplied property descriptor.\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.97,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new JXPathException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new JXPathException(\"Cannot access property: \" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 230,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,13 @@\n public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n     Object value;\n     try {\n         Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n         if (method \u003d\u003d null) {\n-            throw new RuntimeException(\"No read method\");\n+            throw new JXPathException(\"No read method\");\n         }\n         value \u003d method.invoke(bean, new Object[0]);\n     } catch (Exception ex) {\n-        ex.printStackTrace();\n-        throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n+        throw new JXPathException(\"Cannot access property: \" + propertyDescriptor.getName(), ex);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Yfilerename",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new RuntimeException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        ex.printStackTrace();\n        throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 230,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
        "newPath": "src/java/org/apache/commons/jxpath/util/ValueUtils.java"
      }
    },
    "2735dfce721fbf083b91b3b7695d8672c28200ae": {
      "type": "Ybodychange",
      "commitMessage": "Copied getAccessibleProperty from PropertyUtils\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136703 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/01, 5:52 PM",
      "commitName": "2735dfce721fbf083b91b3b7695d8672c28200ae",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 17.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method \u003d\u003d null) {\n            throw new RuntimeException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        ex.printStackTrace();\n        throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
      "functionStartLine": 193,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,14 @@\n public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n     Object value;\n     try {\n-        Method method \u003d propertyDescriptor.getReadMethod();\n+        Method method \u003d getAccessibleMethod(propertyDescriptor.getReadMethod());\n         if (method \u003d\u003d null) {\n             throw new RuntimeException(\"No read method\");\n         }\n         value \u003d method.invoke(bean, new Object[0]);\n     } catch (Exception ex) {\n+        ex.printStackTrace();\n         throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,13 @@\n+public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n+    Object value;\n+    try {\n+        Method method \u003d propertyDescriptor.getReadMethod();\n+        if (method \u003d\u003d null) {\n+            throw new RuntimeException(\"No read method\");\n+        }\n+        value \u003d method.invoke(bean, new Object[0]);\n+    } catch (Exception ex) {\n+        throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n+    }\n+    return value;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Object getValue(Object bean, PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        Method method \u003d propertyDescriptor.getReadMethod();\n        if (method \u003d\u003d null) {\n            throw new RuntimeException(\"No read method\");\n        }\n        value \u003d method.invoke(bean, new Object[0]);\n    } catch (Exception ex) {\n        throw new RuntimeException(\"Cannot access property: \" + propertyDescriptor.getName() + \", \" + ex.getMessage());\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
      "functionStartLine": 193,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}