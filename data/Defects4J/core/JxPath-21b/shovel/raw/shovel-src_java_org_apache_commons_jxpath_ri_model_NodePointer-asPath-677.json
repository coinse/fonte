{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePointer.java",
  "functionName": "asPath",
  "functionId": "asPath",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
  "functionAnnotation": "",
  "functionDoc": "Returns an XPath that maps to this Pointer.\n\n@return String xpath expression\n",
  "functionStartLine": 677,
  "functionEndLine": 702,
  "numCommitsSeen": 51,
  "timeTaken": 1947,
  "changeHistory": [
    "d8ce20b6feb4a75ba74a9ded1bfbbac83399884f",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
    "074cc8809cf0884f38bb22622d81209778a02b32",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "d8ce20b6feb4a75ba74a9ded1bfbbac83399884f": "Ydocchange",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": "Ybodychange",
    "074cc8809cf0884f38bb22622d81209778a02b32": "Ybodychange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Ybodychange",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": "Yformatchange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ybodychange,Ydocchange)",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "207c6dd98407506ff367d072be25b56f37989215": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d8ce20b6feb4a75ba74a9ded1bfbbac83399884f": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@601561 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/5/07, 2:48 PM",
      "commitName": "d8ce20b6feb4a75ba74a9ded1bfbbac83399884f",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "7/6/07, 2:21 PM",
      "commitNameOld": "70d1ba2ca5c354a35391839fc37ed0860c2719f4",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 152.06,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    if (parent !\u003d null \u0026\u0026 parent.isContainer()) {\n        return parent.asPath();\n    }\n    StringBuffer buffer \u003d new StringBuffer();\n    if (parent !\u003d null) {\n        buffer.append(parent.asPath());\n    }\n    if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n        buffer.append(\u0027/\u0027);\n    }\n    if (attribute) {\n        buffer.append(\u0027@\u0027);\n    }\n    buffer.append(getName());\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 657,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "Returns an XPath that maps to this Pointer.\n\n@return String xpath expression\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns an XPath that maps to this Pointer.\n",
        "newValue": "Returns an XPath that maps to this Pointer.\n\n@return String xpath expression\n"
      }
    },
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": {
      "type": "Ybodychange",
      "commitMessage": "Renamed isNode to !isContainer\nCleaned up asPath\nIgnore exceptions during a property iteration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/27/02, 5:02 PM",
      "commitName": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:20 PM",
      "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.99,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    if (parent !\u003d null \u0026\u0026 parent.isContainer()) {\n        return parent.asPath();\n    }\n    StringBuffer buffer \u003d new StringBuffer();\n    if (parent !\u003d null) {\n        buffer.append(parent.asPath());\n    }\n    if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n        buffer.append(\u0027/\u0027);\n    }\n    if (attribute) {\n        buffer.append(\u0027@\u0027);\n    }\n    buffer.append(getName());\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 585,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "Returns an XPath that maps to this Pointer.\n",
      "diff": "@@ -1,28 +1,20 @@\n public String asPath() {\n-    StringBuffer buffer \u003d new StringBuffer();\n-    if (getParent() !\u003d null) {\n-        buffer.append(getParent().asPath());\n-        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n-            QName name \u003d getName();\n-            if (name !\u003d null) {\n-                if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n-                    buffer.append(\u0027/\u0027);\n-                }\n-                if (attribute) {\n-                    buffer.append(\u0027@\u0027);\n-                }\n-                buffer.append(name);\n-            }\n-        }\n-    } else {\n-        QName name \u003d getName();\n-        if (attribute) {\n-            buffer.append(\u0027@\u0027);\n-        }\n-        buffer.append(name);\n+    if (parent !\u003d null \u0026\u0026 parent.isContainer()) {\n+        return parent.asPath();\n     }\n+    StringBuffer buffer \u003d new StringBuffer();\n+    if (parent !\u003d null) {\n+        buffer.append(parent.asPath());\n+    }\n+    if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n+        buffer.append(\u0027/\u0027);\n+    }\n+    if (attribute) {\n+        buffer.append(\u0027@\u0027);\n+    }\n+    buffer.append(getName());\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "074cc8809cf0884f38bb22622d81209778a02b32": {
      "type": "Ybodychange",
      "commitMessage": "Cleaned up isCollection, getLength and asPath methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136822 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/19/02, 8:47 PM",
      "commitName": "074cc8809cf0884f38bb22622d81209778a02b32",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/12/02, 7:59 PM",
      "commitNameOld": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 7.03,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n                    buffer.append(\u0027/\u0027);\n                }\n                if (attribute) {\n                    buffer.append(\u0027@\u0027);\n                }\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        if (attribute) {\n            buffer.append(\u0027@\u0027);\n        }\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 541,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "Returns an XPath that maps to this Pointer.\n",
      "diff": "@@ -1,26 +1,28 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n         if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n             QName name \u003d getName();\n             if (name !\u003d null) {\n-                buffer.append(\u0027/\u0027);\n+                if (buffer.length() \u003d\u003d 0 || buffer.charAt(buffer.length() - 1) !\u003d \u0027/\u0027) {\n+                    buffer.append(\u0027/\u0027);\n+                }\n                 if (attribute) {\n                     buffer.append(\u0027@\u0027);\n                 }\n                 buffer.append(name);\n             }\n         }\n     } else {\n         QName name \u003d getName();\n         if (attribute) {\n             buffer.append(\u0027@\u0027);\n         }\n         buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Ybodychange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.45,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                buffer.append(\u0027/\u0027);\n                if (attribute) {\n                    buffer.append(\u0027@\u0027);\n                }\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        if (attribute) {\n            buffer.append(\u0027@\u0027);\n        }\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 555,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "Returns an XPath that maps to this Pointer.\n",
      "diff": "@@ -1,20 +1,26 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n         if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n             QName name \u003d getName();\n             if (name !\u003d null) {\n                 buffer.append(\u0027/\u0027);\n+                if (attribute) {\n+                    buffer.append(\u0027@\u0027);\n+                }\n                 buffer.append(name);\n             }\n         }\n     } else {\n         QName name \u003d getName();\n+        if (attribute) {\n+            buffer.append(\u0027@\u0027);\n+        }\n         buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": {
      "type": "Yformatchange",
      "commitMessage": "Improved formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:31 PM",
      "commitName": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/21/02, 2:52 PM",
      "commitNameOld": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                buffer.append(\u0027/\u0027);\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 463,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "Returns an XPath that maps to this Pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Ydocchange)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                buffer.append(\u0027/\u0027);\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 438,
          "functionName": "asPath",
          "functionAnnotation": "",
          "functionDoc": "Returns an XPath that maps to this Pointer.\n",
          "diff": "@@ -1,17 +1,20 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n-    }\n-    QName name \u003d getName();\n-    if (name !\u003d null) {\n-        if (getParent() !\u003d null) {\n-            buffer.append(\u0027/\u0027);\n+        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n+            QName name \u003d getName();\n+            if (name !\u003d null) {\n+                buffer.append(\u0027/\u0027);\n+                buffer.append(name);\n+            }\n         }\n+    } else {\n+        QName name \u003d getName();\n         buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                buffer.append(\u0027/\u0027);\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 438,
          "functionName": "asPath",
          "functionAnnotation": "",
          "functionDoc": "Returns an XPath that maps to this Pointer.\n",
          "diff": "@@ -1,17 +1,20 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n-    }\n-    QName name \u003d getName();\n-    if (name !\u003d null) {\n-        if (getParent() !\u003d null) {\n-            buffer.append(\u0027/\u0027);\n+        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n+            QName name \u003d getName();\n+            if (name !\u003d null) {\n+                buffer.append(\u0027/\u0027);\n+                buffer.append(name);\n+            }\n         }\n+    } else {\n+        QName name \u003d getName();\n         buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n            QName name \u003d getName();\n            if (name !\u003d null) {\n                buffer.append(\u0027/\u0027);\n                buffer.append(name);\n            }\n        }\n    } else {\n        QName name \u003d getName();\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 438,
          "functionName": "asPath",
          "functionAnnotation": "",
          "functionDoc": "Returns an XPath that maps to this Pointer.\n",
          "diff": "@@ -1,17 +1,20 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n-    }\n-    QName name \u003d getName();\n-    if (name !\u003d null) {\n-        if (getParent() !\u003d null) {\n-            buffer.append(\u0027/\u0027);\n+        if (getParent().isNode() || (parent instanceof NullElementPointer)) {\n+            QName name \u003d getName();\n+            if (name !\u003d null) {\n+                buffer.append(\u0027/\u0027);\n+                buffer.append(name);\n+            }\n         }\n+    } else {\n+        QName name \u003d getName();\n         buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Returns an XPath that maps to this Pointer.\n"
          }
        }
      ]
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/2/01, 6:22 PM",
      "commitNameOld": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 18.92,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n    }\n    QName name \u003d getName();\n    if (name !\u003d null) {\n        if (getParent() !\u003d null) {\n            buffer.append(\u0027/\u0027);\n        }\n        buffer.append(name);\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 251,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n     }\n     QName name \u003d getName();\n     if (name !\u003d null) {\n         if (getParent() !\u003d null) {\n             buffer.append(\u0027/\u0027);\n         }\n-        buffer.append(name.asString());\n+        buffer.append(name);\n     }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/2/01, 6:22 PM",
          "commitName": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/22/01, 8:38 PM",
          "commitNameOld": "ec798e97745ee2c294d374b873308065948dded4",
          "commitAuthorOld": "Craig R. McClanahan",
          "daysBetweenCommits": 10.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n    }\n    QName name \u003d getName();\n    if (name !\u003d null) {\n        if (getParent() !\u003d null) {\n            buffer.append(\u0027/\u0027);\n        }\n        buffer.append(name.asString());\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
          "functionStartLine": 204,
          "functionName": "asPath",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,17 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n-        buffer.append(\u0027/\u0027);\n     }\n-    buffer.append(getPropertyName());\n+    QName name \u003d getName();\n+    if (name !\u003d null) {\n+        if (getParent() !\u003d null) {\n+            buffer.append(\u0027/\u0027);\n+        }\n+        buffer.append(name.asString());\n+    }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyPointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
            "oldMethodName": "asPath",
            "newMethodName": "asPath"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/2/01, 6:22 PM",
          "commitName": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/22/01, 8:38 PM",
          "commitNameOld": "ec798e97745ee2c294d374b873308065948dded4",
          "commitAuthorOld": "Craig R. McClanahan",
          "daysBetweenCommits": 10.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n    }\n    QName name \u003d getName();\n    if (name !\u003d null) {\n        if (getParent() !\u003d null) {\n            buffer.append(\u0027/\u0027);\n        }\n        buffer.append(name.asString());\n    }\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
          "functionStartLine": 204,
          "functionName": "asPath",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,17 @@\n public String asPath() {\n     StringBuffer buffer \u003d new StringBuffer();\n     if (getParent() !\u003d null) {\n         buffer.append(getParent().asPath());\n-        buffer.append(\u0027/\u0027);\n     }\n-    buffer.append(getPropertyName());\n+    QName name \u003d getName();\n+    if (name !\u003d null) {\n+        if (getParent() !\u003d null) {\n+            buffer.append(\u0027/\u0027);\n+        }\n+        buffer.append(name.asString());\n+    }\n     if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n         buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n     }\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,12 @@\n+public String asPath() {\n+    StringBuffer buffer \u003d new StringBuffer();\n+    if (getParent() !\u003d null) {\n+        buffer.append(getParent().asPath());\n+        buffer.append(\u0027/\u0027);\n+    }\n+    buffer.append(getPropertyName());\n+    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n+        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n+    }\n+    return buffer.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String asPath() {\n    StringBuffer buffer \u003d new StringBuffer();\n    if (getParent() !\u003d null) {\n        buffer.append(getParent().asPath());\n        buffer.append(\u0027/\u0027);\n    }\n    buffer.append(getPropertyName());\n    if (index !\u003d WHOLE_COLLECTION \u0026\u0026 isCollection()) {\n        buffer.append(\u0027[\u0027).append(index + 1).append(\u0027]\u0027);\n    }\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyPointer.java",
      "functionStartLine": 155,
      "functionName": "asPath",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}