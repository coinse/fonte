{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ValueUtils.java",
  "functionName": "getValue",
  "functionId": "getValue___collection-Object__index-int",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the index\u0027th element of the supplied collection.\n\n@param collection to read\n@param index int\n@return collection[index]\n",
  "functionStartLine": 291,
  "functionEndLine": 322,
  "numCommitsSeen": 38,
  "timeTaken": 1504,
  "changeHistory": [
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
    "8fee99cc659d18a52c06bd27146650789609105e",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": "Ydocchange",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": "Ybodychange",
    "8fee99cc659d18a52c06bd27146650789609105e": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268": "Ydocchange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Yfilerename",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 12:19 PM",
      "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/16/07, 11:29 PM",
      "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 48.53,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    collection \u003d getValue(collection);\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 291,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the index\u0027th element of the supplied collection.\n\n@param collection to read\n@param index int\n@return collection[index]\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the index\u0027th element of the supplied collection.\n",
        "newValue": "Returns the index\u0027th element of the supplied collection.\n\n@param collection to read\n@param index int\n@return collection[index]\n"
      }
    },
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": {
      "type": "Ybodychange",
      "commitMessage": "In some situations JXPath would not open containers during path traversal. \nMade the container opening consistent throughout RI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/4/04, 3:06 PM",
      "commitName": "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/29/04, 6:17 AM",
      "commitNameOld": "4fc265a938e1e9d13c407d4668ec8c864e85d799",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    collection \u003d getValue(collection);\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 273,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the index\u0027th element of the supplied collection.\n",
      "diff": "@@ -1,29 +1,29 @@\n public static Object getValue(Object collection, int index) {\n-    collection \u003d openContainers(collection);\n+    collection \u003d getValue(collection);\n     Object value \u003d collection;\n     if (collection !\u003d null) {\n         if (collection.getClass().isArray()) {\n             if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                 return null;\n             }\n             value \u003d Array.get(collection, index);\n         } else if (collection instanceof List) {\n             if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                 return null;\n             }\n             value \u003d ((List) collection).get(index);\n         } else if (collection instanceof Collection) {\n             int i \u003d 0;\n             Iterator it \u003d ((Collection) collection).iterator();\n             for (; i \u003c index; i++) {\n                 it.next();\n             }\n             if (it.hasNext()) {\n                 value \u003d it.next();\n             } else {\n                 value \u003d null;\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8fee99cc659d18a52c06bd27146650789609105e": {
      "type": "Ybodychange",
      "commitMessage": "Opening containers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136838 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/16/03, 6:02 PM",
      "commitName": "8fee99cc659d18a52c06bd27146650789609105e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/10/03, 9:41 PM",
      "commitNameOld": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    collection \u003d openContainers(collection);\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 279,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the index\u0027th element of the supplied collection.\n",
      "diff": "@@ -1,28 +1,29 @@\n public static Object getValue(Object collection, int index) {\n+    collection \u003d openContainers(collection);\n     Object value \u003d collection;\n     if (collection !\u003d null) {\n         if (collection.getClass().isArray()) {\n             if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                 return null;\n             }\n             value \u003d Array.get(collection, index);\n         } else if (collection instanceof List) {\n             if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                 return null;\n             }\n             value \u003d ((List) collection).get(index);\n         } else if (collection instanceof Collection) {\n             int i \u003d 0;\n             Iterator it \u003d ((Collection) collection).iterator();\n             for (; i \u003c index; i++) {\n                 it.next();\n             }\n             if (it.hasNext()) {\n                 value \u003d it.next();\n             } else {\n                 value \u003d null;\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:33 PM",
      "commitNameOld": "594ff3b180fd1ac7addb40e2c32a15e4567eed3c",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 46.17,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 277,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the index\u0027th element of the supplied collection.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "ab914f400352a3a525ba0a5d189eb2e4e1ade268": {
      "type": "Ydocchange",
      "commitMessage": "Documentation clean-up and removal of deprecated methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/02, 8:22 PM",
      "commitName": "ab914f400352a3a525ba0a5d189eb2e4e1ade268",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "5/8/02, 4:03 PM",
      "commitNameOld": "6ff8b63f6ab36abcbe49ddfe2c73d3e1a4e43ac0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 38.18,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 221,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "Returns the index\u0027th element of the supplied collection.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Returns the index\u0027th element of the supplied collection.\n"
      }
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Yfilerename",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/util/ValueUtils.java",
      "functionStartLine": 183,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
        "newPath": "src/java/org/apache/commons/jxpath/util/ValueUtils.java"
      }
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/8/01, 5:52 PM",
      "commitNameOld": "2735dfce721fbf083b91b3b7695d8672c28200ae",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 213.12,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object getValue(Object collection, int index) {\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n                return null;\n            }\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n                return null;\n            }\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            int i \u003d 0;\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (; i \u003c index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value \u003d it.next();\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
      "functionStartLine": 183,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,28 @@\n public static Object getValue(Object collection, int index) {\n     Object value \u003d collection;\n     if (collection !\u003d null) {\n         if (collection.getClass().isArray()) {\n+            if (index \u003c 0 || index \u003e\u003d Array.getLength(collection)) {\n+                return null;\n+            }\n             value \u003d Array.get(collection, index);\n         } else if (collection instanceof List) {\n+            if (index \u003c 0 || index \u003e\u003d ((List) collection).size()) {\n+                return null;\n+            }\n             value \u003d ((List) collection).get(index);\n         } else if (collection instanceof Collection) {\n+            int i \u003d 0;\n             Iterator it \u003d ((Collection) collection).iterator();\n-            for (int i \u003d 0; i \u003c\u003d index; i++) {\n+            for (; i \u003c index; i++) {\n+                it.next();\n+            }\n+            if (it.hasNext()) {\n                 value \u003d it.next();\n+            } else {\n+                value \u003d null;\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,16 @@\n+public static Object getValue(Object collection, int index) {\n+    Object value \u003d collection;\n+    if (collection !\u003d null) {\n+        if (collection.getClass().isArray()) {\n+            value \u003d Array.get(collection, index);\n+        } else if (collection instanceof List) {\n+            value \u003d ((List) collection).get(index);\n+        } else if (collection instanceof Collection) {\n+            Iterator it \u003d ((Collection) collection).iterator();\n+            for (int i \u003d 0; i \u003c\u003d index; i++) {\n+                value \u003d it.next();\n+            }\n+        }\n+    }\n+    return value;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Object getValue(Object collection, int index) {\n    Object value \u003d collection;\n    if (collection !\u003d null) {\n        if (collection.getClass().isArray()) {\n            value \u003d Array.get(collection, index);\n        } else if (collection instanceof List) {\n            value \u003d ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            Iterator it \u003d ((Collection) collection).iterator();\n            for (int i \u003d 0; i \u003c\u003d index; i++) {\n                value \u003d it.next();\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyAccessHelper.java",
      "functionStartLine": 159,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}