{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplePathInterpreter.java",
  "functionName": "createNullPointer",
  "functionId": "createNullPointer___context-EvalContext__parent-NodePointer__steps-Step[]__currentStep-int",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
  "functionAnnotation": "",
  "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@return NodePointer\n",
  "functionStartLine": 807,
  "functionEndLine": 836,
  "numCommitsSeen": 34,
  "timeTaken": 1525,
  "changeHistory": [
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
    "26ed002f4905b94a6a4275f9ad263cb8a2cadf00",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "e6b562c6eca79b82a57a4532768d775d76f48694"
  ],
  "changeHistoryShort": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": "Ymultichange(Ydocchange,Yformatchange)",
    "26ed002f4905b94a6a4275f9ad263cb8a2cadf00": "Ymodifierchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Ymultichange(Yparameterchange,Ybodychange)",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": "Ybodychange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Ybodychange",
    "e6b562c6eca79b82a57a4532768d775d76f48694": "Yintroduced"
  },
  "changeHistoryDetails": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/07, 11:29 PM",
      "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthor": "Matthew Jason Benson",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/16/07, 11:29 PM",
          "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/5/07, 1:04 PM",
          "commitNameOld": "48294fe62b52a1786a65aa3e15fbccd99f8e5bca",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 11.43,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n    if (currentStep \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[currentStep];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 806,
          "functionName": "createNullPointer",
          "functionAnnotation": "",
          "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@return NodePointer\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
            "newValue": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@return NodePointer\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/16/07, 11:29 PM",
          "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/5/07, 1:04 PM",
          "commitNameOld": "48294fe62b52a1786a65aa3e15fbccd99f8e5bca",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 11.43,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n    if (currentStep \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[currentStep];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 806,
          "functionName": "createNullPointer",
          "functionAnnotation": "",
          "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@return NodePointer\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "26ed002f4905b94a6a4275f9ad263cb8a2cadf00": {
      "type": "Ymodifierchange",
      "commitMessage": "Fixed an issue with searches in graphs containing DynamicPropertyHandlers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/22/04, 5:10 PM",
      "commitName": "26ed002f4905b94a6a4275f9ad263cb8a2cadf00",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/9/03, 2:31 PM",
      "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
      "commitAuthorOld": "Robert Burrell Donkin",
      "daysBetweenCommits": 105.15,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n    if (currentStep \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[currentStep];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 790,
      "functionName": "createNullPointer",
      "functionAnnotation": "",
      "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
      "diff": "@@ -1,17 +1,17 @@\n-private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n+public static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n     if (currentStep \u003d\u003d steps.length) {\n         return parent;\n     }\n     parent \u003d valuePointer(parent);\n     Step step \u003d steps[currentStep];\n     int axis \u003d step.getAxis();\n     if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n         NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n         QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n         pointer.setPropertyName(name.toString());\n         pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n         parent \u003d pointer;\n     }\n     Expression[] predicates \u003d step.getPredicates();\n     return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[public, static]"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "11/25/02, 5:20 PM",
          "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 46.18,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n    if (currentStep \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[currentStep];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 790,
          "functionName": "createNullPointer",
          "functionAnnotation": "",
          "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
          "diff": "@@ -1,17 +1,17 @@\n-private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n-    if (current_step \u003d\u003d steps.length) {\n+private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n+    if (currentStep \u003d\u003d steps.length) {\n         return parent;\n     }\n     parent \u003d valuePointer(parent);\n-    Step step \u003d steps[current_step];\n+    Step step \u003d steps[currentStep];\n     int axis \u003d step.getAxis();\n     if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n         NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n         QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n         pointer.setPropertyName(name.toString());\n         pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n         parent \u003d pointer;\n     }\n     Expression[] predicates \u003d step.getPredicates();\n-    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n+    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[context-EvalContext, parent-NodePointer, steps-Step[], current_step-int]",
            "newValue": "[context-EvalContext, parent-NodePointer, steps-Step[], currentStep-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "11/25/02, 5:20 PM",
          "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 46.18,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n    if (currentStep \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[currentStep];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 790,
          "functionName": "createNullPointer",
          "functionAnnotation": "",
          "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
          "diff": "@@ -1,17 +1,17 @@\n-private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n-    if (current_step \u003d\u003d steps.length) {\n+private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int currentStep) {\n+    if (currentStep \u003d\u003d steps.length) {\n         return parent;\n     }\n     parent \u003d valuePointer(parent);\n-    Step step \u003d steps[current_step];\n+    Step step \u003d steps[currentStep];\n     int axis \u003d step.getAxis();\n     if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n         NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n         QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n         pointer.setPropertyName(name.toString());\n         pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n         parent \u003d pointer;\n     }\n     Expression[] predicates \u003d step.getPredicates();\n-    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n+    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": {
      "type": "Ybodychange",
      "commitMessage": "Organized imports, formatted code\nFixed problems with getValue() and getNode()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/25/02, 5:20 PM",
      "commitName": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/12/02, 7:59 PM",
      "commitNameOld": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 43.93,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n    if (current_step \u003d\u003d steps.length) {\n        return parent;\n    }\n    parent \u003d valuePointer(parent);\n    Step step \u003d steps[current_step];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 686,
      "functionName": "createNullPointer",
      "functionAnnotation": "",
      "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
      "diff": "@@ -1,17 +1,17 @@\n private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n-    parent \u003d valuePointer(parent);\n     if (current_step \u003d\u003d steps.length) {\n         return parent;\n     }\n+    parent \u003d valuePointer(parent);\n     Step step \u003d steps[current_step];\n     int axis \u003d step.getAxis();\n     if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n         NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n         QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n         pointer.setPropertyName(name.toString());\n         pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n         parent \u003d pointer;\n     }\n     Expression[] predicates \u003d step.getPredicates();\n     return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Ybodychange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/9/02, 6:35 PM",
      "commitNameOld": "e6b562c6eca79b82a57a4532768d775d76f48694",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 64.06,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n    parent \u003d valuePointer(parent);\n    if (current_step \u003d\u003d steps.length) {\n        return parent;\n    }\n    Step step \u003d steps[current_step];\n    int axis \u003d step.getAxis();\n    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 685,
      "functionName": "createNullPointer",
      "functionAnnotation": "",
      "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n",
      "diff": "@@ -1,15 +1,17 @@\n private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n     parent \u003d valuePointer(parent);\n     if (current_step \u003d\u003d steps.length) {\n         return parent;\n     }\n     Step step \u003d steps[current_step];\n-    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n+    int axis \u003d step.getAxis();\n+    if (axis \u003d\u003d Compiler.AXIS_CHILD || axis \u003d\u003d Compiler.AXIS_ATTRIBUTE) {\n         NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n         QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n         pointer.setPropertyName(name.toString());\n+        pointer.setAttribute(axis \u003d\u003d Compiler.AXIS_ATTRIBUTE);\n         parent \u003d pointer;\n     }\n     Expression[] predicates \u003d step.getPredicates();\n     return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e6b562c6eca79b82a57a4532768d775d76f48694": {
      "type": "Yintroduced",
      "commitMessage": "A complete re-write to address multiple additional use cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:35 PM",
      "commitName": "e6b562c6eca79b82a57a4532768d775d76f48694",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,15 @@\n+private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n+    parent \u003d valuePointer(parent);\n+    if (current_step \u003d\u003d steps.length) {\n+        return parent;\n+    }\n+    Step step \u003d steps[current_step];\n+    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n+        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n+        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n+        pointer.setPropertyName(name.toString());\n+        parent \u003d pointer;\n+    }\n+    Expression[] predicates \u003d step.getPredicates();\n+    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static NodePointer createNullPointer(EvalContext context, NodePointer parent, Step[] steps, int current_step) {\n    parent \u003d valuePointer(parent);\n    if (current_step \u003d\u003d steps.length) {\n        return parent;\n    }\n    Step step \u003d steps[current_step];\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NullPropertyPointer pointer \u003d new NullPropertyPointer(parent);\n        QName name \u003d ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        parent \u003d pointer;\n    }\n    Expression[] predicates \u003d step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, current_step, predicates, 0);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 677,
      "functionName": "createNullPointer",
      "functionAnnotation": "",
      "functionDoc": "Creates a \"null pointer\" that\na) represents the requested path and\nb) can be used for creation of missing nodes in the path.\n"
    }
  }
}