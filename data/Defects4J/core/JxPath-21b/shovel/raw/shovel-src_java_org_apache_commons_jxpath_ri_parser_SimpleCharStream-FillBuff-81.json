{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleCharStream.java",
  "functionName": "FillBuff",
  "functionId": "FillBuff",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 81,
  "functionEndLine": 124,
  "numCommitsSeen": 4,
  "timeTaken": 1401,
  "changeHistory": [
    "6b424e974f9e68987125d1d489731366bee87031",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "6b424e974f9e68987125d1d489731366bee87031": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Yfilerename",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b424e974f9e68987125d1d489731366bee87031": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Upgraded to JavaCC 3.0, enabled optimizations\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136861 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/4/03, 4:48 PM",
      "commitName": "6b424e974f9e68987125d1d489731366bee87031",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Upgraded to JavaCC 3.0, enabled optimizations\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136861 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/4/03, 4:48 PM",
          "commitName": "6b424e974f9e68987125d1d489731366bee87031",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "3/24/03, 6:41 PM",
          "commitNameOld": "77af585d9f0e629db4ecf8d468ef7b71c9d98e39",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 40.88,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void FillBuff() throws java.io.IOException {\n    if (maxNextCharInd \u003d\u003d available) {\n        if (available \u003d\u003d bufsize) {\n            if (tokenBegin \u003e 2048) {\n                bufpos \u003d maxNextCharInd \u003d 0;\n                available \u003d tokenBegin;\n            } else if (tokenBegin \u003c 0)\n                bufpos \u003d maxNextCharInd \u003d 0;\n            else\n                ExpandBuff(false);\n        } else if (available \u003e tokenBegin)\n            available \u003d bufsize;\n        else if ((tokenBegin - available) \u003c 2048)\n            ExpandBuff(true);\n        else\n            available \u003d tokenBegin;\n    }\n    int i;\n    try {\n        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        } else\n            maxNextCharInd +\u003d i;\n        return;\n    } catch (java.io.IOException e) {\n        --bufpos;\n        backup(0);\n        if (tokenBegin \u003d\u003d -1)\n            tokenBegin \u003d bufpos;\n        throw e;\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java",
          "functionStartLine": 81,
          "functionName": "FillBuff",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,22 +1,33 @@\n-private final void FillBuff() throws java.io.IOException {\n+protected void FillBuff() throws java.io.IOException {\n+    if (maxNextCharInd \u003d\u003d available) {\n+        if (available \u003d\u003d bufsize) {\n+            if (tokenBegin \u003e 2048) {\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+                available \u003d tokenBegin;\n+            } else if (tokenBegin \u003c 0)\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+            else\n+                ExpandBuff(false);\n+        } else if (available \u003e tokenBegin)\n+            available \u003d bufsize;\n+        else if ((tokenBegin - available) \u003c 2048)\n+            ExpandBuff(true);\n+        else\n+            available \u003d tokenBegin;\n+    }\n     int i;\n-    if (maxNextCharInd \u003d\u003d 4096)\n-        maxNextCharInd \u003d nextCharInd \u003d 0;\n     try {\n-        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n+        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n             inputStream.close();\n             throw new java.io.IOException();\n         } else\n             maxNextCharInd +\u003d i;\n         return;\n     } catch (java.io.IOException e) {\n-        if (bufpos !\u003d 0) {\n-            --bufpos;\n-            backup(0);\n-        } else {\n-            bufline[bufpos] \u003d line;\n-            bufcolumn[bufpos] \u003d column;\n-        }\n+        --bufpos;\n+        backup(0);\n+        if (tokenBegin \u003d\u003d -1)\n+            tokenBegin \u003d bufpos;\n         throw e;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/parser/JavaCharStream.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java",
            "oldMethodName": "FillBuff",
            "newMethodName": "FillBuff"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Upgraded to JavaCC 3.0, enabled optimizations\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136861 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/4/03, 4:48 PM",
          "commitName": "6b424e974f9e68987125d1d489731366bee87031",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "3/24/03, 6:41 PM",
          "commitNameOld": "77af585d9f0e629db4ecf8d468ef7b71c9d98e39",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 40.88,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void FillBuff() throws java.io.IOException {\n    if (maxNextCharInd \u003d\u003d available) {\n        if (available \u003d\u003d bufsize) {\n            if (tokenBegin \u003e 2048) {\n                bufpos \u003d maxNextCharInd \u003d 0;\n                available \u003d tokenBegin;\n            } else if (tokenBegin \u003c 0)\n                bufpos \u003d maxNextCharInd \u003d 0;\n            else\n                ExpandBuff(false);\n        } else if (available \u003e tokenBegin)\n            available \u003d bufsize;\n        else if ((tokenBegin - available) \u003c 2048)\n            ExpandBuff(true);\n        else\n            available \u003d tokenBegin;\n    }\n    int i;\n    try {\n        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        } else\n            maxNextCharInd +\u003d i;\n        return;\n    } catch (java.io.IOException e) {\n        --bufpos;\n        backup(0);\n        if (tokenBegin \u003d\u003d -1)\n            tokenBegin \u003d bufpos;\n        throw e;\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java",
          "functionStartLine": 81,
          "functionName": "FillBuff",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,22 +1,33 @@\n-private final void FillBuff() throws java.io.IOException {\n+protected void FillBuff() throws java.io.IOException {\n+    if (maxNextCharInd \u003d\u003d available) {\n+        if (available \u003d\u003d bufsize) {\n+            if (tokenBegin \u003e 2048) {\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+                available \u003d tokenBegin;\n+            } else if (tokenBegin \u003c 0)\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+            else\n+                ExpandBuff(false);\n+        } else if (available \u003e tokenBegin)\n+            available \u003d bufsize;\n+        else if ((tokenBegin - available) \u003c 2048)\n+            ExpandBuff(true);\n+        else\n+            available \u003d tokenBegin;\n+    }\n     int i;\n-    if (maxNextCharInd \u003d\u003d 4096)\n-        maxNextCharInd \u003d nextCharInd \u003d 0;\n     try {\n-        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n+        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n             inputStream.close();\n             throw new java.io.IOException();\n         } else\n             maxNextCharInd +\u003d i;\n         return;\n     } catch (java.io.IOException e) {\n-        if (bufpos !\u003d 0) {\n-            --bufpos;\n-            backup(0);\n-        } else {\n-            bufline[bufpos] \u003d line;\n-            bufcolumn[bufpos] \u003d column;\n-        }\n+        --bufpos;\n+        backup(0);\n+        if (tokenBegin \u003d\u003d -1)\n+            tokenBegin \u003d bufpos;\n         throw e;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private, final]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Upgraded to JavaCC 3.0, enabled optimizations\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136861 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/4/03, 4:48 PM",
          "commitName": "6b424e974f9e68987125d1d489731366bee87031",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "3/24/03, 6:41 PM",
          "commitNameOld": "77af585d9f0e629db4ecf8d468ef7b71c9d98e39",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 40.88,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void FillBuff() throws java.io.IOException {\n    if (maxNextCharInd \u003d\u003d available) {\n        if (available \u003d\u003d bufsize) {\n            if (tokenBegin \u003e 2048) {\n                bufpos \u003d maxNextCharInd \u003d 0;\n                available \u003d tokenBegin;\n            } else if (tokenBegin \u003c 0)\n                bufpos \u003d maxNextCharInd \u003d 0;\n            else\n                ExpandBuff(false);\n        } else if (available \u003e tokenBegin)\n            available \u003d bufsize;\n        else if ((tokenBegin - available) \u003c 2048)\n            ExpandBuff(true);\n        else\n            available \u003d tokenBegin;\n    }\n    int i;\n    try {\n        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        } else\n            maxNextCharInd +\u003d i;\n        return;\n    } catch (java.io.IOException e) {\n        --bufpos;\n        backup(0);\n        if (tokenBegin \u003d\u003d -1)\n            tokenBegin \u003d bufpos;\n        throw e;\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java",
          "functionStartLine": 81,
          "functionName": "FillBuff",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,22 +1,33 @@\n-private final void FillBuff() throws java.io.IOException {\n+protected void FillBuff() throws java.io.IOException {\n+    if (maxNextCharInd \u003d\u003d available) {\n+        if (available \u003d\u003d bufsize) {\n+            if (tokenBegin \u003e 2048) {\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+                available \u003d tokenBegin;\n+            } else if (tokenBegin \u003c 0)\n+                bufpos \u003d maxNextCharInd \u003d 0;\n+            else\n+                ExpandBuff(false);\n+        } else if (available \u003e tokenBegin)\n+            available \u003d bufsize;\n+        else if ((tokenBegin - available) \u003c 2048)\n+            ExpandBuff(true);\n+        else\n+            available \u003d tokenBegin;\n+    }\n     int i;\n-    if (maxNextCharInd \u003d\u003d 4096)\n-        maxNextCharInd \u003d nextCharInd \u003d 0;\n     try {\n-        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n+        if ((i \u003d inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) \u003d\u003d -1) {\n             inputStream.close();\n             throw new java.io.IOException();\n         } else\n             maxNextCharInd +\u003d i;\n         return;\n     } catch (java.io.IOException e) {\n-        if (bufpos !\u003d 0) {\n-            --bufpos;\n-            backup(0);\n-        } else {\n-            bufline[bufpos] \u003d line;\n-            bufcolumn[bufpos] \u003d column;\n-        }\n+        --bufpos;\n+        backup(0);\n+        if (tokenBegin \u003d\u003d -1)\n+            tokenBegin \u003d bufpos;\n         throw e;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Yfilerename",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/19/03, 4:07 PM",
      "commitNameOld": "d4c77d86319c20203256e83fd411329e908477da",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 5.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final void FillBuff() throws java.io.IOException {\n    int i;\n    if (maxNextCharInd \u003d\u003d 4096)\n        maxNextCharInd \u003d nextCharInd \u003d 0;\n    try {\n        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        } else\n            maxNextCharInd +\u003d i;\n        return;\n    } catch (java.io.IOException e) {\n        if (bufpos !\u003d 0) {\n            --bufpos;\n            backup(0);\n        } else {\n            bufline[bufpos] \u003d line;\n            bufcolumn[bufpos] \u003d column;\n        }\n        throw e;\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/JavaCharStream.java",
      "functionStartLine": 128,
      "functionName": "FillBuff",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/jxpath/ri/parser/ASCII_UCodeESC_CharStream.java",
        "newPath": "src/java/org/apache/commons/jxpath/ri/parser/JavaCharStream.java"
      }
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,22 @@\n+private final void FillBuff() throws java.io.IOException {\n+    int i;\n+    if (maxNextCharInd \u003d\u003d 4096)\n+        maxNextCharInd \u003d nextCharInd \u003d 0;\n+    try {\n+        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n+            inputStream.close();\n+            throw new java.io.IOException();\n+        } else\n+            maxNextCharInd +\u003d i;\n+        return;\n+    } catch (java.io.IOException e) {\n+        if (bufpos !\u003d 0) {\n+            --bufpos;\n+            backup(0);\n+        } else {\n+            bufline[bufpos] \u003d line;\n+            bufcolumn[bufpos] \u003d column;\n+        }\n+        throw e;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private final void FillBuff() throws java.io.IOException {\n    int i;\n    if (maxNextCharInd \u003d\u003d 4096)\n        maxNextCharInd \u003d nextCharInd \u003d 0;\n    try {\n        if ((i \u003d inputStream.read(nextCharBuf, maxNextCharInd, 4096 - maxNextCharInd)) \u003d\u003d -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        } else\n            maxNextCharInd +\u003d i;\n        return;\n    } catch (java.io.IOException e) {\n        if (bufpos !\u003d 0) {\n            --bufpos;\n            backup(0);\n        } else {\n            bufline[bufpos] \u003d line;\n            bufcolumn[bufpos] \u003d column;\n        }\n        throw e;\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/ASCII_UCodeESC_CharStream.java",
      "functionStartLine": 128,
      "functionName": "FillBuff",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}