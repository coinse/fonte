{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XPathParser.java",
  "functionName": "NCName",
  "functionId": "NCName",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 29,
  "functionEndLine": 150,
  "numCommitsSeen": 8,
  "timeTaken": 1547,
  "changeHistory": [
    "10cb322e1c2fc92d4c2fb9580eb4435dc7242f3d",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "632e72228ad994efa19c0a9ae84923718f259cdf",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "10cb322e1c2fc92d4c2fb9580eb4435dc7242f3d": "Ybodychange",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Ybodychange",
    "632e72228ad994efa19c0a9ae84923718f259cdf": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10cb322e1c2fc92d4c2fb9580eb4435dc7242f3d": {
      "type": "Ybodychange",
      "commitMessage": "Implemented the ends-with function (JXPATH-132)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@779915 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/29/09, 3:23 AM",
      "commitName": "10cb322e1c2fc92d4c2fb9580eb4435dc7242f3d",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "2/1/06, 10:03 AM",
      "commitNameOld": "36f069cec063cf1638cc07c3e886ac27f3f1557c",
      "commitAuthorOld": "Martin van den Bemt",
      "daysBetweenCommits": 1212.68,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "actualSource": "public final String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_ENDS_WITH:\n            jj_consume_token(FUNCTION_ENDS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        case FUNCTION_KEY:\n            jj_consume_token(FUNCTION_KEY);\n            break;\n        case FUNCTION_FORMAT_NUMBER:\n            jj_consume_token(FUNCTION_FORMAT_NUMBER);\n            break;\n        default:\n            jj_la1[0] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true)\n            return token.image;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 29,
      "functionName": "NCName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,122 +1,125 @@\n public final String NCName() throws ParseException {\n     switch(jj_nt.kind) {\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NCName:\n             NCName_Without_CoreFunctions();\n             break;\n         case NODE:\n             jj_consume_token(NODE);\n             break;\n         case TEXT:\n             jj_consume_token(TEXT);\n             break;\n         case COMMENT:\n             jj_consume_token(COMMENT);\n             break;\n         case PI:\n             jj_consume_token(PI);\n             break;\n         case FUNCTION_LAST:\n             jj_consume_token(FUNCTION_LAST);\n             break;\n         case FUNCTION_POSITION:\n             jj_consume_token(FUNCTION_POSITION);\n             break;\n         case FUNCTION_COUNT:\n             jj_consume_token(FUNCTION_COUNT);\n             break;\n         case FUNCTION_ID:\n             jj_consume_token(FUNCTION_ID);\n             break;\n         case FUNCTION_LOCAL_NAME:\n             jj_consume_token(FUNCTION_LOCAL_NAME);\n             break;\n         case FUNCTION_NAMESPACE_URI:\n             jj_consume_token(FUNCTION_NAMESPACE_URI);\n             break;\n         case FUNCTION_NAME:\n             jj_consume_token(FUNCTION_NAME);\n             break;\n         case FUNCTION_STRING:\n             jj_consume_token(FUNCTION_STRING);\n             break;\n         case FUNCTION_CONCAT:\n             jj_consume_token(FUNCTION_CONCAT);\n             break;\n         case FUNCTION_STARTS_WITH:\n             jj_consume_token(FUNCTION_STARTS_WITH);\n             break;\n+        case FUNCTION_ENDS_WITH:\n+            jj_consume_token(FUNCTION_ENDS_WITH);\n+            break;\n         case FUNCTION_CONTAINS:\n             jj_consume_token(FUNCTION_CONTAINS);\n             break;\n         case FUNCTION_SUBSTRING_BEFORE:\n             jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n             break;\n         case FUNCTION_SUBSTRING_AFTER:\n             jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n             break;\n         case FUNCTION_SUBSTRING:\n             jj_consume_token(FUNCTION_SUBSTRING);\n             break;\n         case FUNCTION_STRING_LENGTH:\n             jj_consume_token(FUNCTION_STRING_LENGTH);\n             break;\n         case FUNCTION_NORMALIZE_SPACE:\n             jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n             break;\n         case FUNCTION_TRANSLATE:\n             jj_consume_token(FUNCTION_TRANSLATE);\n             break;\n         case FUNCTION_BOOLEAN:\n             jj_consume_token(FUNCTION_BOOLEAN);\n             break;\n         case FUNCTION_NOT:\n             jj_consume_token(FUNCTION_NOT);\n             break;\n         case FUNCTION_TRUE:\n             jj_consume_token(FUNCTION_TRUE);\n             break;\n         case FUNCTION_FALSE:\n             jj_consume_token(FUNCTION_FALSE);\n             break;\n         case FUNCTION_NULL:\n             jj_consume_token(FUNCTION_NULL);\n             break;\n         case FUNCTION_LANG:\n             jj_consume_token(FUNCTION_LANG);\n             break;\n         case FUNCTION_NUMBER:\n             jj_consume_token(FUNCTION_NUMBER);\n             break;\n         case FUNCTION_SUM:\n             jj_consume_token(FUNCTION_SUM);\n             break;\n         case FUNCTION_FLOOR:\n             jj_consume_token(FUNCTION_FLOOR);\n             break;\n         case FUNCTION_CEILING:\n             jj_consume_token(FUNCTION_CEILING);\n             break;\n         case FUNCTION_ROUND:\n             jj_consume_token(FUNCTION_ROUND);\n             break;\n         case FUNCTION_KEY:\n             jj_consume_token(FUNCTION_KEY);\n             break;\n         case FUNCTION_FORMAT_NUMBER:\n             jj_consume_token(FUNCTION_FORMAT_NUMBER);\n             break;\n         default:\n             jj_la1[0] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     {\n         if (true)\n             return token.image;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Ybodychange",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 230.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "public final String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        case FUNCTION_KEY:\n            jj_consume_token(FUNCTION_KEY);\n            break;\n        case FUNCTION_FORMAT_NUMBER:\n            jj_consume_token(FUNCTION_FORMAT_NUMBER);\n            break;\n        default:\n            jj_la1[0] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true)\n            return token.image;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 29,
      "functionName": "NCName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,119 +1,122 @@\n public final String NCName() throws ParseException {\n     switch(jj_nt.kind) {\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NCName:\n             NCName_Without_CoreFunctions();\n             break;\n         case NODE:\n             jj_consume_token(NODE);\n             break;\n         case TEXT:\n             jj_consume_token(TEXT);\n             break;\n         case COMMENT:\n             jj_consume_token(COMMENT);\n             break;\n         case PI:\n             jj_consume_token(PI);\n             break;\n         case FUNCTION_LAST:\n             jj_consume_token(FUNCTION_LAST);\n             break;\n         case FUNCTION_POSITION:\n             jj_consume_token(FUNCTION_POSITION);\n             break;\n         case FUNCTION_COUNT:\n             jj_consume_token(FUNCTION_COUNT);\n             break;\n         case FUNCTION_ID:\n             jj_consume_token(FUNCTION_ID);\n             break;\n         case FUNCTION_LOCAL_NAME:\n             jj_consume_token(FUNCTION_LOCAL_NAME);\n             break;\n         case FUNCTION_NAMESPACE_URI:\n             jj_consume_token(FUNCTION_NAMESPACE_URI);\n             break;\n         case FUNCTION_NAME:\n             jj_consume_token(FUNCTION_NAME);\n             break;\n         case FUNCTION_STRING:\n             jj_consume_token(FUNCTION_STRING);\n             break;\n         case FUNCTION_CONCAT:\n             jj_consume_token(FUNCTION_CONCAT);\n             break;\n         case FUNCTION_STARTS_WITH:\n             jj_consume_token(FUNCTION_STARTS_WITH);\n             break;\n         case FUNCTION_CONTAINS:\n             jj_consume_token(FUNCTION_CONTAINS);\n             break;\n         case FUNCTION_SUBSTRING_BEFORE:\n             jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n             break;\n         case FUNCTION_SUBSTRING_AFTER:\n             jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n             break;\n         case FUNCTION_SUBSTRING:\n             jj_consume_token(FUNCTION_SUBSTRING);\n             break;\n         case FUNCTION_STRING_LENGTH:\n             jj_consume_token(FUNCTION_STRING_LENGTH);\n             break;\n         case FUNCTION_NORMALIZE_SPACE:\n             jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n             break;\n         case FUNCTION_TRANSLATE:\n             jj_consume_token(FUNCTION_TRANSLATE);\n             break;\n         case FUNCTION_BOOLEAN:\n             jj_consume_token(FUNCTION_BOOLEAN);\n             break;\n         case FUNCTION_NOT:\n             jj_consume_token(FUNCTION_NOT);\n             break;\n         case FUNCTION_TRUE:\n             jj_consume_token(FUNCTION_TRUE);\n             break;\n         case FUNCTION_FALSE:\n             jj_consume_token(FUNCTION_FALSE);\n             break;\n         case FUNCTION_NULL:\n             jj_consume_token(FUNCTION_NULL);\n             break;\n         case FUNCTION_LANG:\n             jj_consume_token(FUNCTION_LANG);\n             break;\n         case FUNCTION_NUMBER:\n             jj_consume_token(FUNCTION_NUMBER);\n             break;\n         case FUNCTION_SUM:\n             jj_consume_token(FUNCTION_SUM);\n             break;\n         case FUNCTION_FLOOR:\n             jj_consume_token(FUNCTION_FLOOR);\n             break;\n         case FUNCTION_CEILING:\n             jj_consume_token(FUNCTION_CEILING);\n             break;\n         case FUNCTION_ROUND:\n             jj_consume_token(FUNCTION_ROUND);\n             break;\n         case FUNCTION_KEY:\n             jj_consume_token(FUNCTION_KEY);\n             break;\n+        case FUNCTION_FORMAT_NUMBER:\n+            jj_consume_token(FUNCTION_FORMAT_NUMBER);\n+            break;\n         default:\n             jj_la1[0] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     {\n         if (true)\n             return token.image;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "632e72228ad994efa19c0a9ae84923718f259cdf": {
      "type": "Ybodychange",
      "commitMessage": "Added support for id() and key()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/02, 3:47 PM",
      "commitName": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 259.98,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "public final String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        case FUNCTION_KEY:\n            jj_consume_token(FUNCTION_KEY);\n            break;\n        default:\n            jj_la1[0] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true)\n            return token.image;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 29,
      "functionName": "NCName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,116 +1,119 @@\n public final String NCName() throws ParseException {\n     switch(jj_nt.kind) {\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NCName:\n             NCName_Without_CoreFunctions();\n             break;\n         case NODE:\n             jj_consume_token(NODE);\n             break;\n         case TEXT:\n             jj_consume_token(TEXT);\n             break;\n         case COMMENT:\n             jj_consume_token(COMMENT);\n             break;\n         case PI:\n             jj_consume_token(PI);\n             break;\n         case FUNCTION_LAST:\n             jj_consume_token(FUNCTION_LAST);\n             break;\n         case FUNCTION_POSITION:\n             jj_consume_token(FUNCTION_POSITION);\n             break;\n         case FUNCTION_COUNT:\n             jj_consume_token(FUNCTION_COUNT);\n             break;\n         case FUNCTION_ID:\n             jj_consume_token(FUNCTION_ID);\n             break;\n         case FUNCTION_LOCAL_NAME:\n             jj_consume_token(FUNCTION_LOCAL_NAME);\n             break;\n         case FUNCTION_NAMESPACE_URI:\n             jj_consume_token(FUNCTION_NAMESPACE_URI);\n             break;\n         case FUNCTION_NAME:\n             jj_consume_token(FUNCTION_NAME);\n             break;\n         case FUNCTION_STRING:\n             jj_consume_token(FUNCTION_STRING);\n             break;\n         case FUNCTION_CONCAT:\n             jj_consume_token(FUNCTION_CONCAT);\n             break;\n         case FUNCTION_STARTS_WITH:\n             jj_consume_token(FUNCTION_STARTS_WITH);\n             break;\n         case FUNCTION_CONTAINS:\n             jj_consume_token(FUNCTION_CONTAINS);\n             break;\n         case FUNCTION_SUBSTRING_BEFORE:\n             jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n             break;\n         case FUNCTION_SUBSTRING_AFTER:\n             jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n             break;\n         case FUNCTION_SUBSTRING:\n             jj_consume_token(FUNCTION_SUBSTRING);\n             break;\n         case FUNCTION_STRING_LENGTH:\n             jj_consume_token(FUNCTION_STRING_LENGTH);\n             break;\n         case FUNCTION_NORMALIZE_SPACE:\n             jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n             break;\n         case FUNCTION_TRANSLATE:\n             jj_consume_token(FUNCTION_TRANSLATE);\n             break;\n         case FUNCTION_BOOLEAN:\n             jj_consume_token(FUNCTION_BOOLEAN);\n             break;\n         case FUNCTION_NOT:\n             jj_consume_token(FUNCTION_NOT);\n             break;\n         case FUNCTION_TRUE:\n             jj_consume_token(FUNCTION_TRUE);\n             break;\n         case FUNCTION_FALSE:\n             jj_consume_token(FUNCTION_FALSE);\n             break;\n         case FUNCTION_NULL:\n             jj_consume_token(FUNCTION_NULL);\n             break;\n         case FUNCTION_LANG:\n             jj_consume_token(FUNCTION_LANG);\n             break;\n         case FUNCTION_NUMBER:\n             jj_consume_token(FUNCTION_NUMBER);\n             break;\n         case FUNCTION_SUM:\n             jj_consume_token(FUNCTION_SUM);\n             break;\n         case FUNCTION_FLOOR:\n             jj_consume_token(FUNCTION_FLOOR);\n             break;\n         case FUNCTION_CEILING:\n             jj_consume_token(FUNCTION_CEILING);\n             break;\n         case FUNCTION_ROUND:\n             jj_consume_token(FUNCTION_ROUND);\n             break;\n+        case FUNCTION_KEY:\n+            jj_consume_token(FUNCTION_KEY);\n+            break;\n         default:\n             jj_la1[0] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     {\n         if (true)\n             return token.image;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 29.94,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public final String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        default:\n            jj_la1[0] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true)\n            return token.image;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 29,
      "functionName": "NCName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,113 +1,116 @@\n public final String NCName() throws ParseException {\n     switch(jj_nt.kind) {\n         case OR:\n         case AND:\n         case MOD:\n         case DIV:\n         case NCName:\n             NCName_Without_CoreFunctions();\n             break;\n         case NODE:\n             jj_consume_token(NODE);\n             break;\n         case TEXT:\n             jj_consume_token(TEXT);\n             break;\n         case COMMENT:\n             jj_consume_token(COMMENT);\n             break;\n         case PI:\n             jj_consume_token(PI);\n             break;\n         case FUNCTION_LAST:\n             jj_consume_token(FUNCTION_LAST);\n             break;\n         case FUNCTION_POSITION:\n             jj_consume_token(FUNCTION_POSITION);\n             break;\n         case FUNCTION_COUNT:\n             jj_consume_token(FUNCTION_COUNT);\n             break;\n         case FUNCTION_ID:\n             jj_consume_token(FUNCTION_ID);\n             break;\n         case FUNCTION_LOCAL_NAME:\n             jj_consume_token(FUNCTION_LOCAL_NAME);\n             break;\n         case FUNCTION_NAMESPACE_URI:\n             jj_consume_token(FUNCTION_NAMESPACE_URI);\n             break;\n         case FUNCTION_NAME:\n             jj_consume_token(FUNCTION_NAME);\n             break;\n         case FUNCTION_STRING:\n             jj_consume_token(FUNCTION_STRING);\n             break;\n         case FUNCTION_CONCAT:\n             jj_consume_token(FUNCTION_CONCAT);\n             break;\n         case FUNCTION_STARTS_WITH:\n             jj_consume_token(FUNCTION_STARTS_WITH);\n             break;\n         case FUNCTION_CONTAINS:\n             jj_consume_token(FUNCTION_CONTAINS);\n             break;\n         case FUNCTION_SUBSTRING_BEFORE:\n             jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n             break;\n         case FUNCTION_SUBSTRING_AFTER:\n             jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n             break;\n         case FUNCTION_SUBSTRING:\n             jj_consume_token(FUNCTION_SUBSTRING);\n             break;\n         case FUNCTION_STRING_LENGTH:\n             jj_consume_token(FUNCTION_STRING_LENGTH);\n             break;\n         case FUNCTION_NORMALIZE_SPACE:\n             jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n             break;\n         case FUNCTION_TRANSLATE:\n             jj_consume_token(FUNCTION_TRANSLATE);\n             break;\n         case FUNCTION_BOOLEAN:\n             jj_consume_token(FUNCTION_BOOLEAN);\n             break;\n         case FUNCTION_NOT:\n             jj_consume_token(FUNCTION_NOT);\n             break;\n         case FUNCTION_TRUE:\n             jj_consume_token(FUNCTION_TRUE);\n             break;\n         case FUNCTION_FALSE:\n             jj_consume_token(FUNCTION_FALSE);\n             break;\n+        case FUNCTION_NULL:\n+            jj_consume_token(FUNCTION_NULL);\n+            break;\n         case FUNCTION_LANG:\n             jj_consume_token(FUNCTION_LANG);\n             break;\n         case FUNCTION_NUMBER:\n             jj_consume_token(FUNCTION_NUMBER);\n             break;\n         case FUNCTION_SUM:\n             jj_consume_token(FUNCTION_SUM);\n             break;\n         case FUNCTION_FLOOR:\n             jj_consume_token(FUNCTION_FLOOR);\n             break;\n         case FUNCTION_CEILING:\n             jj_consume_token(FUNCTION_CEILING);\n             break;\n         case FUNCTION_ROUND:\n             jj_consume_token(FUNCTION_ROUND);\n             break;\n         default:\n             jj_la1[0] \u003d jj_gen;\n             jj_consume_token(-1);\n             throw new ParseException();\n     }\n     {\n         if (true)\n             return token.image;\n     }\n     throw new Error(\"Missing return statement in function\");\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,113 @@\n+public final String NCName() throws ParseException {\n+    switch(jj_nt.kind) {\n+        case OR:\n+        case AND:\n+        case MOD:\n+        case DIV:\n+        case NCName:\n+            NCName_Without_CoreFunctions();\n+            break;\n+        case NODE:\n+            jj_consume_token(NODE);\n+            break;\n+        case TEXT:\n+            jj_consume_token(TEXT);\n+            break;\n+        case COMMENT:\n+            jj_consume_token(COMMENT);\n+            break;\n+        case PI:\n+            jj_consume_token(PI);\n+            break;\n+        case FUNCTION_LAST:\n+            jj_consume_token(FUNCTION_LAST);\n+            break;\n+        case FUNCTION_POSITION:\n+            jj_consume_token(FUNCTION_POSITION);\n+            break;\n+        case FUNCTION_COUNT:\n+            jj_consume_token(FUNCTION_COUNT);\n+            break;\n+        case FUNCTION_ID:\n+            jj_consume_token(FUNCTION_ID);\n+            break;\n+        case FUNCTION_LOCAL_NAME:\n+            jj_consume_token(FUNCTION_LOCAL_NAME);\n+            break;\n+        case FUNCTION_NAMESPACE_URI:\n+            jj_consume_token(FUNCTION_NAMESPACE_URI);\n+            break;\n+        case FUNCTION_NAME:\n+            jj_consume_token(FUNCTION_NAME);\n+            break;\n+        case FUNCTION_STRING:\n+            jj_consume_token(FUNCTION_STRING);\n+            break;\n+        case FUNCTION_CONCAT:\n+            jj_consume_token(FUNCTION_CONCAT);\n+            break;\n+        case FUNCTION_STARTS_WITH:\n+            jj_consume_token(FUNCTION_STARTS_WITH);\n+            break;\n+        case FUNCTION_CONTAINS:\n+            jj_consume_token(FUNCTION_CONTAINS);\n+            break;\n+        case FUNCTION_SUBSTRING_BEFORE:\n+            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n+            break;\n+        case FUNCTION_SUBSTRING_AFTER:\n+            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n+            break;\n+        case FUNCTION_SUBSTRING:\n+            jj_consume_token(FUNCTION_SUBSTRING);\n+            break;\n+        case FUNCTION_STRING_LENGTH:\n+            jj_consume_token(FUNCTION_STRING_LENGTH);\n+            break;\n+        case FUNCTION_NORMALIZE_SPACE:\n+            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n+            break;\n+        case FUNCTION_TRANSLATE:\n+            jj_consume_token(FUNCTION_TRANSLATE);\n+            break;\n+        case FUNCTION_BOOLEAN:\n+            jj_consume_token(FUNCTION_BOOLEAN);\n+            break;\n+        case FUNCTION_NOT:\n+            jj_consume_token(FUNCTION_NOT);\n+            break;\n+        case FUNCTION_TRUE:\n+            jj_consume_token(FUNCTION_TRUE);\n+            break;\n+        case FUNCTION_FALSE:\n+            jj_consume_token(FUNCTION_FALSE);\n+            break;\n+        case FUNCTION_LANG:\n+            jj_consume_token(FUNCTION_LANG);\n+            break;\n+        case FUNCTION_NUMBER:\n+            jj_consume_token(FUNCTION_NUMBER);\n+            break;\n+        case FUNCTION_SUM:\n+            jj_consume_token(FUNCTION_SUM);\n+            break;\n+        case FUNCTION_FLOOR:\n+            jj_consume_token(FUNCTION_FLOOR);\n+            break;\n+        case FUNCTION_CEILING:\n+            jj_consume_token(FUNCTION_CEILING);\n+            break;\n+        case FUNCTION_ROUND:\n+            jj_consume_token(FUNCTION_ROUND);\n+            break;\n+        default:\n+            jj_la1[0] \u003d jj_gen;\n+            jj_consume_token(-1);\n+            throw new ParseException();\n+    }\n+    {\n+        if (true)\n+            return token.image;\n+    }\n+    throw new Error(\"Missing return statement in function\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        default:\n            jj_la1[0] \u003d jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true)\n            return token.image;\n    }\n    throw new Error(\"Missing return statement in function\");\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java",
      "functionStartLine": 29,
      "functionName": "NCName",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}