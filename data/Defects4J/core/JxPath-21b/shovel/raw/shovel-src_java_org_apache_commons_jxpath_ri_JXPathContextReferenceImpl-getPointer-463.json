{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathContextReferenceImpl.java",
  "functionName": "getPointer",
  "functionId": "getPointer___xpath-String__expr-Expression",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
  "functionAnnotation": "",
  "functionDoc": "Get a pointer to the specified path/expression.\n\n@param xpath String\n@param expr compiled Expression\n@return Pointer\n",
  "functionStartLine": 463,
  "functionEndLine": 476,
  "numCommitsSeen": 63,
  "timeTaken": 1992,
  "changeHistory": [
    "00d67383c2e842626710831782f7ec768d1ddc1c",
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
    "7c43512bdd5cb27df373eca47c11a28a8b161046",
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079",
    "7d07031398b3e9e0062d597d0ace291a58b59bfe",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "508b814837fdca522c17838e9a750812c5cdcc8c",
    "323e8b214459b3977973c01a048a979dc778f100",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962"
  ],
  "changeHistoryShort": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": "Ydocchange",
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": "Ybodychange",
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1": "Ybodychange",
    "7c43512bdd5cb27df373eca47c11a28a8b161046": "Ybodychange",
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079": "Ybodychange",
    "7d07031398b3e9e0062d597d0ace291a58b59bfe": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "508b814837fdca522c17838e9a750812c5cdcc8c": "Ybodychange",
    "323e8b214459b3977973c01a048a979dc778f100": "Ybodychange",
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": "Yintroduced"
  },
  "changeHistoryDetails": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618149 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 6:04 PM",
      "commitName": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "7/18/07, 1:22 PM",
      "commitNameOld": "626e5e5994a651085e9d2ccb1ca99c701f88bc68",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 200.24,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathNotFoundException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    }\n    return NodePointer.newNodePointer(null, result, getLocale());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 469,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "Get a pointer to the specified path/expression.\n\n@param xpath String\n@param expr compiled Expression\n@return Pointer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get a pointer to the specified path/expression.\n\n@param xpath String\n@param expr compiled Expression\n@return Pointer\n"
      }
    },
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "1/10/07, 2:44 PM",
      "commitNameOld": "0d7e7dc5d0d27a43b01770f8a7f7c860eacdbbd1",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 40.03,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathNotFoundException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    }\n    return NodePointer.newNodePointer(null, result, getLocale());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 409,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,13 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             throw new JXPathNotFoundException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n-    } else {\n-        return NodePointer.newNodePointer(null, result, getLocale());\n     }\n+    return NodePointer.newNodePointer(null, result, getLocale());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": {
      "type": "Ybodychange",
      "commitMessage": "Introduced specialized exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@329481 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/29/05, 2:07 PM",
      "commitName": "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/29/05, 12:02 PM",
      "commitNameOld": "39b19d33418245cf67dd1ce97d472b65b14e8d3d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathNotFoundException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 407,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n-            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n+            throw new JXPathNotFoundException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n     } else {\n         return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1": {
      "type": "Ybodychange",
      "commitMessage": "Rolled back the external namespace registration feature\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/19/04, 12:44 PM",
      "commitName": "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/17/04, 5:43 PM",
      "commitNameOld": "7c43512bdd5cb27df373eca47c11a28a8b161046",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 365,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             throw new JXPathException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n     } else {\n-        return NodePointer.newNodePointer(null, result, getLocale(), getNamespaceManager());\n+        return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7c43512bdd5cb27df373eca47c11a28a8b161046": {
      "type": "Ybodychange",
      "commitMessage": "Added support for external namespace registration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136885 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/04, 5:43 PM",
      "commitName": "7c43512bdd5cb27df373eca47c11a28a8b161046",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/9/03, 2:31 PM",
      "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
      "commitAuthorOld": "Robert Burrell Donkin",
      "daysBetweenCommits": 100.17,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale(), getNamespaceManager());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 367,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             throw new JXPathException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n     } else {\n-        return NodePointer.newNodePointer(null, result, getLocale());\n+        return NodePointer.newNodePointer(null, result, getLocale(), getNamespaceManager());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6f2f15a10b8d846e984f1604a4bfd85baeb8d079": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug 22988\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/03, 1:50 PM",
      "commitName": "6f2f15a10b8d846e984f1604a4bfd85baeb8d079",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/23/03, 6:52 PM",
      "commitNameOld": "885fb67a4ecf7c64696d679762b8a28489ead61f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 15.79,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 365,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n-        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n+        if (!isLenient() \u0026\u0026 !((NodePointer) result).isActual()) {\n             throw new JXPathException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n     } else {\n         return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7d07031398b3e9e0062d597d0ace291a58b59bfe": {
      "type": "Ybodychange",
      "commitMessage": "Added support for relative contexts\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/18/03, 4:59 PM",
      "commitName": "7d07031398b3e9e0062d597d0ace291a58b59bfe",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/18/03, 10:11 AM",
      "commitNameOld": "71886475c020639aa58be577ab5dc019333ae408",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 359,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n-    Object result \u003d expr.computeValue(getRootContext());\n+    Object result \u003d expr.computeValue(getEvalContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n             throw new JXPathException(\"No pointer for xpath: \" + xpath);\n         }\n         return (Pointer) result;\n     } else {\n         return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 312,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "508b814837fdca522c17838e9a750812c5cdcc8c": {
      "type": "Ybodychange",
      "commitMessage": "Should not return a NullPointer in the non-lenient mode\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136786 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:30 PM",
      "commitName": "508b814837fdca522c17838e9a750812c5cdcc8c",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 62.11,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n        }\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 267,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,14 @@\n public Pointer getPointer(String xpath, Expression expr) {\n     Object result \u003d expr.computeValue(getRootContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n+        if (!lenient \u0026\u0026 !((NodePointer) result).isActual()) {\n+            throw new JXPathException(\"No pointer for xpath: \" + xpath);\n+        }\n         return (Pointer) result;\n     } else {\n         return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "323e8b214459b3977973c01a048a979dc778f100": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/02, 5:40 PM",
      "commitName": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/27/02, 9:37 PM",
      "commitNameOld": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.84,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d expr.computeValue(getRootContext());\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 254,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n public Pointer getPointer(String xpath, Expression expr) {\n-    Object result \u003d getRootContext().eval(expr);\n+    Object result \u003d expr.computeValue(getRootContext());\n     if (result instanceof EvalContext) {\n         result \u003d ((EvalContext) result).getSingleNodePointer();\n     }\n     if (result instanceof Pointer) {\n         return (Pointer) result;\n     } else {\n         return NodePointer.newNodePointer(null, result, getLocale());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aa27fa0ec5fab4247136a2233b6c4b0be0087962": {
      "type": "Yintroduced",
      "commitMessage": "Added CompiledExpressions\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:37 PM",
      "commitName": "aa27fa0ec5fab4247136a2233b6c4b0be0087962",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,11 @@\n+public Pointer getPointer(String xpath, Expression expr) {\n+    Object result \u003d getRootContext().eval(expr);\n+    if (result instanceof EvalContext) {\n+        result \u003d ((EvalContext) result).getSingleNodePointer();\n+    }\n+    if (result instanceof Pointer) {\n+        return (Pointer) result;\n+    } else {\n+        return NodePointer.newNodePointer(null, result, getLocale());\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Pointer getPointer(String xpath, Expression expr) {\n    Object result \u003d getRootContext().eval(expr);\n    if (result instanceof EvalContext) {\n        result \u003d ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        return (Pointer) result;\n    } else {\n        return NodePointer.newNodePointer(null, result, getLocale());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/JXPathContextReferenceImpl.java",
      "functionStartLine": 256,
      "functionName": "getPointer",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}