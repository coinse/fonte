{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamicPropertyPointer.java",
  "functionName": "getPropertyNames",
  "functionId": "getPropertyNames",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java",
  "functionAnnotation": "",
  "functionDoc": "Names of all properties, sorted alphabetically.\n\n@return String[]\n",
  "functionStartLine": 77,
  "functionEndLine": 97,
  "numCommitsSeen": 31,
  "timeTaken": 933,
  "changeHistory": [
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "be0fb2155777f7d9333ed9547d4a86342800e966",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": "Ymultichange(Ydocchange,Yformatchange)",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "be0fb2155777f7d9333ed9547d4a86342800e966": "Yfilerename",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Yfilerename",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 12:19 PM",
      "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
      "commitAuthor": "Matthew Jason Benson",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/3/08, 12:19 PM",
          "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/16/07, 11:29 PM",
          "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 48.53,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java",
          "functionStartLine": 78,
          "functionName": "getPropertyNames",
          "functionAnnotation": "",
          "functionDoc": "Names of all properties, sorted alphabetically.\n\n@return String[]\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Names of all properties, sorted alphabetically\n",
            "newValue": "Names of all properties, sorted alphabetically.\n\n@return String[]\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/3/08, 12:19 PM",
          "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/16/07, 11:29 PM",
          "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 48.53,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java",
          "functionStartLine": 78,
          "functionName": "getPropertyNames",
          "functionAnnotation": "",
          "functionDoc": "Names of all properties, sorted alphabetically.\n\n@return String[]\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:01 PM",
      "commitNameOld": "be0fb2155777f7d9333ed9547d4a86342800e966",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java",
      "functionStartLine": 110,
      "functionName": "getPropertyNames",
      "functionAnnotation": "",
      "functionDoc": "Names of all properties, sorted alphabetically\n",
      "diff": "",
      "extendedDetails": {}
    },
    "be0fb2155777f7d9333ed9547d4a86342800e966": {
      "type": "Yfilerename",
      "commitMessage": "Encapsulated dynamic properties into a package of their own\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136828 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/27/02, 5:01 PM",
      "commitName": "be0fb2155777f7d9333ed9547d4a86342800e966",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:33 PM",
      "commitNameOld": "594ff3b180fd1ac7addb40e2c32a15e4567eed3c",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.98,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java",
      "functionStartLine": 108,
      "functionName": "getPropertyNames",
      "functionAnnotation": "",
      "functionDoc": "Names of all properties, sorted alphabetically\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/jxpath/ri/model/beans/DynamicPropertyPointer.java",
        "newPath": "src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java"
      }
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Yfilerename",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/11/02, 7:28 PM",
      "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 9.81,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/DynamicPropertyPointer.java",
      "functionStartLine": 106,
      "functionName": "getPropertyNames",
      "functionAnnotation": "",
      "functionDoc": "Names of all properties, sorted alphabetically\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/DynamicPropertyPointer.java",
        "newPath": "src/java/org/apache/commons/jxpath/ri/model/beans/DynamicPropertyPointer.java"
      }
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,21 @@\n+public String[] getPropertyNames() {\n+    if (names \u003d\u003d null) {\n+        String[] allNames \u003d handler.getPropertyNames(getBean());\n+        names \u003d new String[allNames.length];\n+        for (int i \u003d 0; i \u003c names.length; i++) {\n+            names[i] \u003d allNames[i];\n+        }\n+        Arrays.sort(names);\n+        if (requiredPropertyName !\u003d null) {\n+            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n+            if (inx \u003c 0) {\n+                allNames \u003d names;\n+                names \u003d new String[allNames.length + 1];\n+                names[0] \u003d requiredPropertyName;\n+                System.arraycopy(allNames, 0, names, 1, allNames.length);\n+                Arrays.sort(names);\n+            }\n+        }\n+    }\n+    return names;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String[] getPropertyNames() {\n    if (names \u003d\u003d null) {\n        String[] allNames \u003d handler.getPropertyNames(getBean());\n        names \u003d new String[allNames.length];\n        for (int i \u003d 0; i \u003c names.length; i++) {\n            names[i] \u003d allNames[i];\n        }\n        Arrays.sort(names);\n        if (requiredPropertyName !\u003d null) {\n            int inx \u003d Arrays.binarySearch(names, requiredPropertyName);\n            if (inx \u003c 0) {\n                allNames \u003d names;\n                names \u003d new String[allNames.length + 1];\n                names[0] \u003d requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/DynamicPropertyPointer.java",
      "functionStartLine": 99,
      "functionName": "getPropertyNames",
      "functionAnnotation": "",
      "functionDoc": "Names of all properties, sorted alphabetically\n"
    }
  }
}