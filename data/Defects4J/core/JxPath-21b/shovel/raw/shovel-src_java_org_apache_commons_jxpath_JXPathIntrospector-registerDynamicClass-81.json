{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathIntrospector.java",
  "functionName": "registerDynamicClass",
  "functionId": "registerDynamicClass___beanClass-Class__dynamicPropertyHandlerClass-Class",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
  "functionAnnotation": "",
  "functionDoc": "Automatically creates and registers a {@link JXPathBeanInfo} object\nfor the specified class. That object returns true to\n{@link JXPathBeanInfo#isDynamic()}.\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n",
  "functionStartLine": 81,
  "functionEndLine": 91,
  "numCommitsSeen": 17,
  "timeTaken": 531,
  "changeHistory": [
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f",
    "00d67383c2e842626710831782f7ec768d1ddc1c",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f": "Ydocchange",
    "00d67383c2e842626710831782f7ec768d1ddc1c": "Ydocchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f": {
      "type": "Ydocchange",
      "commitMessage": "Improved the Javadoc:\n- added external links to JDOM, BeanUtils, and JEE\n- added @links in the class and method documentations to improve the navigation\n- removed the @inheritDoc with no additional comments\nAdded line feeds at the end of the source files\nRemoved the old constructors and the suite() methods from the JUnit tests\nUpdated the relocated artifacts in the POM\nDowngraded the dependency on JUnit to 3.8.1\nAdded PMD to the reports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@652845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/2/08, 10:46 AM",
      "commitName": "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "2/3/08, 6:04 PM",
      "commitNameOld": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 88.65,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n    JXPathBasicBeanInfo bi \u003d new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n    if (beanClass.isInterface()) {\n        byInterface.put(beanClass, bi);\n    } else {\n        byClass.put(beanClass, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 79,
      "functionName": "registerDynamicClass",
      "functionAnnotation": "",
      "functionDoc": "Automatically creates and registers a {@link JXPathBeanInfo} object\nfor the specified class. That object returns true to\n{@link JXPathBeanInfo#isDynamic()}.\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n",
        "newValue": "Automatically creates and registers a {@link JXPathBeanInfo} object\nfor the specified class. That object returns true to\n{@link JXPathBeanInfo#isDynamic()}.\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n"
      }
    },
    "00d67383c2e842626710831782f7ec768d1ddc1c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618149 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 6:04 PM",
      "commitName": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/16/07, 11:29 PM",
      "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 48.77,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n    JXPathBasicBeanInfo bi \u003d new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n    if (beanClass.isInterface()) {\n        byInterface.put(beanClass, bi);\n    } else {\n        byClass.put(beanClass, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 77,
      "functionName": "registerDynamicClass",
      "functionAnnotation": "",
      "functionDoc": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n",
        "newValue": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n\n@param beanClass to register\n@param dynamicPropertyHandlerClass to handle beanClass\n"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/9/02, 6:27 PM",
      "commitNameOld": "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 154.18,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n    JXPathBasicBeanInfo bi \u003d new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n    if (beanClass.isInterface()) {\n        byInterface.put(beanClass, bi);\n    } else {\n        byClass.put(beanClass, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 118,
      "functionName": "registerDynamicClass",
      "functionAnnotation": "",
      "functionDoc": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n",
      "diff": "",
      "extendedDetails": {}
    },
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5": {
      "type": "Ybodychange",
      "commitMessage": "Interface-based introspection\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136784 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:27 PM",
      "commitName": "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 8:31 PM",
      "commitNameOld": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 107.91,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n    JXPathBasicBeanInfo bi \u003d new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n    if (beanClass.isInterface()) {\n        byInterface.put(beanClass, bi);\n    } else {\n        byClass.put(beanClass, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 118,
      "functionName": "registerDynamicClass",
      "functionAnnotation": "",
      "functionDoc": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n",
      "diff": "@@ -1,3 +1,8 @@\n public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n-    byClass.put(beanClass, new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass));\n+    JXPathBasicBeanInfo bi \u003d new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n+    if (beanClass.isInterface()) {\n+        byInterface.put(beanClass, bi);\n+    } else {\n+        byClass.put(beanClass, bi);\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,3 @@\n+public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n+    byClass.put(beanClass, new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static void registerDynamicClass(Class beanClass, Class dynamicPropertyHandlerClass) {\n    byClass.put(beanClass, new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass));\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 117,
      "functionName": "registerDynamicClass",
      "functionAnnotation": "",
      "functionDoc": "Automatically creates and registers a JXPathBeanInfo object\nfor the specified class. That object returns true to isDynamic().\n"
    }
  }
}