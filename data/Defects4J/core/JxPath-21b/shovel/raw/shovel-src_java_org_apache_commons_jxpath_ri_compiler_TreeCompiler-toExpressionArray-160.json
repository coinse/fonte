{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TreeCompiler.java",
  "functionName": "toExpressionArray",
  "functionId": "toExpressionArray___array-Object[]",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java",
  "functionAnnotation": "",
  "functionDoc": "Get an Object[] as an Expression[].\n\n@param array Object[]\n@return Expression[]\n",
  "functionStartLine": 160,
  "functionEndLine": 169,
  "numCommitsSeen": 16,
  "timeTaken": 453,
  "changeHistory": [
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": "Ymultichange(Ydocchange,Yformatchange)",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 12:19 PM",
      "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
      "commitAuthor": "Matthew Jason Benson",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/3/08, 12:19 PM",
          "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/16/07, 11:29 PM",
          "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 48.53,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private Expression[] toExpressionArray(Object[] array) {\n    Expression[] expArray \u003d null;\n    if (array !\u003d null) {\n        expArray \u003d new Expression[array.length];\n        for (int i \u003d 0; i \u003c expArray.length; i++) {\n            expArray[i] \u003d (Expression) array[i];\n        }\n    }\n    return expArray;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java",
          "functionStartLine": 241,
          "functionName": "toExpressionArray",
          "functionAnnotation": "",
          "functionDoc": "Get an Object[] as an Expression[].\n\n@param array Object[]\n@return Expression[]\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Get an Object[] as an Expression[].\n\n@param array Object[]\n@return Expression[]\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618074 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/3/08, 12:19 PM",
          "commitName": "cdfbbfb11a27aadeb7d3902a236fe0f261d87cd1",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "12/16/07, 11:29 PM",
          "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 48.53,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private Expression[] toExpressionArray(Object[] array) {\n    Expression[] expArray \u003d null;\n    if (array !\u003d null) {\n        expArray \u003d new Expression[array.length];\n        for (int i \u003d 0; i \u003c expArray.length; i++) {\n            expArray[i] \u003d (Expression) array[i];\n        }\n    }\n    return expArray;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java",
          "functionStartLine": 241,
          "functionName": "toExpressionArray",
          "functionAnnotation": "",
          "functionDoc": "Get an Object[] as an Expression[].\n\n@param array Object[]\n@return Expression[]\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "5/7/02, 5:40 PM",
      "commitNameOld": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 248.21,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "private Expression[] toExpressionArray(Object[] array) {\n    Expression[] expArray \u003d null;\n    if (array !\u003d null) {\n        expArray \u003d new Expression[array.length];\n        for (int i \u003d 0; i \u003c expArray.length; i++) {\n            expArray[i] \u003d (Expression) array[i];\n        }\n    }\n    return expArray;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java",
      "functionStartLine": 238,
      "functionName": "toExpressionArray",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,10 @@\n+private Expression[] toExpressionArray(Object[] array) {\n+    Expression[] expArray \u003d null;\n+    if (array !\u003d null) {\n+        expArray \u003d new Expression[array.length];\n+        for (int i \u003d 0; i \u003c expArray.length; i++) {\n+            expArray[i] \u003d (Expression) array[i];\n+        }\n+    }\n+    return expArray;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Expression[] toExpressionArray(Object[] array) {\n    Expression[] expArray \u003d null;\n    if (array !\u003d null) {\n        expArray \u003d new Expression[array.length];\n        for (int i \u003d 0; i \u003c expArray.length; i++) {\n            expArray[i] \u003d (Expression) array[i];\n        }\n    }\n    return expArray;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java",
      "functionStartLine": 190,
      "functionName": "toExpressionArray",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}