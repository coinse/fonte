{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DocumentContainer.java",
  "functionName": "getParser",
  "functionId": "getParser___model-String",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
  "functionAnnotation": "",
  "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
  "functionStartLine": 174,
  "functionEndLine": 192,
  "numCommitsSeen": 18,
  "timeTaken": 462,
  "changeHistory": [
    "b67345afa4817cc8bc7f14137ed1ef90ab299062",
    "a15b576512928204436c9db7a9beb781d7deeb3e",
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
    "2962ae198015d4a26500a858b34d3d780738d4a8",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "745fb47b2135800a4d5fdfdf180c03215669487c"
  ],
  "changeHistoryShort": {
    "b67345afa4817cc8bc7f14137ed1ef90ab299062": "Ybodychange",
    "a15b576512928204436c9db7a9beb781d7deeb3e": "Ybodychange",
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": "Ymultichange(Ymodifierchange,Ydocchange,Yformatchange)",
    "2962ae198015d4a26500a858b34d3d780738d4a8": "Yformatchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "745fb47b2135800a4d5fdfdf180c03215669487c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b67345afa4817cc8bc7f14137ed1ef90ab299062": {
      "type": "Ybodychange",
      "commitMessage": "[JXPATH-127] Change dynamic classloading to consult context ClassLoader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@916559 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/25/10, 7:55 PM",
      "commitName": "b67345afa4817cc8bc7f14137ed1ef90ab299062",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "6/16/08, 2:59 PM",
      "commitNameOld": "65811463048ef988c857aa4c87a4db54a4a826a4",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 619.25,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "private static XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d ClassLoaderUtil.getClass(className, true);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className, ex);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 174,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
      "diff": "@@ -1,17 +1,17 @@\n private static XMLParser getParser(String model) {\n     XMLParser parser \u003d (XMLParser) parsers.get(model);\n     if (parser \u003d\u003d null) {\n         String className \u003d (String) parserClasses.get(model);\n         if (className \u003d\u003d null) {\n             throw new JXPathException(\"Unsupported XML model: \" + model);\n         }\n         try {\n-            Class clazz \u003d Class.forName(className);\n+            Class clazz \u003d ClassLoaderUtil.getClass(className, true);\n             parser \u003d (XMLParser) clazz.newInstance();\n         } catch (Exception ex) {\n             throw new JXPathException(\"Cannot allocate XMLParser: \" + className, ex);\n         }\n         parsers.put(model, parser);\n     }\n     return parser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a15b576512928204436c9db7a9beb781d7deeb3e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a missing exception chaining in DocumentContainer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@652907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/2/08, 1:58 PM",
      "commitName": "a15b576512928204436c9db7a9beb781d7deeb3e",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/2/08, 10:46 AM",
      "commitNameOld": "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private static XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className, ex);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 170,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
      "diff": "@@ -1,17 +1,17 @@\n private static XMLParser getParser(String model) {\n     XMLParser parser \u003d (XMLParser) parsers.get(model);\n     if (parser \u003d\u003d null) {\n         String className \u003d (String) parserClasses.get(model);\n         if (className \u003d\u003d null) {\n             throw new JXPathException(\"Unsupported XML model: \" + model);\n         }\n         try {\n             Class clazz \u003d Class.forName(className);\n             parser \u003d (XMLParser) clazz.newInstance();\n         } catch (Exception ex) {\n-            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n+            throw new JXPathException(\"Cannot allocate XMLParser: \" + className, ex);\n         }\n         parsers.put(model, parser);\n     }\n     return parser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": {
      "type": "Ymultichange(Ymodifierchange,Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/07, 11:29 PM",
      "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthor": "Matthew Jason Benson",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/16/07, 11:29 PM",
          "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "5/21/07, 6:51 PM",
          "commitNameOld": "3b0fea68434107890dbe896324b8e862c3c4a9ee",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 209.23,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "actualSource": "private static XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
          "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
          "functionStartLine": 170,
          "functionName": "getParser",
          "functionAnnotation": "",
          "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
          "diff": "@@ -1,17 +1,17 @@\n-private static final XMLParser getParser(String model) {\n+private static XMLParser getParser(String model) {\n     XMLParser parser \u003d (XMLParser) parsers.get(model);\n     if (parser \u003d\u003d null) {\n         String className \u003d (String) parserClasses.get(model);\n         if (className \u003d\u003d null) {\n             throw new JXPathException(\"Unsupported XML model: \" + model);\n         }\n         try {\n             Class clazz \u003d Class.forName(className);\n             parser \u003d (XMLParser) clazz.newInstance();\n         } catch (Exception ex) {\n             throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n         }\n         parsers.put(model, parser);\n     }\n     return parser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private, static, final]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/16/07, 11:29 PM",
          "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "5/21/07, 6:51 PM",
          "commitNameOld": "3b0fea68434107890dbe896324b8e862c3c4a9ee",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 209.23,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "actualSource": "private static XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
          "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
          "functionStartLine": 170,
          "functionName": "getParser",
          "functionAnnotation": "",
          "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
          "diff": "@@ -1,17 +1,17 @@\n-private static final XMLParser getParser(String model) {\n+private static XMLParser getParser(String model) {\n     XMLParser parser \u003d (XMLParser) parsers.get(model);\n     if (parser \u003d\u003d null) {\n         String className \u003d (String) parserClasses.get(model);\n         if (className \u003d\u003d null) {\n             throw new JXPathException(\"Unsupported XML model: \" + model);\n         }\n         try {\n             Class clazz \u003d Class.forName(className);\n             parser \u003d (XMLParser) clazz.newInstance();\n         } catch (Exception ex) {\n             throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n         }\n         parsers.put(model, parser);\n     }\n     return parser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Maps a model type to a parser.\n",
            "newValue": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/16/07, 11:29 PM",
          "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "5/21/07, 6:51 PM",
          "commitNameOld": "3b0fea68434107890dbe896324b8e862c3c4a9ee",
          "commitAuthorOld": "Niall Pemberton",
          "daysBetweenCommits": 209.23,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "actualSource": "private static XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
          "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
          "functionStartLine": 170,
          "functionName": "getParser",
          "functionAnnotation": "",
          "functionDoc": "Maps a model type to a parser.\n\n@param model input model type\n@return XMLParser\n",
          "diff": "@@ -1,17 +1,17 @@\n-private static final XMLParser getParser(String model) {\n+private static XMLParser getParser(String model) {\n     XMLParser parser \u003d (XMLParser) parsers.get(model);\n     if (parser \u003d\u003d null) {\n         String className \u003d (String) parserClasses.get(model);\n         if (className \u003d\u003d null) {\n             throw new JXPathException(\"Unsupported XML model: \" + model);\n         }\n         try {\n             Class clazz \u003d Class.forName(className);\n             parser \u003d (XMLParser) clazz.newInstance();\n         } catch (Exception ex) {\n             throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n         }\n         parsers.put(model, parser);\n     }\n     return parser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2962ae198015d4a26500a858b34d3d780738d4a8": {
      "type": "Yformatchange",
      "commitMessage": "Added support for parser features\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/04, 5:42 PM",
      "commitName": "2962ae198015d4a26500a858b34d3d780738d4a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/9/03, 2:31 PM",
      "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
      "commitAuthorOld": "Robert Burrell Donkin",
      "daysBetweenCommits": 100.17,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 201,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/26/02, 3:52 PM",
      "commitNameOld": "7ab48afabbb6ae99af9fee262a3af2def485bd7e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 137.28,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 167,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "745fb47b2135800a4d5fdfdf180c03215669487c": {
      "type": "Yintroduced",
      "commitMessage": "Refactored XML parsing by container to allow for alternative parsers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:28 PM",
      "commitName": "745fb47b2135800a4d5fdfdf180c03215669487c",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,17 @@\n+private static final XMLParser getParser(String model) {\n+    XMLParser parser \u003d (XMLParser) parsers.get(model);\n+    if (parser \u003d\u003d null) {\n+        String className \u003d (String) parserClasses.get(model);\n+        if (className \u003d\u003d null) {\n+            throw new JXPathException(\"Unsupported XML model: \" + model);\n+        }\n+        try {\n+            Class clazz \u003d Class.forName(className);\n+            parser \u003d (XMLParser) clazz.newInstance();\n+        } catch (Exception ex) {\n+            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n+        }\n+        parsers.put(model, parser);\n+    }\n+    return parser;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 166,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n"
    }
  }
}