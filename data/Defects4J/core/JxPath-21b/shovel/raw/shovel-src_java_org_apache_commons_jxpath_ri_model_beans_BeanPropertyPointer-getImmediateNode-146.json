{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanPropertyPointer.java",
  "functionName": "getImmediateNode",
  "functionId": "getImmediateNode",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
  "functionAnnotation": "",
  "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n\n@return Object\n",
  "functionStartLine": 146,
  "functionEndLine": 162,
  "numCommitsSeen": 50,
  "timeTaken": 889,
  "changeHistory": [
    "790cc3b3b124ce58f14fb1036386280c52189d6c",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
    "e98d5f163f23e9310df7a282c56d2a50edf6512f",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
    "76ebe95238b7f12374429bc81e7aa3e6abe9a8a4",
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
    "f3b163c5107229c2a512b5146b70483cc8c97987",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "790cc3b3b124ce58f14fb1036386280c52189d6c": "Ydocchange",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": "Ybodychange",
    "e98d5f163f23e9310df7a282c56d2a50edf6512f": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": "Yrename",
    "76ebe95238b7f12374429bc81e7aa3e6abe9a8a4": "Ybodychange",
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e": "Yrename",
    "f3b163c5107229c2a512b5146b70483cc8c97987": "Ybodychange",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Yrename",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ybodychange)",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "207c6dd98407506ff367d072be25b56f37989215": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "790cc3b3b124ce58f14fb1036386280c52189d6c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604304 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/14/07, 1:31 PM",
      "commitName": "790cc3b3b124ce58f14fb1036386280c52189d6c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "1/10/07, 2:48 PM",
      "commitNameOld": "d3a0834f291d72323d211ad19ad4a3aba8dc32aa",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 337.95,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d ValueUtils.getValue(getBaseValue());\n        } else {\n            PropertyDescriptor pd \u003d getPropertyDescriptor();\n            if (pd \u003d\u003d null) {\n                value \u003d null;\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 148,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n\n@return Object\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
        "newValue": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n\n@return Object\n"
      }
    },
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": {
      "type": "Ybodychange",
      "commitMessage": "In some situations JXPath would not open containers during path traversal. \nMade the container opening consistent throughout RI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/4/04, 3:06 PM",
      "commitName": "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/29/04, 6:17 AM",
      "commitNameOld": "4fc265a938e1e9d13c407d4668ec8c864e85d799",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d ValueUtils.getValue(getBaseValue());\n        } else {\n            PropertyDescriptor pd \u003d getPropertyDescriptor();\n            if (pd \u003d\u003d null) {\n                value \u003d null;\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 132,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,15 +1,15 @@\n public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d getBaseValue();\n+            value \u003d ValueUtils.getValue(getBaseValue());\n         } else {\n             PropertyDescriptor pd \u003d getPropertyDescriptor();\n             if (pd \u003d\u003d null) {\n                 value \u003d null;\n             } else {\n                 value \u003d ValueUtils.getValue(getBean(), pd, index);\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e98d5f163f23e9310df7a282c56d2a50edf6512f": {
      "type": "Ybodychange",
      "commitMessage": "Added support for indexed properties that don\u0027t have\na method that returns the whole collection.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/03, 6:39 PM",
      "commitName": "e98d5f163f23e9310df7a282c56d2a50edf6512f",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "3/10/03, 4:59 PM",
      "commitNameOld": "bdf423f27a76d2006ffe1058d6530eebf619c877",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 98.03,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            PropertyDescriptor pd \u003d getPropertyDescriptor();\n            if (pd \u003d\u003d null) {\n                value \u003d null;\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 178,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,13 +1,15 @@\n public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n-        Object baseValue \u003d getBaseValue();\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d baseValue;\n-        } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n-            value \u003d ValueUtils.getValue(baseValue, index);\n+            value \u003d getBaseValue();\n         } else {\n-            value \u003d null;\n+            PropertyDescriptor pd \u003d getPropertyDescriptor();\n+            if (pd \u003d\u003d null) {\n+                value \u003d null;\n+            } else {\n+                value \u003d ValueUtils.getValue(getBean(), pd, index);\n+            }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        Object baseValue \u003d getBaseValue();\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d baseValue;\n        } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n            value \u003d ValueUtils.getValue(baseValue, index);\n        } else {\n            value \u003d null;\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 175,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": {
      "type": "Yrename",
      "commitMessage": "Organized imports, formatted code\nFixed problems with getValue() and getNode()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/25/02, 5:20 PM",
      "commitName": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/19/02, 8:47 PM",
      "commitNameOld": "074cc8809cf0884f38bb22622d81209778a02b32",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 36.9,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        Object baseValue \u003d getBaseValue();\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d baseValue;\n        } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n            value \u003d ValueUtils.getValue(baseValue, index);\n        } else {\n            value \u003d null;\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 175,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,13 +1,13 @@\n-public Object getNode() {\n+public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         Object baseValue \u003d getBaseValue();\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n             value \u003d baseValue;\n         } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n             value \u003d ValueUtils.getValue(baseValue, index);\n         } else {\n             value \u003d null;\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getNode",
        "newValue": "getImmediateNode"
      }
    },
    "76ebe95238b7f12374429bc81e7aa3e6abe9a8a4": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bugs in iteratePointers() when iterating over a scalar value\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136809 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 2:02 PM",
      "commitName": "76ebe95238b7f12374429bc81e7aa3e6abe9a8a4",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.2,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        Object baseValue \u003d getBaseValue();\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d baseValue;\n        } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n            value \u003d ValueUtils.getValue(baseValue, index);\n        } else {\n            value \u003d null;\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 183,
      "functionName": "getNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,17 +1,13 @@\n public Object getNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n-        PropertyDescriptor pd \u003d getPropertyDescriptor();\n-        if (pd \u003d\u003d null) {\n-            value \u003d null;\n+        Object baseValue \u003d getBaseValue();\n+        if (index \u003d\u003d WHOLE_COLLECTION) {\n+            value \u003d baseValue;\n+        } else if (value !\u003d null \u0026\u0026 index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n+            value \u003d ValueUtils.getValue(baseValue, index);\n         } else {\n-            if (index \u003d\u003d WHOLE_COLLECTION) {\n-                value \u003d ValueUtils.getValue(getBean(), pd);\n-            } else if (index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n-                value \u003d ValueUtils.getValue(getBean(), pd, index);\n-            } else {\n-                value \u003d null;\n-            }\n+            value \u003d null;\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e": {
      "type": "Yrename",
      "commitMessage": "Made getNode() a public method on Pointer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136799 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/10/02, 9:13 AM",
      "commitName": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/9/02, 6:44 PM",
      "commitNameOld": "f3b163c5107229c2a512b5146b70483cc8c97987",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.6,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d ValueUtils.getValue(getBean(), pd);\n            } else if (index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 179,
      "functionName": "getNode",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,17 +1,17 @@\n-public Object getNodeValue() {\n+public Object getNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         PropertyDescriptor pd \u003d getPropertyDescriptor();\n         if (pd \u003d\u003d null) {\n             value \u003d null;\n         } else {\n             if (index \u003d\u003d WHOLE_COLLECTION) {\n                 value \u003d ValueUtils.getValue(getBean(), pd);\n             } else if (index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n                 value \u003d ValueUtils.getValue(getBean(), pd, index);\n             } else {\n                 value \u003d null;\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getNodeValue",
        "newValue": "getNode"
      }
    },
    "f3b163c5107229c2a512b5146b70483cc8c97987": {
      "type": "Ybodychange",
      "commitMessage": "Fixed ArrayIndexOutOfBounds during createPath\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136793 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:44 PM",
      "commitName": "f3b163c5107229c2a512b5146b70483cc8c97987",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "5/8/02, 4:05 PM",
      "commitNameOld": "706bd3170bc91f523b04cfcb120576701b5c7028",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 93.11,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNodeValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d ValueUtils.getValue(getBean(), pd);\n            } else if (index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            } else {\n                value \u003d null;\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 179,
      "functionName": "getNodeValue",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,15 +1,17 @@\n public Object getNodeValue() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         PropertyDescriptor pd \u003d getPropertyDescriptor();\n         if (pd \u003d\u003d null) {\n             value \u003d null;\n         } else {\n             if (index \u003d\u003d WHOLE_COLLECTION) {\n                 value \u003d ValueUtils.getValue(getBean(), pd);\n-            } else {\n+            } else if (index \u003e\u003d 0 \u0026\u0026 index \u003c getLength()) {\n                 value \u003d ValueUtils.getValue(getBean(), pd, index);\n+            } else {\n+                value \u003d null;\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Yrename",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.87,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNodeValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d ValueUtils.getValue(getBean(), pd);\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
      "functionStartLine": 178,
      "functionName": "getNodeValue",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,15 +1,15 @@\n-public Object getValue() {\n+public Object getNodeValue() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         PropertyDescriptor pd \u003d getPropertyDescriptor();\n         if (pd \u003d\u003d null) {\n             value \u003d null;\n         } else {\n             if (index \u003d\u003d WHOLE_COLLECTION) {\n                 value \u003d ValueUtils.getValue(getBean(), pd);\n             } else {\n                 value \u003d ValueUtils.getValue(getBean(), pd, index);\n             }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getValue",
        "newValue": "getNodeValue"
      }
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d ValueUtils.getValue(getBean(), pd);\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
          "functionStartLine": 177,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
          "diff": "@@ -1,14 +1,15 @@\n public Object getValue() {\n-    Object value;\n-    PropertyDescriptor pd \u003d getPropertyDescriptor();\n-    if (pd \u003d\u003d null) {\n-        value \u003d null;\n-    } else {\n-        if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), pd);\n+    if (value \u003d\u003d UNINITIALIZED) {\n+        PropertyDescriptor pd \u003d getPropertyDescriptor();\n+        if (pd \u003d\u003d null) {\n+            value \u003d null;\n         } else {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), pd, index);\n+            if (index \u003d\u003d WHOLE_COLLECTION) {\n+                value \u003d ValueUtils.getValue(getBean(), pd);\n+            } else {\n+                value \u003d ValueUtils.getValue(getBean(), pd, index);\n+            }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/BeanPropertyPointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d ValueUtils.getValue(getBean(), pd);\n            } else {\n                value \u003d ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java",
          "functionStartLine": 177,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
          "diff": "@@ -1,14 +1,15 @@\n public Object getValue() {\n-    Object value;\n-    PropertyDescriptor pd \u003d getPropertyDescriptor();\n-    if (pd \u003d\u003d null) {\n-        value \u003d null;\n-    } else {\n-        if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), pd);\n+    if (value \u003d\u003d UNINITIALIZED) {\n+        PropertyDescriptor pd \u003d getPropertyDescriptor();\n+        if (pd \u003d\u003d null) {\n+            value \u003d null;\n         } else {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), pd, index);\n+            if (index \u003d\u003d WHOLE_COLLECTION) {\n+                value \u003d ValueUtils.getValue(getBean(), pd);\n+            } else {\n+                value \u003d ValueUtils.getValue(getBean(), pd, index);\n+            }\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 200.18,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue() {\n    Object value;\n    PropertyDescriptor pd \u003d getPropertyDescriptor();\n    if (pd \u003d\u003d null) {\n        value \u003d null;\n    } else {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d PropertyAccessHelper.getValue(getBean(), pd);\n        } else {\n            value \u003d PropertyAccessHelper.getValue(getBean(), pd, index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/BeanPropertyPointer.java",
      "functionStartLine": 165,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,14 +1,14 @@\n public Object getValue() {\n     Object value;\n     PropertyDescriptor pd \u003d getPropertyDescriptor();\n     if (pd \u003d\u003d null) {\n         value \u003d null;\n     } else {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n+            value \u003d PropertyAccessHelper.getValue(getBean(), pd);\n         } else {\n-            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n+            value \u003d PropertyAccessHelper.getValue(getBean(), pd, index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ybodychange",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 11.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getValue() {\n    Object value;\n    PropertyDescriptor pd \u003d getPropertyDescriptor();\n    if (pd \u003d\u003d null) {\n        value \u003d null;\n    } else {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n        } else {\n            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/BeanPropertyPointer.java",
      "functionStartLine": 163,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n",
      "diff": "@@ -1,15 +1,14 @@\n public Object getValue() {\n-    if (value \u003d\u003d UNKNOWN) {\n-        PropertyDescriptor pd \u003d getPropertyDescriptor();\n-        if (pd \u003d\u003d null) {\n-            value \u003d null;\n+    Object value;\n+    PropertyDescriptor pd \u003d getPropertyDescriptor();\n+    if (pd \u003d\u003d null) {\n+        value \u003d null;\n+    } else {\n+        if (index \u003d\u003d WHOLE_COLLECTION) {\n+            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n         } else {\n-            if (index \u003d\u003d WHOLE_COLLECTION) {\n-                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n-            } else {\n-                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n-            }\n+            value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,15 @@\n+public Object getValue() {\n+    if (value \u003d\u003d UNKNOWN) {\n+        PropertyDescriptor pd \u003d getPropertyDescriptor();\n+        if (pd \u003d\u003d null) {\n+            value \u003d null;\n+        } else {\n+            if (index \u003d\u003d WHOLE_COLLECTION) {\n+                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n+            } else {\n+                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n+            }\n+        }\n+    }\n+    return value;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNKNOWN) {\n        PropertyDescriptor pd \u003d getPropertyDescriptor();\n        if (pd \u003d\u003d null) {\n            value \u003d null;\n        } else {\n            if (index \u003d\u003d WHOLE_COLLECTION) {\n                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor());\n            } else {\n                value \u003d PropertyAccessHelper.getValue(getBean(), getPropertyDescriptor(), index);\n            }\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/BeanPropertyPointer.java",
      "functionStartLine": 164,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": "If index \u003d\u003d WHOLE_COLLECTION, the value of the property, otherwise\nthe value of the index\u0027th element of the collection represented by the\nproperty. If the property is not a collection, index should be zero\nand the value will be the property itself.\n"
    }
  }
}