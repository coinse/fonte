{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePointer.java",
  "functionName": "newNodePointer",
  "functionId": "newNodePointer___name-QName__bean-Object__locale-Locale",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
  "functionAnnotation": "",
  "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@param name QName\n@param bean Object\n@param locale Locale\n@return NodePointer\n",
  "functionStartLine": 73,
  "functionEndLine": 94,
  "numCommitsSeen": 53,
  "timeTaken": 1593,
  "changeHistory": [
    "f53ab17b8d57ea6de8008952ceeebef312e4d34d",
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
    "7c43512bdd5cb27df373eca47c11a28a8b161046",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "3ec25ca8751eba756316184f4f8d3be1361a0027",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "f53ab17b8d57ea6de8008952ceeebef312e4d34d": "Ydocchange",
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": "Yformatchange",
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1": "Ymultichange(Ybodychange,Ydocchange)",
    "7c43512bdd5cb27df373eca47c11a28a8b161046": "Ymultichange(Ybodychange,Ydocchange)",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Yformatchange",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": "Yformatchange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ydocchange,Yrename)",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "3ec25ca8751eba756316184f4f8d3be1361a0027": "Ymultichange(Yparameterchange,Ybodychange)",
    "207c6dd98407506ff367d072be25b56f37989215": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f53ab17b8d57ea6de8008952ceeebef312e4d34d": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618011 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 8:08 AM",
      "commitName": "f53ab17b8d57ea6de8008952ceeebef312e4d34d",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "2/2/08, 1:31 PM",
      "commitNameOld": "2aa453ad768d42b6aecfd27fdd1ecfbc17d4192b",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    NodePointer pointer \u003d null;\n    if (bean \u003d\u003d null) {\n        pointer \u003d new NullPointer(name, locale);\n        return pointer;\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 67,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@param name QName\n@param bean Object\n@param locale Locale\n@return NodePointer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
        "newValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@param name QName\n@param bean Object\n@param locale Locale\n@return NodePointer\n"
      }
    },
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": {
      "type": "Yformatchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/07, 11:29 PM",
      "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/5/07, 2:48 PM",
      "commitNameOld": "d8ce20b6feb4a75ba74a9ded1bfbbac83399884f",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 11.36,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    NodePointer pointer \u003d null;\n    if (bean \u003d\u003d null) {\n        pointer \u003d new NullPointer(name, locale);\n        return pointer;\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 62,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "5d2e0209dcf8bbf4da152b042320ca07d57722f1": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Rolled back the external namespace registration feature\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/19/04, 12:44 PM",
      "commitName": "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Rolled back the external namespace registration feature\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136886 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/19/04, 12:44 PM",
          "commitName": "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "1/17/04, 5:43 PM",
          "commitNameOld": "7c43512bdd5cb27df373eca47c11a28a8b161046",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 1.79,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    NodePointer pointer \u003d null;\n    if (bean \u003d\u003d null) {\n        pointer \u003d new NullPointer(name, locale);\n        return pointer;\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 98,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,3 +1,15 @@\n public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n-    return newNodePointer(name, bean, locale, null);\n+    NodePointer pointer \u003d null;\n+    if (bean \u003d\u003d null) {\n+        pointer \u003d new NullPointer(name, locale);\n+        return pointer;\n+    }\n+    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n+    for (int i \u003d 0; i \u003c factories.length; i++) {\n+        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n+        if (pointer !\u003d null) {\n+            return pointer;\n+        }\n+    }\n+    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Rolled back the external namespace registration feature\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136886 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/19/04, 12:44 PM",
          "commitName": "5d2e0209dcf8bbf4da152b042320ca07d57722f1",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "1/17/04, 5:43 PM",
          "commitNameOld": "7c43512bdd5cb27df373eca47c11a28a8b161046",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 1.79,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    NodePointer pointer \u003d null;\n    if (bean \u003d\u003d null) {\n        pointer \u003d new NullPointer(name, locale);\n        return pointer;\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 98,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,3 +1,15 @@\n public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n-    return newNodePointer(name, bean, locale, null);\n+    NodePointer pointer \u003d null;\n+    if (bean \u003d\u003d null) {\n+        pointer \u003d new NullPointer(name, locale);\n+        return pointer;\n+    }\n+    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n+    for (int i \u003d 0; i \u003c factories.length; i++) {\n+        pointer \u003d factories[i].createNodePointer(name, bean, locale);\n+        if (pointer !\u003d null) {\n+            return pointer;\n+        }\n+    }\n+    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@deprecated Use instead\n  {@link #newNodePointer(QName, Object, Locale, NamespaceManager) \n         newNodePointer(QName, Object, Locale, NamespaceManager)}\n",
            "newValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n"
          }
        }
      ]
    },
    "7c43512bdd5cb27df373eca47c11a28a8b161046": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Added support for external namespace registration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136885 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/04, 5:43 PM",
      "commitName": "7c43512bdd5cb27df373eca47c11a28a8b161046",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Added support for external namespace registration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136885 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/04, 5:43 PM",
          "commitName": "7c43512bdd5cb27df373eca47c11a28a8b161046",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "10/9/03, 2:31 PM",
          "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
          "commitAuthorOld": "Robert Burrell Donkin",
          "daysBetweenCommits": 100.17,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    return newNodePointer(name, bean, locale, null);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 103,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@deprecated Use instead\n  {@link #newNodePointer(QName, Object, Locale, NamespaceManager) \n         newNodePointer(QName, Object, Locale, NamespaceManager)}\n",
          "diff": "@@ -1,13 +1,3 @@\n public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n-    if (bean \u003d\u003d null) {\n-        return new NullPointer(name, locale);\n-    }\n-    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n-    for (int i \u003d 0; i \u003c factories.length; i++) {\n-        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n-        if (pointer !\u003d null) {\n-            return pointer;\n-        }\n-    }\n-    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n+    return newNodePointer(name, bean, locale, null);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Added support for external namespace registration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136885 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/04, 5:43 PM",
          "commitName": "7c43512bdd5cb27df373eca47c11a28a8b161046",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "10/9/03, 2:31 PM",
          "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
          "commitAuthorOld": "Robert Burrell Donkin",
          "daysBetweenCommits": 100.17,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    return newNodePointer(name, bean, locale, null);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 103,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@deprecated Use instead\n  {@link #newNodePointer(QName, Object, Locale, NamespaceManager) \n         newNodePointer(QName, Object, Locale, NamespaceManager)}\n",
          "diff": "@@ -1,13 +1,3 @@\n public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n-    if (bean \u003d\u003d null) {\n-        return new NullPointer(name, locale);\n-    }\n-    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n-    for (int i \u003d 0; i \u003c factories.length; i++) {\n-        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n-        if (pointer !\u003d null) {\n-            return pointer;\n-        }\n-    }\n-    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n+    return newNodePointer(name, bean, locale, null);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
            "newValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n\n@deprecated Use instead\n  {@link #newNodePointer(QName, Object, Locale, NamespaceManager) \n         newNodePointer(QName, Object, Locale, NamespaceManager)}\n"
          }
        }
      ]
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 97,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Yformatchange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.45,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 100,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 99,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "@@ -1,13 +1,13 @@\n public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name, locale);\n     }\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n-    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n+    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": {
      "type": "Yformatchange",
      "commitMessage": "Improved formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:31 PM",
      "commitName": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/21/02, 2:52 PM",
      "commitNameOld": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 98,
      "functionName": "newNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ydocchange,Yrename)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 92,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n+public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name, locale);\n     }\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 92,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n+public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name, locale);\n     }\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 92,
          "functionName": "newNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an entirely new NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n+public static NodePointer newNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name, locale);\n     }\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "createNodePointer",
            "newValue": "newNodePointer"
          }
        }
      ]
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/25/01, 6:21 PM",
      "commitNameOld": "3ec25ca8751eba756316184f4f8d3be1361a0027",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 196.1,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 86,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,13 @@\n public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name, locale);\n     }\n-    if (bean instanceof Node) {\n-        return new DOMNodePointer((Node) bean, locale);\n+    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n+    for (int i \u003d 0; i \u003c factories.length; i++) {\n+        NodePointer pointer \u003d factories[i].createNodePointer(name, bean, locale);\n+        if (pointer !\u003d null) {\n+            return pointer;\n+        }\n     }\n-    if (bean instanceof Container) {\n-        return new ContainerPointer((Container) bean, locale);\n-    }\n-    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n-    if (bi.isDynamic()) {\n-        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n-        return new DynamicPointer(name, bean, handler, locale);\n-    } else {\n-        return new BeanPointer(name, bean, bi, locale);\n-    }\n+    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3ec25ca8751eba756316184f4f8d3be1361a0027": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Implemented lang() and @xml:lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136707 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/25/01, 6:21 PM",
      "commitName": "3ec25ca8751eba756316184f4f8d3be1361a0027",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Implemented lang() and @xml:lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136707 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/25/01, 6:21 PM",
          "commitName": "3ec25ca8751eba756316184f4f8d3be1361a0027",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "9/21/01, 4:22 PM",
          "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 4.08,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    if (bean instanceof Node) {\n        return new DOMNodePointer((Node) bean, locale);\n    }\n    if (bean instanceof Container) {\n        return new ContainerPointer((Container) bean, locale);\n    }\n    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(name, bean, handler, locale);\n    } else {\n        return new BeanPointer(name, bean, bi, locale);\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
          "functionStartLine": 85,
          "functionName": "createNodePointer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,18 @@\n-public static NodePointer createNodePointer(QName name, Object bean) {\n+public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n-        return new NullPointer(name);\n+        return new NullPointer(name, locale);\n     }\n     if (bean instanceof Node) {\n-        return new DOMNodePointer((Node) bean);\n+        return new DOMNodePointer((Node) bean, locale);\n     }\n     if (bean instanceof Container) {\n-        return new ContainerPointer((Container) bean);\n+        return new ContainerPointer((Container) bean, locale);\n     }\n     JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n     if (bi.isDynamic()) {\n         DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n-        return new DynamicPointer(name, bean, handler);\n+        return new DynamicPointer(name, bean, handler, locale);\n     } else {\n-        return new BeanPointer(name, bean, bi);\n+        return new BeanPointer(name, bean, bi, locale);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-QName, bean-Object]",
            "newValue": "[name-QName, bean-Object, locale-Locale]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implemented lang() and @xml:lang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136707 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/25/01, 6:21 PM",
          "commitName": "3ec25ca8751eba756316184f4f8d3be1361a0027",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "9/21/01, 4:22 PM",
          "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 4.08,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name, locale);\n    }\n    if (bean instanceof Node) {\n        return new DOMNodePointer((Node) bean, locale);\n    }\n    if (bean instanceof Container) {\n        return new ContainerPointer((Container) bean, locale);\n    }\n    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(name, bean, handler, locale);\n    } else {\n        return new BeanPointer(name, bean, bi, locale);\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
          "functionStartLine": 85,
          "functionName": "createNodePointer",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,18 @@\n-public static NodePointer createNodePointer(QName name, Object bean) {\n+public static NodePointer createNodePointer(QName name, Object bean, Locale locale) {\n     if (bean \u003d\u003d null) {\n-        return new NullPointer(name);\n+        return new NullPointer(name, locale);\n     }\n     if (bean instanceof Node) {\n-        return new DOMNodePointer((Node) bean);\n+        return new DOMNodePointer((Node) bean, locale);\n     }\n     if (bean instanceof Container) {\n-        return new ContainerPointer((Container) bean);\n+        return new ContainerPointer((Container) bean, locale);\n     }\n     JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n     if (bi.isDynamic()) {\n         DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n-        return new DynamicPointer(name, bean, handler);\n+        return new DynamicPointer(name, bean, handler, locale);\n     } else {\n-        return new BeanPointer(name, bean, bi);\n+        return new BeanPointer(name, bean, bi, locale);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ybodychange",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 11.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer createNodePointer(QName name, Object bean) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name);\n    }\n    if (bean instanceof Node) {\n        return new DOMNodePointer((Node) bean);\n    }\n    if (bean instanceof Container) {\n        return new ContainerPointer((Container) bean);\n    }\n    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(name, bean, handler);\n    } else {\n        return new BeanPointer(name, bean, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 84,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,18 @@\n public static NodePointer createNodePointer(QName name, Object bean) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(name);\n     }\n+    if (bean instanceof Node) {\n+        return new DOMNodePointer((Node) bean);\n+    }\n+    if (bean instanceof Container) {\n+        return new ContainerPointer((Container) bean);\n+    }\n     JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n     if (bi.isDynamic()) {\n         DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n         return new DynamicPointer(name, bean, handler);\n     } else {\n         return new BeanPointer(name, bean, bi);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,12 @@\n+public static NodePointer createNodePointer(QName name, Object bean) {\n+    if (bean \u003d\u003d null) {\n+        return new NullPointer(name);\n+    }\n+    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n+    if (bi.isDynamic()) {\n+        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n+        return new DynamicPointer(name, bean, handler);\n+    } else {\n+        return new BeanPointer(name, bean, bi);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static NodePointer createNodePointer(QName name, Object bean) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(name);\n    }\n    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(name, bean, handler);\n    } else {\n        return new BeanPointer(name, bean, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 78,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}