{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Path.java",
  "functionName": "areBasicPredicates",
  "functionId": "areBasicPredicates___predicates-Expression[]",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/compiler/Path.java",
  "functionAnnotation": "",
  "functionDoc": "Learn whether the elements of the specified array are \"basic\" predicates.\n\n@param predicates the Expression[] to check\n@return boolean\n",
  "functionStartLine": 133,
  "functionEndLine": 156,
  "numCommitsSeen": 24,
  "timeTaken": 1445,
  "changeHistory": [
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "323e8b214459b3977973c01a048a979dc778f100",
    "34b7a47ae949c763178a457582a5df2cb564f53d"
  ],
  "changeHistoryShort": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": "Ydocchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "323e8b214459b3977973c01a048a979dc778f100": "Ybodychange",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/07, 11:29 PM",
      "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "5/21/07, 1:38 PM",
      "commitNameOld": "d36e894cb61100284b81027d6765e66181f982b5",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 209.45,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean areBasicPredicates(Expression[] predicates) {\n    if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n        boolean firstIndex \u003d true;\n        for (int i \u003d 0; i \u003c predicates.length; i++) {\n            if (predicates[i] instanceof NameAttributeTest) {\n                if (((NameAttributeTest) predicates[i]).getNameTestExpression().isContextDependent()) {\n                    return false;\n                }\n            } else if (predicates[i].isContextDependent()) {\n                return false;\n            } else {\n                if (!firstIndex) {\n                    return false;\n                }\n                firstIndex \u003d false;\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Path.java",
      "functionStartLine": 136,
      "functionName": "areBasicPredicates",
      "functionAnnotation": "",
      "functionDoc": "Learn whether the elements of the specified array are \"basic\" predicates.\n\n@param predicates the Expression[] to check\n@return boolean\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Learn whether the elements of the specified array are \"basic\" predicates.\n\n@param predicates the Expression[] to check\n@return boolean\n"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/12/02, 7:59 PM",
      "commitNameOld": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 90.11,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean areBasicPredicates(Expression[] predicates) {\n    if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n        boolean firstIndex \u003d true;\n        for (int i \u003d 0; i \u003c predicates.length; i++) {\n            if (predicates[i] instanceof NameAttributeTest) {\n                if (((NameAttributeTest) predicates[i]).getNameTestExpression().isContextDependent()) {\n                    return false;\n                }\n            } else if (predicates[i].isContextDependent()) {\n                return false;\n            } else {\n                if (!firstIndex) {\n                    return false;\n                }\n                firstIndex \u003d false;\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Path.java",
      "functionStartLine": 151,
      "functionName": "areBasicPredicates",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "323e8b214459b3977973c01a048a979dc778f100": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/02, 5:40 PM",
      "commitName": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 13.86,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean areBasicPredicates(Expression[] predicates) {\n    if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n        boolean firstIndex \u003d true;\n        for (int i \u003d 0; i \u003c predicates.length; i++) {\n            if (predicates[i] instanceof NameAttributeTest) {\n                if (((NameAttributeTest) predicates[i]).getNameTestExpression().isContextDependent()) {\n                    return false;\n                }\n            } else if (predicates[i].isContextDependent()) {\n                return false;\n            } else {\n                if (!firstIndex) {\n                    return false;\n                }\n                firstIndex \u003d false;\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Path.java",
      "functionStartLine": 127,
      "functionName": "areBasicPredicates",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,20 @@\n protected boolean areBasicPredicates(Expression[] predicates) {\n     if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n         boolean firstIndex \u003d true;\n         for (int i \u003d 0; i \u003c predicates.length; i++) {\n-            Expression dyn \u003d (Expression) predicates[i].getEvaluationHint(CoreOperation.DYNAMIC_PROPERTY_ACCESS_HINT);\n-            if (dyn !\u003d null) {\n-                if (dyn.isContextDependent()) {\n+            if (predicates[i] instanceof NameAttributeTest) {\n+                if (((NameAttributeTest) predicates[i]).getNameTestExpression().isContextDependent()) {\n                     return false;\n                 }\n             } else if (predicates[i].isContextDependent()) {\n                 return false;\n             } else {\n                 if (!firstIndex) {\n                     return false;\n                 }\n                 firstIndex \u003d false;\n             }\n         }\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Yintroduced",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,21 @@\n+protected boolean areBasicPredicates(Expression[] predicates) {\n+    if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n+        boolean firstIndex \u003d true;\n+        for (int i \u003d 0; i \u003c predicates.length; i++) {\n+            Expression dyn \u003d (Expression) predicates[i].getEvaluationHint(CoreOperation.DYNAMIC_PROPERTY_ACCESS_HINT);\n+            if (dyn !\u003d null) {\n+                if (dyn.isContextDependent()) {\n+                    return false;\n+                }\n+            } else if (predicates[i].isContextDependent()) {\n+                return false;\n+            } else {\n+                if (!firstIndex) {\n+                    return false;\n+                }\n+                firstIndex \u003d false;\n+            }\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected boolean areBasicPredicates(Expression[] predicates) {\n    if (predicates !\u003d null \u0026\u0026 predicates.length !\u003d 0) {\n        boolean firstIndex \u003d true;\n        for (int i \u003d 0; i \u003c predicates.length; i++) {\n            Expression dyn \u003d (Expression) predicates[i].getEvaluationHint(CoreOperation.DYNAMIC_PROPERTY_ACCESS_HINT);\n            if (dyn !\u003d null) {\n                if (dyn.isContextDependent()) {\n                    return false;\n                }\n            } else if (predicates[i].isContextDependent()) {\n                return false;\n            } else {\n                if (!firstIndex) {\n                    return false;\n                }\n                firstIndex \u003d false;\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Path.java",
      "functionStartLine": 149,
      "functionName": "areBasicPredicates",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}