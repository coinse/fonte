{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PropertyOwnerPointer.java",
  "functionName": "childIterator",
  "functionId": "childIterator___test-NodeTest__reverse-boolean__startWith-NodePointer",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 43,
  "functionEndLine": 59,
  "numCommitsSeen": 34,
  "timeTaken": 1323,
  "changeHistory": [
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f",
    "00d67383c2e842626710831782f7ec768d1ddc1c",
    "35095d43427355136d31c78acf2e54f635401efc",
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "d52ff3460273690514d70e716be1ff3201dca8c8",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "207c6dd98407506ff367d072be25b56f37989215"
  ],
  "changeHistoryShort": {
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f": "Ydocchange",
    "00d67383c2e842626710831782f7ec768d1ddc1c": "Ydocchange",
    "35095d43427355136d31c78acf2e54f635401efc": "Ybodychange",
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "d52ff3460273690514d70e716be1ff3201dca8c8": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": "Ybodychange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ymultichange(Yparameterchange,Ybodychange)",
    "207c6dd98407506ff367d072be25b56f37989215": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f": {
      "type": "Ydocchange",
      "commitMessage": "Improved the Javadoc:\n- added external links to JDOM, BeanUtils, and JEE\n- added @links in the class and method documentations to improve the navigation\n- removed the @inheritDoc with no additional comments\nAdded line feeds at the end of the source files\nRemoved the old constructors and the suite() methods from the JUnit tests\nUpdated the relocated artifacts in the POM\nDowngraded the dependency on JUnit to 3.8.1\nAdded PMD to the reports\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@652845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/2/08, 10:46 AM",
      "commitName": "cd0b3e7260bd6dbc87f0ae86308cf35d79e14d8f",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "2/3/08, 6:04 PM",
      "commitNameOld": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 88.65,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    }\n    if (test instanceof NodeNameTest) {\n        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n        QName testName \u003d nodeNameTest.getNodeName();\n        if (isValidProperty(testName)) {\n            return createNodeIterator(nodeNameTest.isWildcard() ? null : testName.toString(), reverse, startWith);\n        }\n        return null;\n    }\n    return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 43,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldValue": "@inheritDoc}\n",
        "newValue": ""
      }
    },
    "00d67383c2e842626710831782f7ec768d1ddc1c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618149 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 6:04 PM",
      "commitName": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/16/07, 11:29 PM",
      "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 48.77,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    }\n    if (test instanceof NodeNameTest) {\n        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n        QName testName \u003d nodeNameTest.getNodeName();\n        if (isValidProperty(testName)) {\n            return createNodeIterator(nodeNameTest.isWildcard() ? null : testName.toString(), reverse, startWith);\n        }\n        return null;\n    }\n    return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 46,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@inheritDoc}\n"
      }
    },
    "35095d43427355136d31c78acf2e54f635401efc": {
      "type": "Ybodychange",
      "commitMessage": "[JXPATH-104] Add helper method to determine whether a given qname denotes a valid property(ies).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@601522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/5/07, 1:02 PM",
      "commitName": "35095d43427355136d31c78acf2e54f635401efc",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/5/07, 12:54 PM",
      "commitNameOld": "0b3d4696ad7e3b66cb103490e90afa03176ea730",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    }\n    if (test instanceof NodeNameTest) {\n        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n        QName testName \u003d nodeNameTest.getNodeName();\n        if (isValidProperty(testName)) {\n            return createNodeIterator(nodeNameTest.isWildcard() ? null : testName.toString(), reverse, startWith);\n        }\n        return null;\n    }\n    return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 40,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,14 @@\n public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n     if (test \u003d\u003d null) {\n         return createNodeIterator(null, reverse, startWith);\n     }\n     if (test instanceof NodeNameTest) {\n         NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n         QName testName \u003d nodeNameTest.getNodeName();\n-        if (!isDefaultNamespace(testName.getPrefix())) {\n-            return null;\n+        if (isValidProperty(testName)) {\n+            return createNodeIterator(nodeNameTest.isWildcard() ? null : testName.toString(), reverse, startWith);\n         }\n-        String property \u003d nodeNameTest.isWildcard() ? null : testName.getName();\n-        return createNodeIterator(property, reverse, startWith);\n+        return null;\n     }\n     return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    }\n    if (test instanceof NodeNameTest) {\n        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n        QName testName \u003d nodeNameTest.getNodeName();\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        }\n        String property \u003d nodeNameTest.isWildcard() ? null : testName.getName();\n        return createNodeIterator(property, reverse, startWith);\n    }\n    return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 40,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,15 @@\n public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n     if (test \u003d\u003d null) {\n         return createNodeIterator(null, reverse, startWith);\n-    } else if (test instanceof NodeNameTest) {\n+    }\n+    if (test instanceof NodeNameTest) {\n         NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n         QName testName \u003d nodeNameTest.getNodeName();\n-        String property;\n         if (!isDefaultNamespace(testName.getPrefix())) {\n             return null;\n-        } else if (nodeNameTest.isWildcard()) {\n-            property \u003d null;\n-        } else {\n-            property \u003d testName.getName();\n         }\n+        String property \u003d nodeNameTest.isWildcard() ? null : testName.getName();\n         return createNodeIterator(property, reverse, startWith);\n-    } else if (test instanceof NodeTypeTest) {\n-        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n-            return createNodeIterator(null, reverse, startWith);\n-        }\n     }\n-    return null;\n+    return test instanceof NodeTypeTest \u0026\u0026 ((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d52ff3460273690514d70e716be1ff3201dca8c8": {
      "type": "Ybodychange",
      "commitMessage": "Introduced NodeNameTest.isWildcard()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136901 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/04, 9:41 PM",
      "commitName": "d52ff3460273690514d70e716be1ff3201dca8c8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/29/04, 6:17 AM",
      "commitNameOld": "4fc265a938e1e9d13c407d4668ec8c864e85d799",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 24.64,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n        QName testName \u003d nodeNameTest.getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (nodeNameTest.isWildcard()) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return createNodeIterator(property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return createNodeIterator(null, reverse, startWith);\n        }\n    }\n    return null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 39,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,22 @@\n public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n     if (test \u003d\u003d null) {\n         return createNodeIterator(null, reverse, startWith);\n     } else if (test instanceof NodeNameTest) {\n-        QName testName \u003d ((NodeNameTest) test).getNodeName();\n+        NodeNameTest nodeNameTest \u003d (NodeNameTest) test;\n+        QName testName \u003d nodeNameTest.getNodeName();\n         String property;\n         if (!isDefaultNamespace(testName.getPrefix())) {\n             return null;\n-        } else if (testName.getName().equals(\"*\")) {\n+        } else if (nodeNameTest.isWildcard()) {\n             property \u003d null;\n         } else {\n             property \u003d testName.getName();\n         }\n         return createNodeIterator(property, reverse, startWith);\n     } else if (test instanceof NodeTypeTest) {\n         if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n             return createNodeIterator(null, reverse, startWith);\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/9/03, 6:11 PM",
      "commitNameOld": "1da214ffc187e6afda771b77baa71df054d3ee4d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        QName testName \u003d ((NodeNameTest) test).getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (testName.getName().equals(\"*\")) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return createNodeIterator(property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return createNodeIterator(null, reverse, startWith);\n        }\n    }\n    return null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 85,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2": {
      "type": "Ybodychange",
      "commitMessage": "Renamed isNode to !isContainer\nCleaned up asPath\nIgnore exceptions during a property iteration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/27/02, 5:02 PM",
      "commitName": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:20 PM",
      "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.99,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return createNodeIterator(null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        QName testName \u003d ((NodeNameTest) test).getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (testName.getName().equals(\"*\")) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return createNodeIterator(property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return createNodeIterator(null, reverse, startWith);\n        }\n    }\n    return null;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 85,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,21 @@\n public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n     if (test \u003d\u003d null) {\n-        return new PropertyIterator(this, null, reverse, startWith);\n+        return createNodeIterator(null, reverse, startWith);\n     } else if (test instanceof NodeNameTest) {\n         QName testName \u003d ((NodeNameTest) test).getNodeName();\n         String property;\n         if (!isDefaultNamespace(testName.getPrefix())) {\n             return null;\n         } else if (testName.getName().equals(\"*\")) {\n             property \u003d null;\n         } else {\n             property \u003d testName.getName();\n         }\n-        return new PropertyIterator(this, property, reverse, startWith);\n+        return createNodeIterator(property, reverse, startWith);\n     } else if (test instanceof NodeTypeTest) {\n         if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n-            return new PropertyIterator(this, null, reverse, startWith);\n+            return createNodeIterator(null, reverse, startWith);\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return new PropertyIterator(this, null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        QName testName \u003d ((NodeNameTest) test).getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (testName.getName().equals(\"*\")) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return new PropertyIterator(this, property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return new PropertyIterator(this, null, reverse, startWith);\n        }\n    }\n    return null;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
          "functionStartLine": 85,
          "functionName": "childIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,21 @@\n-public NodeIterator childIterator(NodeTest test, boolean reverse) {\n-    return nodeIterator(test, reverse, true);\n+public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n+    if (test \u003d\u003d null) {\n+        return new PropertyIterator(this, null, reverse, startWith);\n+    } else if (test instanceof NodeNameTest) {\n+        QName testName \u003d ((NodeNameTest) test).getNodeName();\n+        String property;\n+        if (!isDefaultNamespace(testName.getPrefix())) {\n+            return null;\n+        } else if (testName.getName().equals(\"*\")) {\n+            property \u003d null;\n+        } else {\n+            property \u003d testName.getName();\n+        }\n+        return new PropertyIterator(this, property, reverse, startWith);\n+    } else if (test instanceof NodeTypeTest) {\n+        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n+            return new PropertyIterator(this, null, reverse, startWith);\n+        }\n+    }\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return new PropertyIterator(this, null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        QName testName \u003d ((NodeNameTest) test).getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (testName.getName().equals(\"*\")) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return new PropertyIterator(this, property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return new PropertyIterator(this, null, reverse, startWith);\n        }\n    }\n    return null;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
          "functionStartLine": 85,
          "functionName": "childIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,21 @@\n-public NodeIterator childIterator(NodeTest test, boolean reverse) {\n-    return nodeIterator(test, reverse, true);\n+public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n+    if (test \u003d\u003d null) {\n+        return new PropertyIterator(this, null, reverse, startWith);\n+    } else if (test instanceof NodeNameTest) {\n+        QName testName \u003d ((NodeNameTest) test).getNodeName();\n+        String property;\n+        if (!isDefaultNamespace(testName.getPrefix())) {\n+            return null;\n+        } else if (testName.getName().equals(\"*\")) {\n+            property \u003d null;\n+        } else {\n+            property \u003d testName.getName();\n+        }\n+        return new PropertyIterator(this, property, reverse, startWith);\n+    } else if (test instanceof NodeTypeTest) {\n+        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n+            return new PropertyIterator(this, null, reverse, startWith);\n+        }\n+    }\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n    if (test \u003d\u003d null) {\n        return new PropertyIterator(this, null, reverse, startWith);\n    } else if (test instanceof NodeNameTest) {\n        QName testName \u003d ((NodeNameTest) test).getNodeName();\n        String property;\n        if (!isDefaultNamespace(testName.getPrefix())) {\n            return null;\n        } else if (testName.getName().equals(\"*\")) {\n            property \u003d null;\n        } else {\n            property \u003d testName.getName();\n        }\n        return new PropertyIterator(this, property, reverse, startWith);\n    } else if (test instanceof NodeTypeTest) {\n        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n            return new PropertyIterator(this, null, reverse, startWith);\n        }\n    }\n    return null;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
          "functionStartLine": 85,
          "functionName": "childIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,21 @@\n-public NodeIterator childIterator(NodeTest test, boolean reverse) {\n-    return nodeIterator(test, reverse, true);\n+public NodeIterator childIterator(NodeTest test, boolean reverse, NodePointer startWith) {\n+    if (test \u003d\u003d null) {\n+        return new PropertyIterator(this, null, reverse, startWith);\n+    } else if (test instanceof NodeNameTest) {\n+        QName testName \u003d ((NodeNameTest) test).getNodeName();\n+        String property;\n+        if (!isDefaultNamespace(testName.getPrefix())) {\n+            return null;\n+        } else if (testName.getName().equals(\"*\")) {\n+            property \u003d null;\n+        } else {\n+            property \u003d testName.getName();\n+        }\n+        return new PropertyIterator(this, property, reverse, startWith);\n+    } else if (test instanceof NodeTypeTest) {\n+        if (((NodeTypeTest) test).getNodeType() \u003d\u003d Compiler.NODE_TYPE_NODE) {\n+            return new PropertyIterator(this, null, reverse, startWith);\n+        }\n+    }\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[test-NodeTest, reverse-boolean]",
            "newValue": "[test-NodeTest, reverse-boolean, startWith-NodePointer]"
          }
        }
      ]
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/21/01, 4:22 PM",
          "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "9/2/01, 6:22 PM",
          "commitNameOld": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 18.92,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse) {\n    return nodeIterator(test, reverse, true);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
          "functionStartLine": 82,
          "functionName": "childIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,3 @@\n-public NodeIterator childIterator(QName name, boolean reverse) {\n-    String property;\n-    if (name \u003d\u003d null || name.getName().equals(\"*\")) {\n-        property \u003d null;\n-    } else {\n-        property \u003d name.getName();\n-    }\n-    return new PropertyIterator(this, true, property, reverse);\n+public NodeIterator childIterator(NodeTest test, boolean reverse) {\n+    return nodeIterator(test, reverse, true);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-QName, reverse-boolean]",
            "newValue": "[test-NodeTest, reverse-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/21/01, 4:22 PM",
          "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "9/2/01, 6:22 PM",
          "commitNameOld": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 18.92,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public NodeIterator childIterator(NodeTest test, boolean reverse) {\n    return nodeIterator(test, reverse, true);\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
          "functionStartLine": 82,
          "functionName": "childIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,3 @@\n-public NodeIterator childIterator(QName name, boolean reverse) {\n-    String property;\n-    if (name \u003d\u003d null || name.getName().equals(\"*\")) {\n-        property \u003d null;\n-    } else {\n-        property \u003d name.getName();\n-    }\n-    return new PropertyIterator(this, true, property, reverse);\n+public NodeIterator childIterator(NodeTest test, boolean reverse) {\n+    return nodeIterator(test, reverse, true);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Yintroduced",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,9 @@\n+public NodeIterator childIterator(QName name, boolean reverse) {\n+    String property;\n+    if (name \u003d\u003d null || name.getName().equals(\"*\")) {\n+        property \u003d null;\n+    } else {\n+        property \u003d name.getName();\n+    }\n+    return new PropertyIterator(this, true, property, reverse);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public NodeIterator childIterator(QName name, boolean reverse) {\n    String property;\n    if (name \u003d\u003d null || name.getName().equals(\"*\")) {\n        property \u003d null;\n    } else {\n        property \u003d name.getName();\n    }\n    return new PropertyIterator(this, true, property, reverse);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
      "functionStartLine": 82,
      "functionName": "childIterator",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}