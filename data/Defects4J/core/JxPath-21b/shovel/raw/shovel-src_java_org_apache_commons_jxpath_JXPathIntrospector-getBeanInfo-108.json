{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathIntrospector.java",
  "functionName": "getBeanInfo",
  "functionId": "getBeanInfo___beanClass-Class",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
  "functionAnnotation": "",
  "functionDoc": "Creates and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n\n@param beanClass whose info to get\n@return JXPathBeanInfo\n",
  "functionStartLine": 108,
  "functionEndLine": 121,
  "numCommitsSeen": 17,
  "timeTaken": 404,
  "changeHistory": [
    "00d67383c2e842626710831782f7ec768d1ddc1c",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": "Ydocchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Ymultichange(Ydocchange,Yformatchange)",
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5": "Ybodychange",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": "Yformatchange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "00d67383c2e842626710831782f7ec768d1ddc1c": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@618149 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/3/08, 6:04 PM",
      "commitName": "00d67383c2e842626710831782f7ec768d1ddc1c",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/16/07, 11:29 PM",
      "commitNameOld": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 48.77,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findDynamicBeanInfo(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d findInformant(beanClass);\n            if (beanInfo \u003d\u003d null) {\n                beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n            }\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 104,
      "functionName": "getBeanInfo",
      "functionAnnotation": "",
      "functionDoc": "Creates and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n\n@param beanClass whose info to get\n@return JXPathBeanInfo\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Creates  and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n",
        "newValue": "Creates and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n\n@param beanClass whose info to get\n@return JXPathBeanInfo\n"
      }
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/9/02, 6:27 PM",
          "commitNameOld": "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 154.18,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findDynamicBeanInfo(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d findInformant(beanClass);\n            if (beanInfo \u003d\u003d null) {\n                beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n            }\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
          "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
          "functionStartLine": 145,
          "functionName": "getBeanInfo",
          "functionAnnotation": "",
          "functionDoc": "Creates  and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Creates and registers a JXPathBeanInfo object for the supplied class.\nIf the class has already been registered, returns the registered JXPathBeanInfo\nobject.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo JXPathBasicBeanInfo} is\n    allocated.\n\u003c/ul\u003e\n",
            "newValue": "Creates  and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/9/02, 6:27 PM",
          "commitNameOld": "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 154.18,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findDynamicBeanInfo(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d findInformant(beanClass);\n            if (beanInfo \u003d\u003d null) {\n                beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n            }\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
          "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
          "functionStartLine": 145,
          "functionName": "getBeanInfo",
          "functionAnnotation": "",
          "functionDoc": "Creates  and registers a JXPathBeanInfo object for the supplied class. If\nthe class has already been registered, returns the registered\nJXPathBeanInfo object.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo\n    JXPathBasicBeanInfo}  is allocated.\n\u003c/ul\u003e\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "9d8c0fe0c12845c111d3cb1b0b11126839e764f5": {
      "type": "Ybodychange",
      "commitMessage": "Interface-based introspection\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136784 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:27 PM",
      "commitName": "9d8c0fe0c12845c111d3cb1b0b11126839e764f5",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 8:31 PM",
      "commitNameOld": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 107.91,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findDynamicBeanInfo(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d findInformant(beanClass);\n            if (beanInfo \u003d\u003d null) {\n                beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n            }\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 143,
      "functionName": "getBeanInfo",
      "functionAnnotation": "",
      "functionDoc": "Creates and registers a JXPathBeanInfo object for the supplied class.\nIf the class has already been registered, returns the registered JXPathBeanInfo\nobject.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo JXPathBasicBeanInfo} is\n    allocated.\n\u003c/ul\u003e\n",
      "diff": "@@ -1,11 +1,14 @@\n public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n     JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n     if (beanInfo \u003d\u003d null) {\n-        beanInfo \u003d findInformant(beanClass);\n+        beanInfo \u003d findDynamicBeanInfo(beanClass);\n         if (beanInfo \u003d\u003d null) {\n-            beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n+            beanInfo \u003d findInformant(beanClass);\n+            if (beanInfo \u003d\u003d null) {\n+                beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n+            }\n         }\n         byClass.put(beanClass, beanInfo);\n     }\n     return beanInfo;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": {
      "type": "Yformatchange",
      "commitMessage": "Improved formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:31 PM",
      "commitName": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/11/01, 4:34 PM",
      "commitNameOld": "b59050d6f0fe675ddc8555b99fc83915b4a20079",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 224.16,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findInformant(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 136,
      "functionName": "getBeanInfo",
      "functionAnnotation": "",
      "functionDoc": "Creates and registers a JXPathBeanInfo object for the supplied class.\nIf the class has already been registered, returns the registered JXPathBeanInfo\nobject.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo JXPathBasicBeanInfo} is\n    allocated.\n\u003c/ul\u003e\n",
      "diff": "",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,11 @@\n+public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n+    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n+    if (beanInfo \u003d\u003d null) {\n+        beanInfo \u003d findInformant(beanClass);\n+        if (beanInfo \u003d\u003d null) {\n+            beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n+        }\n+        byClass.put(beanClass, beanInfo);\n+    }\n+    return beanInfo;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static JXPathBeanInfo getBeanInfo(Class beanClass) {\n    JXPathBeanInfo beanInfo \u003d (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo \u003d\u003d null) {\n        beanInfo \u003d findInformant(beanClass);\n        if (beanInfo \u003d\u003d null) {\n            beanInfo \u003d new JXPathBasicBeanInfo(beanClass);\n        }\n        byClass.put(beanClass, beanInfo);\n    }\n    return beanInfo;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathIntrospector.java",
      "functionStartLine": 134,
      "functionName": "getBeanInfo",
      "functionAnnotation": "",
      "functionDoc": "Creates and registers a JXPathBeanInfo object for the supplied class.\nIf the class has already been registered, returns the registered JXPathBeanInfo\nobject.\n\u003cp\u003e\nThe process of creation of JXPathBeanInfo is as follows:\n\u003cul\u003e\n\u003cli\u003eIf class named \u003ccode\u003e\u0026lt;beanClass\u0026gt;XBeanInfo\u003c/code\u003e exists,\n    an instance of that class is allocated.\n\u003cli\u003eOtherwise, an instance of {@link JXPathBasicBeanInfo JXPathBasicBeanInfo} is\n    allocated.\n\u003c/ul\u003e\n"
    }
  }
}