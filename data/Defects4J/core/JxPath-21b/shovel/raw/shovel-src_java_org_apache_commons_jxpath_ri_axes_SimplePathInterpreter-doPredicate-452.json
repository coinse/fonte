{
  "origin": "codeshovel",
  "repositoryName": "JxPath-21b",
  "repositoryPath": "/tmp/JxPath-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplePathInterpreter.java",
  "functionName": "doPredicate",
  "functionId": "doPredicate___context-EvalContext__parent-NodePointer__steps-Step[]__currentStep-int__predicates-Expression[]__currentPredicate-int",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
  "functionAnnotation": "",
  "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@param predicates predicate expressions\n@param currentPredicate int predicate number\n@return NodePointer\n",
  "functionStartLine": 452,
  "functionEndLine": 478,
  "numCommitsSeen": 34,
  "timeTaken": 1413,
  "changeHistory": [
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "e6b562c6eca79b82a57a4532768d775d76f48694"
  ],
  "changeHistoryShort": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": "Ydocchange",
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Ymultichange(Yparameterchange,Ybodychange)",
    "e6b562c6eca79b82a57a4532768d775d76f48694": "Yintroduced"
  },
  "changeHistoryDetails": {
    "21f932ed07fe75a5ca053ee1418b2db6cb99dc05": {
      "type": "Ydocchange",
      "commitMessage": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/jxpath/trunk@604783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/07, 11:29 PM",
      "commitName": "21f932ed07fe75a5ca053ee1418b2db6cb99dc05",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "12/5/07, 1:04 PM",
      "commitNameOld": "48294fe62b52a1786a65aa3e15fbccd99f8e5bca",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 11.43,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n    if (currentPredicate \u003d\u003d predicates.length) {\n        return doStep(context, parent, steps, currentStep + 1);\n    }\n    Expression predicate \u003d predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n    }\n    return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 452,
      "functionName": "doPredicate",
      "functionAnnotation": "",
      "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@param predicates predicate expressions\n@param currentPredicate int predicate number\n@return NodePointer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n",
        "newValue": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n\n@param context evaluation context\n@param parent parent pointer\n@param steps path steps\n@param currentStep step number\n@param predicates predicate expressions\n@param currentPredicate int predicate number\n@return NodePointer\n"
      }
    },
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n    if (currentPredicate \u003d\u003d predicates.length) {\n        return doStep(context, parent, steps, currentStep + 1);\n    }\n    Expression predicate \u003d predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n    }\n    return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 409,
      "functionName": "doPredicate",
      "functionAnnotation": "",
      "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n",
      "diff": "@@ -1,11 +1,10 @@\n private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n     if (currentPredicate \u003d\u003d predicates.length) {\n         return doStep(context, parent, steps, currentStep + 1);\n     }\n     Expression predicate \u003d predicates[currentPredicate];\n     if (predicate instanceof NameAttributeTest) {\n         return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n-    } else {\n-        return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n     }\n+    return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "11/25/02, 5:20 PM",
          "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 46.18,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n    if (currentPredicate \u003d\u003d predicates.length) {\n        return doStep(context, parent, steps, currentStep + 1);\n    }\n    Expression predicate \u003d predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n    } else {\n        return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 467,
          "functionName": "doPredicate",
          "functionAnnotation": "",
          "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n",
          "diff": "@@ -1,11 +1,11 @@\n-private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int current_step, Expression[] predicates, int current_predicate) {\n-    if (current_predicate \u003d\u003d predicates.length) {\n-        return doStep(context, parent, steps, current_step + 1);\n+private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n+    if (currentPredicate \u003d\u003d predicates.length) {\n+        return doStep(context, parent, steps, currentStep + 1);\n     }\n-    Expression predicate \u003d predicates[current_predicate];\n+    Expression predicate \u003d predicates[currentPredicate];\n     if (predicate instanceof NameAttributeTest) {\n-        return doPredicate_name(context, parent, steps, current_step, predicates, current_predicate);\n+        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n     } else {\n-        return doPredicate_index(context, parent, steps, current_step, predicates, current_predicate);\n+        return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[context-EvalContext, parent-NodePointer, steps-Step[], current_step-int, predicates-Expression[], current_predicate-int]",
            "newValue": "[context-EvalContext, parent-NodePointer, steps-Step[], currentStep-int, predicates-Expression[], currentPredicate-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/10/03, 9:41 PM",
          "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "11/25/02, 5:20 PM",
          "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 46.18,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n    if (currentPredicate \u003d\u003d predicates.length) {\n        return doStep(context, parent, steps, currentStep + 1);\n    }\n    Expression predicate \u003d predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n    } else {\n        return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 467,
          "functionName": "doPredicate",
          "functionAnnotation": "",
          "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n",
          "diff": "@@ -1,11 +1,11 @@\n-private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int current_step, Expression[] predicates, int current_predicate) {\n-    if (current_predicate \u003d\u003d predicates.length) {\n-        return doStep(context, parent, steps, current_step + 1);\n+private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int currentStep, Expression[] predicates, int currentPredicate) {\n+    if (currentPredicate \u003d\u003d predicates.length) {\n+        return doStep(context, parent, steps, currentStep + 1);\n     }\n-    Expression predicate \u003d predicates[current_predicate];\n+    Expression predicate \u003d predicates[currentPredicate];\n     if (predicate instanceof NameAttributeTest) {\n-        return doPredicate_name(context, parent, steps, current_step, predicates, current_predicate);\n+        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n     } else {\n-        return doPredicate_index(context, parent, steps, current_step, predicates, current_predicate);\n+        return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e6b562c6eca79b82a57a4532768d775d76f48694": {
      "type": "Yintroduced",
      "commitMessage": "A complete re-write to address multiple additional use cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:35 PM",
      "commitName": "e6b562c6eca79b82a57a4532768d775d76f48694",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,11 @@\n+private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int current_step, Expression[] predicates, int current_predicate) {\n+    if (current_predicate \u003d\u003d predicates.length) {\n+        return doStep(context, parent, steps, current_step + 1);\n+    }\n+    Expression predicate \u003d predicates[current_predicate];\n+    if (predicate instanceof NameAttributeTest) {\n+        return doPredicate_name(context, parent, steps, current_step, predicates, current_predicate);\n+    } else {\n+        return doPredicate_index(context, parent, steps, current_step, predicates, current_predicate);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static NodePointer doPredicate(EvalContext context, NodePointer parent, Step[] steps, int current_step, Expression[] predicates, int current_predicate) {\n    if (current_predicate \u003d\u003d predicates.length) {\n        return doStep(context, parent, steps, current_step + 1);\n    }\n    Expression predicate \u003d predicates[current_predicate];\n    if (predicate instanceof NameAttributeTest) {\n        return doPredicate_name(context, parent, steps, current_step, predicates, current_predicate);\n    } else {\n        return doPredicate_index(context, parent, steps, current_step, predicates, current_predicate);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 412,
      "functionName": "doPredicate",
      "functionAnnotation": "",
      "functionDoc": "Evaluates predicates and proceeds with the subsequent steps\nof the path.\n"
    }
  }
}