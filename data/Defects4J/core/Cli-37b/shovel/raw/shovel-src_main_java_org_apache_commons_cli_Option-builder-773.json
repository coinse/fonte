{
  "origin": "codeshovel",
  "repositoryName": "Cli-37b",
  "repositoryPath": "/tmp/Cli-37b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "builder",
  "functionId": "builder___opt-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "",
  "functionDoc": "Returns a {@link Builder} to create an {@link Option} using descriptive\nmethods.\n\n@param opt short representation of the option\n@return a new {@link Builder} instance\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\n@since 1.3\n",
  "functionStartLine": 773,
  "functionEndLine": 776,
  "numCommitsSeen": 29,
  "timeTaken": 581,
  "changeHistory": [
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3"
  ],
  "changeHistoryShort": {
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": {
      "type": "Yintroduced",
      "commitMessage": "[CLI-224] Add static builder methods to Option, check if at least one of opt/longOpt has been specified, update javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1447005 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/17/13, 3:11 AM",
      "commitName": "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
      "commitAuthor": "Thomas Neidhart",
      "diff": "@@ -0,0 +1,3 @@\n+public static Builder builder(final String opt) {\n+    return new Builder(opt);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Builder builder(final String opt) {\n    return new Builder(opt);\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 775,
      "functionName": "builder",
      "functionAnnotation": "",
      "functionDoc": "Returns a {@link Builder} to create an {@link Option} using descriptive\nmethods.\n\n@param opt short representation of the option\n@return a new {@link Builder} instance\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\n@since 1.3\n"
    }
  }
}