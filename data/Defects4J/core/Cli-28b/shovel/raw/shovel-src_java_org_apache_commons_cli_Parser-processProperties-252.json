{
  "origin": "codeshovel",
  "repositoryName": "Cli-28b",
  "repositoryPath": "/tmp/Cli-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Parser.java",
  "functionName": "processProperties",
  "functionId": "processProperties___properties-Properties",
  "sourceFilePath": "src/java/org/apache/commons/cli/Parser.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\n\n@param properties The value properties to be processed.\n",
  "functionStartLine": 252,
  "functionEndLine": 296,
  "numCommitsSeen": 37,
  "timeTaken": 1157,
  "changeHistory": [
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "298804b71d4e5f8b621f48a300f421229a3f5c86",
    "97744806d59820b096fb502b1d51ca54b5d0921d",
    "1314233dde6b3f73c888fe4274e45d654b7639aa",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
    "347bbeb8f98a49744501ac50850457ba8751d545"
  ],
  "changeHistoryShort": {
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Ymultichange(Ybodychange,Ydocchange)",
    "298804b71d4e5f8b621f48a300f421229a3f5c86": "Ymultichange(Ymodifierchange,Ybodychange)",
    "97744806d59820b096fb502b1d51ca54b5d0921d": "Ybodychange",
    "1314233dde6b3f73c888fe4274e45d654b7639aa": "Ybodychange",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ymultichange(Ybodychange,Ydocchange)",
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453": "Ybodychange",
    "347bbeb8f98a49744501ac50850457ba8751d545": "Yintroduced"
  },
  "changeHistoryDetails": {
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08, 1:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08, 1:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/24/08, 3:25 PM",
          "commitNameOld": "0a8de54ff89093fc8c5a2b00f7c0c856c5cbe57d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 4.41,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d getOptions().getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                    try {\n                        opt.addValueForProcessing(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 241,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n protected void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d getOptions().getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArg()) {\n-                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                     try {\n                         opt.addValueForProcessing(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08, 1:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/24/08, 3:25 PM",
          "commitNameOld": "0a8de54ff89093fc8c5a2b00f7c0c856c5cbe57d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 4.41,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d getOptions().getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                    try {\n                        opt.addValueForProcessing(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 241,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n protected void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d getOptions().getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArg()) {\n-                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                     try {\n                         opt.addValueForProcessing(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
            "newValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\n\n@param properties The value properties to be processed.\n"
          }
        }
      ]
    },
    "298804b71d4e5f8b621f48a300f421229a3f5c86": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/08, 11:43 PM",
      "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/08, 11:43 PM",
          "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07, 12:08 AM",
          "commitNameOld": "97744806d59820b096fb502b1d51ca54b5d0921d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 313.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d getOptions().getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValueForProcessing(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 249,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n-private void processProperties(Properties properties) {\n+protected void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n-            Option opt \u003d options.getOption(option);\n+            Option opt \u003d getOptions().getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArg()) {\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n                         opt.addValueForProcessing(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/08, 11:43 PM",
          "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07, 12:08 AM",
          "commitNameOld": "97744806d59820b096fb502b1d51ca54b5d0921d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 313.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d getOptions().getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValueForProcessing(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 249,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n-private void processProperties(Properties properties) {\n+protected void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n-            Option opt \u003d options.getOption(option);\n+            Option opt \u003d getOptions().getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArg()) {\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n                         opt.addValueForProcessing(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "97744806d59820b096fb502b1d51ca54b5d0921d": {
      "type": "Ybodychange",
      "commitMessage": "Applying the patch from CLI-135 to put the public addValue method back, even though it just throws an exception. This maintains binary compatibility, for some level of compatibility. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551815 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07, 12:08 AM",
      "commitName": "97744806d59820b096fb502b1d51ca54b5d0921d",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/4/07, 9:01 PM",
      "commitNameOld": "f78959477b207bf710049aa35730ef7659f0a1b9",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 24.13,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValueForProcessing(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 236,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
      "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d options.getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArg()) {\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n-                        opt.addValue(value);\n+                        opt.addValueForProcessing(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1314233dde6b3f73c888fe4274e45d654b7639aa": {
      "type": "Ybodychange",
      "commitMessage": "When extracting option values from properties, options with a single argument can now be processed successfully.\n\nBR: 31148\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@130112 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/27/04, 6:35 AM",
      "commitName": "1314233dde6b3f73c888fe4274e45d654b7639aa",
      "commitAuthor": "Robert James Oxspring",
      "commitDateOld": "12/27/04, 5:21 AM",
      "commitNameOld": "cb8c4573aa89c9097d9b91effb66d91e13b4449c",
      "commitAuthorOld": "Robert James Oxspring",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArg()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValue(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 228,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
      "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d options.getOption(option);\n             String value \u003d properties.getProperty(option);\n-            if (opt.hasArgs()) {\n+            if (opt.hasArg()) {\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n                         opt.addValue(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/9/02, 3:47 PM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/9/02, 3:47 PM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/27/02, 3:22 PM",
          "commitNameOld": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 12.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArgs()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValue(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 273,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d options.getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArgs()) {\n-                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n+                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n                         opt.addValue(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/9/02, 3:47 PM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/27/02, 3:22 PM",
          "commitNameOld": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 12.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArgs()) {\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                    try {\n                        opt.addValue(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 273,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n",
          "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d options.getOption(option);\n             String value \u003d properties.getProperty(option);\n             if (opt.hasArgs()) {\n-                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n+                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\n                     try {\n                         opt.addValue(value);\n                     } catch (RuntimeException exp) {\n                     }\n                 }\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                 break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n",
            "newValue": "\u003cp\u003eSets the values of Options using the values in \n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n\n@param properties The value properties to be processed.\n"
          }
        }
      ]
    },
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453": {
      "type": "Ybodychange",
      "commitMessage": "added support for *boolean/flag* options from properties\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/27/02, 3:22 PM",
      "commitName": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
      "commitAuthor": "John Keyes",
      "commitDateOld": "11/25/02, 3:43 PM",
      "commitNameOld": "5470bcaa9d75d73fb9c687fa13e12d642c75984f",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 1.98,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            String value \u003d properties.getProperty(option);\n            if (opt.hasArgs()) {\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                    try {\n                        opt.addValue(value);\n                    } catch (RuntimeException exp) {\n                    }\n                }\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n                break;\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 249,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n",
      "diff": "@@ -1,15 +1,23 @@\n private void processProperties(Properties properties) {\n     if (properties \u003d\u003d null) {\n         return;\n     }\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n         String option \u003d e.nextElement().toString();\n         if (!cmd.hasOption(option)) {\n             Option opt \u003d options.getOption(option);\n-            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n-                opt.addValue(properties.getProperty(option));\n+            String value \u003d properties.getProperty(option);\n+            if (opt.hasArgs()) {\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n+                    try {\n+                        opt.addValue(value);\n+                    } catch (RuntimeException exp) {\n+                    }\n+                }\n+            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\n+                break;\n             }\n             cmd.addOption(opt);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "347bbeb8f98a49744501ac50850457ba8751d545": {
      "type": "Yintroduced",
      "commitMessage": "refactored the option string handling, added property support for options with an argument value\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/18/02, 12:41 AM",
      "commitName": "347bbeb8f98a49744501ac50850457ba8751d545",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,15 @@\n+private void processProperties(Properties properties) {\n+    if (properties \u003d\u003d null) {\n+        return;\n+    }\n+    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n+        String option \u003d e.nextElement().toString();\n+        if (!cmd.hasOption(option)) {\n+            Option opt \u003d options.getOption(option);\n+            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n+                opt.addValue(properties.getProperty(option));\n+            }\n+            cmd.addOption(opt);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void processProperties(Properties properties) {\n    if (properties \u003d\u003d null) {\n        return;\n    }\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\n        String option \u003d e.nextElement().toString();\n        if (!cmd.hasOption(option)) {\n            Option opt \u003d options.getOption(option);\n            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\n                opt.addValue(properties.getProperty(option));\n            }\n            cmd.addOption(opt);\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 249,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\n"
    }
  }
}