{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePointer.java",
  "functionName": "compareNodePointers",
  "functionId": "compareNodePointers___p1-NodePointer__depth1-int__p2-NodePointer__depth2-int",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 642,
  "functionEndLine": 675,
  "numCommitsSeen": 29,
  "timeTaken": 1564,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": "Yformatchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Ybodychange",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        return r \u003d\u003d 0 ? -1 : r;\n    }\n    if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        return r \u003d\u003d 0 ? 1 : r;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 642,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,24 @@\n private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n     if (depth1 \u003c depth2) {\n         int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n-        if (r !\u003d 0) {\n-            return r;\n-        }\n-        return -1;\n-    } else if (depth1 \u003e depth2) {\n+        return r \u003d\u003d 0 ? -1 : r;\n+    }\n+    if (depth1 \u003e depth2) {\n         int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n-        if (r !\u003d 0) {\n-            return r;\n-        }\n-        return 1;\n+        return r \u003d\u003d 0 ? 1 : r;\n     }\n     if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n         return 0;\n     }\n     if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n         return 0;\n     }\n     if (depth1 \u003d\u003d 1) {\n         throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n     }\n     int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n     if (r !\u003d 0) {\n         return r;\n     }\n     return p1.parent.compareChildNodePointers(p1, p2);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0": {
      "type": "Yformatchange",
      "commitMessage": "Introduced specialized exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@329481 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/29/05, 2:07 PM",
      "commitName": "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "2/26/05, 5:07 AM",
      "commitNameOld": "ecb571fc93e4a7bed9545a295c177d1ab4b1f4bf",
      "commitAuthorOld": "Dirk Verbeeck",
      "daysBetweenCommits": 245.33,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return -1;\n    } else if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return 1;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 676,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return -1;\n    } else if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return 1;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 685,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Ybodychange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.45,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return -1;\n    } else if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return 1;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 633,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return -1;\n    } else if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return 1;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 543,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n     if (depth1 \u003c depth2) {\n         int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n         if (r !\u003d 0) {\n             return r;\n         }\n         return -1;\n     } else if (depth1 \u003e depth2) {\n         int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n         if (r !\u003d 0) {\n             return r;\n         }\n         return 1;\n     }\n     if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n         return 0;\n     }\n     if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n         return 0;\n     }\n     if (depth1 \u003d\u003d 1) {\n-        throw new RuntimeException(\"Cannot compare pointers that do not belong to the same tree\");\n+        throw new JXPathException(\"Cannot compare pointers that do not belong to the same tree: \u0027\" + p1 + \"\u0027 and \u0027\" + p2 + \"\u0027\");\n     }\n     int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n     if (r !\u003d 0) {\n         return r;\n     }\n     return p1.parent.compareChildNodePointers(p1, p2);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Yintroduced",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,29 @@\n+private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n+    if (depth1 \u003c depth2) {\n+        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n+        if (r !\u003d 0) {\n+            return r;\n+        }\n+        return -1;\n+    } else if (depth1 \u003e depth2) {\n+        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n+        if (r !\u003d 0) {\n+            return r;\n+        }\n+        return 1;\n+    }\n+    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n+        return 0;\n+    }\n+    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n+        return 0;\n+    }\n+    if (depth1 \u003d\u003d 1) {\n+        throw new RuntimeException(\"Cannot compare pointers that do not belong to the same tree\");\n+    }\n+    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n+    if (r !\u003d 0) {\n+        return r;\n+    }\n+    return p1.parent.compareChildNodePointers(p1, p2);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private int compareNodePointers(NodePointer p1, int depth1, NodePointer p2, int depth2) {\n    if (depth1 \u003c depth2) {\n        int r \u003d compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return -1;\n    } else if (depth1 \u003e depth2) {\n        int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        if (r !\u003d 0) {\n            return r;\n        }\n        return 1;\n    }\n    if (p1 \u003d\u003d null \u0026\u0026 p2 \u003d\u003d null) {\n        return 0;\n    }\n    if (p1 !\u003d null \u0026\u0026 p1.equals(p2)) {\n        return 0;\n    }\n    if (depth1 \u003d\u003d 1) {\n        throw new RuntimeException(\"Cannot compare pointers that do not belong to the same tree\");\n    }\n    int r \u003d compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    if (r !\u003d 0) {\n        return r;\n    }\n    return p1.parent.compareChildNodePointers(p1, p2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 545,
      "functionName": "compareNodePointers",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}