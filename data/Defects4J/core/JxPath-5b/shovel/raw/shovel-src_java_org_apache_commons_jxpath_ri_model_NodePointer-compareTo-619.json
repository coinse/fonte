{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePointer.java",
  "functionName": "compareTo",
  "functionId": "compareTo___object-Object",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 619,
  "functionEndLine": 640,
  "numCommitsSeen": 29,
  "timeTaken": 1819,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Yformatchange",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object object) {\n    NodePointer pointer \u003d (NodePointer) object;\n    if (parent \u003d\u003d pointer.parent) {\n        return parent \u003d\u003d null ? 0 : parent.compareChildNodePointers(this, pointer);\n    }\n    int depth1 \u003d 0;\n    NodePointer p1 \u003d this;\n    while (p1 !\u003d null) {\n        depth1++;\n        p1 \u003d p1.parent;\n    }\n    int depth2 \u003d 0;\n    NodePointer p2 \u003d pointer;\n    while (p2 !\u003d null) {\n        depth2++;\n        p2 \u003d p2.parent;\n    }\n    return compareNodePointers(this, depth1, pointer, depth2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 619,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,19 @@\n public int compareTo(Object object) {\n     NodePointer pointer \u003d (NodePointer) object;\n     if (parent \u003d\u003d pointer.parent) {\n-        if (parent \u003d\u003d null) {\n-            return 0;\n-        }\n-        return parent.compareChildNodePointers(this, pointer);\n+        return parent \u003d\u003d null ? 0 : parent.compareChildNodePointers(this, pointer);\n     }\n     int depth1 \u003d 0;\n     NodePointer p1 \u003d this;\n     while (p1 !\u003d null) {\n         depth1++;\n         p1 \u003d p1.parent;\n     }\n     int depth2 \u003d 0;\n     NodePointer p2 \u003d pointer;\n     while (p2 !\u003d null) {\n         depth2++;\n         p2 \u003d p2.parent;\n     }\n     return compareNodePointers(this, depth1, pointer, depth2);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object object) {\n    NodePointer pointer \u003d (NodePointer) object;\n    if (parent \u003d\u003d pointer.parent) {\n        if (parent \u003d\u003d null) {\n            return 0;\n        }\n        return parent.compareChildNodePointers(this, pointer);\n    }\n    int depth1 \u003d 0;\n    NodePointer p1 \u003d this;\n    while (p1 !\u003d null) {\n        depth1++;\n        p1 \u003d p1.parent;\n    }\n    int depth2 \u003d 0;\n    NodePointer p2 \u003d pointer;\n    while (p2 !\u003d null) {\n        depth2++;\n        p2 \u003d p2.parent;\n    }\n    return compareNodePointers(this, depth1, pointer, depth2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 659,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Yformatchange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.45,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object object) {\n    NodePointer pointer \u003d (NodePointer) object;\n    if (parent \u003d\u003d pointer.parent) {\n        if (parent \u003d\u003d null) {\n            return 0;\n        }\n        return parent.compareChildNodePointers(this, pointer);\n    }\n    int depth1 \u003d 0;\n    NodePointer p1 \u003d this;\n    while (p1 !\u003d null) {\n        depth1++;\n        p1 \u003d p1.parent;\n    }\n    int depth2 \u003d 0;\n    NodePointer p2 \u003d pointer;\n    while (p2 !\u003d null) {\n        depth2++;\n        p2 \u003d p2.parent;\n    }\n    return compareNodePointers(this, depth1, pointer, depth2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 607,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Yintroduced",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,22 @@\n+public int compareTo(Object object) {\n+    NodePointer pointer \u003d (NodePointer) object;\n+    if (parent \u003d\u003d pointer.parent) {\n+        if (parent \u003d\u003d null) {\n+            return 0;\n+        }\n+        return parent.compareChildNodePointers(this, pointer);\n+    }\n+    int depth1 \u003d 0;\n+    NodePointer p1 \u003d this;\n+    while (p1 !\u003d null) {\n+        depth1++;\n+        p1 \u003d p1.parent;\n+    }\n+    int depth2 \u003d 0;\n+    NodePointer p2 \u003d pointer;\n+    while (p2 !\u003d null) {\n+        depth2++;\n+        p2 \u003d p2.parent;\n+    }\n+    return compareNodePointers(this, depth1, pointer, depth2);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int compareTo(Object object) {\n    NodePointer pointer \u003d (NodePointer) object;\n    if (parent \u003d\u003d pointer.parent) {\n        if (parent \u003d\u003d null) {\n            return 0;\n        }\n        return parent.compareChildNodePointers(this, pointer);\n    }\n    int depth1 \u003d 0;\n    NodePointer p1 \u003d this;\n    while (p1 !\u003d null) {\n        depth1++;\n        p1 \u003d p1.parent;\n    }\n    int depth2 \u003d 0;\n    NodePointer p2 \u003d pointer;\n    while (p2 !\u003d null) {\n        depth2++;\n        p2 \u003d p2.parent;\n    }\n    return compareNodePointers(this, depth1, pointer, depth2);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 520,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}