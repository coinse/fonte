{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Expression.java",
  "functionName": "iteratePointers",
  "functionId": "iteratePointers___context-EvalContext",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 84,
  "functionEndLine": 100,
  "numCommitsSeen": 27,
  "timeTaken": 1308,
  "changeHistory": [
    "716c03b3b12ec106974898451b149f6eb79c65da",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "323e8b214459b3977973c01a048a979dc778f100",
    "112774edae824e6e07ed9d64f637b4b7c19cea3b"
  ],
  "changeHistoryShort": {
    "716c03b3b12ec106974898451b149f6eb79c65da": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "323e8b214459b3977973c01a048a979dc778f100": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "112774edae824e6e07ed9d64f637b4b7c19cea3b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "716c03b3b12ec106974898451b149f6eb79c65da": {
      "type": "Ybodychange",
      "commitMessage": "[JXPATH-50] properly handle NodeSet returned by extension function.\nSubmitted by Keith D. Gregory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@495015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/07, 2:37 PM",
      "commitName": "716c03b3b12ec106974898451b149f6eb79c65da",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 42.71,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator iteratePointers(EvalContext context) {\n    Object result \u003d compute(context);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    if (result instanceof NodeSet) {\n        return new PointerIterator(((NodeSet) result).getPointers().iterator(), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
      "functionStartLine": 84,
      "functionName": "iteratePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,13 @@\n public Iterator iteratePointers(EvalContext context) {\n     Object result \u003d compute(context);\n     if (result \u003d\u003d null) {\n         return Collections.EMPTY_LIST.iterator();\n     }\n     if (result instanceof EvalContext) {\n         return (EvalContext) result;\n     }\n+    if (result instanceof NodeSet) {\n+        return new PointerIterator(((NodeSet) result).getPointers().iterator(), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n+    }\n     return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "5/7/02, 5:40 PM",
      "commitNameOld": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 248.21,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterator iteratePointers(EvalContext context) {\n    Object result \u003d compute(context);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
      "functionStartLine": 218,
      "functionName": "iteratePointers",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "323e8b214459b3977973c01a048a979dc778f100": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/02, 5:40 PM",
      "commitName": "323e8b214459b3977973c01a048a979dc778f100",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/02, 5:40 PM",
          "commitName": "323e8b214459b3977973c01a048a979dc778f100",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "5/7/02, 5:39 PM",
          "commitNameOld": "c6d36b46057b4d441556e6275bcd7d13d242fa02",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator iteratePointers(EvalContext context) {\n    Object result \u003d compute(context);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
          "functionStartLine": 218,
          "functionName": "iteratePointers",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Iterator iteratePointers(Expression expression) {\n-    Object result \u003d eval(expression, false);\n+public Iterator iteratePointers(EvalContext context) {\n+    Object result \u003d compute(context);\n     if (result \u003d\u003d null) {\n         return Collections.EMPTY_LIST.iterator();\n     }\n     if (result instanceof EvalContext) {\n         return (EvalContext) result;\n     }\n-    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), getRootContext().getCurrentNodePointer().getLocale());\n+    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
            "oldMethodName": "iteratePointers",
            "newMethodName": "iteratePointers"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/02, 5:40 PM",
          "commitName": "323e8b214459b3977973c01a048a979dc778f100",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "5/7/02, 5:39 PM",
          "commitNameOld": "c6d36b46057b4d441556e6275bcd7d13d242fa02",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator iteratePointers(EvalContext context) {\n    Object result \u003d compute(context);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
          "functionStartLine": 218,
          "functionName": "iteratePointers",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Iterator iteratePointers(Expression expression) {\n-    Object result \u003d eval(expression, false);\n+public Iterator iteratePointers(EvalContext context) {\n+    Object result \u003d compute(context);\n     if (result \u003d\u003d null) {\n         return Collections.EMPTY_LIST.iterator();\n     }\n     if (result instanceof EvalContext) {\n         return (EvalContext) result;\n     }\n-    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), getRootContext().getCurrentNodePointer().getLocale());\n+    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/7/02, 5:40 PM",
          "commitName": "323e8b214459b3977973c01a048a979dc778f100",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "5/7/02, 5:39 PM",
          "commitNameOld": "c6d36b46057b4d441556e6275bcd7d13d242fa02",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterator iteratePointers(EvalContext context) {\n    Object result \u003d compute(context);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/compiler/Expression.java",
          "functionStartLine": 218,
          "functionName": "iteratePointers",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-public Iterator iteratePointers(Expression expression) {\n-    Object result \u003d eval(expression, false);\n+public Iterator iteratePointers(EvalContext context) {\n+    Object result \u003d compute(context);\n     if (result \u003d\u003d null) {\n         return Collections.EMPTY_LIST.iterator();\n     }\n     if (result instanceof EvalContext) {\n         return (EvalContext) result;\n     }\n-    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), getRootContext().getCurrentNodePointer().getLocale());\n+    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), context.getRootContext().getCurrentNodePointer().getLocale());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[expression-Expression]",
            "newValue": "[context-EvalContext]"
          }
        }
      ]
    },
    "112774edae824e6e07ed9d64f637b4b7c19cea3b": {
      "type": "Yintroduced",
      "commitMessage": "Now implements Iterator\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136734 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/27/02, 9:36 PM",
      "commitName": "112774edae824e6e07ed9d64f637b4b7c19cea3b",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,10 @@\n+public Iterator iteratePointers(Expression expression) {\n+    Object result \u003d eval(expression, false);\n+    if (result \u003d\u003d null) {\n+        return Collections.EMPTY_LIST.iterator();\n+    }\n+    if (result instanceof EvalContext) {\n+        return (EvalContext) result;\n+    }\n+    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), getRootContext().getCurrentNodePointer().getLocale());\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Iterator iteratePointers(Expression expression) {\n    Object result \u003d eval(expression, false);\n    if (result \u003d\u003d null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, \"value\"), getRootContext().getCurrentNodePointer().getLocale());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 351,
      "functionName": "iteratePointers",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}