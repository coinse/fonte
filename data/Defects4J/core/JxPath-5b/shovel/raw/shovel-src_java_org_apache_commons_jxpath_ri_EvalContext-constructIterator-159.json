{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EvalContext.java",
  "functionName": "constructIterator",
  "functionId": "constructIterator",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 159,
  "functionEndLine": 183,
  "numCommitsSeen": 35,
  "timeTaken": 682,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "fbc0337a6886409f66f10b6571f16ac855cf29fb",
    "77af585d9f0e629db4ecf8d468ef7b71c9d98e39",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "04d66747e69273ed8ed520ddfefb86d85755e4b1",
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "fbc0337a6886409f66f10b6571f16ac855cf29fb": "Ybodychange",
    "77af585d9f0e629db4ecf8d468ef7b71c9d98e39": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "04d66747e69273ed8ed520ddfefb86d85755e4b1": "Ybodychange",
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "1/31/07, 9:24 AM",
      "commitNameOld": "ce272ae94782474f58d0c18e0f1a8c9a7a8dda42",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 19.25,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                set.add(pointer);\n                list.add(pointer);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, ReverseComparator.INSTANCE);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 159,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "fbc0337a6886409f66f10b6571f16ac855cf29fb": {
      "type": "Ybodychange",
      "commitMessage": "extract ReverseComparator to its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@495016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/07, 2:41 PM",
      "commitName": "fbc0337a6886409f66f10b6571f16ac855cf29fb",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 42.71,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                set.add(pointer);\n                list.add(pointer);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, ReverseComparator.INSTANCE);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 171,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n private boolean constructIterator() {\n     HashSet set \u003d new HashSet();\n     ArrayList list \u003d new ArrayList();\n     while (nextSet()) {\n         while (nextNode()) {\n             NodePointer pointer \u003d getCurrentNodePointer();\n             if (!set.contains(pointer)) {\n                 set.add(pointer);\n                 list.add(pointer);\n             }\n         }\n     }\n     if (list.isEmpty()) {\n         return false;\n     }\n     if (getDocumentOrder() \u003d\u003d 1) {\n         Collections.sort(list);\n     } else {\n-        Collections.sort(list, REVERSE_COMPARATOR);\n+        Collections.sort(list, ReverseComparator.INSTANCE);\n     }\n     pointerIterator \u003d list.iterator();\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "77af585d9f0e629db4ecf8d468ef7b71c9d98e39": {
      "type": "Ybodychange",
      "commitMessage": "Fixed collection as return value of extension function\nReduced the amount of cloning\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/03, 6:41 PM",
      "commitName": "77af585d9f0e629db4ecf8d468ef7b71c9d98e39",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "3/10/03, 4:59 PM",
      "commitNameOld": "bdf423f27a76d2006ffe1058d6530eebf619c877",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 14.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                set.add(pointer);\n                list.add(pointer);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, REVERSE_COMPARATOR);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 211,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,23 @@\n private boolean constructIterator() {\n     HashSet set \u003d new HashSet();\n     ArrayList list \u003d new ArrayList();\n     while (nextSet()) {\n         while (nextNode()) {\n             NodePointer pointer \u003d getCurrentNodePointer();\n             if (!set.contains(pointer)) {\n-                Pointer cln \u003d (Pointer) pointer.clone();\n-                set.add(cln);\n-                list.add(cln);\n+                set.add(pointer);\n+                list.add(pointer);\n             }\n         }\n     }\n     if (list.isEmpty()) {\n         return false;\n     }\n     if (getDocumentOrder() \u003d\u003d 1) {\n         Collections.sort(list);\n     } else {\n         Collections.sort(list, REVERSE_COMPARATOR);\n     }\n     pointerIterator \u003d list.iterator();\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:20 PM",
      "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 46.18,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                Pointer cln \u003d (Pointer) pointer.clone();\n                set.add(cln);\n                list.add(cln);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, REVERSE_COMPARATOR);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 208,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "04d66747e69273ed8ed520ddfefb86d85755e4b1": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a problem with iteration - calling hasNext() multiple times would mess up the iteration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136818 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/19/02, 8:43 PM",
      "commitName": "04d66747e69273ed8ed520ddfefb86d85755e4b1",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "7/3/02, 2:12 PM",
      "commitNameOld": "cc0637b2a262c45f047d3f273d2100bd138bf169",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 108.27,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                Pointer cln \u003d (Pointer) pointer.clone();\n                set.add(cln);\n                list.add(cln);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, REVERSE_COMPARATOR);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 204,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,24 @@\n private boolean constructIterator() {\n     HashSet set \u003d new HashSet();\n     ArrayList list \u003d new ArrayList();\n     while (nextSet()) {\n         while (nextNode()) {\n             NodePointer pointer \u003d getCurrentNodePointer();\n             if (!set.contains(pointer)) {\n-                set.add(pointer);\n-                list.add(pointer);\n+                Pointer cln \u003d (Pointer) pointer.clone();\n+                set.add(cln);\n+                list.add(cln);\n             }\n         }\n     }\n     if (list.isEmpty()) {\n         return false;\n     }\n     if (getDocumentOrder() \u003d\u003d 1) {\n         Collections.sort(list);\n     } else {\n         Collections.sort(list, REVERSE_COMPARATOR);\n     }\n     pointerIterator \u003d list.iterator();\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e2fc81a168891ac4fff974989f0fd7b2519fcbbe": {
      "type": "Yintroduced",
      "commitMessage": "Fix problems with document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136754 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/02, 5:41 PM",
      "commitName": "e2fc81a168891ac4fff974989f0fd7b2519fcbbe",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,23 @@\n+private boolean constructIterator() {\n+    HashSet set \u003d new HashSet();\n+    ArrayList list \u003d new ArrayList();\n+    while (nextSet()) {\n+        while (nextNode()) {\n+            NodePointer pointer \u003d getCurrentNodePointer();\n+            if (!set.contains(pointer)) {\n+                set.add(pointer);\n+                list.add(pointer);\n+            }\n+        }\n+    }\n+    if (list.isEmpty()) {\n+        return false;\n+    }\n+    if (getDocumentOrder() \u003d\u003d 1) {\n+        Collections.sort(list);\n+    } else {\n+        Collections.sort(list, REVERSE_COMPARATOR);\n+    }\n+    pointerIterator \u003d list.iterator();\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean constructIterator() {\n    HashSet set \u003d new HashSet();\n    ArrayList list \u003d new ArrayList();\n    while (nextSet()) {\n        while (nextNode()) {\n            NodePointer pointer \u003d getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                set.add(pointer);\n                list.add(pointer);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    if (getDocumentOrder() \u003d\u003d 1) {\n        Collections.sort(list);\n    } else {\n        Collections.sort(list, REVERSE_COMPARATOR);\n    }\n    pointerIterator \u003d list.iterator();\n    return true;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/EvalContext.java",
      "functionStartLine": 198,
      "functionName": "constructIterator",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}