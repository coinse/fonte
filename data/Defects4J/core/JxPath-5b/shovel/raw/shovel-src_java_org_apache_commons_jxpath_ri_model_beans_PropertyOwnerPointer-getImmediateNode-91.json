{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PropertyOwnerPointer.java",
  "functionName": "getImmediateNode",
  "functionId": "getImmediateNode",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 91,
  "functionEndLine": 97,
  "numCommitsSeen": 46,
  "timeTaken": 1167,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "207c6dd98407506ff367d072be25b56f37989215",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": "Yrename",
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e": "Yrename",
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": "Yrename",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ybodychange)",
    "207c6dd98407506ff367d072be25b56f37989215": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        value \u003d index \u003d\u003d WHOLE_COLLECTION ? ValueUtils.getValue(getBaseValue()) : ValueUtils.getValue(getBaseValue(), index);\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 91,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,6 @@\n public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n-        if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d ValueUtils.getValue(getBaseValue());\n-        } else {\n-            value \u003d ValueUtils.getValue(getBaseValue(), index);\n-        }\n+        value \u003d index \u003d\u003d WHOLE_COLLECTION ? ValueUtils.getValue(getBaseValue()) : ValueUtils.getValue(getBaseValue(), index);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "75548377c5f5821be2ca75eb247a6ddd4bbb6a88": {
      "type": "Ybodychange",
      "commitMessage": "In some situations JXPath would not open containers during path traversal. \nMade the container opening consistent throughout RI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/4/04, 3:06 PM",
      "commitName": "75548377c5f5821be2ca75eb247a6ddd4bbb6a88",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "3/24/04, 9:41 PM",
      "commitNameOld": "d52ff3460273690514d70e716be1ff3201dca8c8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 10.68,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d ValueUtils.getValue(getBaseValue());\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 101,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d getBaseValue();\n+            value \u003d ValueUtils.getValue(getBaseValue());\n         } else {\n             value \u003d ValueUtils.getValue(getBaseValue(), index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/9/03, 6:11 PM",
      "commitNameOld": "1da214ffc187e6afda771b77baa71df054d3ee4d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 146,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": {
      "type": "Yrename",
      "commitMessage": "Organized imports, formatted code\nFixed problems with getValue() and getNode()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/25/02, 5:20 PM",
      "commitName": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/19/02, 8:47 PM",
      "commitNameOld": "074cc8809cf0884f38bb22622d81209778a02b32",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 36.9,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getImmediateNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 133,
      "functionName": "getImmediateNode",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-public Object getNode() {\n+public Object getImmediateNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n             value \u003d getBaseValue();\n         } else {\n             value \u003d ValueUtils.getValue(getBaseValue(), index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getNode",
        "newValue": "getImmediateNode"
      }
    },
    "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e": {
      "type": "Yrename",
      "commitMessage": "Made getNode() a public method on Pointer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136799 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/10/02, 9:13 AM",
      "commitName": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/9/02, 6:49 PM",
      "commitNameOld": "d0b44a455070e7c245d329d302344cd997290bf4",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.6,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNode() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 139,
      "functionName": "getNode",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-public Object getNodeValue() {\n+public Object getNode() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n             value \u003d getBaseValue();\n         } else {\n             value \u003d ValueUtils.getValue(getBaseValue(), index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getNodeValue",
        "newValue": "getNode"
      }
    },
    "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0": {
      "type": "Yrename",
      "commitMessage": "Added pointer comparison to ensure document order\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136730 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 6:00 PM",
      "commitName": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/23/02, 9:06 PM",
      "commitNameOld": "3b6b30adb846a9f2f0fa070f9c8c848f04d8b37f",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.87,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object getNodeValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
      "functionStartLine": 139,
      "functionName": "getNodeValue",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-public Object getValue() {\n+public Object getNodeValue() {\n     if (value \u003d\u003d UNINITIALIZED) {\n         if (index \u003d\u003d WHOLE_COLLECTION) {\n             value \u003d getBaseValue();\n         } else {\n             value \u003d ValueUtils.getValue(getBaseValue(), index);\n         }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getValue",
        "newValue": "getNodeValue"
      }
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
          "functionStartLine": 138,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n public Object getValue() {\n-    Object value;\n-    if (index \u003d\u003d WHOLE_COLLECTION) {\n-        value \u003d getBaseValue();\n-    } else {\n-        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n+    if (value \u003d\u003d UNINITIALIZED) {\n+        if (index \u003d\u003d WHOLE_COLLECTION) {\n+            value \u003d getBaseValue();\n+        } else {\n+            value \u003d ValueUtils.getValue(getBaseValue(), index);\n+        }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNINITIALIZED) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getBaseValue();\n        } else {\n            value \u003d ValueUtils.getValue(getBaseValue(), index);\n        }\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyOwnerPointer.java",
          "functionStartLine": 138,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,10 @@\n public Object getValue() {\n-    Object value;\n-    if (index \u003d\u003d WHOLE_COLLECTION) {\n-        value \u003d getBaseValue();\n-    } else {\n-        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n+    if (value \u003d\u003d UNINITIALIZED) {\n+        if (index \u003d\u003d WHOLE_COLLECTION) {\n+            value \u003d getBaseValue();\n+        } else {\n+            value \u003d ValueUtils.getValue(getBaseValue(), index);\n+        }\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/2/01, 6:22 PM",
          "commitName": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/22/01, 8:38 PM",
          "commitNameOld": "ec798e97745ee2c294d374b873308065948dded4",
          "commitAuthorOld": "Craig R. McClanahan",
          "daysBetweenCommits": 10.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    Object value;\n    if (index \u003d\u003d WHOLE_COLLECTION) {\n        value \u003d getBaseValue();\n    } else {\n        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
          "functionStartLine": 118,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,9 @@\n public Object getValue() {\n-    if (value \u003d\u003d UNKNOWN) {\n-        if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d getPropertyValue();\n-        } else {\n-            value \u003d PropertyAccessHelper.getValue(getPropertyValue(), index);\n-        }\n+    Object value;\n+    if (index \u003d\u003d WHOLE_COLLECTION) {\n+        value \u003d getBaseValue();\n+    } else {\n+        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
            "oldMethodName": "getValue",
            "newMethodName": "getValue"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/2/01, 6:22 PM",
          "commitName": "207c6dd98407506ff367d072be25b56f37989215",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "8/22/01, 8:38 PM",
          "commitNameOld": "ec798e97745ee2c294d374b873308065948dded4",
          "commitAuthorOld": "Craig R. McClanahan",
          "daysBetweenCommits": 10.91,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object getValue() {\n    Object value;\n    if (index \u003d\u003d WHOLE_COLLECTION) {\n        value \u003d getBaseValue();\n    } else {\n        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n    }\n    return value;\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/pointers/PropertyOwnerPointer.java",
          "functionStartLine": 118,
          "functionName": "getValue",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,9 @@\n public Object getValue() {\n-    if (value \u003d\u003d UNKNOWN) {\n-        if (index \u003d\u003d WHOLE_COLLECTION) {\n-            value \u003d getPropertyValue();\n-        } else {\n-            value \u003d PropertyAccessHelper.getValue(getPropertyValue(), index);\n-        }\n+    Object value;\n+    if (index \u003d\u003d WHOLE_COLLECTION) {\n+        value \u003d getBaseValue();\n+    } else {\n+        value \u003d PropertyAccessHelper.getValue(getBaseValue(), index);\n     }\n     return value;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,10 @@\n+public Object getValue() {\n+    if (value \u003d\u003d UNKNOWN) {\n+        if (index \u003d\u003d WHOLE_COLLECTION) {\n+            value \u003d getPropertyValue();\n+        } else {\n+            value \u003d PropertyAccessHelper.getValue(getPropertyValue(), index);\n+        }\n+    }\n+    return value;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Object getValue() {\n    if (value \u003d\u003d UNKNOWN) {\n        if (index \u003d\u003d WHOLE_COLLECTION) {\n            value \u003d getPropertyValue();\n        } else {\n            value \u003d PropertyAccessHelper.getValue(getPropertyValue(), index);\n        }\n    }\n    return value;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 137,
      "functionName": "getValue",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}