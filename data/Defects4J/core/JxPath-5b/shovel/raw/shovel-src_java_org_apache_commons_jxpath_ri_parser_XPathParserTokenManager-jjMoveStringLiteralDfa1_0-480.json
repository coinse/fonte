{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XPathParserTokenManager.java",
  "functionName": "jjMoveStringLiteralDfa1_0",
  "functionId": "jjMoveStringLiteralDfa1_0___active0-long__active1-long",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 480,
  "functionEndLine": 535,
  "numCommitsSeen": 6,
  "timeTaken": 906,
  "changeHistory": [
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "632e72228ad994efa19c0a9ae84923718f259cdf",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": "Ybodychange",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Ybodychange",
    "632e72228ad994efa19c0a9ae84923718f259cdf": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": {
      "type": "Ybodychange",
      "commitMessage": "Optimized parser by using SKIP instead of SPECIAL_CHARACTER\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/03, 6:28 PM",
      "commitName": "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/24/03, 5:49 PM",
      "commitNameOld": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 59.03,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 \u0026 0x80000L) !\u003d 0L)\n                return jjStopAtPos(1, 83);\n            break;\n        case 47:\n            if ((active0 \u0026 0x80L) !\u003d 0L)\n                return jjStopAtPos(1, 7);\n            break;\n        case 61:\n            if ((active0 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 12);\n            else if ((active0 \u0026 0x4000L) !\u003d 0L)\n                return jjStopAtPos(1, 14);\n            else if ((active0 \u0026 0x10000L) !\u003d 0L)\n                return jjStopAtPos(1, 16);\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0xc1012000000000L, active1, 0xa0L);\n        case 100:\n            if ((active0 \u0026 0x8000000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 51, 12);\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10880900000000L, active1, 0x800L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x104010000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0xa262402a0000000L, active1, 0x300dL);\n        case 114:\n            if ((active0 \u0026 0x8000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 27, 12);\n            return jjMoveStringLiteralDfa2_0(active0, 0x420400000000L, active1, 0x12L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x8500008000000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0x7000000000000000L, active1, 0x340L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 480,
      "functionName": "jjMoveStringLiteralDfa1_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,55 +1,55 @@\n private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(0, active0, active1);\n         return 1;\n     }\n     switch(curChar) {\n         case 46:\n-            if ((active1 \u0026 0x8000L) !\u003d 0L)\n-                return jjStopAtPos(1, 79);\n+            if ((active1 \u0026 0x80000L) !\u003d 0L)\n+                return jjStopAtPos(1, 83);\n             break;\n         case 47:\n-            if ((active0 \u0026 0x8L) !\u003d 0L)\n-                return jjStopAtPos(1, 3);\n+            if ((active0 \u0026 0x80L) !\u003d 0L)\n+                return jjStopAtPos(1, 7);\n             break;\n         case 61:\n-            if ((active0 \u0026 0x100L) !\u003d 0L)\n-                return jjStopAtPos(1, 8);\n-            else if ((active0 \u0026 0x400L) !\u003d 0L)\n-                return jjStopAtPos(1, 10);\n-            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n+            if ((active0 \u0026 0x1000L) !\u003d 0L)\n                 return jjStopAtPos(1, 12);\n+            else if ((active0 \u0026 0x4000L) !\u003d 0L)\n+                return jjStopAtPos(1, 14);\n+            else if ((active0 \u0026 0x10000L) !\u003d 0L)\n+                return jjStopAtPos(1, 16);\n             break;\n         case 97:\n-            return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n+            return jjMoveStringLiteralDfa2_0(active0, 0xc1012000000000L, active1, 0xa0L);\n         case 100:\n-            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(1, 47, 13);\n+            if ((active0 \u0026 0x8000000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(1, 51, 12);\n             break;\n         case 101:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x10880900000000L, active1, 0x800L);\n         case 104:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);\n         case 105:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);\n         case 108:\n-            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);\n         case 110:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x104010000000L, active1, 0L);\n         case 111:\n-            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x300L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0xa262402a0000000L, active1, 0x300dL);\n         case 114:\n-            if ((active0 \u0026 0x800000L) !\u003d 0L)\n-                return jjStartNfaWithStates_0(1, 23, 13);\n-            return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n+            if ((active0 \u0026 0x8000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(1, 27, 12);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x420400000000L, active1, 0x12L);\n         case 116:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x8500008000000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x7000000000000000L, active1, 0x340L);\n         default:\n             break;\n     }\n     return jjStartNfa_0(0, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Ybodychange",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 230.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 \u0026 0x8000L) !\u003d 0L)\n                return jjStopAtPos(1, 79);\n            break;\n        case 47:\n            if ((active0 \u0026 0x8L) !\u003d 0L)\n                return jjStopAtPos(1, 3);\n            break;\n        case 61:\n            if ((active0 \u0026 0x100L) !\u003d 0L)\n                return jjStopAtPos(1, 8);\n            else if ((active0 \u0026 0x400L) !\u003d 0L)\n                return jjStopAtPos(1, 10);\n            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 12);\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n        case 100:\n            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 47, 13);\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x300L);\n        case 114:\n            if ((active0 \u0026 0x800000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 23, 13);\n            return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 480,
      "functionName": "jjMoveStringLiteralDfa1_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,55 +1,55 @@\n private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(0, active0, active1);\n         return 1;\n     }\n     switch(curChar) {\n         case 46:\n-            if ((active1 \u0026 0x4000L) !\u003d 0L)\n-                return jjStopAtPos(1, 78);\n+            if ((active1 \u0026 0x8000L) !\u003d 0L)\n+                return jjStopAtPos(1, 79);\n             break;\n         case 47:\n             if ((active0 \u0026 0x8L) !\u003d 0L)\n                 return jjStopAtPos(1, 3);\n             break;\n         case 61:\n             if ((active0 \u0026 0x100L) !\u003d 0L)\n                 return jjStopAtPos(1, 8);\n             else if ((active0 \u0026 0x400L) !\u003d 0L)\n                 return jjStopAtPos(1, 10);\n             else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                 return jjStopAtPos(1, 12);\n             break;\n         case 97:\n             return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n         case 100:\n             if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 47, 13);\n             break;\n         case 101:\n             return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n         case 104:\n             return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n         case 105:\n             return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n         case 108:\n             return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n         case 110:\n             return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n         case 111:\n-            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x100L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x300L);\n         case 114:\n             if ((active0 \u0026 0x800000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 23, 13);\n             return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n         case 116:\n             return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n         case 117:\n             return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n         default:\n             break;\n     }\n     return jjStartNfa_0(0, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "632e72228ad994efa19c0a9ae84923718f259cdf": {
      "type": "Ybodychange",
      "commitMessage": "Added support for id() and key()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/02, 3:47 PM",
      "commitName": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 259.98,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 \u0026 0x4000L) !\u003d 0L)\n                return jjStopAtPos(1, 78);\n            break;\n        case 47:\n            if ((active0 \u0026 0x8L) !\u003d 0L)\n                return jjStopAtPos(1, 3);\n            break;\n        case 61:\n            if ((active0 \u0026 0x100L) !\u003d 0L)\n                return jjStopAtPos(1, 8);\n            else if ((active0 \u0026 0x400L) !\u003d 0L)\n                return jjStopAtPos(1, 10);\n            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 12);\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n        case 100:\n            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 47, 13);\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x100L);\n        case 114:\n            if ((active0 \u0026 0x800000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 23, 13);\n            return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 478,
      "functionName": "jjMoveStringLiteralDfa1_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,55 +1,55 @@\n private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(0, active0, active1);\n         return 1;\n     }\n     switch(curChar) {\n         case 46:\n-            if ((active1 \u0026 0x2000L) !\u003d 0L)\n-                return jjStopAtPos(1, 77);\n+            if ((active1 \u0026 0x4000L) !\u003d 0L)\n+                return jjStopAtPos(1, 78);\n             break;\n         case 47:\n             if ((active0 \u0026 0x8L) !\u003d 0L)\n                 return jjStopAtPos(1, 3);\n             break;\n         case 61:\n             if ((active0 \u0026 0x100L) !\u003d 0L)\n                 return jjStopAtPos(1, 8);\n             else if ((active0 \u0026 0x400L) !\u003d 0L)\n                 return jjStopAtPos(1, 10);\n             else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                 return jjStopAtPos(1, 12);\n             break;\n         case 97:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x5L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0xc101200000000L, active1, 0xaL);\n         case 100:\n             if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 47, 13);\n             break;\n         case 101:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x1088090000000L, active1, 0x80L);\n         case 104:\n             return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n         case 105:\n             return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n         case 108:\n-            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);\n         case 110:\n             return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n         case 111:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x80L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0xd0a262402a000000L, active1, 0x100L);\n         case 114:\n             if ((active0 \u0026 0x800000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 23, 13);\n-            return jjMoveStringLiteralDfa2_0(active0, 0x9000042040000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x2000042040000000L, active1, 0x1L);\n         case 116:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x428000800000000L, active1, 0L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x850000800000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0x1aL);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x700000000000000L, active1, 0x34L);\n         default:\n             break;\n     }\n     return jjStartNfa_0(0, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 29.94,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 \u0026 0x2000L) !\u003d 0L)\n                return jjStopAtPos(1, 77);\n            break;\n        case 47:\n            if ((active0 \u0026 0x8L) !\u003d 0L)\n                return jjStopAtPos(1, 3);\n            break;\n        case 61:\n            if ((active0 \u0026 0x100L) !\u003d 0L)\n                return jjStopAtPos(1, 8);\n            else if ((active0 \u0026 0x400L) !\u003d 0L)\n                return jjStopAtPos(1, 10);\n            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 12);\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x5L);\n        case 100:\n            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 47, 13);\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x40L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x80L);\n        case 114:\n            if ((active0 \u0026 0x800000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 23, 13);\n            return jjMoveStringLiteralDfa2_0(active0, 0x9000042040000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x428000800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0x1aL);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 476,
      "functionName": "jjMoveStringLiteralDfa1_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,55 +1,55 @@\n private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n     try {\n         curChar \u003d input_stream.readChar();\n     } catch (java.io.IOException e) {\n         jjStopStringLiteralDfa_0(0, active0, active1);\n         return 1;\n     }\n     switch(curChar) {\n         case 46:\n-            if ((active1 \u0026 0x1000L) !\u003d 0L)\n-                return jjStopAtPos(1, 76);\n+            if ((active1 \u0026 0x2000L) !\u003d 0L)\n+                return jjStopAtPos(1, 77);\n             break;\n         case 47:\n             if ((active0 \u0026 0x8L) !\u003d 0L)\n                 return jjStopAtPos(1, 3);\n             break;\n         case 61:\n             if ((active0 \u0026 0x100L) !\u003d 0L)\n                 return jjStopAtPos(1, 8);\n             else if ((active0 \u0026 0x400L) !\u003d 0L)\n                 return jjStopAtPos(1, 10);\n             else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                 return jjStopAtPos(1, 12);\n             break;\n         case 97:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x3L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x5L);\n         case 100:\n             if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 47, 13);\n             break;\n         case 101:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x20L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x40L);\n         case 104:\n             return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n         case 105:\n             return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n         case 108:\n-            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20L);\n         case 110:\n             return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n         case 111:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x40L);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x80L);\n         case 114:\n             if ((active0 \u0026 0x800000L) !\u003d 0L)\n                 return jjStartNfaWithStates_0(1, 23, 13);\n             return jjMoveStringLiteralDfa2_0(active0, 0x9000042040000000L, active1, 0L);\n         case 116:\n             return jjMoveStringLiteralDfa2_0(active0, 0x428000800000000L, active1, 0L);\n         case 117:\n-            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0xcL);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0x1aL);\n         default:\n             break;\n     }\n     return jjStartNfa_0(0, active0, active1);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,55 @@\n+private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n+    try {\n+        curChar \u003d input_stream.readChar();\n+    } catch (java.io.IOException e) {\n+        jjStopStringLiteralDfa_0(0, active0, active1);\n+        return 1;\n+    }\n+    switch(curChar) {\n+        case 46:\n+            if ((active1 \u0026 0x1000L) !\u003d 0L)\n+                return jjStopAtPos(1, 76);\n+            break;\n+        case 47:\n+            if ((active0 \u0026 0x8L) !\u003d 0L)\n+                return jjStopAtPos(1, 3);\n+            break;\n+        case 61:\n+            if ((active0 \u0026 0x100L) !\u003d 0L)\n+                return jjStopAtPos(1, 8);\n+            else if ((active0 \u0026 0x400L) !\u003d 0L)\n+                return jjStopAtPos(1, 10);\n+            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n+                return jjStopAtPos(1, 12);\n+            break;\n+        case 97:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x3L);\n+        case 100:\n+            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(1, 47, 13);\n+            break;\n+        case 101:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x20L);\n+        case 104:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n+        case 105:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n+        case 108:\n+            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);\n+        case 110:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n+        case 111:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x40L);\n+        case 114:\n+            if ((active0 \u0026 0x800000L) !\u003d 0L)\n+                return jjStartNfaWithStates_0(1, 23, 13);\n+            return jjMoveStringLiteralDfa2_0(active0, 0x9000042040000000L, active1, 0L);\n+        case 116:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x428000800000000L, active1, 0L);\n+        case 117:\n+            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0xcL);\n+        default:\n+            break;\n+    }\n+    return jjStartNfa_0(0, active0, active1);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private final int jjMoveStringLiteralDfa1_0(long active0, long active1) {\n    try {\n        curChar \u003d input_stream.readChar();\n    } catch (java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 76);\n            break;\n        case 47:\n            if ((active0 \u0026 0x8L) !\u003d 0L)\n                return jjStopAtPos(1, 3);\n            break;\n        case 61:\n            if ((active0 \u0026 0x100L) !\u003d 0L)\n                return jjStopAtPos(1, 8);\n            else if ((active0 \u0026 0x400L) !\u003d 0L)\n                return jjStopAtPos(1, 10);\n            else if ((active0 \u0026 0x1000L) !\u003d 0L)\n                return jjStopAtPos(1, 12);\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0x6101200000000L, active1, 0x3L);\n        case 100:\n            if ((active0 \u0026 0x800000000000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 47, 13);\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x88090000000L, active1, 0x20L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x4000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10401000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0x685162402a000000L, active1, 0x40L);\n        case 114:\n            if ((active0 \u0026 0x800000L) !\u003d 0L)\n                return jjStartNfaWithStates_0(1, 23, 13);\n            return jjMoveStringLiteralDfa2_0(active0, 0x9000042040000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x428000800000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0x380000000000000L, active1, 0xcL);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 476,
      "functionName": "jjMoveStringLiteralDfa1_0",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}