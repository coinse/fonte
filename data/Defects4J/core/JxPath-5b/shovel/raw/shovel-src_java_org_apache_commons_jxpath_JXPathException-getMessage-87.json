{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JXPathException.java",
  "functionName": "getMessage",
  "functionId": "getMessage",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/JXPathException.java",
  "functionAnnotation": "",
  "functionDoc": "Return the message (if any) for this error . If there is no\nmessage for the exception and there is an encapsulated\nexception then the message of that exception will be returned.\n\n@return The error message.\n",
  "functionStartLine": 87,
  "functionEndLine": 99,
  "numCommitsSeen": 9,
  "timeTaken": 1250,
  "changeHistory": [
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "34d1c6cad33a94c24e55d456b550302db4914130"
  ],
  "changeHistoryShort": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "public String getMessage() {\n    String message \u003d super.getMessage();\n    if (exception \u003d\u003d null) {\n        return message;\n    }\n    StringBuffer buf \u003d new StringBuffer();\n    if (message \u003d\u003d null) {\n        buf.append(message).append(\"; \");\n    }\n    String eMsg \u003d exception.getMessage();\n    buf.append(eMsg \u003d\u003d null ? exception.getClass().getName() : eMsg);\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathException.java",
      "functionStartLine": 87,
      "functionName": "getMessage",
      "functionAnnotation": "",
      "functionDoc": "Return the message (if any) for this error . If there is no\nmessage for the exception and there is an encapsulated\nexception then the message of that exception will be returned.\n\n@return The error message.\n",
      "diff": "@@ -1,19 +1,13 @@\n public String getMessage() {\n     String message \u003d super.getMessage();\n-    if (exception !\u003d null) {\n-        if (message \u003d\u003d null) {\n-            if (exception.getMessage() !\u003d null) {\n-                return exception.getMessage();\n-            } else {\n-                return exception.getClass().getName();\n-            }\n-        } else {\n-            if (exception.getMessage() !\u003d null) {\n-                return message + \"; \" + exception.getMessage();\n-            } else {\n-                return message + \"; \" + exception.getClass().getName();\n-            }\n-        }\n+    if (exception \u003d\u003d null) {\n+        return message;\n     }\n-    return message;\n+    StringBuffer buf \u003d new StringBuffer();\n+    if (message \u003d\u003d null) {\n+        buf.append(message).append(\"; \");\n+    }\n+    String eMsg \u003d exception.getMessage();\n+    buf.append(eMsg \u003d\u003d null ? exception.getClass().getName() : eMsg);\n+    return buf.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 8:28 PM",
      "commitNameOld": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 260.09,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "actualSource": "public String getMessage() {\n    String message \u003d super.getMessage();\n    if (exception !\u003d null) {\n        if (message \u003d\u003d null) {\n            if (exception.getMessage() !\u003d null) {\n                return exception.getMessage();\n            } else {\n                return exception.getClass().getName();\n            }\n        } else {\n            if (exception.getMessage() !\u003d null) {\n                return message + \"; \" + exception.getMessage();\n            } else {\n                return message + \"; \" + exception.getClass().getName();\n            }\n        }\n    }\n    return message;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathException.java",
      "functionStartLine": 131,
      "functionName": "getMessage",
      "functionAnnotation": "",
      "functionDoc": "Return the message (if any) for this error . If there is no\nmessage for the exception and there is an encapsulated\nexception then the message of that exception will be returned.\n\n@return The error message.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Yintroduced",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,19 @@\n+public String getMessage() {\n+    String message \u003d super.getMessage();\n+    if (exception !\u003d null) {\n+        if (message \u003d\u003d null) {\n+            if (exception.getMessage() !\u003d null) {\n+                return exception.getMessage();\n+            } else {\n+                return exception.getClass().getName();\n+            }\n+        } else {\n+            if (exception.getMessage() !\u003d null) {\n+                return message + \"; \" + exception.getMessage();\n+            } else {\n+                return message + \"; \" + exception.getClass().getName();\n+            }\n+        }\n+    }\n+    return message;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String getMessage() {\n    String message \u003d super.getMessage();\n    if (exception !\u003d null) {\n        if (message \u003d\u003d null) {\n            if (exception.getMessage() !\u003d null) {\n                return exception.getMessage();\n            } else {\n                return exception.getClass().getName();\n            }\n        } else {\n            if (exception.getMessage() !\u003d null) {\n                return message + \"; \" + exception.getMessage();\n            } else {\n                return message + \"; \" + exception.getClass().getName();\n            }\n        }\n    }\n    return message;\n}",
      "path": "src/java/org/apache/commons/jxpath/JXPathException.java",
      "functionStartLine": 131,
      "functionName": "getMessage",
      "functionAnnotation": "",
      "functionDoc": "Return the message (if any) for this error . If there is no\nmessage for the exception and there is an encapsulated\nexception then the message of that exception will be returned.\n\n@return The error message.\n"
    }
  }
}