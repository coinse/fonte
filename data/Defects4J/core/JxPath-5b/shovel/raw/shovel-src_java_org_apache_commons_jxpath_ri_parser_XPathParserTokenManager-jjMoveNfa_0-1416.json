{
  "origin": "codeshovel",
  "repositoryName": "JxPath-5b",
  "repositoryPath": "/tmp/JxPath-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XPathParserTokenManager.java",
  "functionName": "jjMoveNfa_0",
  "functionId": "jjMoveNfa_0___startState-int__curPos-int",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1416,
  "functionEndLine": 1586,
  "numCommitsSeen": 6,
  "timeTaken": 857,
  "changeHistory": [
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44",
    "632e72228ad994efa19c0a9ae84923718f259cdf",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
    "bc53a66311b9b22e471dd74860c7df75eebe9837"
  ],
  "changeHistoryShort": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": "Ybodychange",
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": "Ybodychange",
    "632e72228ad994efa19c0a9ae84923718f259cdf": "Ybodychange",
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": "Ybodychange",
    "bc53a66311b9b22e471dd74860c7df75eebe9837": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06": {
      "type": "Ybodychange",
      "commitMessage": "Optimized parser by using SKIP instead of SPECIAL_CHARACTER\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/24/03, 6:28 PM",
      "commitName": "5bbe586b1063ebafc02e20ca0b6b47465c9b9f06",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "1/24/03, 5:49 PM",
      "commitNameOld": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 59.03,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveNfa_0(int startState, int curPos) {\n    int[] nextStates;\n    int startsAt \u003d 0;\n    jjnewStateCnt \u003d 13;\n    int i \u003d 1;\n    jjstateSet[0] \u003d startState;\n    int j, kind \u003d 0x7fffffff;\n    for (; ; ) {\n        if (++jjround \u003d\u003d 0x7fffffff)\n            ReInitRounds();\n        if (curChar \u003c 64) {\n            long l \u003d 1L \u003c\u003c curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 20)\n                                kind \u003d 20;\n                            jjCheckNAddTwoStates(6, 7);\n                        } else if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(10);\n                        else if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(4, 5);\n                        else if (curChar \u003d\u003d 34)\n                            jjCheckNAddTwoStates(1, 2);\n                        break;\n                    case 1:\n                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(1, 2);\n                        break;\n                    case 2:\n                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 18)\n                            kind \u003d 18;\n                        break;\n                    case 3:\n                        if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(4, 5);\n                        break;\n                    case 4:\n                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(4, 5);\n                        break;\n                    case 5:\n                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 18)\n                            kind \u003d 18;\n                        break;\n                    case 6:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 20)\n                            kind \u003d 20;\n                        jjCheckNAddTwoStates(6, 7);\n                        break;\n                    case 7:\n                        if (curChar !\u003d 46)\n                            break;\n                        if (kind \u003e 20)\n                            kind \u003d 20;\n                        jjCheckNAdd(8);\n                        break;\n                    case 8:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 20)\n                            kind \u003d 20;\n                        jjCheckNAdd(8);\n                        break;\n                    case 9:\n                        if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(10);\n                        break;\n                    case 10:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 20)\n                            kind \u003d 20;\n                        jjCheckNAdd(10);\n                        break;\n                    case 12:\n                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 78)\n                            kind \u003d 78;\n                        jjstateSet[jjnewStateCnt++] \u003d 12;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else if (curChar \u003c 128) {\n            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                    case 12:\n                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 78)\n                            kind \u003d 78;\n                        jjCheckNAdd(12);\n                        break;\n                    case 1:\n                        jjAddStates(0, 1);\n                        break;\n                    case 4:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else {\n            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n            int i1 \u003d hiByte \u003e\u003e 6;\n            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 78)\n                            kind \u003d 78;\n                        jjCheckNAdd(12);\n                        break;\n                    case 1:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(0, 1);\n                        break;\n                    case 4:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(2, 3);\n                        break;\n                    case 12:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 78)\n                            kind \u003d 78;\n                        jjCheckNAdd(12);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        }\n        if (kind !\u003d 0x7fffffff) {\n            jjmatchedKind \u003d kind;\n            jjmatchedPos \u003d curPos;\n            kind \u003d 0x7fffffff;\n        }\n        ++curPos;\n        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 13 - (jjnewStateCnt \u003d startsAt)))\n            return curPos;\n        try {\n            curChar \u003d input_stream.readChar();\n        } catch (java.io.IOException e) {\n            return curPos;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 1416,
      "functionName": "jjMoveNfa_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,172 +1,161 @@\n private final int jjMoveNfa_0(int startState, int curPos) {\n     int[] nextStates;\n     int startsAt \u003d 0;\n-    jjnewStateCnt \u003d 14;\n+    jjnewStateCnt \u003d 13;\n     int i \u003d 1;\n     jjstateSet[0] \u003d startState;\n     int j, kind \u003d 0x7fffffff;\n     for (; ; ) {\n         if (++jjround \u003d\u003d 0x7fffffff)\n             ReInitRounds();\n         if (curChar \u003c 64) {\n             long l \u003d 1L \u003c\u003c curChar;\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n-                    case 1:\n-                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n-                            if (kind \u003e 16)\n-                                kind \u003d 16;\n-                            jjCheckNAddTwoStates(7, 8);\n-                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n-                            if (kind \u003e 1)\n-                                kind \u003d 1;\n-                            jjCheckNAdd(0);\n-                        } else if (curChar \u003d\u003d 46)\n-                            jjCheckNAdd(11);\n-                        else if (curChar \u003d\u003d 39)\n-                            jjCheckNAddTwoStates(5, 6);\n-                        else if (curChar \u003d\u003d 34)\n-                            jjCheckNAddTwoStates(2, 3);\n-                        break;\n                     case 0:\n-                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n-                            break;\n-                        if (kind \u003e 1)\n-                            kind \u003d 1;\n-                        jjCheckNAdd(0);\n+                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n+                            if (kind \u003e 20)\n+                                kind \u003d 20;\n+                            jjCheckNAddTwoStates(6, 7);\n+                        } else if (curChar \u003d\u003d 46)\n+                            jjCheckNAdd(10);\n+                        else if (curChar \u003d\u003d 39)\n+                            jjCheckNAddTwoStates(4, 5);\n+                        else if (curChar \u003d\u003d 34)\n+                            jjCheckNAddTwoStates(1, 2);\n+                        break;\n+                    case 1:\n+                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n+                            jjCheckNAddTwoStates(1, 2);\n                         break;\n                     case 2:\n-                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n-                            jjCheckNAddTwoStates(2, 3);\n+                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 18)\n+                            kind \u003d 18;\n                         break;\n                     case 3:\n-                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n-                            kind \u003d 14;\n+                        if (curChar \u003d\u003d 39)\n+                            jjCheckNAddTwoStates(4, 5);\n                         break;\n                     case 4:\n-                        if (curChar \u003d\u003d 39)\n-                            jjCheckNAddTwoStates(5, 6);\n+                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n+                            jjCheckNAddTwoStates(4, 5);\n                         break;\n                     case 5:\n-                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n-                            jjCheckNAddTwoStates(5, 6);\n+                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 18)\n+                            kind \u003d 18;\n                         break;\n                     case 6:\n-                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n-                            kind \u003d 14;\n+                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 20)\n+                            kind \u003d 20;\n+                        jjCheckNAddTwoStates(6, 7);\n                         break;\n                     case 7:\n-                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n-                            break;\n-                        if (kind \u003e 16)\n-                            kind \u003d 16;\n-                        jjCheckNAddTwoStates(7, 8);\n-                        break;\n-                    case 8:\n                         if (curChar !\u003d 46)\n                             break;\n-                        if (kind \u003e 16)\n-                            kind \u003d 16;\n-                        jjCheckNAdd(9);\n+                        if (kind \u003e 20)\n+                            kind \u003d 20;\n+                        jjCheckNAdd(8);\n+                        break;\n+                    case 8:\n+                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 20)\n+                            kind \u003d 20;\n+                        jjCheckNAdd(8);\n                         break;\n                     case 9:\n-                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n-                            break;\n-                        if (kind \u003e 16)\n-                            kind \u003d 16;\n-                        jjCheckNAdd(9);\n+                        if (curChar \u003d\u003d 46)\n+                            jjCheckNAdd(10);\n                         break;\n                     case 10:\n-                        if (curChar \u003d\u003d 46)\n-                            jjCheckNAdd(11);\n-                        break;\n-                    case 11:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 16)\n-                            kind \u003d 16;\n-                        jjCheckNAdd(11);\n+                        if (kind \u003e 20)\n+                            kind \u003d 20;\n+                        jjCheckNAdd(10);\n                         break;\n-                    case 13:\n+                    case 12:\n                         if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 74)\n-                            kind \u003d 74;\n-                        jjstateSet[jjnewStateCnt++] \u003d 13;\n+                        if (kind \u003e 78)\n+                            kind \u003d 78;\n+                        jjstateSet[jjnewStateCnt++] \u003d 12;\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else if (curChar \u003c 128) {\n             long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n-                    case 1:\n-                    case 13:\n+                    case 0:\n+                    case 12:\n                         if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 74)\n-                            kind \u003d 74;\n-                        jjCheckNAdd(13);\n+                        if (kind \u003e 78)\n+                            kind \u003d 78;\n+                        jjCheckNAdd(12);\n                         break;\n-                    case 2:\n+                    case 1:\n                         jjAddStates(0, 1);\n                         break;\n-                    case 5:\n+                    case 4:\n                         jjAddStates(2, 3);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else {\n             int hiByte \u003d (int) (curChar \u003e\u003e 8);\n             int i1 \u003d hiByte \u003e\u003e 6;\n             long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n             int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n             long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n-                    case 1:\n+                    case 0:\n                         if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 74)\n-                            kind \u003d 74;\n-                        jjCheckNAdd(13);\n+                        if (kind \u003e 78)\n+                            kind \u003d 78;\n+                        jjCheckNAdd(12);\n                         break;\n-                    case 2:\n+                    case 1:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(0, 1);\n                         break;\n-                    case 5:\n+                    case 4:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(2, 3);\n                         break;\n-                    case 13:\n+                    case 12:\n                         if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 74)\n-                            kind \u003d 74;\n-                        jjCheckNAdd(13);\n+                        if (kind \u003e 78)\n+                            kind \u003d 78;\n+                        jjCheckNAdd(12);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         }\n         if (kind !\u003d 0x7fffffff) {\n             jjmatchedKind \u003d kind;\n             jjmatchedPos \u003d curPos;\n             kind \u003d 0x7fffffff;\n         }\n         ++curPos;\n-        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n+        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 13 - (jjnewStateCnt \u003d startsAt)))\n             return curPos;\n         try {\n             curChar \u003d input_stream.readChar();\n         } catch (java.io.IOException e) {\n             return curPos;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5a284c0486a8b2a4289605939074cc6ddf9df44": {
      "type": "Ybodychange",
      "commitMessage": "Upgraded to JavaCC 2.1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/03, 5:49 PM",
      "commitName": "e5a284c0486a8b2a4289605939074cc6ddf9df44",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "6/8/02, 3:47 PM",
      "commitNameOld": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 230.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveNfa_0(int startState, int curPos) {\n    int[] nextStates;\n    int startsAt \u003d 0;\n    jjnewStateCnt \u003d 14;\n    int i \u003d 1;\n    jjstateSet[0] \u003d startState;\n    int j, kind \u003d 0x7fffffff;\n    for (; ; ) {\n        if (++jjround \u003d\u003d 0x7fffffff)\n            ReInitRounds();\n        if (curChar \u003c 64) {\n            long l \u003d 1L \u003c\u003c curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 16)\n                                kind \u003d 16;\n                            jjCheckNAddTwoStates(7, 8);\n                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 1)\n                                kind \u003d 1;\n                            jjCheckNAdd(0);\n                        } else if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        else if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        else if (curChar \u003d\u003d 34)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 0:\n                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 1)\n                            kind \u003d 1;\n                        jjCheckNAdd(0);\n                        break;\n                    case 2:\n                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 3:\n                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 4:\n                        if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 5:\n                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 6:\n                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 7:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAddTwoStates(7, 8);\n                        break;\n                    case 8:\n                        if (curChar !\u003d 46)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 9:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 10:\n                        if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        break;\n                    case 11:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(11);\n                        break;\n                    case 13:\n                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 74)\n                            kind \u003d 74;\n                        jjstateSet[jjnewStateCnt++] \u003d 13;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else if (curChar \u003c 128) {\n            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                    case 13:\n                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 74)\n                            kind \u003d 74;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else {\n            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n            int i1 \u003d hiByte \u003e\u003e 6;\n            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 74)\n                            kind \u003d 74;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(2, 3);\n                        break;\n                    case 13:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 74)\n                            kind \u003d 74;\n                        jjCheckNAdd(13);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        }\n        if (kind !\u003d 0x7fffffff) {\n            jjmatchedKind \u003d kind;\n            jjmatchedPos \u003d curPos;\n            kind \u003d 0x7fffffff;\n        }\n        ++curPos;\n        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n            return curPos;\n        try {\n            curChar \u003d input_stream.readChar();\n        } catch (java.io.IOException e) {\n            return curPos;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 1416,
      "functionName": "jjMoveNfa_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,172 +1,172 @@\n private final int jjMoveNfa_0(int startState, int curPos) {\n     int[] nextStates;\n     int startsAt \u003d 0;\n     jjnewStateCnt \u003d 14;\n     int i \u003d 1;\n     jjstateSet[0] \u003d startState;\n     int j, kind \u003d 0x7fffffff;\n     for (; ; ) {\n         if (++jjround \u003d\u003d 0x7fffffff)\n             ReInitRounds();\n         if (curChar \u003c 64) {\n             long l \u003d 1L \u003c\u003c curChar;\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 16)\n                                 kind \u003d 16;\n                             jjCheckNAddTwoStates(7, 8);\n                         } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 1)\n                                 kind \u003d 1;\n                             jjCheckNAdd(0);\n                         } else if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         else if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         else if (curChar \u003d\u003d 34)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 0:\n                         if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 1)\n                             kind \u003d 1;\n                         jjCheckNAdd(0);\n                         break;\n                     case 2:\n                         if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 3:\n                         if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 4:\n                         if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 5:\n                         if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 6:\n                         if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 7:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAddTwoStates(7, 8);\n                         break;\n                     case 8:\n                         if (curChar !\u003d 46)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 9:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 10:\n                         if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         break;\n                     case 11:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(11);\n                         break;\n                     case 13:\n                         if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 73)\n-                            kind \u003d 73;\n+                        if (kind \u003e 74)\n+                            kind \u003d 74;\n                         jjstateSet[jjnewStateCnt++] \u003d 13;\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else if (curChar \u003c 128) {\n             long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                     case 13:\n                         if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 73)\n-                            kind \u003d 73;\n+                        if (kind \u003e 74)\n+                            kind \u003d 74;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         jjAddStates(2, 3);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else {\n             int hiByte \u003d (int) (curChar \u003e\u003e 8);\n             int i1 \u003d hiByte \u003e\u003e 6;\n             long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n             int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n             long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 73)\n-                            kind \u003d 73;\n+                        if (kind \u003e 74)\n+                            kind \u003d 74;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(2, 3);\n                         break;\n                     case 13:\n                         if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 73)\n-                            kind \u003d 73;\n+                        if (kind \u003e 74)\n+                            kind \u003d 74;\n                         jjCheckNAdd(13);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         }\n         if (kind !\u003d 0x7fffffff) {\n             jjmatchedKind \u003d kind;\n             jjmatchedPos \u003d curPos;\n             kind \u003d 0x7fffffff;\n         }\n         ++curPos;\n         if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n             return curPos;\n         try {\n             curChar \u003d input_stream.readChar();\n         } catch (java.io.IOException e) {\n             return curPos;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "632e72228ad994efa19c0a9ae84923718f259cdf": {
      "type": "Ybodychange",
      "commitMessage": "Added support for id() and key()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/02, 3:47 PM",
      "commitName": "632e72228ad994efa19c0a9ae84923718f259cdf",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/21/01, 4:22 PM",
      "commitNameOld": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 259.98,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveNfa_0(int startState, int curPos) {\n    int[] nextStates;\n    int startsAt \u003d 0;\n    jjnewStateCnt \u003d 14;\n    int i \u003d 1;\n    jjstateSet[0] \u003d startState;\n    int j, kind \u003d 0x7fffffff;\n    for (; ; ) {\n        if (++jjround \u003d\u003d 0x7fffffff)\n            ReInitRounds();\n        if (curChar \u003c 64) {\n            long l \u003d 1L \u003c\u003c curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 16)\n                                kind \u003d 16;\n                            jjCheckNAddTwoStates(7, 8);\n                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 1)\n                                kind \u003d 1;\n                            jjCheckNAdd(0);\n                        } else if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        else if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        else if (curChar \u003d\u003d 34)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 0:\n                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 1)\n                            kind \u003d 1;\n                        jjCheckNAdd(0);\n                        break;\n                    case 2:\n                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 3:\n                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 4:\n                        if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 5:\n                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 6:\n                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 7:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAddTwoStates(7, 8);\n                        break;\n                    case 8:\n                        if (curChar !\u003d 46)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 9:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 10:\n                        if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        break;\n                    case 11:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(11);\n                        break;\n                    case 13:\n                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 73)\n                            kind \u003d 73;\n                        jjstateSet[jjnewStateCnt++] \u003d 13;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else if (curChar \u003c 128) {\n            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                    case 13:\n                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 73)\n                            kind \u003d 73;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else {\n            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n            int i1 \u003d hiByte \u003e\u003e 6;\n            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 73)\n                            kind \u003d 73;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(2, 3);\n                        break;\n                    case 13:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 73)\n                            kind \u003d 73;\n                        jjCheckNAdd(13);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        }\n        if (kind !\u003d 0x7fffffff) {\n            jjmatchedKind \u003d kind;\n            jjmatchedPos \u003d curPos;\n            kind \u003d 0x7fffffff;\n        }\n        ++curPos;\n        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n            return curPos;\n        try {\n            curChar \u003d input_stream.readChar();\n        } catch (java.io.IOException e) {\n            return curPos;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 1408,
      "functionName": "jjMoveNfa_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,172 +1,172 @@\n private final int jjMoveNfa_0(int startState, int curPos) {\n     int[] nextStates;\n     int startsAt \u003d 0;\n     jjnewStateCnt \u003d 14;\n     int i \u003d 1;\n     jjstateSet[0] \u003d startState;\n     int j, kind \u003d 0x7fffffff;\n     for (; ; ) {\n         if (++jjround \u003d\u003d 0x7fffffff)\n             ReInitRounds();\n         if (curChar \u003c 64) {\n             long l \u003d 1L \u003c\u003c curChar;\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 16)\n                                 kind \u003d 16;\n                             jjCheckNAddTwoStates(7, 8);\n                         } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 1)\n                                 kind \u003d 1;\n                             jjCheckNAdd(0);\n                         } else if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         else if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         else if (curChar \u003d\u003d 34)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 0:\n                         if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 1)\n                             kind \u003d 1;\n                         jjCheckNAdd(0);\n                         break;\n                     case 2:\n                         if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 3:\n                         if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 4:\n                         if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 5:\n                         if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 6:\n                         if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 7:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAddTwoStates(7, 8);\n                         break;\n                     case 8:\n                         if (curChar !\u003d 46)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 9:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 10:\n                         if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         break;\n                     case 11:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(11);\n                         break;\n                     case 13:\n                         if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 72)\n-                            kind \u003d 72;\n+                        if (kind \u003e 73)\n+                            kind \u003d 73;\n                         jjstateSet[jjnewStateCnt++] \u003d 13;\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else if (curChar \u003c 128) {\n             long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                     case 13:\n                         if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 72)\n-                            kind \u003d 72;\n+                        if (kind \u003e 73)\n+                            kind \u003d 73;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         jjAddStates(2, 3);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else {\n             int hiByte \u003d (int) (curChar \u003e\u003e 8);\n             int i1 \u003d hiByte \u003e\u003e 6;\n             long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n             int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n             long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 72)\n-                            kind \u003d 72;\n+                        if (kind \u003e 73)\n+                            kind \u003d 73;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(2, 3);\n                         break;\n                     case 13:\n                         if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 72)\n-                            kind \u003d 72;\n+                        if (kind \u003e 73)\n+                            kind \u003d 73;\n                         jjCheckNAdd(13);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         }\n         if (kind !\u003d 0x7fffffff) {\n             jjmatchedKind \u003d kind;\n             jjmatchedPos \u003d curPos;\n             kind \u003d 0x7fffffff;\n         }\n         ++curPos;\n         if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n             return curPos;\n         try {\n             curChar \u003d input_stream.readChar();\n         } catch (java.io.IOException e) {\n             return curPos;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7048cacf72013ed3dcac2b60755aad10cb8bb2b9": {
      "type": "Ybodychange",
      "commitMessage": "Support for namespaces, implementation clean-up\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/21/01, 4:22 PM",
      "commitName": "7048cacf72013ed3dcac2b60755aad10cb8bb2b9",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/22/01, 5:47 PM",
      "commitNameOld": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 29.94,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int jjMoveNfa_0(int startState, int curPos) {\n    int[] nextStates;\n    int startsAt \u003d 0;\n    jjnewStateCnt \u003d 14;\n    int i \u003d 1;\n    jjstateSet[0] \u003d startState;\n    int j, kind \u003d 0x7fffffff;\n    for (; ; ) {\n        if (++jjround \u003d\u003d 0x7fffffff)\n            ReInitRounds();\n        if (curChar \u003c 64) {\n            long l \u003d 1L \u003c\u003c curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 16)\n                                kind \u003d 16;\n                            jjCheckNAddTwoStates(7, 8);\n                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 1)\n                                kind \u003d 1;\n                            jjCheckNAdd(0);\n                        } else if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        else if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        else if (curChar \u003d\u003d 34)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 0:\n                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 1)\n                            kind \u003d 1;\n                        jjCheckNAdd(0);\n                        break;\n                    case 2:\n                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 3:\n                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 4:\n                        if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 5:\n                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 6:\n                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 7:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAddTwoStates(7, 8);\n                        break;\n                    case 8:\n                        if (curChar !\u003d 46)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 9:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 10:\n                        if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        break;\n                    case 11:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(11);\n                        break;\n                    case 13:\n                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 72)\n                            kind \u003d 72;\n                        jjstateSet[jjnewStateCnt++] \u003d 13;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else if (curChar \u003c 128) {\n            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                    case 13:\n                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 72)\n                            kind \u003d 72;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else {\n            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n            int i1 \u003d hiByte \u003e\u003e 6;\n            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 72)\n                            kind \u003d 72;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(2, 3);\n                        break;\n                    case 13:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 72)\n                            kind \u003d 72;\n                        jjCheckNAdd(13);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        }\n        if (kind !\u003d 0x7fffffff) {\n            jjmatchedKind \u003d kind;\n            jjmatchedPos \u003d curPos;\n            kind \u003d 0x7fffffff;\n        }\n        ++curPos;\n        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n            return curPos;\n        try {\n            curChar \u003d input_stream.readChar();\n        } catch (java.io.IOException e) {\n            return curPos;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 1402,
      "functionName": "jjMoveNfa_0",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,172 +1,172 @@\n private final int jjMoveNfa_0(int startState, int curPos) {\n     int[] nextStates;\n     int startsAt \u003d 0;\n     jjnewStateCnt \u003d 14;\n     int i \u003d 1;\n     jjstateSet[0] \u003d startState;\n     int j, kind \u003d 0x7fffffff;\n     for (; ; ) {\n         if (++jjround \u003d\u003d 0x7fffffff)\n             ReInitRounds();\n         if (curChar \u003c 64) {\n             long l \u003d 1L \u003c\u003c curChar;\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 16)\n                                 kind \u003d 16;\n                             jjCheckNAddTwoStates(7, 8);\n                         } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                             if (kind \u003e 1)\n                                 kind \u003d 1;\n                             jjCheckNAdd(0);\n                         } else if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         else if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         else if (curChar \u003d\u003d 34)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 0:\n                         if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 1)\n                             kind \u003d 1;\n                         jjCheckNAdd(0);\n                         break;\n                     case 2:\n                         if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(2, 3);\n                         break;\n                     case 3:\n                         if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 4:\n                         if (curChar \u003d\u003d 39)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 5:\n                         if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                             jjCheckNAddTwoStates(5, 6);\n                         break;\n                     case 6:\n                         if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                             kind \u003d 14;\n                         break;\n                     case 7:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAddTwoStates(7, 8);\n                         break;\n                     case 8:\n                         if (curChar !\u003d 46)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 9:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(9);\n                         break;\n                     case 10:\n                         if (curChar \u003d\u003d 46)\n                             jjCheckNAdd(11);\n                         break;\n                     case 11:\n                         if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n                         if (kind \u003e 16)\n                             kind \u003d 16;\n                         jjCheckNAdd(11);\n                         break;\n                     case 13:\n                         if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 71)\n-                            kind \u003d 71;\n+                        if (kind \u003e 72)\n+                            kind \u003d 72;\n                         jjstateSet[jjnewStateCnt++] \u003d 13;\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else if (curChar \u003c 128) {\n             long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                     case 13:\n                         if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                             break;\n-                        if (kind \u003e 71)\n-                            kind \u003d 71;\n+                        if (kind \u003e 72)\n+                            kind \u003d 72;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         jjAddStates(2, 3);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         } else {\n             int hiByte \u003d (int) (curChar \u003e\u003e 8);\n             int i1 \u003d hiByte \u003e\u003e 6;\n             long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n             int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n             long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n             MatchLoop: do {\n                 switch(jjstateSet[--i]) {\n                     case 1:\n                         if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 71)\n-                            kind \u003d 71;\n+                        if (kind \u003e 72)\n+                            kind \u003d 72;\n                         jjCheckNAdd(13);\n                         break;\n                     case 2:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(0, 1);\n                         break;\n                     case 5:\n                         if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                             jjAddStates(2, 3);\n                         break;\n                     case 13:\n                         if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                             break;\n-                        if (kind \u003e 71)\n-                            kind \u003d 71;\n+                        if (kind \u003e 72)\n+                            kind \u003d 72;\n                         jjCheckNAdd(13);\n                         break;\n                     default:\n                         break;\n                 }\n             } while (i !\u003d startsAt);\n         }\n         if (kind !\u003d 0x7fffffff) {\n             jjmatchedKind \u003d kind;\n             jjmatchedPos \u003d curPos;\n             kind \u003d 0x7fffffff;\n         }\n         ++curPos;\n         if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n             return curPos;\n         try {\n             curChar \u003d input_stream.readChar();\n         } catch (java.io.IOException e) {\n             return curPos;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc53a66311b9b22e471dd74860c7df75eebe9837": {
      "type": "Yintroduced",
      "commitMessage": "Initial submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/01, 5:47 PM",
      "commitName": "bc53a66311b9b22e471dd74860c7df75eebe9837",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,172 @@\n+private final int jjMoveNfa_0(int startState, int curPos) {\n+    int[] nextStates;\n+    int startsAt \u003d 0;\n+    jjnewStateCnt \u003d 14;\n+    int i \u003d 1;\n+    jjstateSet[0] \u003d startState;\n+    int j, kind \u003d 0x7fffffff;\n+    for (; ; ) {\n+        if (++jjround \u003d\u003d 0x7fffffff)\n+            ReInitRounds();\n+        if (curChar \u003c 64) {\n+            long l \u003d 1L \u003c\u003c curChar;\n+            MatchLoop: do {\n+                switch(jjstateSet[--i]) {\n+                    case 1:\n+                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n+                            if (kind \u003e 16)\n+                                kind \u003d 16;\n+                            jjCheckNAddTwoStates(7, 8);\n+                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n+                            if (kind \u003e 1)\n+                                kind \u003d 1;\n+                            jjCheckNAdd(0);\n+                        } else if (curChar \u003d\u003d 46)\n+                            jjCheckNAdd(11);\n+                        else if (curChar \u003d\u003d 39)\n+                            jjCheckNAddTwoStates(5, 6);\n+                        else if (curChar \u003d\u003d 34)\n+                            jjCheckNAddTwoStates(2, 3);\n+                        break;\n+                    case 0:\n+                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 1)\n+                            kind \u003d 1;\n+                        jjCheckNAdd(0);\n+                        break;\n+                    case 2:\n+                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n+                            jjCheckNAddTwoStates(2, 3);\n+                        break;\n+                    case 3:\n+                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n+                            kind \u003d 14;\n+                        break;\n+                    case 4:\n+                        if (curChar \u003d\u003d 39)\n+                            jjCheckNAddTwoStates(5, 6);\n+                        break;\n+                    case 5:\n+                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n+                            jjCheckNAddTwoStates(5, 6);\n+                        break;\n+                    case 6:\n+                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n+                            kind \u003d 14;\n+                        break;\n+                    case 7:\n+                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 16)\n+                            kind \u003d 16;\n+                        jjCheckNAddTwoStates(7, 8);\n+                        break;\n+                    case 8:\n+                        if (curChar !\u003d 46)\n+                            break;\n+                        if (kind \u003e 16)\n+                            kind \u003d 16;\n+                        jjCheckNAdd(9);\n+                        break;\n+                    case 9:\n+                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 16)\n+                            kind \u003d 16;\n+                        jjCheckNAdd(9);\n+                        break;\n+                    case 10:\n+                        if (curChar \u003d\u003d 46)\n+                            jjCheckNAdd(11);\n+                        break;\n+                    case 11:\n+                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 16)\n+                            kind \u003d 16;\n+                        jjCheckNAdd(11);\n+                        break;\n+                    case 13:\n+                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 71)\n+                            kind \u003d 71;\n+                        jjstateSet[jjnewStateCnt++] \u003d 13;\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } while (i !\u003d startsAt);\n+        } else if (curChar \u003c 128) {\n+            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n+            MatchLoop: do {\n+                switch(jjstateSet[--i]) {\n+                    case 1:\n+                    case 13:\n+                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n+                            break;\n+                        if (kind \u003e 71)\n+                            kind \u003d 71;\n+                        jjCheckNAdd(13);\n+                        break;\n+                    case 2:\n+                        jjAddStates(0, 1);\n+                        break;\n+                    case 5:\n+                        jjAddStates(2, 3);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } while (i !\u003d startsAt);\n+        } else {\n+            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n+            int i1 \u003d hiByte \u003e\u003e 6;\n+            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n+            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n+            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n+            MatchLoop: do {\n+                switch(jjstateSet[--i]) {\n+                    case 1:\n+                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n+                            break;\n+                        if (kind \u003e 71)\n+                            kind \u003d 71;\n+                        jjCheckNAdd(13);\n+                        break;\n+                    case 2:\n+                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n+                            jjAddStates(0, 1);\n+                        break;\n+                    case 5:\n+                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n+                            jjAddStates(2, 3);\n+                        break;\n+                    case 13:\n+                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n+                            break;\n+                        if (kind \u003e 71)\n+                            kind \u003d 71;\n+                        jjCheckNAdd(13);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            } while (i !\u003d startsAt);\n+        }\n+        if (kind !\u003d 0x7fffffff) {\n+            jjmatchedKind \u003d kind;\n+            jjmatchedPos \u003d curPos;\n+            kind \u003d 0x7fffffff;\n+        }\n+        ++curPos;\n+        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n+            return curPos;\n+        try {\n+            curChar \u003d input_stream.readChar();\n+        } catch (java.io.IOException e) {\n+            return curPos;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private final int jjMoveNfa_0(int startState, int curPos) {\n    int[] nextStates;\n    int startsAt \u003d 0;\n    jjnewStateCnt \u003d 14;\n    int i \u003d 1;\n    jjstateSet[0] \u003d startState;\n    int j, kind \u003d 0x7fffffff;\n    for (; ; ) {\n        if (++jjround \u003d\u003d 0x7fffffff)\n            ReInitRounds();\n        if (curChar \u003c 64) {\n            long l \u003d 1L \u003c\u003c curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if ((0x3ff000000000000L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 16)\n                                kind \u003d 16;\n                            jjCheckNAddTwoStates(7, 8);\n                        } else if ((0x100002600L \u0026 l) !\u003d 0L) {\n                            if (kind \u003e 1)\n                                kind \u003d 1;\n                            jjCheckNAdd(0);\n                        } else if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        else if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        else if (curChar \u003d\u003d 34)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 0:\n                        if ((0x100002600L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 1)\n                            kind \u003d 1;\n                        jjCheckNAdd(0);\n                        break;\n                    case 2:\n                        if ((0xfffffffbffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(2, 3);\n                        break;\n                    case 3:\n                        if (curChar \u003d\u003d 34 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 4:\n                        if (curChar \u003d\u003d 39)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 5:\n                        if ((0xffffff7fffffffffL \u0026 l) !\u003d 0L)\n                            jjCheckNAddTwoStates(5, 6);\n                        break;\n                    case 6:\n                        if (curChar \u003d\u003d 39 \u0026\u0026 kind \u003e 14)\n                            kind \u003d 14;\n                        break;\n                    case 7:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAddTwoStates(7, 8);\n                        break;\n                    case 8:\n                        if (curChar !\u003d 46)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 9:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(9);\n                        break;\n                    case 10:\n                        if (curChar \u003d\u003d 46)\n                            jjCheckNAdd(11);\n                        break;\n                    case 11:\n                        if ((0x3ff000000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 16)\n                            kind \u003d 16;\n                        jjCheckNAdd(11);\n                        break;\n                    case 13:\n                        if ((0x3ff600000000000L \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 71)\n                            kind \u003d 71;\n                        jjstateSet[jjnewStateCnt++] \u003d 13;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else if (curChar \u003c 128) {\n            long l \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                    case 13:\n                        if ((0x7fffffe87fffffeL \u0026 l) \u003d\u003d 0L)\n                            break;\n                        if (kind \u003e 71)\n                            kind \u003d 71;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        } else {\n            int hiByte \u003d (int) (curChar \u003e\u003e 8);\n            int i1 \u003d hiByte \u003e\u003e 6;\n            long l1 \u003d 1L \u003c\u003c (hiByte \u0026 077);\n            int i2 \u003d (curChar \u0026 0xff) \u003e\u003e 6;\n            long l2 \u003d 1L \u003c\u003c (curChar \u0026 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 1:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 71)\n                            kind \u003d 71;\n                        jjCheckNAdd(13);\n                        break;\n                    case 2:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(0, 1);\n                        break;\n                    case 5:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                            jjAddStates(2, 3);\n                        break;\n                    case 13:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2))\n                            break;\n                        if (kind \u003e 71)\n                            kind \u003d 71;\n                        jjCheckNAdd(13);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i !\u003d startsAt);\n        }\n        if (kind !\u003d 0x7fffffff) {\n            jjmatchedKind \u003d kind;\n            jjmatchedPos \u003d curPos;\n            kind \u003d 0x7fffffff;\n        }\n        ++curPos;\n        if ((i \u003d jjnewStateCnt) \u003d\u003d (startsAt \u003d 14 - (jjnewStateCnt \u003d startsAt)))\n            return curPos;\n        try {\n            curChar \u003d input_stream.readChar();\n        } catch (java.io.IOException e) {\n            return curPos;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java",
      "functionStartLine": 1400,
      "functionName": "jjMoveNfa_0",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}