{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-1b",
  "repositoryPath": "/tmp/Jsoup-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenQueue.java",
  "functionName": "consume",
  "functionId": "consume___seq-String",
  "sourceFilePath": "src/main/java/org/jsoup/parser/TokenQueue.java",
  "functionAnnotation": "",
  "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n     \u003cp\u003e\n     Case insensitive.\n\n@param seq sequence to remove from head of queue.\n",
  "functionStartLine": 144,
  "functionEndLine": 153,
  "numCommitsSeen": 18,
  "timeTaken": 608,
  "changeHistory": [
    "4bd743a3a5492d1d185bd21f421e49ce3a27af7c",
    "04025259e96d3676097e84126fb55124b92c50ed",
    "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268"
  ],
  "changeHistoryShort": {
    "4bd743a3a5492d1d185bd21f421e49ce3a27af7c": "Ymultichange(Ybodychange,Ydocchange)",
    "04025259e96d3676097e84126fb55124b92c50ed": "Ymodifierchange",
    "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bd743a3a5492d1d185bd21f421e49ce3a27af7c": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Support for data only tags (script, textarea etc)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "4bd743a3a5492d1d185bd21f421e49ce3a27af7c",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Support for data only tags (script, textarea etc)\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "4bd743a3a5492d1d185bd21f421e49ce3a27af7c",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "e8e755bfb9a0b1b8b19e8312942ea29cb9b626da",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void consume(String seq) {\n    if (!matches(seq))\n        throw new IllegalStateException(\"Queue did not match expected sequence\");\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    for (int i \u003d 0; i \u003c len; i++) {\n        consume();\n    }\n}",
          "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
          "functionStartLine": 113,
          "functionName": "consume",
          "functionAnnotation": "",
          "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n     \u003cp\u003e\n     Case insensitive.\n\n@param seq sequence to remove from head of queue.\n",
          "diff": "@@ -1,11 +1,10 @@\n public void consume(String seq) {\n+    if (!matches(seq))\n+        throw new IllegalStateException(\"Queue did not match expected sequence\");\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n-    char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n-        Character qChar \u003d consume();\n-        if (!qChar.equals(seqChars[i]))\n-            throw new IllegalStateException(\"Queue did not match expected sequence\");\n+        consume();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Support for data only tags (script, textarea etc)\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "4bd743a3a5492d1d185bd21f421e49ce3a27af7c",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "e8e755bfb9a0b1b8b19e8312942ea29cb9b626da",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void consume(String seq) {\n    if (!matches(seq))\n        throw new IllegalStateException(\"Queue did not match expected sequence\");\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    for (int i \u003d 0; i \u003c len; i++) {\n        consume();\n    }\n}",
          "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
          "functionStartLine": 113,
          "functionName": "consume",
          "functionAnnotation": "",
          "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n     \u003cp\u003e\n     Case insensitive.\n\n@param seq sequence to remove from head of queue.\n",
          "diff": "@@ -1,11 +1,10 @@\n public void consume(String seq) {\n+    if (!matches(seq))\n+        throw new IllegalStateException(\"Queue did not match expected sequence\");\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n-    char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n-        Character qChar \u003d consume();\n-        if (!qChar.equals(seqChars[i]))\n-            throw new IllegalStateException(\"Queue did not match expected sequence\");\n+        consume();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n",
            "newValue": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n     \u003cp\u003e\n     Case insensitive.\n\n@param seq sequence to remove from head of queue.\n"
          }
        }
      ]
    },
    "04025259e96d3676097e84126fb55124b92c50ed": {
      "type": "Ymodifierchange",
      "commitMessage": "Initial, partial implementation of Selector.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "04025259e96d3676097e84126fb55124b92c50ed",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public void consume(String seq) {\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    char[] seqChars \u003d seq.toCharArray();\n    for (int i \u003d 0; i \u003c len; i++) {\n        Character qChar \u003d consume();\n        if (!qChar.equals(seqChars[i]))\n            throw new IllegalStateException(\"Queue did not match expected sequence\");\n    }\n}",
      "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
      "functionStartLine": 109,
      "functionName": "consume",
      "functionAnnotation": "",
      "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n",
      "diff": "@@ -1,11 +1,11 @@\n-void consume(String seq) {\n+public void consume(String seq) {\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n     char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n         Character qChar \u003d consume();\n         if (!qChar.equals(seqChars[i]))\n             throw new IllegalStateException(\"Queue did not match expected sequence\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
      "commitMessage": "Pulled string matching stuff out of Parser ad into TokenQueue, for reuse in selector parser. Added som texts and corrected behaviour of parser.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Pulled string matching stuff out of Parser ad into TokenQueue, for reuse in selector parser. Added som texts and corrected behaviour of parser.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void consume(String seq) {\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    char[] seqChars \u003d seq.toCharArray();\n    for (int i \u003d 0; i \u003c len; i++) {\n        Character qChar \u003d consume();\n        if (!qChar.equals(seqChars[i]))\n            throw new IllegalStateException(\"Queue did not match expected sequence\");\n    }\n}",
          "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
          "functionStartLine": 88,
          "functionName": "consume",
          "functionAnnotation": "",
          "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n",
          "diff": "@@ -1,11 +1,11 @@\n-private void consume(String seq) {\n+void consume(String seq) {\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n     char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n         Character qChar \u003d consume();\n         if (!qChar.equals(seqChars[i]))\n             throw new IllegalStateException(\"Queue did not match expected sequence\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/jsoup/parser/Parser.java",
            "newPath": "src/main/java/org/jsoup/parser/TokenQueue.java",
            "oldMethodName": "consume",
            "newMethodName": "consume"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Pulled string matching stuff out of Parser ad into TokenQueue, for reuse in selector parser. Added som texts and corrected behaviour of parser.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void consume(String seq) {\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    char[] seqChars \u003d seq.toCharArray();\n    for (int i \u003d 0; i \u003c len; i++) {\n        Character qChar \u003d consume();\n        if (!qChar.equals(seqChars[i]))\n            throw new IllegalStateException(\"Queue did not match expected sequence\");\n    }\n}",
          "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
          "functionStartLine": 88,
          "functionName": "consume",
          "functionAnnotation": "",
          "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n",
          "diff": "@@ -1,11 +1,11 @@\n-private void consume(String seq) {\n+void consume(String seq) {\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n     char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n         Character qChar \u003d consume();\n         if (!qChar.equals(seqChars[i]))\n             throw new IllegalStateException(\"Queue did not match expected sequence\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Pulled string matching stuff out of Parser ad into TokenQueue, for reuse in selector parser. Added som texts and corrected behaviour of parser.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "03336ea9dd5d2aef2e31fe5e6402a04242f4d9f8",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "void consume(String seq) {\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    char[] seqChars \u003d seq.toCharArray();\n    for (int i \u003d 0; i \u003c len; i++) {\n        Character qChar \u003d consume();\n        if (!qChar.equals(seqChars[i]))\n            throw new IllegalStateException(\"Queue did not match expected sequence\");\n    }\n}",
          "path": "src/main/java/org/jsoup/parser/TokenQueue.java",
          "functionStartLine": 88,
          "functionName": "consume",
          "functionAnnotation": "",
          "functionDoc": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n",
          "diff": "@@ -1,11 +1,11 @@\n-private void consume(String seq) {\n+void consume(String seq) {\n     int len \u003d seq.length();\n     if (len \u003e queue.size())\n         throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n     char[] seqChars \u003d seq.toCharArray();\n     for (int i \u003d 0; i \u003c len; i++) {\n         Character qChar \u003d consume();\n         if (!qChar.equals(seqChars[i]))\n             throw new IllegalStateException(\"Queue did not match expected sequence\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Consumes the supplied sequence of the queue. If the queue does not start with the supplied sequence, will\nthrow an illegal state exception -- but you should be running match() against that condition.\n\n@param seq sequence to remove from head of queue.\n"
          }
        }
      ]
    },
    "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268": {
      "type": "Yintroduced",
      "commitMessage": "Reimplemented parser.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "2f0a7bf507020d98b3bdbf0a93bb1c753dd90268",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,11 @@\n+private void consume(String seq) {\n+    int len \u003d seq.length();\n+    if (len \u003e queue.size())\n+        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n+    char[] seqChars \u003d seq.toCharArray();\n+    for (int i \u003d 0; i \u003c len; i++) {\n+        Character qChar \u003d consume();\n+        if (!qChar.equals(seqChars[i]))\n+            throw new IllegalStateException(\"Queue did not match expected sequence\");\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void consume(String seq) {\n    int len \u003d seq.length();\n    if (len \u003e queue.size())\n        throw new IllegalStateException(\"Queue not long enough to consume sequence\");\n    char[] seqChars \u003d seq.toCharArray();\n    for (int i \u003d 0; i \u003c len; i++) {\n        Character qChar \u003d consume();\n        if (!qChar.equals(seqChars[i]))\n            throw new IllegalStateException(\"Queue did not match expected sequence\");\n    }\n}",
      "path": "src/main/java/org/jsoup/parser/Parser.java",
      "functionStartLine": 214,
      "functionName": "consume",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}