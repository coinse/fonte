{
  "origin": "codeshovel",
  "repositoryName": "Csv-11b",
  "repositoryPath": "/tmp/Csv-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "parse",
  "functionId": "parse___in-Reader(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
  "functionStartLine": 610,
  "functionEndLine": 612,
  "numCommitsSeen": 239,
  "timeTaken": 3191,
  "changeHistory": [
    "105f907767086cd9bd57aad76488b5c4b5770834",
    "69997467d419487cb4098ff116188091907b5ff1",
    "f78b5a14ca34f6176890b00308868b664b696148",
    "d10442b68a673444a3d6716d2d7f1cf98618ce05",
    "df08acad745aef61a44c7f392abbee4ef9e201f8",
    "e28d4e9c2e2f3db38b6b1939ee1fde819debed9b",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "aee6c50e2830c007a572cc96a57bc105308acc49",
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e",
    "312f5b033e7e9d532dd841eec3a179bf5659c85b"
  ],
  "changeHistoryShort": {
    "105f907767086cd9bd57aad76488b5c4b5770834": "Ydocchange",
    "69997467d419487cb4098ff116188091907b5ff1": "Ydocchange",
    "f78b5a14ca34f6176890b00308868b664b696148": "Ymultichange(Yreturntypechange,Ydocchange)",
    "d10442b68a673444a3d6716d2d7f1cf98618ce05": "Ydocchange",
    "df08acad745aef61a44c7f392abbee4ef9e201f8": "Ydocchange",
    "e28d4e9c2e2f3db38b6b1939ee1fde819debed9b": "Ydocchange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Yparametermetachange",
    "aee6c50e2830c007a572cc96a57bc105308acc49": "Ymultichange(Yreturntypechange,Yexceptionschange)",
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e": "Ydocchange",
    "312f5b033e7e9d532dd841eec3a179bf5659c85b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "105f907767086cd9bd57aad76488b5c4b5770834": {
      "type": "Ydocchange",
      "commitMessage": "CSV-78 Use Character instead of char for char fields except delimiter\nAlready done as part of CSV-99 etc.\nUpdated Javadoc to clarify that null can be used to disable settings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509239 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/13, 7:02 AM",
      "commitName": "105f907767086cd9bd57aad76488b5c4b5770834",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "8/1/13, 6:45 AM",
      "commitNameOld": "cf764bc9ae3940c10768278e2a7ddf62b4a7d6c5",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVParser parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 468,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
        "newValue": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n"
      }
    },
    "69997467d419487cb4098ff116188091907b5ff1": {
      "type": "Ydocchange",
      "commitMessage": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 10:36 AM",
      "commitName": "69997467d419487cb4098ff116188091907b5ff1",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/30/13, 9:22 AM",
      "commitNameOld": "f78b5a14ca34f6176890b00308868b664b696148",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public CSVParser parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 465,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
        "newValue": "Parses the specified content.\n\n\u003cp\u003e\nSee also the various static parse methods on {@link CSVParser}.\n\u003c/p\u003e\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n"
      }
    },
    "f78b5a14ca34f6176890b00308868b664b696148": {
      "type": "Ymultichange(Yreturntypechange,Ydocchange)",
      "commitMessage": "Change CSVFormat#Iterable\u003cCSVRecord\u003e parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable\u003cCSVRecord\u003e. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/13, 9:22 AM",
      "commitName": "f78b5a14ca34f6176890b00308868b664b696148",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Change CSVFormat#Iterable\u003cCSVRecord\u003e parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable\u003cCSVRecord\u003e. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 9:22 AM",
          "commitName": "f78b5a14ca34f6176890b00308868b664b696148",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/30/13, 7:44 AM",
          "commitNameOld": "ee7335a2fc5a95dabc73d779699a973a5b828213",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVParser parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 461,
          "functionName": "parse",
          "functionAnnotation": "",
          "functionDoc": "Parses the specified content.\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n+public CSVParser parse(final Reader in) throws IOException {\n     return new CSVParser(in, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Iterable\u003cCSVRecord\u003e",
            "newValue": "CSVParser"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Change CSVFormat#Iterable\u003cCSVRecord\u003e parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable\u003cCSVRecord\u003e. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/30/13, 9:22 AM",
          "commitName": "f78b5a14ca34f6176890b00308868b664b696148",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "7/30/13, 7:44 AM",
          "commitNameOld": "ee7335a2fc5a95dabc73d779699a973a5b828213",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public CSVParser parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 461,
          "functionName": "parse",
          "functionAnnotation": "",
          "functionDoc": "Parses the specified content.\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n+public CSVParser parse(final Reader in) throws IOException {\n     return new CSVParser(in, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n            If an I/O error occurs\n",
            "newValue": "Parses the specified content.\n\n@param in the input stream\n@return a parser over a stream of {@link #CSVRecord}s.\n@throws IOException\n            If an I/O error occurs\n"
          }
        }
      ]
    },
    "d10442b68a673444a3d6716d2d7f1cf98618ce05": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461240 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/13, 10:48 AM",
      "commitName": "d10442b68a673444a3d6716d2d7f1cf98618ce05",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/26/13, 9:47 AM",
      "commitNameOld": "193dfd79af01acc41536f6c46019100bdd45527a",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 358,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n            If an I/O error occurs\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n",
        "newValue": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n            If an I/O error occurs\n"
      }
    },
    "df08acad745aef61a44c7f392abbee4ef9e201f8": {
      "type": "Ydocchange",
      "commitMessage": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/13, 9:19 AM",
      "commitName": "df08acad745aef61a44c7f392abbee4ef9e201f8",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/26/13, 8:50 AM",
      "commitNameOld": "e33bedefcec054f9813f6214cf0cd12d6553fb1e",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 357,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n@param in the input stream\n@throws IOException\n",
        "newValue": "Parses the specified content.\n\n@param in the input stream\n@return a stream of CSVRecord\n@throws IOException\n"
      }
    },
    "e28d4e9c2e2f3db38b6b1939ee1fde819debed9b": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1459447 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/21/13, 11:47 AM",
      "commitName": "e28d4e9c2e2f3db38b6b1939ee1fde819debed9b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/20/13, 5:39 AM",
      "commitNameOld": "961cce294c5c1ad222965501e03c2f6bfe9d6935",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 1.26,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 338,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in the input stream\n@throws IOException\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n@param in the input stream\n",
        "newValue": "Parses the specified content.\n\n@param in the input stream\n@throws IOException\n"
      }
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 7:39 AM",
      "commitNameOld": "67bbc35289bb3435eae0bd6f20cc6b15280e66e0",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 452,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in the input stream\n",
      "diff": "@@ -1,3 +1,3 @@\n-public Iterable\u003cCSVRecord\u003e parse(Reader in) throws IOException {\n+public Iterable\u003cCSVRecord\u003e parse(final Reader in) throws IOException {\n     return new CSVParser(in, this);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[in-Reader]",
        "newValue": "[in-Reader(modifiers-final)]"
      }
    },
    "aee6c50e2830c007a572cc96a57bc105308acc49": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange)",
      "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/16/12, 6:39 PM",
      "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterable\u003cCSVRecord\u003e parse(Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 410,
          "functionName": "parse",
          "functionAnnotation": "",
          "functionDoc": "Parses the specified content.\n\n@param in the input stream\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Iterable\u003cString[]\u003e parse(Reader in) {\n+public Iterable\u003cCSVRecord\u003e parse(Reader in) throws IOException {\n     return new CSVParser(in, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Iterable\u003cString[]\u003e",
            "newValue": "Iterable\u003cCSVRecord\u003e"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/16/12, 6:39 PM",
          "commitName": "aee6c50e2830c007a572cc96a57bc105308acc49",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/15/12, 5:49 PM",
          "commitNameOld": "d45289f384e3e939c4025b59521e82f41d926685",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Iterable\u003cCSVRecord\u003e parse(Reader in) throws IOException {\n    return new CSVParser(in, this);\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 410,
          "functionName": "parse",
          "functionAnnotation": "",
          "functionDoc": "Parses the specified content.\n\n@param in the input stream\n",
          "diff": "@@ -1,3 +1,3 @@\n-public Iterable\u003cString[]\u003e parse(Reader in) {\n+public Iterable\u003cCSVRecord\u003e parse(Reader in) throws IOException {\n     return new CSVParser(in, this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        }
      ]
    },
    "194e21c283fa857bf1a121b8f37ba3346a11cf2e": {
      "type": "Ydocchange",
      "commitMessage": "More Javadoc for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298176 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/7/12, 2:34 PM",
      "commitName": "194e21c283fa857bf1a121b8f37ba3346a11cf2e",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "3/7/12, 8:32 AM",
      "commitNameOld": "898b7f9629f8f9a02b9d4785d4c287b4549c3990",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cString[]\u003e parse(Reader in) {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 358,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in the input stream\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parses the specified content.\n\n@param in\n",
        "newValue": "Parses the specified content.\n\n@param in the input stream\n"
      }
    },
    "312f5b033e7e9d532dd841eec3a179bf5659c85b": {
      "type": "Yintroduced",
      "commitMessage": "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/5/12, 4:12 AM",
      "commitName": "312f5b033e7e9d532dd841eec3a179bf5659c85b",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,3 @@\n+public Iterable\u003cString[]\u003e parse(Reader in) {\n+    return new CSVParser(in, this);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Iterable\u003cString[]\u003e parse(Reader in) {\n    return new CSVParser(in, this);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 207,
      "functionName": "parse",
      "functionAnnotation": "",
      "functionDoc": "Parses the specified content.\n\n@param in\n"
    }
  }
}