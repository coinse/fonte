{
  "origin": "codeshovel",
  "repositoryName": "Csv-11b",
  "repositoryPath": "/tmp/Csv-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "getNullString",
  "functionId": "getNullString",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the String to convert to and from {@code null}.\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eReading:\u003c/strong\u003e Converts strings equal to the given {@code nullString} to {@code null} when reading\nrecords.\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eWriting:\u003c/strong\u003e Writes {@code null} as the given {@code nullString} when writing records.\u003c/li\u003e\n\u003c/ul\u003e\n\n@return the String to convert to and from {@code null}. No substitution occurs if {@code null}\n",
  "functionStartLine": 499,
  "functionEndLine": 501,
  "numCommitsSeen": 323,
  "timeTaken": 1879,
  "changeHistory": [
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
    "75b9a4ba4ed34eed0afe0a6c3b8a79979685a379"
  ],
  "changeHistoryShort": {
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": "Ymultichange(Yrename,Ybodychange,Ydocchange)",
    "75b9a4ba4ed34eed0afe0a6c3b8a79979685a379": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b": {
      "type": "Ymultichange(Yrename,Ybodychange,Ydocchange)",
      "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/23/13, 8:06 PM",
      "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/23/13, 8:06 PM",
          "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/20/13, 2:39 PM",
          "commitNameOld": "ab2e7eb504d45a3443b76f0462800f077cd807be",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 3.23,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getNullString() {\n    return nullString;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 765,
          "functionName": "getNullString",
          "functionAnnotation": "",
          "functionDoc": "Gets the String to convert to and from {@code null}.\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eReading:\u003c/strong\u003e Converts strings equal to the given {@code nullString} to {@code null} when reading\nrecords.\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eWriting:\u003c/strong\u003e Writes {@code null} as the given {@code nullString} when writing records.\u003c/li\u003e\n\u003c/ul\u003e\n\n@return the String to convert to and from {@code null}. No substitution occurs if {@code null}\n",
          "diff": "@@ -1,3 +1,3 @@\n-public String getNullToString() {\n-    return nullToString;\n+public String getNullString() {\n+    return nullString;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getNullToString",
            "newValue": "getNullString"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/23/13, 8:06 PM",
          "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/20/13, 2:39 PM",
          "commitNameOld": "ab2e7eb504d45a3443b76f0462800f077cd807be",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 3.23,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getNullString() {\n    return nullString;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 765,
          "functionName": "getNullString",
          "functionAnnotation": "",
          "functionDoc": "Gets the String to convert to and from {@code null}.\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eReading:\u003c/strong\u003e Converts strings equal to the given {@code nullString} to {@code null} when reading\nrecords.\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eWriting:\u003c/strong\u003e Writes {@code null} as the given {@code nullString} when writing records.\u003c/li\u003e\n\u003c/ul\u003e\n\n@return the String to convert to and from {@code null}. No substitution occurs if {@code null}\n",
          "diff": "@@ -1,3 +1,3 @@\n-public String getNullToString() {\n-    return nullToString;\n+public String getNullString() {\n+    return nullString;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "[CSV-93] Allow the handling of NULL values. Use a single property \u0027nullString\u0027 for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/23/13, 8:06 PM",
          "commitName": "5a0894f9e0ee9f4703b8db3f200ff4a507bf043b",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "6/20/13, 2:39 PM",
          "commitNameOld": "ab2e7eb504d45a3443b76f0462800f077cd807be",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 3.23,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public String getNullString() {\n    return nullString;\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 765,
          "functionName": "getNullString",
          "functionAnnotation": "",
          "functionDoc": "Gets the String to convert to and from {@code null}.\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eReading:\u003c/strong\u003e Converts strings equal to the given {@code nullString} to {@code null} when reading\nrecords.\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eWriting:\u003c/strong\u003e Writes {@code null} as the given {@code nullString} when writing records.\u003c/li\u003e\n\u003c/ul\u003e\n\n@return the String to convert to and from {@code null}. No substitution occurs if {@code null}\n",
          "diff": "@@ -1,3 +1,3 @@\n-public String getNullToString() {\n-    return nullToString;\n+public String getNullString() {\n+    return nullString;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the value to use for writing null values.\n\n@return the value to use for writing null values.\n",
            "newValue": "Gets the String to convert to and from {@code null}.\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eReading:\u003c/strong\u003e Converts strings equal to the given {@code nullString} to {@code null} when reading\nrecords.\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eWriting:\u003c/strong\u003e Writes {@code null} as the given {@code nullString} when writing records.\u003c/li\u003e\n\u003c/ul\u003e\n\n@return the String to convert to and from {@code null}. No substitution occurs if {@code null}\n"
          }
        }
      ]
    },
    "75b9a4ba4ed34eed0afe0a6c3b8a79979685a379": {
      "type": "Yintroduced",
      "commitMessage": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/8/13, 1:34 PM",
      "commitName": "75b9a4ba4ed34eed0afe0a6c3b8a79979685a379",
      "commitAuthor": "Gary D. Gregory",
      "diff": "@@ -0,0 +1,3 @@\n+public String getNullToString() {\n+    return nullToString;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String getNullToString() {\n    return nullToString;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 750,
      "functionName": "getNullToString",
      "functionAnnotation": "",
      "functionDoc": "Returns the value to use for writing null values.\n\n@return the value to use for writing null values.\n"
    }
  }
}