{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-5b",
  "repositoryPath": "/tmp/JacksonXml-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XmlRootNameLookup.java",
  "functionName": "findRootName",
  "functionId": "findRootName___rootType-Class__?____config-MapperConfig__?__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 44,
  "functionEndLine": 59,
  "numCommitsSeen": 10,
  "timeTaken": 547,
  "changeHistory": [
    "737105e583f803a54ebed0b987489676001bd607",
    "b9e5755ace5b07f9e058bbe98d7693b3cabfd07d",
    "7343f94f4494dfc16cf0d013f52c7f47397a2e71",
    "948d377c7aafb0ed91a244415df07f3f6c106be2",
    "76f1154551a685fd3606d4263d1ce96ccab1bfb4",
    "06b9b243ce71748609181b6e9f9488621475b8b0",
    "ac97422c72402f2970e5d9eab7a727a308399d56"
  ],
  "changeHistoryShort": {
    "737105e583f803a54ebed0b987489676001bd607": "Ybodychange",
    "b9e5755ace5b07f9e058bbe98d7693b3cabfd07d": "Ybodychange",
    "7343f94f4494dfc16cf0d013f52c7f47397a2e71": "Ybodychange",
    "948d377c7aafb0ed91a244415df07f3f6c106be2": "Yfilerename",
    "76f1154551a685fd3606d4263d1ce96ccab1bfb4": "Ybodychange",
    "06b9b243ce71748609181b6e9f9488621475b8b0": "Ybodychange",
    "ac97422c72402f2970e5d9eab7a727a308399d56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "737105e583f803a54ebed0b987489676001bd607": {
      "type": "Ybodychange",
      "commitMessage": "Fix #171\n",
      "commitDate": "12/6/15, 8:31 PM",
      "commitName": "737105e583f803a54ebed0b987489676001bd607",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/13/14, 9:00 PM",
      "commitNameOld": "4f7255f676db0c5b384395d8caa8321236fec0a7",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 660.98,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n    }\n    if (name !\u003d null) {\n        return name;\n    }\n    name \u003d _findRootName(rootType, config);\n    synchronized (_rootNames) {\n        _rootNames.put(key, name);\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 44,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,15 @@\n public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n     ClassKey key \u003d new ClassKey(rootType);\n     QName name;\n     synchronized (_rootNames) {\n         name \u003d _rootNames.get(key);\n     }\n     if (name !\u003d null) {\n         return name;\n     }\n-    BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n-    AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n-    AnnotatedClass ac \u003d beanDesc.getClassInfo();\n-    String localName \u003d null;\n-    String ns \u003d null;\n-    PropertyName root \u003d intr.findRootName(ac);\n-    if (root !\u003d null) {\n-        localName \u003d root.getSimpleName();\n-        ns \u003d root.getNamespace();\n-    }\n-    if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n-        localName \u003d StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n-        name \u003d new QName(\"\", localName);\n-    } else {\n-        if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n-            ns \u003d findNamespace(intr, ac);\n-        }\n-    }\n-    if (ns \u003d\u003d null) {\n-        ns \u003d \"\";\n-    }\n-    name \u003d new QName(ns, localName);\n+    name \u003d _findRootName(rootType, config);\n     synchronized (_rootNames) {\n         _rootNames.put(key, name);\n     }\n     return name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b9e5755ace5b07f9e058bbe98d7693b3cabfd07d": {
      "type": "Ybodychange",
      "commitMessage": "More work on #38, adding name-handling improvements for arrays\n",
      "commitDate": "8/15/13, 9:52 AM",
      "commitName": "b9e5755ace5b07f9e058bbe98d7693b3cabfd07d",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/14/13, 9:01 PM",
      "commitNameOld": "016a56fe478545624794d6394f2e019d98bb569e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n    }\n    if (name !\u003d null) {\n        return name;\n    }\n    BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n    AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n    AnnotatedClass ac \u003d beanDesc.getClassInfo();\n    String localName \u003d null;\n    String ns \u003d null;\n    PropertyName root \u003d intr.findRootName(ac);\n    if (root !\u003d null) {\n        localName \u003d root.getSimpleName();\n        ns \u003d root.getNamespace();\n    }\n    if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n        localName \u003d StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n        name \u003d new QName(\"\", localName);\n    } else {\n        if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n            ns \u003d findNamespace(intr, ac);\n        }\n    }\n    if (ns \u003d\u003d null) {\n        ns \u003d \"\";\n    }\n    name \u003d new QName(ns, localName);\n    synchronized (_rootNames) {\n        _rootNames.put(key, name);\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 45,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,33 +1,36 @@\n public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n     ClassKey key \u003d new ClassKey(rootType);\n     QName name;\n     synchronized (_rootNames) {\n         name \u003d _rootNames.get(key);\n-        if (name \u003d\u003d null) {\n-            BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n-            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n-            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n-            String localName \u003d null;\n-            String ns \u003d null;\n-            PropertyName root \u003d intr.findRootName(ac);\n-            if (root !\u003d null) {\n-                localName \u003d root.getSimpleName();\n-                ns \u003d root.getNamespace();\n-            }\n-            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n-                localName \u003d rootType.getSimpleName();\n-                name \u003d new QName(\"\", localName);\n-            } else {\n-                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n-                    ns \u003d findNamespace(intr, ac);\n-                }\n-            }\n-            if (ns \u003d\u003d null) {\n-                ns \u003d \"\";\n-            }\n-            name \u003d new QName(ns, localName);\n-            _rootNames.put(key, name);\n+    }\n+    if (name !\u003d null) {\n+        return name;\n+    }\n+    BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n+    AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n+    AnnotatedClass ac \u003d beanDesc.getClassInfo();\n+    String localName \u003d null;\n+    String ns \u003d null;\n+    PropertyName root \u003d intr.findRootName(ac);\n+    if (root !\u003d null) {\n+        localName \u003d root.getSimpleName();\n+        ns \u003d root.getNamespace();\n+    }\n+    if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n+        localName \u003d StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n+        name \u003d new QName(\"\", localName);\n+    } else {\n+        if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n+            ns \u003d findNamespace(intr, ac);\n         }\n     }\n+    if (ns \u003d\u003d null) {\n+        ns \u003d \"\";\n+    }\n+    name \u003d new QName(ns, localName);\n+    synchronized (_rootNames) {\n+        _rootNames.put(key, name);\n+    }\n     return name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7343f94f4494dfc16cf0d013f52c7f47397a2e71": {
      "type": "Ybodychange",
      "commitMessage": "Propagating PropertyName-changes to xml module as well\n",
      "commitDate": "9/5/12, 1:42 PM",
      "commitName": "7343f94f4494dfc16cf0d013f52c7f47397a2e71",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:55 PM",
      "commitNameOld": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 198.62,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n        if (name \u003d\u003d null) {\n            BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n            String localName \u003d null;\n            String ns \u003d null;\n            PropertyName root \u003d intr.findRootName(ac);\n            if (root !\u003d null) {\n                localName \u003d root.getSimpleName();\n                ns \u003d root.getNamespace();\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d rootType.getSimpleName();\n                name \u003d new QName(\"\", localName);\n            } else {\n                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                    ns \u003d findNamespace(intr, ac);\n                }\n            }\n            if (ns \u003d\u003d null) {\n                ns \u003d \"\";\n            }\n            name \u003d new QName(ns, localName);\n            _rootNames.put(key, name);\n        }\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 32,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,33 @@\n public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n     ClassKey key \u003d new ClassKey(rootType);\n     QName name;\n     synchronized (_rootNames) {\n         name \u003d _rootNames.get(key);\n         if (name \u003d\u003d null) {\n             BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n             AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n             AnnotatedClass ac \u003d beanDesc.getClassInfo();\n             String localName \u003d null;\n             String ns \u003d null;\n-            QName root \u003d findRootElement(intr, ac);\n+            PropertyName root \u003d intr.findRootName(ac);\n             if (root !\u003d null) {\n-                localName \u003d root.getLocalPart();\n-                ns \u003d root.getNamespaceURI();\n-            }\n-            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n-                localName \u003d intr.findRootName(ac);\n+                localName \u003d root.getSimpleName();\n+                ns \u003d root.getNamespace();\n             }\n             if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                 localName \u003d rootType.getSimpleName();\n                 name \u003d new QName(\"\", localName);\n             } else {\n                 if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                     ns \u003d findNamespace(intr, ac);\n                 }\n             }\n             if (ns \u003d\u003d null) {\n                 ns \u003d \"\";\n             }\n             name \u003d new QName(ns, localName);\n             _rootNames.put(key, name);\n         }\n     }\n     return name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "948d377c7aafb0ed91a244415df07f3f6c106be2": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "2/19/12, 9:55 PM",
      "commitName": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:53 PM",
      "commitNameOld": "4eb1efdf62fa5efab2422803d0f821932dda5c5a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n        if (name \u003d\u003d null) {\n            BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n            String localName \u003d null;\n            String ns \u003d null;\n            QName root \u003d findRootElement(intr, ac);\n            if (root !\u003d null) {\n                localName \u003d root.getLocalPart();\n                ns \u003d root.getNamespaceURI();\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d intr.findRootName(ac);\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d rootType.getSimpleName();\n                name \u003d new QName(\"\", localName);\n            } else {\n                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                    ns \u003d findNamespace(intr, ac);\n                }\n            }\n            if (ns \u003d\u003d null) {\n                ns \u003d \"\";\n            }\n            name \u003d new QName(ns, localName);\n            _rootNames.put(key, name);\n        }\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 32,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/util/XmlRootNameLookup.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java"
      }
    },
    "76f1154551a685fd3606d4263d1ce96ccab1bfb4": {
      "type": "Ybodychange",
      "commitMessage": "Start conversion to 2.0.0\n",
      "commitDate": "2/1/12, 2:22 PM",
      "commitName": "76f1154551a685fd3606d4263d1ce96ccab1bfb4",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/4/11, 9:56 PM",
      "commitNameOld": "06b9b243ce71748609181b6e9f9488621475b8b0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 361.68,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n        if (name \u003d\u003d null) {\n            BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n            String localName \u003d null;\n            String ns \u003d null;\n            QName root \u003d findRootElement(intr, ac);\n            if (root !\u003d null) {\n                localName \u003d root.getLocalPart();\n                ns \u003d root.getNamespaceURI();\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d intr.findRootName(ac);\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d rootType.getSimpleName();\n                name \u003d new QName(\"\", localName);\n            } else {\n                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                    ns \u003d findNamespace(intr, ac);\n                }\n            }\n            if (ns \u003d\u003d null) {\n                ns \u003d \"\";\n            }\n            name \u003d new QName(ns, localName);\n            _rootNames.put(key, name);\n        }\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 32,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n     ClassKey key \u003d new ClassKey(rootType);\n     QName name;\n     synchronized (_rootNames) {\n         name \u003d _rootNames.get(key);\n         if (name \u003d\u003d null) {\n-            BasicBeanDescription beanDesc \u003d (BasicBeanDescription) config.introspectClassAnnotations(rootType);\n+            BeanDescription beanDesc \u003d config.introspectClassAnnotations(rootType);\n             AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n             AnnotatedClass ac \u003d beanDesc.getClassInfo();\n             String localName \u003d null;\n             String ns \u003d null;\n             QName root \u003d findRootElement(intr, ac);\n             if (root !\u003d null) {\n                 localName \u003d root.getLocalPart();\n                 ns \u003d root.getNamespaceURI();\n             }\n             if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                 localName \u003d intr.findRootName(ac);\n             }\n             if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                 localName \u003d rootType.getSimpleName();\n                 name \u003d new QName(\"\", localName);\n             } else {\n                 if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                     ns \u003d findNamespace(intr, ac);\n                 }\n             }\n             if (ns \u003d\u003d null) {\n                 ns \u003d \"\";\n             }\n             name \u003d new QName(ns, localName);\n             _rootNames.put(key, name);\n         }\n     }\n     return name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06b9b243ce71748609181b6e9f9488621475b8b0": {
      "type": "Ybodychange",
      "commitMessage": "Fixed issue#2, addition of @JacksonXmlRootElement.\n",
      "commitDate": "2/4/11, 9:56 PM",
      "commitName": "06b9b243ce71748609181b6e9f9488621475b8b0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/30/10, 10:22 PM",
      "commitNameOld": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 35.98,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n        if (name \u003d\u003d null) {\n            BasicBeanDescription beanDesc \u003d (BasicBeanDescription) config.introspectClassAnnotations(rootType);\n            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n            String localName \u003d null;\n            String ns \u003d null;\n            QName root \u003d findRootElement(intr, ac);\n            if (root !\u003d null) {\n                localName \u003d root.getLocalPart();\n                ns \u003d root.getNamespaceURI();\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d intr.findRootName(ac);\n            }\n            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                localName \u003d rootType.getSimpleName();\n                name \u003d new QName(\"\", localName);\n            } else {\n                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n                    ns \u003d findNamespace(intr, ac);\n                }\n            }\n            if (ns \u003d\u003d null) {\n                ns \u003d \"\";\n            }\n            name \u003d new QName(ns, localName);\n            _rootNames.put(key, name);\n        }\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 36,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,36 @@\n public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n     ClassKey key \u003d new ClassKey(rootType);\n     QName name;\n     synchronized (_rootNames) {\n         name \u003d _rootNames.get(key);\n         if (name \u003d\u003d null) {\n             BasicBeanDescription beanDesc \u003d (BasicBeanDescription) config.introspectClassAnnotations(rootType);\n             AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n             AnnotatedClass ac \u003d beanDesc.getClassInfo();\n-            String localName \u003d intr.findRootName(ac);\n-            if (localName \u003d\u003d null) {\n+            String localName \u003d null;\n+            String ns \u003d null;\n+            QName root \u003d findRootElement(intr, ac);\n+            if (root !\u003d null) {\n+                localName \u003d root.getLocalPart();\n+                ns \u003d root.getNamespaceURI();\n+            }\n+            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n+                localName \u003d intr.findRootName(ac);\n+            }\n+            if (localName \u003d\u003d null || localName.length() \u003d\u003d 0) {\n                 localName \u003d rootType.getSimpleName();\n                 name \u003d new QName(\"\", localName);\n             } else {\n-                String ns \u003d findNamespace(intr, ac);\n-                if (ns \u003d\u003d null) {\n-                    ns \u003d \"\";\n+                if (ns \u003d\u003d null || ns.length() \u003d\u003d 0) {\n+                    ns \u003d findNamespace(intr, ac);\n                 }\n-                name \u003d new QName(ns, localName);\n             }\n+            if (ns \u003d\u003d null) {\n+                ns \u003d \"\";\n+            }\n+            name \u003d new QName(ns, localName);\n             _rootNames.put(key, name);\n         }\n     }\n     return name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ac97422c72402f2970e5d9eab7a727a308399d56": {
      "type": "Yintroduced",
      "commitMessage": "Added main codebase as well\n",
      "commitDate": "12/30/10, 10:22 PM",
      "commitName": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,25 @@\n+public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n+    ClassKey key \u003d new ClassKey(rootType);\n+    QName name;\n+    synchronized (_rootNames) {\n+        name \u003d _rootNames.get(key);\n+        if (name \u003d\u003d null) {\n+            BasicBeanDescription beanDesc \u003d (BasicBeanDescription) config.introspectClassAnnotations(rootType);\n+            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n+            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n+            String localName \u003d intr.findRootName(ac);\n+            if (localName \u003d\u003d null) {\n+                localName \u003d rootType.getSimpleName();\n+                name \u003d new QName(\"\", localName);\n+            } else {\n+                String ns \u003d findNamespace(intr, ac);\n+                if (ns \u003d\u003d null) {\n+                    ns \u003d \"\";\n+                }\n+                name \u003d new QName(ns, localName);\n+            }\n+            _rootNames.put(key, name);\n+        }\n+    }\n+    return name;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public QName findRootName(Class\u003c?\u003e rootType, MapperConfig\u003c?\u003e config) {\n    ClassKey key \u003d new ClassKey(rootType);\n    QName name;\n    synchronized (_rootNames) {\n        name \u003d _rootNames.get(key);\n        if (name \u003d\u003d null) {\n            BasicBeanDescription beanDesc \u003d (BasicBeanDescription) config.introspectClassAnnotations(rootType);\n            AnnotationIntrospector intr \u003d config.getAnnotationIntrospector();\n            AnnotatedClass ac \u003d beanDesc.getClassInfo();\n            String localName \u003d intr.findRootName(ac);\n            if (localName \u003d\u003d null) {\n                localName \u003d rootType.getSimpleName();\n                name \u003d new QName(\"\", localName);\n            } else {\n                String ns \u003d findNamespace(intr, ac);\n                if (ns \u003d\u003d null) {\n                    ns \u003d \"\";\n                }\n                name \u003d new QName(ns, localName);\n            }\n            _rootNames.put(key, name);\n        }\n    }\n    return name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/util/XmlRootNameLookup.java",
      "functionStartLine": 36,
      "functionName": "findRootName",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}