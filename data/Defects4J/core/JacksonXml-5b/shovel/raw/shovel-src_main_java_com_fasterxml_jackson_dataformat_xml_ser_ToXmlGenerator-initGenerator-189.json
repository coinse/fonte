{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-5b",
  "repositoryPath": "/tmp/JacksonXml-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ToXmlGenerator.java",
  "functionName": "initGenerator",
  "functionId": "initGenerator",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
  "functionAnnotation": "",
  "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
  "functionStartLine": 189,
  "functionEndLine": 213,
  "numCommitsSeen": 35,
  "timeTaken": 2062,
  "changeHistory": [
    "d2f70a03065d4fc7d040064abbbec4f66304c07e",
    "06c4283e36375908d29af960e3cc834309df544b",
    "471b123b91833885f858e70e7aa541db11c24fbe",
    "dc863809ea2daad78bca8e73ff0c27ebb9527f17",
    "948d377c7aafb0ed91a244415df07f3f6c106be2",
    "478883dc04ab768edc2230f49871993b41899a93",
    "ac97422c72402f2970e5d9eab7a727a308399d56"
  ],
  "changeHistoryShort": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": "Ybodychange",
    "06c4283e36375908d29af960e3cc834309df544b": "Ybodychange",
    "471b123b91833885f858e70e7aa541db11c24fbe": "Ybodychange",
    "dc863809ea2daad78bca8e73ff0c27ebb9527f17": "Ybodychange",
    "948d377c7aafb0ed91a244415df07f3f6c106be2": "Yfilerename",
    "478883dc04ab768edc2230f49871993b41899a93": "Yfilerename",
    "ac97422c72402f2970e5d9eab7a727a308399d56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": {
      "type": "Ybodychange",
      "commitMessage": "Further work to clean up exceptio unwrapping, propagation.\n",
      "commitDate": "7/17/17, 4:49 PM",
      "commitName": "d2f70a03065d4fc7d040064abbbec4f66304c07e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/17/17, 4:24 PM",
      "commitNameOld": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException {\n    if (_initialized) {\n        return;\n    }\n    _initialized \u003d true;\n    try {\n        if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        } else {\n            return;\n        }\n        if (_xmlPrettyPrinter !\u003d null) {\n            if (!_stax2Emulation) {\n                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 189,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "@@ -1,22 +1,22 @@\n public void initGenerator() throws IOException {\n     if (_initialized) {\n         return;\n     }\n     _initialized \u003d true;\n     try {\n         if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n         } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n         } else {\n             return;\n         }\n         if (_xmlPrettyPrinter !\u003d null) {\n             if (!_stax2Emulation) {\n                 _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n             }\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwAsGenerationException(e);\n+        StaxUtil.throwAsGenerationException(e, this);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06c4283e36375908d29af960e3cc834309df544b": {
      "type": "Ybodychange",
      "commitMessage": "Test refactoring; initial work to address #236\n",
      "commitDate": "7/17/17, 4:24 PM",
      "commitName": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/9/17, 3:55 AM",
      "commitNameOld": "75c803722a92fcbf8918138a9f04451bcf43a3c7",
      "commitAuthorOld": "yury.vasyutinskiy",
      "daysBetweenCommits": 69.52,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException {\n    if (_initialized) {\n        return;\n    }\n    _initialized \u003d true;\n    try {\n        if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        } else {\n            return;\n        }\n        if (_xmlPrettyPrinter !\u003d null) {\n            if (!_stax2Emulation) {\n                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 189,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "@@ -1,22 +1,22 @@\n public void initGenerator() throws IOException {\n     if (_initialized) {\n         return;\n     }\n     _initialized \u003d true;\n     try {\n         if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n         } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n         } else {\n             return;\n         }\n         if (_xmlPrettyPrinter !\u003d null) {\n             if (!_stax2Emulation) {\n                 _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n             }\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwXmlAsIOException(e);\n+        StaxUtil.throwAsGenerationException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "471b123b91833885f858e70e7aa541db11c24fbe": {
      "type": "Ybodychange",
      "commitMessage": "Fixed #172 completely for 2.7.0-rc2\n",
      "commitDate": "12/6/15, 2:04 PM",
      "commitName": "471b123b91833885f858e70e7aa541db11c24fbe",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/27/15, 11:22 PM",
      "commitNameOld": "67948bb6a2990aab691850034d32d074c1be7eec",
      "commitAuthorOld": "",
      "daysBetweenCommits": 192.65,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException {\n    if (_initialized) {\n        return;\n    }\n    _initialized \u003d true;\n    try {\n        if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        } else {\n            return;\n        }\n        if (_xmlPrettyPrinter !\u003d null) {\n            if (!_stax2Emulation) {\n                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 189,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "@@ -1,15 +1,22 @@\n public void initGenerator() throws IOException {\n     if (_initialized) {\n         return;\n     }\n     _initialized \u003d true;\n     try {\n-        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n+        if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n-        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n+        } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n+        } else {\n+            return;\n+        }\n+        if (_xmlPrettyPrinter !\u003d null) {\n+            if (!_stax2Emulation) {\n+                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n+            }\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dc863809ea2daad78bca8e73ff0c27ebb9527f17": {
      "type": "Ybodychange",
      "commitMessage": "Add a small robustification wrt #54\n",
      "commitDate": "3/12/13, 8:05 PM",
      "commitName": "dc863809ea2daad78bca8e73ff0c27ebb9527f17",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/11/13, 8:19 PM",
      "commitNameOld": "2b21a9efe673eca4fa4f443dcd3289e91db80bc9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException, JsonGenerationException {\n    if (_initialized) {\n        return;\n    }\n    _initialized \u003d true;\n    try {\n        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 182,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "@@ -1,11 +1,15 @@\n public void initGenerator() throws IOException, JsonGenerationException {\n+    if (_initialized) {\n+        return;\n+    }\n+    _initialized \u003d true;\n     try {\n         if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n         } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n             _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "948d377c7aafb0ed91a244415df07f3f6c106be2": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "2/19/12, 9:55 PM",
      "commitName": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:53 PM",
      "commitNameOld": "4eb1efdf62fa5efab2422803d0f821932dda5c5a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException, JsonGenerationException {\n    try {\n        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 149,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java"
      }
    },
    "478883dc04ab768edc2230f49871993b41899a93": {
      "type": "Yfilerename",
      "commitMessage": "Adding XmlAnnotationIntrospector.Pair\n",
      "commitDate": "1/1/11, 7:24 PM",
      "commitName": "478883dc04ab768edc2230f49871993b41899a93",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/1/11, 6:40 PM",
      "commitNameOld": "09eec8108d8ca9757034443410253d2d72176fd5",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initGenerator() throws IOException, JsonGenerationException {\n    try {\n        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 152,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java"
      }
    },
    "ac97422c72402f2970e5d9eab7a727a308399d56": {
      "type": "Yintroduced",
      "commitMessage": "Added main codebase as well\n",
      "commitDate": "12/30/10, 10:22 PM",
      "commitName": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,11 @@\n+public void initGenerator() throws IOException, JsonGenerationException {\n+    try {\n+        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n+            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n+        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n+            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n+        }\n+    } catch (XMLStreamException e) {\n+        StaxUtil.throwXmlAsIOException(e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void initGenerator() throws IOException, JsonGenerationException {\n    try {\n        if ((_xmlFeatures \u0026 Feature.WRITE_XML_1_1.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.1\");\n        } else if ((_xmlFeatures \u0026 Feature.WRITE_XML_DECLARATION.getMask()) !\u003d 0) {\n            _xmlWriter.writeStartDocument(\"UTF-8\", \"1.0\");\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
      "functionStartLine": 152,
      "functionName": "initGenerator",
      "functionAnnotation": "",
      "functionDoc": "Method called before writing any other output, to optionally\noutput XML declaration.\n"
    }
  }
}