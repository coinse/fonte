{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-5b",
  "repositoryPath": "/tmp/JacksonXml-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ToXmlGenerator.java",
  "functionName": "writeNumber",
  "functionId": "writeNumber___i-int",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 920,
  "functionEndLine": 946,
  "numCommitsSeen": 35,
  "timeTaken": 2024,
  "changeHistory": [
    "d2f70a03065d4fc7d040064abbbec4f66304c07e",
    "06c4283e36375908d29af960e3cc834309df544b",
    "1dff4683a6e66f1bc12fe3171ecb31c7cac5a6ca",
    "146e4ea199698cb8c767c19fda471d55b0ec71e4",
    "948d377c7aafb0ed91a244415df07f3f6c106be2",
    "478883dc04ab768edc2230f49871993b41899a93",
    "ac97422c72402f2970e5d9eab7a727a308399d56"
  ],
  "changeHistoryShort": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": "Ybodychange",
    "06c4283e36375908d29af960e3cc834309df544b": "Ybodychange",
    "1dff4683a6e66f1bc12fe3171ecb31c7cac5a6ca": "Ybodychange",
    "146e4ea199698cb8c767c19fda471d55b0ec71e4": "Ybodychange",
    "948d377c7aafb0ed91a244415df07f3f6c106be2": "Yfilerename",
    "478883dc04ab768edc2230f49871993b41899a93": "Yfilerename",
    "ac97422c72402f2970e5d9eab7a727a308399d56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": {
      "type": "Ybodychange",
      "commitMessage": "Further work to clean up exceptio unwrapping, propagation.\n",
      "commitDate": "7/17/17, 4:49 PM",
      "commitName": "d2f70a03065d4fc7d040064abbbec4f66304c07e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/17/17, 4:24 PM",
      "commitNameOld": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeInt(i);\n        } else {\n            if (_xmlPrettyPrinter !\u003d null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInt(i);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 900,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n @Override\n public void writeNumber(int i) throws IOException {\n     _verifyValueWrite(\"write number\");\n     if (_nextName \u003d\u003d null) {\n         handleMissingName();\n     }\n     try {\n         if (_nextIsAttribute) {\n             _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n         } else if (checkNextIsUnwrapped()) {\n             _xmlWriter.writeInt(i);\n         } else {\n             if (_xmlPrettyPrinter !\u003d null) {\n                 _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n             } else {\n                 _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                 _xmlWriter.writeInt(i);\n                 _xmlWriter.writeEndElement();\n             }\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwAsGenerationException(e);\n+        StaxUtil.throwAsGenerationException(e, this);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06c4283e36375908d29af960e3cc834309df544b": {
      "type": "Ybodychange",
      "commitMessage": "Test refactoring; initial work to address #236\n",
      "commitDate": "7/17/17, 4:24 PM",
      "commitName": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/9/17, 3:55 AM",
      "commitNameOld": "75c803722a92fcbf8918138a9f04451bcf43a3c7",
      "commitAuthorOld": "yury.vasyutinskiy",
      "daysBetweenCommits": 69.52,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeInt(i);\n        } else {\n            if (_xmlPrettyPrinter !\u003d null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInt(i);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 900,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n @Override\n public void writeNumber(int i) throws IOException {\n     _verifyValueWrite(\"write number\");\n     if (_nextName \u003d\u003d null) {\n         handleMissingName();\n     }\n     try {\n         if (_nextIsAttribute) {\n             _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n         } else if (checkNextIsUnwrapped()) {\n             _xmlWriter.writeInt(i);\n         } else {\n             if (_xmlPrettyPrinter !\u003d null) {\n                 _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n             } else {\n                 _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                 _xmlWriter.writeInt(i);\n                 _xmlWriter.writeEndElement();\n             }\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwXmlAsIOException(e);\n+        StaxUtil.throwAsGenerationException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1dff4683a6e66f1bc12fe3171ecb31c7cac5a6ca": {
      "type": "Ybodychange",
      "commitMessage": "First part of [Issue-23] implemented: @JacksonXmlText now added, works for serialization\n",
      "commitDate": "4/4/12, 5:02 PM",
      "commitName": "1dff4683a6e66f1bc12fe3171ecb31c7cac5a6ca",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/21/12, 6:02 PM",
      "commitNameOld": "4e43d66d0359077203061e2bfad8f5b2d637ae78",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 13.96,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException, JsonGenerationException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeInt(i);\n        } else {\n            if (_xmlPrettyPrinter !\u003d null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInt(i);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 652,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,24 @@\n @Override\n public void writeNumber(int i) throws IOException, JsonGenerationException {\n     _verifyValueWrite(\"write number\");\n     if (_nextName \u003d\u003d null) {\n         handleMissingName();\n     }\n     try {\n         if (_nextIsAttribute) {\n             _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n+        } else if (checkNextIsUnwrapped()) {\n+            _xmlWriter.writeInt(i);\n         } else {\n             if (_xmlPrettyPrinter !\u003d null) {\n                 _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n             } else {\n                 _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                 _xmlWriter.writeInt(i);\n                 _xmlWriter.writeEndElement();\n             }\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "146e4ea199698cb8c767c19fda471d55b0ec71e4": {
      "type": "Ybodychange",
      "commitMessage": "Implemented rudimentary indentation for XML output\n",
      "commitDate": "3/6/12, 8:50 PM",
      "commitName": "146e4ea199698cb8c767c19fda471d55b0ec71e4",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:55 PM",
      "commitNameOld": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 15.95,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException, JsonGenerationException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else {\n            if (_xmlPrettyPrinter !\u003d null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInt(i);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 628,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,22 @@\n @Override\n public void writeNumber(int i) throws IOException, JsonGenerationException {\n     _verifyValueWrite(\"write number\");\n     if (_nextName \u003d\u003d null) {\n         handleMissingName();\n     }\n     try {\n         if (_nextIsAttribute) {\n             _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n         } else {\n-            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n-            _xmlWriter.writeInt(i);\n-            _xmlWriter.writeEndElement();\n+            if (_xmlPrettyPrinter !\u003d null) {\n+                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n+            } else {\n+                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n+                _xmlWriter.writeInt(i);\n+                _xmlWriter.writeEndElement();\n+            }\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "948d377c7aafb0ed91a244415df07f3f6c106be2": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "2/19/12, 9:55 PM",
      "commitName": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:53 PM",
      "commitNameOld": "4eb1efdf62fa5efab2422803d0f821932dda5c5a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException, JsonGenerationException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeInt(i);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 589,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java"
      }
    },
    "478883dc04ab768edc2230f49871993b41899a93": {
      "type": "Yfilerename",
      "commitMessage": "Adding XmlAnnotationIntrospector.Pair\n",
      "commitDate": "1/1/11, 7:24 PM",
      "commitName": "478883dc04ab768edc2230f49871993b41899a93",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/1/11, 6:40 PM",
      "commitNameOld": "09eec8108d8ca9757034443410253d2d72176fd5",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException, JsonGenerationException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeInt(i);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 599,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java"
      }
    },
    "ac97422c72402f2970e5d9eab7a727a308399d56": {
      "type": "Yintroduced",
      "commitMessage": "Added main codebase as well\n",
      "commitDate": "12/30/10, 10:22 PM",
      "commitName": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,18 @@\n+@Override\n+public void writeNumber(int i) throws IOException, JsonGenerationException {\n+    _verifyValueWrite(\"write number\");\n+    if (_nextName \u003d\u003d null) {\n+        handleMissingName();\n+    }\n+    try {\n+        if (_nextIsAttribute) {\n+            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n+        } else {\n+            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n+            _xmlWriter.writeInt(i);\n+            _xmlWriter.writeEndElement();\n+        }\n+    } catch (XMLStreamException e) {\n+        StaxUtil.throwXmlAsIOException(e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void writeNumber(int i) throws IOException, JsonGenerationException {\n    _verifyValueWrite(\"write number\");\n    if (_nextName \u003d\u003d null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeInt(i);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
      "functionStartLine": 599,
      "functionName": "writeNumber",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}