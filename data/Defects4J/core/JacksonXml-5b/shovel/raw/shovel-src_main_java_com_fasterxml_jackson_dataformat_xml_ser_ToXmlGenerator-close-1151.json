{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-5b",
  "repositoryPath": "/tmp/JacksonXml-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ToXmlGenerator.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 1151,
  "functionEndLine": 1190,
  "numCommitsSeen": 35,
  "timeTaken": 2104,
  "changeHistory": [
    "d2f70a03065d4fc7d040064abbbec4f66304c07e",
    "06c4283e36375908d29af960e3cc834309df544b",
    "ca1c671c419e88a18357d497ec3671c73c37452e",
    "2d6da71a613b691d9fa56c29904990f79cb04a07",
    "948d377c7aafb0ed91a244415df07f3f6c106be2",
    "478883dc04ab768edc2230f49871993b41899a93",
    "ac97422c72402f2970e5d9eab7a727a308399d56"
  ],
  "changeHistoryShort": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": "Ybodychange",
    "06c4283e36375908d29af960e3cc834309df544b": "Ybodychange",
    "ca1c671c419e88a18357d497ec3671c73c37452e": "Ybodychange",
    "2d6da71a613b691d9fa56c29904990f79cb04a07": "Ybodychange",
    "948d377c7aafb0ed91a244415df07f3f6c106be2": "Yfilerename",
    "478883dc04ab768edc2230f49871993b41899a93": "Yfilerename",
    "ac97422c72402f2970e5d9eab7a727a308399d56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": {
      "type": "Ybodychange",
      "commitMessage": "Further work to clean up exceptio unwrapping, propagation.\n",
      "commitDate": "7/17/17, 4:49 PM",
      "commitName": "d2f70a03065d4fc7d040064abbbec4f66304c07e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/17/17, 4:24 PM",
      "commitNameOld": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d _writeContext;\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e, this);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 1131,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void close() throws IOException {\n     super.close();\n     if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n         try {\n             while (true) {\n                 JsonStreamContext ctxt \u003d _writeContext;\n                 if (ctxt.inArray()) {\n                     writeEndArray();\n                 } else if (ctxt.inObject()) {\n                     writeEndObject();\n                 } else {\n                     break;\n                 }\n             }\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new JsonGenerationException(e, this);\n         }\n     }\n     try {\n         if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n             _xmlWriter.closeCompletely();\n         } else {\n             _xmlWriter.close();\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwAsGenerationException(e);\n+        StaxUtil.throwAsGenerationException(e, this);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06c4283e36375908d29af960e3cc834309df544b": {
      "type": "Ybodychange",
      "commitMessage": "Test refactoring; initial work to address #236\n",
      "commitDate": "7/17/17, 4:24 PM",
      "commitName": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/9/17, 3:55 AM",
      "commitNameOld": "75c803722a92fcbf8918138a9f04451bcf43a3c7",
      "commitAuthorOld": "yury.vasyutinskiy",
      "daysBetweenCommits": 69.52,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d _writeContext;\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e, this);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 1131,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void close() throws IOException {\n     super.close();\n     if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n         try {\n             while (true) {\n                 JsonStreamContext ctxt \u003d _writeContext;\n                 if (ctxt.inArray()) {\n                     writeEndArray();\n                 } else if (ctxt.inObject()) {\n                     writeEndObject();\n                 } else {\n                     break;\n                 }\n             }\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new JsonGenerationException(e, this);\n         }\n     }\n     try {\n         if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n             _xmlWriter.closeCompletely();\n         } else {\n             _xmlWriter.close();\n         }\n     } catch (XMLStreamException e) {\n-        StaxUtil.throwXmlAsIOException(e);\n+        StaxUtil.throwAsGenerationException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ca1c671c419e88a18357d497ec3671c73c37452e": {
      "type": "Ybodychange",
      "commitMessage": "minor backwards compatibility imrpovement wrt getOutputContext() between 2.7 and 2.8\n",
      "commitDate": "5/28/16, 3:07 PM",
      "commitName": "ca1c671c419e88a18357d497ec3671c73c37452e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/6/16, 10:18 PM",
      "commitNameOld": "2d6da71a613b691d9fa56c29904990f79cb04a07",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 142.66,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d _writeContext;\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e, this);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 1069,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void close() throws IOException {\n     super.close();\n     if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n         try {\n             while (true) {\n-                JsonStreamContext ctxt \u003d getOutputContext();\n+                JsonStreamContext ctxt \u003d _writeContext;\n                 if (ctxt.inArray()) {\n                     writeEndArray();\n                 } else if (ctxt.inObject()) {\n                     writeEndObject();\n                 } else {\n                     break;\n                 }\n             }\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new JsonGenerationException(e, this);\n         }\n     }\n     try {\n         if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n             _xmlWriter.closeCompletely();\n         } else {\n             _xmlWriter.close();\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2d6da71a613b691d9fa56c29904990f79cb04a07": {
      "type": "Ybodychange",
      "commitMessage": "warnings removal\n",
      "commitDate": "1/6/16, 10:18 PM",
      "commitName": "2d6da71a613b691d9fa56c29904990f79cb04a07",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/6/15, 2:04 PM",
      "commitNameOld": "471b123b91833885f858e70e7aa541db11c24fbe",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 31.34,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d getOutputContext();\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e, this);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 1064,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void close() throws IOException {\n     super.close();\n     if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n         try {\n             while (true) {\n                 JsonStreamContext ctxt \u003d getOutputContext();\n                 if (ctxt.inArray()) {\n                     writeEndArray();\n                 } else if (ctxt.inObject()) {\n                     writeEndObject();\n                 } else {\n                     break;\n                 }\n             }\n         } catch (ArrayIndexOutOfBoundsException e) {\n-            throw new JsonGenerationException(e);\n+            throw new JsonGenerationException(e, this);\n         }\n     }\n     try {\n         if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n             _xmlWriter.closeCompletely();\n         } else {\n             _xmlWriter.close();\n         }\n     } catch (XMLStreamException e) {\n         StaxUtil.throwXmlAsIOException(e);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "948d377c7aafb0ed91a244415df07f3f6c106be2": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "2/19/12, 9:55 PM",
      "commitName": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:53 PM",
      "commitNameOld": "4eb1efdf62fa5efab2422803d0f821932dda5c5a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d getOutputContext();\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 767,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java"
      }
    },
    "478883dc04ab768edc2230f49871993b41899a93": {
      "type": "Yfilerename",
      "commitMessage": "Adding XmlAnnotationIntrospector.Pair\n",
      "commitDate": "1/1/11, 7:24 PM",
      "commitName": "478883dc04ab768edc2230f49871993b41899a93",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/1/11, 6:40 PM",
      "commitNameOld": "09eec8108d8ca9757034443410253d2d72176fd5",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d getOutputContext();\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java",
      "functionStartLine": 777,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
        "newPath": "src/main/java/com/fasterxml/jackson/xml/ser/ToXmlGenerator.java"
      }
    },
    "ac97422c72402f2970e5d9eab7a727a308399d56": {
      "type": "Yintroduced",
      "commitMessage": "Added main codebase as well\n",
      "commitDate": "12/30/10, 10:22 PM",
      "commitName": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,29 @@\n+@Override\n+public void close() throws IOException {\n+    super.close();\n+    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n+        try {\n+            while (true) {\n+                JsonStreamContext ctxt \u003d getOutputContext();\n+                if (ctxt.inArray()) {\n+                    writeEndArray();\n+                } else if (ctxt.inObject()) {\n+                    writeEndObject();\n+                } else {\n+                    break;\n+                }\n+            }\n+        } catch (ArrayIndexOutOfBoundsException e) {\n+            throw new JsonGenerationException(e);\n+        }\n+    }\n+    try {\n+        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n+            _xmlWriter.closeCompletely();\n+        } else {\n+            _xmlWriter.close();\n+        }\n+    } catch (XMLStreamException e) {\n+        StaxUtil.throwXmlAsIOException(e);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void close() throws IOException {\n    super.close();\n    if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n        try {\n            while (true) {\n                JsonStreamContext ctxt \u003d getOutputContext();\n                if (ctxt.inArray()) {\n                    writeEndArray();\n                } else if (ctxt.inObject()) {\n                    writeEndObject();\n                } else {\n                    break;\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new JsonGenerationException(e);\n        }\n    }\n    try {\n        if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n            _xmlWriter.closeCompletely();\n        } else {\n            _xmlWriter.close();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwXmlAsIOException(e);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/ToXmlGenerator.java",
      "functionStartLine": 777,
      "functionName": "close",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}