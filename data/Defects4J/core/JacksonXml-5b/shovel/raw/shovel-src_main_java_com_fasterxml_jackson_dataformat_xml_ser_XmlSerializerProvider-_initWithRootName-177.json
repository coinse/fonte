{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-5b",
  "repositoryPath": "/tmp/JacksonXml-5b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XmlSerializerProvider.java",
  "functionName": "_initWithRootName",
  "functionId": "_initWithRootName___xgen-ToXmlGenerator__rootName-QName",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 177,
  "functionEndLine": 202,
  "numCommitsSeen": 31,
  "timeTaken": 927,
  "changeHistory": [
    "d2f70a03065d4fc7d040064abbbec4f66304c07e",
    "06c4283e36375908d29af960e3cc834309df544b",
    "2c5f6f4e0f7bbcfa566fbc91ee57baf8dd7a371a",
    "ca1c671c419e88a18357d497ec3671c73c37452e",
    "5cb108da85d545201a37f758b896351d504ba4a4",
    "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3",
    "479522112267a0448223d38870bf5d63e77a5c33",
    "e11f6cb52d5fec07a6cd2e148026bca7e37421dc",
    "0ad0c4977f7b1e93036152641042437523de7eb5",
    "e9faaec591c288917951ce77f12a1d9dfb4fbcd1"
  ],
  "changeHistoryShort": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": "Ybodychange",
    "06c4283e36375908d29af960e3cc834309df544b": "Ybodychange",
    "2c5f6f4e0f7bbcfa566fbc91ee57baf8dd7a371a": "Ybodychange",
    "ca1c671c419e88a18357d497ec3671c73c37452e": "Ybodychange",
    "5cb108da85d545201a37f758b896351d504ba4a4": "Yexceptionschange",
    "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3": "Ymultichange(Yparameterchange,Ybodychange)",
    "479522112267a0448223d38870bf5d63e77a5c33": "Ybodychange",
    "e11f6cb52d5fec07a6cd2e148026bca7e37421dc": "Ybodychange",
    "0ad0c4977f7b1e93036152641042437523de7eb5": "Ybodychange",
    "e9faaec591c288917951ce77f12a1d9dfb4fbcd1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d2f70a03065d4fc7d040064abbbec4f66304c07e": {
      "type": "Ybodychange",
      "commitMessage": "Further work to clean up exceptio unwrapping, propagation.\n",
      "commitDate": "7/17/17, 4:49 PM",
      "commitName": "d2f70a03065d4fc7d040064abbbec4f66304c07e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/17/17, 4:24 PM",
      "commitNameOld": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, xgen);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 177,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n         if (xgen.inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n-            StaxUtil.throwAsGenerationException(e);\n+            StaxUtil.throwAsGenerationException(e, xgen);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06c4283e36375908d29af960e3cc834309df544b": {
      "type": "Ybodychange",
      "commitMessage": "Test refactoring; initial work to address #236\n",
      "commitDate": "7/17/17, 4:24 PM",
      "commitName": "06c4283e36375908d29af960e3cc834309df544b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/17/17, 5:16 PM",
      "commitNameOld": "b2e92327571e7b2e83be4b1cca89db89dc495160",
      "commitAuthorOld": "",
      "daysBetweenCommits": 60.96,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 177,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n         if (xgen.inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n-            StaxUtil.throwXmlAsIOException(e);\n+            StaxUtil.throwAsGenerationException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2c5f6f4e0f7bbcfa566fbc91ee57baf8dd7a371a": {
      "type": "Ybodychange",
      "commitMessage": "Fix #213\n",
      "commitDate": "11/14/16, 10:34 PM",
      "commitName": "2c5f6f4e0f7bbcfa566fbc91ee57baf8dd7a371a",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/28/16, 3:07 PM",
      "commitNameOld": "ca1c671c419e88a18357d497ec3671c73c37452e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 170.35,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 221,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "ca1c671c419e88a18357d497ec3671c73c37452e": {
      "type": "Ybodychange",
      "commitMessage": "minor backwards compatibility imrpovement wrt getOutputContext() between 2.7 and 2.8\n",
      "commitDate": "5/28/16, 3:07 PM",
      "commitName": "ca1c671c419e88a18357d497ec3671c73c37452e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/6/15, 4:14 PM",
      "commitNameOld": "b8790f7c7e2d687f6e975ee952225af93c8d6fee",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 173.91,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 214,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n-        if (xgen.getOutputContext().inRoot()) {\n+        if (xgen.inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5cb108da85d545201a37f758b896351d504ba4a4": {
      "type": "Yexceptionschange",
      "commitMessage": "...\n",
      "commitDate": "10/6/14, 9:23 PM",
      "commitName": "5cb108da85d545201a37f758b896351d504ba4a4",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/19/13, 10:08 PM",
      "commitNameOld": "1252cc61fb7bbae4b384e9b674198cabad8988b0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 412.97,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.getOutputContext().inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 214,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n-protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException, JsonProcessingException {\n+protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n         if (xgen.getOutputContext().inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[IOException, JsonProcessingException]",
        "newValue": "[IOException]"
      }
    },
    "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix #71, problems with XmlMapper.convertValue()\n",
      "commitDate": "8/15/13, 11:28 AM",
      "commitName": "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix #71, problems with XmlMapper.convertValue()\n",
          "commitDate": "8/15/13, 11:28 AM",
          "commitName": "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/14/13, 10:31 PM",
          "commitNameOld": "479522112267a0448223d38870bf5d63e77a5c33",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException, JsonProcessingException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.getOutputContext().inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
          "functionStartLine": 218,
          "functionName": "_initWithRootName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,17 +1,16 @@\n-protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n-    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n+protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException, JsonProcessingException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n         if (xgen.getOutputContext().inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[jgen-JsonGenerator, rootName-QName]",
            "newValue": "[xgen-ToXmlGenerator, rootName-QName]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix #71, problems with XmlMapper.convertValue()\n",
          "commitDate": "8/15/13, 11:28 AM",
          "commitName": "a6df5db642b1e7ed16cffa50f10b1ae6987b3ae3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/14/13, 10:31 PM",
          "commitNameOld": "479522112267a0448223d38870bf5d63e77a5c33",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException, JsonProcessingException {\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.getOutputContext().inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
          "functionStartLine": 218,
          "functionName": "_initWithRootName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,17 +1,16 @@\n-protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n-    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n+protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException, JsonProcessingException {\n     if (!xgen.setNextNameIfMissing(rootName)) {\n         if (xgen.getOutputContext().inRoot()) {\n             xgen.setNextName(rootName);\n         }\n     }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "479522112267a0448223d38870bf5d63e77a5c33": {
      "type": "Ybodychange",
      "commitMessage": "Implement #38\n",
      "commitDate": "8/14/13, 10:31 PM",
      "commitName": "479522112267a0448223d38870bf5d63e77a5c33",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/28/12, 9:04 PM",
      "commitNameOld": "e11f6cb52d5fec07a6cd2e148026bca7e37421dc",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 259.02,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.getOutputContext().inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 198,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "e11f6cb52d5fec07a6cd2e148026bca7e37421dc": {
      "type": "Ybodychange",
      "commitMessage": "minor tweak to earlier fix, to ensure root name will be forcibly set\n",
      "commitDate": "11/28/12, 9:04 PM",
      "commitName": "e11f6cb52d5fec07a6cd2e148026bca7e37421dc",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/28/12, 8:58 PM",
      "commitNameOld": "0ad0c4977f7b1e93036152641042437523de7eb5",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        if (xgen.getOutputContext().inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 90,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,17 @@\n protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n     ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n-    xgen.setNextNameIfMissing(rootName);\n+    if (!xgen.setNextNameIfMissing(rootName)) {\n+        if (xgen.getOutputContext().inRoot()) {\n+            xgen.setNextName(rootName);\n+        }\n+    }\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0ad0c4977f7b1e93036152641042437523de7eb5": {
      "type": "Ybodychange",
      "commitMessage": "Fix [Issue#42]\n",
      "commitDate": "11/28/12, 8:58 PM",
      "commitName": "0ad0c4977f7b1e93036152641042437523de7eb5",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/6/12, 5:05 PM",
      "commitNameOld": "f67c1716222919dc589b8bf1f03fc1df042720ed",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 22.16,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n    xgen.setNextNameIfMissing(rootName);\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 90,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n     ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n-    xgen.setNextName(rootName);\n+    xgen.setNextNameIfMissing(rootName);\n     xgen.initGenerator();\n     String ns \u003d rootName.getNamespaceURI();\n     if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n         try {\n             xgen.getStaxWriter().setDefaultNamespace(ns);\n         } catch (XMLStreamException e) {\n             StaxUtil.throwXmlAsIOException(e);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e9faaec591c288917951ce77f12a1d9dfb4fbcd1": {
      "type": "Yintroduced",
      "commitMessage": "Fix [Issue-26]; root element should use \u0027default namespace\u0027, not explicit prefix\n",
      "commitDate": "5/23/12, 10:45 PM",
      "commitName": "e9faaec591c288917951ce77f12a1d9dfb4fbcd1",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,13 @@\n+protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n+    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n+    xgen.setNextName(rootName);\n+    xgen.initGenerator();\n+    String ns \u003d rootName.getNamespaceURI();\n+    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n+        try {\n+            xgen.getStaxWriter().setDefaultNamespace(ns);\n+        } catch (XMLStreamException e) {\n+            StaxUtil.throwXmlAsIOException(e);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void _initWithRootName(JsonGenerator jgen, QName rootName) throws IOException, JsonProcessingException {\n    ToXmlGenerator xgen \u003d (ToXmlGenerator) jgen;\n    xgen.setNextName(rootName);\n    xgen.initGenerator();\n    String ns \u003d rootName.getNamespaceURI();\n    if (ns !\u003d null \u0026\u0026 ns.length() \u003e 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
      "functionStartLine": 76,
      "functionName": "_initWithRootName",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}