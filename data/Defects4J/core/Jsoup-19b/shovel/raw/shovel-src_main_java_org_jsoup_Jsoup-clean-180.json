{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-19b",
  "repositoryPath": "/tmp/Jsoup-19b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Jsoup.java",
  "functionName": "clean",
  "functionId": "clean___bodyHtml-String__whitelist-Whitelist",
  "sourceFilePath": "src/main/java/org/jsoup/Jsoup.java",
  "functionAnnotation": "",
  "functionDoc": "     Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of permitted\n     tags and attributes.\n\n@ @param bodyHtml  input untrusted HTML\n     @param whitelist white-list of permitted HTML elements\n     @return safe HTML\n\n     @see Cleaner#clean(Document)\n",
  "functionStartLine": 180,
  "functionEndLine": 182,
  "numCommitsSeen": 23,
  "timeTaken": 529,
  "changeHistory": [
    "28418f8335d2b359690e80e61d0081f4e892769c",
    "8929d961dfd44d1a6758b81c9a0c5adf8e408f6b",
    "7649933bba7ad5960415065dd95cc99aada42240",
    "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea",
    "83b8d1a6c8db2d34fbb344ae3125781978910725"
  ],
  "changeHistoryShort": {
    "28418f8335d2b359690e80e61d0081f4e892769c": "Ydocchange",
    "8929d961dfd44d1a6758b81c9a0c5adf8e408f6b": "Ydocchange",
    "7649933bba7ad5960415065dd95cc99aada42240": "Ymultichange(Yparameterchange,Ybodychange)",
    "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea": "Ybodychange",
    "83b8d1a6c8db2d34fbb344ae3125781978910725": "Yintroduced"
  },
  "changeHistoryDetails": {
    "28418f8335d2b359690e80e61d0081f4e892769c": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "28418f8335d2b359690e80e61d0081f4e892769c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "3ff2694aa22c5e12bbc67b9d7ddf736a9cb82e5d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String clean(String bodyHtml, Whitelist whitelist) {\n    return clean(bodyHtml, \"\", whitelist);\n}",
      "path": "src/main/java/org/jsoup/Jsoup.java",
      "functionStartLine": 142,
      "functionName": "clean",
      "functionAnnotation": "",
      "functionDoc": "     Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of permitted\n     tags and attributes.\n\n@ @param bodyHtml  input untrusted HTML\n     @param whitelist white-list of permitted HTML elements\n     @return safe HTML\n\n     @see Cleaner#clean(Document)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of \npermitted tags and attributes.\n\n@param bodyHtml input untrusted HTML\n@param whitelist white-list of permitted HTML elements\n@return safe HTML\n@see Cleaner#clean(Document)\n",
        "newValue": "     Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of permitted\n     tags and attributes.\n\n@ @param bodyHtml  input untrusted HTML\n     @param whitelist white-list of permitted HTML elements\n     @return safe HTML\n\n     @see Cleaner#clean(Document)\n"
      }
    },
    "8929d961dfd44d1a6758b81c9a0c5adf8e408f6b": {
      "type": "Ydocchange",
      "commitMessage": "Implemented Jsoup.parse(File), and javadocced.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "8929d961dfd44d1a6758b81c9a0c5adf8e408f6b",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "bd3e7c8ada7748dc5cf2428e68c828c0cf744469",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String clean(String bodyHtml, Whitelist whitelist) {\n    return clean(bodyHtml, \"\", whitelist);\n}",
      "path": "src/main/java/org/jsoup/Jsoup.java",
      "functionStartLine": 113,
      "functionName": "clean",
      "functionAnnotation": "",
      "functionDoc": "Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of \npermitted tags and attributes.\n\n@param bodyHtml input untrusted HTML\n@param whitelist white-list of permitted HTML elements\n@return safe HTML\n@see Cleaner#clean(Document)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of \npermitted tags and attributes.\n\n@param bodyHtml input untrusted HTML\n@param whitelist white-list of permitted HTML elements\n@return safe HTML\n@see Cleaner#clean(Document)\n"
      }
    },
    "7649933bba7ad5960415065dd95cc99aada42240": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Adds Parser.parseBodyFragment method.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "7649933bba7ad5960415065dd95cc99aada42240",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Adds Parser.parseBodyFragment method.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7649933bba7ad5960415065dd95cc99aada42240",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static String clean(String bodyHtml, Whitelist whitelist) {\n    return clean(bodyHtml, \"\", whitelist);\n}",
          "path": "src/main/java/org/jsoup/Jsoup.java",
          "functionStartLine": 37,
          "functionName": "clean",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-public static String clean(String html, Whitelist whitelist) {\n-    Document dirty \u003d Jsoup.parse(\"\u003cbody\u003e\" + html);\n-    Cleaner cleaner \u003d new Cleaner(whitelist);\n-    Document clean \u003d cleaner.clean(dirty);\n-    return clean.getBody().html();\n+public static String clean(String bodyHtml, Whitelist whitelist) {\n+    return clean(bodyHtml, \"\", whitelist);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[html-String, whitelist-Whitelist]",
            "newValue": "[bodyHtml-String, whitelist-Whitelist]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Adds Parser.parseBodyFragment method.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "7649933bba7ad5960415065dd95cc99aada42240",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static String clean(String bodyHtml, Whitelist whitelist) {\n    return clean(bodyHtml, \"\", whitelist);\n}",
          "path": "src/main/java/org/jsoup/Jsoup.java",
          "functionStartLine": 37,
          "functionName": "clean",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,3 @@\n-public static String clean(String html, Whitelist whitelist) {\n-    Document dirty \u003d Jsoup.parse(\"\u003cbody\u003e\" + html);\n-    Cleaner cleaner \u003d new Cleaner(whitelist);\n-    Document clean \u003d cleaner.clean(dirty);\n-    return clean.getBody().html();\n+public static String clean(String bodyHtml, Whitelist whitelist) {\n+    return clean(bodyHtml, \"\", whitelist);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea": {
      "type": "Ybodychange",
      "commitMessage": "Extra Cleaner tests.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "cdeae1e34bcc646c3bd07e7d74e7fc164a157bea",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "83b8d1a6c8db2d34fbb344ae3125781978910725",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String clean(String html, Whitelist whitelist) {\n    Document dirty \u003d Jsoup.parse(\"\u003cbody\u003e\" + html);\n    Cleaner cleaner \u003d new Cleaner(whitelist);\n    Document clean \u003d cleaner.clean(dirty);\n    return clean.getBody().html();\n}",
      "path": "src/main/java/org/jsoup/Jsoup.java",
      "functionStartLine": 22,
      "functionName": "clean",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,6 @@\n public static String clean(String html, Whitelist whitelist) {\n-    Document dirty \u003d Jsoup.parse(html);\n+    Document dirty \u003d Jsoup.parse(\"\u003cbody\u003e\" + html);\n     Cleaner cleaner \u003d new Cleaner(whitelist);\n     Document clean \u003d cleaner.clean(dirty);\n     return clean.getBody().html();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83b8d1a6c8db2d34fbb344ae3125781978910725": {
      "type": "Yintroduced",
      "commitMessage": "Initial Cleaner implementation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "83b8d1a6c8db2d34fbb344ae3125781978910725",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,6 @@\n+public static String clean(String html, Whitelist whitelist) {\n+    Document dirty \u003d Jsoup.parse(html);\n+    Cleaner cleaner \u003d new Cleaner(whitelist);\n+    Document clean \u003d cleaner.clean(dirty);\n+    return clean.getBody().html();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static String clean(String html, Whitelist whitelist) {\n    Document dirty \u003d Jsoup.parse(html);\n    Cleaner cleaner \u003d new Cleaner(whitelist);\n    Document clean \u003d cleaner.clean(dirty);\n    return clean.getBody().html();\n}",
      "path": "src/main/java/org/jsoup/Jsoup.java",
      "functionStartLine": 22,
      "functionName": "clean",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}