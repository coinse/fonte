{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-19b",
  "repositoryPath": "/tmp/Jsoup-19b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Cleaner.java",
  "functionName": "createSafeElement",
  "functionId": "createSafeElement___sourceEl-Element",
  "sourceFilePath": "src/main/java/org/jsoup/safety/Cleaner.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 100,
  "functionEndLine": 117,
  "numCommitsSeen": 11,
  "timeTaken": 716,
  "changeHistory": [
    "2660750b2e6691a2d5414f3f9f878b69a49539bb",
    "19f2541e9dad74a7e734225f3d1b598324a6ea49",
    "28418f8335d2b359690e80e61d0081f4e892769c",
    "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2",
    "3205f0ef9409bb622f66315983830aa89d9313cf",
    "83b8d1a6c8db2d34fbb344ae3125781978910725"
  ],
  "changeHistoryShort": {
    "2660750b2e6691a2d5414f3f9f878b69a49539bb": "Ybodychange",
    "19f2541e9dad74a7e734225f3d1b598324a6ea49": "Ymultichange(Yreturntypechange,Ybodychange)",
    "28418f8335d2b359690e80e61d0081f4e892769c": "Ybodychange",
    "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2": "Ybodychange",
    "3205f0ef9409bb622f66315983830aa89d9313cf": "Ybodychange",
    "83b8d1a6c8db2d34fbb344ae3125781978910725": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2660750b2e6691a2d5414f3f9f878b69a49539bb": {
      "type": "Ybodychange",
      "commitMessage": "Resolve relative links when cleaning.\n\nCloses #12.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "2660750b2e6691a2d5414f3f9f878b69a49539bb",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "19f2541e9dad74a7e734225f3d1b598324a6ea49",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private ElementMeta createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    int numDiscarded \u003d 0;\n    Attributes sourceAttrs \u003d sourceEl.attributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))\n            destAttrs.put(sourceAttr);\n        else\n            numDiscarded++;\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.addAll(enforcedAttrs);\n    return new ElementMeta(dest, numDiscarded);\n}",
      "path": "src/main/java/org/jsoup/safety/Cleaner.java",
      "functionStartLine": 100,
      "functionName": "createSafeElement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n private ElementMeta createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n     Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n     int numDiscarded \u003d 0;\n     Attributes sourceAttrs \u003d sourceEl.attributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n-        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n+        if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))\n             destAttrs.put(sourceAttr);\n         else\n             numDiscarded++;\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n     destAttrs.addAll(enforcedAttrs);\n     return new ElementMeta(dest, numDiscarded);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "19f2541e9dad74a7e734225f3d1b598324a6ea49": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Cleaner.isValid() method.\n\nCloses #6.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "19f2541e9dad74a7e734225f3d1b598324a6ea49",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Cleaner.isValid() method.\n\nCloses #6.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "19f2541e9dad74a7e734225f3d1b598324a6ea49",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "36be16cd662f56ea0fc01bedf14c8651ed74776f",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "actualSource": "private ElementMeta createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    int numDiscarded \u003d 0;\n    Attributes sourceAttrs \u003d sourceEl.attributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n        else\n            numDiscarded++;\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.addAll(enforcedAttrs);\n    return new ElementMeta(dest, numDiscarded);\n}",
          "path": "src/main/java/org/jsoup/safety/Cleaner.java",
          "functionStartLine": 100,
          "functionName": "createSafeElement",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,16 @@\n-private Element createSafeElement(Element sourceEl) {\n+private ElementMeta createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n     Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n+    int numDiscarded \u003d 0;\n     Attributes sourceAttrs \u003d sourceEl.attributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n         if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n             destAttrs.put(sourceAttr);\n+        else\n+            numDiscarded++;\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n     destAttrs.addAll(enforcedAttrs);\n-    return dest;\n+    return new ElementMeta(dest, numDiscarded);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Element",
            "newValue": "ElementMeta"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Cleaner.isValid() method.\n\nCloses #6.\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "19f2541e9dad74a7e734225f3d1b598324a6ea49",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "36be16cd662f56ea0fc01bedf14c8651ed74776f",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "actualSource": "private ElementMeta createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    int numDiscarded \u003d 0;\n    Attributes sourceAttrs \u003d sourceEl.attributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n        else\n            numDiscarded++;\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.addAll(enforcedAttrs);\n    return new ElementMeta(dest, numDiscarded);\n}",
          "path": "src/main/java/org/jsoup/safety/Cleaner.java",
          "functionStartLine": 100,
          "functionName": "createSafeElement",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,16 @@\n-private Element createSafeElement(Element sourceEl) {\n+private ElementMeta createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n     Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n+    int numDiscarded \u003d 0;\n     Attributes sourceAttrs \u003d sourceEl.attributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n         if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n             destAttrs.put(sourceAttr);\n+        else\n+            numDiscarded++;\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n     destAttrs.addAll(enforcedAttrs);\n-    return dest;\n+    return new ElementMeta(dest, numDiscarded);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "28418f8335d2b359690e80e61d0081f4e892769c": {
      "type": "Ybodychange",
      "commitMessage": "Javadoc\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "28418f8335d2b359690e80e61d0081f4e892769c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private Element createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    Attributes sourceAttrs \u003d sourceEl.attributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.addAll(enforcedAttrs);\n    return dest;\n}",
      "path": "src/main/java/org/jsoup/safety/Cleaner.java",
      "functionStartLine": 54,
      "functionName": "createSafeElement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private Element createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n     Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n     Attributes sourceAttrs \u003d sourceEl.attributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n         if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n             destAttrs.put(sourceAttr);\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n-    destAttrs.mergeAttributes(enforcedAttrs);\n+    destAttrs.addAll(enforcedAttrs);\n     return dest;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2": {
      "type": "Ybodychange",
      "commitMessage": "Dropped \"get\"\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "bd3e7c8ada7748dc5cf2428e68c828c0cf744469",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private Element createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    Attributes sourceAttrs \u003d sourceEl.attributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.mergeAttributes(enforcedAttrs);\n    return dest;\n}",
      "path": "src/main/java/org/jsoup/safety/Cleaner.java",
      "functionStartLine": 54,
      "functionName": "createSafeElement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private Element createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n     Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n-    Attributes sourceAttrs \u003d sourceEl.getAttributes();\n+    Attributes sourceAttrs \u003d sourceEl.attributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n         if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n             destAttrs.put(sourceAttr);\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n     destAttrs.mergeAttributes(enforcedAttrs);\n     return dest;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3205f0ef9409bb622f66315983830aa89d9313cf": {
      "type": "Ybodychange",
      "commitMessage": "Removed StartTag\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "3205f0ef9409bb622f66315983830aa89d9313cf",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "83d1848144abf29b501d59e0c3ec41e40c9cf020",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private Element createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n    Attributes sourceAttrs \u003d sourceEl.getAttributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.mergeAttributes(enforcedAttrs);\n    return dest;\n}",
      "path": "src/main/java/org/jsoup/safety/Cleaner.java",
      "functionStartLine": 54,
      "functionName": "createSafeElement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private Element createSafeElement(Element sourceEl) {\n     String sourceTag \u003d sourceEl.tagName();\n     Attributes destAttrs \u003d new Attributes();\n-    Element dest \u003d new Element(new StartTag(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs));\n+    Element dest \u003d new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs);\n     Attributes sourceAttrs \u003d sourceEl.getAttributes();\n     for (Attribute sourceAttr : sourceAttrs) {\n         if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n             destAttrs.put(sourceAttr);\n     }\n     Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n     destAttrs.mergeAttributes(enforcedAttrs);\n     return dest;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83b8d1a6c8db2d34fbb344ae3125781978910725": {
      "type": "Yintroduced",
      "commitMessage": "Initial Cleaner implementation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "83b8d1a6c8db2d34fbb344ae3125781978910725",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,13 @@\n+private Element createSafeElement(Element sourceEl) {\n+    String sourceTag \u003d sourceEl.tagName();\n+    Attributes destAttrs \u003d new Attributes();\n+    Element dest \u003d new Element(new StartTag(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs));\n+    Attributes sourceAttrs \u003d sourceEl.getAttributes();\n+    for (Attribute sourceAttr : sourceAttrs) {\n+        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n+            destAttrs.put(sourceAttr);\n+    }\n+    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n+    destAttrs.mergeAttributes(enforcedAttrs);\n+    return dest;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Element createSafeElement(Element sourceEl) {\n    String sourceTag \u003d sourceEl.tagName();\n    Attributes destAttrs \u003d new Attributes();\n    Element dest \u003d new Element(new StartTag(Tag.valueOf(sourceTag), sourceEl.baseUri(), destAttrs));\n    Attributes sourceAttrs \u003d sourceEl.getAttributes();\n    for (Attribute sourceAttr : sourceAttrs) {\n        if (whitelist.isSafeAttribute(sourceTag, sourceAttr))\n            destAttrs.put(sourceAttr);\n    }\n    Attributes enforcedAttrs \u003d whitelist.getEnforcedAttributes(sourceTag);\n    destAttrs.mergeAttributes(enforcedAttrs);\n    return dest;\n}",
      "path": "src/main/java/org/jsoup/safety/Cleaner.java",
      "functionStartLine": 55,
      "functionName": "createSafeElement",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}