{
  "origin": "codeshovel",
  "repositoryName": "Cli-38b",
  "repositoryPath": "/tmp/Cli-38b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "clone",
  "functionId": "clone",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "@Override",
  "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@code super.clone()}\n",
  "functionStartLine": 681,
  "functionEndLine": 693,
  "numCommitsSeen": 68,
  "timeTaken": 1339,
  "changeHistory": [
    "10090594827c3c90b9c0a5c8288cda448b0ce10c",
    "445ddaaa89bdcd003645b02b600fde1d3730d715",
    "89f274efb8608738aeb71a18bb714f58acdc9cb5",
    "a1b5d44432c057cf675f051bb20379937565f4ef",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa",
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd"
  ],
  "changeHistoryShort": {
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": "Ydocchange",
    "445ddaaa89bdcd003645b02b600fde1d3730d715": "Yannotationchange",
    "89f274efb8608738aeb71a18bb714f58acdc9cb5": "Ymultichange(Yreturntypechange,Ydocchange)",
    "a1b5d44432c057cf675f051bb20379937565f4ef": "Ymultichange(Yreturntypechange,Ybodychange)",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Yformatchange",
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa": "Ydocchange",
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": {
      "type": "Ydocchange",
      "commitMessage": "Make doclint happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1677406 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/3/15, 7:27 AM",
      "commitName": "10090594827c3c90b9c0a5c8288cda448b0ce10c",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "5/3/15, 6:57 AM",
      "commitNameOld": "6b87d290954c4594fc69a3a0b85fff12490cfde5",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 672,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@code super.clone()}\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@link super#clone()}\n",
        "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@code super.clone()}\n"
      }
    },
    "445ddaaa89bdcd003645b02b600fde1d3730d715": {
      "type": "Yannotationchange",
      "commitMessage": "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440517 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13, 8:51 AM",
      "commitName": "445ddaaa89bdcd003645b02b600fde1d3730d715",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/30/13, 1:14 AM",
      "commitNameOld": "5ff94c7daec3bea08f151df7cfe5b203e4d5be76",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 657,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@link super#clone()}\n",
      "diff": "@@ -1,9 +1,10 @@\n+@Override\n public Object clone() {\n     try {\n         Option option \u003d (Option) super.clone();\n         option.values \u003d new ArrayList\u003cString\u003e(values);\n         return option;\n     } catch (CloneNotSupportedException cnse) {\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "89f274efb8608738aeb71a18bb714f58acdc9cb5": {
      "type": "Ymultichange(Yreturntypechange,Ydocchange)",
      "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/13, 10:59 AM",
      "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
      "commitAuthor": "Thomas Neidhart",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/13, 10:59 AM",
          "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/27/13, 2:00 PM",
          "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 638,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@link super#clone()}\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Option clone() {\n+public Object clone() {\n     try {\n         Option option \u003d (Option) super.clone();\n         option.values \u003d new ArrayList\u003cString\u003e(values);\n         return option;\n     } catch (CloneNotSupportedException cnse) {\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Option",
            "newValue": "Object"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/13, 10:59 AM",
          "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/27/13, 2:00 PM",
          "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 638,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@link super#clone()}\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Option clone() {\n+public Object clone() {\n     try {\n         Option option \u003d (Option) super.clone();\n         option.values \u003d new ArrayList\u003cString\u003e(values);\n         return option;\n     } catch (CloneNotSupportedException cnse) {\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
            "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@return a clone of this Option instance\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\nby {@link super#clone()}\n"
          }
        }
      ]
    },
    "a1b5d44432c057cf675f051bb20379937565f4ef": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11, 11:57 AM",
      "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/12/11, 11:57 AM",
          "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "4/12/11, 8:55 AM",
          "commitNameOld": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Option clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 636,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Object clone() {\n+public Option clone() {\n     try {\n         Option option \u003d (Option) super.clone();\n-        option.values \u003d new ArrayList(values);\n+        option.values \u003d new ArrayList\u003cString\u003e(values);\n         return option;\n     } catch (CloneNotSupportedException cnse) {\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Object",
            "newValue": "Option"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/12/11, 11:57 AM",
          "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "4/12/11, 8:55 AM",
          "commitNameOld": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Option clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList\u003cString\u003e(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 636,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Object clone() {\n+public Option clone() {\n     try {\n         Option option \u003d (Option) super.clone();\n-        option.values \u003d new ArrayList(values);\n+        option.values \u003d new ArrayList\u003cString\u003e(values);\n         return option;\n     } catch (CloneNotSupportedException cnse) {\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10, 2:45 AM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10, 2:42 AM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 637,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/Option.java",
        "newPath": "src/main/java/org/apache/commons/cli/Option.java"
      }
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Yformatchange",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08, 1:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/22/08, 12:55 AM",
      "commitNameOld": "8ee0ed532e4ddbf2746d802f9926b9e3d0116cc5",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 7.01,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 637,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
      "diff": "",
      "extendedDetails": {}
    },
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa": {
      "type": "Ydocchange",
      "commitMessage": "Adding some javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551821 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07, 12:29 AM",
      "commitName": "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/29/07, 12:16 AM",
      "commitNameOld": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 645,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \nand in 1.1 rather than throwing a CloneNotSupportedException it throws \na RuntimeException so as to maintain backwards compat at the API level. \n\nAfter calling this method, it is very likely you will want to call \nclearValues().\n\n@throws RuntimeException\n"
      }
    },
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e": {
      "type": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07, 12:16 AM",
      "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07, 12:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07, 12:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\n-    Option option \u003d (Option) super.clone();\n-    option.values \u003d new ArrayList(values);\n-    return option;\n+public Object clone() {\n+    try {\n+        Option option \u003d (Option) super.clone();\n+        option.values \u003d new ArrayList(values);\n+        return option;\n+    } catch (CloneNotSupportedException cnse) {\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07, 12:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07, 12:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\n-    Option option \u003d (Option) super.clone();\n-    option.values \u003d new ArrayList(values);\n-    return option;\n+public Object clone() {\n+    try {\n+        Option option \u003d (Option) super.clone();\n+        option.values \u003d new ArrayList(values);\n+        return option;\n+    } catch (CloneNotSupportedException cnse) {\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[CloneNotSupportedException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07, 12:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07, 12:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\n    try {\n        Option option \u003d (Option) super.clone();\n        option.values \u003d new ArrayList(values);\n        return option;\n    } catch (CloneNotSupportedException cnse) {\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n    }\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\n-    Option option \u003d (Option) super.clone();\n-    option.values \u003d new ArrayList(values);\n-    return option;\n+public Object clone() {\n+    try {\n+        Option option \u003d (Option) super.clone();\n+        option.values \u003d new ArrayList(values);\n+        return option;\n+    } catch (CloneNotSupportedException cnse) {\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd": {
      "type": "Yintroduced",
      "commitMessage": "Applying Brian Egge\u0027s patch to CLI-21 that resurrects the clone() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@547721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/07, 8:51 AM",
      "commitName": "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,5 @@\n+protected Object clone() throws CloneNotSupportedException {\n+    Option option \u003d (Option) super.clone();\n+    option.values \u003d new ArrayList(values);\n+    return option;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected Object clone() throws CloneNotSupportedException {\n    Option option \u003d (Option) super.clone();\n    option.values \u003d new ArrayList(values);\n    return option;\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 635,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}