{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-43b",
  "repositoryPath": "/tmp/Jsoup-43b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "getElementById",
  "functionId": "getElementById___id-String",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID within a Document,\nuse {@link Document#getElementById(String)}\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n",
  "functionStartLine": 603,
  "functionEndLine": 611,
  "numCommitsSeen": 101,
  "timeTaken": 2908,
  "changeHistory": [
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "3dd9e66bc21c6f53aaa21ce45666610f68540555",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2",
    "f5b1a2ab1294970be9b4fc6abefe38ac7e5039be"
  ],
  "changeHistoryShort": {
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "3dd9e66bc21c6f53aaa21ce45666610f68540555": "Ybodychange",
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": "Ybodychange",
    "f5b1a2ab1294970be9b4fc6abefe38ac7e5039be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element getElementById(String id) {\n    Validate.notEmpty(id);\n    Elements elements \u003d Collector.collect(new Evaluator.Id(id), this);\n    if (elements.size() \u003e 0)\n        return elements.get(0);\n    else\n        return null;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 312,
      "functionName": "getElementById",
      "functionAnnotation": "",
      "functionDoc": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID within a Document,\nuse {@link Document#getElementById(String)}\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID withing a Document,\nuse Document.getElementById.\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n",
        "newValue": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID within a Document,\nuse {@link Document#getElementById(String)}\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n"
      }
    },
    "3dd9e66bc21c6f53aaa21ce45666610f68540555": {
      "type": "Ybodychange",
      "commitMessage": "Have Element DOM methods return Elements instead of List\u003cElement\u003e, to give ready access to .select(query)\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "3dd9e66bc21c6f53aaa21ce45666610f68540555",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "ce691239d40e469b75fa22b0bb6a065202c475a7",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element getElementById(String id) {\n    Validate.notEmpty(id);\n    Elements elements \u003d Collector.collect(new Evaluator.Id(id), this);\n    if (elements.size() \u003e 0)\n        return elements.get(0);\n    else\n        return null;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 139,
      "functionName": "getElementById",
      "functionAnnotation": "",
      "functionDoc": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID withing a Document,\nuse Document.getElementById.\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n",
      "diff": "@@ -1,8 +1,8 @@\n public Element getElementById(String id) {\n     Validate.notEmpty(id);\n-    List\u003cElement\u003e elements \u003d Collector.collect(new Evaluator.Id(id), this);\n+    Elements elements \u003d Collector.collect(new Evaluator.Id(id), this);\n     if (elements.size() \u003e 0)\n         return elements.get(0);\n     else\n         return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f435b791e193cfe771d7dbd28d2822c32a0889e2": {
      "type": "Ybodychange",
      "commitMessage": "Implemented:\n * Element.getElementsByClass\n * Element.getElementsWithAttribute\n * Element.getElementsWithAttributeValue\n * Element.className\n * Element.hasClass\n * Elmenet.classNames\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f435b791e193cfe771d7dbd28d2822c32a0889e2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "ffde882f49c01900d6ff3b65e9407a3da3d57f1c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element getElementById(String id) {\n    Validate.notEmpty(id);\n    List\u003cElement\u003e elements \u003d Collector.collect(new Evaluator.Id(id), this);\n    if (elements.size() \u003e 0)\n        return elements.get(0);\n    else\n        return null;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 133,
      "functionName": "getElementById",
      "functionAnnotation": "",
      "functionDoc": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID withing a Document,\nuse Document.getElementById.\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n",
      "diff": "@@ -1,11 +1,8 @@\n public Element getElementById(String id) {\n     Validate.notEmpty(id);\n-    if (this.id().equals(id))\n-        return this;\n-    for (Element child : elementChildren) {\n-        Element byId \u003d child.getElementById(id);\n-        if (byId !\u003d null)\n-            return byId;\n-    }\n-    return null;\n+    List\u003cElement\u003e elements \u003d Collector.collect(new Evaluator.Id(id), this);\n+    if (elements.size() \u003e 0)\n+        return elements.get(0);\n+    else\n+        return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f5b1a2ab1294970be9b4fc6abefe38ac7e5039be": {
      "type": "Yintroduced",
      "commitMessage": "Implemented Element.getElementById\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "f5b1a2ab1294970be9b4fc6abefe38ac7e5039be",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,11 @@\n+public Element getElementById(String id) {\n+    Validate.notEmpty(id);\n+    if (this.id().equals(id))\n+        return this;\n+    for (Element child : elementChildren) {\n+        Element byId \u003d child.getElementById(id);\n+        if (byId !\u003d null)\n+            return byId;\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Element getElementById(String id) {\n    Validate.notEmpty(id);\n    if (this.id().equals(id))\n        return this;\n    for (Element child : elementChildren) {\n        Element byId \u003d child.getElementById(id);\n        if (byId !\u003d null)\n            return byId;\n    }\n    return null;\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 109,
      "functionName": "getElementById",
      "functionAnnotation": "",
      "functionDoc": "Find an element by ID, including or under this element.\n\u003cp\u003e\nNote that this finds the first matching ID, starting with this element. If you search down from a different\nstarting point, it is possible to find a different element by ID. For unique element by ID withing a Document,\nuse Document.getElementById.\n\n@param id The ID to search for.\n@return The first matching element by ID, starting with this element, or null if none found.\n"
    }
  }
}