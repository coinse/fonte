{
  "origin": "codeshovel",
  "repositoryName": "JxPath-12b",
  "repositoryPath": "/tmp/JxPath-12b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DocumentContainer.java",
  "functionName": "getParser",
  "functionId": "getParser___model-String",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
  "functionAnnotation": "",
  "functionDoc": "Maps a model type to a parser.\n",
  "functionStartLine": 156,
  "functionEndLine": 174,
  "numCommitsSeen": 12,
  "timeTaken": 280,
  "changeHistory": [
    "2962ae198015d4a26500a858b34d3d780738d4a8",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "745fb47b2135800a4d5fdfdf180c03215669487c"
  ],
  "changeHistoryShort": {
    "2962ae198015d4a26500a858b34d3d780738d4a8": "Yformatchange",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "745fb47b2135800a4d5fdfdf180c03215669487c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2962ae198015d4a26500a858b34d3d780738d4a8": {
      "type": "Yformatchange",
      "commitMessage": "Added support for parser features\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/04, 5:42 PM",
      "commitName": "2962ae198015d4a26500a858b34d3d780738d4a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/9/03, 2:31 PM",
      "commitNameOld": "ecf573e1f80cd86060a2fcd23181cde3f67c9fdd",
      "commitAuthorOld": "Robert Burrell Donkin",
      "daysBetweenCommits": 100.17,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 201,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/26/02, 3:52 PM",
      "commitNameOld": "7ab48afabbb6ae99af9fee262a3af2def485bd7e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 137.28,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 167,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "745fb47b2135800a4d5fdfdf180c03215669487c": {
      "type": "Yintroduced",
      "commitMessage": "Refactored XML parsing by container to allow for alternative parsers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:28 PM",
      "commitName": "745fb47b2135800a4d5fdfdf180c03215669487c",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,17 @@\n+private static final XMLParser getParser(String model) {\n+    XMLParser parser \u003d (XMLParser) parsers.get(model);\n+    if (parser \u003d\u003d null) {\n+        String className \u003d (String) parserClasses.get(model);\n+        if (className \u003d\u003d null) {\n+            throw new JXPathException(\"Unsupported XML model: \" + model);\n+        }\n+        try {\n+            Class clazz \u003d Class.forName(className);\n+            parser \u003d (XMLParser) clazz.newInstance();\n+        } catch (Exception ex) {\n+            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n+        }\n+        parsers.put(model, parser);\n+    }\n+    return parser;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static final XMLParser getParser(String model) {\n    XMLParser parser \u003d (XMLParser) parsers.get(model);\n    if (parser \u003d\u003d null) {\n        String className \u003d (String) parserClasses.get(model);\n        if (className \u003d\u003d null) {\n            throw new JXPathException(\"Unsupported XML model: \" + model);\n        }\n        try {\n            Class clazz \u003d Class.forName(className);\n            parser \u003d (XMLParser) clazz.newInstance();\n        } catch (Exception ex) {\n            throw new JXPathException(\"Cannot allocate XMLParser: \" + className);\n        }\n        parsers.put(model, parser);\n    }\n    return parser;\n}",
      "path": "src/java/org/apache/commons/jxpath/xml/DocumentContainer.java",
      "functionStartLine": 166,
      "functionName": "getParser",
      "functionAnnotation": "",
      "functionDoc": "Maps a model type to a parser.\n"
    }
  }
}