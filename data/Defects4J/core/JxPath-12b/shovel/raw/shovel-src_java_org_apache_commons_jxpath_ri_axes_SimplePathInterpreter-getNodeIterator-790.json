{
  "origin": "codeshovel",
  "repositoryName": "JxPath-12b",
  "repositoryPath": "/tmp/JxPath-12b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplePathInterpreter.java",
  "functionName": "getNodeIterator",
  "functionId": "getNodeIterator___context-EvalContext__pointer-NodePointer__step-Step",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 790,
  "functionEndLine": 814,
  "numCommitsSeen": 37,
  "timeTaken": 1395,
  "changeHistory": [
    "d36e894cb61100284b81027d6765e66181f982b5",
    "30e4fdde61866403ce8912dfb8afe328502c4d20",
    "413edb7f5000c8f53914bcaf73058d763adfd525",
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "d5a51635e77e49efbf18c5b51834f533e7972953"
  ],
  "changeHistoryShort": {
    "d36e894cb61100284b81027d6765e66181f982b5": "Ybodychange",
    "30e4fdde61866403ce8912dfb8afe328502c4d20": "Ybodychange",
    "413edb7f5000c8f53914bcaf73058d763adfd525": "Ybodychange",
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a": "Ymultichange(Yparameterchange,Ybodychange)",
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d36e894cb61100284b81027d6765e66181f982b5": {
      "type": "Ybodychange",
      "commitMessage": "revert changes for JXPATH-61\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@540278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/21/07, 1:38 PM",
      "commitName": "d36e894cb61100284b81027d6765e66181f982b5",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "2/19/07, 3:24 PM",
      "commitNameOld": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthorOld": "Matthew Jason Benson",
      "daysBetweenCommits": 90.88,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NodeTest nodeTest \u003d step.getNodeTest();\n        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n        String prefix \u003d qname.getPrefix();\n        if (prefix !\u003d null) {\n            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    }\n    if (!(step.getNodeTest() instanceof NodeNameTest)) {\n        throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n    }\n    return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 790,
      "functionName": "getNodeIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n     if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n         NodeTest nodeTest \u003d step.getNodeTest();\n         QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n         String prefix \u003d qname.getPrefix();\n-        String namespaceURI \u003d prefix !\u003d null ? context.getJXPathContext().getNamespaceURI(prefix) : context.getJXPathContext().getDefaultNamespaceURI();\n-        if (namespaceURI !\u003d null) {\n+        if (prefix !\u003d null) {\n+            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n             nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n         }\n         return pointer.childIterator(nodeTest, false, null);\n     }\n     if (!(step.getNodeTest() instanceof NodeNameTest)) {\n         throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n     }\n     return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "30e4fdde61866403ce8912dfb8afe328502c4d20": {
      "type": "Ybodychange",
      "commitMessage": "bulled through JXPath codebase to get a little better familiarity; tiny refactorings and removals of unnecessary elses, etc. along the way\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@509378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/19/07, 3:24 PM",
      "commitName": "30e4fdde61866403ce8912dfb8afe328502c4d20",
      "commitAuthor": "Matthew Jason Benson",
      "commitDateOld": "11/28/06, 9:37 PM",
      "commitNameOld": "a78dc45a3795e3b9666daed8c13ccc7f4ff48806",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NodeTest nodeTest \u003d step.getNodeTest();\n        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n        String prefix \u003d qname.getPrefix();\n        String namespaceURI \u003d prefix !\u003d null ? context.getJXPathContext().getNamespaceURI(prefix) : context.getJXPathContext().getDefaultNamespaceURI();\n        if (namespaceURI !\u003d null) {\n            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    }\n    if (!(step.getNodeTest() instanceof NodeNameTest)) {\n        throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n    }\n    return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 790,
      "functionName": "getNodeIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,16 @@\n private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n     if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n         NodeTest nodeTest \u003d step.getNodeTest();\n         QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n         String prefix \u003d qname.getPrefix();\n         String namespaceURI \u003d prefix !\u003d null ? context.getJXPathContext().getNamespaceURI(prefix) : context.getJXPathContext().getDefaultNamespaceURI();\n         if (namespaceURI !\u003d null) {\n             nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n         }\n         return pointer.childIterator(nodeTest, false, null);\n-    } else {\n-        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n-            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n-        }\n-        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n     }\n+    if (!(step.getNodeTest() instanceof NodeNameTest)) {\n+        throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n+    }\n+    return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "413edb7f5000c8f53914bcaf73058d763adfd525": {
      "type": "Ybodychange",
      "commitMessage": "Another attempt at closing bug 32360. \nSee http://issues.apache.org/bugzilla/show_bug.cgi?id\u003d32360\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@329964 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/31/05, 7:25 PM",
      "commitName": "413edb7f5000c8f53914bcaf73058d763adfd525",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/29/05, 2:07 PM",
      "commitNameOld": "c5808a90cd91bc01d78c7f3da8718b6dcf429fa0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.26,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NodeTest nodeTest \u003d step.getNodeTest();\n        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n        String prefix \u003d qname.getPrefix();\n        String namespaceURI \u003d prefix !\u003d null ? context.getJXPathContext().getNamespaceURI(prefix) : context.getJXPathContext().getDefaultNamespaceURI();\n        if (namespaceURI !\u003d null) {\n            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    } else {\n        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n        }\n        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 809,
      "functionName": "getNodeIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n     if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n         NodeTest nodeTest \u003d step.getNodeTest();\n         QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n         String prefix \u003d qname.getPrefix();\n-        if (prefix !\u003d null) {\n-            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n+        String namespaceURI \u003d prefix !\u003d null ? context.getJXPathContext().getNamespaceURI(prefix) : context.getJXPathContext().getDefaultNamespaceURI();\n+        if (namespaceURI !\u003d null) {\n             nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n         }\n         return pointer.childIterator(nodeTest, false, null);\n     } else {\n         if (!(step.getNodeTest() instanceof NodeNameTest)) {\n             throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n         }\n         return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Introduced prefix registration with JXPathContext\nFixed a number or problems with namespace matching\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/31/04, 6:55 PM",
      "commitName": "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Introduced prefix registration with JXPathContext\nFixed a number or problems with namespace matching\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/31/04, 6:55 PM",
          "commitName": "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "3/24/04, 7:49 PM",
          "commitNameOld": "a0849ed9a4368948696a472afb57ba6938007e88",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 6.96,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NodeTest nodeTest \u003d step.getNodeTest();\n        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n        String prefix \u003d qname.getPrefix();\n        if (prefix !\u003d null) {\n            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    } else {\n        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n        }\n        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 809,
          "functionName": "getNodeIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,17 @@\n-private static NodeIterator getNodeIterator(NodePointer pointer, Step step) {\n+private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n     if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n-        return pointer.childIterator(step.getNodeTest(), false, null);\n+        NodeTest nodeTest \u003d step.getNodeTest();\n+        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n+        String prefix \u003d qname.getPrefix();\n+        if (prefix !\u003d null) {\n+            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n+            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n+        }\n+        return pointer.childIterator(nodeTest, false, null);\n     } else {\n         if (!(step.getNodeTest() instanceof NodeNameTest)) {\n             throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n         }\n         return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[pointer-NodePointer, step-Step]",
            "newValue": "[context-EvalContext, pointer-NodePointer, step-Step]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Introduced prefix registration with JXPathContext\nFixed a number or problems with namespace matching\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/31/04, 6:55 PM",
          "commitName": "b1e1383fd8c33fc246ee253e6a9f7a047d3da38a",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "3/24/04, 7:49 PM",
          "commitNameOld": "a0849ed9a4368948696a472afb57ba6938007e88",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 6.96,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        NodeTest nodeTest \u003d step.getNodeTest();\n        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n        String prefix \u003d qname.getPrefix();\n        if (prefix !\u003d null) {\n            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    } else {\n        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n        }\n        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n    }\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
          "functionStartLine": 809,
          "functionName": "getNodeIterator",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,17 @@\n-private static NodeIterator getNodeIterator(NodePointer pointer, Step step) {\n+private static NodeIterator getNodeIterator(EvalContext context, NodePointer pointer, Step step) {\n     if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n-        return pointer.childIterator(step.getNodeTest(), false, null);\n+        NodeTest nodeTest \u003d step.getNodeTest();\n+        QName qname \u003d ((NodeNameTest) nodeTest).getNodeName();\n+        String prefix \u003d qname.getPrefix();\n+        if (prefix !\u003d null) {\n+            String namespaceURI \u003d context.getJXPathContext().getNamespaceURI(prefix);\n+            nodeTest \u003d new NodeNameTest(qname, namespaceURI);\n+        }\n+        return pointer.childIterator(nodeTest, false, null);\n     } else {\n         if (!(step.getNodeTest() instanceof NodeNameTest)) {\n             throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n         }\n         return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/25/02, 5:20 PM",
      "commitNameOld": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 46.18,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private static NodeIterator getNodeIterator(NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        return pointer.childIterator(step.getNodeTest(), false, null);\n    } else {\n        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n        }\n        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 854,
      "functionName": "getNodeIterator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Yintroduced",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,10 @@\n+private static NodeIterator getNodeIterator(NodePointer pointer, Step step) {\n+    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n+        return pointer.childIterator(step.getNodeTest(), false, null);\n+    } else {\n+        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n+            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n+        }\n+        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static NodeIterator getNodeIterator(NodePointer pointer, Step step) {\n    if (step.getAxis() \u003d\u003d Compiler.AXIS_CHILD) {\n        return pointer.childIterator(step.getNodeTest(), false, null);\n    } else {\n        if (!(step.getNodeTest() instanceof NodeNameTest)) {\n            throw new UnsupportedOperationException(\"Not supported node test for attributes: \" + step.getNodeTest());\n        }\n        return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 744,
      "functionName": "getNodeIterator",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}