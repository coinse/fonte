{
  "origin": "codeshovel",
  "repositoryName": "JxPath-12b",
  "repositoryPath": "/tmp/JxPath-12b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePointer.java",
  "functionName": "newChildNodePointer",
  "functionId": "newChildNodePointer___parent-NodePointer__name-QName__bean-Object",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
  "functionAnnotation": "",
  "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
  "functionStartLine": 85,
  "functionEndLine": 102,
  "numCommitsSeen": 39,
  "timeTaken": 1652,
  "changeHistory": [
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
    "d5a51635e77e49efbf18c5b51834f533e7972953",
    "34d1c6cad33a94c24e55d456b550302db4914130",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
    "65bf4da7590edc460ec68e18f35d201ec685bf86",
    "34b7a47ae949c763178a457582a5df2cb564f53d",
    "207c6dd98407506ff367d072be25b56f37989215"
  ],
  "changeHistoryShort": {
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": "Yformatchange",
    "d5a51635e77e49efbf18c5b51834f533e7972953": "Yformatchange",
    "34d1c6cad33a94c24e55d456b550302db4914130": "Ybodychange",
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": "Yformatchange",
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": "Ymultichange(Yfilerename,Ydocchange,Yrename)",
    "65bf4da7590edc460ec68e18f35d201ec685bf86": "Ybodychange",
    "34b7a47ae949c763178a457582a5df2cb564f53d": "Ybodychange",
    "207c6dd98407506ff367d072be25b56f37989215": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2327c42440cd4927ac5fc91ed93756cb0c87c96d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle, be happy!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/10/03, 9:41 PM",
      "commitName": "2327c42440cd4927ac5fc91ed93756cb0c87c96d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "11/27/02, 5:02 PM",
      "commitNameOld": "3f4b9289b916bb1e9e4653021473cefdc9ab0aa2",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 44.19,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 123,
      "functionName": "newChildNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d5a51635e77e49efbf18c5b51834f533e7972953": {
      "type": "Yformatchange",
      "commitMessage": "1. Now bean\u0027s properties can be accessed either with the child:: or the attribute:: axis.\n2. Missing attributes can be created with an AbstractFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136812 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/02, 7:59 PM",
      "commitName": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "8/10/02, 9:13 AM",
      "commitNameOld": "d1c2ae2b56e1eb4cb22caea0ba06bda89e5d0b4e",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 63.45,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 124,
      "functionName": "newChildNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "34d1c6cad33a94c24e55d456b550302db4914130": {
      "type": "Ybodychange",
      "commitMessage": "Improved error reporting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/25/02, 8:28 PM",
      "commitName": "34d1c6cad33a94c24e55d456b550302db4914130",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/25/02, 6:00 PM",
      "commitNameOld": "b8780b1aa2eff978c3612fa43b58efb5b9ca50a0",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 122,
      "functionName": "newChildNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "@@ -1,10 +1,10 @@\n public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n-    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n+    throw new JXPathException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e": {
      "type": "Yformatchange",
      "commitMessage": "Improved formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/23/02, 8:31 PM",
      "commitName": "907ab1054dc2a2c9c5e248aae74996d7a4ab1f6e",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/21/02, 2:52 PM",
      "commitNameOld": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
      "functionStartLine": 121,
      "functionName": "newChildNodePointer",
      "functionAnnotation": "",
      "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a6e246c774fb91eefeadf28c46a10e768ac8cc7b": {
      "type": "Ymultichange(Yfilerename,Ydocchange,Yrename)",
      "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/02, 2:52 PM",
      "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
      "commitAuthor": "Dmitri Plotnikov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 110,
          "functionName": "newChildNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n+public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
            "newPath": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 110,
          "functionName": "newChildNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n+public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "Major refactoring\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136721 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/21/02, 2:52 PM",
          "commitName": "a6e246c774fb91eefeadf28c46a10e768ac8cc7b",
          "commitAuthor": "Dmitri Plotnikov",
          "commitDateOld": "4/11/02, 7:28 PM",
          "commitNameOld": "65bf4da7590edc460ec68e18f35d201ec685bf86",
          "commitAuthorOld": "Dmitri Plotnikov",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
          "path": "src/java/org/apache/commons/jxpath/ri/model/NodePointer.java",
          "functionStartLine": 110,
          "functionName": "newChildNodePointer",
          "functionAnnotation": "",
          "functionDoc": "Allocates an new child NodePointer by iterating through all installed\nNodePointerFactories until it finds one that can create a pointer.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n+public static NodePointer newChildNodePointer(NodePointer parent, QName name, Object bean) {\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "createNodePointer",
            "newValue": "newChildNodePointer"
          }
        }
      ]
    },
    "65bf4da7590edc460ec68e18f35d201ec685bf86": {
      "type": "Ybodychange",
      "commitMessage": "Removed dependency on DOM from everywhere except where needed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/11/02, 7:28 PM",
      "commitName": "65bf4da7590edc460ec68e18f35d201ec685bf86",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "4/9/02, 8:40 PM",
      "commitNameOld": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 97,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,10 @@\n public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n-    if (bean \u003d\u003d null) {\n-        return new NullPointer(parent, name);\n-    }\n     NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n     for (int i \u003d 0; i \u003c factories.length; i++) {\n         NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n         if (pointer !\u003d null) {\n             return pointer;\n         }\n     }\n     throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34b7a47ae949c763178a457582a5df2cb564f53d": {
      "type": "Ybodychange",
      "commitMessage": "Multiple changes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136712 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/02, 8:40 PM",
      "commitName": "34b7a47ae949c763178a457582a5df2cb564f53d",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "9/25/01, 6:21 PM",
      "commitNameOld": "3ec25ca8751eba756316184f4f8d3be1361a0027",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 196.1,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(parent, name);\n    }\n    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n    for (int i \u003d 0; i \u003c factories.length; i++) {\n        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n        if (pointer !\u003d null) {\n            return pointer;\n        }\n    }\n    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 100,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,13 @@\n public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n     if (bean \u003d\u003d null) {\n         return new NullPointer(parent, name);\n     }\n-    if (bean instanceof Node) {\n-        return new DOMNodePointer(parent, (Node) bean);\n+    NodePointerFactory[] factories \u003d JXPathContextReferenceImpl.getNodePointerFactories();\n+    for (int i \u003d 0; i \u003c factories.length; i++) {\n+        NodePointer pointer \u003d factories[i].createNodePointer(parent, name, bean);\n+        if (pointer !\u003d null) {\n+            return pointer;\n+        }\n     }\n-    if (bean instanceof Container) {\n-        return new ContainerPointer(parent, (Container) bean);\n-    }\n-    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n-    if (bi.isDynamic()) {\n-        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n-        return new DynamicPointer(parent, name, bean, handler);\n-    } else {\n-        return new BeanPointer(parent, name, bean, bi);\n-    }\n+    throw new RuntimeException(\"Could not allocate a NodePointer for object of \" + bean.getClass());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "207c6dd98407506ff367d072be25b56f37989215": {
      "type": "Yintroduced",
      "commitMessage": "Moved PropertyIterator to ...pointers,\nadded support for DOM objects,\nadded support for Containers,\nfixed some bugs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/2/01, 6:22 PM",
      "commitName": "207c6dd98407506ff367d072be25b56f37989215",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,18 @@\n+public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n+    if (bean \u003d\u003d null) {\n+        return new NullPointer(parent, name);\n+    }\n+    if (bean instanceof Node) {\n+        return new DOMNodePointer(parent, (Node) bean);\n+    }\n+    if (bean instanceof Container) {\n+        return new ContainerPointer(parent, (Container) bean);\n+    }\n+    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n+    if (bi.isDynamic()) {\n+        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n+        return new DynamicPointer(parent, name, bean, handler);\n+    } else {\n+        return new BeanPointer(parent, name, bean, bi);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static NodePointer createNodePointer(NodePointer parent, QName name, Object bean) {\n    if (bean \u003d\u003d null) {\n        return new NullPointer(parent, name);\n    }\n    if (bean instanceof Node) {\n        return new DOMNodePointer(parent, (Node) bean);\n    }\n    if (bean instanceof Container) {\n        return new ContainerPointer(parent, (Container) bean);\n    }\n    JXPathBeanInfo bi \u003d JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        DynamicPropertyHandler handler \u003d PropertyAccessHelper.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(parent, name, bean, handler);\n    } else {\n        return new BeanPointer(parent, name, bean, bi);\n    }\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/pointers/NodePointer.java",
      "functionStartLine": 105,
      "functionName": "createNodePointer",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}