{
  "origin": "codeshovel",
  "repositoryName": "JxPath-12b",
  "repositoryPath": "/tmp/JxPath-12b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplePathInterpreter.java",
  "functionName": "interpretSimpleLocationPath",
  "functionId": "interpretSimpleLocationPath___context-EvalContext__root-NodePointer__steps-Step[]",
  "sourceFilePath": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
  "functionAnnotation": "",
  "functionDoc": "Interpret a simple path that starts with the given root and\nfollows the given steps. All steps must have the axis \"child::\"\nand a name test.  They can also optionally have predicates\nof type [@name\u003dexpression] or simply [expression] interpreted\nas an index.\n",
  "functionStartLine": 74,
  "functionEndLine": 81,
  "numCommitsSeen": 22,
  "timeTaken": 1115,
  "changeHistory": [
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
    "e6b562c6eca79b82a57a4532768d775d76f48694"
  ],
  "changeHistoryShort": {
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": "Ybodychange",
    "e6b562c6eca79b82a57a4532768d775d76f48694": "Yintroduced"
  },
  "changeHistoryDetails": {
    "430fdd01e75a5e681274aa65adeb2d9826ee45a8": {
      "type": "Ybodychange",
      "commitMessage": "Organized imports, formatted code\nFixed problems with getValue() and getNode()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/25/02, 5:20 PM",
      "commitName": "430fdd01e75a5e681274aa65adeb2d9826ee45a8",
      "commitAuthor": "Dmitri Plotnikov",
      "commitDateOld": "10/12/02, 7:59 PM",
      "commitNameOld": "d5a51635e77e49efbf18c5b51834f533e7972953",
      "commitAuthorOld": "Dmitri Plotnikov",
      "daysBetweenCommits": 43.93,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "public static NodePointer interpretSimpleLocationPath(EvalContext context, NodePointer root, Step[] steps) {\n    NodePointer pointer \u003d doStep(context, root, steps, 0);\n    return pointer;\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 109,
      "functionName": "interpretSimpleLocationPath",
      "functionAnnotation": "",
      "functionDoc": "Interpret a simple path that starts with the given root and\nfollows the given steps. All steps must have the axis \"child::\"\nand a name test.  They can also optionally have predicates\nof type [@name\u003dexpression] or simply [expression] interpreted\nas an index.\n",
      "diff": "@@ -1,4 +1,4 @@\n public static NodePointer interpretSimpleLocationPath(EvalContext context, NodePointer root, Step[] steps) {\n     NodePointer pointer \u003d doStep(context, root, steps, 0);\n-    return valuePointer(pointer);\n+    return pointer;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e6b562c6eca79b82a57a4532768d775d76f48694": {
      "type": "Yintroduced",
      "commitMessage": "A complete re-write to address multiple additional use cases\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/jxpath/trunk@136790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/02, 6:35 PM",
      "commitName": "e6b562c6eca79b82a57a4532768d775d76f48694",
      "commitAuthor": "Dmitri Plotnikov",
      "diff": "@@ -0,0 +1,4 @@\n+public static NodePointer interpretSimpleLocationPath(EvalContext context, NodePointer root, Step[] steps) {\n+    NodePointer pointer \u003d doStep(context, root, steps, 0);\n+    return valuePointer(pointer);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static NodePointer interpretSimpleLocationPath(EvalContext context, NodePointer root, Step[] steps) {\n    NodePointer pointer \u003d doStep(context, root, steps, 0);\n    return valuePointer(pointer);\n}",
      "path": "src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java",
      "functionStartLine": 109,
      "functionName": "interpretSimpleLocationPath",
      "functionAnnotation": "",
      "functionDoc": "Interpret a simple path that starts with the given root and\nfollows the given steps. All steps must have the axis \"child::\"\nand a name test.  They can also optionally have predicates\nof type [@name\u003dexpression] or simply [expression] interpreted\nas an index.\n"
    }
  }
}