{
  "origin": "codeshovel",
  "repositoryName": "Csv-3b",
  "repositoryPath": "/tmp/Csv-3b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Lexer.java",
  "functionName": "isStartOfLine",
  "functionId": "isStartOfLine___c-int(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/Lexer.java",
  "functionAnnotation": "",
  "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c the character to check\n@return true if the character is at the start of a line.\n",
  "functionStartLine": 137,
  "functionEndLine": 139,
  "numCommitsSeen": 46,
  "timeTaken": 643,
  "changeHistory": [
    "03fefe8c3006ff1238d048bffb5182d40b0820ef",
    "56ca5858db4765112dca44e5deeda0ac181a6766",
    "9a27bb570df37e5e64282e66b9bae9540222f655",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5",
    "0fee01aa2d4ad8347641698fb178c77b6fc95517"
  ],
  "changeHistoryShort": {
    "03fefe8c3006ff1238d048bffb5182d40b0820ef": "Ydocchange",
    "56ca5858db4765112dca44e5deeda0ac181a6766": "Ybodychange",
    "9a27bb570df37e5e64282e66b9bae9540222f655": "Ybodychange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Yparametermetachange",
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5": "Ydocchange",
    "0fee01aa2d4ad8347641698fb178c77b6fc95517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "03fefe8c3006ff1238d048bffb5182d40b0820ef": {
      "type": "Ydocchange",
      "commitMessage": "Add missing JavaDoc for parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1467665 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/13/13, 10:49 AM",
      "commitName": "03fefe8c3006ff1238d048bffb5182d40b0820ef",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "3/24/13, 6:14 AM",
      "commitNameOld": "6b67a34b87e59e72bffd7e3b9dff31c07aa4bb65",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 20.19,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean isStartOfLine(final int c) {\n    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 137,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c the character to check\n@return true if the character is at the start of a line.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
        "newValue": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c the character to check\n@return true if the character is at the start of a line.\n"
      }
    },
    "56ca5858db4765112dca44e5deeda0ac181a6766": {
      "type": "Ybodychange",
      "commitMessage": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/12, 5:35 AM",
      "commitName": "56ca5858db4765112dca44e5deeda0ac181a6766",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/12/12, 5:16 AM",
      "commitNameOld": "9a27bb570df37e5e64282e66b9bae9540222f655",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean isStartOfLine(final int c) {\n    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 129,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
      "diff": "@@ -1,3 +1,3 @@\n boolean isStartOfLine(final int c) {\n-    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n+    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d UNDEFINED;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9a27bb570df37e5e64282e66b9bae9540222f655": {
      "type": "Ybodychange",
      "commitMessage": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/12, 5:16 AM",
      "commitName": "9a27bb570df37e5e64282e66b9bae9540222f655",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 8:47 AM",
      "commitNameOld": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean isStartOfLine(final int c) {\n    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 127,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
      "diff": "@@ -1,3 +1,3 @@\n boolean isStartOfLine(final int c) {\n-    return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n+    return c \u003d\u003d LF || c \u003d\u003d CR || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/11/12, 7:39 AM",
      "commitNameOld": "67bbc35289bb3435eae0bd6f20cc6b15280e66e0",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean isStartOfLine(final int c) {\n    return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 121,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
      "diff": "@@ -1,3 +1,3 @@\n-boolean isStartOfLine(int c) {\n+boolean isStartOfLine(final int c) {\n     return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[c-int]",
        "newValue": "[c-int(modifiers-final)]"
      }
    },
    "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5": {
      "type": "Ydocchange",
      "commitMessage": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 1:12 PM",
      "commitName": "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:40 PM",
      "commitNameOld": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean isStartOfLine(int c) {\n    return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 121,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Checks if the current character represents the start of a line:\na CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n",
        "newValue": "Checks if the current character represents the start of a line: a CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n"
      }
    },
    "0fee01aa2d4ad8347641698fb178c77b6fc95517": {
      "type": "Yintroduced",
      "commitMessage": "Add method for detecting start of line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306322 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/28/12, 6:41 AM",
      "commitName": "0fee01aa2d4ad8347641698fb178c77b6fc95517",
      "commitAuthor": "Sebastian Bazley",
      "diff": "@@ -0,0 +1,3 @@\n+boolean isStartOfLine(int c) {\n+    return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n+}\n\\ No newline at end of file\n",
      "actualSource": "boolean isStartOfLine(int c) {\n    return c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027 || c \u003d\u003d ExtendedBufferedReader.UNDEFINED;\n}",
      "path": "src/main/java/org/apache/commons/csv/Lexer.java",
      "functionStartLine": 121,
      "functionName": "isStartOfLine",
      "functionAnnotation": "",
      "functionDoc": "Checks if the current character represents the start of a line:\na CR, LF or is at the start of the file.\n\n@param c\n@return true if the character is at the start of a line.\n"
    }
  }
}