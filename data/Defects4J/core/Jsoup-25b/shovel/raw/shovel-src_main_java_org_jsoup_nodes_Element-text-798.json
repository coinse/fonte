{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-25b",
  "repositoryPath": "/tmp/Jsoup-25b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "text",
  "functionId": "text",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n@see #textNodes()\n",
  "functionStartLine": 798,
  "functionEndLine": 802,
  "numCommitsSeen": 76,
  "timeTaken": 1984,
  "changeHistory": [
    "7b9f17760049161b775fd23b15653961620e259d",
    "e4917452778b4e1b19b2fcbe9f258e9e4061a97f",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
    "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "e65b503c2054ec715d75815c07187e41182efe18"
  ],
  "changeHistoryShort": {
    "7b9f17760049161b775fd23b15653961620e259d": "Ydocchange",
    "e4917452778b4e1b19b2fcbe9f258e9e4061a97f": "Ydocchange",
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": "Ybodychange",
    "ad405f99cb5f41fb311fa086dbd6762a8e84264d": "Ybodychange",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "e65b503c2054ec715d75815c07187e41182efe18": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b9f17760049161b775fd23b15653961620e259d": {
      "type": "Ydocchange",
      "commitMessage": "Added Element.textNodes() and Element.dataNodes(), to easily access an element\u0027s children text nodes and data nodes.\n",
      "commitDate": "8/29/11, 7:15 PM",
      "commitName": "7b9f17760049161b775fd23b15653961620e259d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "8/29/11, 6:27 PM",
      "commitNameOld": "f31916f55db7d57b67b71c469105978692b88cf5",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    text(sb);\n    return sb.toString().trim();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 787,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n@see #textNodes()\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n",
        "newValue": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n@see #textNodes()\n"
      }
    },
    "e4917452778b4e1b19b2fcbe9f258e9e4061a97f": {
      "type": "Ydocchange",
      "commitMessage": "Implemented Element#ownText()\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e4917452778b4e1b19b2fcbe9f258e9e4061a97f",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e8e29ca111772980970275662e0027fa695d9f27",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    text(sb);\n    return sb.toString().trim();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 700,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Gets the combined text of this element and all its children.\n\n@return unencoded text, or empty string if none.\n",
        "newValue": "Gets the combined text of this element and all its children.\n\u003cp\u003e\nFor example, given HTML {@code \u003cp\u003eHello \u003cb\u003ethere\u003c/b\u003e now!\u003c/p\u003e}, {@code p.text()} returns {@code \"Hello there now!\"}\n\n@return unencoded text, or empty string if none.\n@see #ownText()\n"
      }
    },
    "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58": {
      "type": "Ybodychange",
      "commitMessage": "Whitespace tests\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "62ea04e4d5cbf91b1b1a225c90b8077e6db27e58",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "7898cdffecce78996012bd06eac0792dd4b6ac6d",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    text(sb);\n    return sb.toString().trim();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 478,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": "Gets the combined text of this element and all its children.\n\n@return unencoded text, or empty string if none.\n",
      "diff": "@@ -1,5 +1,5 @@\n public String text() {\n     StringBuilder sb \u003d new StringBuilder();\n     text(sb);\n-    return sb.toString();\n+    return sb.toString().trim();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad405f99cb5f41fb311fa086dbd6762a8e84264d": {
      "type": "Ybodychange",
      "commitMessage": "Text normalisation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "ad405f99cb5f41fb311fa086dbd6762a8e84264d",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "e2c62cdc3cc8f265af6ea100b60964ac6336d6e2",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    text(sb);\n    return sb.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 478,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": "Gets the combined text of this element and all its children.\n\n@return unencoded text, or empty string if none.\n",
      "diff": "@@ -1,16 +1,5 @@\n public String text() {\n     StringBuilder sb \u003d new StringBuilder();\n-    for (Node childNode : childNodes) {\n-        if (childNode instanceof TextNode) {\n-            TextNode textNode \u003d (TextNode) childNode;\n-            sb.append(textNode.getWholeText());\n-        } else if (childNode instanceof Element) {\n-            Element element \u003d (Element) childNode;\n-            String elementText \u003d element.text();\n-            if (element.isBlock() \u0026\u0026 sb.length() \u003e 0 \u0026\u0026 elementText.length() \u003e 0)\n-                sb.append(\" \");\n-            sb.append(elementText);\n-        }\n-    }\n+    text(sb);\n     return sb.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    for (Node childNode : childNodes) {\n        if (childNode instanceof TextNode) {\n            TextNode textNode \u003d (TextNode) childNode;\n            sb.append(textNode.getWholeText());\n        } else if (childNode instanceof Element) {\n            Element element \u003d (Element) childNode;\n            String elementText \u003d element.text();\n            if (element.isBlock() \u0026\u0026 sb.length() \u003e 0 \u0026\u0026 elementText.length() \u003e 0)\n                sb.append(\" \");\n            sb.append(elementText);\n        }\n    }\n    return sb.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 425,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": "Gets the combined text of this element and all its children.\n\n@return unencoded text, or empty string if none.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Gets the combined text of this element and all its children.\n\n@return unencoded text, or empty string if none.\n"
      }
    },
    "e65b503c2054ec715d75815c07187e41182efe18": {
      "type": "Yintroduced",
      "commitMessage": "Implemented text()\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e65b503c2054ec715d75815c07187e41182efe18",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,16 @@\n+public String text() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    for (Node childNode : childNodes) {\n+        if (childNode instanceof TextNode) {\n+            TextNode textNode \u003d (TextNode) childNode;\n+            sb.append(textNode.getWholeText());\n+        } else if (childNode instanceof Element) {\n+            Element element \u003d (Element) childNode;\n+            String elementText \u003d element.text();\n+            if (element.isBlock() \u0026\u0026 sb.length() \u003e 0 \u0026\u0026 elementText.length() \u003e 0)\n+                sb.append(\" \");\n+            sb.append(elementText);\n+        }\n+    }\n+    return sb.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String text() {\n    StringBuilder sb \u003d new StringBuilder();\n    for (Node childNode : childNodes) {\n        if (childNode instanceof TextNode) {\n            TextNode textNode \u003d (TextNode) childNode;\n            sb.append(textNode.getWholeText());\n        } else if (childNode instanceof Element) {\n            Element element \u003d (Element) childNode;\n            String elementText \u003d element.text();\n            if (element.isBlock() \u0026\u0026 sb.length() \u003e 0 \u0026\u0026 elementText.length() \u003e 0)\n                sb.append(\" \");\n            sb.append(elementText);\n        }\n    }\n    return sb.toString();\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 126,
      "functionName": "text",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}