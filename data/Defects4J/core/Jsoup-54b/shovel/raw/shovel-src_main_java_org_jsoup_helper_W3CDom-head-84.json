{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-54b",
  "repositoryPath": "/tmp/Jsoup-54b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "W3CDom.java",
  "functionName": "head",
  "functionId": "$head___source-org.jsoup.nodes.Node__depth-int",
  "sourceFilePath": "src/main/java/org/jsoup/helper/W3CDom.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 84,
  "functionEndLine": 114,
  "numCommitsSeen": 6,
  "timeTaken": 356,
  "changeHistory": [
    "143ede68fe70e043ca8f73cc1fbe83af944fa14a",
    "1dec69d8df78aee955205d8ae8bed0dfe86056f8",
    "a4883a448416031773bba432bc5bce4492f1e19d"
  ],
  "changeHistoryShort": {
    "143ede68fe70e043ca8f73cc1fbe83af944fa14a": "Ybodychange",
    "1dec69d8df78aee955205d8ae8bed0dfe86056f8": "Ybodychange",
    "a4883a448416031773bba432bc5bce4492f1e19d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "143ede68fe70e043ca8f73cc1fbe83af944fa14a": {
      "type": "Ybodychange",
      "commitMessage": "Make prefix namespaces work\n\nInitial PR only supported root xmlns, not prefixed tags and their\nnamespaces.\n",
      "commitDate": "4/5/16, 10:53 AM",
      "commitName": "143ede68fe70e043ca8f73cc1fbe83af944fa14a",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "1/27/16, 1:26 PM",
      "commitNameOld": "1dec69d8df78aee955205d8ae8bed0dfe86056f8",
      "commitAuthorOld": "Elshad Kasumov",
      "daysBetweenCommits": 68.85,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public void head(org.jsoup.nodes.Node source, int depth) {\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n        String prefix \u003d updateNamespaces(sourceEl);\n        String namespace \u003d namespaces.get(prefix);\n        Element el \u003d doc.createElementNS(namespace, sourceEl.tagName());\n        copyAttributes(sourceEl, el);\n        if (dest \u003d\u003d null) {\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest \u003d el;\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n        Text text \u003d doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n        Comment comment \u003d doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n        Text node \u003d doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n    }\n}",
      "path": "src/main/java/org/jsoup/helper/W3CDom.java",
      "functionStartLine": 84,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,28 @@\n public void head(org.jsoup.nodes.Node source, int depth) {\n     if (source instanceof org.jsoup.nodes.Element) {\n         org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n+        String prefix \u003d updateNamespaces(sourceEl);\n+        String namespace \u003d namespaces.get(prefix);\n         Element el \u003d doc.createElementNS(namespace, sourceEl.tagName());\n         copyAttributes(sourceEl, el);\n         if (dest \u003d\u003d null) {\n             doc.appendChild(el);\n         } else {\n             dest.appendChild(el);\n         }\n         dest \u003d el;\n     } else if (source instanceof org.jsoup.nodes.TextNode) {\n         org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n         Text text \u003d doc.createTextNode(sourceText.getWholeText());\n         dest.appendChild(text);\n     } else if (source instanceof org.jsoup.nodes.Comment) {\n         org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n         Comment comment \u003d doc.createComment(sourceComment.getData());\n         dest.appendChild(comment);\n     } else if (source instanceof org.jsoup.nodes.DataNode) {\n         org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n         Text node \u003d doc.createTextNode(sourceData.getWholeData());\n         dest.appendChild(node);\n     } else {\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1dec69d8df78aee955205d8ae8bed0dfe86056f8": {
      "type": "Ybodychange",
      "commitMessage": "Fix for bug 671: namespace is included in W3CDom.fromJsoup\n",
      "commitDate": "1/27/16, 1:26 PM",
      "commitName": "1dec69d8df78aee955205d8ae8bed0dfe86056f8",
      "commitAuthor": "Elshad Kasumov",
      "commitDateOld": "1/3/15, 7:15 AM",
      "commitNameOld": "842977c381b8d48bf12719e3f5cf6fd669379957",
      "commitAuthorOld": "offa",
      "daysBetweenCommits": 389.26,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "actualSource": "public void head(org.jsoup.nodes.Node source, int depth) {\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n        Element el \u003d doc.createElementNS(namespace, sourceEl.tagName());\n        copyAttributes(sourceEl, el);\n        if (dest \u003d\u003d null) {\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest \u003d el;\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n        Text text \u003d doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n        Comment comment \u003d doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n        Text node \u003d doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n    }\n}",
      "path": "src/main/java/org/jsoup/helper/W3CDom.java",
      "functionStartLine": 92,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,26 @@\n public void head(org.jsoup.nodes.Node source, int depth) {\n     if (source instanceof org.jsoup.nodes.Element) {\n         org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n-        Element el \u003d doc.createElement(sourceEl.tagName());\n+        Element el \u003d doc.createElementNS(namespace, sourceEl.tagName());\n         copyAttributes(sourceEl, el);\n         if (dest \u003d\u003d null) {\n             doc.appendChild(el);\n         } else {\n             dest.appendChild(el);\n         }\n         dest \u003d el;\n     } else if (source instanceof org.jsoup.nodes.TextNode) {\n         org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n         Text text \u003d doc.createTextNode(sourceText.getWholeText());\n         dest.appendChild(text);\n     } else if (source instanceof org.jsoup.nodes.Comment) {\n         org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n         Comment comment \u003d doc.createComment(sourceComment.getData());\n         dest.appendChild(comment);\n     } else if (source instanceof org.jsoup.nodes.DataNode) {\n         org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n         Text node \u003d doc.createTextNode(sourceData.getWholeData());\n         dest.appendChild(node);\n     } else {\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a4883a448416031773bba432bc5bce4492f1e19d": {
      "type": "Yintroduced",
      "commitMessage": "Support for W3C DOM document conversion.\n",
      "commitDate": "10/11/14, 7:53 PM",
      "commitName": "a4883a448416031773bba432bc5bce4492f1e19d",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,26 @@\n+public void head(org.jsoup.nodes.Node source, int depth) {\n+    if (source instanceof org.jsoup.nodes.Element) {\n+        org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n+        Element el \u003d doc.createElement(sourceEl.tagName());\n+        copyAttributes(sourceEl, el);\n+        if (dest \u003d\u003d null) {\n+            doc.appendChild(el);\n+        } else {\n+            dest.appendChild(el);\n+        }\n+        dest \u003d el;\n+    } else if (source instanceof org.jsoup.nodes.TextNode) {\n+        org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n+        Text text \u003d doc.createTextNode(sourceText.getWholeText());\n+        dest.appendChild(text);\n+    } else if (source instanceof org.jsoup.nodes.Comment) {\n+        org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n+        Comment comment \u003d doc.createComment(sourceComment.getData());\n+        dest.appendChild(comment);\n+    } else if (source instanceof org.jsoup.nodes.DataNode) {\n+        org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n+        Text node \u003d doc.createTextNode(sourceData.getWholeData());\n+        dest.appendChild(node);\n+    } else {\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void head(org.jsoup.nodes.Node source, int depth) {\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl \u003d (org.jsoup.nodes.Element) source;\n        Element el \u003d doc.createElement(sourceEl.tagName());\n        copyAttributes(sourceEl, el);\n        if (dest \u003d\u003d null) {\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest \u003d el;\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText \u003d (org.jsoup.nodes.TextNode) source;\n        Text text \u003d doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment \u003d (org.jsoup.nodes.Comment) source;\n        Comment comment \u003d doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData \u003d (org.jsoup.nodes.DataNode) source;\n        Text node \u003d doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n    }\n}",
      "path": "src/main/java/org/jsoup/helper/W3CDom.java",
      "functionStartLine": 74,
      "functionName": "head",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}