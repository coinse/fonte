{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-54b",
  "repositoryPath": "/tmp/Jsoup-54b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Element.java",
  "functionName": "child",
  "functionId": "child___index-int",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Element.java",
  "functionAnnotation": "",
  "functionDoc": "Get a child element of this element, by its 0-based index number.\n\u003cp\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\u003c/p\u003e\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n",
  "functionStartLine": 199,
  "functionEndLine": 201,
  "numCommitsSeen": 110,
  "timeTaken": 3228,
  "changeHistory": [
    "842977c381b8d48bf12719e3f5cf6fd669379957",
    "7ff15ee20c961e370837d8f96ae77886ecd910d8",
    "e5cd584705f746893f75e85cf7acdb2d7a0db1af",
    "9bed789bfee6c6433945c0a3e2c710c897616888",
    "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
    "a657d090e2f127ebdce131f1f97e7758a8ddc463"
  ],
  "changeHistoryShort": {
    "842977c381b8d48bf12719e3f5cf6fd669379957": "Ydocchange",
    "7ff15ee20c961e370837d8f96ae77886ecd910d8": "Ydocchange",
    "e5cd584705f746893f75e85cf7acdb2d7a0db1af": "Ybodychange",
    "9bed789bfee6c6433945c0a3e2c710c897616888": "Ydocchange",
    "b04c5412eb75a7a35925896db7121c3a2c67e1c4": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "a657d090e2f127ebdce131f1f97e7758a8ddc463": "Yintroduced"
  },
  "changeHistoryDetails": {
    "842977c381b8d48bf12719e3f5cf6fd669379957": {
      "type": "Ydocchange",
      "commitMessage": "Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules.\n",
      "commitDate": "1/3/15, 7:15 AM",
      "commitName": "842977c381b8d48bf12719e3f5cf6fd669379957",
      "commitAuthor": "offa",
      "commitDateOld": "10/27/14, 10:38 PM",
      "commitNameOld": "990285bdbb080038fef44cd2306526b4cba520d5",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 67.4,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element child(int index) {\n    return children().get(index);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 169,
      "functionName": "child",
      "functionAnnotation": "",
      "functionDoc": "Get a child element of this element, by its 0-based index number.\n\u003cp\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\u003c/p\u003e\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n",
        "newValue": "Get a child element of this element, by its 0-based index number.\n\u003cp\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\u003c/p\u003e\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n"
      }
    },
    "7ff15ee20c961e370837d8f96ae77886ecd910d8": {
      "type": "Ydocchange",
      "commitMessage": "Corrected the javadoc for Element#child() to note that it throws IndexOutOfBounds.\n\nFixes #277\n",
      "commitDate": "12/22/12, 12:10 PM",
      "commitName": "7ff15ee20c961e370837d8f96ae77886ecd910d8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/23/12, 1:05 PM",
      "commitNameOld": "1e30a157667af1fa7108d985dcb858a801832887",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 90.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element child(int index) {\n    return children().get(index);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 173,
      "functionName": "child",
      "functionAnnotation": "",
      "functionDoc": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, or {@code null} if absent.\n@see #childNode(int)\n",
        "newValue": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, otherwise throws an {@code IndexOutOfBoundsException}\n@see #childNode(int)\n"
      }
    },
    "e5cd584705f746893f75e85cf7acdb2d7a0db1af": {
      "type": "Ybodychange",
      "commitMessage": "Removed Element children list, and create on fly from nodes.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "e5cd584705f746893f75e85cf7acdb2d7a0db1af",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "80c826dc46a5270826c411d3741bfab8c98eb42e",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element child(int index) {\n    return children().get(index);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 121,
      "functionName": "child",
      "functionAnnotation": "",
      "functionDoc": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, or {@code null} if absent.\n@see #childNode(int)\n",
      "diff": "@@ -1,3 +1,3 @@\n public Element child(int index) {\n-    return elementChildren.get(index);\n+    return children().get(index);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9bed789bfee6c6433945c0a3e2c710c897616888": {
      "type": "Ydocchange",
      "commitMessage": "Element documentation.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "9bed789bfee6c6433945c0a3e2c710c897616888",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "abdf22714e557304d9f6782d30da9b7254ce017c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Element child(int index) {\n    return elementChildren.get(index);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 121,
      "functionName": "child",
      "functionAnnotation": "",
      "functionDoc": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, or {@code null} if absent.\n@see #childNode(int)\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Get a child element of this element, by its 0-based index number.\n\u003cp/\u003e\nNote that an element can have both mixed Nodes and Elements as children. This method inspects\na filtered list of children that are elements, and the index is based on that filtered list.\n\n@param index the index number of the element to retrieve\n@return the child element, if it exists, or {@code null} if absent.\n@see #childNode(int)\n"
      }
    },
    "b04c5412eb75a7a35925896db7121c3a2c67e1c4": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Element child(int) method, attr(key) method\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Element child(int) method, attr(key) method\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "a657d090e2f127ebdce131f1f97e7758a8ddc463",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public Element child(int index) {\n    return elementChildren.get(index);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 43,
          "functionName": "child",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public List\u003cElement\u003e getChildren() {\n-    return Collections.unmodifiableList(elementChildren);\n+public Element child(int index) {\n+    return elementChildren.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getChildren",
            "newValue": "child"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Element child(int) method, attr(key) method\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "a657d090e2f127ebdce131f1f97e7758a8ddc463",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public Element child(int index) {\n    return elementChildren.get(index);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 43,
          "functionName": "child",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public List\u003cElement\u003e getChildren() {\n-    return Collections.unmodifiableList(elementChildren);\n+public Element child(int index) {\n+    return elementChildren.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[index-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Element child(int) method, attr(key) method\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "a657d090e2f127ebdce131f1f97e7758a8ddc463",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public Element child(int index) {\n    return elementChildren.get(index);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 43,
          "functionName": "child",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public List\u003cElement\u003e getChildren() {\n-    return Collections.unmodifiableList(elementChildren);\n+public Element child(int index) {\n+    return elementChildren.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "List\u003cElement\u003e",
            "newValue": "Element"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Element child(int) method, attr(key) method\n",
          "commitDate": "7/2/11, 4:11 AM",
          "commitName": "b04c5412eb75a7a35925896db7121c3a2c67e1c4",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:11 AM",
          "commitNameOld": "a657d090e2f127ebdce131f1f97e7758a8ddc463",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "public Element child(int index) {\n    return elementChildren.get(index);\n}",
          "path": "src/main/java/org/jsoup/nodes/Element.java",
          "functionStartLine": 43,
          "functionName": "child",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public List\u003cElement\u003e getChildren() {\n-    return Collections.unmodifiableList(elementChildren);\n+public Element child(int index) {\n+    return elementChildren.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a657d090e2f127ebdce131f1f97e7758a8ddc463": {
      "type": "Yintroduced",
      "commitMessage": "Draft implementation of Parser.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "a657d090e2f127ebdce131f1f97e7758a8ddc463",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,3 @@\n+public List\u003cElement\u003e getChildren() {\n+    return Collections.unmodifiableList(elementChildren);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public List\u003cElement\u003e getChildren() {\n    return Collections.unmodifiableList(elementChildren);\n}",
      "path": "src/main/java/org/jsoup/nodes/Element.java",
      "functionStartLine": 37,
      "functionName": "getChildren",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}