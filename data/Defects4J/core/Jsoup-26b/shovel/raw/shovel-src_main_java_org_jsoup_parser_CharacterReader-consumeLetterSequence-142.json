{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-26b",
  "repositoryPath": "/tmp/Jsoup-26b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CharacterReader.java",
  "functionName": "consumeLetterSequence",
  "functionId": "consumeLetterSequence",
  "sourceFilePath": "src/main/java/org/jsoup/parser/CharacterReader.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 142,
  "functionEndLine": 153,
  "numCommitsSeen": 10,
  "timeTaken": 1283,
  "changeHistory": [
    "231aab61e228513853d08374e188217933f70986",
    "07a3c08a7ddb06711c3d1b5b1126076a43efa6e1",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "231aab61e228513853d08374e188217933f70986": "Ybodychange",
    "07a3c08a7ddb06711c3d1b5b1126076a43efa6e1": "Ybodychange",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "231aab61e228513853d08374e188217933f70986": {
      "type": "Ybodychange",
      "commitMessage": "Replaced Strings with char array in CharacterReader, for well improved parse times.\n\nFaster to scan, and less garbage created.\n",
      "commitDate": "6/3/12, 6:44 PM",
      "commitName": "231aab61e228513853d08374e188217933f70986",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "5/29/12, 9:02 PM",
      "commitNameOld": "07a3c08a7ddb06711c3d1b5b1126076a43efa6e1",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 4.9,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "String consumeLetterSequence() {\n    int start \u003d pos;\n    while (pos \u003c length) {\n        char c \u003d input[pos];\n        if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n            pos++;\n        else\n            break;\n    }\n    return new String(input, start, pos - start);\n}",
      "path": "src/main/java/org/jsoup/parser/CharacterReader.java",
      "functionStartLine": 142,
      "functionName": "consumeLetterSequence",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n String consumeLetterSequence() {\n     int start \u003d pos;\n-    while (!isEmpty()) {\n-        char c \u003d input.charAt(pos);\n+    while (pos \u003c length) {\n+        char c \u003d input[pos];\n         if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n             pos++;\n         else\n             break;\n     }\n-    return new String(input.substring(start, pos));\n+    return new String(input, start, pos - start);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "07a3c08a7ddb06711c3d1b5b1126076a43efa6e1": {
      "type": "Ybodychange",
      "commitMessage": "Make copies of all strings returned, vs returning pointers to substrings of input.\n\nThe former method is a little faster, and creates less garbage. However when the input is large,\nand apps retain data pulled from the DOM, the app may perceive a memory leak, as even a small string\nis actually as large as the original input (although multiple strings are all backed by the one\noriginal input).\n\nSo, this implementation is a little less performant, but has a potential for greater safety,\ndepending on how the library is used.\n",
      "commitDate": "5/29/12, 9:02 PM",
      "commitName": "07a3c08a7ddb06711c3d1b5b1126076a43efa6e1",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "5/28/12, 8:59 PM",
      "commitNameOld": "3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "String consumeLetterSequence() {\n    int start \u003d pos;\n    while (!isEmpty()) {\n        char c \u003d input.charAt(pos);\n        if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n            pos++;\n        else\n            break;\n    }\n    return new String(input.substring(start, pos));\n}",
      "path": "src/main/java/org/jsoup/parser/CharacterReader.java",
      "functionStartLine": 105,
      "functionName": "consumeLetterSequence",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n String consumeLetterSequence() {\n     int start \u003d pos;\n     while (!isEmpty()) {\n         char c \u003d input.charAt(pos);\n         if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n             pos++;\n         else\n             break;\n     }\n-    return input.substring(start, pos);\n+    return new String(input.substring(start, pos));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,11 @@\n+String consumeLetterSequence() {\n+    int start \u003d pos;\n+    while (!isEmpty()) {\n+        char c \u003d input.charAt(pos);\n+        if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n+            pos++;\n+        else\n+            break;\n+    }\n+    return input.substring(start, pos);\n+}\n\\ No newline at end of file\n",
      "actualSource": "String consumeLetterSequence() {\n    int start \u003d pos;\n    while (!isEmpty()) {\n        char c \u003d input.charAt(pos);\n        if ((c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027))\n            pos++;\n        else\n            break;\n    }\n    return input.substring(start, pos);\n}",
      "path": "src/main/java/org/jsoup/parser/CharacterReader.java",
      "functionStartLine": 98,
      "functionName": "consumeLetterSequence",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}