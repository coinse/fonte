{
  "origin": "codeshovel",
  "repositoryName": "Csv-15b",
  "repositoryPath": "/tmp/Csv-15b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "printRecord",
  "functionId": "printRecord___out-Appendable(modifiers-final)__values-Object(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write.\n@param values values to output.\n@throws IOException\n            If an I/O error occurs.\n@since 1.4\n",
  "functionStartLine": 1294,
  "functionEndLine": 1299,
  "numCommitsSeen": 269,
  "timeTaken": 1853,
  "changeHistory": [
    "bb316857d3751eb9ebde442727d807420fd69a0b",
    "ebd0f5e5c73f95f52f1317c94736955a5fcdbaff",
    "4a6af4590838e8804290464a8d88a837acb2fa08"
  ],
  "changeHistoryShort": {
    "bb316857d3751eb9ebde442727d807420fd69a0b": "Ydocchange",
    "ebd0f5e5c73f95f52f1317c94736955a5fcdbaff": "Ydocchange",
    "4a6af4590838e8804290464a8d88a837acb2fa08": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb316857d3751eb9ebde442727d807420fd69a0b": {
      "type": "Ydocchange",
      "commitMessage": "Javadocs.",
      "commitDate": "7/30/16, 11:23 AM",
      "commitName": "bb316857d3751eb9ebde442727d807420fd69a0b",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "7/30/16, 11:19 AM",
      "commitNameOld": "59e1f7941fa8558755c8539b5721e4119603c8b4",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printRecord(final Appendable out, final Object... values) throws IOException {\n    for (int i \u003d 0; i \u003c values.length; i++) {\n        print(values[i], out, i \u003d\u003d 0);\n    }\n    println(out);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 1144,
      "functionName": "printRecord",
      "functionAnnotation": "",
      "functionDoc": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write.\n@param values values to output.\n@throws IOException\n            If an I/O error occurs.\n@since 1.4\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write\n@param values values to output.\n@throws IOException\n            If an I/O error occurs\n@since 1.4\n",
        "newValue": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write.\n@param values values to output.\n@throws IOException\n            If an I/O error occurs.\n@since 1.4\n"
      }
    },
    "ebd0f5e5c73f95f52f1317c94736955a5fcdbaff": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1745011 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/21/16, 10:22 PM",
      "commitName": "ebd0f5e5c73f95f52f1317c94736955a5fcdbaff",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/12/16, 10:02 AM",
      "commitNameOld": "bad80610435572242897f030ad69023c526eff04",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 9.51,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printRecord(final Appendable out, final Object... values) throws IOException {\n    for (int i \u003d 0; i \u003c values.length; i++) {\n        print(values[i], out, i \u003d\u003d 0);\n    }\n    println(out);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 1096,
      "functionName": "printRecord",
      "functionAnnotation": "",
      "functionDoc": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write\n@param values values to output.\n@throws IOException\n            If an I/O error occurs\n@since 1.4\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Prints the given values a single record of delimiter separated values followed by the record separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and newLine characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write\n@param values values to output.\n@throws IOException\n            If an I/O error occurs\n@since 1.4\n",
        "newValue": "Prints the given {@code values} to {@code out} as a single record of delimiter separated values followed by the\nrecord separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and new-line characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write\n@param values values to output.\n@throws IOException\n            If an I/O error occurs\n@since 1.4\n"
      }
    },
    "4a6af4590838e8804290464a8d88a837acb2fa08": {
      "type": "Yintroduced",
      "commitMessage": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/11/16, 2:09 PM",
      "commitName": "4a6af4590838e8804290464a8d88a837acb2fa08",
      "commitAuthor": "Gary D. Gregory",
      "diff": "@@ -0,0 +1,6 @@\n+public void printRecord(final Appendable out, final Object... values) throws IOException {\n+    for (int i \u003d 0; i \u003c values.length; i++) {\n+        print(values[i], out, i \u003d\u003d 0);\n+    }\n+    println(out);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void printRecord(final Appendable out, final Object... values) throws IOException {\n    for (int i \u003d 0; i \u003c values.length; i++) {\n        print(values[i], out, i \u003d\u003d 0);\n    }\n    println(out);\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
      "functionStartLine": 1095,
      "functionName": "printRecord",
      "functionAnnotation": "",
      "functionDoc": "Prints the given values a single record of delimiter separated values followed by the record separator.\n\n\u003cp\u003e\nThe values will be quoted if needed. Quotes and newLine characters will be escaped. This method adds the record\nseparator to the output after printing the record, so there is no need to call {@link #println(Appendable)}.\n\u003c/p\u003e\n\n@param out where to write\n@param values values to output.\n@throws IOException\n            If an I/O error occurs\n@since 1.4\n"
    }
  }
}