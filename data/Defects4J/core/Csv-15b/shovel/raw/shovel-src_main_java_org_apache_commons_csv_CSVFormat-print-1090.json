{
  "origin": "codeshovel",
  "repositoryName": "Csv-15b",
  "repositoryPath": "/tmp/Csv-15b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSVFormat.java",
  "functionName": "print",
  "functionId": "print___object-Object(modifiers-final)__value-CharSequence(modifiers-final)__offset-int(modifiers-final)__len-int(modifiers-final)__out-Appendable(modifiers-final)__newRecord-boolean(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1090,
  "functionEndLine": 1105,
  "numCommitsSeen": 443,
  "timeTaken": 3792,
  "changeHistory": [
    "4a6af4590838e8804290464a8d88a837acb2fa08",
    "f8b80e83417c3c7eeed1282118f64fa0e85c4787",
    "f9a3162037f7e82ce6927bbe944b7d61349f8c11",
    "e5d7b214561e45d803dd70d88031172a4ed9f201",
    "5b2e5f809be63d301b04eaae9c72cae05e7da35c",
    "02c1b35939ee2158ae99acf778a3e9e7a5ad6870",
    "68352ee98fdb3d07be160357514abe2558a90c0d",
    "f51f43d18421d02fab7b39b55e6b55c32b5622d2",
    "7fd16f353a89e7360f060432bf7f9773284b1883",
    "0dbb499888e5e17322d08802222f2453bf5621a6",
    "639e68e2533dbe65e4b33de380aa2bdb790068b3",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
    "bf06bed9b8905ccf5409179263707074167ccfc4",
    "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10",
    "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
    "fafacd179d4a564b3176014039eef05669a26ffb",
    "9cb66ca7fb213f8936f32749d23294b154fe5964",
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
    "c9aeca5c39033c95c26c1475dcf0fd2ea86672e8",
    "1166ca605bcc035654771f1ddc1092d86f2ec1e8",
    "0d63758e095d2a671d0ba10fc8cae141add29a45",
    "02b21463e68e7b3d5f3d9980746d131a08a08eed",
    "637ef14ee4aa842fe689b166e36d2e88363d5c20",
    "f6f9fc1d480e85839c80d0890fa5ebed74971dc7",
    "4b5faabefd896ef24b21d7f9d3dc20741f6b89b8",
    "e23e79e0ceacf38d3298e7f5207c4518ad2b5955"
  ],
  "changeHistoryShort": {
    "4a6af4590838e8804290464a8d88a837acb2fa08": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "f8b80e83417c3c7eeed1282118f64fa0e85c4787": "Ybodychange",
    "f9a3162037f7e82ce6927bbe944b7d61349f8c11": "Ybodychange",
    "e5d7b214561e45d803dd70d88031172a4ed9f201": "Yformatchange",
    "5b2e5f809be63d301b04eaae9c72cae05e7da35c": "Ybodychange",
    "02c1b35939ee2158ae99acf778a3e9e7a5ad6870": "Ybodychange",
    "68352ee98fdb3d07be160357514abe2558a90c0d": "Yparametermetachange",
    "f51f43d18421d02fab7b39b55e6b55c32b5622d2": "Ymultichange(Yparameterchange,Ybodychange)",
    "7fd16f353a89e7360f060432bf7f9773284b1883": "Ybodychange",
    "0dbb499888e5e17322d08802222f2453bf5621a6": "Ybodychange",
    "639e68e2533dbe65e4b33de380aa2bdb790068b3": "Ybodychange",
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": "Yparametermetachange",
    "bf06bed9b8905ccf5409179263707074167ccfc4": "Yformatchange",
    "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10": "Ymultichange(Yparameterchange,Ybodychange)",
    "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4": "Ymultichange(Yparameterchange,Ybodychange)",
    "fafacd179d4a564b3176014039eef05669a26ffb": "Ymodifierchange",
    "9cb66ca7fb213f8936f32749d23294b154fe5964": "Ybodychange",
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8": "Ybodychange",
    "c9aeca5c39033c95c26c1475dcf0fd2ea86672e8": "Yfilerename",
    "1166ca605bcc035654771f1ddc1092d86f2ec1e8": "Yformatchange",
    "0d63758e095d2a671d0ba10fc8cae141add29a45": "Ybodychange",
    "02b21463e68e7b3d5f3d9980746d131a08a08eed": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange,Ydocchange)",
    "637ef14ee4aa842fe689b166e36d2e88363d5c20": "Ybodychange",
    "f6f9fc1d480e85839c80d0890fa5ebed74971dc7": "Ybodychange",
    "4b5faabefd896ef24b21d7f9d3dc20741f6b89b8": "Yfilerename",
    "e23e79e0ceacf38d3298e7f5207c4518ad2b5955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4a6af4590838e8804290464a8d88a837acb2fa08": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/11/16, 2:09 PM",
      "commitName": "4a6af4590838e8804290464a8d88a837acb2fa08",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/11/16, 2:09 PM",
          "commitName": "4a6af4590838e8804290464a8d88a837acb2fa08",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "5/10/16, 5:05 AM",
          "commitNameOld": "21cb8b4750ca9356644e2e64655c6463bed47509",
          "commitAuthorOld": "Benedikt Ritter",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n    if (!newRecord) {\n        out.append(getDelimiter());\n    }\n    if (object \u003d\u003d null) {\n        out.append(value);\n    } else if (isQuoteCharacterSet()) {\n        printAndQuote(object, value, offset, len, out, newRecord);\n    } else if (isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len, out);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 893,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n     if (!newRecord) {\n-        out.append(format.getDelimiter());\n+        out.append(getDelimiter());\n     }\n     if (object \u003d\u003d null) {\n         out.append(value);\n-    } else if (format.isQuoteCharacterSet()) {\n-        printAndQuote(object, value, offset, len);\n-    } else if (format.isEscapeCharacterSet()) {\n-        printAndEscape(value, offset, len);\n+    } else if (isQuoteCharacterSet()) {\n+        printAndQuote(object, value, offset, len, out, newRecord);\n+    } else if (isEscapeCharacterSet()) {\n+        printAndEscape(value, offset, len, out);\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord \u003d false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
            "newPath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
            "oldMethodName": "print",
            "newMethodName": "print"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/11/16, 2:09 PM",
          "commitName": "4a6af4590838e8804290464a8d88a837acb2fa08",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "5/10/16, 5:05 AM",
          "commitNameOld": "21cb8b4750ca9356644e2e64655c6463bed47509",
          "commitAuthorOld": "Benedikt Ritter",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n    if (!newRecord) {\n        out.append(getDelimiter());\n    }\n    if (object \u003d\u003d null) {\n        out.append(value);\n    } else if (isQuoteCharacterSet()) {\n        printAndQuote(object, value, offset, len, out, newRecord);\n    } else if (isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len, out);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 893,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n     if (!newRecord) {\n-        out.append(format.getDelimiter());\n+        out.append(getDelimiter());\n     }\n     if (object \u003d\u003d null) {\n         out.append(value);\n-    } else if (format.isQuoteCharacterSet()) {\n-        printAndQuote(object, value, offset, len);\n-    } else if (format.isEscapeCharacterSet()) {\n-        printAndEscape(value, offset, len);\n+    } else if (isQuoteCharacterSet()) {\n+        printAndQuote(object, value, offset, len, out, newRecord);\n+    } else if (isEscapeCharacterSet()) {\n+        printAndEscape(value, offset, len, out);\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord \u003d false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/11/16, 2:09 PM",
          "commitName": "4a6af4590838e8804290464a8d88a837acb2fa08",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "5/10/16, 5:05 AM",
          "commitNameOld": "21cb8b4750ca9356644e2e64655c6463bed47509",
          "commitAuthorOld": "Benedikt Ritter",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n    if (!newRecord) {\n        out.append(getDelimiter());\n    }\n    if (object \u003d\u003d null) {\n        out.append(value);\n    } else if (isQuoteCharacterSet()) {\n        printAndQuote(object, value, offset, len, out, newRecord);\n    } else if (isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len, out);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVFormat.java",
          "functionStartLine": 893,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,14 @@\n-private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(final Object object, final CharSequence value, final int offset, final int len, final Appendable out, final boolean newRecord) throws IOException {\n     if (!newRecord) {\n-        out.append(format.getDelimiter());\n+        out.append(getDelimiter());\n     }\n     if (object \u003d\u003d null) {\n         out.append(value);\n-    } else if (format.isQuoteCharacterSet()) {\n-        printAndQuote(object, value, offset, len);\n-    } else if (format.isEscapeCharacterSet()) {\n-        printAndEscape(value, offset, len);\n+    } else if (isQuoteCharacterSet()) {\n+        printAndQuote(object, value, offset, len, out, newRecord);\n+    } else if (isEscapeCharacterSet()) {\n+        printAndEscape(value, offset, len, out);\n     } else {\n         out.append(value, offset, offset + len);\n     }\n-    newRecord \u003d false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[object-Object(modifiers-final), value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]",
            "newValue": "[object-Object(modifiers-final), value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final), out-Appendable(modifiers-final), newRecord-boolean(modifiers-final)]"
          }
        }
      ]
    },
    "f8b80e83417c3c7eeed1282118f64fa0e85c4787": {
      "type": "Ybodychange",
      "commitMessage": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/18/16, 6:34 PM",
      "commitName": "f8b80e83417c3c7eeed1282118f64fa0e85c4787",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/3/15, 3:46 AM",
      "commitNameOld": "3b10c8f8ac64b75c573e0352dbb3d7ff9279d121",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 107.66,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (object \u003d\u003d null) {\n        out.append(value);\n    } else if (format.isQuoteCharacterSet()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord \u003d false;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 134,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,15 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n     if (!newRecord) {\n         out.append(format.getDelimiter());\n     }\n-    if (format.isQuoteCharacterSet()) {\n+    if (object \u003d\u003d null) {\n+        out.append(value);\n+    } else if (format.isQuoteCharacterSet()) {\n         printAndQuote(object, value, offset, len);\n     } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n         out.append(value, offset, offset + len);\n     }\n     newRecord \u003d false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f9a3162037f7e82ce6927bbe944b7d61349f8c11": {
      "type": "Ybodychange",
      "commitMessage": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo !\u003d null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/14, 10:18 AM",
      "commitName": "f9a3162037f7e82ce6927bbe944b7d61349f8c11",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/21/14, 9:32 AM",
      "commitNameOld": "a72c71f5cc6431890f82707a2782325be6747dd1",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoteCharacterSet()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscapeCharacterSet()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord \u003d false;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 116,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n     if (!newRecord) {\n         out.append(format.getDelimiter());\n     }\n-    if (format.isQuoting()) {\n+    if (format.isQuoteCharacterSet()) {\n         printAndQuote(object, value, offset, len);\n-    } else if (format.isEscaping()) {\n+    } else if (format.isEscapeCharacterSet()) {\n         printAndEscape(value, offset, len);\n     } else {\n         out.append(value, offset, offset + len);\n     }\n     newRecord \u003d false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5d7b214561e45d803dd70d88031172a4ed9f201": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/23/13, 11:17 AM",
      "commitName": "e5d7b214561e45d803dd70d88031172a4ed9f201",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "5/8/13, 4:54 PM",
      "commitNameOld": "512e446d284354e4945e03399843ac4426a2bcc5",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 14.77,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord \u003d false;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 164,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "5b2e5f809be63d301b04eaae9c72cae05e7da35c": {
      "type": "Ybodychange",
      "commitMessage": "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/7/13, 2:09 AM",
      "commitName": "5b2e5f809be63d301b04eaae9c72cae05e7da35c",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "5/6/13, 4:29 PM",
      "commitNameOld": "02c1b35939ee2158ae99acf778a3e9e7a5ad6870",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.4,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (!newRecord) {\n        out.append(format.getDelimiter());\n    }\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.append(value, offset, offset + len);\n    }\n    newRecord \u003d false;\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 164,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,13 @@\n private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n+    if (!newRecord) {\n+        out.append(format.getDelimiter());\n+    }\n     if (format.isQuoting()) {\n         printAndQuote(object, value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n+    newRecord \u003d false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02c1b35939ee2158ae99acf778a3e9e7a5ad6870": {
      "type": "Ybodychange",
      "commitMessage": "Document why original object is needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/6/13, 4:29 PM",
      "commitName": "02c1b35939ee2158ae99acf778a3e9e7a5ad6870",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "4/18/13, 9:59 AM",
      "commitNameOld": "697a612a89f71fbd6fce85ae54dcbdcbdd16e8f9",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 18.27,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 164,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "68352ee98fdb3d07be160357514abe2558a90c0d": {
      "type": "Yparametermetachange",
      "commitMessage": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/12, 1:58 PM",
      "commitName": "68352ee98fdb3d07be160357514abe2558a90c0d",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "11/14/12, 1:50 PM",
      "commitNameOld": "6a34b823c807325bc251ef43c66c307adcd947b8",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 155,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-private void print(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isQuoting()) {\n         printAndQuote(object, value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[object-Object, value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]",
        "newValue": "[object-Object(modifiers-final), value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]"
      }
    },
    "f51f43d18421d02fab7b39b55e6b55c32b5622d2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a \u0027not implemented yet\u0027 exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/14/12, 2:23 PM",
      "commitName": "f51f43d18421d02fab7b39b55e6b55c32b5622d2",
      "commitAuthor": "Gary D. Gregory",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a \u0027not implemented yet\u0027 exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/14/12, 2:23 PM",
          "commitName": "f51f43d18421d02fab7b39b55e6b55c32b5622d2",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/14/12, 2:01 PM",
          "commitNameOld": "2f2d9aa7807b22a7f21b025969eb533b118e0b54",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 153,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-private void print(final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isQuoting()) {\n-        printAndQuote(value, offset, len);\n+        printAndQuote(object, value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]",
            "newValue": "[object-Object, value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a \u0027not implemented yet\u0027 exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/14/12, 2:23 PM",
          "commitName": "f51f43d18421d02fab7b39b55e6b55c32b5622d2",
          "commitAuthor": "Gary D. Gregory",
          "commitDateOld": "10/14/12, 2:01 PM",
          "commitNameOld": "2f2d9aa7807b22a7f21b025969eb533b118e0b54",
          "commitAuthorOld": "Gary D. Gregory",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndQuote(object, value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 153,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-private void print(final CharSequence value, final int offset, final int len) throws IOException {\n+private void print(Object object, final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isQuoting()) {\n-        printAndQuote(value, offset, len);\n+        printAndQuote(object, value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fd16f353a89e7360f060432bf7f9773284b1883": {
      "type": "Ybodychange",
      "commitMessage": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:10 PM",
      "commitName": "7fd16f353a89e7360f060432bf7f9773284b1883",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:08 PM",
      "commitNameOld": "0dbb499888e5e17322d08802222f2453bf5621a6",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndQuote(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 137,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n private void print(final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isQuoting()) {\n-        printAndEncapsulate(value, offset, len);\n+        printAndQuote(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0dbb499888e5e17322d08802222f2453bf5621a6": {
      "type": "Ybodychange",
      "commitMessage": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 10:08 PM",
      "commitName": "0dbb499888e5e17322d08802222f2453bf5621a6",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 10:06 PM",
      "commitNameOld": "17139b840fc076b36f7e15be40495faefee08ad4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isQuoting()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 137,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n private void print(final CharSequence value, final int offset, final int len) throws IOException {\n-    if (format.isEncapsulating()) {\n+    if (format.isQuoting()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "639e68e2533dbe65e4b33de380aa2bdb790068b3": {
      "type": "Ybodychange",
      "commitMessage": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/12, 9:06 PM",
      "commitName": "639e68e2533dbe65e4b33de380aa2bdb790068b3",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "10/13/12, 9:02 PM",
      "commitNameOld": "75a835a83736de88f13f7e5dcc39eca1e9aeb073",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printDelimiter();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 137,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n private void print(final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n-        printSep();\n+        printDelimiter();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/12, 8:47 AM",
      "commitName": "6ab9b46e5a0aa9aae4ea4cbc86fd78ee72a3e2dc",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 1:12 PM",
      "commitNameOld": "6c1b0fa1c49a3b4c51a0765c6ab3806ae4aa3ce5",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 29.82,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(final CharSequence value, final int offset, final int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 131,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-private void print(CharSequence value, int offset, int len) throws IOException {\n+private void print(final CharSequence value, final int offset, final int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[value-CharSequence, offset-int, len-int]",
        "newValue": "[value-CharSequence(modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]"
      }
    },
    "bf06bed9b8905ccf5409179263707074167ccfc4": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/12, 12:40 PM",
      "commitName": "bf06bed9b8905ccf5409179263707074167ccfc4",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/11/12, 12:35 PM",
      "commitNameOld": "6a132b40abbefb97ff58528eab8a8835fb353df1",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(CharSequence value, int offset, int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.append(value, offset, offset + len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 130,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/5/12, 4:48 PM",
      "commitName": "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/5/12, 4:48 PM",
          "commitName": "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/5/12, 4:09 PM",
          "commitNameOld": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(CharSequence value, int offset, int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 128,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-private void print(char[] value, int offset, int len) throws IOException {\n+private void print(CharSequence value, int offset, int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n-        out.write(value, offset, len);\n+        out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[value-char[], offset-int, len-int]",
            "newValue": "[value-CharSequence, offset-int, len-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/5/12, 4:48 PM",
          "commitName": "e7434e5cb57088ee4d5a06e846cab7c4bed7cd10",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/5/12, 4:09 PM",
          "commitNameOld": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(CharSequence value, int offset, int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.append(value, offset, offset + len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 128,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,10 @@\n-private void print(char[] value, int offset, int len) throws IOException {\n+private void print(CharSequence value, int offset, int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n-        out.write(value, offset, len);\n+        out.append(value, offset, offset + len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/5/12, 4:09 PM",
      "commitName": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/5/12, 4:09 PM",
          "commitName": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/5/12, 9:30 AM",
          "commitNameOld": "fafacd179d4a564b3176014039eef05669a26ffb",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(char[] value, int offset, int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 130,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,10 @@\n-private void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n-    if (!checkForEscape) {\n-        printSep();\n-        out.write(value, offset, len);\n-        return;\n-    }\n+private void print(char[] value, int offset, int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[value-char[], offset-int, len-int, checkForEscape-boolean]",
            "newValue": "[value-char[], offset-int, len-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/5/12, 4:09 PM",
          "commitName": "e80b8112a719b6b213e833bd0d1ee27f55bfe5f4",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "3/5/12, 9:30 AM",
          "commitNameOld": "fafacd179d4a564b3176014039eef05669a26ffb",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void print(char[] value, int offset, int len) throws IOException {\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 130,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,10 @@\n-private void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n-    if (!checkForEscape) {\n-        printSep();\n-        out.write(value, offset, len);\n-        return;\n-    }\n+private void print(char[] value, int offset, int len) throws IOException {\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "fafacd179d4a564b3176014039eef05669a26ffb": {
      "type": "Ymodifierchange",
      "commitMessage": "Made CSVPrinter.print(char[], int, int, boolean) private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297138 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/5/12, 9:30 AM",
      "commitName": "fafacd179d4a564b3176014039eef05669a26ffb",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "3/5/12, 9:28 AM",
      "commitNameOld": "323b7aedaea1c57dc225fa2ca64613a3672156d0",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 130,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n-public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n+private void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n     if (!checkForEscape) {\n         printSep();\n         out.write(value, offset, len);\n         return;\n     }\n     if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n     } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[private]"
      }
    },
    "9cb66ca7fb213f8936f32749d23294b154fe5964": {
      "type": "Ybodychange",
      "commitMessage": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 4:26 PM",
      "commitName": "9cb66ca7fb213f8936f32749d23294b154fe5964",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "11/9/11, 8:58 AM",
      "commitNameOld": "cbcfb72912f41d1fac3f6d26ca27406cca94da9e",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (format.isEncapsulating()) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.isEscaping()) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 124,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n     if (!checkForEscape) {\n         printSep();\n         out.write(value, offset, len);\n         return;\n     }\n-    if (format.getEncapsulator() !\u003d CSVFormat.ENCAPSULATOR_DISABLED) {\n+    if (format.isEncapsulating()) {\n         printAndEncapsulate(value, offset, len);\n-    } else if (format.getEscape() !\u003d CSVFormat.ESCAPE_DISABLED) {\n+    } else if (format.isEscaping()) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cb99634ab3d6143dffc90938fc68e15c7f9d25b8": {
      "type": "Ybodychange",
      "commitMessage": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 8:54 AM",
      "commitName": "cb99634ab3d6143dffc90938fc68e15c7f9d25b8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "11/9/11, 8:21 AM",
      "commitNameOld": "42476f4b08fe4b075aa36f688f0801857f3635d9",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (format.getEncapsulator() !\u003d CSVFormat.ENCAPSULATOR_DISABLED) {\n        printAndEncapsulate(value, offset, len);\n    } else if (format.getEscape() !\u003d CSVFormat.ESCAPE_DISABLED) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 124,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n     if (!checkForEscape) {\n         printSep();\n         out.write(value, offset, len);\n         return;\n     }\n-    if (strategy.getEncapsulator() !\u003d CSVStrategy.ENCAPSULATOR_DISABLED) {\n+    if (format.getEncapsulator() !\u003d CSVFormat.ENCAPSULATOR_DISABLED) {\n         printAndEncapsulate(value, offset, len);\n-    } else if (strategy.getEscape() !\u003d CSVStrategy.ESCAPE_DISABLED) {\n+    } else if (format.getEscape() !\u003d CSVFormat.ESCAPE_DISABLED) {\n         printAndEscape(value, offset, len);\n     } else {\n         printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c9aeca5c39033c95c26c1475dcf0fd2ea86672e8": {
      "type": "Yfilerename",
      "commitMessage": "Moved the directories to match the Maven layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199691 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 2:38 AM",
      "commitName": "c9aeca5c39033c95c26c1475dcf0fd2ea86672e8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/20/11, 9:14 AM",
      "commitNameOld": "76cab04936e8b539d983510079419fabeeaecea0",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 111.77,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d CSVStrategy.ENCAPSULATOR_DISABLED) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d CSVStrategy.ESCAPE_DISABLED) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/main/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 129,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/csv/CSVPrinter.java",
        "newPath": "src/main/java/org/apache/commons/csv/CSVPrinter.java"
      }
    },
    "1166ca605bcc035654771f1ddc1092d86f2ec1e8": {
      "type": "Yformatchange",
      "commitMessage": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/1/11, 12:46 AM",
      "commitName": "1166ca605bcc035654771f1ddc1092d86f2ec1e8",
      "commitAuthor": "Jacopo Cappellato",
      "commitDateOld": "7/20/10, 2:16 PM",
      "commitNameOld": "0d63758e095d2a671d0ba10fc8cae141add29a45",
      "commitAuthorOld": "Yonik Seeley",
      "daysBetweenCommits": 195.48,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d CSVStrategy.ENCAPSULATOR_DISABLED) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d CSVStrategy.ESCAPE_DISABLED) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 129,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "0d63758e095d2a671d0ba10fc8cae141add29a45": {
      "type": "Ybodychange",
      "commitMessage": "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/20/10, 2:16 PM",
      "commitName": "0d63758e095d2a671d0ba10fc8cae141add29a45",
      "commitAuthor": "Yonik Seeley",
      "commitDateOld": "6/16/10, 9:12 AM",
      "commitNameOld": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
      "commitAuthorOld": "Yonik Seeley",
      "daysBetweenCommits": 34.21,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        printSep();\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d CSVStrategy.ENCAPSULATOR_DISABLED) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d CSVStrategy.ESCAPE_DISABLED) {\n        printAndEscape(value, offset, len);\n    } else {\n        printSep();\n        out.write(value, offset, len);\n    }\n}",
      "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 125,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,15 @@\n public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n     if (!checkForEscape) {\n-        if (newLine) {\n-            newLine \u003d false;\n-        } else {\n-            out.write(this.strategy.getDelimiter());\n-        }\n+        printSep();\n         out.write(value, offset, len);\n         return;\n     }\n-    if (strategy.getEncapsulator() !\u003d (char) -2) {\n+    if (strategy.getEncapsulator() !\u003d CSVStrategy.ENCAPSULATOR_DISABLED) {\n         printAndEncapsulate(value, offset, len);\n-    } else if (strategy.getEscape() !\u003d (char) -2) {\n+    } else if (strategy.getEscape() !\u003d CSVStrategy.ESCAPE_DISABLED) {\n         printAndEscape(value, offset, len);\n     } else {\n+        printSep();\n         out.write(value, offset, len);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02b21463e68e7b3d5f3d9980746d131a08a08eed": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10, 9:12 AM",
      "commitName": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
      "commitAuthor": "Yonik Seeley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/16/10, 9:12 AM",
          "commitName": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "7/23/07, 3:32 PM",
          "commitNameOld": "1d7ebab2118a4bb4ed542dd67380c3ab8abc485b",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 1058.74,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        if (newLine) {\n            newLine \u003d false;\n        } else {\n            out.write(this.strategy.getDelimiter());\n        }\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d (char) -2) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d (char) -2) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 125,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,36 +1,18 @@\n-public void print(String value) {\n-    boolean quote \u003d false;\n-    if (value.length() \u003e 0) {\n-        char c \u003d value.charAt(0);\n-        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n-            quote \u003d true;\n+public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n+    if (!checkForEscape) {\n+        if (newLine) {\n+            newLine \u003d false;\n+        } else {\n+            out.write(this.strategy.getDelimiter());\n         }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-        for (int i \u003d 0; i \u003c value.length(); i++) {\n-            c \u003d value.charAt(i);\n-            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n-                quote \u003d true;\n-                c \u003d value.charAt(value.length() - 1);\n-                break;\n-            }\n-        }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-    } else if (newLine) {\n-        quote \u003d true;\n+        out.write(value, offset, len);\n+        return;\n     }\n-    if (newLine) {\n-        newLine \u003d false;\n+    if (strategy.getEncapsulator() !\u003d (char) -2) {\n+        printAndEncapsulate(value, offset, len);\n+    } else if (strategy.getEscape() !\u003d (char) -2) {\n+        printAndEscape(value, offset, len);\n     } else {\n-        out.print(this.strategy.getDelimiter());\n+        out.write(value, offset, len);\n     }\n-    if (quote) {\n-        out.print(escapeAndQuote(value));\n-    } else {\n-        out.print(value);\n-    }\n-    out.flush();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[value-String]",
            "newValue": "[value-char[], offset-int, len-int, checkForEscape-boolean]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/16/10, 9:12 AM",
          "commitName": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "7/23/07, 3:32 PM",
          "commitNameOld": "1d7ebab2118a4bb4ed542dd67380c3ab8abc485b",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 1058.74,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        if (newLine) {\n            newLine \u003d false;\n        } else {\n            out.write(this.strategy.getDelimiter());\n        }\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d (char) -2) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d (char) -2) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 125,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,36 +1,18 @@\n-public void print(String value) {\n-    boolean quote \u003d false;\n-    if (value.length() \u003e 0) {\n-        char c \u003d value.charAt(0);\n-        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n-            quote \u003d true;\n+public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n+    if (!checkForEscape) {\n+        if (newLine) {\n+            newLine \u003d false;\n+        } else {\n+            out.write(this.strategy.getDelimiter());\n         }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-        for (int i \u003d 0; i \u003c value.length(); i++) {\n-            c \u003d value.charAt(i);\n-            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n-                quote \u003d true;\n-                c \u003d value.charAt(value.length() - 1);\n-                break;\n-            }\n-        }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-    } else if (newLine) {\n-        quote \u003d true;\n+        out.write(value, offset, len);\n+        return;\n     }\n-    if (newLine) {\n-        newLine \u003d false;\n+    if (strategy.getEncapsulator() !\u003d (char) -2) {\n+        printAndEncapsulate(value, offset, len);\n+    } else if (strategy.getEscape() !\u003d (char) -2) {\n+        printAndEscape(value, offset, len);\n     } else {\n-        out.print(this.strategy.getDelimiter());\n+        out.write(value, offset, len);\n     }\n-    if (quote) {\n-        out.print(escapeAndQuote(value));\n-    } else {\n-        out.print(value);\n-    }\n-    out.flush();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/16/10, 9:12 AM",
          "commitName": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "7/23/07, 3:32 PM",
          "commitNameOld": "1d7ebab2118a4bb4ed542dd67380c3ab8abc485b",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 1058.74,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        if (newLine) {\n            newLine \u003d false;\n        } else {\n            out.write(this.strategy.getDelimiter());\n        }\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d (char) -2) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d (char) -2) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 125,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,36 +1,18 @@\n-public void print(String value) {\n-    boolean quote \u003d false;\n-    if (value.length() \u003e 0) {\n-        char c \u003d value.charAt(0);\n-        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n-            quote \u003d true;\n+public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n+    if (!checkForEscape) {\n+        if (newLine) {\n+            newLine \u003d false;\n+        } else {\n+            out.write(this.strategy.getDelimiter());\n         }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-        for (int i \u003d 0; i \u003c value.length(); i++) {\n-            c \u003d value.charAt(i);\n-            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n-                quote \u003d true;\n-                c \u003d value.charAt(value.length() - 1);\n-                break;\n-            }\n-        }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-    } else if (newLine) {\n-        quote \u003d true;\n+        out.write(value, offset, len);\n+        return;\n     }\n-    if (newLine) {\n-        newLine \u003d false;\n+    if (strategy.getEncapsulator() !\u003d (char) -2) {\n+        printAndEncapsulate(value, offset, len);\n+    } else if (strategy.getEscape() !\u003d (char) -2) {\n+        printAndEscape(value, offset, len);\n     } else {\n-        out.print(this.strategy.getDelimiter());\n+        out.write(value, offset, len);\n     }\n-    if (quote) {\n-        out.print(escapeAndQuote(value));\n-    } else {\n-        out.print(value);\n-    }\n-    out.flush();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/16/10, 9:12 AM",
          "commitName": "02b21463e68e7b3d5f3d9980746d131a08a08eed",
          "commitAuthor": "Yonik Seeley",
          "commitDateOld": "7/23/07, 3:32 PM",
          "commitNameOld": "1d7ebab2118a4bb4ed542dd67380c3ab8abc485b",
          "commitAuthorOld": "Matthew Jason Benson",
          "daysBetweenCommits": 1058.74,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n    if (!checkForEscape) {\n        if (newLine) {\n            newLine \u003d false;\n        } else {\n            out.write(this.strategy.getDelimiter());\n        }\n        out.write(value, offset, len);\n        return;\n    }\n    if (strategy.getEncapsulator() !\u003d (char) -2) {\n        printAndEncapsulate(value, offset, len);\n    } else if (strategy.getEscape() !\u003d (char) -2) {\n        printAndEscape(value, offset, len);\n    } else {\n        out.write(value, offset, len);\n    }\n}",
          "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
          "functionStartLine": 125,
          "functionName": "print",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,36 +1,18 @@\n-public void print(String value) {\n-    boolean quote \u003d false;\n-    if (value.length() \u003e 0) {\n-        char c \u003d value.charAt(0);\n-        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n-            quote \u003d true;\n+public void print(char[] value, int offset, int len, boolean checkForEscape) throws IOException {\n+    if (!checkForEscape) {\n+        if (newLine) {\n+            newLine \u003d false;\n+        } else {\n+            out.write(this.strategy.getDelimiter());\n         }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-        for (int i \u003d 0; i \u003c value.length(); i++) {\n-            c \u003d value.charAt(i);\n-            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n-                quote \u003d true;\n-                c \u003d value.charAt(value.length() - 1);\n-                break;\n-            }\n-        }\n-        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n-            quote \u003d true;\n-        }\n-    } else if (newLine) {\n-        quote \u003d true;\n+        out.write(value, offset, len);\n+        return;\n     }\n-    if (newLine) {\n-        newLine \u003d false;\n+    if (strategy.getEncapsulator() !\u003d (char) -2) {\n+        printAndEncapsulate(value, offset, len);\n+    } else if (strategy.getEscape() !\u003d (char) -2) {\n+        printAndEscape(value, offset, len);\n     } else {\n-        out.print(this.strategy.getDelimiter());\n+        out.write(value, offset, len);\n     }\n-    if (quote) {\n-        out.print(escapeAndQuote(value));\n-    } else {\n-        out.print(value);\n-    }\n-    out.flush();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Print the string as the next value on the line. The value\nwill be quoted if needed.\n\n@param value value to be outputted.\n",
            "newValue": ""
          }
        }
      ]
    },
    "637ef14ee4aa842fe689b166e36d2e88363d5c20": {
      "type": "Ybodychange",
      "commitMessage": "Adding a minor optimisation as detailed in #SANDBOX-160 by Daniel Gredler. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427471 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/06, 11:57 PM",
      "commitName": "637ef14ee4aa842fe689b166e36d2e88363d5c20",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/4/06, 11:43 PM",
      "commitNameOld": "561adc6440cb832fe064554e3dc017e0ff5327a1",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 27.01,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(String value) {\n    boolean quote \u003d false;\n    if (value.length() \u003e 0) {\n        char c \u003d value.charAt(0);\n        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n            quote \u003d true;\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            c \u003d value.charAt(i);\n            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                quote \u003d true;\n                c \u003d value.charAt(value.length() - 1);\n                break;\n            }\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n    } else if (newLine) {\n        quote \u003d true;\n    }\n    if (newLine) {\n        newLine \u003d false;\n    } else {\n        out.print(this.strategy.getDelimiter());\n    }\n    if (quote) {\n        out.print(escapeAndQuote(value));\n    } else {\n        out.print(value);\n    }\n    out.flush();\n}",
      "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 199,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "Print the string as the next value on the line. The value\nwill be quoted if needed.\n\n@param value value to be outputted.\n",
      "diff": "@@ -1,34 +1,36 @@\n public void print(String value) {\n     boolean quote \u003d false;\n     if (value.length() \u003e 0) {\n         char c \u003d value.charAt(0);\n         if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n             quote \u003d true;\n         }\n         if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n             quote \u003d true;\n         }\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             c \u003d value.charAt(i);\n             if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                 quote \u003d true;\n+                c \u003d value.charAt(value.length() - 1);\n+                break;\n             }\n         }\n         if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n             quote \u003d true;\n         }\n     } else if (newLine) {\n         quote \u003d true;\n     }\n     if (newLine) {\n         newLine \u003d false;\n     } else {\n         out.print(this.strategy.getDelimiter());\n     }\n     if (quote) {\n         out.print(escapeAndQuote(value));\n     } else {\n         out.print(value);\n     }\n     out.flush();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f6f9fc1d480e85839c80d0890fa5ebed74971dc7": {
      "type": "Ybodychange",
      "commitMessage": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn\u0027t use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/19/06, 6:01 AM",
      "commitName": "f6f9fc1d480e85839c80d0890fa5ebed74971dc7",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/16/05, 9:46 PM",
      "commitNameOld": "0e1f0adb716515aba5e98e5690779f2fb73ad716",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 184.3,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(String value) {\n    boolean quote \u003d false;\n    if (value.length() \u003e 0) {\n        char c \u003d value.charAt(0);\n        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n            quote \u003d true;\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            c \u003d value.charAt(i);\n            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                quote \u003d true;\n            }\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n    } else if (newLine) {\n        quote \u003d true;\n    }\n    if (newLine) {\n        newLine \u003d false;\n    } else {\n        out.print(this.strategy.getDelimiter());\n    }\n    if (quote) {\n        out.print(escapeAndQuote(value));\n    } else {\n        out.print(value);\n    }\n    out.flush();\n}",
      "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 200,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "Print the string as the next value on the line. The value\nwill be quoted if needed.\n\n@param value value to be outputted.\n",
      "diff": "@@ -1,34 +1,34 @@\n public void print(String value) {\n     boolean quote \u003d false;\n     if (value.length() \u003e 0) {\n         char c \u003d value.charAt(0);\n         if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n             quote \u003d true;\n         }\n         if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n             quote \u003d true;\n         }\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             c \u003d value.charAt(i);\n-            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d separatorChar || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n+            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d this.strategy.getDelimiter() || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                 quote \u003d true;\n             }\n         }\n         if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n             quote \u003d true;\n         }\n     } else if (newLine) {\n         quote \u003d true;\n     }\n     if (newLine) {\n         newLine \u003d false;\n     } else {\n-        out.print(separatorChar);\n+        out.print(this.strategy.getDelimiter());\n     }\n     if (quote) {\n         out.print(escapeAndQuote(value));\n     } else {\n         out.print(value);\n     }\n     out.flush();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4b5faabefd896ef24b21d7f9d3dc20741f6b89b8": {
      "type": "Yfilerename",
      "commitMessage": "repackaging - directory change\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357301 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/05, 9:42 PM",
      "commitName": "4b5faabefd896ef24b21d7f9d3dc20741f6b89b8",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/16/05, 9:41 PM",
      "commitNameOld": "e23e79e0ceacf38d3298e7f5207c4518ad2b5955",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void print(String value) {\n    boolean quote \u003d false;\n    if (value.length() \u003e 0) {\n        char c \u003d value.charAt(0);\n        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n            quote \u003d true;\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            c \u003d value.charAt(i);\n            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d separatorChar || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                quote \u003d true;\n            }\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n    } else if (newLine) {\n        quote \u003d true;\n    }\n    if (newLine) {\n        newLine \u003d false;\n    } else {\n        out.print(separatorChar);\n    }\n    if (quote) {\n        out.print(escapeAndQuote(value));\n    } else {\n        out.print(value);\n    }\n    out.flush();\n}",
      "path": "src/java/org/apache/commons/csv/CSVPrinter.java",
      "functionStartLine": 233,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "Print the string as the next value on the line. The value\nwill be quoted if needed.\n\n@param value value to be outputted.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/ch/netcetera/wake/core/format/csv/CSVPrinter.java",
        "newPath": "src/java/org/apache/commons/csv/CSVPrinter.java"
      }
    },
    "e23e79e0ceacf38d3298e7f5207c4518ad2b5955": {
      "type": "Yintroduced",
      "commitMessage": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/16/05, 9:41 PM",
      "commitName": "e23e79e0ceacf38d3298e7f5207c4518ad2b5955",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,34 @@\n+public void print(String value) {\n+    boolean quote \u003d false;\n+    if (value.length() \u003e 0) {\n+        char c \u003d value.charAt(0);\n+        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n+            quote \u003d true;\n+        }\n+        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n+            quote \u003d true;\n+        }\n+        for (int i \u003d 0; i \u003c value.length(); i++) {\n+            c \u003d value.charAt(i);\n+            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d separatorChar || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n+                quote \u003d true;\n+            }\n+        }\n+        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n+            quote \u003d true;\n+        }\n+    } else if (newLine) {\n+        quote \u003d true;\n+    }\n+    if (newLine) {\n+        newLine \u003d false;\n+    } else {\n+        out.print(separatorChar);\n+    }\n+    if (quote) {\n+        out.print(escapeAndQuote(value));\n+    } else {\n+        out.print(value);\n+    }\n+    out.flush();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void print(String value) {\n    boolean quote \u003d false;\n    if (value.length() \u003e 0) {\n        char c \u003d value.charAt(0);\n        if (newLine \u0026\u0026 (c \u003c \u00270\u0027 || (c \u003e \u00279\u0027 \u0026\u0026 c \u003c \u0027A\u0027) || (c \u003e \u0027Z\u0027 \u0026\u0026 c \u003c \u0027a\u0027) || (c \u003e \u0027z\u0027))) {\n            quote \u003d true;\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            c \u003d value.charAt(i);\n            if (c \u003d\u003d \u0027\"\u0027 || c \u003d\u003d separatorChar || c \u003d\u003d \u0027\\n\u0027 || c \u003d\u003d \u0027\\r\u0027) {\n                quote \u003d true;\n            }\n        }\n        if (c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\f\u0027 || c \u003d\u003d \u0027\\t\u0027) {\n            quote \u003d true;\n        }\n    } else if (newLine) {\n        quote \u003d true;\n    }\n    if (newLine) {\n        newLine \u003d false;\n    } else {\n        out.print(separatorChar);\n    }\n    if (quote) {\n        out.print(escapeAndQuote(value));\n    } else {\n        out.print(value);\n    }\n    out.flush();\n}",
      "path": "src/java/ch/netcetera/wake/core/format/csv/CSVPrinter.java",
      "functionStartLine": 233,
      "functionName": "print",
      "functionAnnotation": "",
      "functionDoc": "Print the string as the next value on the line. The value\nwill be quoted if needed.\n\n@param value value to be outputted.\n"
    }
  }
}