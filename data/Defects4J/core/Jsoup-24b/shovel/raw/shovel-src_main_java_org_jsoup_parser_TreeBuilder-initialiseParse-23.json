{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-24b",
  "repositoryPath": "/tmp/Jsoup-24b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TreeBuilder.java",
  "functionName": "initialiseParse",
  "functionId": "initialiseParse___input-String__baseUri-String__errors-ParseErrorList",
  "sourceFilePath": "src/main/java/org/jsoup/parser/TreeBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 23,
  "functionEndLine": 33,
  "numCommitsSeen": 25,
  "timeTaken": 1433,
  "changeHistory": [
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
    "be94f5547d6b8f15ee48117afe46ae302c361464",
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
    "433d2f180058b8b73e1951c6cfbb986714e68b0f",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257": "Ymultichange(Yparameterchange,Ybodychange)",
    "be94f5547d6b8f15ee48117afe46ae302c361464": "Ybodychange",
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e": "Ybodychange",
    "433d2f180058b8b73e1951c6cfbb986714e68b0f": "Ymultichange(Yparameterchange,Ybodychange)",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": "Ymodifierchange",
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8": "Ybodychange",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f8a5dfb037d363a6b6657fa71af59b66c6bec257": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
      "commitDate": "3/20/12, 9:55 PM",
      "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
          "commitDate": "3/20/12, 9:55 PM",
          "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/19/12, 9:02 PM",
          "commitNameOld": "be94f5547d6b8f15ee48117afe46ae302c361464",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.04,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,10 @@\n-protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    this.trackErrors \u003d trackErrors;\n-    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[input-String, baseUri-String, trackErrors-boolean]",
            "newValue": "[input-String, baseUri-String, errors-ParseErrorList]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).\n",
          "commitDate": "3/20/12, 9:55 PM",
          "commitName": "f8a5dfb037d363a6b6657fa71af59b66c6bec257",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "3/19/12, 9:02 PM",
          "commitNameOld": "be94f5547d6b8f15ee48117afe46ae302c361464",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.04,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.errors \u003d errors;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,10 @@\n-protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    this.trackErrors \u003d trackErrors;\n-    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    this.errors \u003d errors;\n     tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "be94f5547d6b8f15ee48117afe46ae302c361464": {
      "type": "Ybodychange",
      "commitMessage": "Added support to optionally keep track of errors while tokenising and tree-building.\n",
      "commitDate": "3/19/12, 9:02 PM",
      "commitName": "be94f5547d6b8f15ee48117afe46ae302c361464",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "3/4/12, 5:18 PM",
      "commitNameOld": "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 15.11,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    this.trackErrors \u003d trackErrors;\n    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n    tokeniser \u003d new Tokeniser(reader, errors);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 24,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     Validate.notNull(input, \"String input must not be null\");\n     Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n-    tokeniser \u003d new Tokeniser(reader);\n+    this.trackErrors \u003d trackErrors;\n+    errors \u003d trackErrors ? new ArrayList\u003cParseError\u003e() : null;\n+    tokeniser \u003d new Tokeniser(reader, errors);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n-    errors \u003d new ArrayList\u003cParseError\u003e();\n-    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed invocation of alternative parser in Jsoup.Connection.\nUpdated test to confirm.\n",
      "commitDate": "3/4/12, 5:18 PM",
      "commitName": "d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "2/27/12, 8:55 PM",
      "commitNameOld": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    Validate.notNull(input, \"String input must not be null\");\n    Validate.notNull(baseUri, \"BaseURI must not be null\");\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 24,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,11 @@\n protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n+    Validate.notNull(input, \"String input must not be null\");\n+    Validate.notNull(baseUri, \"BaseURI must not be null\");\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n     errors \u003d new ArrayList\u003cParseError\u003e();\n     this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "433d2f180058b8b73e1951c6cfbb986714e68b0f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
      "commitDate": "2/27/12, 8:55 PM",
      "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
          "commitDate": "2/27/12, 8:55 PM",
          "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "2/26/12, 5:23 PM",
          "commitNameOld": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,9 @@\n-protected void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n+    errors \u003d new ArrayList\u003cParseError\u003e();\n+    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[input-String, baseUri-String]",
            "newValue": "[input-String, baseUri-String, trackErrors-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Allow an alternate parser to be supplied for core use cases.\n",
          "commitDate": "2/27/12, 8:55 PM",
          "commitName": "433d2f180058b8b73e1951c6cfbb986714e68b0f",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "2/26/12, 5:23 PM",
          "commitNameOld": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n    errors \u003d new ArrayList\u003cParseError\u003e();\n    this.trackErrors \u003d trackErrors;\n}",
          "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
          "functionStartLine": 23,
          "functionName": "initialiseParse",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,9 @@\n-protected void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri, boolean trackErrors) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n+    errors \u003d new ArrayList\u003cParseError\u003e();\n+    this.trackErrors \u003d trackErrors;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": {
      "type": "Ymodifierchange",
      "commitMessage": "First draft of a simple XML treebuilder / parser.\n\nThis provides an alternative to the HTML5 parser which enforces HTML\nsemantics on the parsed input. The simple XML parser has no understanding\nof HTML, and will parse the input as-is into a DOM.\n",
      "commitDate": "2/26/12, 5:23 PM",
      "commitName": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/30/11, 6:13 PM",
      "commitNameOld": "1e84edbe208aab0c9330eadc50f9773d81d70cd6",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 149.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 23,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n-private void initialiseParse(String input, String baseUri) {\n+protected void initialiseParse(String input, String baseUri) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n     stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "e30ed5d35cbcb92584d7fee8ae862f3929e443d8": {
      "type": "Ybodychange",
      "commitMessage": "Fix Java 1.5 compatibility\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "e30ed5d35cbcb92584d7fee8ae862f3929e443d8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 42,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n private void initialiseParse(String input, String baseUri) {\n     doc \u003d new Document(baseUri);\n     reader \u003d new CharacterReader(input);\n     tokeniser \u003d new Tokeniser(reader);\n-    stack \u003d new LinkedList\u003cElement\u003e();\n+    stack \u003d new DescendableLinkedList\u003cElement\u003e();\n     this.baseUri \u003d baseUri;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,7 @@\n+private void initialiseParse(String input, String baseUri) {\n+    doc \u003d new Document(baseUri);\n+    reader \u003d new CharacterReader(input);\n+    tokeniser \u003d new Tokeniser(reader);\n+    stack \u003d new LinkedList\u003cElement\u003e();\n+    this.baseUri \u003d baseUri;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void initialiseParse(String input, String baseUri) {\n    doc \u003d new Document(baseUri);\n    reader \u003d new CharacterReader(input);\n    tokeniser \u003d new Tokeniser(reader);\n    stack \u003d new LinkedList\u003cElement\u003e();\n    this.baseUri \u003d baseUri;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilder.java",
      "functionStartLine": 41,
      "functionName": "initialiseParse",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}