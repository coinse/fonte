{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-24b",
  "repositoryPath": "/tmp/Jsoup-24b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeTraversor.java",
  "functionName": "traverse",
  "functionId": "traverse___root-Node",
  "sourceFilePath": "src/main/java/org/jsoup/select/NodeTraversor.java",
  "functionAnnotation": "",
  "functionDoc": "Start a depth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n",
  "functionStartLine": 25,
  "functionEndLine": 46,
  "numCommitsSeen": 3,
  "timeTaken": 538,
  "changeHistory": [
    "16ca9214be8e4a6eb8b37dcfaaf21a79595d95f3",
    "9ff954f3876690504457be9c5f6067593df6ce19",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858"
  ],
  "changeHistoryShort": {
    "16ca9214be8e4a6eb8b37dcfaaf21a79595d95f3": "Ydocchange",
    "9ff954f3876690504457be9c5f6067593df6ce19": "Ydocchange",
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16ca9214be8e4a6eb8b37dcfaaf21a79595d95f3": {
      "type": "Ydocchange",
      "commitMessage": "Corrected documentation of NodeTraversor to reflect depth-first order of node visitation.\n",
      "commitDate": "9/4/11, 5:10 AM",
      "commitName": "16ca9214be8e4a6eb8b37dcfaaf21a79595d95f3",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/1/11, 8:26 PM",
      "commitNameOld": "9ff954f3876690504457be9c5f6067593df6ce19",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 2.36,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void traverse(Node root) {\n    Node node \u003d root;\n    int depth \u003d 0;\n    while (node !\u003d null) {\n        visitor.head(node, depth);\n        if (node.childNodes().size() \u003e 0) {\n            node \u003d node.childNode(0);\n            depth++;\n        } else {\n            while (node.nextSibling() \u003d\u003d null \u0026\u0026 depth \u003e 0) {\n                visitor.tail(node, depth);\n                node \u003d node.parent();\n                depth--;\n            }\n            visitor.tail(node, depth);\n            if (node \u003d\u003d root)\n                break;\n            node \u003d node.nextSibling();\n        }\n    }\n}",
      "path": "src/main/java/org/jsoup/select/NodeTraversor.java",
      "functionStartLine": 25,
      "functionName": "traverse",
      "functionAnnotation": "",
      "functionDoc": "Start a depth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Start a breadth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n",
        "newValue": "Start a depth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n"
      }
    },
    "9ff954f3876690504457be9c5f6067593df6ce19": {
      "type": "Ydocchange",
      "commitMessage": "Added documentation for NodeVisitor and NodeTraversor.\n",
      "commitDate": "9/1/11, 8:26 PM",
      "commitName": "9ff954f3876690504457be9c5f6067593df6ce19",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:11 AM",
      "commitNameOld": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 61.68,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "actualSource": "public void traverse(Node root) {\n    Node node \u003d root;\n    int depth \u003d 0;\n    while (node !\u003d null) {\n        visitor.head(node, depth);\n        if (node.childNodes().size() \u003e 0) {\n            node \u003d node.childNode(0);\n            depth++;\n        } else {\n            while (node.nextSibling() \u003d\u003d null \u0026\u0026 depth \u003e 0) {\n                visitor.tail(node, depth);\n                node \u003d node.parent();\n                depth--;\n            }\n            visitor.tail(node, depth);\n            if (node \u003d\u003d root)\n                break;\n            node \u003d node.nextSibling();\n        }\n    }\n}",
      "path": "src/main/java/org/jsoup/select/NodeTraversor.java",
      "functionStartLine": 25,
      "functionName": "traverse",
      "functionAnnotation": "",
      "functionDoc": "Start a breadth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Start a breadth-first traverse of the root and all of its descendants.\n\n@param root the root node point to traverse.\n"
      }
    },
    "10cfa0465c9d48f6a3ce3f5996259e77b43fa858": {
      "type": "Yintroduced",
      "commitMessage": "Use a Visitor instead of recursion for HTML and selectors.\n",
      "commitDate": "7/2/11, 4:11 AM",
      "commitName": "10cfa0465c9d48f6a3ce3f5996259e77b43fa858",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,21 @@\n+public void traverse(Node root) {\n+    Node node \u003d root;\n+    int depth \u003d 0;\n+    while (node !\u003d null) {\n+        visitor.head(node, depth);\n+        if (node.childNodes().size() \u003e 0) {\n+            node \u003d node.childNode(0);\n+            depth++;\n+        } else {\n+            while (node.nextSibling() \u003d\u003d null \u0026\u0026 depth \u003e 0) {\n+                visitor.tail(node, depth);\n+                node \u003d node.parent();\n+                depth--;\n+            }\n+            visitor.tail(node, depth);\n+            if (node \u003d\u003d root)\n+                break;\n+            node \u003d node.nextSibling();\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void traverse(Node root) {\n    Node node \u003d root;\n    int depth \u003d 0;\n    while (node !\u003d null) {\n        visitor.head(node, depth);\n        if (node.childNodes().size() \u003e 0) {\n            node \u003d node.childNode(0);\n            depth++;\n        } else {\n            while (node.nextSibling() \u003d\u003d null \u0026\u0026 depth \u003e 0) {\n                visitor.tail(node, depth);\n                node \u003d node.parent();\n                depth--;\n            }\n            visitor.tail(node, depth);\n            if (node \u003d\u003d root)\n                break;\n            node \u003d node.nextSibling();\n        }\n    }\n}",
      "path": "src/main/java/org/jsoup/select/NodeTraversor.java",
      "functionStartLine": 15,
      "functionName": "traverse",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}