{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-62b",
  "repositoryPath": "/tmp/Jsoup-62b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Tokeniser.java",
  "functionName": "read",
  "functionId": "read",
  "sourceFilePath": "src/main/java/org/jsoup/parser/Tokeniser.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 43,
  "functionEndLine": 66,
  "numCommitsSeen": 22,
  "timeTaken": 1541,
  "changeHistory": [
    "e99193605b688e923d20054c13db897cff751607",
    "4ec4cf2fc80c7faed010275d8a59f6e9decc33e2",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "e99193605b688e923d20054c13db897cff751607": "Ybodychange",
    "4ec4cf2fc80c7faed010275d8a59f6e9decc33e2": "Ybodychange",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e99193605b688e923d20054c13db897cff751607": {
      "type": "Ybodychange",
      "commitMessage": "Reuse Tokens, instead of creating all the time\n\nSaves an awful lot of GC. These are just data transfer objects, so not\nworth creating every time.\n",
      "commitDate": "10/27/14, 9:29 PM",
      "commitName": "e99193605b688e923d20054c13db897cff751607",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/26/14, 4:27 PM",
      "commitNameOld": "4ec4cf2fc80c7faed010275d8a59f6e9decc33e2",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "Token read() {\n    if (!selfClosingFlagAcknowledged) {\n        error(\"Self closing flag not acknowledged\");\n        selfClosingFlagAcknowledged \u003d true;\n    }\n    while (!isEmitPending) state.read(this, reader);\n    if (charsBuilder.length() \u003e 0) {\n        String str \u003d charsBuilder.toString();\n        charsBuilder.delete(0, charsBuilder.length());\n        charsString \u003d null;\n        return charPending.data(str);\n    } else if (charsString !\u003d null) {\n        Token token \u003d charPending.data(charsString);\n        charsString \u003d null;\n        return token;\n    } else {\n        isEmitPending \u003d false;\n        return emitPending;\n    }\n}",
      "path": "src/main/java/org/jsoup/parser/Tokeniser.java",
      "functionStartLine": 44,
      "functionName": "read",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,20 @@\n Token read() {\n     if (!selfClosingFlagAcknowledged) {\n         error(\"Self closing flag not acknowledged\");\n         selfClosingFlagAcknowledged \u003d true;\n     }\n     while (!isEmitPending) state.read(this, reader);\n     if (charsBuilder.length() \u003e 0) {\n         String str \u003d charsBuilder.toString();\n         charsBuilder.delete(0, charsBuilder.length());\n         charsString \u003d null;\n-        return new Token.Character(str);\n+        return charPending.data(str);\n     } else if (charsString !\u003d null) {\n-        Token token \u003d new Token.Character(charsString);\n+        Token token \u003d charPending.data(charsString);\n         charsString \u003d null;\n         return token;\n     } else {\n         isEmitPending \u003d false;\n         return emitPending;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4ec4cf2fc80c7faed010275d8a59f6e9decc33e2": {
      "type": "Ybodychange",
      "commitMessage": "Reduce GC by not forcing string builders\n",
      "commitDate": "10/26/14, 4:27 PM",
      "commitName": "4ec4cf2fc80c7faed010275d8a59f6e9decc33e2",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/26/14, 3:51 PM",
      "commitNameOld": "8e524450bbaf0eb3210f0f0d2fff3cc4d54cb0a7",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "Token read() {\n    if (!selfClosingFlagAcknowledged) {\n        error(\"Self closing flag not acknowledged\");\n        selfClosingFlagAcknowledged \u003d true;\n    }\n    while (!isEmitPending) state.read(this, reader);\n    if (charsBuilder.length() \u003e 0) {\n        String str \u003d charsBuilder.toString();\n        charsBuilder.delete(0, charsBuilder.length());\n        charsString \u003d null;\n        return new Token.Character(str);\n    } else if (charsString !\u003d null) {\n        Token token \u003d new Token.Character(charsString);\n        charsString \u003d null;\n        return token;\n    } else {\n        isEmitPending \u003d false;\n        return emitPending;\n    }\n}",
      "path": "src/main/java/org/jsoup/parser/Tokeniser.java",
      "functionStartLine": 40,
      "functionName": "read",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,20 @@\n Token read() {\n     if (!selfClosingFlagAcknowledged) {\n         error(\"Self closing flag not acknowledged\");\n         selfClosingFlagAcknowledged \u003d true;\n     }\n     while (!isEmitPending) state.read(this, reader);\n-    if (charBuffer.length() \u003e 0) {\n-        String str \u003d charBuffer.toString();\n-        charBuffer.delete(0, charBuffer.length());\n+    if (charsBuilder.length() \u003e 0) {\n+        String str \u003d charsBuilder.toString();\n+        charsBuilder.delete(0, charsBuilder.length());\n+        charsString \u003d null;\n         return new Token.Character(str);\n+    } else if (charsString !\u003d null) {\n+        Token token \u003d new Token.Character(charsString);\n+        charsString \u003d null;\n+        return token;\n     } else {\n         isEmitPending \u003d false;\n         return emitPending;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,15 @@\n+Token read() {\n+    if (!selfClosingFlagAcknowledged) {\n+        error(\"Self closing flag not acknowledged\");\n+        selfClosingFlagAcknowledged \u003d true;\n+    }\n+    while (!isEmitPending) state.read(this, reader);\n+    if (charBuffer.length() \u003e 0) {\n+        String str \u003d charBuffer.toString();\n+        charBuffer.delete(0, charBuffer.length());\n+        return new Token.Character(str);\n+    } else {\n+        isEmitPending \u003d false;\n+        return emitPending;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "Token read() {\n    if (!selfClosingFlagAcknowledged) {\n        error(\"Self closing flag not acknowledged\");\n        selfClosingFlagAcknowledged \u003d true;\n    }\n    while (!isEmitPending) state.read(this, reader);\n    if (charBuffer.length() \u003e 0) {\n        String str \u003d charBuffer.toString();\n        charBuffer.delete(0, charBuffer.length());\n        return new Token.Character(str);\n    } else {\n        isEmitPending \u003d false;\n        return emitPending;\n    }\n}",
      "path": "src/main/java/org/jsoup/parser/Tokeniser.java",
      "functionStartLine": 35,
      "functionName": "read",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}