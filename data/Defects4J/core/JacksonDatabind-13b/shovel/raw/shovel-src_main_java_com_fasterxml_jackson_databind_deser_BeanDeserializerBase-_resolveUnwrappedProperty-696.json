{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanDeserializerBase.java",
  "functionName": "_resolveUnwrappedProperty",
  "functionId": "_resolveUnwrappedProperty___ctxt-DeserializationContext__prop-SettableBeanProperty",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
  "functionAnnotation": "",
  "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
  "functionStartLine": 696,
  "functionEndLine": 712,
  "numCommitsSeen": 123,
  "timeTaken": 7844,
  "changeHistory": [
    "2fd4ffd9963545ce735a58957a84afb90809561e",
    "53fb8522b402a409139175cbf867afa924e549f5",
    "4dc01e735c57e1a3d6e79f819713efaf77998edb",
    "0a0ce59a9800a6532048eaf52a2d2c6a276116e3",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "2fd4ffd9963545ce735a58957a84afb90809561e": "Ymovefromfile",
    "53fb8522b402a409139175cbf867afa924e549f5": "Ymultichange(Yparameterchange,Ybodychange)",
    "4dc01e735c57e1a3d6e79f819713efaf77998edb": "Ybodychange",
    "0a0ce59a9800a6532048eaf52a2d2c6a276116e3": "Ymultichange(Ybodychange,Ydocchange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2fd4ffd9963545ce735a58957a84afb90809561e": {
      "type": "Ymovefromfile",
      "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
      "commitDate": "2/17/12, 10:40 PM",
      "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/11/12, 2:34 PM",
      "commitNameOld": "7c9023453e8801f2d4a0aa44db9ccbf3347afb6a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 6.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationContext ctxt, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        NameTransformer unwrapper \u003d ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n        if (unwrapper !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
      "functionStartLine": 640,
      "functionName": "_resolveUnwrappedProperty",
      "functionAnnotation": "",
      "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
        "oldMethodName": "_resolveUnwrappedProperty",
        "newMethodName": "_resolveUnwrappedProperty"
      }
    },
    "53fb8522b402a409139175cbf867afa924e549f5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
      "commitDate": "1/24/12, 1:02 PM",
      "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
      "commitAuthor": "Tatu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
          "commitDate": "1/24/12, 1:02 PM",
          "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 11:23 AM",
          "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationContext ctxt, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        NameTransformer unwrapper \u003d ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n        if (unwrapper !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 495,
          "functionName": "_resolveUnwrappedProperty",
          "functionAnnotation": "",
          "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
          "diff": "@@ -1,14 +1,14 @@\n-protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n+protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationContext ctxt, SettableBeanProperty prop) {\n     AnnotatedMember am \u003d prop.getMember();\n     if (am !\u003d null) {\n-        NameTransformer unwrapper \u003d config.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n+        NameTransformer unwrapper \u003d ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n         if (unwrapper !\u003d null) {\n             JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n             JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n             if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                 return prop.withValueDeserializer(unwrapping);\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-DeserializationConfig, prop-SettableBeanProperty]",
            "newValue": "[ctxt-DeserializationContext, prop-SettableBeanProperty]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
          "commitDate": "1/24/12, 1:02 PM",
          "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 11:23 AM",
          "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationContext ctxt, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        NameTransformer unwrapper \u003d ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n        if (unwrapper !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 495,
          "functionName": "_resolveUnwrappedProperty",
          "functionAnnotation": "",
          "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
          "diff": "@@ -1,14 +1,14 @@\n-protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n+protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationContext ctxt, SettableBeanProperty prop) {\n     AnnotatedMember am \u003d prop.getMember();\n     if (am !\u003d null) {\n-        NameTransformer unwrapper \u003d config.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n+        NameTransformer unwrapper \u003d ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n         if (unwrapper !\u003d null) {\n             JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n             JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n             if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                 return prop.withValueDeserializer(unwrapping);\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "4dc01e735c57e1a3d6e79f819713efaf77998edb": {
      "type": "Ybodychange",
      "commitMessage": "Completed [JACKSON-669] implementation\n",
      "commitDate": "1/13/12, 10:25 PM",
      "commitName": "4dc01e735c57e1a3d6e79f819713efaf77998edb",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/13/12, 9:49 PM",
      "commitNameOld": "0a0ce59a9800a6532048eaf52a2d2c6a276116e3",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        NameTransformer unwrapper \u003d config.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n        if (unwrapper !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
      "functionStartLine": 486,
      "functionName": "_resolveUnwrappedProperty",
      "functionAnnotation": "",
      "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
      "diff": "@@ -1,14 +1,14 @@\n protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n     AnnotatedMember am \u003d prop.getMember();\n     if (am !\u003d null) {\n-        String prefix \u003d config.getAnnotationIntrospector().findUnwrapPrefix(am);\n-        if (prefix !\u003d null) {\n+        NameTransformer unwrapper \u003d config.getAnnotationIntrospector().findUnwrappingNameTransformer(am);\n+        if (unwrapper !\u003d null) {\n             JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n-            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(prefix);\n+            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(unwrapper);\n             if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                 return prop.withValueDeserializer(unwrapping);\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0a0ce59a9800a6532048eaf52a2d2c6a276116e3": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "First working version of prefix-for-unwrapped; may want to generalize to allow other kinds of name mangling strategies\n",
      "commitDate": "1/13/12, 9:49 PM",
      "commitName": "0a0ce59a9800a6532048eaf52a2d2c6a276116e3",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "First working version of prefix-for-unwrapped; may want to generalize to allow other kinds of name mangling strategies\n",
          "commitDate": "1/13/12, 9:49 PM",
          "commitName": "0a0ce59a9800a6532048eaf52a2d2c6a276116e3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/11/12, 10:14 PM",
          "commitNameOld": "703bf4a104193e8098f904fe33531c58c6e7f359",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.98,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        String prefix \u003d config.getAnnotationIntrospector().findUnwrapPrefix(am);\n        if (prefix !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(prefix);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 485,
          "functionName": "_resolveUnwrappedProperty",
          "functionAnnotation": "",
          "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
          "diff": "@@ -1,11 +1,14 @@\n protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n     AnnotatedMember am \u003d prop.getMember();\n-    if (am !\u003d null \u0026\u0026 config.getAnnotationIntrospector().shouldUnwrapProperty(am) \u003d\u003d Boolean.TRUE) {\n-        JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n-        JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer();\n-        if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n-            return prop.withValueDeserializer(unwrapping);\n+    if (am !\u003d null) {\n+        String prefix \u003d config.getAnnotationIntrospector().findUnwrapPrefix(am);\n+        if (prefix !\u003d null) {\n+            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n+            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(prefix);\n+            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n+                return prop.withValueDeserializer(unwrapping);\n+            }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "First working version of prefix-for-unwrapped; may want to generalize to allow other kinds of name mangling strategies\n",
          "commitDate": "1/13/12, 9:49 PM",
          "commitName": "0a0ce59a9800a6532048eaf52a2d2c6a276116e3",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/11/12, 10:14 PM",
          "commitNameOld": "703bf4a104193e8098f904fe33531c58c6e7f359",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.98,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null) {\n        String prefix \u003d config.getAnnotationIntrospector().findUnwrapPrefix(am);\n        if (prefix !\u003d null) {\n            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(prefix);\n            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n                return prop.withValueDeserializer(unwrapping);\n            }\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 485,
          "functionName": "_resolveUnwrappedProperty",
          "functionAnnotation": "",
          "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n",
          "diff": "@@ -1,11 +1,14 @@\n protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n     AnnotatedMember am \u003d prop.getMember();\n-    if (am !\u003d null \u0026\u0026 config.getAnnotationIntrospector().shouldUnwrapProperty(am) \u003d\u003d Boolean.TRUE) {\n-        JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n-        JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer();\n-        if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n-            return prop.withValueDeserializer(unwrapping);\n+    if (am !\u003d null) {\n+        String prefix \u003d config.getAnnotationIntrospector().findUnwrapPrefix(am);\n+        if (prefix !\u003d null) {\n+            JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n+            JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer(prefix);\n+            if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n+                return prop.withValueDeserializer(unwrapping);\n+            }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n\n@since 1.9\n",
            "newValue": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n"
          }
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,11 @@\n+protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n+    AnnotatedMember am \u003d prop.getMember();\n+    if (am !\u003d null \u0026\u0026 config.getAnnotationIntrospector().shouldUnwrapProperty(am) \u003d\u003d Boolean.TRUE) {\n+        JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n+        JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer();\n+        if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n+            return prop.withValueDeserializer(unwrapping);\n+        }\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected SettableBeanProperty _resolveUnwrappedProperty(DeserializationConfig config, SettableBeanProperty prop) {\n    AnnotatedMember am \u003d prop.getMember();\n    if (am !\u003d null \u0026\u0026 config.getAnnotationIntrospector().shouldUnwrapProperty(am) \u003d\u003d Boolean.TRUE) {\n        JsonDeserializer\u003cObject\u003e orig \u003d prop.getValueDeserializer();\n        JsonDeserializer\u003cObject\u003e unwrapping \u003d orig.unwrappingDeserializer();\n        if (unwrapping !\u003d orig \u0026\u0026 unwrapping !\u003d null) {\n            return prop.withValueDeserializer(unwrapping);\n        }\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
      "functionStartLine": 512,
      "functionName": "_resolveUnwrappedProperty",
      "functionAnnotation": "",
      "functionDoc": "Helper method called to see if given property might be so-called unwrapped\nproperty: these require special handling.\n\n@since 1.9\n"
    }
  }
}