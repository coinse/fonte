{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectIdReferenceProperty.java",
  "functionName": "deserializeSetAndReturn",
  "functionId": "deserializeSetAndReturn___jp-JsonParser__ctxt-DeserializationContext__instance-Object",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 66,
  "functionEndLine": 79,
  "numCommitsSeen": 7,
  "timeTaken": 708,
  "changeHistory": [
    "afda9e28a2047254905e0b0fe84c928944ab5225",
    "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1",
    "fdf3a9143b82b61140602f2f1c1090a3cd28ffd5",
    "647cb683bf03067f82719cf74190f741270fcb87",
    "d823407ab82164afdd14832fe5159c44d42d89ef"
  ],
  "changeHistoryShort": {
    "afda9e28a2047254905e0b0fe84c928944ab5225": "Ymultichange(Yexceptionschange,Ybodychange)",
    "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1": "Ybodychange",
    "fdf3a9143b82b61140602f2f1c1090a3cd28ffd5": "Ybodychange",
    "647cb683bf03067f82719cf74190f741270fcb87": "Ybodychange",
    "d823407ab82164afdd14832fe5159c44d42d89ef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "afda9e28a2047254905e0b0fe84c928944ab5225": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "minor trimming, trying to diagnose #538\n",
      "commitDate": "10/16/14, 9:20 PM",
      "commitName": "afda9e28a2047254905e0b0fe84c928944ab5225",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "minor trimming, trying to diagnose #538\n",
          "commitDate": "10/16/14, 9:20 PM",
          "commitName": "afda9e28a2047254905e0b0fe84c928944ab5225",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/7/14, 11:26 PM",
          "commitNameOld": "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 69.91,
          "commitsBetweenForRepo": 127,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException {\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n        return null;\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
          "functionStartLine": 66,
          "functionName": "deserializeSetAndReturn",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n @Override\n-public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n-    boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n+public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException {\n     try {\n         return setAndReturn(instance, deserialize(jp, ctxt));\n     } catch (UnresolvedForwardReference reference) {\n+        boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n         if (!usingIdentityInfo) {\n             throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n         }\n         reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n         return null;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IOException, JsonProcessingException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor trimming, trying to diagnose #538\n",
          "commitDate": "10/16/14, 9:20 PM",
          "commitName": "afda9e28a2047254905e0b0fe84c928944ab5225",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/7/14, 11:26 PM",
          "commitNameOld": "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 69.91,
          "commitsBetweenForRepo": 127,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException {\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n        return null;\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
          "functionStartLine": 66,
          "functionName": "deserializeSetAndReturn",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n @Override\n-public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n-    boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n+public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException {\n     try {\n         return setAndReturn(instance, deserialize(jp, ctxt));\n     } catch (UnresolvedForwardReference reference) {\n+        boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n         if (!usingIdentityInfo) {\n             throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n         }\n         reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n         return null;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1": {
      "type": "Ybodychange",
      "commitMessage": "cosmetic\n",
      "commitDate": "8/7/14, 11:26 PM",
      "commitName": "5f177cc6a1fc10de8bca2f42e28f9f0c211b94b1",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/14/14, 8:36 PM",
      "commitNameOld": "247a3da8b4db8f900cf28c3998f549731b5289c9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 146.12,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n    boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n        return null;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
      "functionStartLine": 71,
      "functionName": "deserializeSetAndReturn",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n-    boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n+    boolean usingIdentityInfo \u003d (_objectIdInfo !\u003d null) || (_valueDeserializer.getObjectIdReader() !\u003d null);\n     try {\n         return setAndReturn(instance, deserialize(jp, ctxt));\n     } catch (UnresolvedForwardReference reference) {\n         if (!usingIdentityInfo) {\n             throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n         }\n         reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fdf3a9143b82b61140602f2f1c1090a3cd28ffd5": {
      "type": "Ybodychange",
      "commitMessage": "refactoring handling of forward-references\n",
      "commitDate": "3/14/14, 8:10 PM",
      "commitName": "fdf3a9143b82b61140602f2f1c1090a3cd28ffd5",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/13/14, 10:25 AM",
      "commitNameOld": "d75f2e7976d1ee5e3088ba87440ba25feec304b1",
      "commitAuthorOld": "Pascal GÃ©linas",
      "daysBetweenCommits": 60.36,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n    boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n        return null;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
      "functionStartLine": 71,
      "functionName": "deserializeSetAndReturn",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n     boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n     try {\n         return setAndReturn(instance, deserialize(jp, ctxt));\n     } catch (UnresolvedForwardReference reference) {\n         if (!usingIdentityInfo) {\n             throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n         }\n-        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId(), reference.getLocation()));\n+        reference.getRoid().appendReferring(new PropertyReferring(this, reference, _type.getRawClass(), instance));\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "647cb683bf03067f82719cf74190f741270fcb87": {
      "type": "Ybodychange",
      "commitMessage": "Added JsonLocation info in exception thrown for object id check at end of processing.\n",
      "commitDate": "1/13/14, 7:07 AM",
      "commitName": "647cb683bf03067f82719cf74190f741270fcb87",
      "commitAuthor": "Pascal GÃ©linas",
      "commitDateOld": "1/13/14, 7:07 AM",
      "commitNameOld": "d823407ab82164afdd14832fe5159c44d42d89ef",
      "commitAuthorOld": "Pascal GÃ©linas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n    boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId(), reference.getLocation()));\n        return null;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
      "functionStartLine": 76,
      "functionName": "deserializeSetAndReturn",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n     boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n     try {\n         return setAndReturn(instance, deserialize(jp, ctxt));\n     } catch (UnresolvedForwardReference reference) {\n         if (!usingIdentityInfo) {\n             throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n         }\n-        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId()));\n+        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId(), reference.getLocation()));\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d823407ab82164afdd14832fe5159c44d42d89ef": {
      "type": "Yintroduced",
      "commitMessage": "Implemented forward reference resolution for general property based deserialization.\n",
      "commitDate": "1/13/14, 7:07 AM",
      "commitName": "d823407ab82164afdd14832fe5159c44d42d89ef",
      "commitAuthor": "Pascal GÃ©linas",
      "diff": "@@ -0,0 +1,13 @@\n+@Override\n+public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n+    boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n+    try {\n+        return setAndReturn(instance, deserialize(jp, ctxt));\n+    } catch (UnresolvedForwardReference reference) {\n+        if (!usingIdentityInfo) {\n+            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n+        }\n+        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId()));\n+        return null;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException {\n    boolean usingIdentityInfo \u003d _objectIdInfo !\u003d null || _valueDeserializer.getObjectIdReader() !\u003d null;\n    try {\n        return setAndReturn(instance, deserialize(jp, ctxt));\n    } catch (UnresolvedForwardReference reference) {\n        if (!usingIdentityInfo) {\n            throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);\n        }\n        reference.getRoid().appendReferring(new PropertyReferring(instance, reference.getUnresolvedId()));\n        return null;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java",
      "functionStartLine": 75,
      "functionName": "deserializeSetAndReturn",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}