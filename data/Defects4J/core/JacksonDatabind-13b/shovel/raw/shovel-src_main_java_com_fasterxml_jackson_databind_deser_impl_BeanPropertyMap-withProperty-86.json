{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanPropertyMap.java",
  "functionName": "withProperty",
  "functionId": "withProperty___newProperty-SettableBeanProperty",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
  "functionAnnotation": "",
  "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
  "functionStartLine": 86,
  "functionEndLine": 108,
  "numCommitsSeen": 19,
  "timeTaken": 950,
  "changeHistory": [
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
    "d06750f22fb83313d9de3b8cf00f105614645b78",
    "9bde207392ec60b57a803b53b915a1a8524d2897",
    "d14fb0772edb682a1ee97e07c8b2e71bc39e845b",
    "2fd4ffd9963545ce735a58957a84afb90809561e",
    "d6a487cb81c9635787d188d124f42d9256173658"
  ],
  "changeHistoryShort": {
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": "Ybodychange",
    "d06750f22fb83313d9de3b8cf00f105614645b78": "Ybodychange",
    "9bde207392ec60b57a803b53b915a1a8524d2897": "Yformatchange",
    "d14fb0772edb682a1ee97e07c8b2e71bc39e845b": "Ybodychange",
    "2fd4ffd9963545ce735a58957a84afb90809561e": "Ybodychange",
    "d6a487cb81c9635787d188d124f42d9256173658": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": {
      "type": "Ybodychange",
      "commitMessage": "Try to streamline property handling for deser\n",
      "commitDate": "12/12/14, 9:27 PM",
      "commitName": "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/11/14, 7:20 PM",
      "commitNameOld": "9144f6626adb293dc95f15e522596f27b3a52557",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    final int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    final String propName \u003d getPropertyName(newProperty);\n    SettableBeanProperty oldProp \u003d find(propName);\n    if (oldProp \u003d\u003d null) {\n        int index \u003d propName.hashCode() \u0026 _hashMask;\n        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex, _caseInsensitive);\n    }\n    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex, _caseInsensitive);\n    newMap.replace(newProperty);\n    return newMap;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 82,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
      "diff": "@@ -1,15 +1,15 @@\n public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n     final int bcount \u003d _buckets.length;\n     Bucket[] newBuckets \u003d new Bucket[bcount];\n     System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n     final String propName \u003d getPropertyName(newProperty);\n     SettableBeanProperty oldProp \u003d find(propName);\n     if (oldProp \u003d\u003d null) {\n         int index \u003d propName.hashCode() \u0026 _hashMask;\n         newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n-        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex, _caseInsensitivePropertyComparison);\n+        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex, _caseInsensitive);\n     }\n-    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex, _caseInsensitivePropertyComparison);\n+    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex, _caseInsensitive);\n     newMap.replace(newProperty);\n     return newMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d06750f22fb83313d9de3b8cf00f105614645b78": {
      "type": "Ybodychange",
      "commitMessage": "Added case insensitivity as a DeserializationFeature.  Will close #566 in jackson-databind.\n",
      "commitDate": "9/30/14, 10:24 AM",
      "commitName": "d06750f22fb83313d9de3b8cf00f105614645b78",
      "commitAuthor": "Michael Ressler",
      "commitDateOld": "12/2/13, 10:20 AM",
      "commitNameOld": "614a72e345fa054369f9e32540656ac26e432823",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 301.96,
      "commitsBetweenForRepo": 415,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    final int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    final String propName \u003d getPropertyName(newProperty);\n    SettableBeanProperty oldProp \u003d find(propName);\n    if (oldProp \u003d\u003d null) {\n        int index \u003d propName.hashCode() \u0026 _hashMask;\n        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex, _caseInsensitivePropertyComparison);\n    }\n    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex, _caseInsensitivePropertyComparison);\n    newMap.replace(newProperty);\n    return newMap;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 76,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
      "diff": "@@ -1,15 +1,15 @@\n public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n     final int bcount \u003d _buckets.length;\n     Bucket[] newBuckets \u003d new Bucket[bcount];\n     System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n-    final String propName \u003d newProperty.getName();\n-    SettableBeanProperty oldProp \u003d find(newProperty.getName());\n+    final String propName \u003d getPropertyName(newProperty);\n+    SettableBeanProperty oldProp \u003d find(propName);\n     if (oldProp \u003d\u003d null) {\n         int index \u003d propName.hashCode() \u0026 _hashMask;\n         newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n-        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex);\n+        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex, _caseInsensitivePropertyComparison);\n     }\n-    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex);\n+    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex, _caseInsensitivePropertyComparison);\n     newMap.replace(newProperty);\n     return newMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9bde207392ec60b57a803b53b915a1a8524d2897": {
      "type": "Yformatchange",
      "commitMessage": "improve diagnostics by making BeanPropertyMap printable\n",
      "commitDate": "4/8/13, 3:54 PM",
      "commitName": "9bde207392ec60b57a803b53b915a1a8524d2897",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/2/13, 6:16 PM",
      "commitNameOld": "06bd7997b4a7adb4d95a21b37a626476ebfbe207",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 36.86,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    final int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    final String propName \u003d newProperty.getName();\n    SettableBeanProperty oldProp \u003d find(newProperty.getName());\n    if (oldProp \u003d\u003d null) {\n        int index \u003d propName.hashCode() \u0026 _hashMask;\n        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex);\n    }\n    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex);\n    newMap.replace(newProperty);\n    return newMap;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 72,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d14fb0772edb682a1ee97e07c8b2e71bc39e845b": {
      "type": "Ybodychange",
      "commitMessage": "Completing [Issue-29], ability to (de)serialize POJOs to/from JSON Arrays, to condense output\n",
      "commitDate": "7/17/12, 6:49 PM",
      "commitName": "d14fb0772edb682a1ee97e07c8b2e71bc39e845b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/17/12, 7:57 AM",
      "commitNameOld": "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 91.45,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    final int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    final String propName \u003d newProperty.getName();\n    SettableBeanProperty oldProp \u003d find(newProperty.getName());\n    if (oldProp \u003d\u003d null) {\n        int index \u003d propName.hashCode() \u0026 _hashMask;\n        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex);\n    }\n    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex);\n    newMap.replace(newProperty);\n    return newMap;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 69,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
      "diff": "@@ -1,15 +1,15 @@\n public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n     final int bcount \u003d _buckets.length;\n     Bucket[] newBuckets \u003d new Bucket[bcount];\n     System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n     final String propName \u003d newProperty.getName();\n     SettableBeanProperty oldProp \u003d find(newProperty.getName());\n     if (oldProp \u003d\u003d null) {\n         int index \u003d propName.hashCode() \u0026 _hashMask;\n-        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty);\n-        return new BeanPropertyMap(newBuckets, _size + 1);\n+        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty, _nextBucketIndex++);\n+        return new BeanPropertyMap(newBuckets, _size + 1, _nextBucketIndex);\n     }\n-    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount);\n+    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount, _nextBucketIndex);\n     newMap.replace(newProperty);\n     return newMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2fd4ffd9963545ce735a58957a84afb90809561e": {
      "type": "Ybodychange",
      "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
      "commitDate": "2/17/12, 10:40 PM",
      "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/7/12, 9:59 PM",
      "commitNameOld": "d6a487cb81c9635787d188d124f42d9256173658",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 10.03,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    final int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    final String propName \u003d newProperty.getName();\n    SettableBeanProperty oldProp \u003d find(newProperty.getName());\n    if (oldProp \u003d\u003d null) {\n        int index \u003d propName.hashCode() \u0026 _hashMask;\n        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty);\n        return new BeanPropertyMap(newBuckets, _size + 1);\n    }\n    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount);\n    newMap.replace(newProperty);\n    return newMap;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 58,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n",
      "diff": "@@ -1,9 +1,15 @@\n public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n-    int bcount \u003d _buckets.length;\n+    final int bcount \u003d _buckets.length;\n     Bucket[] newBuckets \u003d new Bucket[bcount];\n     System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n-    String key \u003d newProperty.getName();\n-    int index \u003d key.hashCode() \u0026 _hashMask;\n-    newBuckets[index] \u003d new Bucket(newBuckets[index], key, newProperty);\n-    return new BeanPropertyMap(newBuckets, _size + 1);\n+    final String propName \u003d newProperty.getName();\n+    SettableBeanProperty oldProp \u003d find(newProperty.getName());\n+    if (oldProp \u003d\u003d null) {\n+        int index \u003d propName.hashCode() \u0026 _hashMask;\n+        newBuckets[index] \u003d new Bucket(newBuckets[index], propName, newProperty);\n+        return new BeanPropertyMap(newBuckets, _size + 1);\n+    }\n+    BeanPropertyMap newMap \u003d new BeanPropertyMap(newBuckets, bcount);\n+    newMap.replace(newProperty);\n+    return newMap;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a487cb81c9635787d188d124f42d9256173658": {
      "type": "Yintroduced",
      "commitMessage": "Minor mods for object id handling\n",
      "commitDate": "2/7/12, 9:59 PM",
      "commitName": "d6a487cb81c9635787d188d124f42d9256173658",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,9 @@\n+public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n+    int bcount \u003d _buckets.length;\n+    Bucket[] newBuckets \u003d new Bucket[bcount];\n+    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n+    String key \u003d newProperty.getName();\n+    int index \u003d key.hashCode() \u0026 _hashMask;\n+    newBuckets[index] \u003d new Bucket(newBuckets[index], key, newProperty);\n+    return new BeanPropertyMap(newBuckets, _size + 1);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public BeanPropertyMap withProperty(SettableBeanProperty newProperty) {\n    int bcount \u003d _buckets.length;\n    Bucket[] newBuckets \u003d new Bucket[bcount];\n    System.arraycopy(_buckets, 0, newBuckets, 0, bcount);\n    String key \u003d newProperty.getName();\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    newBuckets[index] \u003d new Bucket(newBuckets[index], key, newProperty);\n    return new BeanPropertyMap(newBuckets, _size + 1);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 58,
      "functionName": "withProperty",
      "functionAnnotation": "",
      "functionDoc": "Fluent copy method that creates a new instance that is a copy\nof this instance except for one additional property that is\npassed as the argument.\nNote that method does not modify this instance but constructs\nand returns a new one.\n\n@since 2.0\n"
    }
  }
}