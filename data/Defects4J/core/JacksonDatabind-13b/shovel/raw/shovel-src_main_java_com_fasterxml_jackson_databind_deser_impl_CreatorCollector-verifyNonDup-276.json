{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CreatorCollector.java",
  "functionName": "verifyNonDup",
  "functionId": "verifyNonDup___newOne-AnnotatedWithParams__typeIndex-int__explicit-boolean",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 276,
  "functionEndLine": 319,
  "numCommitsSeen": 36,
  "timeTaken": 871,
  "changeHistory": [
    "3b041e3bad5968ade7f7519daeef6695a8f6b7f9",
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
    "11cec4de94b8de50670e4b0be2d8d5d1e4d6b1f7",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "3b041e3bad5968ade7f7519daeef6695a8f6b7f9": "Ybodychange",
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "11cec4de94b8de50670e4b0be2d8d5d1e4d6b1f7": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3b041e3bad5968ade7f7519daeef6695a8f6b7f9": {
      "type": "Ybodychange",
      "commitMessage": "Fix #667\n",
      "commitDate": "1/2/15, 3:38 PM",
      "commitName": "3b041e3bad5968ade7f7519daeef6695a8f6b7f9",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/14, 3:05 PM",
      "commitNameOld": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
      "commitAuthorOld": "Cowtowncoder",
      "daysBetweenCommits": 10.02,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n    final int mask \u003d (1 \u003c\u003c typeIndex);\n    _hasNonDefaultCreator \u003d true;\n    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n    if (oldOne !\u003d null) {\n        boolean verify;\n        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n            if (!explicit) {\n                return;\n            }\n            verify \u003d true;\n        } else {\n            verify \u003d !explicit;\n        }\n        if (verify \u0026\u0026 (oldOne.getClass() \u003d\u003d newOne.getClass())) {\n            Class\u003c?\u003e oldType \u003d oldOne.getRawParameterType(0);\n            Class\u003c?\u003e newType \u003d newOne.getRawParameterType(0);\n            if (oldType \u003d\u003d newType) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n            }\n            if (newType.isAssignableFrom(oldType)) {\n                return;\n            }\n        }\n    }\n    if (explicit) {\n        _explicitCreators |\u003d mask;\n    }\n    _creators[typeIndex] \u003d _fixAccess(newOne);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
      "functionStartLine": 276,
      "functionName": "verifyNonDup",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,30 @@\n protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n     final int mask \u003d (1 \u003c\u003c typeIndex);\n     _hasNonDefaultCreator \u003d true;\n     AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n     if (oldOne !\u003d null) {\n+        boolean verify;\n         if ((_explicitCreators \u0026 mask) !\u003d 0) {\n             if (!explicit) {\n                 return;\n             }\n+            verify \u003d true;\n+        } else {\n+            verify \u003d !explicit;\n         }\n-        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n-            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n+        if (verify \u0026\u0026 (oldOne.getClass() \u003d\u003d newOne.getClass())) {\n+            Class\u003c?\u003e oldType \u003d oldOne.getRawParameterType(0);\n+            Class\u003c?\u003e newType \u003d newOne.getRawParameterType(0);\n+            if (oldType \u003d\u003d newType) {\n+                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n+            }\n+            if (newType.isAssignableFrom(oldType)) {\n+                return;\n+            }\n         }\n     }\n     if (explicit) {\n         _explicitCreators |\u003d mask;\n     }\n     _creators[typeIndex] \u003d _fixAccess(newOne);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Fix #660\n",
      "commitDate": "12/23/14, 3:05 PM",
      "commitName": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
      "commitAuthor": "Cowtowncoder",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix #660\n",
          "commitDate": "12/23/14, 3:05 PM",
          "commitName": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "6/17/14, 6:57 PM",
          "commitNameOld": "1fd4d1f4b4e85deafccd62c5ee5574b3935bff69",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 188.88,
          "commitsBetweenForRepo": 316,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n    final int mask \u003d (1 \u003c\u003c typeIndex);\n    _hasNonDefaultCreator \u003d true;\n    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n    if (oldOne !\u003d null) {\n        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n            if (!explicit) {\n                return;\n            }\n        }\n        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n        }\n    }\n    if (explicit) {\n        _explicitCreators |\u003d mask;\n    }\n    _creators[typeIndex] \u003d _fixAccess(newOne);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
          "functionStartLine": 276,
          "functionName": "verifyNonDup",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,19 @@\n-protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n+    final int mask \u003d (1 \u003c\u003c typeIndex);\n+    _hasNonDefaultCreator \u003d true;\n+    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n     if (oldOne !\u003d null) {\n+        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n+            if (!explicit) {\n+                return;\n+            }\n+        }\n         if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n-            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n+            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n         }\n     }\n-    return _fixAccess(newOne);\n+    if (explicit) {\n+        _explicitCreators |\u003d mask;\n+    }\n+    _creators[typeIndex] \u003d _fixAccess(newOne);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[newOne-AnnotatedWithParams, oldOne-AnnotatedWithParams, type-String]",
            "newValue": "[newOne-AnnotatedWithParams, typeIndex-int, explicit-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Fix #660\n",
          "commitDate": "12/23/14, 3:05 PM",
          "commitName": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "6/17/14, 6:57 PM",
          "commitNameOld": "1fd4d1f4b4e85deafccd62c5ee5574b3935bff69",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 188.88,
          "commitsBetweenForRepo": 316,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n    final int mask \u003d (1 \u003c\u003c typeIndex);\n    _hasNonDefaultCreator \u003d true;\n    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n    if (oldOne !\u003d null) {\n        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n            if (!explicit) {\n                return;\n            }\n        }\n        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n        }\n    }\n    if (explicit) {\n        _explicitCreators |\u003d mask;\n    }\n    _creators[typeIndex] \u003d _fixAccess(newOne);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
          "functionStartLine": 276,
          "functionName": "verifyNonDup",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,19 @@\n-protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n+    final int mask \u003d (1 \u003c\u003c typeIndex);\n+    _hasNonDefaultCreator \u003d true;\n+    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n     if (oldOne !\u003d null) {\n+        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n+            if (!explicit) {\n+                return;\n+            }\n+        }\n         if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n-            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n+            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n         }\n     }\n-    return _fixAccess(newOne);\n+    if (explicit) {\n+        _explicitCreators |\u003d mask;\n+    }\n+    _creators[typeIndex] \u003d _fixAccess(newOne);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "AnnotatedWithParams",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix #660\n",
          "commitDate": "12/23/14, 3:05 PM",
          "commitName": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "6/17/14, 6:57 PM",
          "commitNameOld": "1fd4d1f4b4e85deafccd62c5ee5574b3935bff69",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 188.88,
          "commitsBetweenForRepo": 316,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n    final int mask \u003d (1 \u003c\u003c typeIndex);\n    _hasNonDefaultCreator \u003d true;\n    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n    if (oldOne !\u003d null) {\n        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n            if (!explicit) {\n                return;\n            }\n        }\n        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n        }\n    }\n    if (explicit) {\n        _explicitCreators |\u003d mask;\n    }\n    _creators[typeIndex] \u003d _fixAccess(newOne);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
          "functionStartLine": 276,
          "functionName": "verifyNonDup",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,19 @@\n-protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {\n+    final int mask \u003d (1 \u003c\u003c typeIndex);\n+    _hasNonDefaultCreator \u003d true;\n+    AnnotatedWithParams oldOne \u003d _creators[typeIndex];\n     if (oldOne !\u003d null) {\n+        if ((_explicitCreators \u0026 mask) !\u003d 0) {\n+            if (!explicit) {\n+                return;\n+            }\n+        }\n         if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n-            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n+            throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex] + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n         }\n     }\n-    return _fixAccess(newOne);\n+    if (explicit) {\n+        _explicitCreators |\u003d mask;\n+    }\n+    _creators[typeIndex] \u003d _fixAccess(newOne);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "11cec4de94b8de50670e4b0be2d8d5d1e4d6b1f7": {
      "type": "Ybodychange",
      "commitMessage": "Implement [JACKSON-850]: allow use of zero-arg factory methods using @JsonCreator\n",
      "commitDate": "7/22/12, 10:33 PM",
      "commitName": "11cec4de94b8de50670e4b0be2d8d5d1e4d6b1f7",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "5/1/12, 11:20 PM",
      "commitNameOld": "9cddb7a9435f92c2be682af0157ab51e2061e23f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 81.97,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "actualSource": "protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n    if (oldOne !\u003d null) {\n        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n        }\n    }\n    return _fixAccess(newOne);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
      "functionStartLine": 198,
      "functionName": "verifyNonDup",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,8 @@\n protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n     if (oldOne !\u003d null) {\n         if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n             throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n         }\n     }\n-    if (_canFixAccess) {\n-        ClassUtil.checkAndFixAccess((Member) newOne.getAnnotated());\n-    }\n-    return newOne;\n+    return _fixAccess(newOne);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,11 @@\n+protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n+    if (oldOne !\u003d null) {\n+        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n+            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n+        }\n+    }\n+    if (_canFixAccess) {\n+        ClassUtil.checkAndFixAccess((Member) newOne.getAnnotated());\n+    }\n+    return newOne;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected AnnotatedWithParams verifyNonDup(AnnotatedWithParams newOne, AnnotatedWithParams oldOne, String type) {\n    if (oldOne !\u003d null) {\n        if (oldOne.getClass() \u003d\u003d newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \" + type + \" creators: already had \" + oldOne + \", encountered \" + newOne);\n        }\n    }\n    if (_canFixAccess) {\n        ClassUtil.checkAndFixAccess((Member) newOne.getAnnotated());\n    }\n    return newOne;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
      "functionStartLine": 128,
      "functionName": "verifyNonDup",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}