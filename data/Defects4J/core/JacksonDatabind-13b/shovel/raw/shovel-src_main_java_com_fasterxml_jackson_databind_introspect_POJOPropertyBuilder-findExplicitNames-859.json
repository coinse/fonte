{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "POJOPropertyBuilder.java",
  "functionName": "findExplicitNames",
  "functionId": "findExplicitNames",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n",
  "functionStartLine": 859,
  "functionEndLine": 870,
  "numCommitsSeen": 85,
  "timeTaken": 2655,
  "changeHistory": [
    "1962410d5a95cc9e359f3b789ff935adf7f315ea",
    "26a052b3b473f22c6573c2f10aa30625a5cb407f",
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
    "65c410c0c40724f763e0b4bce2db6d43bf078818",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "1962410d5a95cc9e359f3b789ff935adf7f315ea": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
    "26a052b3b473f22c6573c2f10aa30625a5cb407f": "Ybodychange",
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0": "Ymultichange(Ybodychange,Ydocchange)",
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": "Ybodychange",
    "65c410c0c40724f763e0b4bce2db6d43bf078818": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1962410d5a95cc9e359f3b789ff935adf7f315ea": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
      "commitDate": "4/14/14, 8:07 PM",
      "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public Set\u003cPropertyName\u003e findExplicitNames() {\n    Set\u003cPropertyName\u003e renamed \u003d null;\n    renamed \u003d _findExplicitNames(_fields, renamed);\n    renamed \u003d _findExplicitNames(_getters, renamed);\n    renamed \u003d _findExplicitNames(_setters, renamed);\n    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n    if (renamed \u003d\u003d null) {\n        return Collections.emptySet();\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 784,
          "functionName": "findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n",
          "diff": "@@ -1,8 +1,11 @@\n-public String findNewName() {\n-    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n-    renamed \u003d findRenamed(_fields, renamed);\n-    renamed \u003d findRenamed(_getters, renamed);\n-    renamed \u003d findRenamed(_setters, renamed);\n-    renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n+public Set\u003cPropertyName\u003e findExplicitNames() {\n+    Set\u003cPropertyName\u003e renamed \u003d null;\n+    renamed \u003d _findExplicitNames(_fields, renamed);\n+    renamed \u003d _findExplicitNames(_getters, renamed);\n+    renamed \u003d _findExplicitNames(_setters, renamed);\n+    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n+    if (renamed \u003d\u003d null) {\n+        return Collections.emptySet();\n+    }\n+    return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "findNewName",
            "newValue": "findExplicitNames"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public Set\u003cPropertyName\u003e findExplicitNames() {\n    Set\u003cPropertyName\u003e renamed \u003d null;\n    renamed \u003d _findExplicitNames(_fields, renamed);\n    renamed \u003d _findExplicitNames(_getters, renamed);\n    renamed \u003d _findExplicitNames(_setters, renamed);\n    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n    if (renamed \u003d\u003d null) {\n        return Collections.emptySet();\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 784,
          "functionName": "findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n",
          "diff": "@@ -1,8 +1,11 @@\n-public String findNewName() {\n-    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n-    renamed \u003d findRenamed(_fields, renamed);\n-    renamed \u003d findRenamed(_getters, renamed);\n-    renamed \u003d findRenamed(_setters, renamed);\n-    renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n+public Set\u003cPropertyName\u003e findExplicitNames() {\n+    Set\u003cPropertyName\u003e renamed \u003d null;\n+    renamed \u003d _findExplicitNames(_fields, renamed);\n+    renamed \u003d _findExplicitNames(_getters, renamed);\n+    renamed \u003d _findExplicitNames(_setters, renamed);\n+    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n+    if (renamed \u003d\u003d null) {\n+        return Collections.emptySet();\n+    }\n+    return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "Set\u003cPropertyName\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public Set\u003cPropertyName\u003e findExplicitNames() {\n    Set\u003cPropertyName\u003e renamed \u003d null;\n    renamed \u003d _findExplicitNames(_fields, renamed);\n    renamed \u003d _findExplicitNames(_getters, renamed);\n    renamed \u003d _findExplicitNames(_setters, renamed);\n    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n    if (renamed \u003d\u003d null) {\n        return Collections.emptySet();\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 784,
          "functionName": "findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n",
          "diff": "@@ -1,8 +1,11 @@\n-public String findNewName() {\n-    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n-    renamed \u003d findRenamed(_fields, renamed);\n-    renamed \u003d findRenamed(_getters, renamed);\n-    renamed \u003d findRenamed(_setters, renamed);\n-    renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n+public Set\u003cPropertyName\u003e findExplicitNames() {\n+    Set\u003cPropertyName\u003e renamed \u003d null;\n+    renamed \u003d _findExplicitNames(_fields, renamed);\n+    renamed \u003d _findExplicitNames(_getters, renamed);\n+    renamed \u003d _findExplicitNames(_setters, renamed);\n+    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n+    if (renamed \u003d\u003d null) {\n+        return Collections.emptySet();\n+    }\n+    return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactoring of property name conflict resolution: fixes issues #193 and #327\n",
          "commitDate": "4/14/14, 8:07 PM",
          "commitName": "1962410d5a95cc9e359f3b789ff935adf7f315ea",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/12/14, 12:57 PM",
          "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 2.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public Set\u003cPropertyName\u003e findExplicitNames() {\n    Set\u003cPropertyName\u003e renamed \u003d null;\n    renamed \u003d _findExplicitNames(_fields, renamed);\n    renamed \u003d _findExplicitNames(_getters, renamed);\n    renamed \u003d _findExplicitNames(_setters, renamed);\n    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n    if (renamed \u003d\u003d null) {\n        return Collections.emptySet();\n    }\n    return renamed;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 784,
          "functionName": "findExplicitNames",
          "functionAnnotation": "",
          "functionDoc": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n",
          "diff": "@@ -1,8 +1,11 @@\n-public String findNewName() {\n-    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n-    renamed \u003d findRenamed(_fields, renamed);\n-    renamed \u003d findRenamed(_getters, renamed);\n-    renamed \u003d findRenamed(_setters, renamed);\n-    renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n+public Set\u003cPropertyName\u003e findExplicitNames() {\n+    Set\u003cPropertyName\u003e renamed \u003d null;\n+    renamed \u003d _findExplicitNames(_fields, renamed);\n+    renamed \u003d _findExplicitNames(_getters, renamed);\n+    renamed \u003d _findExplicitNames(_setters, renamed);\n+    renamed \u003d _findExplicitNames(_ctorParameters, renamed);\n+    if (renamed \u003d\u003d null) {\n+        return Collections.emptySet();\n+    }\n+    return renamed;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Method called to find out set of explicit names for accessors\nbound together due to implicit name.\n\n@since 2.4\n"
          }
        }
      ]
    },
    "26a052b3b473f22c6573c2f10aa30625a5cb407f": {
      "type": "Ybodychange",
      "commitMessage": "Trying to refactor property introspection to use PropertyName, to help with namespaced names handling (-\u003e xml)\n",
      "commitDate": "3/30/14, 8:48 PM",
      "commitName": "26a052b3b473f22c6573c2f10aa30625a5cb407f",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "3/30/14, 7:22 PM",
      "commitNameOld": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public String findNewName() {\n    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 761,
      "functionName": "findNewName",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n public String findNewName() {\n     Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n     renamed \u003d findRenamed(_fields, renamed);\n     renamed \u003d findRenamed(_getters, renamed);\n     renamed \u003d findRenamed(_setters, renamed);\n     renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.name;\n+    return (renamed \u003d\u003d null) ? null : renamed.name.getSimpleName();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "fix a compatibility problem with scala module: can not just drop old semi-internal methods without deprecation\n",
      "commitDate": "3/30/14, 7:22 PM",
      "commitName": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "fix a compatibility problem with scala module: can not just drop old semi-internal methods without deprecation\n",
          "commitDate": "3/30/14, 7:22 PM",
          "commitName": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "3/28/14, 4:09 PM",
          "commitNameOld": "054467f2dce77e1a1f1aa074772d6860fa52b5ca",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 2.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String findNewName() {\n    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.name;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 725,
          "functionName": "findNewName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "fix a compatibility problem with scala module: can not just drop old semi-internal methods without deprecation\n",
          "commitDate": "3/30/14, 7:22 PM",
          "commitName": "a00cdd8d237dae9f06d3c0d65738322d7d37fbd0",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "3/28/14, 4:09 PM",
          "commitNameOld": "054467f2dce77e1a1f1aa074772d6860fa52b5ca",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 2.13,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public String findNewName() {\n    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.name;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 725,
          "functionName": "findNewName",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Method called to check whether property represented by this collector\nshould be renamed from the implicit name; and also verify that there\nare no conflicting rename definitions.\n",
            "newValue": ""
          }
        }
      ]
    },
    "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333": {
      "type": "Ybodychange",
      "commitMessage": "Groundwork for addressing renaming of explicit names with PropertyNamingStrategy\n",
      "commitDate": "3/28/14, 3:51 PM",
      "commitName": "365c29bd6ef5d69fe7cd07bc01340c9bb2ba8333",
      "commitAuthor": "Tatu",
      "commitDateOld": "3/14/14, 8:55 PM",
      "commitNameOld": "11f78112961d71b2123ffd8aebb650671f1989a9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 13.79,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public String findNewName() {\n    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.name;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 686,
      "functionName": "findNewName",
      "functionAnnotation": "",
      "functionDoc": "Method called to check whether property represented by this collector\nshould be renamed from the implicit name; and also verify that there\nare no conflicting rename definitions.\n",
      "diff": "@@ -1,8 +1,8 @@\n public String findNewName() {\n     Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n     renamed \u003d findRenamed(_fields, renamed);\n     renamed \u003d findRenamed(_getters, renamed);\n     renamed \u003d findRenamed(_setters, renamed);\n     renamed \u003d findRenamed(_ctorParameters, renamed);\n-    return (renamed \u003d\u003d null) ? null : renamed.explicitName;\n+    return (renamed \u003d\u003d null) ? null : renamed.name;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "65c410c0c40724f763e0b4bce2db6d43bf078818": {
      "type": "Ybodychange",
      "commitMessage": "refactoring\n",
      "commitDate": "1/27/12, 8:44 PM",
      "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/26/12, 10:26 PM",
      "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public String findNewName() {\n    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.explicitName;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 509,
      "functionName": "findNewName",
      "functionAnnotation": "",
      "functionDoc": "Method called to check whether property represented by this collector\nshould be renamed from the implicit name; and also verify that there\nare no conflicting rename definitions.\n",
      "diff": "@@ -1,8 +1,8 @@\n public String findNewName() {\n-    Node\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n+    Linked\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n     renamed \u003d findRenamed(_fields, renamed);\n     renamed \u003d findRenamed(_getters, renamed);\n     renamed \u003d findRenamed(_setters, renamed);\n     renamed \u003d findRenamed(_ctorParameters, renamed);\n     return (renamed \u003d\u003d null) ? null : renamed.explicitName;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,8 @@\n+public String findNewName() {\n+    Node\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n+    renamed \u003d findRenamed(_fields, renamed);\n+    renamed \u003d findRenamed(_getters, renamed);\n+    renamed \u003d findRenamed(_setters, renamed);\n+    renamed \u003d findRenamed(_ctorParameters, renamed);\n+    return (renamed \u003d\u003d null) ? null : renamed.explicitName;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String findNewName() {\n    Node\u003c? extends AnnotatedMember\u003e renamed \u003d null;\n    renamed \u003d findRenamed(_fields, renamed);\n    renamed \u003d findRenamed(_getters, renamed);\n    renamed \u003d findRenamed(_setters, renamed);\n    renamed \u003d findRenamed(_ctorParameters, renamed);\n    return (renamed \u003d\u003d null) ? null : renamed.explicitName;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 471,
      "functionName": "findNewName",
      "functionAnnotation": "",
      "functionDoc": "Method called to check whether property represented by this collector\nshould be renamed from the implicit name; and also verify that there\nare no conflicting rename definitions.\n"
    }
  }
}