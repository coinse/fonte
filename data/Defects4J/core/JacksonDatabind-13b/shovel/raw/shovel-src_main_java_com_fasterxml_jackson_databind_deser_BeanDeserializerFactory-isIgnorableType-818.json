{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanDeserializerFactory.java",
  "functionName": "isIgnorableType",
  "functionId": "isIgnorableType___config-DeserializationConfig__beanDesc-BeanDescription__type-Class__?____ignoredTypes-Map__Class__?__,Boolean__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n",
  "functionStartLine": 818,
  "functionEndLine": 829,
  "numCommitsSeen": 90,
  "timeTaken": 4216,
  "changeHistory": [
    "d4c6f36d8f6c25261f7dea699d57cd64b6d2b67e",
    "d672b186bc549227afc210d481fa3dfde197b961",
    "28bde0726d83be7f70ca4586abee6f536bfc8885",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "d4c6f36d8f6c25261f7dea699d57cd64b6d2b67e": "Ybodychange",
    "d672b186bc549227afc210d481fa3dfde197b961": "Ybodychange",
    "28bde0726d83be7f70ca4586abee6f536bfc8885": "Ymultichange(Yparameterchange,Ybodychange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4c6f36d8f6c25261f7dea699d57cd64b6d2b67e": {
      "type": "Ybodychange",
      "commitMessage": "minor code cleanup, to remove a work-around that was needed pre-JDK-1.6\n",
      "commitDate": "11/19/14, 2:04 PM",
      "commitName": "d4c6f36d8f6c25261f7dea699d57cd64b6d2b67e",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "11/18/14, 10:36 PM",
      "commitNameOld": "d672b186bc549227afc210d481fa3dfde197b961",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n    Boolean status \u003d ignoredTypes.get(type);\n    if (status !\u003d null) {\n        return status.booleanValue();\n    }\n    BeanDescription desc \u003d config.introspectClassAnnotations(type);\n    status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n    return (status \u003d\u003d null) ? false : status.booleanValue();\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 817,
      "functionName": "isIgnorableType",
      "functionAnnotation": "",
      "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n",
      "diff": "@@ -1,11 +1,9 @@\n protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n     Boolean status \u003d ignoredTypes.get(type);\n-    if (status \u003d\u003d null) {\n-        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n-        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n-        if (status \u003d\u003d null) {\n-            status \u003d Boolean.FALSE;\n-        }\n+    if (status !\u003d null) {\n+        return status.booleanValue();\n     }\n-    return status;\n+    BeanDescription desc \u003d config.introspectClassAnnotations(type);\n+    status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n+    return (status \u003d\u003d null) ? false : status.booleanValue();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d672b186bc549227afc210d481fa3dfde197b961": {
      "type": "Ybodychange",
      "commitMessage": "Implemented #599, ability to skip duplicate module registrations\n",
      "commitDate": "11/18/14, 10:36 PM",
      "commitName": "d672b186bc549227afc210d481fa3dfde197b961",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/29/14, 6:20 PM",
      "commitNameOld": "10f44221fa0e8ffbfbc39384581b190f5f0cc106",
      "commitAuthorOld": "Cowtowncoder",
      "daysBetweenCommits": 50.22,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n    Boolean status \u003d ignoredTypes.get(type);\n    if (status \u003d\u003d null) {\n        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n        if (status \u003d\u003d null) {\n            status \u003d Boolean.FALSE;\n        }\n    }\n    return status;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 817,
      "functionName": "isIgnorableType",
      "functionAnnotation": "",
      "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n",
      "diff": "",
      "extendedDetails": {}
    },
    "28bde0726d83be7f70ca4586abee6f536bfc8885": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
      "commitDate": "1/22/12, 10:57 PM",
      "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
          "commitDate": "1/22/12, 10:57 PM",
          "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 3:58 PM",
          "commitNameOld": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n    Boolean status \u003d ignoredTypes.get(type);\n    if (status \u003d\u003d null) {\n        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n        if (status \u003d\u003d null) {\n            status \u003d Boolean.FALSE;\n        }\n    }\n    return status;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 1369,
          "functionName": "isIgnorableType",
          "functionAnnotation": "",
          "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n",
          "diff": "@@ -1,11 +1,11 @@\n-protected boolean isIgnorableType(DeserializationConfig config, BasicBeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n+protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n     Boolean status \u003d ignoredTypes.get(type);\n     if (status \u003d\u003d null) {\n-        BasicBeanDescription desc \u003d config.introspectClassAnnotations(type);\n+        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n         status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n         if (status \u003d\u003d null) {\n             status \u003d Boolean.FALSE;\n         }\n     }\n     return status;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-DeserializationConfig, beanDesc-BasicBeanDescription, type-Class\u003c?\u003e, ignoredTypes-Map\u003cClass\u003c?\u003e,Boolean\u003e]",
            "newValue": "[config-DeserializationConfig, beanDesc-BeanDescription, type-Class\u003c?\u003e, ignoredTypes-Map\u003cClass\u003c?\u003e,Boolean\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
          "commitDate": "1/22/12, 10:57 PM",
          "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/19/12, 3:58 PM",
          "commitNameOld": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n    Boolean status \u003d ignoredTypes.get(type);\n    if (status \u003d\u003d null) {\n        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n        if (status \u003d\u003d null) {\n            status \u003d Boolean.FALSE;\n        }\n    }\n    return status;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 1369,
          "functionName": "isIgnorableType",
          "functionAnnotation": "",
          "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n",
          "diff": "@@ -1,11 +1,11 @@\n-protected boolean isIgnorableType(DeserializationConfig config, BasicBeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n+protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n     Boolean status \u003d ignoredTypes.get(type);\n     if (status \u003d\u003d null) {\n-        BasicBeanDescription desc \u003d config.introspectClassAnnotations(type);\n+        BeanDescription desc \u003d config.introspectClassAnnotations(type);\n         status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n         if (status \u003d\u003d null) {\n             status \u003d Boolean.FALSE;\n         }\n     }\n     return status;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,11 @@\n+protected boolean isIgnorableType(DeserializationConfig config, BasicBeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n+    Boolean status \u003d ignoredTypes.get(type);\n+    if (status \u003d\u003d null) {\n+        BasicBeanDescription desc \u003d config.introspectClassAnnotations(type);\n+        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n+        if (status \u003d\u003d null) {\n+            status \u003d Boolean.FALSE;\n+        }\n+    }\n+    return status;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected boolean isIgnorableType(DeserializationConfig config, BasicBeanDescription beanDesc, Class\u003c?\u003e type, Map\u003cClass\u003c?\u003e, Boolean\u003e ignoredTypes) {\n    Boolean status \u003d ignoredTypes.get(type);\n    if (status \u003d\u003d null) {\n        BasicBeanDescription desc \u003d config.introspectClassAnnotations(type);\n        status \u003d config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());\n        if (status \u003d\u003d null) {\n            status \u003d Boolean.FALSE;\n        }\n    }\n    return status;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 1403,
      "functionName": "isIgnorableType",
      "functionAnnotation": "",
      "functionDoc": "Helper method that will check whether given raw type is marked as always ignorable\n(for purpose of ignoring properties with type)\n"
    }
  }
}