{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanDeserializerBase.java",
  "functionName": "isCachable",
  "functionId": "isCachable",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 756,
  "functionEndLine": 756,
  "numCommitsSeen": 114,
  "timeTaken": 7864,
  "changeHistory": [
    "2fd4ffd9963545ce735a58957a84afb90809561e",
    "530067bb8db8fc31c27c6075c64c1c075c3ea671",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "2fd4ffd9963545ce735a58957a84afb90809561e": "Ymultichange(Ymovefromfile,Ydocchange)",
    "530067bb8db8fc31c27c6075c64c1c075c3ea671": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yannotationchange,Ydocchange,Yrename,Yparameterchange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2fd4ffd9963545ce735a58957a84afb90809561e": {
      "type": "Ymultichange(Ymovefromfile,Ydocchange)",
      "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
      "commitDate": "2/17/12, 10:40 PM",
      "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
          "commitDate": "2/17/12, 10:40 PM",
          "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/11/12, 2:34 PM",
          "commitNameOld": "7c9023453e8801f2d4a0aa44db9ccbf3347afb6a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 6.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
          "functionStartLine": 343,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "",
          "extendedDetails": {
            "oldPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
            "newPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
            "oldMethodName": "isCachable",
            "newMethodName": "isCachable"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Implement Builder-based deserializer; fix a few ObjectId issues\n",
          "commitDate": "2/17/12, 10:40 PM",
          "commitName": "2fd4ffd9963545ce735a58957a84afb90809561e",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/11/12, 2:34 PM",
          "commitNameOld": "7c9023453e8801f2d4a0aa44db9ccbf3347afb6a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 6.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
          "functionStartLine": 343,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
            "newValue": ""
          }
        }
      ]
    },
    "530067bb8db8fc31c27c6075c64c1c075c3ea671": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yannotationchange,Ydocchange,Yrename,Yparameterchange)",
      "commitMessage": "Remove @JsonCachable, replace with a method\n",
      "commitDate": "12/28/11, 10:35 AM",
      "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
            "newPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
            "oldMethodName": "findCachability",
            "newMethodName": "isCachable"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Boolean",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Method that checks whether specified class has annotations\nthat indicate that it is (or is not) cachable. Exact\nsemantics depend on type of class annotated and using\nclass (factory or provider).\n\u003cp\u003e\nCurrently only used\nwith deserializers, to determine whether provider\nshould cache instances, and if no annotations are found,\nassumes non-cachable instances.\n\n@return True, if class is considered cachable within context,\n  False if not, and null if introspector does not care either\n  way.\n",
            "newValue": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "findCachability",
            "newValue": "isCachable"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Remove @JsonCachable, replace with a method\n",
          "commitDate": "12/28/11, 10:35 AM",
          "commitName": "530067bb8db8fc31c27c6075c64c1c075c3ea671",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/28/11, 1:02 AM",
          "commitNameOld": "463614bbdcda0afcc680b924fd473476f862d274",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isCachable() {\n    return true;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
          "functionStartLine": 266,
          "functionName": "isCachable",
          "functionAnnotation": "@Override",
          "functionDoc": "Because of costs associated with constructing bean deserializers,\nthey usually should be cached unlike other deserializer types.\n",
          "diff": "@@ -1,3 +1,4 @@\n-public Boolean findCachability(AnnotatedClass ac) {\n-    return null;\n+@Override\n+public boolean isCachable() {\n+    return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ac-AnnotatedClass]",
            "newValue": "[]"
          }
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,3 @@\n+public Boolean findCachability(AnnotatedClass ac) {\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Boolean findCachability(AnnotatedClass ac) {\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
      "functionStartLine": 171,
      "functionName": "findCachability",
      "functionAnnotation": "",
      "functionDoc": "Method that checks whether specified class has annotations\nthat indicate that it is (or is not) cachable. Exact\nsemantics depend on type of class annotated and using\nclass (factory or provider).\n\u003cp\u003e\nCurrently only used\nwith deserializers, to determine whether provider\nshould cache instances, and if no annotations are found,\nassumes non-cachable instances.\n\n@return True, if class is considered cachable within context,\n  False if not, and null if introspector does not care either\n  way.\n"
    }
  }
}