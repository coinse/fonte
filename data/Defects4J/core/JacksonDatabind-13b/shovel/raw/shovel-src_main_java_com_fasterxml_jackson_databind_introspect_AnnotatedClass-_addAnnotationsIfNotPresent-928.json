{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotatedClass.java",
  "functionName": "_addAnnotationsIfNotPresent",
  "functionId": "_addAnnotationsIfNotPresent___target-AnnotatedMember__anns-Annotation[]",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 928,
  "functionEndLine": 948,
  "numCommitsSeen": 22,
  "timeTaken": 1559,
  "changeHistory": [
    "3ec253707dcfba4055e99d6af97d0d3877d0999a",
    "f7c45bfe1e0de039a06d8e9b326a4bf523cfce99",
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b"
  ],
  "changeHistoryShort": {
    "3ec253707dcfba4055e99d6af97d0d3877d0999a": "Ybodychange",
    "f7c45bfe1e0de039a06d8e9b326a4bf523cfce99": "Ybodychange",
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ec253707dcfba4055e99d6af97d0d3877d0999a": {
      "type": "Ybodychange",
      "commitMessage": "keep bundle annotations and prevent simple cycles\n\nI don\u0027t see any downsides and this makes it easier to manipulate\ncustom annotations, introspectors, serializers, and other parts\nthat interact with annotated objects. The cycle detection is a\nbonus.\n",
      "commitDate": "8/15/14, 4:28 PM",
      "commitName": "3ec253707dcfba4055e99d6af97d0d3877d0999a",
      "commitAuthor": "ian",
      "commitDateOld": "8/13/14, 4:04 PM",
      "commitNameOld": "fd0f1fefdc19593a040b3dce857715d613cb6458",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 2.02,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n    if (anns !\u003d null) {\n        List\u003cAnnotation[]\u003e bundles \u003d null;\n        for (Annotation ann : anns) {\n            boolean wasNotPresent \u003d target.addIfNotPresent(ann);\n            if (wasNotPresent \u0026\u0026 _isAnnotationBundle(ann)) {\n                if (bundles \u003d\u003d null) {\n                    bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n                }\n                bundles.add(ann.annotationType().getDeclaredAnnotations());\n            }\n        }\n        if (bundles !\u003d null) {\n            for (Annotation[] annotations : bundles) {\n                _addAnnotationsIfNotPresent(target, annotations);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 928,
      "functionName": "_addAnnotationsIfNotPresent",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,19 @@\n private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n     if (anns !\u003d null) {\n         List\u003cAnnotation[]\u003e bundles \u003d null;\n         for (Annotation ann : anns) {\n-            if (_isAnnotationBundle(ann)) {\n+            boolean wasNotPresent \u003d target.addIfNotPresent(ann);\n+            if (wasNotPresent \u0026\u0026 _isAnnotationBundle(ann)) {\n                 if (bundles \u003d\u003d null) {\n                     bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n                 }\n                 bundles.add(ann.annotationType().getDeclaredAnnotations());\n-            } else {\n-                target.addIfNotPresent(ann);\n             }\n         }\n         if (bundles !\u003d null) {\n             for (Annotation[] annotations : bundles) {\n                 _addAnnotationsIfNotPresent(target, annotations);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f7c45bfe1e0de039a06d8e9b326a4bf523cfce99": {
      "type": "Ybodychange",
      "commitMessage": "Implemented [JACKSON-754]: Support for annotation bundles with @JacksonAnnotationsInside\n",
      "commitDate": "1/16/12, 6:26 PM",
      "commitName": "f7c45bfe1e0de039a06d8e9b326a4bf523cfce99",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/16/12, 5:24 PM",
      "commitNameOld": "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n    if (anns !\u003d null) {\n        List\u003cAnnotation[]\u003e bundles \u003d null;\n        for (Annotation ann : anns) {\n            if (_isAnnotationBundle(ann)) {\n                if (bundles \u003d\u003d null) {\n                    bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n                }\n                bundles.add(ann.annotationType().getDeclaredAnnotations());\n            } else {\n                target.addIfNotPresent(ann);\n            }\n        }\n        if (bundles !\u003d null) {\n            for (Annotation[] annotations : bundles) {\n                _addAnnotationsIfNotPresent(target, annotations);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 861,
      "functionName": "_addAnnotationsIfNotPresent",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,20 @@\n private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n     if (anns !\u003d null) {\n         List\u003cAnnotation[]\u003e bundles \u003d null;\n         for (Annotation ann : anns) {\n-            if (ann.annotationType().getAnnotation(JacksonAnnotationsInside.class) !\u003d null) {\n+            if (_isAnnotationBundle(ann)) {\n                 if (bundles \u003d\u003d null) {\n                     bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n                 }\n                 bundles.add(ann.annotationType().getDeclaredAnnotations());\n             } else {\n                 target.addIfNotPresent(ann);\n             }\n         }\n         if (bundles !\u003d null) {\n-            _addAnnotationsIfNotPresent(target, bundles.toArray(new Annotation[bundles.size()]));\n+            for (Annotation[] annotations : bundles) {\n+                _addAnnotationsIfNotPresent(target, annotations);\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b": {
      "type": "Yintroduced",
      "commitMessage": "Start work on [JACKSON-754], \"annotation bundles\"\n",
      "commitDate": "1/16/12, 5:24 PM",
      "commitName": "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,18 @@\n+private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n+    if (anns !\u003d null) {\n+        List\u003cAnnotation[]\u003e bundles \u003d null;\n+        for (Annotation ann : anns) {\n+            if (ann.annotationType().getAnnotation(JacksonAnnotationsInside.class) !\u003d null) {\n+                if (bundles \u003d\u003d null) {\n+                    bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n+                }\n+                bundles.add(ann.annotationType().getDeclaredAnnotations());\n+            } else {\n+                target.addIfNotPresent(ann);\n+            }\n+        }\n+        if (bundles !\u003d null) {\n+            _addAnnotationsIfNotPresent(target, bundles.toArray(new Annotation[bundles.size()]));\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void _addAnnotationsIfNotPresent(AnnotatedMember target, Annotation[] anns) {\n    if (anns !\u003d null) {\n        List\u003cAnnotation[]\u003e bundles \u003d null;\n        for (Annotation ann : anns) {\n            if (ann.annotationType().getAnnotation(JacksonAnnotationsInside.class) !\u003d null) {\n                if (bundles \u003d\u003d null) {\n                    bundles \u003d new LinkedList\u003cAnnotation[]\u003e();\n                }\n                bundles.add(ann.annotationType().getDeclaredAnnotations());\n            } else {\n                target.addIfNotPresent(ann);\n            }\n        }\n        if (bundles !\u003d null) {\n            _addAnnotationsIfNotPresent(target, bundles.toArray(new Annotation[bundles.size()]));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 863,
      "functionName": "_addAnnotationsIfNotPresent",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}