{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClassUtil.java",
  "functionName": "findConstructor",
  "functionId": "findConstructor___cls-Class__T____canFixAccess-boolean",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 380,
  "functionEndLine": 400,
  "numCommitsSeen": 12,
  "timeTaken": 738,
  "changeHistory": [
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,18 @@\n+public static \u003cT\u003e Constructor\u003cT\u003e findConstructor(Class\u003cT\u003e cls, boolean canFixAccess) throws IllegalArgumentException {\n+    try {\n+        Constructor\u003cT\u003e ctor \u003d cls.getDeclaredConstructor();\n+        if (canFixAccess) {\n+            checkAndFixAccess(ctor);\n+        } else {\n+            if (!Modifier.isPublic(ctor.getModifiers())) {\n+                throw new IllegalArgumentException(\"Default constructor for \" + cls.getName() + \" is not accessible (non-public?): not allowed to try modify access via Reflection: can not instantiate type\");\n+            }\n+        }\n+        return ctor;\n+    } catch (NoSuchMethodException e) {\n+        ;\n+    } catch (Exception e) {\n+        ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to find default constructor of class \" + cls.getName() + \", problem: \" + e.getMessage());\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static \u003cT\u003e Constructor\u003cT\u003e findConstructor(Class\u003cT\u003e cls, boolean canFixAccess) throws IllegalArgumentException {\n    try {\n        Constructor\u003cT\u003e ctor \u003d cls.getDeclaredConstructor();\n        if (canFixAccess) {\n            checkAndFixAccess(ctor);\n        } else {\n            if (!Modifier.isPublic(ctor.getModifiers())) {\n                throw new IllegalArgumentException(\"Default constructor for \" + cls.getName() + \" is not accessible (non-public?): not allowed to try modify access via Reflection: can not instantiate type\");\n            }\n        }\n        return ctor;\n    } catch (NoSuchMethodException e) {\n        ;\n    } catch (Exception e) {\n        ClassUtil.unwrapAndThrowAsIAE(e, \"Failed to find default constructor of class \" + cls.getName() + \", problem: \" + e.getMessage());\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java",
      "functionStartLine": 354,
      "functionName": "findConstructor",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}