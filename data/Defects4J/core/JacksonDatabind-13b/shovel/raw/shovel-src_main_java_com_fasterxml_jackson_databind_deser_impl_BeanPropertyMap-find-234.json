{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanPropertyMap.java",
  "functionName": "find",
  "functionId": "find___key-String",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 234,
  "functionEndLine": 259,
  "numCommitsSeen": 19,
  "timeTaken": 897,
  "changeHistory": [
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
    "d06750f22fb83313d9de3b8cf00f105614645b78",
    "614a72e345fa054369f9e32540656ac26e432823",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": "Ybodychange",
    "d06750f22fb83313d9de3b8cf00f105614645b78": "Ybodychange",
    "614a72e345fa054369f9e32540656ac26e432823": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": {
      "type": "Ybodychange",
      "commitMessage": "Try to streamline property handling for deser\n",
      "commitDate": "12/12/14, 9:27 PM",
      "commitName": "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/11/14, 7:20 PM",
      "commitNameOld": "9144f6626adb293dc95f15e522596f27b3a52557",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public SettableBeanProperty find(String key) {\n    if (key \u003d\u003d null) {\n        throw new IllegalArgumentException(\"Can not pass null property name\");\n    }\n    if (_caseInsensitive) {\n        key \u003d key.toLowerCase();\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return null;\n    }\n    if (bucket.key \u003d\u003d key) {\n        return bucket.value;\n    }\n    while ((bucket \u003d bucket.next) !\u003d null) {\n        if (bucket.key \u003d\u003d key) {\n            return bucket.value;\n        }\n    }\n    return _findWithEquals(key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 230,
      "functionName": "find",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,22 @@\n public SettableBeanProperty find(String key) {\n     if (key \u003d\u003d null) {\n         throw new IllegalArgumentException(\"Can not pass null property name\");\n     }\n-    if (_caseInsensitivePropertyComparison) {\n+    if (_caseInsensitive) {\n         key \u003d key.toLowerCase();\n     }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return null;\n     }\n     if (bucket.key \u003d\u003d key) {\n         return bucket.value;\n     }\n     while ((bucket \u003d bucket.next) !\u003d null) {\n         if (bucket.key \u003d\u003d key) {\n             return bucket.value;\n         }\n     }\n     return _findWithEquals(key, index);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d06750f22fb83313d9de3b8cf00f105614645b78": {
      "type": "Ybodychange",
      "commitMessage": "Added case insensitivity as a DeserializationFeature.  Will close #566 in jackson-databind.\n",
      "commitDate": "9/30/14, 10:24 AM",
      "commitName": "d06750f22fb83313d9de3b8cf00f105614645b78",
      "commitAuthor": "Michael Ressler",
      "commitDateOld": "12/2/13, 10:20 AM",
      "commitNameOld": "614a72e345fa054369f9e32540656ac26e432823",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 301.96,
      "commitsBetweenForRepo": 415,
      "commitsBetweenForFile": 1,
      "actualSource": "public SettableBeanProperty find(String key) {\n    if (key \u003d\u003d null) {\n        throw new IllegalArgumentException(\"Can not pass null property name\");\n    }\n    if (_caseInsensitivePropertyComparison) {\n        key \u003d key.toLowerCase();\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return null;\n    }\n    if (bucket.key \u003d\u003d key) {\n        return bucket.value;\n    }\n    while ((bucket \u003d bucket.next) !\u003d null) {\n        if (bucket.key \u003d\u003d key) {\n            return bucket.value;\n        }\n    }\n    return _findWithEquals(key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 224,
      "functionName": "find",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,22 @@\n public SettableBeanProperty find(String key) {\n     if (key \u003d\u003d null) {\n         throw new IllegalArgumentException(\"Can not pass null property name\");\n     }\n+    if (_caseInsensitivePropertyComparison) {\n+        key \u003d key.toLowerCase();\n+    }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return null;\n     }\n     if (bucket.key \u003d\u003d key) {\n         return bucket.value;\n     }\n     while ((bucket \u003d bucket.next) !\u003d null) {\n         if (bucket.key \u003d\u003d key) {\n             return bucket.value;\n         }\n     }\n     return _findWithEquals(key, index);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "614a72e345fa054369f9e32540656ac26e432823": {
      "type": "Ybodychange",
      "commitMessage": "Adding explicit null check for BeanPropertyMap, to improve troubleshooting\n",
      "commitDate": "12/2/13, 10:20 AM",
      "commitName": "614a72e345fa054369f9e32540656ac26e432823",
      "commitAuthor": "Tatu",
      "commitDateOld": "8/19/13, 11:05 PM",
      "commitNameOld": "8a0adf2d51ff1890317afbc935c74d8ca7ff21bf",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 104.51,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "actualSource": "public SettableBeanProperty find(String key) {\n    if (key \u003d\u003d null) {\n        throw new IllegalArgumentException(\"Can not pass null property name\");\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return null;\n    }\n    if (bucket.key \u003d\u003d key) {\n        return bucket.value;\n    }\n    while ((bucket \u003d bucket.next) !\u003d null) {\n        if (bucket.key \u003d\u003d key) {\n            return bucket.value;\n        }\n    }\n    return _findWithEquals(key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 214,
      "functionName": "find",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,19 @@\n public SettableBeanProperty find(String key) {\n+    if (key \u003d\u003d null) {\n+        throw new IllegalArgumentException(\"Can not pass null property name\");\n+    }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return null;\n     }\n     if (bucket.key \u003d\u003d key) {\n         return bucket.value;\n     }\n     while ((bucket \u003d bucket.next) !\u003d null) {\n         if (bucket.key \u003d\u003d key) {\n             return bucket.value;\n         }\n     }\n     return _findWithEquals(key, index);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,16 @@\n+public SettableBeanProperty find(String key) {\n+    int index \u003d key.hashCode() \u0026 _hashMask;\n+    Bucket bucket \u003d _buckets[index];\n+    if (bucket \u003d\u003d null) {\n+        return null;\n+    }\n+    if (bucket.key \u003d\u003d key) {\n+        return bucket.value;\n+    }\n+    while ((bucket \u003d bucket.next) !\u003d null) {\n+        if (bucket.key \u003d\u003d key) {\n+            return bucket.value;\n+        }\n+    }\n+    return _findWithEquals(key, index);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public SettableBeanProperty find(String key) {\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return null;\n    }\n    if (bucket.key \u003d\u003d key) {\n        return bucket.value;\n    }\n    while ((bucket \u003d bucket.next) !\u003d null) {\n        if (bucket.key \u003d\u003d key) {\n            return bucket.value;\n        }\n    }\n    return _findWithEquals(key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 78,
      "functionName": "find",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}