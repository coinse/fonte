{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JacksonAnnotationIntrospector.java",
  "functionName": "findObjectIdInfo",
  "functionId": "findObjectIdInfo___ann-Annotated",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 437,
  "functionEndLine": 445,
  "numCommitsSeen": 73,
  "timeTaken": 3211,
  "changeHistory": [
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d",
    "e05e352f53245160fe761b88665f11f67cef9d43",
    "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2",
    "6cada0a47ed675fffe15697968dfef68864b57e7",
    "05c82f22c49e3da03b0f8c5271f1ce6850111adc",
    "d453182b63249c2c597a54229a4242e1ce1921d0"
  ],
  "changeHistoryShort": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": "Ybodychange",
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d": "Ybodychange",
    "e05e352f53245160fe761b88665f11f67cef9d43": "Ybodychange",
    "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2": "Ybodychange",
    "6cada0a47ed675fffe15697968dfef68864b57e7": "Ybodychange",
    "05c82f22c49e3da03b0f8c5271f1ce6850111adc": "Ybodychange",
    "d453182b63249c2c597a54229a4242e1ce1921d0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": {
      "type": "Ybodychange",
      "commitMessage": "Implement #133\n",
      "commitDate": "9/25/14, 5:28 PM",
      "commitName": "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "5/19/14, 11:42 PM",
      "commitNameOld": "46c6679d0b88035e0083e27890a421e8a8466242",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 128.74,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d _findAnnotation(ann, JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    PropertyName name \u003d new PropertyName(info.property());\n    return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 430,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n-    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n+    JsonIdentityInfo info \u003d _findAnnotation(ann, JsonIdentityInfo.class);\n     if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n     PropertyName name \u003d new PropertyName(info.property());\n     return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d": {
      "type": "Ybodychange",
      "commitMessage": "Implementation of custom object id resolution.\n",
      "commitDate": "2/10/14, 7:59 AM",
      "commitName": "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d",
      "commitAuthor": "Pascal GÃ©linas",
      "commitDateOld": "12/30/13, 7:34 PM",
      "commitNameOld": "7a27bc22bb530765b187d2835b463f0df194cbd8",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 41.52,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    PropertyName name \u003d new PropertyName(info.property());\n    return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 455,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n     JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n     if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n     PropertyName name \u003d new PropertyName(info.property());\n-    return new ObjectIdInfo(name, info.scope(), info.generator());\n+    return new ObjectIdInfo(name, info.scope(), info.generator(), info.resolver());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e05e352f53245160fe761b88665f11f67cef9d43": {
      "type": "Ybodychange",
      "commitMessage": "Start making changes to support full PropertyName passing, not just String name\n",
      "commitDate": "7/25/13, 11:05 PM",
      "commitName": "e05e352f53245160fe761b88665f11f67cef9d43",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/25/13, 7:13 PM",
      "commitNameOld": "156487d56a9d7df9456eb049f7ebd9f70d1f8474",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    PropertyName name \u003d new PropertyName(info.property());\n    return new ObjectIdInfo(name, info.scope(), info.generator());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 427,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,9 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n     JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n     if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n-    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n+    PropertyName name \u003d new PropertyName(info.property());\n+    return new ObjectIdInfo(name, info.scope(), info.generator());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2": {
      "type": "Ybodychange",
      "commitMessage": "Improved handling of \"always-as-id\" references; might now actually be useful\n",
      "commitDate": "8/24/12, 1:33 PM",
      "commitName": "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/13/12, 10:17 PM",
      "commitNameOld": "023d8bd40ce8dfec4899cd4e42fb374bd9143dc2",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 10.64,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 408,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n     JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n     if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n-    return new ObjectIdInfo(info.property(), info.scope(), info.generator(), info.firstAsId());\n+    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6cada0a47ed675fffe15697968dfef68864b57e7": {
      "type": "Ybodychange",
      "commitMessage": "Add unit tests, support for jackson-annotations issue #4: add `@JsonIdentityInfo.firstAsId` to force serialization of the very first reference as id (as well as following ones)\n",
      "commitDate": "7/31/12, 10:24 PM",
      "commitName": "6cada0a47ed675fffe15697968dfef68864b57e7",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "6/29/12, 8:27 PM",
      "commitNameOld": "2b4086a9372b2129585bdf217d84f6313076c8ec",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 32.08,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    return new ObjectIdInfo(info.property(), info.scope(), info.generator(), info.firstAsId());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 401,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n     JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n     if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n-    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n+    return new ObjectIdInfo(info.property(), info.scope(), info.generator(), info.firstAsId());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "05c82f22c49e3da03b0f8c5271f1ce6850111adc": {
      "type": "Ybodychange",
      "commitMessage": "Starting work on supporting custom (property-based) object ids.\n",
      "commitDate": "2/9/12, 9:58 PM",
      "commitName": "05c82f22c49e3da03b0f8c5271f1ce6850111adc",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/6/12, 10:44 PM",
      "commitNameOld": "d453182b63249c2c597a54229a4242e1ce1921d0",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n        return null;\n    }\n    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 391,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n     JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n-    if (info \u003d\u003d null) {\n+    if (info \u003d\u003d null || info.generator() \u003d\u003d ObjectIdGenerators.None.class) {\n         return null;\n     }\n-    return new ObjectIdInfo(info.property(), info.generator());\n+    return new ObjectIdInfo(info.property(), info.scope(), info.generator());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d453182b63249c2c597a54229a4242e1ce1921d0": {
      "type": "Yintroduced",
      "commitMessage": "Refactoring Object Id handling, after realizing first attempt is too limiting\n",
      "commitDate": "2/6/12, 10:44 PM",
      "commitName": "d453182b63249c2c597a54229a4242e1ce1921d0",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+public ObjectIdInfo findObjectIdInfo(Annotated ann) {\n+    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n+    if (info \u003d\u003d null) {\n+        return null;\n+    }\n+    return new ObjectIdInfo(info.property(), info.generator());\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic ObjectIdInfo findObjectIdInfo(Annotated ann) {\n    JsonIdentityInfo info \u003d ann.getAnnotation(JsonIdentityInfo.class);\n    if (info \u003d\u003d null) {\n        return null;\n    }\n    return new ObjectIdInfo(info.property(), info.generator());\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 391,
      "functionName": "findObjectIdInfo",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}