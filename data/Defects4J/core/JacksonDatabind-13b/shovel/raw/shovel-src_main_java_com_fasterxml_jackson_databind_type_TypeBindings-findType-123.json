{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeBindings.java",
  "functionName": "findType",
  "functionId": "findType___name-String__mustFind-boolean",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 123,
  "functionEndLine": 182,
  "numCommitsSeen": 15,
  "timeTaken": 754,
  "changeHistory": [
    "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01",
    "b2a9ca7bb27c21b12ccd8d17314e83275381027c",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01": "Ymultichange(Yparameterchange,Ybodychange)",
    "b2a9ca7bb27c21b12ccd8d17314e83275381027c": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix #609, Fix #728\n",
      "commitDate": "3/19/15, 8:20 PM",
      "commitName": "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix #609, Fix #728\n",
          "commitDate": "3/19/15, 8:20 PM",
          "commitName": "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "9/15/14, 3:51 PM",
          "commitNameOld": "6cf6585db504cdfb4e657a66debf185c6580e779",
          "commitAuthorOld": "Cowtowncoder",
          "daysBetweenCommits": 185.19,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "actualSource": "public JavaType findType(String name, boolean mustFind) {\n    if (_bindings \u003d\u003d null) {\n        _resolve();\n    }\n    JavaType t \u003d _bindings.get(name);\n    if (t !\u003d null) {\n        return t;\n    }\n    if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n        return UNBOUND;\n    }\n    if (_parentBindings !\u003d null) {\n        return _parentBindings.findType(name);\n    }\n    if (_contextClass !\u003d null) {\n        Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n        if (enclosing !\u003d null) {\n            if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                return UNBOUND;\n            }\n        }\n    }\n    if (!mustFind) {\n        return null;\n    }\n    String className;\n    if (_contextClass !\u003d null) {\n        className \u003d _contextClass.getName();\n    } else if (_contextType !\u003d null) {\n        className \u003d _contextType.toString();\n    } else {\n        className \u003d \"UNKNOWN\";\n    }\n    throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java",
          "functionStartLine": 123,
          "functionName": "findType",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,32 +1,35 @@\n-public JavaType findType(String name) {\n+public JavaType findType(String name, boolean mustFind) {\n     if (_bindings \u003d\u003d null) {\n         _resolve();\n     }\n     JavaType t \u003d _bindings.get(name);\n     if (t !\u003d null) {\n         return t;\n     }\n     if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n         return UNBOUND;\n     }\n     if (_parentBindings !\u003d null) {\n         return _parentBindings.findType(name);\n     }\n     if (_contextClass !\u003d null) {\n         Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n         if (enclosing !\u003d null) {\n             if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                 return UNBOUND;\n             }\n         }\n     }\n+    if (!mustFind) {\n+        return null;\n+    }\n     String className;\n     if (_contextClass !\u003d null) {\n         className \u003d _contextClass.getName();\n     } else if (_contextType !\u003d null) {\n         className \u003d _contextType.toString();\n     } else {\n         className \u003d \"UNKNOWN\";\n     }\n     throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String]",
            "newValue": "[name-String, mustFind-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix #609, Fix #728\n",
          "commitDate": "3/19/15, 8:20 PM",
          "commitName": "66bfe6658e6c25e03d1bcd5d4d858e1aaf738a01",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "9/15/14, 3:51 PM",
          "commitNameOld": "6cf6585db504cdfb4e657a66debf185c6580e779",
          "commitAuthorOld": "Cowtowncoder",
          "daysBetweenCommits": 185.19,
          "commitsBetweenForRepo": 318,
          "commitsBetweenForFile": 1,
          "actualSource": "public JavaType findType(String name, boolean mustFind) {\n    if (_bindings \u003d\u003d null) {\n        _resolve();\n    }\n    JavaType t \u003d _bindings.get(name);\n    if (t !\u003d null) {\n        return t;\n    }\n    if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n        return UNBOUND;\n    }\n    if (_parentBindings !\u003d null) {\n        return _parentBindings.findType(name);\n    }\n    if (_contextClass !\u003d null) {\n        Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n        if (enclosing !\u003d null) {\n            if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                return UNBOUND;\n            }\n        }\n    }\n    if (!mustFind) {\n        return null;\n    }\n    String className;\n    if (_contextClass !\u003d null) {\n        className \u003d _contextClass.getName();\n    } else if (_contextType !\u003d null) {\n        className \u003d _contextType.toString();\n    } else {\n        className \u003d \"UNKNOWN\";\n    }\n    throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java",
          "functionStartLine": 123,
          "functionName": "findType",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,32 +1,35 @@\n-public JavaType findType(String name) {\n+public JavaType findType(String name, boolean mustFind) {\n     if (_bindings \u003d\u003d null) {\n         _resolve();\n     }\n     JavaType t \u003d _bindings.get(name);\n     if (t !\u003d null) {\n         return t;\n     }\n     if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n         return UNBOUND;\n     }\n     if (_parentBindings !\u003d null) {\n         return _parentBindings.findType(name);\n     }\n     if (_contextClass !\u003d null) {\n         Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n         if (enclosing !\u003d null) {\n             if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                 return UNBOUND;\n             }\n         }\n     }\n+    if (!mustFind) {\n+        return null;\n+    }\n     String className;\n     if (_contextClass !\u003d null) {\n         className \u003d _contextClass.getName();\n     } else if (_contextType !\u003d null) {\n         className \u003d _contextType.toString();\n     } else {\n         className \u003d \"UNKNOWN\";\n     }\n     throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "b2a9ca7bb27c21b12ccd8d17314e83275381027c": {
      "type": "Ybodychange",
      "commitMessage": "Javadoc cleanup, removing pre-2.0 @since annotations\n",
      "commitDate": "1/20/12, 8:16 PM",
      "commitName": "b2a9ca7bb27c21b12ccd8d17314e83275381027c",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/11, 6:23 PM",
      "commitNameOld": "d92c1ed454e8474103e7eb698b0a855e7850dbb5",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 28.08,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "actualSource": "public JavaType findType(String name) {\n    if (_bindings \u003d\u003d null) {\n        _resolve();\n    }\n    JavaType t \u003d _bindings.get(name);\n    if (t !\u003d null) {\n        return t;\n    }\n    if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n        return UNBOUND;\n    }\n    if (_parentBindings !\u003d null) {\n        return _parentBindings.findType(name);\n    }\n    if (_contextClass !\u003d null) {\n        Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n        if (enclosing !\u003d null) {\n            if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                return UNBOUND;\n            }\n        }\n    }\n    String className;\n    if (_contextClass !\u003d null) {\n        className \u003d _contextClass.getName();\n    } else if (_contextType !\u003d null) {\n        className \u003d _contextType.toString();\n    } else {\n        className \u003d \"UNKNOWN\";\n    }\n    throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java",
      "functionStartLine": 117,
      "functionName": "findType",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,32 @@\n+public JavaType findType(String name) {\n+    if (_bindings \u003d\u003d null) {\n+        _resolve();\n+    }\n+    JavaType t \u003d _bindings.get(name);\n+    if (t !\u003d null) {\n+        return t;\n+    }\n+    if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n+        return UNBOUND;\n+    }\n+    if (_parentBindings !\u003d null) {\n+        return _parentBindings.findType(name);\n+    }\n+    if (_contextClass !\u003d null) {\n+        Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n+        if (enclosing !\u003d null) {\n+            if (!Modifier.isStatic(_contextClass.getModifiers())) {\n+                return UNBOUND;\n+            }\n+        }\n+    }\n+    String className;\n+    if (_contextClass !\u003d null) {\n+        className \u003d _contextClass.getName();\n+    } else if (_contextType !\u003d null) {\n+        className \u003d _contextType.toString();\n+    } else {\n+        className \u003d \"UNKNOWN\";\n+    }\n+    throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JavaType findType(String name) {\n    if (_bindings \u003d\u003d null) {\n        _resolve();\n    }\n    JavaType t \u003d _bindings.get(name);\n    if (t !\u003d null) {\n        return t;\n    }\n    if (_placeholders !\u003d null \u0026\u0026 _placeholders.contains(name)) {\n        return UNBOUND;\n    }\n    if (_parentBindings !\u003d null) {\n        return _parentBindings.findType(name);\n    }\n    if (_contextClass !\u003d null) {\n        Class\u003c?\u003e enclosing \u003d _contextClass.getEnclosingClass();\n        if (enclosing !\u003d null) {\n            if (!Modifier.isStatic(_contextClass.getModifiers())) {\n                return UNBOUND;\n            }\n        }\n    }\n    String className;\n    if (_contextClass !\u003d null) {\n        className \u003d _contextClass.getName();\n    } else if (_contextType !\u003d null) {\n        className \u003d _contextType.toString();\n    } else {\n        className \u003d \"UNKNOWN\";\n    }\n    throw new IllegalArgumentException(\"Type variable \u0027\" + name + \"\u0027 can not be resolved (with context of class \" + className + \")\");\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java",
      "functionStartLine": 135,
      "functionName": "findType",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}