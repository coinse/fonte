{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicDeserializerFactory.java",
  "functionName": "_handleSingleArgumentConstructor",
  "functionId": "_handleSingleArgumentConstructor___ctxt-DeserializationContext__beanDesc-BeanDescription__vchecker-VisibilityChecker__?____intr-AnnotationIntrospector__creators-CreatorCollector__ctor-AnnotatedConstructor__isCreator-boolean__isVisible-boolean",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 545,
  "functionEndLine": 589,
  "numCommitsSeen": 392,
  "timeTaken": 9022,
  "changeHistory": [
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
    "c717c2ff7ef92ef1c5a4e6970408efec1074b546",
    "cc9623ef7c2e9d48102558b283d5930eb03e9f73",
    "41484009964b69f81c91defe22b970f8f2dc5cd5",
    "0cdf42fe5ac175b1b852e735a3265588919ffe32",
    "1488cef12ee88e25dd0161f1b85c552a32775778",
    "970b895f59d5934258b2bac34477a9679477209b",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd",
    "ce32b8a2e134d6a0590c56ee2d6798e2eeb8bb25",
    "1dcce980954c9acef708aa9a0a128f04564bdd25",
    "b37ff33bbc7885f21a208bee4f42126468f55d41",
    "28bde0726d83be7f70ca4586abee6f536bfc8885",
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
    "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa": "Ybodychange",
    "c717c2ff7ef92ef1c5a4e6970408efec1074b546": "Ymultichange(Yparameterchange,Ybodychange)",
    "cc9623ef7c2e9d48102558b283d5930eb03e9f73": "Ybodychange",
    "41484009964b69f81c91defe22b970f8f2dc5cd5": "Ybodychange",
    "0cdf42fe5ac175b1b852e735a3265588919ffe32": "Ybodychange",
    "1488cef12ee88e25dd0161f1b85c552a32775778": "Ymultichange(Yparameterchange,Ybodychange)",
    "970b895f59d5934258b2bac34477a9679477209b": "Ymultichange(Yparameterchange,Ybodychange)",
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": "Ybodychange",
    "ce32b8a2e134d6a0590c56ee2d6798e2eeb8bb25": "Ymovefromfile",
    "1dcce980954c9acef708aa9a0a128f04564bdd25": "Ybodychange",
    "b37ff33bbc7885f21a208bee4f42126468f55d41": "Ymultichange(Yparameterchange,Ybodychange)",
    "28bde0726d83be7f70ca4586abee6f536bfc8885": "Yparameterchange",
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026": "Ybodychange",
    "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "257ae1c7a88c5ccec2882433a39c0df1de2b73aa": {
      "type": "Ybodychange",
      "commitMessage": "Fix #660\n",
      "commitDate": "12/23/14, 3:05 PM",
      "commitName": "257ae1c7a88c5ccec2882433a39c0df1de2b73aa",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "11/19/14, 2:04 PM",
      "commitNameOld": "d4c6f36d8f6c25261f7dea699d57cd64b6d2b67e",
      "commitAuthorOld": "Cowtowncoder",
      "daysBetweenCommits": 34.04,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class || type \u003d\u003d CharSequence.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor, isCreator);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor, isCreator);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor, isCreator);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor, isCreator);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor, isCreator);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, isCreator, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 539,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,38 +1,38 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n-    if (type \u003d\u003d String.class) {\n+    if (type \u003d\u003d String.class || type \u003d\u003d CharSequence.class) {\n         if (isCreator || isVisible) {\n-            creators.addStringCreator(ctor);\n+            creators.addStringCreator(ctor, isCreator);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n-            creators.addIntCreator(ctor);\n+            creators.addIntCreator(ctor, isCreator);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n-            creators.addLongCreator(ctor);\n+            creators.addLongCreator(ctor, isCreator);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n-            creators.addDoubleCreator(ctor);\n+            creators.addDoubleCreator(ctor, isCreator);\n         }\n         return true;\n     }\n     if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n         if (isCreator || isVisible) {\n-            creators.addBooleanCreator(ctor);\n+            creators.addBooleanCreator(ctor, isCreator);\n         }\n         return true;\n     }\n     if (isCreator) {\n-        creators.addDelegatingCreator(ctor, null);\n+        creators.addDelegatingCreator(ctor, isCreator, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c717c2ff7ef92ef1c5a4e6970408efec1074b546": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix #556 (minor regression during 2.5.0-SNAPSHOT, not included in any of released versions)\n",
      "commitDate": "9/25/14, 4:52 PM",
      "commitName": "c717c2ff7ef92ef1c5a4e6970408efec1074b546",
      "commitAuthor": "Cowtowncoder",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix #556 (minor regression during 2.5.0-SNAPSHOT, not included in any of released versions)\n",
          "commitDate": "9/25/14, 4:52 PM",
          "commitName": "c717c2ff7ef92ef1c5a4e6970408efec1074b546",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "9/23/14, 10:11 PM",
          "commitNameOld": "09ad6820e892387852c46958e03eaa1d3f3b10f6",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.78,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 511,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,49 +1,38 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n-    AnnotatedParameter param \u003d ctor.getParameter(0);\n-    if (name \u003d\u003d null) {\n-        name \u003d _findExplicitParamName(param, intr);\n-    }\n-    Object injectId \u003d intr.findInjectableValueId(param);\n-    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n-        CreatorProperty[] properties \u003d new CreatorProperty[1];\n-        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n-        creators.addPropertyCreator(ctor, properties);\n-        return true;\n-    }\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n         if (isCreator || isVisible) {\n             creators.addBooleanCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean, name-PropertyName]",
            "newValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix #556 (minor regression during 2.5.0-SNAPSHOT, not included in any of released versions)\n",
          "commitDate": "9/25/14, 4:52 PM",
          "commitName": "c717c2ff7ef92ef1c5a4e6970408efec1074b546",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "9/23/14, 10:11 PM",
          "commitNameOld": "09ad6820e892387852c46958e03eaa1d3f3b10f6",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.78,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 511,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,49 +1,38 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n-    AnnotatedParameter param \u003d ctor.getParameter(0);\n-    if (name \u003d\u003d null) {\n-        name \u003d _findExplicitParamName(param, intr);\n-    }\n-    Object injectId \u003d intr.findInjectableValueId(param);\n-    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n-        CreatorProperty[] properties \u003d new CreatorProperty[1];\n-        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n-        creators.addPropertyCreator(ctor, properties);\n-        return true;\n-    }\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n         if (isCreator || isVisible) {\n             creators.addBooleanCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "cc9623ef7c2e9d48102558b283d5930eb03e9f73": {
      "type": "Ybodychange",
      "commitMessage": "Change master to be 2.5.0-SNAPSHOT\n",
      "commitDate": "8/13/14, 12:38 PM",
      "commitName": "cc9623ef7c2e9d48102558b283d5930eb03e9f73",
      "commitAuthor": "Tatu",
      "commitDateOld": "6/17/14, 7:01 PM",
      "commitNameOld": "be05bb58d84b7d33c230ff838db842f5e4f96144",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 56.73,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        name \u003d _findExplicitParamName(param, intr);\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 471,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,49 +1,49 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     if (name \u003d\u003d null) {\n-        name \u003d _findParamName(param, intr);\n+        name \u003d _findExplicitParamName(param, intr);\n     }\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n         if (isCreator || isVisible) {\n             creators.addBooleanCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "41484009964b69f81c91defe22b970f8f2dc5cd5": {
      "type": "Ybodychange",
      "commitMessage": "Minor fixes to parameter name discovery/introspection\n",
      "commitDate": "4/14/14, 10:19 PM",
      "commitName": "41484009964b69f81c91defe22b970f8f2dc5cd5",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/12/14, 12:57 PM",
      "commitNameOld": "ab53ab46d77ca191bdc9e418efd44548ead764fb",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 2.39,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        name \u003d _findParamName(param, intr);\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 470,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,49 +1,49 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     if (name \u003d\u003d null) {\n-        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n+        name \u003d _findParamName(param, intr);\n     }\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n         if (isCreator || isVisible) {\n             creators.addBooleanCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0cdf42fe5ac175b1b852e735a3265588919ffe32": {
      "type": "Ybodychange",
      "commitMessage": "Enable (and test) single-arg boolean constructors\n",
      "commitDate": "2/11/14, 8:11 PM",
      "commitName": "0cdf42fe5ac175b1b852e735a3265588919ffe32",
      "commitAuthor": "Christopher Currie",
      "commitDateOld": "1/6/14, 1:51 AM",
      "commitNameOld": "d1a15ad7b211276b5b8121e5d0901504f5e8781b",
      "commitAuthorOld": "BokoEnos",
      "daysBetweenCommits": 36.76,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n        if (isCreator || isVisible) {\n            creators.addBooleanCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 470,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,43 +1,49 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     if (name \u003d\u003d null) {\n         name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n     }\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n+    if (type \u003d\u003d boolean.class || type \u003d\u003d Boolean.class) {\n+        if (isCreator || isVisible) {\n+            creators.addBooleanCreator(ctor);\n+        }\n+        return true;\n+    }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1488cef12ee88e25dd0161f1b85c552a32775778": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Completing conversion to using PropertyName instead of String in most parts of API\n",
      "commitDate": "7/26/13, 2:42 PM",
      "commitName": "1488cef12ee88e25dd0161f1b85c552a32775778",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Completing conversion to using PropertyName instead of String in most parts of API\n",
          "commitDate": "7/26/13, 2:42 PM",
          "commitName": "1488cef12ee88e25dd0161f1b85c552a32775778",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "7/25/13, 10:42 PM",
          "commitNameOld": "fcbbccccff541e3492ebf5425ed5223581f77641",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.67,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 469,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,44 +1,43 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     if (name \u003d\u003d null) {\n-        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n-        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n     }\n     Object injectId \u003d intr.findInjectableValueId(param);\n-    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n+    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean, name-String]",
            "newValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean, name-PropertyName]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Completing conversion to using PropertyName instead of String in most parts of API\n",
          "commitDate": "7/26/13, 2:42 PM",
          "commitName": "1488cef12ee88e25dd0161f1b85c552a32775778",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "7/25/13, 10:42 PM",
          "commitNameOld": "fcbbccccff541e3492ebf5425ed5223581f77641",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.67,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 469,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,44 +1,43 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, PropertyName name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     if (name \u003d\u003d null) {\n-        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n-        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+        name \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n     }\n     Object injectId \u003d intr.findInjectableValueId(param);\n-    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n+    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.hasSimpleName())) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "970b895f59d5934258b2bac34477a9679477209b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Honor detected constructor properties/names\n",
      "commitDate": "3/17/13, 11:18 PM",
      "commitName": "970b895f59d5934258b2bac34477a9679477209b",
      "commitAuthor": "Christopher Currie",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Honor detected constructor properties/names\n",
          "commitDate": "3/17/13, 11:18 PM",
          "commitName": "970b895f59d5934258b2bac34477a9679477209b",
          "commitAuthor": "Christopher Currie",
          "commitDateOld": "3/13/13, 3:56 PM",
          "commitNameOld": "8d53c22404fbd066cf3f81d1248e188dba5caebd",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 4.31,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 463,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,42 +1,44 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n-    PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n-    String name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+    if (name \u003d\u003d null) {\n+        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n+        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+    }\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]",
            "newValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean, name-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Honor detected constructor properties/names\n",
          "commitDate": "3/17/13, 11:18 PM",
          "commitName": "970b895f59d5934258b2bac34477a9679477209b",
          "commitAuthor": "Christopher Currie",
          "commitDateOld": "3/13/13, 3:56 PM",
          "commitNameOld": "8d53c22404fbd066cf3f81d1248e188dba5caebd",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 4.31,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    if (name \u003d\u003d null) {\n        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    }\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
          "functionStartLine": 463,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,42 +1,44 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible, String name) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n-    PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n-    String name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+    if (name \u003d\u003d null) {\n+        PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n+        name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n+    }\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd": {
      "type": "Ybodychange",
      "commitMessage": "Complete [Issue#69] implementation\n",
      "commitDate": "9/4/12, 10:10 PM",
      "commitName": "ab374c7a5ce68b8248a0bcf81e96e083585aa4dd",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "8/17/12, 2:59 PM",
      "commitNameOld": "bc6485776be5c45a52e4b07459caf3b9a78c80d3",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 18.3,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n    String name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 461,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,41 +1,42 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n-    String name \u003d intr.findDeserializationName(param);\n+    PropertyName pn \u003d (param \u003d\u003d null) ? null : intr.findNameForDeserialization(param);\n+    String name \u003d (pn \u003d\u003d null) ? null : pn.getSimpleName();\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ce32b8a2e134d6a0590c56ee2d6798e2eeb8bb25": {
      "type": "Ymovefromfile",
      "commitMessage": "Further refactoring for DeserializerFactories\n",
      "commitDate": "1/26/12, 1:22 PM",
      "commitName": "ce32b8a2e134d6a0590c56ee2d6798e2eeb8bb25",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/26/12, 1:07 PM",
      "commitNameOld": "9db4d99c6c425b779f1bb79ad4db667702657600",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
      "functionStartLine": 533,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "oldMethodName": "_handleSingleArgumentConstructor",
        "newMethodName": "_handleSingleArgumentConstructor"
      }
    },
    "1dcce980954c9acef708aa9a0a128f04564bdd25": {
      "type": "Ybodychange",
      "commitMessage": "Bit more renaming for consistency\n",
      "commitDate": "1/26/12, 12:33 PM",
      "commitName": "1dcce980954c9acef708aa9a0a128f04564bdd25",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/26/12, 12:01 PM",
      "commitNameOld": "5d8d3d2fb9b6f2fd86fdde71bf1c38e7d5bc2455",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 678,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,41 +1,41 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n-    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n+    Class\u003c?\u003e type \u003d ctor.getRawParameterType(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b37ff33bbc7885f21a208bee4f42126468f55d41": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
      "commitDate": "1/24/12, 4:19 PM",
      "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
      "commitAuthor": "Tatu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
          "commitDate": "1/24/12, 4:19 PM",
          "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 2:46 PM",
          "commitNameOld": "bf355caa0821e58968df3bf6c12f612639224e47",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 789,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,41 +1,41 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n-        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n+        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-DeserializationConfig, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]",
            "newValue": "[ctxt-DeserializationContext, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Yet more refactoring, trying to be able to pass DeserializationContext to ContextualDeserializer\n",
          "commitDate": "1/24/12, 4:19 PM",
          "commitName": "b37ff33bbc7885f21a208bee4f42126468f55d41",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 2:46 PM",
          "commitNameOld": "bf355caa0821e58968df3bf6c12f612639224e47",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "functionStartLine": 789,
          "functionName": "_handleSingleArgumentConstructor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,41 +1,41 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n-        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n+        properties[0] \u003d constructCreatorProperty(ctxt, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "28bde0726d83be7f70ca4586abee6f536bfc8885": {
      "type": "Yparameterchange",
      "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
      "commitDate": "1/22/12, 10:57 PM",
      "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/19/12, 3:58 PM",
      "commitNameOld": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 3.29,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 811,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,41 +1,41 @@\n-protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, beanDesc-BasicBeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]",
        "newValue": "[config-DeserializationConfig, beanDesc-BeanDescription, vchecker-VisibilityChecker\u003c?\u003e, intr-AnnotationIntrospector, creators-CreatorCollector, ctor-AnnotatedConstructor, isCreator-boolean, isVisible-boolean]"
      }
    },
    "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026": {
      "type": "Ybodychange",
      "commitMessage": "Fix [JACKSON-712], inability to use Injectables with delegation constructor\n",
      "commitDate": "1/19/12, 3:58 PM",
      "commitName": "9e6c28f2ec520cc669e05c6d2f13b4486fa3f026",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/19/12, 2:36 PM",
      "commitNameOld": "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor, null);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 812,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,41 +1,41 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n     String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n-        creators.addDelegatingCreator(ctor);\n+        creators.addDelegatingCreator(ctor, null);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5": {
      "type": "Ybodychange",
      "commitMessage": "Renaming of AnnotationIntrospector methods to be (more) consistent\n",
      "commitDate": "1/19/12, 2:36 PM",
      "commitName": "de0c33f113d1ba64cec81ba118dc1c84d3cd70a5",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/19/12, 12:31 PM",
      "commitNameOld": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findDeserializationName(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 819,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,41 +1,41 @@\n protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n     AnnotatedParameter param \u003d ctor.getParameter(0);\n-    String name \u003d intr.findPropertyNameForParam(param);\n+    String name \u003d intr.findDeserializationName(param);\n     Object injectId \u003d intr.findInjectableValueId(param);\n     if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n         CreatorProperty[] properties \u003d new CreatorProperty[1];\n         properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n         creators.addPropertyCreator(ctor, properties);\n         return true;\n     }\n     Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n     if (type \u003d\u003d String.class) {\n         if (isCreator || isVisible) {\n             creators.addStringCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n         if (isCreator || isVisible) {\n             creators.addIntCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n         if (isCreator || isVisible) {\n             creators.addLongCreator(ctor);\n         }\n         return true;\n     }\n     if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n         if (isCreator || isVisible) {\n             creators.addDoubleCreator(ctor);\n         }\n         return true;\n     }\n     if (isCreator) {\n         creators.addDelegatingCreator(ctor);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,41 @@\n+protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n+    AnnotatedParameter param \u003d ctor.getParameter(0);\n+    String name \u003d intr.findPropertyNameForParam(param);\n+    Object injectId \u003d intr.findInjectableValueId(param);\n+    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n+        CreatorProperty[] properties \u003d new CreatorProperty[1];\n+        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n+        creators.addPropertyCreator(ctor, properties);\n+        return true;\n+    }\n+    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n+    if (type \u003d\u003d String.class) {\n+        if (isCreator || isVisible) {\n+            creators.addStringCreator(ctor);\n+        }\n+        return true;\n+    }\n+    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n+        if (isCreator || isVisible) {\n+            creators.addIntCreator(ctor);\n+        }\n+        return true;\n+    }\n+    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n+        if (isCreator || isVisible) {\n+            creators.addLongCreator(ctor);\n+        }\n+        return true;\n+    }\n+    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n+        if (isCreator || isVisible) {\n+            creators.addDoubleCreator(ctor);\n+        }\n+        return true;\n+    }\n+    if (isCreator) {\n+        creators.addDelegatingCreator(ctor);\n+        return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected boolean _handleSingleArgumentConstructor(DeserializationConfig config, BasicBeanDescription beanDesc, VisibilityChecker\u003c?\u003e vchecker, AnnotationIntrospector intr, CreatorCollector creators, AnnotatedConstructor ctor, boolean isCreator, boolean isVisible) throws JsonMappingException {\n    AnnotatedParameter param \u003d ctor.getParameter(0);\n    String name \u003d intr.findPropertyNameForParam(param);\n    Object injectId \u003d intr.findInjectableValueId(param);\n    if ((injectId !\u003d null) || (name !\u003d null \u0026\u0026 name.length() \u003e 0)) {\n        CreatorProperty[] properties \u003d new CreatorProperty[1];\n        properties[0] \u003d constructCreatorProperty(config, beanDesc, name, 0, param, injectId);\n        creators.addPropertyCreator(ctor, properties);\n        return true;\n    }\n    Class\u003c?\u003e type \u003d ctor.getParameterClass(0);\n    if (type \u003d\u003d String.class) {\n        if (isCreator || isVisible) {\n            creators.addStringCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d int.class || type \u003d\u003d Integer.class) {\n        if (isCreator || isVisible) {\n            creators.addIntCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d long.class || type \u003d\u003d Long.class) {\n        if (isCreator || isVisible) {\n            creators.addLongCreator(ctor);\n        }\n        return true;\n    }\n    if (type \u003d\u003d double.class || type \u003d\u003d Double.class) {\n        if (isCreator || isVisible) {\n            creators.addDoubleCreator(ctor);\n        }\n        return true;\n    }\n    if (isCreator) {\n        creators.addDelegatingCreator(ctor);\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "functionStartLine": 862,
      "functionName": "_handleSingleArgumentConstructor",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}