{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StdDeserializer.java",
  "functionName": "findDeserializer",
  "functionId": "findDeserializer___ctxt-DeserializationContext__type-JavaType__property-BeanProperty",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
  "functionAnnotation": "",
  "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
  "functionStartLine": 878,
  "functionEndLine": 883,
  "numCommitsSeen": 65,
  "timeTaken": 2345,
  "changeHistory": [
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
    "53fb8522b402a409139175cbf867afa924e549f5",
    "9e5042210349cbdac5b55b220fed7962fcaa63be",
    "e8dc60358d2ebd71948ba261cb66146695871304",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce": "Ybodychange",
    "53fb8522b402a409139175cbf867afa924e549f5": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "9e5042210349cbdac5b55b220fed7962fcaa63be": "Yparameterchange",
    "e8dc60358d2ebd71948ba261cb66146695871304": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce": {
      "type": "Ybodychange",
      "commitMessage": "More elimination of BeanProperty passing, getting close: one new (transient) unit test failure to fix\n",
      "commitDate": "1/31/12, 12:45 PM",
      "commitName": "c3a73d02ac74b9f0011b2fb8c5f4a764344a60ce",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 1:27 PM",
      "commitNameOld": "f0b28a96644b3dc22c997a05975de335dfed0418",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 6.97,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n    return ctxt.findContextualValueDeserializer(type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
      "functionStartLine": 608,
      "functionName": "findDeserializer",
      "functionAnnotation": "",
      "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
      "diff": "@@ -1,3 +1,3 @@\n protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n-    return ctxt.findValueDeserializer(type, property);\n+    return ctxt.findContextualValueDeserializer(type, property);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "53fb8522b402a409139175cbf867afa924e549f5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
      "commitDate": "1/24/12, 1:02 PM",
      "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
      "commitAuthor": "Tatu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
          "commitDate": "1/24/12, 1:02 PM",
          "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 11:23 AM",
          "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n    return ctxt.findValueDeserializer(type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
          "functionStartLine": 605,
          "functionName": "findDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
          "diff": "@@ -1,3 +1,3 @@\n-protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerCache provider, JavaType type, BeanProperty property) throws JsonMappingException {\n-    return provider.findValueDeserializer(config, type, property);\n+protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n+    return ctxt.findValueDeserializer(type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-DeserializationConfig, provider-DeserializerCache, type-JavaType, property-BeanProperty]",
            "newValue": "[ctxt-DeserializationContext, type-JavaType, property-BeanProperty]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
          "commitDate": "1/24/12, 1:02 PM",
          "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 11:23 AM",
          "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n    return ctxt.findValueDeserializer(type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
          "functionStartLine": 605,
          "functionName": "findDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
          "diff": "@@ -1,3 +1,3 @@\n-protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerCache provider, JavaType type, BeanProperty property) throws JsonMappingException {\n-    return provider.findValueDeserializer(config, type, property);\n+protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n+    return ctxt.findValueDeserializer(type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactoring: make all structured standard deserializers implement proper resolve(), instead of resolving things on construction\n",
          "commitDate": "1/24/12, 1:02 PM",
          "commitName": "53fb8522b402a409139175cbf867afa924e549f5",
          "commitAuthor": "Tatu",
          "commitDateOld": "1/24/12, 11:23 AM",
          "commitNameOld": "9e5042210349cbdac5b55b220fed7962fcaa63be",
          "commitAuthorOld": "Tatu",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n    return ctxt.findValueDeserializer(type, property);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
          "functionStartLine": 605,
          "functionName": "findDeserializer",
          "functionAnnotation": "",
          "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
          "diff": "@@ -1,3 +1,3 @@\n-protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerCache provider, JavaType type, BeanProperty property) throws JsonMappingException {\n-    return provider.findValueDeserializer(config, type, property);\n+protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationContext ctxt, JavaType type, BeanProperty property) throws JsonMappingException {\n+    return ctxt.findValueDeserializer(type, property);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param config Active deserialization configuration\n@param provider Deserializer provider to use for actually finding deserializer(s)\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
            "newValue": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n"
          }
        }
      ]
    },
    "9e5042210349cbdac5b55b220fed7962fcaa63be": {
      "type": "Yparameterchange",
      "commitMessage": "Deser refactoring, renaming\n",
      "commitDate": "1/24/12, 11:23 AM",
      "commitName": "9e5042210349cbdac5b55b220fed7962fcaa63be",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 10:45 AM",
      "commitNameOld": "6e6d8c63e7cbfb84729e287e820f9db195c2008f",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerCache provider, JavaType type, BeanProperty property) throws JsonMappingException {\n    return provider.findValueDeserializer(config, type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
      "functionStartLine": 608,
      "functionName": "findDeserializer",
      "functionAnnotation": "",
      "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param config Active deserialization configuration\n@param provider Deserializer provider to use for actually finding deserializer(s)\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
      "diff": "@@ -1,3 +1,3 @@\n-protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerProvider provider, JavaType type, BeanProperty property) throws JsonMappingException {\n+protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerCache provider, JavaType type, BeanProperty property) throws JsonMappingException {\n     return provider.findValueDeserializer(config, type, property);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-DeserializationConfig, provider-DeserializerProvider, type-JavaType, property-BeanProperty]",
        "newValue": "[config-DeserializationConfig, provider-DeserializerCache, type-JavaType, property-BeanProperty]"
      }
    },
    "e8dc60358d2ebd71948ba261cb66146695871304": {
      "type": "Ybodychange",
      "commitMessage": "cleanup\n",
      "commitDate": "1/23/12, 10:43 PM",
      "commitName": "e8dc60358d2ebd71948ba261cb66146695871304",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/11/12, 3:42 PM",
      "commitNameOld": "0aef72dd7e0d05c6583e24bf079297441e700a9d",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 12.29,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerProvider provider, JavaType type, BeanProperty property) throws JsonMappingException {\n    return provider.findValueDeserializer(config, type, property);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
      "functionStartLine": 607,
      "functionName": "findDeserializer",
      "functionAnnotation": "",
      "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param config Active deserialization configuration\n@param provider Deserializer provider to use for actually finding deserializer(s)\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n",
      "diff": "@@ -1,4 +1,3 @@\n protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerProvider provider, JavaType type, BeanProperty property) throws JsonMappingException {\n-    JsonDeserializer\u003cObject\u003e deser \u003d provider.findValueDeserializer(config, type, property);\n-    return deser;\n+    return provider.findValueDeserializer(config, type, property);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,4 @@\n+protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerProvider provider, JavaType type, BeanProperty property) throws JsonMappingException {\n+    JsonDeserializer\u003cObject\u003e deser \u003d provider.findValueDeserializer(config, type, property);\n+    return deser;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected JsonDeserializer\u003cObject\u003e findDeserializer(DeserializationConfig config, DeserializerProvider provider, JavaType type, BeanProperty property) throws JsonMappingException {\n    JsonDeserializer\u003cObject\u003e deser \u003d provider.findValueDeserializer(config, type, property);\n    return deser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
      "functionStartLine": 593,
      "functionName": "findDeserializer",
      "functionAnnotation": "",
      "functionDoc": "Helper method used to locate deserializers for properties the\ntype this deserializer handles contains (usually for properties of\nbean types)\n\n@param config Active deserialization configuration\n@param provider Deserializer provider to use for actually finding deserializer(s)\n@param type Type of property to deserialize\n@param property Actual property object (field, method, constuctor parameter) used\n    for passing deserialized values; provided so deserializer can be contextualized if necessary (since 1.7)\n"
    }
  }
}