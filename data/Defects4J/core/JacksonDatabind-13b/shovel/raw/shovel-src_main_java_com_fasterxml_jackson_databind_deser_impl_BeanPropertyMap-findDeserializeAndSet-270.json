{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-13b",
  "repositoryPath": "/tmp/JacksonDatabind-13b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanPropertyMap.java",
  "functionName": "findDeserializeAndSet",
  "functionId": "findDeserializeAndSet___p-JsonParser__ctxt-DeserializationContext__bean-Object__key-String",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
  "functionAnnotation": "",
  "functionDoc": "Convenience method that tries to find property with given name, and\nif it is found, call {@link SettableBeanProperty#deserializeAndSet}\non it, and return true; or, if not found, return false.\nNote, too, that if deserialization is attempted, possible exceptions\nare wrapped if and as necessary, so caller need not handle those.\n\n@since 2.5\n",
  "functionStartLine": 270,
  "functionEndLine": 292,
  "numCommitsSeen": 19,
  "timeTaken": 754,
  "changeHistory": [
    "b478c792e0e68039224109129350dd71f768ddc1",
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
    "24a10cc4aba626a137f776f282ab37625ece5f74"
  ],
  "changeHistoryShort": {
    "b478c792e0e68039224109129350dd71f768ddc1": "Ymultichange(Ybodychange,Ydocchange)",
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": "Ybodychange",
    "24a10cc4aba626a137f776f282ab37625ece5f74": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b478c792e0e68039224109129350dd71f768ddc1": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Still tweaking bean property handling for deser\n",
      "commitDate": "12/13/14, 3:20 PM",
      "commitName": "b478c792e0e68039224109129350dd71f768ddc1",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Still tweaking bean property handling for deser\n",
          "commitDate": "12/13/14, 3:20 PM",
          "commitName": "b478c792e0e68039224109129350dd71f768ddc1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/12/14, 9:27 PM",
          "commitNameOld": "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.75,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n    if (_caseInsensitive) {\n        key \u003d key.toLowerCase();\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return false;\n    }\n    if (bucket.key \u003d\u003d key) {\n        try {\n            bucket.value.deserializeAndSet(p, ctxt, bean);\n        } catch (Exception e) {\n            wrapAndThrow(e, bean, key, ctxt);\n        }\n        return true;\n    }\n    return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
          "functionStartLine": 270,
          "functionName": "findDeserializeAndSet",
          "functionAnnotation": "",
          "functionDoc": "Convenience method that tries to find property with given name, and\nif it is found, call {@link SettableBeanProperty#deserializeAndSet}\non it, and return true; or, if not found, return false.\nNote, too, that if deserialization is attempted, possible exceptions\nare wrapped if and as necessary, so caller need not handle those.\n\n@since 2.5\n",
          "diff": "@@ -1,15 +1,19 @@\n public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n     if (_caseInsensitive) {\n         key \u003d key.toLowerCase();\n     }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return false;\n     }\n     if (bucket.key \u003d\u003d key) {\n-        bucket.value.deserializeAndSet(p, ctxt, bean);\n+        try {\n+            bucket.value.deserializeAndSet(p, ctxt, bean);\n+        } catch (Exception e) {\n+            wrapAndThrow(e, bean, key, ctxt);\n+        }\n         return true;\n     }\n     return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Still tweaking bean property handling for deser\n",
          "commitDate": "12/13/14, 3:20 PM",
          "commitName": "b478c792e0e68039224109129350dd71f768ddc1",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/12/14, 9:27 PM",
          "commitNameOld": "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.75,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n    if (_caseInsensitive) {\n        key \u003d key.toLowerCase();\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return false;\n    }\n    if (bucket.key \u003d\u003d key) {\n        try {\n            bucket.value.deserializeAndSet(p, ctxt, bean);\n        } catch (Exception e) {\n            wrapAndThrow(e, bean, key, ctxt);\n        }\n        return true;\n    }\n    return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
          "functionStartLine": 270,
          "functionName": "findDeserializeAndSet",
          "functionAnnotation": "",
          "functionDoc": "Convenience method that tries to find property with given name, and\nif it is found, call {@link SettableBeanProperty#deserializeAndSet}\non it, and return true; or, if not found, return false.\nNote, too, that if deserialization is attempted, possible exceptions\nare wrapped if and as necessary, so caller need not handle those.\n\n@since 2.5\n",
          "diff": "@@ -1,15 +1,19 @@\n public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n     if (_caseInsensitive) {\n         key \u003d key.toLowerCase();\n     }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return false;\n     }\n     if (bucket.key \u003d\u003d key) {\n-        bucket.value.deserializeAndSet(p, ctxt, bean);\n+        try {\n+            bucket.value.deserializeAndSet(p, ctxt, bean);\n+        } catch (Exception e) {\n+            wrapAndThrow(e, bean, key, ctxt);\n+        }\n         return true;\n     }\n     return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@since 2.5\n",
            "newValue": "Convenience method that tries to find property with given name, and\nif it is found, call {@link SettableBeanProperty#deserializeAndSet}\non it, and return true; or, if not found, return false.\nNote, too, that if deserialization is attempted, possible exceptions\nare wrapped if and as necessary, so caller need not handle those.\n\n@since 2.5\n"
          }
        }
      ]
    },
    "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30": {
      "type": "Ybodychange",
      "commitMessage": "Try to streamline property handling for deser\n",
      "commitDate": "12/12/14, 9:27 PM",
      "commitName": "e440b71e95ae8f79f95b14bbd2e4305ed77b2d30",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/11/14, 7:20 PM",
      "commitNameOld": "9144f6626adb293dc95f15e522596f27b3a52557",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n    if (_caseInsensitive) {\n        key \u003d key.toLowerCase();\n    }\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return false;\n    }\n    if (bucket.key \u003d\u003d key) {\n        bucket.value.deserializeAndSet(p, ctxt, bean);\n        return true;\n    }\n    return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 260,
      "functionName": "findDeserializeAndSet",
      "functionAnnotation": "",
      "functionDoc": "\n@since 2.5\n",
      "diff": "@@ -1,12 +1,15 @@\n public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n+    if (_caseInsensitive) {\n+        key \u003d key.toLowerCase();\n+    }\n     int index \u003d key.hashCode() \u0026 _hashMask;\n     Bucket bucket \u003d _buckets[index];\n     if (bucket \u003d\u003d null) {\n         return false;\n     }\n     if (bucket.key \u003d\u003d key) {\n         bucket.value.deserializeAndSet(p, ctxt, bean);\n         return true;\n     }\n     return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "24a10cc4aba626a137f776f282ab37625ece5f74": {
      "type": "Yintroduced",
      "commitMessage": "small performance optimization\n",
      "commitDate": "12/11/14, 2:05 PM",
      "commitName": "24a10cc4aba626a137f776f282ab37625ece5f74",
      "commitAuthor": "Cowtowncoder",
      "diff": "@@ -0,0 +1,12 @@\n+public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n+    int index \u003d key.hashCode() \u0026 _hashMask;\n+    Bucket bucket \u003d _buckets[index];\n+    if (bucket \u003d\u003d null) {\n+        return false;\n+    }\n+    if (bucket.key \u003d\u003d key) {\n+        bucket.value.deserializeAndSet(p, ctxt, bean);\n+        return true;\n+    }\n+    return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key) throws IOException {\n    int index \u003d key.hashCode() \u0026 _hashMask;\n    Bucket bucket \u003d _buckets[index];\n    if (bucket \u003d\u003d null) {\n        return false;\n    }\n    if (bucket.key \u003d\u003d key) {\n        bucket.value.deserializeAndSet(p, ctxt, bean);\n        return true;\n    }\n    return _findDeserializeAndSet2(p, ctxt, bean, key, index);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
      "functionStartLine": 244,
      "functionName": "findDeserializeAndSet",
      "functionAnnotation": "",
      "functionDoc": "\n@since 2.5\n"
    }
  }
}