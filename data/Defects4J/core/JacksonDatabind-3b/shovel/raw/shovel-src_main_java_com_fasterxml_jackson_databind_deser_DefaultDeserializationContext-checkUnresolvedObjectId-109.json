{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-3b",
  "repositoryPath": "/tmp/JacksonDatabind-3b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultDeserializationContext.java",
  "functionName": "checkUnresolvedObjectId",
  "functionId": "checkUnresolvedObjectId",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 109,
  "functionEndLine": 131,
  "numCommitsSeen": 17,
  "timeTaken": 1028,
  "changeHistory": [
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d",
    "d75f2e7976d1ee5e3088ba87440ba25feec304b1",
    "647cb683bf03067f82719cf74190f741270fcb87",
    "096e02bf4a1905b58f1692e74a7e6d7f7f1bc71e"
  ],
  "changeHistoryShort": {
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d": "Ybodychange",
    "d75f2e7976d1ee5e3088ba87440ba25feec304b1": "Ybodychange",
    "647cb683bf03067f82719cf74190f741270fcb87": "Ybodychange",
    "096e02bf4a1905b58f1692e74a7e6d7f7f1bc71e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d": {
      "type": "Ybodychange",
      "commitMessage": "Implementation of custom object id resolution.\n",
      "commitDate": "2/10/14, 7:59 AM",
      "commitName": "184cae3c98f8af8813afebe875b5a9bc2b2bbe4d",
      "commitAuthor": "Pascal Gélinas",
      "commitDateOld": "1/13/14, 10:25 AM",
      "commitNameOld": "d75f2e7976d1ee5e3088ba87440ba25feec304b1",
      "commitAuthorOld": "Pascal Gélinas",
      "daysBetweenCommits": 27.9,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n    if (_objectIds \u003d\u003d null) {\n        return;\n    }\n    UnresolvedForwardReference exception \u003d null;\n    for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n        ReadableObjectId roid \u003d entry.getValue();\n        if (roid.hasReferringProperties()) {\n            if (exception \u003d\u003d null) {\n                exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n            }\n            for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                Referring referring \u003d iterator.next();\n                exception.addUnresolvedId(roid.getKey().key, referring.getBeanType(), referring.getLocation());\n            }\n        }\n    }\n    if (exception !\u003d null) {\n        throw exception;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
      "functionStartLine": 110,
      "functionName": "checkUnresolvedObjectId",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,22 @@\n @Override\n public void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n     if (_objectIds \u003d\u003d null) {\n         return;\n     }\n     UnresolvedForwardReference exception \u003d null;\n     for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n         ReadableObjectId roid \u003d entry.getValue();\n         if (roid.hasReferringProperties()) {\n             if (exception \u003d\u003d null) {\n                 exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n             }\n             for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                 Referring referring \u003d iterator.next();\n-                exception.addUnresolvedId(roid.id, referring.getBeanType(), referring.getLocation());\n+                exception.addUnresolvedId(roid.getKey().key, referring.getBeanType(), referring.getLocation());\n             }\n         }\n     }\n     if (exception !\u003d null) {\n         throw exception;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d75f2e7976d1ee5e3088ba87440ba25feec304b1": {
      "type": "Ybodychange",
      "commitMessage": "Added type information to unresolved forward reference exception thrown at end of processing.\n",
      "commitDate": "1/13/14, 10:25 AM",
      "commitName": "d75f2e7976d1ee5e3088ba87440ba25feec304b1",
      "commitAuthor": "Pascal Gélinas",
      "commitDateOld": "1/13/14, 7:07 AM",
      "commitNameOld": "647cb683bf03067f82719cf74190f741270fcb87",
      "commitAuthorOld": "Pascal Gélinas",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n    if (_objectIds \u003d\u003d null) {\n        return;\n    }\n    UnresolvedForwardReference exception \u003d null;\n    for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n        ReadableObjectId roid \u003d entry.getValue();\n        if (roid.hasReferringProperties()) {\n            if (exception \u003d\u003d null) {\n                exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n            }\n            for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                Referring referring \u003d iterator.next();\n                exception.addUnresolvedId(roid.id, referring.getBeanType(), referring.getLocation());\n            }\n        }\n    }\n    if (exception !\u003d null) {\n        throw exception;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
      "functionStartLine": 79,
      "functionName": "checkUnresolvedObjectId",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,22 @@\n @Override\n public void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n     if (_objectIds \u003d\u003d null) {\n         return;\n     }\n     UnresolvedForwardReference exception \u003d null;\n     for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n         ReadableObjectId roid \u003d entry.getValue();\n         if (roid.hasReferringProperties()) {\n-            IdKey key \u003d entry.getKey();\n             if (exception \u003d\u003d null) {\n                 exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n             }\n             for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                 Referring referring \u003d iterator.next();\n-                exception.addUnresolvedId(roid.id, null, referring.getLocation());\n+                exception.addUnresolvedId(roid.id, referring.getBeanType(), referring.getLocation());\n             }\n         }\n     }\n     if (exception !\u003d null) {\n         throw exception;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "647cb683bf03067f82719cf74190f741270fcb87": {
      "type": "Ybodychange",
      "commitMessage": "Added JsonLocation info in exception thrown for object id check at end of processing.\n",
      "commitDate": "1/13/14, 7:07 AM",
      "commitName": "647cb683bf03067f82719cf74190f741270fcb87",
      "commitAuthor": "Pascal Gélinas",
      "commitDateOld": "1/13/14, 7:07 AM",
      "commitNameOld": "096e02bf4a1905b58f1692e74a7e6d7f7f1bc71e",
      "commitAuthorOld": "Pascal Gélinas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n    if (_objectIds \u003d\u003d null) {\n        return;\n    }\n    UnresolvedForwardReference exception \u003d null;\n    for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n        ReadableObjectId roid \u003d entry.getValue();\n        if (roid.hasReferringProperties()) {\n            IdKey key \u003d entry.getKey();\n            if (exception \u003d\u003d null) {\n                exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n            }\n            for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                Referring referring \u003d iterator.next();\n                exception.addUnresolvedId(roid.id, null, referring.getLocation());\n            }\n        }\n    }\n    if (exception !\u003d null) {\n        throw exception;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
      "functionStartLine": 79,
      "functionName": "checkUnresolvedObjectId",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n @Override\n public void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n     if (_objectIds \u003d\u003d null) {\n         return;\n     }\n     UnresolvedForwardReference exception \u003d null;\n     for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n         ReadableObjectId roid \u003d entry.getValue();\n         if (roid.hasReferringProperties()) {\n             IdKey key \u003d entry.getKey();\n             if (exception \u003d\u003d null) {\n                 exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n             }\n             for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                 Referring referring \u003d iterator.next();\n-                exception.addUnresolvedId(roid.id, null, null);\n+                exception.addUnresolvedId(roid.id, null, referring.getLocation());\n             }\n         }\n     }\n     if (exception !\u003d null) {\n         throw exception;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "096e02bf4a1905b58f1692e74a7e6d7f7f1bc71e": {
      "type": "Yintroduced",
      "commitMessage": "Added check at end of processing to ensure all object ids are resolved.\n",
      "commitDate": "1/13/14, 7:07 AM",
      "commitName": "096e02bf4a1905b58f1692e74a7e6d7f7f1bc71e",
      "commitAuthor": "Pascal Gélinas",
      "diff": "@@ -0,0 +1,23 @@\n+@Override\n+public void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n+    if (_objectIds \u003d\u003d null) {\n+        return;\n+    }\n+    UnresolvedForwardReference exception \u003d null;\n+    for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n+        ReadableObjectId roid \u003d entry.getValue();\n+        if (roid.hasReferringProperties()) {\n+            IdKey key \u003d entry.getKey();\n+            if (exception \u003d\u003d null) {\n+                exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n+            }\n+            for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n+                Referring referring \u003d iterator.next();\n+                exception.addUnresolvedId(roid.id, null, null);\n+            }\n+        }\n+    }\n+    if (exception !\u003d null) {\n+        throw exception;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void checkUnresolvedObjectId() throws UnresolvedForwardReference {\n    if (_objectIds \u003d\u003d null) {\n        return;\n    }\n    UnresolvedForwardReference exception \u003d null;\n    for (Entry\u003cIdKey, ReadableObjectId\u003e entry : _objectIds.entrySet()) {\n        ReadableObjectId roid \u003d entry.getValue();\n        if (roid.hasReferringProperties()) {\n            IdKey key \u003d entry.getKey();\n            if (exception \u003d\u003d null) {\n                exception \u003d new UnresolvedForwardReference(\"Unresolved forward references for: \");\n            }\n            for (Iterator\u003cReferring\u003e iterator \u003d roid.referringProperties(); iterator.hasNext(); ) {\n                Referring referring \u003d iterator.next();\n                exception.addUnresolvedId(roid.id, null, null);\n            }\n        }\n    }\n    if (exception !\u003d null) {\n        throw exception;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
      "functionStartLine": 79,
      "functionName": "checkUnresolvedObjectId",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}