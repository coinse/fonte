{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-1b",
  "repositoryPath": "/tmp/JacksonDatabind-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MapperConfigBase.java",
  "functionName": "findMixInClassFor",
  "functionId": "findMixInClassFor___cls-Class__?__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
  "functionStartLine": 330,
  "functionEndLine": 332,
  "numCommitsSeen": 28,
  "timeTaken": 1426,
  "changeHistory": [
    "9439a310c169a00cd01a4e9b64fb9f5441297b96",
    "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da",
    "5087f976953ef5ce9f0fb8b27c564bca71da9bd2",
    "c733a7f1e744121343da2851df27b581aab79e68",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "9439a310c169a00cd01a4e9b64fb9f5441297b96": "Ymultichange(Yannotationchange,Ydocchange)",
    "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da": "Ymultichange(Yannotationchange,Ydocchange)",
    "5087f976953ef5ce9f0fb8b27c564bca71da9bd2": "Ymovefromfile",
    "c733a7f1e744121343da2851df27b581aab79e68": "Yfilerename",
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9439a310c169a00cd01a4e9b64fb9f5441297b96": {
      "type": "Ymultichange(Yannotationchange,Ydocchange)",
      "commitMessage": "More work on converters for deserialization; now passes 2/6 of new tests. Also adding \u0027DatabindContext\u0027, shared base class for DeserializationContext, SerializerProvider\n",
      "commitDate": "3/2/13, 1:13 PM",
      "commitName": "9439a310c169a00cd01a4e9b64fb9f5441297b96",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yannotationchange",
          "commitMessage": "More work on converters for deserialization; now passes 2/6 of new tests. Also adding \u0027DatabindContext\u0027, shared base class for DeserializationContext, SerializerProvider\n",
          "commitDate": "3/2/13, 1:13 PM",
          "commitName": "9439a310c169a00cd01a4e9b64fb9f5441297b96",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "10/5/12, 5:09 PM",
          "commitNameOld": "f521158c1486b427a0bb584b58333a66c0e9d552",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 147.88,
          "commitsBetweenForRepo": 186,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
          "functionStartLine": 330,
          "functionName": "findMixInClassFor",
          "functionAnnotation": "@Override",
          "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
          "diff": "@@ -1,3 +1,4 @@\n+@Override\n public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n     return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "More work on converters for deserialization; now passes 2/6 of new tests. Also adding \u0027DatabindContext\u0027, shared base class for DeserializationContext, SerializerProvider\n",
          "commitDate": "3/2/13, 1:13 PM",
          "commitName": "9439a310c169a00cd01a4e9b64fb9f5441297b96",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "10/5/12, 5:09 PM",
          "commitNameOld": "f521158c1486b427a0bb584b58333a66c0e9d552",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 147.88,
          "commitsBetweenForRepo": 186,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
          "functionStartLine": 330,
          "functionName": "findMixInClassFor",
          "functionAnnotation": "@Override",
          "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
          "diff": "@@ -1,3 +1,4 @@\n+@Override\n public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n     return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n"
          }
        }
      ]
    },
    "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da": {
      "type": "Ymultichange(Yannotationchange,Ydocchange)",
      "commitMessage": "Changes to make 1.5 compatible against: first, removing @Override from interface impls\n",
      "commitDate": "4/17/12, 7:57 AM",
      "commitName": "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yannotationchange",
          "commitMessage": "Changes to make 1.5 compatible against: first, removing @Override from interface impls\n",
          "commitDate": "4/17/12, 7:57 AM",
          "commitName": "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/23/12, 7:58 PM",
          "commitNameOld": "da637574c4bccc5d5bab3eb2fd4a09e318e35e74",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 53.46,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "actualSource": "public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
          "functionStartLine": 306,
          "functionName": "findMixInClassFor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n     return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": ""
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Changes to make 1.5 compatible against: first, removing @Override from interface impls\n",
          "commitDate": "4/17/12, 7:57 AM",
          "commitName": "f1c79d4a2b5eb0b8ed63c2772cadb322801ce8da",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "2/23/12, 7:58 PM",
          "commitNameOld": "da637574c4bccc5d5bab3eb2fd4a09e318e35e74",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 53.46,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "actualSource": "public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
          "functionStartLine": 306,
          "functionName": "findMixInClassFor",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,3 @@\n-@Override\n public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n     return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
            "newValue": ""
          }
        }
      ]
    },
    "5087f976953ef5ce9f0fb8b27c564bca71da9bd2": {
      "type": "Ymovefromfile",
      "commitMessage": "yet more config clean up (?)\n",
      "commitDate": "1/18/12, 9:36 PM",
      "commitName": "5087f976953ef5ce9f0fb8b27c564bca71da9bd2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/18/12, 8:25 PM",
      "commitNameOld": "c733a7f1e744121343da2851df27b581aab79e68",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
      "functionStartLine": 173,
      "functionName": "findMixInClassFor",
      "functionAnnotation": "@Override",
      "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "oldMethodName": "findMixInClassFor",
        "newMethodName": "findMixInClassFor"
      }
    },
    "c733a7f1e744121343da2851df27b581aab79e68": {
      "type": "Yfilerename",
      "commitMessage": "Yet more config refactoring\n",
      "commitDate": "1/18/12, 8:25 PM",
      "commitName": "c733a7f1e744121343da2851df27b581aab79e68",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/18/12, 8:24 PM",
      "commitNameOld": "4beb90c7e1e42df733c8514ec38395d556c2d574",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
      "functionStartLine": 413,
      "functionName": "findMixInClassFor",
      "functionAnnotation": "@Override",
      "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java"
      }
    },
    "d1e678e660f50c66113da7d03e4ffb52fef45fc0": {
      "type": "Ydocchange",
      "commitMessage": "Last pieces of the first round of refactoring: again compiles, may work\n",
      "commitDate": "12/23/11, 5:38 PM",
      "commitName": "d1e678e660f50c66113da7d03e4ffb52fef45fc0",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/11, 12:31 AM",
      "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
      "functionStartLine": 406,
      "functionName": "findMixInClassFor",
      "functionAnnotation": "@Override",
      "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n\n@since 1.2\n",
        "newValue": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n+    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic final Class\u003c?\u003e findMixInClassFor(Class\u003c?\u003e cls) {\n    return (_mixInAnnotations \u003d\u003d null) ? null : _mixInAnnotations.get(new ClassKey(cls));\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/MapperConfig.java",
      "functionStartLine": 517,
      "functionName": "findMixInClassFor",
      "functionAnnotation": "@Override",
      "functionDoc": "Method that will check if there are \"mix-in\" classes (with mix-in\nannotations) for given class\n\n@since 1.2\n"
    }
  }
}