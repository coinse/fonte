{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-1b",
  "repositoryPath": "/tmp/JacksonDatabind-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectMapper.java",
  "functionName": "_configAndWriteValue",
  "functionId": "_configAndWriteValue___jgen-JsonGenerator__value-Object",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
  "functionAnnotation": "",
  "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
  "functionStartLine": 2703,
  "functionEndLine": 2731,
  "numCommitsSeen": 107,
  "timeTaken": 8574,
  "changeHistory": [
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
    "6679caeac9198802d271f8659017bb63eebd615f",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": "Ybodychange",
    "6679caeac9198802d271f8659017bb63eebd615f": "Ybodychange",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": {
      "type": "Ybodychange",
      "commitMessage": "Implemented [JACKSON-777] (renamed SerializationConfig.Feature, DeserializationConfig.Feature); various other restructure\n",
      "commitDate": "2/2/12, 11:30 AM",
      "commitName": "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 10:18 PM",
      "commitNameOld": "060ce11a33baa8a1c951cb5b7a857d5d81db09ef",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2345,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n-    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n+    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n-    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n+    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6679caeac9198802d271f8659017bb63eebd615f": {
      "type": "Ybodychange",
      "commitMessage": "Further simplification; eliminated StdSerializerProvider\n",
      "commitDate": "2/1/12, 5:32 PM",
      "commitName": "6679caeac9198802d271f8659017bb63eebd615f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 3:26 PM",
      "commitNameOld": "a57eca7f47d03b26320348520e926dde0da68509",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2333,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n     if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n-        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n+        _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": {
      "type": "Ybodychange",
      "commitMessage": "Completed major rewrite of handling of on/off features for ObjectMapper/SerConfig/DeserConfig\n",
      "commitDate": "1/19/12, 12:31 PM",
      "commitName": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/18/12, 10:41 PM",
      "commitNameOld": "3108d85c7ca25507a10bd6d4b49b7a2fb807329b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.58,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2410,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n-    SerializationConfig cfg \u003d copySerializationConfig();\n+    SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n     if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,23 @@\n+protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n+    SerializationConfig cfg \u003d copySerializationConfig();\n+    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n+        jgen.useDefaultPrettyPrinter();\n+    }\n+    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n+        _configAndWriteCloseable(jgen, value, cfg);\n+        return;\n+    }\n+    boolean closed \u003d false;\n+    try {\n+        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n+        closed \u003d true;\n+        jgen.close();\n+    } finally {\n+        if (!closed) {\n+            try {\n+                jgen.close();\n+            } catch (IOException ioe) {\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d copySerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2561,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n"
    }
  }
}