{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-1b",
  "repositoryPath": "/tmp/JacksonDatabind-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "POJOPropertyBuilder.java",
  "functionName": "trimByVisibility",
  "functionId": "$trimByVisibility",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 767,
  "functionEndLine": 788,
  "numCommitsSeen": 21,
  "timeTaken": 1037,
  "changeHistory": [
    "65c410c0c40724f763e0b4bce2db6d43bf078818",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "65c410c0c40724f763e0b4bce2db6d43bf078818": "Ymultichange(Yreturntypechange,Ybodychange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "65c410c0c40724f763e0b4bce2db6d43bf078818": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "refactoring\n",
      "commitDate": "1/27/12, 8:44 PM",
      "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/27/12, 8:44 PM",
          "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.93,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public Linked\u003cT\u003e trimByVisibility() {\n    if (next \u003d\u003d null) {\n        return this;\n    }\n    Linked\u003cT\u003e newNext \u003d next.trimByVisibility();\n    if (explicitName !\u003d null) {\n        if (newNext.explicitName \u003d\u003d null) {\n            return withNext(null);\n        }\n        return withNext(newNext);\n    }\n    if (newNext.explicitName !\u003d null) {\n        return newNext;\n    }\n    if (isVisible \u003d\u003d newNext.isVisible) {\n        return withNext(newNext);\n    }\n    return isVisible ? withNext(null) : newNext;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 678,
          "functionName": "trimByVisibility",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-public Node\u003cT\u003e trimByVisibility() {\n+public Linked\u003cT\u003e trimByVisibility() {\n     if (next \u003d\u003d null) {\n         return this;\n     }\n-    Node\u003cT\u003e newNext \u003d next.trimByVisibility();\n+    Linked\u003cT\u003e newNext \u003d next.trimByVisibility();\n     if (explicitName !\u003d null) {\n         if (newNext.explicitName \u003d\u003d null) {\n             return withNext(null);\n         }\n         return withNext(newNext);\n     }\n     if (newNext.explicitName !\u003d null) {\n         return newNext;\n     }\n     if (isVisible \u003d\u003d newNext.isVisible) {\n         return withNext(newNext);\n     }\n     return isVisible ? withNext(null) : newNext;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Node\u003cT\u003e",
            "newValue": "Linked\u003cT\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/27/12, 8:44 PM",
          "commitName": "65c410c0c40724f763e0b4bce2db6d43bf078818",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/26/12, 10:26 PM",
          "commitNameOld": "19ab5808eb8e47662f1d55408fdb186320061f13",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.93,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public Linked\u003cT\u003e trimByVisibility() {\n    if (next \u003d\u003d null) {\n        return this;\n    }\n    Linked\u003cT\u003e newNext \u003d next.trimByVisibility();\n    if (explicitName !\u003d null) {\n        if (newNext.explicitName \u003d\u003d null) {\n            return withNext(null);\n        }\n        return withNext(newNext);\n    }\n    if (newNext.explicitName !\u003d null) {\n        return newNext;\n    }\n    if (isVisible \u003d\u003d newNext.isVisible) {\n        return withNext(newNext);\n    }\n    return isVisible ? withNext(null) : newNext;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
          "functionStartLine": 678,
          "functionName": "trimByVisibility",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-public Node\u003cT\u003e trimByVisibility() {\n+public Linked\u003cT\u003e trimByVisibility() {\n     if (next \u003d\u003d null) {\n         return this;\n     }\n-    Node\u003cT\u003e newNext \u003d next.trimByVisibility();\n+    Linked\u003cT\u003e newNext \u003d next.trimByVisibility();\n     if (explicitName !\u003d null) {\n         if (newNext.explicitName \u003d\u003d null) {\n             return withNext(null);\n         }\n         return withNext(newNext);\n     }\n     if (newNext.explicitName !\u003d null) {\n         return newNext;\n     }\n     if (isVisible \u003d\u003d newNext.isVisible) {\n         return withNext(newNext);\n     }\n     return isVisible ? withNext(null) : newNext;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,19 @@\n+public Node\u003cT\u003e trimByVisibility() {\n+    if (next \u003d\u003d null) {\n+        return this;\n+    }\n+    Node\u003cT\u003e newNext \u003d next.trimByVisibility();\n+    if (explicitName !\u003d null) {\n+        if (newNext.explicitName \u003d\u003d null) {\n+            return withNext(null);\n+        }\n+        return withNext(newNext);\n+    }\n+    if (newNext.explicitName !\u003d null) {\n+        return newNext;\n+    }\n+    if (isVisible \u003d\u003d newNext.isVisible) {\n+        return withNext(newNext);\n+    }\n+    return isVisible ? withNext(null) : newNext;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Node\u003cT\u003e trimByVisibility() {\n    if (next \u003d\u003d null) {\n        return this;\n    }\n    Node\u003cT\u003e newNext \u003d next.trimByVisibility();\n    if (explicitName !\u003d null) {\n        if (newNext.explicitName \u003d\u003d null) {\n            return withNext(null);\n        }\n        return withNext(newNext);\n    }\n    if (newNext.explicitName !\u003d null) {\n        return newNext;\n    }\n    if (isVisible \u003d\u003d newNext.isVisible) {\n        return withNext(newNext);\n    }\n    return isVisible ? withNext(null) : newNext;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java",
      "functionStartLine": 603,
      "functionName": "trimByVisibility",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}