{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-3b",
  "repositoryPath": "/tmp/JacksonXml-3b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XmlTokenStream.java",
  "functionName": "_next",
  "functionId": "_next",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 303,
  "functionEndLine": 348,
  "numCommitsSeen": 24,
  "timeTaken": 864,
  "changeHistory": [
    "09f05a5ef994a2622f8f40626b9a75ab559d9d83",
    "41628fa07748c93f043eb3657ba34a085745bfee",
    "e22ace62764f7ee5ebe908922b6ac2f82432f154",
    "948d377c7aafb0ed91a244415df07f3f6c106be2",
    "9b51833a91b25b8035eb143320177271c8802eb4",
    "ac97422c72402f2970e5d9eab7a727a308399d56"
  ],
  "changeHistoryShort": {
    "09f05a5ef994a2622f8f40626b9a75ab559d9d83": "Ybodychange",
    "41628fa07748c93f043eb3657ba34a085745bfee": "Ybodychange",
    "e22ace62764f7ee5ebe908922b6ac2f82432f154": "Yfilerename",
    "948d377c7aafb0ed91a244415df07f3f6c106be2": "Yfilerename",
    "9b51833a91b25b8035eb143320177271c8802eb4": "Ybodychange",
    "ac97422c72402f2970e5d9eab7a727a308399d56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "09f05a5ef994a2622f8f40626b9a75ab559d9d83": {
      "type": "Ybodychange",
      "commitMessage": "Complete (?) support for unwrapped list handling; all unit tests pass again\n",
      "commitDate": "9/9/12, 10:56 PM",
      "commitName": "09f05a5ef994a2622f8f40626b9a75ab559d9d83",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/9/12, 10:40 AM",
      "commitNameOld": "41628fa07748c93f043eb3657ba34a085745bfee",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.51,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return _handleEndElement();\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return _handleEndElement();\n        case XML_END:\n            return XML_END;\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return _handleEndElement();\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java",
      "functionStartLine": 192,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,33 +1,35 @@\n private final int _next() throws XMLStreamException {\n     switch(_currentState) {\n         case XML_ATTRIBUTE_VALUE:\n             ++_nextAttributeIndex;\n         case XML_START_ELEMENT:\n             if (_nextAttributeIndex \u003c _attributeCount) {\n                 _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                 _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                 _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                 return (_currentState \u003d XML_ATTRIBUTE_NAME);\n             }\n             String text \u003d _collectUntilTag();\n             if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                 return _initStartElement();\n             }\n             if (text !\u003d null) {\n                 _textValue \u003d text;\n                 return (_currentState \u003d XML_TEXT);\n             }\n             return _handleEndElement();\n         case XML_ATTRIBUTE_NAME:\n             return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n         case XML_TEXT:\n             return _handleEndElement();\n+        case XML_END:\n+            return XML_END;\n     }\n     switch(_skipUntilTag()) {\n         case XMLStreamConstants.END_DOCUMENT:\n             return (_currentState \u003d XML_END);\n         case XMLStreamConstants.END_ELEMENT:\n             return _handleEndElement();\n     }\n     return _initStartElement();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "41628fa07748c93f043eb3657ba34a085745bfee": {
      "type": "Ybodychange",
      "commitMessage": "Added support for deserializing unwrapped Lists; introduces 2 new failures, need to fix.\n",
      "commitDate": "9/9/12, 10:40 AM",
      "commitName": "41628fa07748c93f043eb3657ba34a085745bfee",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/8/12, 8:39 PM",
      "commitNameOld": "e22ace62764f7ee5ebe908922b6ac2f82432f154",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.58,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return _handleEndElement();\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return _handleEndElement();\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return _handleEndElement();\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java",
      "functionStartLine": 196,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,33 +1,33 @@\n private final int _next() throws XMLStreamException {\n     switch(_currentState) {\n         case XML_ATTRIBUTE_VALUE:\n             ++_nextAttributeIndex;\n         case XML_START_ELEMENT:\n             if (_nextAttributeIndex \u003c _attributeCount) {\n                 _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                 _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                 _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                 return (_currentState \u003d XML_ATTRIBUTE_NAME);\n             }\n             String text \u003d _collectUntilTag();\n             if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                 return _initStartElement();\n             }\n             if (text !\u003d null) {\n                 _textValue \u003d text;\n                 return (_currentState \u003d XML_TEXT);\n             }\n-            return (_currentState \u003d XML_END_ELEMENT);\n+            return _handleEndElement();\n         case XML_ATTRIBUTE_NAME:\n             return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n         case XML_TEXT:\n-            return (_currentState \u003d XML_END_ELEMENT);\n+            return _handleEndElement();\n     }\n     switch(_skipUntilTag()) {\n         case XMLStreamConstants.END_DOCUMENT:\n             return (_currentState \u003d XML_END);\n         case XMLStreamConstants.END_ELEMENT:\n-            return (_currentState \u003d XML_END_ELEMENT);\n+            return _handleEndElement();\n     }\n     return _initStartElement();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e22ace62764f7ee5ebe908922b6ac2f82432f154": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "9/8/12, 8:39 PM",
      "commitName": "e22ace62764f7ee5ebe908922b6ac2f82432f154",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/8/12, 8:36 PM",
      "commitNameOld": "c95b94a159ac01373fc44ac8a761738d73cb5709",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return (_currentState \u003d XML_END_ELEMENT);\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java",
      "functionStartLine": 155,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlTokenStream.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java"
      }
    },
    "948d377c7aafb0ed91a244415df07f3f6c106be2": {
      "type": "Yfilerename",
      "commitMessage": "refactoring\n",
      "commitDate": "2/19/12, 9:55 PM",
      "commitName": "948d377c7aafb0ed91a244415df07f3f6c106be2",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "2/19/12, 9:53 PM",
      "commitNameOld": "4eb1efdf62fa5efab2422803d0f821932dda5c5a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return (_currentState \u003d XML_END_ELEMENT);\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlTokenStream.java",
      "functionStartLine": 156,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/xml/util/XmlTokenStream.java",
        "newPath": "src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlTokenStream.java"
      }
    },
    "9b51833a91b25b8035eb143320177271c8802eb4": {
      "type": "Ybodychange",
      "commitMessage": "Now parsing all XML attributes (not only the first one)\n",
      "commitDate": "6/8/11, 6:25 AM",
      "commitName": "9b51833a91b25b8035eb143320177271c8802eb4",
      "commitAuthor": "Tomasz Nurkiewicz",
      "commitDateOld": "12/30/10, 10:22 PM",
      "commitNameOld": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 159.29,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return (_currentState \u003d XML_END_ELEMENT);\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/util/XmlTokenStream.java",
      "functionStartLine": 156,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,33 +1,33 @@\n private final int _next() throws XMLStreamException {\n     switch(_currentState) {\n         case XML_ATTRIBUTE_VALUE:\n             ++_nextAttributeIndex;\n         case XML_START_ELEMENT:\n             if (_nextAttributeIndex \u003c _attributeCount) {\n-                _localName \u003d _xmlReader.getAttributeLocalName(0);\n-                _namespaceURI \u003d _xmlReader.getAttributeNamespace(0);\n-                _textValue \u003d _xmlReader.getAttributeValue(0);\n+                _localName \u003d _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n+                _namespaceURI \u003d _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n+                _textValue \u003d _xmlReader.getAttributeValue(_nextAttributeIndex);\n                 return (_currentState \u003d XML_ATTRIBUTE_NAME);\n             }\n             String text \u003d _collectUntilTag();\n             if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                 return _initStartElement();\n             }\n             if (text !\u003d null) {\n                 _textValue \u003d text;\n                 return (_currentState \u003d XML_TEXT);\n             }\n             return (_currentState \u003d XML_END_ELEMENT);\n         case XML_ATTRIBUTE_NAME:\n             return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n         case XML_TEXT:\n             return (_currentState \u003d XML_END_ELEMENT);\n     }\n     switch(_skipUntilTag()) {\n         case XMLStreamConstants.END_DOCUMENT:\n             return (_currentState \u003d XML_END);\n         case XMLStreamConstants.END_ELEMENT:\n             return (_currentState \u003d XML_END_ELEMENT);\n     }\n     return _initStartElement();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ac97422c72402f2970e5d9eab7a727a308399d56": {
      "type": "Yintroduced",
      "commitMessage": "Added main codebase as well\n",
      "commitDate": "12/30/10, 10:22 PM",
      "commitName": "ac97422c72402f2970e5d9eab7a727a308399d56",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,33 @@\n+private final int _next() throws XMLStreamException {\n+    switch(_currentState) {\n+        case XML_ATTRIBUTE_VALUE:\n+            ++_nextAttributeIndex;\n+        case XML_START_ELEMENT:\n+            if (_nextAttributeIndex \u003c _attributeCount) {\n+                _localName \u003d _xmlReader.getAttributeLocalName(0);\n+                _namespaceURI \u003d _xmlReader.getAttributeNamespace(0);\n+                _textValue \u003d _xmlReader.getAttributeValue(0);\n+                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n+            }\n+            String text \u003d _collectUntilTag();\n+            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n+                return _initStartElement();\n+            }\n+            if (text !\u003d null) {\n+                _textValue \u003d text;\n+                return (_currentState \u003d XML_TEXT);\n+            }\n+            return (_currentState \u003d XML_END_ELEMENT);\n+        case XML_ATTRIBUTE_NAME:\n+            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n+        case XML_TEXT:\n+            return (_currentState \u003d XML_END_ELEMENT);\n+    }\n+    switch(_skipUntilTag()) {\n+        case XMLStreamConstants.END_DOCUMENT:\n+            return (_currentState \u003d XML_END);\n+        case XMLStreamConstants.END_ELEMENT:\n+            return (_currentState \u003d XML_END_ELEMENT);\n+    }\n+    return _initStartElement();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private final int _next() throws XMLStreamException {\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        case XML_START_ELEMENT:\n            if (_nextAttributeIndex \u003c _attributeCount) {\n                _localName \u003d _xmlReader.getAttributeLocalName(0);\n                _namespaceURI \u003d _xmlReader.getAttributeNamespace(0);\n                _textValue \u003d _xmlReader.getAttributeValue(0);\n                return (_currentState \u003d XML_ATTRIBUTE_NAME);\n            }\n            String text \u003d _collectUntilTag();\n            if (_xmlReader.getEventType() \u003d\u003d XMLStreamReader.START_ELEMENT) {\n                return _initStartElement();\n            }\n            if (text !\u003d null) {\n                _textValue \u003d text;\n                return (_currentState \u003d XML_TEXT);\n            }\n            return (_currentState \u003d XML_END_ELEMENT);\n        case XML_ATTRIBUTE_NAME:\n            return (_currentState \u003d XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    switch(_skipUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            return (_currentState \u003d XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            return (_currentState \u003d XML_END_ELEMENT);\n    }\n    return _initStartElement();\n}",
      "path": "src/main/java/com/fasterxml/jackson/xml/util/XmlTokenStream.java",
      "functionStartLine": 156,
      "functionName": "_next",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}