{
  "origin": "codeshovel",
  "repositoryName": "JacksonXml-3b",
  "repositoryPath": "/tmp/JacksonXml-3b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XmlFactory.java",
  "functionName": "_createParser",
  "functionId": "_createParser___r-Reader__ctxt-IOContext",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 552,
  "functionEndLine": 567,
  "numCommitsSeen": 29,
  "timeTaken": 1053,
  "changeHistory": [
    "3507c38f1c6a7b5a08e74e4de2da1278259f8e83",
    "76916a195884d691c57ff7ad94b5db61e10f89e3",
    "8377ad8d63e3353d4dcc711cdd14ed1b5d97c88a",
    "b1cce7cb29c5b2ae78a3bbc42c4cf8f1b9d298ea"
  ],
  "changeHistoryShort": {
    "3507c38f1c6a7b5a08e74e4de2da1278259f8e83": "Yexceptionschange",
    "76916a195884d691c57ff7ad94b5db61e10f89e3": "Ybodychange",
    "8377ad8d63e3353d4dcc711cdd14ed1b5d97c88a": "Yannotationchange",
    "b1cce7cb29c5b2ae78a3bbc42c4cf8f1b9d298ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3507c38f1c6a7b5a08e74e4de2da1278259f8e83": {
      "type": "Yexceptionschange",
      "commitMessage": "Minor tweaking; add JsonFactory.canUseCharArrays()\n",
      "commitDate": "4/18/14, 3:33 PM",
      "commitName": "3507c38f1c6a7b5a08e74e4de2da1278259f8e83",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/28/14, 7:50 AM",
      "commitNameOld": "22f728b2116e5ff7b325cc04dc255f3bfb12ea55",
      "commitAuthorOld": "Pascal GÃ©linas",
      "daysBetweenCommits": 80.28,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException {\n    XMLStreamReader sr;\n    try {\n        sr \u003d _xmlInputFactory.createXMLStreamReader(r);\n        sr \u003d _initializeXmlReader(sr);\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwXmlAsIOException(e);\n    }\n    FromXmlParser xp \u003d new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sr);\n    if (_cfgNameForTextElement !\u003d null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
      "functionStartLine": 470,
      "functionName": "_createParser",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n @Override\n-protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n+protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException {\n     XMLStreamReader sr;\n     try {\n         sr \u003d _xmlInputFactory.createXMLStreamReader(r);\n         sr \u003d _initializeXmlReader(sr);\n     } catch (XMLStreamException e) {\n         return StaxUtil.throwXmlAsIOException(e);\n     }\n     FromXmlParser xp \u003d new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sr);\n     if (_cfgNameForTextElement !\u003d null) {\n         xp.setXMLTextElementName(_cfgNameForTextElement);\n     }\n     return xp;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[IOException, JsonParseException]",
        "newValue": "[IOException]"
      }
    },
    "76916a195884d691c57ff7ad94b5db61e10f89e3": {
      "type": "Ybodychange",
      "commitMessage": "Clean up\n",
      "commitDate": "7/5/13, 12:04 AM",
      "commitName": "76916a195884d691c57ff7ad94b5db61e10f89e3",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/27/13, 11:45 AM",
      "commitNameOld": "4b49375891f9b0a66b7bd8432c6efc6fb965fae8",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 68.51,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n    XMLStreamReader sr;\n    try {\n        sr \u003d _xmlInputFactory.createXMLStreamReader(r);\n        sr \u003d _initializeXmlReader(sr);\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwXmlAsIOException(e);\n    }\n    FromXmlParser xp \u003d new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sr);\n    if (_cfgNameForTextElement !\u003d null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
      "functionStartLine": 464,
      "functionName": "_createParser",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,15 @@\n @Override\n protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n-    return _createJsonParser(r, ctxt);\n+    XMLStreamReader sr;\n+    try {\n+        sr \u003d _xmlInputFactory.createXMLStreamReader(r);\n+        sr \u003d _initializeXmlReader(sr);\n+    } catch (XMLStreamException e) {\n+        return StaxUtil.throwXmlAsIOException(e);\n+    }\n+    FromXmlParser xp \u003d new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sr);\n+    if (_cfgNameForTextElement !\u003d null) {\n+        xp.setXMLTextElementName(_cfgNameForTextElement);\n+    }\n+    return xp;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8377ad8d63e3353d4dcc711cdd14ed1b5d97c88a": {
      "type": "Yannotationchange",
      "commitMessage": "Start 2.1 changes\n",
      "commitDate": "8/4/12, 6:48 PM",
      "commitName": "8377ad8d63e3353d4dcc711cdd14ed1b5d97c88a",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/22/12, 11:22 PM",
      "commitNameOld": "b1cce7cb29c5b2ae78a3bbc42c4cf8f1b9d298ea",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 12.81,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n    return _createJsonParser(r, ctxt);\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
      "functionStartLine": 342,
      "functionName": "_createParser",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,4 @@\n+@Override\n protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n     return _createJsonParser(r, ctxt);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "b1cce7cb29c5b2ae78a3bbc42c4cf8f1b9d298ea": {
      "type": "Yintroduced",
      "commitMessage": "Adding a unit test; preliminary support for upcoming [jackson-core/issue-25]\n",
      "commitDate": "7/22/12, 11:22 PM",
      "commitName": "b1cce7cb29c5b2ae78a3bbc42c4cf8f1b9d298ea",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,3 @@\n+protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n+    return _createJsonParser(r, ctxt);\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException {\n    return _createJsonParser(r, ctxt);\n}",
      "path": "src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
      "functionStartLine": 326,
      "functionName": "_createParser",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}