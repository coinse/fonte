{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-55b",
  "repositoryPath": "/tmp/Jsoup-55b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Entities.java",
  "functionName": "load",
  "functionId": "load___e-EscapeMode__file-String__size-int",
  "sourceFilePath": "src/main/java/org/jsoup/nodes/Entities.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 281,
  "functionEndLine": 319,
  "numCommitsSeen": 30,
  "timeTaken": 971,
  "changeHistory": [
    "aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2"
  ],
  "changeHistoryShort": {
    "aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2": {
      "type": "Yintroduced",
      "commitMessage": "Improved HTML entity support\n\nFixes #602, #603\n",
      "commitDate": "8/19/16, 12:04 PM",
      "commitName": "aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,34 @@\n+private static void load(EscapeMode e, String file, int size) {\n+    e.nameKeys \u003d new String[size];\n+    e.codeVals \u003d new int[size];\n+    e.codeKeys \u003d new int[size];\n+    e.nameVals \u003d new String[size];\n+    InputStream stream \u003d Entities.class.getResourceAsStream(file);\n+    if (stream \u003d\u003d null)\n+        throw new IllegalStateException(\"Could not read resource \" + file + \". Make sure you copy resources for \" + Entities.class.getCanonicalName());\n+    BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));\n+    String entry;\n+    int i \u003d 0;\n+    try {\n+        while ((entry \u003d reader.readLine()) !\u003d null) {\n+            final Matcher match \u003d entityPattern.matcher(entry);\n+            if (match.find()) {\n+                final String name \u003d match.group(1);\n+                final int cp1 \u003d Integer.parseInt(match.group(2), codepointRadix);\n+                final int cp2 \u003d match.group(3) !\u003d null ? Integer.parseInt(match.group(3), codepointRadix) : empty;\n+                final int index \u003d Integer.parseInt(match.group(4), codepointRadix);\n+                e.nameKeys[i] \u003d name;\n+                e.codeVals[i] \u003d cp1;\n+                e.codeKeys[index] \u003d cp1;\n+                e.nameVals[index] \u003d name;\n+                if (cp2 !\u003d empty) {\n+                    multipoints.put(name, new String(new int[] { cp1, cp2 }, 0, 2));\n+                }\n+                i++;\n+            }\n+        }\n+        reader.close();\n+    } catch (IOException err) {\n+        throw new IllegalStateException(\"Error reading resource \" + file);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static void load(EscapeMode e, String file, int size) {\n    e.nameKeys \u003d new String[size];\n    e.codeVals \u003d new int[size];\n    e.codeKeys \u003d new int[size];\n    e.nameVals \u003d new String[size];\n    InputStream stream \u003d Entities.class.getResourceAsStream(file);\n    if (stream \u003d\u003d null)\n        throw new IllegalStateException(\"Could not read resource \" + file + \". Make sure you copy resources for \" + Entities.class.getCanonicalName());\n    BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));\n    String entry;\n    int i \u003d 0;\n    try {\n        while ((entry \u003d reader.readLine()) !\u003d null) {\n            final Matcher match \u003d entityPattern.matcher(entry);\n            if (match.find()) {\n                final String name \u003d match.group(1);\n                final int cp1 \u003d Integer.parseInt(match.group(2), codepointRadix);\n                final int cp2 \u003d match.group(3) !\u003d null ? Integer.parseInt(match.group(3), codepointRadix) : empty;\n                final int index \u003d Integer.parseInt(match.group(4), codepointRadix);\n                e.nameKeys[i] \u003d name;\n                e.codeVals[i] \u003d cp1;\n                e.codeKeys[index] \u003d cp1;\n                e.nameVals[index] \u003d name;\n                if (cp2 !\u003d empty) {\n                    multipoints.put(name, new String(new int[] { cp1, cp2 }, 0, 2));\n                }\n                i++;\n            }\n        }\n        reader.close();\n    } catch (IOException err) {\n        throw new IllegalStateException(\"Error reading resource \" + file);\n    }\n}",
      "path": "src/main/java/org/jsoup/nodes/Entities.java",
      "functionStartLine": 281,
      "functionName": "load",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}