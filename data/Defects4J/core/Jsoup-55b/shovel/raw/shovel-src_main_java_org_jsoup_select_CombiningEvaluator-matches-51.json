{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-55b",
  "repositoryPath": "/tmp/Jsoup-55b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CombiningEvaluator.java",
  "functionName": "matches",
  "functionId": "$matches___root-Element__node-Element",
  "sourceFilePath": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 51,
  "functionEndLine": 58,
  "numCommitsSeen": 26,
  "timeTaken": 575,
  "changeHistory": [
    "2c8b9ad145d3b808be19ce03a99797215e0c3ca3",
    "d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b",
    "64ec9cfb151f26e85c0c206ce6aba063695e47cd",
    "bbca7db20b9a45fb3d8efb29447349ed8593649c",
    "ae7308a2832897f351712e44f656a3e71fac7efc",
    "b9f9860f43834de80d6acacad6dc76bd93140957"
  ],
  "changeHistoryShort": {
    "2c8b9ad145d3b808be19ce03a99797215e0c3ca3": "Ybodychange",
    "d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b": "Ybodychange",
    "64ec9cfb151f26e85c0c206ce6aba063695e47cd": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": "Yfilerename",
    "ae7308a2832897f351712e44f656a3e71fac7efc": "Ymultichange(Yparameterchange,Ybodychange)",
    "b9f9860f43834de80d6acacad6dc76bd93140957": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2c8b9ad145d3b808be19ce03a99797215e0c3ca3": {
      "type": "Ybodychange",
      "commitMessage": "Performance: CPU and memory improvements for Selectors\n\nReduced CPU load and GC load for common selector use\n",
      "commitDate": "11/10/13, 2:59 PM",
      "commitName": "2c8b9ad145d3b808be19ce03a99797215e0c3ca3",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "6/3/12, 8:10 PM",
      "commitNameOld": "d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 524.83,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (int i \u003d 0; i \u003c num; i++) {\n        Evaluator s \u003d evaluators.get(i);\n        if (s.matches(root, node))\n            return true;\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
      "functionStartLine": 91,
      "functionName": "matches",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n @Override\n public boolean matches(Element root, Element node) {\n-    for (int i \u003d 0; i \u003c evaluators.size(); i++) {\n+    for (int i \u003d 0; i \u003c num; i++) {\n         Evaluator s \u003d evaluators.get(i);\n         if (s.matches(root, node))\n             return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t create Iterator objects in these tight Evaluator loops.\n\nSaves a fair bit of GC time when selecting.\n",
      "commitDate": "6/3/12, 8:10 PM",
      "commitName": "d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "4/5/12, 9:25 PM",
      "commitNameOld": "5d56ace149ae3264d2502d49dd85302fc613a27c",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 58.95,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (int i \u003d 0; i \u003c evaluators.size(); i++) {\n        Evaluator s \u003d evaluators.get(i);\n        if (s.matches(root, node))\n            return true;\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
      "functionStartLine": 82,
      "functionName": "matches",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,9 @@\n @Override\n public boolean matches(Element root, Element node) {\n-    for (Evaluator s : evaluators) {\n+    for (int i \u003d 0; i \u003c evaluators.size(); i++) {\n+        Evaluator s \u003d evaluators.get(i);\n         if (s.matches(root, node))\n             return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "64ec9cfb151f26e85c0c206ce6aba063695e47cd": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Cleanup of selector class files\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "64ec9cfb151f26e85c0c206ce6aba063695e47cd",
      "commitAuthor": "Jonathan Hedley",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Cleanup of selector class files\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "64ec9cfb151f26e85c0c206ce6aba063695e47cd",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "6dbe51b3f6d4db7a17fd103a5d2f138e5edafe19",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (Evaluator s : evaluators) {\n        if (s.matches(root, node))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
          "functionStartLine": 61,
          "functionName": "matches",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n public boolean matches(Element root, Element node) {\n-    for (Evaluator s : selectors) {\n-        if (!s.matches(root, node))\n-            return false;\n+    for (Evaluator s : evaluators) {\n+        if (s.matches(root, node))\n+            return true;\n     }\n-    return true;\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/jsoup/select/selectors/AndSelector.java",
            "newPath": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
            "oldMethodName": "matches",
            "newMethodName": "matches"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Cleanup of selector class files\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "64ec9cfb151f26e85c0c206ce6aba063695e47cd",
          "commitAuthor": "Jonathan Hedley",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "6dbe51b3f6d4db7a17fd103a5d2f138e5edafe19",
          "commitAuthorOld": "Jonathan Hedley",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (Evaluator s : evaluators) {\n        if (s.matches(root, node))\n            return true;\n    }\n    return false;\n}",
          "path": "src/main/java/org/jsoup/select/CombiningEvaluator.java",
          "functionStartLine": 61,
          "functionName": "matches",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n public boolean matches(Element root, Element node) {\n-    for (Evaluator s : selectors) {\n-        if (!s.matches(root, node))\n-            return false;\n+    for (Evaluator s : evaluators) {\n+        if (s.matches(root, node))\n+            return true;\n     }\n-    return true;\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "bbca7db20b9a45fb3d8efb29447349ed8593649c": {
      "type": "Yfilerename",
      "commitMessage": "Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "bbca7db20b9a45fb3d8efb29447349ed8593649c",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "7/2/11, 4:12 AM",
      "commitNameOld": "08e2a7fc2f487328f1b514e07cc9f4c9ff3d3814",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (Evaluator s : selectors) {\n        if (!s.matches(root, node))\n            return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/select/selectors/AndSelector.java",
      "functionStartLine": 44,
      "functionName": "matches",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/jsoup/select/ng/AndSelector.java",
        "newPath": "src/main/java/org/jsoup/select/selectors/AndSelector.java"
      }
    },
    "ae7308a2832897f351712e44f656a3e71fac7efc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Evaluator.match(Element test) -\u003e\nEvaluator.match(Element root, Element test)\nchange\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "ae7308a2832897f351712e44f656a3e71fac7efc",
      "commitAuthor": "Anton Kazennikov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Evaluator.match(Element test) -\u003e\nEvaluator.match(Element root, Element test)\nchange\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "ae7308a2832897f351712e44f656a3e71fac7efc",
          "commitAuthor": "Anton Kazennikov",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "3fb9295d4ce19e1d9bc06dd354dcfba981827abf",
          "commitAuthorOld": "Anton Kazennikov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (Evaluator s : selectors) {\n        if (!s.matches(root, node))\n            return false;\n    }\n    return true;\n}",
          "path": "src/main/java/org/jsoup/select/ng/AndSelector.java",
          "functionStartLine": 42,
          "functionName": "matches",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n-public boolean matches(Element node) {\n+public boolean matches(Element root, Element node) {\n     for (Evaluator s : selectors) {\n-        if (!s.matches(node))\n+        if (!s.matches(root, node))\n             return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[node-Element]",
            "newValue": "[root-Element, node-Element]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Evaluator.match(Element test) -\u003e\nEvaluator.match(Element root, Element test)\nchange\n",
          "commitDate": "7/2/11, 4:12 AM",
          "commitName": "ae7308a2832897f351712e44f656a3e71fac7efc",
          "commitAuthor": "Anton Kazennikov",
          "commitDateOld": "7/2/11, 4:12 AM",
          "commitNameOld": "3fb9295d4ce19e1d9bc06dd354dcfba981827abf",
          "commitAuthorOld": "Anton Kazennikov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean matches(Element root, Element node) {\n    for (Evaluator s : selectors) {\n        if (!s.matches(root, node))\n            return false;\n    }\n    return true;\n}",
          "path": "src/main/java/org/jsoup/select/ng/AndSelector.java",
          "functionStartLine": 42,
          "functionName": "matches",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n-public boolean matches(Element node) {\n+public boolean matches(Element root, Element node) {\n     for (Evaluator s : selectors) {\n-        if (!s.matches(node))\n+        if (!s.matches(root, node))\n             return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "b9f9860f43834de80d6acacad6dc76bd93140957": {
      "type": "Yintroduced",
      "commitMessage": "changes wrt existing Evaluator class\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "b9f9860f43834de80d6acacad6dc76bd93140957",
      "commitAuthor": "Anton Kazennikov",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+public boolean matches(Element node) {\n+    for (Evaluator s : selectors) {\n+        if (!s.matches(node))\n+            return false;\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean matches(Element node) {\n    for (Evaluator s : selectors) {\n        if (!s.matches(node))\n            return false;\n    }\n    return true;\n}",
      "path": "src/main/java/org/jsoup/select/ng/AndSelector.java",
      "functionStartLine": 18,
      "functionName": "matches",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}