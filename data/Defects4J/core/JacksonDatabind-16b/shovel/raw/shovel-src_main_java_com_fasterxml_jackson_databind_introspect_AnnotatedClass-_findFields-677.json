{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotatedClass.java",
  "functionName": "_findFields",
  "functionId": "_findFields___c-Class__?____fields-Map__String,AnnotatedField__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 677,
  "functionEndLine": 715,
  "numCommitsSeen": 31,
  "timeTaken": 1409,
  "changeHistory": [
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
    "cad988161f95e549ba352037223574a90a5a255a",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": "Ybodychange",
    "cad988161f95e549ba352037223574a90a5a255a": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": {
      "type": "Ybodychange",
      "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
      "commitDate": "4/28/12, 12:43 AM",
      "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/27/12, 7:56 PM",
      "commitNameOld": "201c8ffd7931aa552fe42f077e23917695faf29a",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        fields \u003d _findFields(parent, fields);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            if (fields \u003d\u003d null) {\n                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(parent, mixin, fields);\n            }\n        }\n    }\n    return fields;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 664,
      "functionName": "_findFields",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,22 @@\n protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n     Class\u003c?\u003e parent \u003d c.getSuperclass();\n     if (parent !\u003d null) {\n         fields \u003d _findFields(parent, fields);\n         for (Field f : c.getDeclaredFields()) {\n             if (!_isIncludableField(f)) {\n                 continue;\n             }\n             if (fields \u003d\u003d null) {\n                 fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n             }\n             fields.put(f.getName(), _constructField(f));\n         }\n         if (_mixInResolver !\u003d null) {\n             Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n             if (mixin !\u003d null) {\n-                _addFieldMixIns(mixin, fields);\n+                _addFieldMixIns(parent, mixin, fields);\n             }\n         }\n     }\n     return fields;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cad988161f95e549ba352037223574a90a5a255a": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "refactoring\n",
      "commitDate": "1/22/12, 9:49 PM",
      "commitName": "cad988161f95e549ba352037223574a90a5a255a",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "refactoring\n",
          "commitDate": "1/22/12, 9:49 PM",
          "commitName": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:44 PM",
          "commitNameOld": "4fdbd54e9e5c5d3cb5ce539f48ba6f1019decdab",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        fields \u003d _findFields(parent, fields);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            if (fields \u003d\u003d null) {\n                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(mixin, fields);\n            }\n        }\n    }\n    return fields;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 651,
          "functionName": "_findFields",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,22 @@\n-protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n+protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n     Class\u003c?\u003e parent \u003d c.getSuperclass();\n     if (parent !\u003d null) {\n-        _addFields(fields, parent);\n+        fields \u003d _findFields(parent, fields);\n         for (Field f : c.getDeclaredFields()) {\n             if (!_isIncludableField(f)) {\n                 continue;\n             }\n+            if (fields \u003d\u003d null) {\n+                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n+            }\n             fields.put(f.getName(), _constructField(f));\n         }\n         if (_mixInResolver !\u003d null) {\n             Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n             if (mixin !\u003d null) {\n                 _addFieldMixIns(mixin, fields);\n             }\n         }\n     }\n+    return fields;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "_addFields",
            "newValue": "_findFields"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/22/12, 9:49 PM",
          "commitName": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:44 PM",
          "commitNameOld": "4fdbd54e9e5c5d3cb5ce539f48ba6f1019decdab",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        fields \u003d _findFields(parent, fields);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            if (fields \u003d\u003d null) {\n                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(mixin, fields);\n            }\n        }\n    }\n    return fields;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 651,
          "functionName": "_findFields",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,22 @@\n-protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n+protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n     Class\u003c?\u003e parent \u003d c.getSuperclass();\n     if (parent !\u003d null) {\n-        _addFields(fields, parent);\n+        fields \u003d _findFields(parent, fields);\n         for (Field f : c.getDeclaredFields()) {\n             if (!_isIncludableField(f)) {\n                 continue;\n             }\n+            if (fields \u003d\u003d null) {\n+                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n+            }\n             fields.put(f.getName(), _constructField(f));\n         }\n         if (_mixInResolver !\u003d null) {\n             Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n             if (mixin !\u003d null) {\n                 _addFieldMixIns(mixin, fields);\n             }\n         }\n     }\n+    return fields;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[fields-Map\u003cString,AnnotatedField\u003e, c-Class\u003c?\u003e]",
            "newValue": "[c-Class\u003c?\u003e, fields-Map\u003cString,AnnotatedField\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/22/12, 9:49 PM",
          "commitName": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:44 PM",
          "commitNameOld": "4fdbd54e9e5c5d3cb5ce539f48ba6f1019decdab",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        fields \u003d _findFields(parent, fields);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            if (fields \u003d\u003d null) {\n                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(mixin, fields);\n            }\n        }\n    }\n    return fields;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 651,
          "functionName": "_findFields",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,22 @@\n-protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n+protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n     Class\u003c?\u003e parent \u003d c.getSuperclass();\n     if (parent !\u003d null) {\n-        _addFields(fields, parent);\n+        fields \u003d _findFields(parent, fields);\n         for (Field f : c.getDeclaredFields()) {\n             if (!_isIncludableField(f)) {\n                 continue;\n             }\n+            if (fields \u003d\u003d null) {\n+                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n+            }\n             fields.put(f.getName(), _constructField(f));\n         }\n         if (_mixInResolver !\u003d null) {\n             Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n             if (mixin !\u003d null) {\n                 _addFieldMixIns(mixin, fields);\n             }\n         }\n     }\n+    return fields;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Map\u003cString,AnnotatedField\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "refactoring\n",
          "commitDate": "1/22/12, 9:49 PM",
          "commitName": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:44 PM",
          "commitNameOld": "4fdbd54e9e5c5d3cb5ce539f48ba6f1019decdab",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        fields \u003d _findFields(parent, fields);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            if (fields \u003d\u003d null) {\n                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(mixin, fields);\n            }\n        }\n    }\n    return fields;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 651,
          "functionName": "_findFields",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,22 @@\n-protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n+protected Map\u003cString, AnnotatedField\u003e _findFields(Class\u003c?\u003e c, Map\u003cString, AnnotatedField\u003e fields) {\n     Class\u003c?\u003e parent \u003d c.getSuperclass();\n     if (parent !\u003d null) {\n-        _addFields(fields, parent);\n+        fields \u003d _findFields(parent, fields);\n         for (Field f : c.getDeclaredFields()) {\n             if (!_isIncludableField(f)) {\n                 continue;\n             }\n+            if (fields \u003d\u003d null) {\n+                fields \u003d new LinkedHashMap\u003cString, AnnotatedField\u003e();\n+            }\n             fields.put(f.getName(), _constructField(f));\n         }\n         if (_mixInResolver !\u003d null) {\n             Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n             if (mixin !\u003d null) {\n                 _addFieldMixIns(mixin, fields);\n             }\n         }\n     }\n+    return fields;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,18 @@\n+protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n+    Class\u003c?\u003e parent \u003d c.getSuperclass();\n+    if (parent !\u003d null) {\n+        _addFields(fields, parent);\n+        for (Field f : c.getDeclaredFields()) {\n+            if (!_isIncludableField(f)) {\n+                continue;\n+            }\n+            fields.put(f.getName(), _constructField(f));\n+        }\n+        if (_mixInResolver !\u003d null) {\n+            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n+            if (mixin !\u003d null) {\n+                _addFieldMixIns(mixin, fields);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void _addFields(Map\u003cString, AnnotatedField\u003e fields, Class\u003c?\u003e c) {\n    Class\u003c?\u003e parent \u003d c.getSuperclass();\n    if (parent !\u003d null) {\n        _addFields(fields, parent);\n        for (Field f : c.getDeclaredFields()) {\n            if (!_isIncludableField(f)) {\n                continue;\n            }\n            fields.put(f.getName(), _constructField(f));\n        }\n        if (_mixInResolver !\u003d null) {\n            Class\u003c?\u003e mixin \u003d _mixInResolver.findMixInClassFor(c);\n            if (mixin !\u003d null) {\n                _addFieldMixIns(mixin, fields);\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 683,
      "functionName": "_addFields",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}