{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SerializerProvider.java",
  "functionName": "handleSecondaryContextualization",
  "functionId": "handleSecondaryContextualization___ser-JsonSerializer__?____property-BeanProperty",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
  "functionAnnotation": "",
  "functionDoc": "Method called for secondary property serializers (ones\nNOT directly created to serialize values of a POJO property\nbut instead created as a dependant serializer -- such as value serializers\nfor structured types, or serializers for root values)\nto handle details of resolving\n{@link ContextualDeserializer} with given property context.\nGiven that these serializers are not directly related to given property\n(or, in case of root value property, to any property), annotations\naccessible may or may not be relevant.\n\n@param property Property for which serializer is used, if any; null\n   when deserializing root values\n@since 2.3\n",
  "functionStartLine": 897,
  "functionEndLine": 907,
  "numCommitsSeen": 167,
  "timeTaken": 2834,
  "changeHistory": [
    "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813",
    "47ac6bd51e63b0cbfef2e431a94193433d15077a",
    "b530c4de4431cec046c91cd944f75e07542e1720",
    "6679caeac9198802d271f8659017bb63eebd615f",
    "f42e62927e7314a093fd2879030762a5dcc087fe",
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
    "56e8e6c7d057e6acf2d3dce98e6802cbbee48c57",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813": "Ymultichange(Yrename,Ydocchange)",
    "47ac6bd51e63b0cbfef2e431a94193433d15077a": "Ybodychange",
    "b530c4de4431cec046c91cd944f75e07542e1720": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange,Yannotationchange,Ydocchange)",
    "6679caeac9198802d271f8659017bb63eebd615f": "Ymovefromfile",
    "f42e62927e7314a093fd2879030762a5dcc087fe": "Ybodychange",
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "56e8e6c7d057e6acf2d3dce98e6802cbbee48c57": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813": {
      "type": "Ymultichange(Yrename,Ydocchange)",
      "commitMessage": "Yet more work, trying to allow distinguishing of \u0027primary\u0027 and \u0027secondary\u0027 serializers, wrt property-context\n",
      "commitDate": "9/5/13, 10:37 PM",
      "commitName": "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Yet more work, trying to allow distinguishing of \u0027primary\u0027 and \u0027secondary\u0027 serializers, wrt property-context\n",
          "commitDate": "9/5/13, 10:37 PM",
          "commitName": "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "9/5/13, 8:55 PM",
          "commitNameOld": "47ac6bd51e63b0cbfef2e431a94193433d15077a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleSecondaryContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser !\u003d null) {\n        if (ser instanceof ContextualSerializer) {\n            ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n        }\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 788,
          "functionName": "handleSecondaryContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method called for secondary property serializers (ones\nNOT directly created to serialize values of a POJO property\nbut instead created as a dependant serializer -- such as value serializers\nfor structured types, or serializers for root values)\nto handle details of resolving\n{@link ContextualDeserializer} with given property context.\nGiven that these serializers are not directly related to given property\n(or, in case of root value property, to any property), annotations\naccessible may or may not be relevant.\n\n@param property Property for which serializer is used, if any; null\n   when deserializing root values\n@since 2.3\n",
          "diff": "@@ -1,8 +1,8 @@\n-public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleSecondaryContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n     if (ser !\u003d null) {\n         if (ser instanceof ContextualSerializer) {\n             ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n         }\n     }\n     return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "handleContextualization",
            "newValue": "handleSecondaryContextualization"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Yet more work, trying to allow distinguishing of \u0027primary\u0027 and \u0027secondary\u0027 serializers, wrt property-context\n",
          "commitDate": "9/5/13, 10:37 PM",
          "commitName": "59fe29c7b3e4b8a02b36b3d4e4704a317cb4e813",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "9/5/13, 8:55 PM",
          "commitNameOld": "47ac6bd51e63b0cbfef2e431a94193433d15077a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleSecondaryContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser !\u003d null) {\n        if (ser instanceof ContextualSerializer) {\n            ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n        }\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 788,
          "functionName": "handleSecondaryContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method called for secondary property serializers (ones\nNOT directly created to serialize values of a POJO property\nbut instead created as a dependant serializer -- such as value serializers\nfor structured types, or serializers for root values)\nto handle details of resolving\n{@link ContextualDeserializer} with given property context.\nGiven that these serializers are not directly related to given property\n(or, in case of root value property, to any property), annotations\naccessible may or may not be relevant.\n\n@param property Property for which serializer is used, if any; null\n   when deserializing root values\n@since 2.3\n",
          "diff": "@@ -1,8 +1,8 @@\n-public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleSecondaryContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n     if (ser !\u003d null) {\n         if (ser instanceof ContextualSerializer) {\n             ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n         }\n     }\n     return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
            "newValue": "Method called for secondary property serializers (ones\nNOT directly created to serialize values of a POJO property\nbut instead created as a dependant serializer -- such as value serializers\nfor structured types, or serializers for root values)\nto handle details of resolving\n{@link ContextualDeserializer} with given property context.\nGiven that these serializers are not directly related to given property\n(or, in case of root value property, to any property), annotations\naccessible may or may not be relevant.\n\n@param property Property for which serializer is used, if any; null\n   when deserializing root values\n@since 2.3\n"
          }
        }
      ]
    },
    "47ac6bd51e63b0cbfef2e431a94193433d15077a": {
      "type": "Ybodychange",
      "commitMessage": "...\n",
      "commitDate": "9/5/13, 8:55 PM",
      "commitName": "47ac6bd51e63b0cbfef2e431a94193433d15077a",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/4/13, 10:20 PM",
      "commitNameOld": "b530c4de4431cec046c91cd944f75e07542e1720",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser !\u003d null) {\n        if (ser instanceof ContextualSerializer) {\n            ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n        }\n    }\n    return ser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
      "functionStartLine": 697,
      "functionName": "handleContextualization",
      "functionAnnotation": "",
      "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
      "diff": "@@ -1,9 +1,8 @@\n public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n-    if (ser \u003d\u003d null) {\n-        return ser;\n-    }\n-    if (ser instanceof ContextualSerializer) {\n-        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n+    if (ser !\u003d null) {\n+        if (ser instanceof ContextualSerializer) {\n+            ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n+        }\n     }\n     return ser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b530c4de4431cec046c91cd944f75e07542e1720": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange,Yannotationchange,Ydocchange)",
      "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
      "commitDate": "9/4/13, 10:20 PM",
      "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "_handleContextual",
            "newValue": "handleContextualization"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JsonSerializer\u003cObject\u003e",
            "newValue": "JsonSerializer\u003c?\u003e"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@SuppressWarnings(\"unchecked\")",
            "newValue": ""
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Groundwork for #225, centralizing contextualization of JsonSerializer instances\n",
          "commitDate": "9/4/13, 10:20 PM",
          "commitName": "b530c4de4431cec046c91cd944f75e07542e1720",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/21/13, 6:08 PM",
          "commitNameOld": "0ac36ba6864a16af24e683e55227962a102f50e0",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser \u003d\u003d null) {\n        return ser;\n    }\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
          "functionStartLine": 697,
          "functionName": "handleContextualization",
          "functionAnnotation": "",
          "functionDoc": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n",
          "diff": "@@ -1,7 +1,9 @@\n-@SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003c?\u003e handleContextualization(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser \u003d\u003d null) {\n+        return ser;\n+    }\n     if (ser instanceof ContextualSerializer) {\n         ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n-    return (JsonSerializer\u003cObject\u003e) ser;\n+    return ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Method that should be called to take of possible calls to resolve\n{@link ContextualSerializer} with given property context (if any;\nnone for root-value serializers).\n\n@param property Property for which serializer is used, if any; null\n   when serializing root values\n@since 2.3\n"
          }
        }
      ]
    },
    "6679caeac9198802d271f8659017bb63eebd615f": {
      "type": "Ymovefromfile",
      "commitMessage": "Further simplification; eliminated StdSerializerProvider\n",
      "commitDate": "2/1/12, 5:32 PM",
      "commitName": "6679caeac9198802d271f8659017bb63eebd615f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 3:26 PM",
      "commitNameOld": "a57eca7f47d03b26320348520e926dde0da68509",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return (JsonSerializer\u003cObject\u003e) ser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
      "functionStartLine": 1190,
      "functionName": "_handleContextual",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
        "newPath": "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
        "oldMethodName": "_handleContextual",
        "newMethodName": "_handleContextual"
      }
    },
    "f42e62927e7314a093fd2879030762a5dcc087fe": {
      "type": "Ybodychange",
      "commitMessage": "Starting to convert serializers similarly to use ContextualSerializer to get BeanProperty\n",
      "commitDate": "1/31/12, 4:16 PM",
      "commitName": "f42e62927e7314a093fd2879030762a5dcc087fe",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/24/12, 6:51 PM",
      "commitNameOld": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 6.89,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser instanceof ContextualSerializer) {\n        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n    }\n    return (JsonSerializer\u003cObject\u003e) ser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
      "functionStartLine": 842,
      "functionName": "_handleContextual",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n @SuppressWarnings(\"unchecked\")\n protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n-    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n-        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n+    if (ser instanceof ContextualSerializer) {\n+        ser \u003d ((ContextualSerializer) ser).createContextual(this, property);\n     }\n     return (JsonSerializer\u003cObject\u003e) ser;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
      "commitDate": "1/24/12, 6:51 PM",
      "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
          "commitDate": "1/24/12, 6:51 PM",
          "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/24/12, 5:50 PM",
          "commitNameOld": "d6f54ffc91de340202a5058055c49100964ab6ad",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n    }\n    return (JsonSerializer\u003cObject\u003e) ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
          "functionStartLine": 842,
          "functionName": "_handleContextual",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n @SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n-    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n-        return ser;\n+protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n+        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n     }\n-    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n-    if (ctxtSer !\u003d ser) {\n-        if (ctxtSer instanceof ResolvableSerializer) {\n-            ((ResolvableSerializer) ctxtSer).resolve(this);\n-        }\n-        ser \u003d ctxtSer;\n-    }\n-    return ser;\n+    return (JsonSerializer\u003cObject\u003e) ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "_handleContextualResolvable",
            "newValue": "_handleContextual"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
          "commitDate": "1/24/12, 6:51 PM",
          "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/24/12, 5:50 PM",
          "commitNameOld": "d6f54ffc91de340202a5058055c49100964ab6ad",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n    }\n    return (JsonSerializer\u003cObject\u003e) ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
          "functionStartLine": 842,
          "functionName": "_handleContextual",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n @SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n-    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n-        return ser;\n+protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n+        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n     }\n-    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n-    if (ctxtSer !\u003d ser) {\n-        if (ctxtSer instanceof ResolvableSerializer) {\n-            ((ResolvableSerializer) ctxtSer).resolve(this);\n-        }\n-        ser \u003d ctxtSer;\n-    }\n-    return ser;\n+    return (JsonSerializer\u003cObject\u003e) ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ser-JsonSerializer\u003cObject\u003e, property-BeanProperty]",
            "newValue": "[ser-JsonSerializer\u003c?\u003e, property-BeanProperty]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
          "commitDate": "1/24/12, 6:51 PM",
          "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/24/12, 5:50 PM",
          "commitNameOld": "d6f54ffc91de340202a5058055c49100964ab6ad",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n    }\n    return (JsonSerializer\u003cObject\u003e) ser;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
          "functionStartLine": 842,
          "functionName": "_handleContextual",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,7 @@\n @SuppressWarnings(\"unchecked\")\n-protected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n-    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n-        return ser;\n+protected JsonSerializer\u003cObject\u003e _handleContextual(JsonSerializer\u003c?\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (ser instanceof ContextualSerializer\u003c?\u003e) {\n+        ser \u003d ((ContextualSerializer\u003c?\u003e) ser).createContextual(this, property);\n     }\n-    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n-    if (ctxtSer !\u003d ser) {\n-        if (ctxtSer instanceof ResolvableSerializer) {\n-            ((ResolvableSerializer) ctxtSer).resolve(this);\n-        }\n-        ser \u003d ctxtSer;\n-    }\n-    return ser;\n+    return (JsonSerializer\u003cObject\u003e) ser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "56e8e6c7d057e6acf2d3dce98e6802cbbee48c57": {
      "type": "Ydocchange",
      "commitMessage": "Starting to add support for customizable \u0027is-empty\u0027 handling\n",
      "commitDate": "1/12/12, 4:09 PM",
      "commitName": "56e8e6c7d057e6acf2d3dce98e6802cbbee48c57",
      "commitAuthor": "Tatu",
      "commitDateOld": "12/24/11, 10:07 PM",
      "commitNameOld": "c3fbb3ad1e0b83ccc56a876fe9c7a2adfd4dd210",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 18.75,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n        return ser;\n    }\n    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n    if (ctxtSer !\u003d ser) {\n        if (ctxtSer instanceof ResolvableSerializer) {\n            ((ResolvableSerializer) ctxtSer).resolve(this);\n        }\n        ser \u003d ctxtSer;\n    }\n    return ser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
      "functionStartLine": 774,
      "functionName": "_handleContextualResolvable",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\n@since 1.8.5\n",
        "newValue": ""
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,14 @@\n+@SuppressWarnings(\"unchecked\")\n+protected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n+    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n+        return ser;\n+    }\n+    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n+    if (ctxtSer !\u003d ser) {\n+        if (ctxtSer instanceof ResolvableSerializer) {\n+            ((ResolvableSerializer) ctxtSer).resolve(this);\n+        }\n+        ser \u003d ctxtSer;\n+    }\n+    return ser;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@SuppressWarnings(\"unchecked\")\nprotected JsonSerializer\u003cObject\u003e _handleContextualResolvable(JsonSerializer\u003cObject\u003e ser, BeanProperty property) throws JsonMappingException {\n    if (!(ser instanceof ContextualSerializer\u003c?\u003e)) {\n        return ser;\n    }\n    JsonSerializer\u003cObject\u003e ctxtSer \u003d ((ContextualSerializer\u003cObject\u003e) ser).createContextual(_config, property);\n    if (ctxtSer !\u003d ser) {\n        if (ctxtSer instanceof ResolvableSerializer) {\n            ((ResolvableSerializer) ctxtSer).resolve(this);\n        }\n        ser \u003d ctxtSer;\n    }\n    return ser;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/StdSerializerProvider.java",
      "functionStartLine": 790,
      "functionName": "_handleContextualResolvable",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "\n@since 1.8.5\n"
    }
  }
}