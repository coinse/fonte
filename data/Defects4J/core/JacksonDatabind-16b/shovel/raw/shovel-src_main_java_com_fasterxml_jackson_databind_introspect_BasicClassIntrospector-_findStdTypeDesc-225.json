{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicClassIntrospector.java",
  "functionName": "_findStdTypeDesc",
  "functionId": "_findStdTypeDesc___type-JavaType",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
  "functionAnnotation": "",
  "functionDoc": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n",
  "functionStartLine": 225,
  "functionEndLine": 244,
  "numCommitsSeen": 35,
  "timeTaken": 731,
  "changeHistory": [
    "3eb74af17d39f5d6017e579590174c3941210d82",
    "1a7c6f905711ecf704576024dfead79aee47b320",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "3eb74af17d39f5d6017e579590174c3941210d82": "Ymultichange(Yrename,Ybodychange)",
    "1a7c6f905711ecf704576024dfead79aee47b320": "Ydocchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3eb74af17d39f5d6017e579590174c3941210d82": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Implement #550\n",
      "commitDate": "9/23/14, 2:04 PM",
      "commitName": "3eb74af17d39f5d6017e579590174c3941210d82",
      "commitAuthor": "Cowtowncoder",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Implement #550\n",
          "commitDate": "9/23/14, 2:04 PM",
          "commitName": "3eb74af17d39f5d6017e579590174c3941210d82",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "5/7/14, 10:51 PM",
          "commitNameOld": "4e387c241b7c92f2e4d862f6217189e55472125e",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 138.63,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "actualSource": "protected BasicBeanDescription _findStdTypeDesc(JavaType type) {\n    Class\u003c?\u003e cls \u003d type.getRawClass();\n    if (cls.isPrimitive()) {\n        if (cls \u003d\u003d Boolean.TYPE) {\n            return BOOLEAN_DESC;\n        }\n        if (cls \u003d\u003d Integer.TYPE) {\n            return INT_DESC;\n        }\n        if (cls \u003d\u003d Long.TYPE) {\n            return LONG_DESC;\n        }\n    } else {\n        if (cls \u003d\u003d String.class) {\n            return STRING_DESC;\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
          "functionStartLine": 225,
          "functionName": "_findStdTypeDesc",
          "functionAnnotation": "",
          "functionDoc": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n",
          "diff": "@@ -1,16 +1,19 @@\n-protected BasicBeanDescription _findCachedDesc(JavaType type) {\n+protected BasicBeanDescription _findStdTypeDesc(JavaType type) {\n     Class\u003c?\u003e cls \u003d type.getRawClass();\n-    if (cls \u003d\u003d String.class) {\n-        return STRING_DESC;\n-    }\n-    if (cls \u003d\u003d Boolean.TYPE) {\n-        return BOOLEAN_DESC;\n-    }\n-    if (cls \u003d\u003d Integer.TYPE) {\n-        return INT_DESC;\n-    }\n-    if (cls \u003d\u003d Long.TYPE) {\n-        return LONG_DESC;\n+    if (cls.isPrimitive()) {\n+        if (cls \u003d\u003d Boolean.TYPE) {\n+            return BOOLEAN_DESC;\n+        }\n+        if (cls \u003d\u003d Integer.TYPE) {\n+            return INT_DESC;\n+        }\n+        if (cls \u003d\u003d Long.TYPE) {\n+            return LONG_DESC;\n+        }\n+    } else {\n+        if (cls \u003d\u003d String.class) {\n+            return STRING_DESC;\n+        }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "_findCachedDesc",
            "newValue": "_findStdTypeDesc"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implement #550\n",
          "commitDate": "9/23/14, 2:04 PM",
          "commitName": "3eb74af17d39f5d6017e579590174c3941210d82",
          "commitAuthor": "Cowtowncoder",
          "commitDateOld": "5/7/14, 10:51 PM",
          "commitNameOld": "4e387c241b7c92f2e4d862f6217189e55472125e",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 138.63,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "actualSource": "protected BasicBeanDescription _findStdTypeDesc(JavaType type) {\n    Class\u003c?\u003e cls \u003d type.getRawClass();\n    if (cls.isPrimitive()) {\n        if (cls \u003d\u003d Boolean.TYPE) {\n            return BOOLEAN_DESC;\n        }\n        if (cls \u003d\u003d Integer.TYPE) {\n            return INT_DESC;\n        }\n        if (cls \u003d\u003d Long.TYPE) {\n            return LONG_DESC;\n        }\n    } else {\n        if (cls \u003d\u003d String.class) {\n            return STRING_DESC;\n        }\n    }\n    return null;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
          "functionStartLine": 225,
          "functionName": "_findStdTypeDesc",
          "functionAnnotation": "",
          "functionDoc": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n",
          "diff": "@@ -1,16 +1,19 @@\n-protected BasicBeanDescription _findCachedDesc(JavaType type) {\n+protected BasicBeanDescription _findStdTypeDesc(JavaType type) {\n     Class\u003c?\u003e cls \u003d type.getRawClass();\n-    if (cls \u003d\u003d String.class) {\n-        return STRING_DESC;\n-    }\n-    if (cls \u003d\u003d Boolean.TYPE) {\n-        return BOOLEAN_DESC;\n-    }\n-    if (cls \u003d\u003d Integer.TYPE) {\n-        return INT_DESC;\n-    }\n-    if (cls \u003d\u003d Long.TYPE) {\n-        return LONG_DESC;\n+    if (cls.isPrimitive()) {\n+        if (cls \u003d\u003d Boolean.TYPE) {\n+            return BOOLEAN_DESC;\n+        }\n+        if (cls \u003d\u003d Integer.TYPE) {\n+            return INT_DESC;\n+        }\n+        if (cls \u003d\u003d Long.TYPE) {\n+            return LONG_DESC;\n+        }\n+    } else {\n+        if (cls \u003d\u003d String.class) {\n+            return STRING_DESC;\n+        }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1a7c6f905711ecf704576024dfead79aee47b320": {
      "type": "Ydocchange",
      "commitMessage": "javadoc cleanup\n",
      "commitDate": "1/22/12, 1:03 PM",
      "commitName": "1a7c6f905711ecf704576024dfead79aee47b320",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/18/12, 8:25 PM",
      "commitNameOld": "c733a7f1e744121343da2851df27b581aab79e68",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 3.69,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "protected BasicBeanDescription _findCachedDesc(JavaType type) {\n    Class\u003c?\u003e cls \u003d type.getRawClass();\n    if (cls \u003d\u003d String.class) {\n        return STRING_DESC;\n    }\n    if (cls \u003d\u003d Boolean.TYPE) {\n        return BOOLEAN_DESC;\n    }\n    if (cls \u003d\u003d Integer.TYPE) {\n        return INT_DESC;\n    }\n    if (cls \u003d\u003d Long.TYPE) {\n        return LONG_DESC;\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
      "functionStartLine": 163,
      "functionName": "_findCachedDesc",
      "functionAnnotation": "",
      "functionDoc": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n\n@since 1.9\n",
        "newValue": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,16 @@\n+protected BasicBeanDescription _findCachedDesc(JavaType type) {\n+    Class\u003c?\u003e cls \u003d type.getRawClass();\n+    if (cls \u003d\u003d String.class) {\n+        return STRING_DESC;\n+    }\n+    if (cls \u003d\u003d Boolean.TYPE) {\n+        return BOOLEAN_DESC;\n+    }\n+    if (cls \u003d\u003d Integer.TYPE) {\n+        return INT_DESC;\n+    }\n+    if (cls \u003d\u003d Long.TYPE) {\n+        return LONG_DESC;\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected BasicBeanDescription _findCachedDesc(JavaType type) {\n    Class\u003c?\u003e cls \u003d type.getRawClass();\n    if (cls \u003d\u003d String.class) {\n        return STRING_DESC;\n    }\n    if (cls \u003d\u003d Boolean.TYPE) {\n        return BOOLEAN_DESC;\n    }\n    if (cls \u003d\u003d Integer.TYPE) {\n        return INT_DESC;\n    }\n    if (cls \u003d\u003d Long.TYPE) {\n        return LONG_DESC;\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
      "functionStartLine": 198,
      "functionName": "_findCachedDesc",
      "functionAnnotation": "",
      "functionDoc": "Method called to see if type is one of core JDK types\nthat we have cached for efficiency.\n\n@since 1.9\n"
    }
  }
}