{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JacksonAnnotationIntrospector.java",
  "functionName": "findSerializationInclusion",
  "functionId": "findSerializationInclusion___a-Annotated__defValue-JsonInclude.Include",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 351,
  "functionEndLine": 375,
  "numCommitsSeen": 85,
  "timeTaken": 3047,
  "changeHistory": [
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
    "07bcd046b2b9b03802a8d1695ec2f6059cbd34f4",
    "2aa648459c1ecc29603f1917f5f91be686d764d0",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": "Ybodychange",
    "07bcd046b2b9b03802a8d1695ec2f6059cbd34f4": "Ybodychange",
    "2aa648459c1ecc29603f1917f5f91be686d764d0": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": "Ymultichange(Ybodychange,Yannotationchange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": {
      "type": "Ybodychange",
      "commitMessage": "Implement #133\n",
      "commitDate": "9/25/14, 5:28 PM",
      "commitName": "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "5/19/14, 11:42 PM",
      "commitNameOld": "46c6679d0b88035e0083e27890a421e8a8466242",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 128.74,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n    JsonInclude inc \u003d _findAnnotation(a, JsonInclude.class);\n    if (inc !\u003d null) {\n        return inc.value();\n    }\n    JsonSerialize ann \u003d _findAnnotation(a, JsonSerialize.class);\n    if (ann !\u003d null) {\n        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n        switch(i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n            case DEFAULT_INCLUSION:\n                break;\n        }\n    }\n    return defValue;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 351,
      "functionName": "findSerializationInclusion",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n @Override\n public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n-    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n+    JsonInclude inc \u003d _findAnnotation(a, JsonInclude.class);\n     if (inc !\u003d null) {\n         return inc.value();\n     }\n-    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n+    JsonSerialize ann \u003d _findAnnotation(a, JsonSerialize.class);\n     if (ann !\u003d null) {\n         @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n         switch(i2) {\n             case ALWAYS:\n                 return JsonInclude.Include.ALWAYS;\n             case NON_NULL:\n                 return JsonInclude.Include.NON_NULL;\n             case NON_DEFAULT:\n                 return JsonInclude.Include.NON_DEFAULT;\n             case NON_EMPTY:\n                 return JsonInclude.Include.NON_EMPTY;\n             case DEFAULT_INCLUSION:\n                 break;\n         }\n     }\n     return defValue;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "07bcd046b2b9b03802a8d1695ec2f6059cbd34f4": {
      "type": "Ybodychange",
      "commitMessage": "Fix #280\n",
      "commitDate": "8/6/13, 7:56 PM",
      "commitName": "07bcd046b2b9b03802a8d1695ec2f6059cbd34f4",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/26/13, 4:18 PM",
      "commitNameOld": "8bdd49b36c8c05483669f6bd50b3839016f78983",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 11.15,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n    if (inc !\u003d null) {\n        return inc.value();\n    }\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n        switch(i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n            case DEFAULT_INCLUSION:\n                break;\n        }\n    }\n    return defValue;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 320,
      "functionName": "findSerializationInclusion",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,24 @@\n @Override\n public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n     JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n     if (inc !\u003d null) {\n         return inc.value();\n     }\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n         @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n         switch(i2) {\n             case ALWAYS:\n                 return JsonInclude.Include.ALWAYS;\n             case NON_NULL:\n                 return JsonInclude.Include.NON_NULL;\n             case NON_DEFAULT:\n                 return JsonInclude.Include.NON_DEFAULT;\n             case NON_EMPTY:\n                 return JsonInclude.Include.NON_EMPTY;\n+            case DEFAULT_INCLUSION:\n+                break;\n         }\n     }\n     return defValue;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2aa648459c1ecc29603f1917f5f91be686d764d0": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "Implement [JACKSON-751], add @JsonInclude\n",
      "commitDate": "1/14/12, 10:25 PM",
      "commitName": "2aa648459c1ecc29603f1917f5f91be686d764d0",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Implement [JACKSON-751], add @JsonInclude\n",
          "commitDate": "1/14/12, 10:25 PM",
          "commitName": "2aa648459c1ecc29603f1917f5f91be686d764d0",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/13/12, 10:25 PM",
          "commitNameOld": "4dc01e735c57e1a3d6e79f819713efaf77998edb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n    if (inc !\u003d null) {\n        return inc.value();\n    }\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n        switch(i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n        }\n    }\n    return defValue;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
          "functionStartLine": 300,
          "functionName": "findSerializationInclusion",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,22 @@\n @Override\n-public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n+public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n+    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n+    if (inc !\u003d null) {\n+        return inc.value();\n+    }\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n-        return ann.include();\n+        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n+        switch(i2) {\n+            case ALWAYS:\n+                return JsonInclude.Include.ALWAYS;\n+            case NON_NULL:\n+                return JsonInclude.Include.NON_NULL;\n+            case NON_DEFAULT:\n+                return JsonInclude.Include.NON_DEFAULT;\n+            case NON_EMPTY:\n+                return JsonInclude.Include.NON_EMPTY;\n+        }\n     }\n     return defValue;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[a-Annotated, defValue-JsonSerialize.Inclusion]",
            "newValue": "[a-Annotated, defValue-JsonInclude.Include]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Implement [JACKSON-751], add @JsonInclude\n",
          "commitDate": "1/14/12, 10:25 PM",
          "commitName": "2aa648459c1ecc29603f1917f5f91be686d764d0",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/13/12, 10:25 PM",
          "commitNameOld": "4dc01e735c57e1a3d6e79f819713efaf77998edb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n    if (inc !\u003d null) {\n        return inc.value();\n    }\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n        switch(i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n        }\n    }\n    return defValue;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
          "functionStartLine": 300,
          "functionName": "findSerializationInclusion",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,22 @@\n @Override\n-public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n+public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n+    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n+    if (inc !\u003d null) {\n+        return inc.value();\n+    }\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n-        return ann.include();\n+        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n+        switch(i2) {\n+            case ALWAYS:\n+                return JsonInclude.Include.ALWAYS;\n+            case NON_NULL:\n+                return JsonInclude.Include.NON_NULL;\n+            case NON_DEFAULT:\n+                return JsonInclude.Include.NON_DEFAULT;\n+            case NON_EMPTY:\n+                return JsonInclude.Include.NON_EMPTY;\n+        }\n     }\n     return defValue;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JsonSerialize.Inclusion",
            "newValue": "JsonInclude.Include"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implement [JACKSON-751], add @JsonInclude\n",
          "commitDate": "1/14/12, 10:25 PM",
          "commitName": "2aa648459c1ecc29603f1917f5f91be686d764d0",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/13/12, 10:25 PM",
          "commitNameOld": "4dc01e735c57e1a3d6e79f819713efaf77998edb",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n    if (inc !\u003d null) {\n        return inc.value();\n    }\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n        switch(i2) {\n            case ALWAYS:\n                return JsonInclude.Include.ALWAYS;\n            case NON_NULL:\n                return JsonInclude.Include.NON_NULL;\n            case NON_DEFAULT:\n                return JsonInclude.Include.NON_DEFAULT;\n            case NON_EMPTY:\n                return JsonInclude.Include.NON_EMPTY;\n        }\n    }\n    return defValue;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
          "functionStartLine": 300,
          "functionName": "findSerializationInclusion",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,22 @@\n @Override\n-public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n+public JsonInclude.Include findSerializationInclusion(Annotated a, JsonInclude.Include defValue) {\n+    JsonInclude inc \u003d a.getAnnotation(JsonInclude.class);\n+    if (inc !\u003d null) {\n+        return inc.value();\n+    }\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n-        return ann.include();\n+        @SuppressWarnings(\"deprecation\") JsonSerialize.Inclusion i2 \u003d ann.include();\n+        switch(i2) {\n+            case ALWAYS:\n+                return JsonInclude.Include.ALWAYS;\n+            case NON_NULL:\n+                return JsonInclude.Include.NON_NULL;\n+            case NON_DEFAULT:\n+                return JsonInclude.Include.NON_DEFAULT;\n+            case NON_EMPTY:\n+                return JsonInclude.Include.NON_EMPTY;\n+        }\n     }\n     return defValue;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "Yet more clean up\n",
      "commitDate": "12/23/11, 8:38 AM",
      "commitName": "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Yet more clean up\n",
          "commitDate": "12/23/11, 8:38 AM",
          "commitName": "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/23/11, 12:31 AM",
          "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        return ann.include();\n    }\n    return defValue;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
          "functionStartLine": 338,
          "functionName": "findSerializationInclusion",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,8 @@\n-@SuppressWarnings(\"deprecation\")\n @Override\n public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n         return ann.include();\n     }\n-    JsonWriteNullProperties oldAnn \u003d a.getAnnotation(JsonWriteNullProperties.class);\n-    if (oldAnn !\u003d null) {\n-        boolean writeNulls \u003d oldAnn.value();\n-        return writeNulls ? JsonSerialize.Inclusion.ALWAYS : JsonSerialize.Inclusion.NON_NULL;\n-    }\n     return defValue;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Yet more clean up\n",
          "commitDate": "12/23/11, 8:38 AM",
          "commitName": "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "12/23/11, 12:31 AM",
          "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        return ann.include();\n    }\n    return defValue;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
          "functionStartLine": 338,
          "functionName": "findSerializationInclusion",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,8 @@\n-@SuppressWarnings(\"deprecation\")\n @Override\n public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n     JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n     if (ann !\u003d null) {\n         return ann.include();\n     }\n-    JsonWriteNullProperties oldAnn \u003d a.getAnnotation(JsonWriteNullProperties.class);\n-    if (oldAnn !\u003d null) {\n-        boolean writeNulls \u003d oldAnn.value();\n-        return writeNulls ? JsonSerialize.Inclusion.ALWAYS : JsonSerialize.Inclusion.NON_NULL;\n-    }\n     return defValue;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@SuppressWarnings(\"deprecation\"),@Override",
            "newValue": "@Override"
          }
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,14 @@\n+@SuppressWarnings(\"deprecation\")\n+@Override\n+public JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n+    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n+    if (ann !\u003d null) {\n+        return ann.include();\n+    }\n+    JsonWriteNullProperties oldAnn \u003d a.getAnnotation(JsonWriteNullProperties.class);\n+    if (oldAnn !\u003d null) {\n+        boolean writeNulls \u003d oldAnn.value();\n+        return writeNulls ? JsonSerialize.Inclusion.ALWAYS : JsonSerialize.Inclusion.NON_NULL;\n+    }\n+    return defValue;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@SuppressWarnings(\"deprecation\")\n@Override\npublic JsonSerialize.Inclusion findSerializationInclusion(Annotated a, JsonSerialize.Inclusion defValue) {\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        return ann.include();\n    }\n    JsonWriteNullProperties oldAnn \u003d a.getAnnotation(JsonWriteNullProperties.class);\n    if (oldAnn !\u003d null) {\n        boolean writeNulls \u003d oldAnn.value();\n        return writeNulls ? JsonSerialize.Inclusion.ALWAYS : JsonSerialize.Inclusion.NON_NULL;\n    }\n    return defValue;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 342,
      "functionName": "findSerializationInclusion",
      "functionAnnotation": "@SuppressWarnings(\"deprecation\"),@Override",
      "functionDoc": ""
    }
  }
}