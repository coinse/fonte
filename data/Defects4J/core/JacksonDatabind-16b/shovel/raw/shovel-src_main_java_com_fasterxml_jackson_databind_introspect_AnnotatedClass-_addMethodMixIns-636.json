{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotatedClass.java",
  "functionName": "_addMethodMixIns",
  "functionId": "_addMethodMixIns___targetClass-Class__?____methods-AnnotatedMethodMap__mixInCls-Class__?____mixIns-AnnotatedMethodMap",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 636,
  "functionEndLine": 669,
  "numCommitsSeen": 45,
  "timeTaken": 1525,
  "changeHistory": [
    "fd0f1fefdc19593a040b3dce857715d613cb6458",
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
    "920bb4e447b7ff1419c926277ebac4c9406de0f5",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "fd0f1fefdc19593a040b3dce857715d613cb6458": "Ybodychange",
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": "Ymultichange(Yparameterchange,Ybodychange)",
    "920bb4e447b7ff1419c926277ebac4c9406de0f5": "Ymultichange(Yparameterchange,Ybodychange)",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd0f1fefdc19593a040b3dce857715d613cb6458": {
      "type": "Ybodychange",
      "commitMessage": "Fix #515\n",
      "commitDate": "8/13/14, 4:04 PM",
      "commitName": "fd0f1fefdc19593a040b3dce857715d613cb6458",
      "commitAuthor": "Tatu",
      "commitDateOld": "4/22/14, 7:17 PM",
      "commitNameOld": "d0b0273b9a04649cbc044ac092cc0eab0dc698f9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 112.87,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n    parents.add(mixInCls);\n    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n    for (Class\u003c?\u003e mixin : parents) {\n        for (Method m : mixin.getDeclaredMethods()) {\n            if (!_isIncludableMemberMethod(m)) {\n                continue;\n            }\n            AnnotatedMethod am \u003d methods.find(m);\n            if (am !\u003d null) {\n                _addMixUnders(m, am);\n            } else {\n                am \u003d mixIns.find(m);\n                if (am !\u003d null) {\n                    _addMixUnders(m, am);\n                } else {\n                    mixIns.add(_constructMethod(m));\n                }\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 634,
      "functionName": "_addMethodMixIns",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,23 @@\n protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n     List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n     parents.add(mixInCls);\n     ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n     for (Class\u003c?\u003e mixin : parents) {\n         for (Method m : mixin.getDeclaredMethods()) {\n             if (!_isIncludableMemberMethod(m)) {\n                 continue;\n             }\n             AnnotatedMethod am \u003d methods.find(m);\n             if (am !\u003d null) {\n                 _addMixUnders(m, am);\n             } else {\n-                mixIns.add(_constructMethod(m));\n+                am \u003d mixIns.find(m);\n+                if (am !\u003d null) {\n+                    _addMixUnders(m, am);\n+                } else {\n+                    mixIns.add(_constructMethod(m));\n+                }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
      "commitDate": "4/28/12, 12:43 AM",
      "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
          "commitDate": "4/28/12, 12:43 AM",
          "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/27/12, 7:56 PM",
          "commitNameOld": "201c8ffd7931aa552fe42f077e23917695faf29a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n    parents.add(mixInCls);\n    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n    for (Class\u003c?\u003e mixin : parents) {\n        for (Method m : mixin.getDeclaredMethods()) {\n            if (!_isIncludableMemberMethod(m)) {\n                continue;\n            }\n            AnnotatedMethod am \u003d methods.find(m);\n            if (am !\u003d null) {\n                _addMixUnders(m, am);\n            } else {\n                mixIns.add(_constructMethod(m));\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 629,
          "functionName": "_addMethodMixIns",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,18 @@\n-protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n-    for (Method m : mixInCls.getDeclaredMethods()) {\n-        if (!_isIncludableMemberMethod(m)) {\n-            continue;\n-        }\n-        AnnotatedMethod am \u003d methods.find(m);\n-        if (am !\u003d null) {\n-            _addMixUnders(m, am);\n-        } else {\n-            mixIns.add(_constructMethod(m));\n+protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n+    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n+    parents.add(mixInCls);\n+    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n+    for (Class\u003c?\u003e mixin : parents) {\n+        for (Method m : mixin.getDeclaredMethods()) {\n+            if (!_isIncludableMemberMethod(m)) {\n+                continue;\n+            }\n+            AnnotatedMethod am \u003d methods.find(m);\n+            if (am !\u003d null) {\n+                _addMixUnders(m, am);\n+            } else {\n+                mixIns.add(_constructMethod(m));\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[methods-AnnotatedMethodMap, mixInCls-Class\u003c?\u003e, mixIns-AnnotatedMethodMap]",
            "newValue": "[targetClass-Class\u003c?\u003e, methods-AnnotatedMethodMap, mixInCls-Class\u003c?\u003e, mixIns-AnnotatedMethodMap]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
          "commitDate": "4/28/12, 12:43 AM",
          "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/27/12, 7:56 PM",
          "commitNameOld": "201c8ffd7931aa552fe42f077e23917695faf29a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n    parents.add(mixInCls);\n    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n    for (Class\u003c?\u003e mixin : parents) {\n        for (Method m : mixin.getDeclaredMethods()) {\n            if (!_isIncludableMemberMethod(m)) {\n                continue;\n            }\n            AnnotatedMethod am \u003d methods.find(m);\n            if (am !\u003d null) {\n                _addMixUnders(m, am);\n            } else {\n                mixIns.add(_constructMethod(m));\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 629,
          "functionName": "_addMethodMixIns",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,18 @@\n-protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n-    for (Method m : mixInCls.getDeclaredMethods()) {\n-        if (!_isIncludableMemberMethod(m)) {\n-            continue;\n-        }\n-        AnnotatedMethod am \u003d methods.find(m);\n-        if (am !\u003d null) {\n-            _addMixUnders(m, am);\n-        } else {\n-            mixIns.add(_constructMethod(m));\n+protected void _addMethodMixIns(Class\u003c?\u003e targetClass, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n+    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n+    parents.add(mixInCls);\n+    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n+    for (Class\u003c?\u003e mixin : parents) {\n+        for (Method m : mixin.getDeclaredMethods()) {\n+            if (!_isIncludableMemberMethod(m)) {\n+                continue;\n+            }\n+            AnnotatedMethod am \u003d methods.find(m);\n+            if (am !\u003d null) {\n+                _addMixUnders(m, am);\n+            } else {\n+                mixIns.add(_constructMethod(m));\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "920bb4e447b7ff1419c926277ebac4c9406de0f5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Completed refactoring of AnnotatedClass, now fully lazily initialized\n",
      "commitDate": "1/22/12, 10:00 PM",
      "commitName": "920bb4e447b7ff1419c926277ebac4c9406de0f5",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Completed refactoring of AnnotatedClass, now fully lazily initialized\n",
          "commitDate": "1/22/12, 10:00 PM",
          "commitName": "920bb4e447b7ff1419c926277ebac4c9406de0f5",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:49 PM",
          "commitNameOld": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    for (Method m : mixInCls.getDeclaredMethods()) {\n        if (!_isIncludableMemberMethod(m)) {\n            continue;\n        }\n        AnnotatedMethod am \u003d methods.find(m);\n        if (am !\u003d null) {\n            _addMixUnders(m, am);\n        } else {\n            mixIns.add(_constructMethod(m));\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 629,
          "functionName": "_addMethodMixIns",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-protected void _addMethodMixIns(MethodFilter methodFilter, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n+protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n     for (Method m : mixInCls.getDeclaredMethods()) {\n-        if (!_isIncludableMethod(m, methodFilter)) {\n+        if (!_isIncludableMemberMethod(m)) {\n             continue;\n         }\n         AnnotatedMethod am \u003d methods.find(m);\n         if (am !\u003d null) {\n             _addMixUnders(m, am);\n         } else {\n             mixIns.add(_constructMethod(m));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[methodFilter-MethodFilter, methods-AnnotatedMethodMap, mixInCls-Class\u003c?\u003e, mixIns-AnnotatedMethodMap]",
            "newValue": "[methods-AnnotatedMethodMap, mixInCls-Class\u003c?\u003e, mixIns-AnnotatedMethodMap]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Completed refactoring of AnnotatedClass, now fully lazily initialized\n",
          "commitDate": "1/22/12, 10:00 PM",
          "commitName": "920bb4e447b7ff1419c926277ebac4c9406de0f5",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 9:49 PM",
          "commitNameOld": "cad988161f95e549ba352037223574a90a5a255a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    for (Method m : mixInCls.getDeclaredMethods()) {\n        if (!_isIncludableMemberMethod(m)) {\n            continue;\n        }\n        AnnotatedMethod am \u003d methods.find(m);\n        if (am !\u003d null) {\n            _addMixUnders(m, am);\n        } else {\n            mixIns.add(_constructMethod(m));\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 629,
          "functionName": "_addMethodMixIns",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n-protected void _addMethodMixIns(MethodFilter methodFilter, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n+protected void _addMethodMixIns(AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n     for (Method m : mixInCls.getDeclaredMethods()) {\n-        if (!_isIncludableMethod(m, methodFilter)) {\n+        if (!_isIncludableMemberMethod(m)) {\n             continue;\n         }\n         AnnotatedMethod am \u003d methods.find(m);\n         if (am !\u003d null) {\n             _addMixUnders(m, am);\n         } else {\n             mixIns.add(_constructMethod(m));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,13 @@\n+protected void _addMethodMixIns(MethodFilter methodFilter, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n+    for (Method m : mixInCls.getDeclaredMethods()) {\n+        if (!_isIncludableMethod(m, methodFilter)) {\n+            continue;\n+        }\n+        AnnotatedMethod am \u003d methods.find(m);\n+        if (am !\u003d null) {\n+            _addMixUnders(m, am);\n+        } else {\n+            mixIns.add(_constructMethod(m));\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void _addMethodMixIns(MethodFilter methodFilter, AnnotatedMethodMap methods, Class\u003c?\u003e mixInCls, AnnotatedMethodMap mixIns) {\n    for (Method m : mixInCls.getDeclaredMethods()) {\n        if (!_isIncludableMethod(m, methodFilter)) {\n            continue;\n        }\n        AnnotatedMethod am \u003d methods.find(m);\n        if (am !\u003d null) {\n            _addMixUnders(m, am);\n        } else {\n            mixIns.add(_constructMethod(m));\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 653,
      "functionName": "_addMethodMixIns",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}