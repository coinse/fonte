{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BeanSerializerFactory.java",
  "functionName": "findBeanSerializer",
  "functionId": "findBeanSerializer___prov-SerializerProvider__type-JavaType__beanDesc-BeanDescription",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
  "functionStartLine": 259,
  "functionEndLine": 271,
  "numCommitsSeen": 149,
  "timeTaken": 3363,
  "changeHistory": [
    "8416dde89136e2fa8a6f996ce3196560eba1dd26",
    "315ab606b14b830668b2d69f99d8b90132d89919",
    "65b73d92974414c018dec24a67c285ae484654c8",
    "15d6ea2adef8ade224b6479581eaee7d9acd592a",
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
    "28bde0726d83be7f70ca4586abee6f536bfc8885",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "8416dde89136e2fa8a6f996ce3196560eba1dd26": "Yannotationchange",
    "315ab606b14b830668b2d69f99d8b90132d89919": "Ybodychange",
    "65b73d92974414c018dec24a67c285ae484654c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "15d6ea2adef8ade224b6479581eaee7d9acd592a": "Ybodychange",
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807": "Ymultichange(Yparameterchange,Ybodychange)",
    "28bde0726d83be7f70ca4586abee6f536bfc8885": "Yparameterchange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8416dde89136e2fa8a6f996ce3196560eba1dd26": {
      "type": "Yannotationchange",
      "commitMessage": "Completed [Issue#120] implementation\n",
      "commitDate": "12/1/12, 11:40 PM",
      "commitName": "8416dde89136e2fa8a6f996ce3196560eba1dd26",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/30/12, 9:54 PM",
      "commitNameOld": "315ab606b14b830668b2d69f99d8b90132d89919",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        if (!type.isEnumType()) {\n            return null;\n        }\n    }\n    return constructBeanSerializer(prov, beanDesc);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
      "functionStartLine": 245,
      "functionName": "findBeanSerializer",
      "functionAnnotation": "",
      "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
      "diff": "@@ -1,9 +1,8 @@\n-@SuppressWarnings(\"unchecked\")\n public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         if (!type.isEnumType()) {\n             return null;\n         }\n     }\n     return constructBeanSerializer(prov, beanDesc);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "@SuppressWarnings(\"unchecked\")",
        "newValue": ""
      }
    },
    "315ab606b14b830668b2d69f99d8b90132d89919": {
      "type": "Ybodychange",
      "commitMessage": "almost completed #120, only missing key serializer post-processing\n",
      "commitDate": "11/30/12, 9:54 PM",
      "commitName": "315ab606b14b830668b2d69f99d8b90132d89919",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "10/6/12, 10:45 AM",
      "commitNameOld": "0e114114d330caaf6a56e63ab4d8a3ee1ba3e350",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 55.51,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        if (!type.isEnumType()) {\n            return null;\n        }\n    }\n    return constructBeanSerializer(prov, beanDesc);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
      "functionStartLine": 246,
      "functionName": "findBeanSerializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
      "diff": "@@ -1,15 +1,9 @@\n @SuppressWarnings(\"unchecked\")\n public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         if (!type.isEnumType()) {\n             return null;\n         }\n     }\n-    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc);\n-    if (_factoryConfig.hasSerializerModifiers()) {\n-        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n-            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n-        }\n-    }\n-    return serializer;\n+    return constructBeanSerializer(prov, beanDesc);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "65b73d92974414c018dec24a67c285ae484654c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Starting to clean up SerializerFactory, to remove/reduce passing of BeanProperty, which in general is not available at time of call.\n",
      "commitDate": "9/30/12, 12:04 PM",
      "commitName": "65b73d92974414c018dec24a67c285ae484654c8",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Starting to clean up SerializerFactory, to remove/reduce passing of BeanProperty, which in general is not available at time of call.\n",
          "commitDate": "9/30/12, 12:04 PM",
          "commitName": "65b73d92974414c018dec24a67c285ae484654c8",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/24/12, 1:33 PM",
          "commitNameOld": "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 36.94,
          "commitsBetweenForRepo": 66,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        if (!type.isEnumType()) {\n            return null;\n        }\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
          "functionStartLine": 233,
          "functionName": "findBeanSerializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
          "diff": "@@ -1,15 +1,15 @@\n @SuppressWarnings(\"unchecked\")\n-public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         if (!type.isEnumType()) {\n             return null;\n         }\n     }\n-    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n+    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n             serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[prov-SerializerProvider, type-JavaType, beanDesc-BeanDescription, property-BeanProperty]",
            "newValue": "[prov-SerializerProvider, type-JavaType, beanDesc-BeanDescription]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Starting to clean up SerializerFactory, to remove/reduce passing of BeanProperty, which in general is not available at time of call.\n",
          "commitDate": "9/30/12, 12:04 PM",
          "commitName": "65b73d92974414c018dec24a67c285ae484654c8",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "8/24/12, 1:33 PM",
          "commitNameOld": "88040e2fa32c3bff2ce18e40a55807a3fca3d2d2",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 36.94,
          "commitsBetweenForRepo": 66,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        if (!type.isEnumType()) {\n            return null;\n        }\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
          "functionStartLine": 233,
          "functionName": "findBeanSerializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
          "diff": "@@ -1,15 +1,15 @@\n @SuppressWarnings(\"unchecked\")\n-public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         if (!type.isEnumType()) {\n             return null;\n         }\n     }\n-    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n+    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n             serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "15d6ea2adef8ade224b6479581eaee7d9acd592a": {
      "type": "Ybodychange",
      "commitMessage": "Implemented [Issue#25] (enums as JSON Object); started implementation of [Issue#40] (Collections as JSON Objects)\n",
      "commitDate": "8/3/12, 6:29 PM",
      "commitName": "15d6ea2adef8ade224b6479581eaee7d9acd592a",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "7/31/12, 10:24 PM",
      "commitNameOld": "6cada0a47ed675fffe15697968dfef68864b57e7",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 2.84,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        if (!type.isEnumType()) {\n            return null;\n        }\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
      "functionStartLine": 220,
      "functionName": "findBeanSerializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
      "diff": "@@ -1,13 +1,15 @@\n @SuppressWarnings(\"unchecked\")\n public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n-        return null;\n+        if (!type.isEnumType()) {\n+            return null;\n+        }\n     }\n     JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n             serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
      "commitDate": "1/24/12, 6:51 PM",
      "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
          "commitDate": "1/24/12, 6:51 PM",
          "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 10:57 PM",
          "commitNameOld": "28bde0726d83be7f70ca4586abee6f536bfc8885",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.83,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        return null;\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
          "functionStartLine": 293,
          "functionName": "findBeanSerializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
          "diff": "@@ -1,13 +1,13 @@\n @SuppressWarnings(\"unchecked\")\n-public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         return null;\n     }\n-    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n+    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n-            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n+            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-SerializationConfig, type-JavaType, beanDesc-BeanDescription, property-BeanProperty]",
            "newValue": "[prov-SerializerProvider, type-JavaType, beanDesc-BeanDescription, property-BeanProperty]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Completed (?) major refactoring to give necessary context for Resolvable Serializers, Deserializers.\n",
          "commitDate": "1/24/12, 6:51 PM",
          "commitName": "aaba9c105d557bdbb4e94a1e3927cbdd61bd2807",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "1/22/12, 10:57 PM",
          "commitNameOld": "28bde0726d83be7f70ca4586abee6f536bfc8885",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 1.83,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        return null;\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
          "functionStartLine": 293,
          "functionName": "findBeanSerializer",
          "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
          "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
          "diff": "@@ -1,13 +1,13 @@\n @SuppressWarnings(\"unchecked\")\n-public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         return null;\n     }\n-    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n+    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(prov, beanDesc, property);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n-            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n+            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(prov.getConfig(), beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "28bde0726d83be7f70ca4586abee6f536bfc8885": {
      "type": "Yparameterchange",
      "commitMessage": "Refactoring: eliminate exposure of BasicBeanDescription (now just base class. BeanDescription)\n",
      "commitDate": "1/22/12, 10:57 PM",
      "commitName": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/20/12, 8:16 PM",
      "commitNameOld": "b2a9ca7bb27c21b12ccd8d17314e83275381027c",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        return null;\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
      "functionStartLine": 291,
      "functionName": "findBeanSerializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n",
      "diff": "@@ -1,13 +1,13 @@\n @SuppressWarnings(\"unchecked\")\n-public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BasicBeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n     if (!isPotentialBeanType(type.getRawClass())) {\n         return null;\n     }\n     JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n     if (_factoryConfig.hasSerializerModifiers()) {\n         for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n             serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n         }\n     }\n     return serializer;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[config-SerializationConfig, type-JavaType, beanDesc-BasicBeanDescription, property-BeanProperty]",
        "newValue": "[config-SerializationConfig, type-JavaType, beanDesc-BeanDescription, property-BeanProperty]"
      }
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,13 @@\n+@SuppressWarnings(\"unchecked\")\n+public JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BasicBeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n+    if (!isPotentialBeanType(type.getRawClass())) {\n+        return null;\n+    }\n+    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n+    if (_factoryConfig.hasSerializerModifiers()) {\n+        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n+            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n+        }\n+    }\n+    return serializer;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@SuppressWarnings(\"unchecked\")\npublic JsonSerializer\u003cObject\u003e findBeanSerializer(SerializationConfig config, JavaType type, BasicBeanDescription beanDesc, BeanProperty property) throws JsonMappingException {\n    if (!isPotentialBeanType(type.getRawClass())) {\n        return null;\n    }\n    JsonSerializer\u003cObject\u003e serializer \u003d constructBeanSerializer(config, beanDesc, property);\n    if (_factoryConfig.hasSerializerModifiers()) {\n        for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers()) {\n            serializer \u003d (JsonSerializer\u003cObject\u003e) mod.modifySerializer(config, beanDesc, serializer);\n        }\n    }\n    return serializer;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
      "functionStartLine": 336,
      "functionName": "findBeanSerializer",
      "functionAnnotation": "@SuppressWarnings(\"unchecked\")",
      "functionDoc": "Method that will try to construct a {@link BeanSerializer} for\ngiven class. Returns null if no properties are found.\n"
    }
  }
}