{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicClassIntrospector.java",
  "functionName": "forClassAnnotations",
  "functionId": "forClassAnnotations___cfg-MapperConfig__?____type-JavaType__r-MixInResolver",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 152,
  "functionEndLine": 167,
  "numCommitsSeen": 18,
  "timeTaken": 528,
  "changeHistory": [
    "3eb74af17d39f5d6017e579590174c3941210d82",
    "798390aa9d6474a31ddf02774d167502474efdc4",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "3eb74af17d39f5d6017e579590174c3941210d82": "Ybodychange",
    "798390aa9d6474a31ddf02774d167502474efdc4": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3eb74af17d39f5d6017e579590174c3941210d82": {
      "type": "Ybodychange",
      "commitMessage": "Implement #550\n",
      "commitDate": "9/23/14, 2:04 PM",
      "commitName": "3eb74af17d39f5d6017e579590174c3941210d82",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "5/7/14, 10:51 PM",
      "commitNameOld": "4e387c241b7c92f2e4d862f6217189e55472125e",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 138.63,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n    BasicBeanDescription desc \u003d _findStdTypeDesc(type);\n    if (desc \u003d\u003d null) {\n        desc \u003d _cachedFCA.get(type);\n        if (desc \u003d\u003d null) {\n            boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n            AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? cfg.getAnnotationIntrospector() : null), r);\n            desc \u003d BasicBeanDescription.forOtherUse(cfg, type, ac);\n            _cachedFCA.put(type, desc);\n        }\n    }\n    return desc;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
      "functionStartLine": 152,
      "functionName": "forClassAnnotations",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,14 @@\n @Override\n public BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n-    boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n-    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? cfg.getAnnotationIntrospector() : null), r);\n-    return BasicBeanDescription.forOtherUse(cfg, type, ac);\n+    BasicBeanDescription desc \u003d _findStdTypeDesc(type);\n+    if (desc \u003d\u003d null) {\n+        desc \u003d _cachedFCA.get(type);\n+        if (desc \u003d\u003d null) {\n+            boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n+            AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? cfg.getAnnotationIntrospector() : null), r);\n+            desc \u003d BasicBeanDescription.forOtherUse(cfg, type, ac);\n+            _cachedFCA.put(type, desc);\n+        }\n+    }\n+    return desc;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "798390aa9d6474a31ddf02774d167502474efdc4": {
      "type": "Ybodychange",
      "commitMessage": "...\n",
      "commitDate": "1/23/12, 9:45 PM",
      "commitName": "798390aa9d6474a31ddf02774d167502474efdc4",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/22/12, 10:57 PM",
      "commitNameOld": "28bde0726d83be7f70ca4586abee6f536bfc8885",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n    boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? cfg.getAnnotationIntrospector() : null), r);\n    return BasicBeanDescription.forOtherUse(cfg, type, ac);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
      "functionStartLine": 93,
      "functionName": "forClassAnnotations",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,6 @@\n @Override\n public BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n     boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n-    AnnotationIntrospector ai \u003d cfg.getAnnotationIntrospector();\n-    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? ai : null), r);\n+    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? cfg.getAnnotationIntrospector() : null), r);\n     return BasicBeanDescription.forOtherUse(cfg, type, ac);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,7 @@\n+@Override\n+public BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n+    boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n+    AnnotationIntrospector ai \u003d cfg.getAnnotationIntrospector();\n+    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? ai : null), r);\n+    return BasicBeanDescription.forOtherUse(cfg, type, ac);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic BasicBeanDescription forClassAnnotations(MapperConfig\u003c?\u003e cfg, JavaType type, MixInResolver r) {\n    boolean useAnnotations \u003d cfg.isAnnotationProcessingEnabled();\n    AnnotationIntrospector ai \u003d cfg.getAnnotationIntrospector();\n    AnnotatedClass ac \u003d AnnotatedClass.construct(type.getRawClass(), (useAnnotations ? ai : null), r);\n    return BasicBeanDescription.forOtherUse(cfg, type, ac);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
      "functionStartLine": 126,
      "functionName": "forClassAnnotations",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}