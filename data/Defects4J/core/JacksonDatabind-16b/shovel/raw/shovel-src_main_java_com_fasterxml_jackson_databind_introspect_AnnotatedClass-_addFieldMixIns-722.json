{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotatedClass.java",
  "functionName": "_addFieldMixIns",
  "functionId": "_addFieldMixIns___targetClass-Class__?____mixInCls-Class__?____fields-Map__String,AnnotatedField__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
  "functionAnnotation": "",
  "functionDoc": "Method called to add field mix-ins from given mix-in class (and its fields)\ninto already collected actual fields (from introspected classes and their\nsuper-classes)\n",
  "functionStartLine": 722,
  "functionEndLine": 742,
  "numCommitsSeen": 36,
  "timeTaken": 1477,
  "changeHistory": [
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": "Ymultichange(Yparameterchange,Ybodychange)",
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
      "commitDate": "4/28/12, 12:43 AM",
      "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
          "commitDate": "4/28/12, 12:43 AM",
          "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/27/12, 7:56 PM",
          "commitNameOld": "201c8ffd7931aa552fe42f077e23917695faf29a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addFieldMixIns(Class\u003c?\u003e targetClass, Class\u003c?\u003e mixInCls, Map\u003cString, AnnotatedField\u003e fields) {\n    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n    parents.add(mixInCls);\n    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n    for (Class\u003c?\u003e mixin : parents) {\n        for (Field mixinField : mixin.getDeclaredFields()) {\n            if (!_isIncludableField(mixinField)) {\n                continue;\n            }\n            String name \u003d mixinField.getName();\n            AnnotatedField maskedField \u003d fields.get(name);\n            if (maskedField !\u003d null) {\n                _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 709,
          "functionName": "_addFieldMixIns",
          "functionAnnotation": "",
          "functionDoc": "Method called to add field mix-ins from given mix-in class (and its fields)\ninto already collected actual fields (from introspected classes and their\nsuper-classes)\n",
          "diff": "@@ -1,12 +1,17 @@\n-protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n-    for (Field mixinField : mixin.getDeclaredFields()) {\n-        if (!_isIncludableField(mixinField)) {\n-            continue;\n-        }\n-        String name \u003d mixinField.getName();\n-        AnnotatedField maskedField \u003d fields.get(name);\n-        if (maskedField !\u003d null) {\n-            _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n+protected void _addFieldMixIns(Class\u003c?\u003e targetClass, Class\u003c?\u003e mixInCls, Map\u003cString, AnnotatedField\u003e fields) {\n+    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n+    parents.add(mixInCls);\n+    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n+    for (Class\u003c?\u003e mixin : parents) {\n+        for (Field mixinField : mixin.getDeclaredFields()) {\n+            if (!_isIncludableField(mixinField)) {\n+                continue;\n+            }\n+            String name \u003d mixinField.getName();\n+            AnnotatedField maskedField \u003d fields.get(name);\n+            if (maskedField !\u003d null) {\n+                _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[mixin-Class\u003c?\u003e, fields-Map\u003cString,AnnotatedField\u003e]",
            "newValue": "[targetClass-Class\u003c?\u003e, mixInCls-Class\u003c?\u003e, fields-Map\u003cString,AnnotatedField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fixed [Issue-14]: parent types of mix-in annotations were not resolved for fields, methods\n",
          "commitDate": "4/28/12, 12:43 AM",
          "commitName": "1b30b1a9acc9e267a22ed0c8e0372d9d158b257c",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "4/27/12, 7:56 PM",
          "commitNameOld": "201c8ffd7931aa552fe42f077e23917695faf29a",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void _addFieldMixIns(Class\u003c?\u003e targetClass, Class\u003c?\u003e mixInCls, Map\u003cString, AnnotatedField\u003e fields) {\n    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n    parents.add(mixInCls);\n    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n    for (Class\u003c?\u003e mixin : parents) {\n        for (Field mixinField : mixin.getDeclaredFields()) {\n            if (!_isIncludableField(mixinField)) {\n                continue;\n            }\n            String name \u003d mixinField.getName();\n            AnnotatedField maskedField \u003d fields.get(name);\n            if (maskedField !\u003d null) {\n                _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
          "functionStartLine": 709,
          "functionName": "_addFieldMixIns",
          "functionAnnotation": "",
          "functionDoc": "Method called to add field mix-ins from given mix-in class (and its fields)\ninto already collected actual fields (from introspected classes and their\nsuper-classes)\n",
          "diff": "@@ -1,12 +1,17 @@\n-protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n-    for (Field mixinField : mixin.getDeclaredFields()) {\n-        if (!_isIncludableField(mixinField)) {\n-            continue;\n-        }\n-        String name \u003d mixinField.getName();\n-        AnnotatedField maskedField \u003d fields.get(name);\n-        if (maskedField !\u003d null) {\n-            _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n+protected void _addFieldMixIns(Class\u003c?\u003e targetClass, Class\u003c?\u003e mixInCls, Map\u003cString, AnnotatedField\u003e fields) {\n+    List\u003cClass\u003c?\u003e\u003e parents \u003d new ArrayList\u003cClass\u003c?\u003e\u003e();\n+    parents.add(mixInCls);\n+    ClassUtil.findSuperTypes(mixInCls, targetClass, parents);\n+    for (Class\u003c?\u003e mixin : parents) {\n+        for (Field mixinField : mixin.getDeclaredFields()) {\n+            if (!_isIncludableField(mixinField)) {\n+                continue;\n+            }\n+            String name \u003d mixinField.getName();\n+            AnnotatedField maskedField \u003d fields.get(name);\n+            if (maskedField !\u003d null) {\n+                _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b": {
      "type": "Ybodychange",
      "commitMessage": "Start work on [JACKSON-754], \"annotation bundles\"\n",
      "commitDate": "1/16/12, 5:24 PM",
      "commitName": "fd9690c47cc825ea8dbd3a01f8de99e91f35ee2b",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/29/11, 3:12 PM",
      "commitNameOld": "0344ce08eb33d9d3aeb6478ce0391368596eac04",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 18.09,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n    for (Field mixinField : mixin.getDeclaredFields()) {\n        if (!_isIncludableField(mixinField)) {\n            continue;\n        }\n        String name \u003d mixinField.getName();\n        AnnotatedField maskedField \u003d fields.get(name);\n        if (maskedField !\u003d null) {\n            _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 676,
      "functionName": "_addFieldMixIns",
      "functionAnnotation": "",
      "functionDoc": "Method called to add field mix-ins from given mix-in class (and its fields)\ninto already collected actual fields (from introspected classes and their\nsuper-classes)\n",
      "diff": "@@ -1,16 +1,12 @@\n protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n     for (Field mixinField : mixin.getDeclaredFields()) {\n         if (!_isIncludableField(mixinField)) {\n             continue;\n         }\n         String name \u003d mixinField.getName();\n         AnnotatedField maskedField \u003d fields.get(name);\n         if (maskedField !\u003d null) {\n-            for (Annotation a : mixinField.getDeclaredAnnotations()) {\n-                if (_annotationIntrospector.isHandled(a)) {\n-                    maskedField.addOrOverride(a);\n-                }\n-            }\n+            _addOrOverrideAnnotations(maskedField, mixinField.getDeclaredAnnotations());\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,16 @@\n+protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n+    for (Field mixinField : mixin.getDeclaredFields()) {\n+        if (!_isIncludableField(mixinField)) {\n+            continue;\n+        }\n+        String name \u003d mixinField.getName();\n+        AnnotatedField maskedField \u003d fields.get(name);\n+        if (maskedField !\u003d null) {\n+            for (Annotation a : mixinField.getDeclaredAnnotations()) {\n+                if (_annotationIntrospector.isHandled(a)) {\n+                    maskedField.addOrOverride(a);\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void _addFieldMixIns(Class\u003c?\u003e mixin, Map\u003cString, AnnotatedField\u003e fields) {\n    for (Field mixinField : mixin.getDeclaredFields()) {\n        if (!_isIncludableField(mixinField)) {\n            continue;\n        }\n        String name \u003d mixinField.getName();\n        AnnotatedField maskedField \u003d fields.get(name);\n        if (maskedField !\u003d null) {\n            for (Annotation a : mixinField.getDeclaredAnnotations()) {\n                if (_annotationIntrospector.isHandled(a)) {\n                    maskedField.addOrOverride(a);\n                }\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
      "functionStartLine": 724,
      "functionName": "_addFieldMixIns",
      "functionAnnotation": "",
      "functionDoc": "Method called to add field mix-ins from given mix-in class (and its fields)\ninto already collected actual fields (from introspected classes and their\nsuper-classes)\n"
    }
  }
}