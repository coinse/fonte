{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JacksonAnnotationIntrospector.java",
  "functionName": "findSerializer",
  "functionId": "findSerializer___a-Annotated",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 288,
  "functionEndLine": 309,
  "numCommitsSeen": 73,
  "timeTaken": 2904,
  "changeHistory": [
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": "Ybodychange",
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": {
      "type": "Ybodychange",
      "commitMessage": "Implement #133\n",
      "commitDate": "9/25/14, 5:28 PM",
      "commitName": "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "5/19/14, 11:42 PM",
      "commitNameOld": "46c6679d0b88035e0083e27890a421e8a8466242",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 128.74,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object findSerializer(Annotated a) {\n    JsonSerialize ann \u003d _findAnnotation(a, JsonSerialize.class);\n    if (ann !\u003d null) {\n        Class\u003c? extends JsonSerializer\u003c?\u003e\u003e serClass \u003d ann.using();\n        if (serClass !\u003d JsonSerializer.None.class) {\n            return serClass;\n        }\n    }\n    JsonRawValue annRaw \u003d _findAnnotation(a, JsonRawValue.class);\n    if ((annRaw !\u003d null) \u0026\u0026 annRaw.value()) {\n        Class\u003c?\u003e cls \u003d a.getRawType();\n        return new RawSerializer\u003cObject\u003e(cls);\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 288,
      "functionName": "findSerializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n @Override\n public Object findSerializer(Annotated a) {\n-    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n+    JsonSerialize ann \u003d _findAnnotation(a, JsonSerialize.class);\n     if (ann !\u003d null) {\n         Class\u003c? extends JsonSerializer\u003c?\u003e\u003e serClass \u003d ann.using();\n         if (serClass !\u003d JsonSerializer.None.class) {\n             return serClass;\n         }\n     }\n-    JsonRawValue annRaw \u003d a.getAnnotation(JsonRawValue.class);\n+    JsonRawValue annRaw \u003d _findAnnotation(a, JsonRawValue.class);\n     if ((annRaw !\u003d null) \u0026\u0026 annRaw.value()) {\n         Class\u003c?\u003e cls \u003d a.getRawType();\n         return new RawSerializer\u003cObject\u003e(cls);\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a342c0eef8c4abc3eba5568c52af73e59e1b6c17": {
      "type": "Ybodychange",
      "commitMessage": "Yet more clean up\n",
      "commitDate": "12/23/11, 8:38 AM",
      "commitName": "a342c0eef8c4abc3eba5568c52af73e59e1b6c17",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/23/11, 12:31 AM",
      "commitNameOld": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Object findSerializer(Annotated a) {\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        Class\u003c? extends JsonSerializer\u003c?\u003e\u003e serClass \u003d ann.using();\n        if (serClass !\u003d JsonSerializer.None.class) {\n            return serClass;\n        }\n    }\n    JsonRawValue annRaw \u003d a.getAnnotation(JsonRawValue.class);\n    if ((annRaw !\u003d null) \u0026\u0026 annRaw.value()) {\n        Class\u003c?\u003e cls \u003d a.getRawType();\n        return new RawSerializer\u003cObject\u003e(cls);\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 288,
      "functionName": "findSerializer",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,16 @@\n+@Override\n+public Object findSerializer(Annotated a) {\n+    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n+    if (ann !\u003d null) {\n+        Class\u003c? extends JsonSerializer\u003c?\u003e\u003e serClass \u003d ann.using();\n+        if (serClass !\u003d JsonSerializer.None.class) {\n+            return serClass;\n+        }\n+    }\n+    JsonRawValue annRaw \u003d a.getAnnotation(JsonRawValue.class);\n+    if ((annRaw !\u003d null) \u0026\u0026 annRaw.value()) {\n+        Class\u003c?\u003e cls \u003d a.getRawType();\n+        return new RawSerializer\u003cObject\u003e(cls);\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Object findSerializer(Annotated a) {\n    JsonSerialize ann \u003d a.getAnnotation(JsonSerialize.class);\n    if (ann !\u003d null) {\n        Class\u003c? extends JsonSerializer\u003c?\u003e\u003e serClass \u003d ann.using();\n        if (serClass !\u003d JsonSerializer.None.class) {\n            return serClass;\n        }\n    }\n    JsonRawValue annRaw \u003d a.getAnnotation(JsonRawValue.class);\n    if ((annRaw !\u003d null) \u0026\u0026 annRaw.value()) {\n        Class\u003c?\u003e cls \u003d a.getRawType();\n        return new RawSerializer\u003cObject\u003e(cls);\n    }\n    return null;\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 288,
      "functionName": "findSerializer",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}