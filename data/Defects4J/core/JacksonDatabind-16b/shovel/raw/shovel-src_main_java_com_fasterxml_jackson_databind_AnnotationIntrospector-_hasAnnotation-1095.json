{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotationIntrospector.java",
  "functionName": "_hasAnnotation",
  "functionId": "_hasAnnotation___annotated-Annotated__annoClass-Class__? extends Annotation__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
  "functionAnnotation": "",
  "functionDoc": "Method that should be used by sub-classes for ALL\nannotation existence access;\noverridable so  that sub-classes may, if they choose to, mangle actual access to\nblock access (\"hide\" annotations) or perhaps change value seen.\n\u003cp\u003e\nDefault implementation is simply:\n\u003ccode\u003e\n return annotated.hasAnnotation(annoClass);\n\u003c/code\u003e\n\n@since 2.5\n",
  "functionStartLine": 1095,
  "functionEndLine": 1097,
  "numCommitsSeen": 58,
  "timeTaken": 523,
  "changeHistory": [
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9"
  ],
  "changeHistoryShort": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9": {
      "type": "Yintroduced",
      "commitMessage": "Implement #133\n",
      "commitDate": "9/25/14, 5:28 PM",
      "commitName": "750ccda7e16494dd5ee8f9389a5aec7f74ae42a9",
      "commitAuthor": "Cowtowncoder",
      "diff": "@@ -0,0 +1,3 @@\n+protected boolean _hasAnnotation(Annotated annotated, Class\u003c? extends Annotation\u003e annoClass) {\n+    return annotated.hasAnnotation(annoClass);\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected boolean _hasAnnotation(Annotated annotated, Class\u003c? extends Annotation\u003e annoClass) {\n    return annotated.hasAnnotation(annoClass);\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
      "functionStartLine": 1047,
      "functionName": "_hasAnnotation",
      "functionAnnotation": "",
      "functionDoc": "Method that should be used by sub-classes for ALL\nannotation existence access;\noverridable so  that sub-classes may, if they choose to, mangle actual access to\nblock access (\"hide\" annotations) or perhaps change value seen.\n\u003cp\u003e\nDefault implementation is simply:\n\u003ccode\u003e\n return annotated.hasAnnotation(annoClass);\n\u003c/code\u003e\n\n@since 2.5\n"
    }
  }
}