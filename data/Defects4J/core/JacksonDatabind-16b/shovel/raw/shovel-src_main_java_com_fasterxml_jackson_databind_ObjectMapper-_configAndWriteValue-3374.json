{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectMapper.java",
  "functionName": "_configAndWriteValue",
  "functionId": "_configAndWriteValue___jgen-JsonGenerator__value-Object",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
  "functionAnnotation": "",
  "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
  "functionStartLine": 3374,
  "functionEndLine": 3402,
  "numCommitsSeen": 158,
  "timeTaken": 12694,
  "changeHistory": [
    "d672b186bc549227afc210d481fa3dfde197b961",
    "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd",
    "5448e5e34e930b4773a5211f33ffadf643f37819",
    "e090cd8ab3aee1b6e6ed99ae1aae51bdc811117c",
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
    "6679caeac9198802d271f8659017bb63eebd615f",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373"
  ],
  "changeHistoryShort": {
    "d672b186bc549227afc210d481fa3dfde197b961": "Yannotationchange",
    "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd": "Ymultichange(Yexceptionschange,Ybodychange,Yannotationchange)",
    "5448e5e34e930b4773a5211f33ffadf643f37819": "Ybodychange",
    "e090cd8ab3aee1b6e6ed99ae1aae51bdc811117c": "Ybodychange",
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": "Ybodychange",
    "6679caeac9198802d271f8659017bb63eebd615f": "Ybodychange",
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": "Ybodychange",
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d672b186bc549227afc210d481fa3dfde197b961": {
      "type": "Yannotationchange",
      "commitMessage": "Implemented #599, ability to skip duplicate module registrations\n",
      "commitDate": "11/18/14, 10:36 PM",
      "commitName": "d672b186bc549227afc210d481fa3dfde197b961",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "11/9/14, 4:40 PM",
      "commitNameOld": "2657ff38ffec21d3566283c69e2767165a71015b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 9.25,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    cfg.initialize(jgen);\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 3099,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,22 @@\n-@SuppressWarnings(\"deprecation\")\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n     cfg.initialize(jgen);\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "@SuppressWarnings(\"deprecation\")",
        "newValue": ""
      }
    },
    "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Yannotationchange)",
      "commitMessage": "Implemented #607, #608\n",
      "commitDate": "11/8/14, 3:47 PM",
      "commitName": "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd",
      "commitAuthor": "Tatu Saloranta",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Implemented #607, #608\n",
          "commitDate": "11/8/14, 3:47 PM",
          "commitName": "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/7/14, 9:20 PM",
          "commitNameOld": "203f23ce6463674c06a99b24647c3bafa45ecf0c",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.77,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"deprecation\")\nprotected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    cfg.initialize(jgen);\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
          "functionStartLine": 2991,
          "functionName": "_configAndWriteValue",
          "functionAnnotation": "@SuppressWarnings(\"deprecation\")",
          "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
          "diff": "@@ -1,27 +1,23 @@\n-protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n+@SuppressWarnings(\"deprecation\")\n+protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n-    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n-        jgen.useDefaultPrettyPrinter();\n-    }\n-    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n-        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n-    }\n+    cfg.initialize(jgen);\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IOException, JsonGenerationException, JsonMappingException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Implemented #607, #608\n",
          "commitDate": "11/8/14, 3:47 PM",
          "commitName": "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/7/14, 9:20 PM",
          "commitNameOld": "203f23ce6463674c06a99b24647c3bafa45ecf0c",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.77,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"deprecation\")\nprotected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    cfg.initialize(jgen);\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
          "functionStartLine": 2991,
          "functionName": "_configAndWriteValue",
          "functionAnnotation": "@SuppressWarnings(\"deprecation\")",
          "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
          "diff": "@@ -1,27 +1,23 @@\n-protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n+@SuppressWarnings(\"deprecation\")\n+protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n-    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n-        jgen.useDefaultPrettyPrinter();\n-    }\n-    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n-        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n-    }\n+    cfg.initialize(jgen);\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Implemented #607, #608\n",
          "commitDate": "11/8/14, 3:47 PM",
          "commitName": "4fc7cb0cf03520ecf9ed4a872430e646e4d85abd",
          "commitAuthor": "Tatu Saloranta",
          "commitDateOld": "11/7/14, 9:20 PM",
          "commitNameOld": "203f23ce6463674c06a99b24647c3bafa45ecf0c",
          "commitAuthorOld": "Tatu Saloranta",
          "daysBetweenCommits": 0.77,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "@SuppressWarnings(\"deprecation\")\nprotected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    cfg.initialize(jgen);\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
          "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
          "functionStartLine": 2991,
          "functionName": "_configAndWriteValue",
          "functionAnnotation": "@SuppressWarnings(\"deprecation\")",
          "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
          "diff": "@@ -1,27 +1,23 @@\n-protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n+@SuppressWarnings(\"deprecation\")\n+protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n-    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n-        jgen.useDefaultPrettyPrinter();\n-    }\n-    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n-        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n-    }\n+    cfg.initialize(jgen);\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@SuppressWarnings(\"deprecation\")"
          }
        }
      ]
    },
    "5448e5e34e930b4773a5211f33ffadf643f37819": {
      "type": "Ybodychange",
      "commitMessage": "Minor improvement to handling of JsonGenerator.close() on exception case\n",
      "commitDate": "3/4/14, 11:54 PM",
      "commitName": "5448e5e34e930b4773a5211f33ffadf643f37819",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "1/20/14, 8:50 PM",
      "commitNameOld": "cd610520c64daa3e817abb053739d41c63b0375b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 43.13,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n    }\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2812,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,26 +1,27 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n     if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n         jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n     }\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n+            jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e090cd8ab3aee1b6e6ed99ae1aae51bdc811117c": {
      "type": "Ybodychange",
      "commitMessage": "Further improvements wrt #232: use `JsonGenerator` feature, instead of caller converting to String\n",
      "commitDate": "7/7/13, 9:57 PM",
      "commitName": "e090cd8ab3aee1b6e6ed99ae1aae51bdc811117c",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "6/6/13, 5:31 PM",
      "commitNameOld": "21a81e1f0569f81d7f371ec05c4ea1f263996e7f",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 31.18,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n    }\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2714,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,26 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n+    if (cfg.isEnabled(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN)) {\n+        jgen.enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n+    }\n     if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9610aff9eb922486478ab92ad5c4d02a11b2ad1f": {
      "type": "Ybodychange",
      "commitMessage": "Implemented [JACKSON-777] (renamed SerializationConfig.Feature, DeserializationConfig.Feature); various other restructure\n",
      "commitDate": "2/2/12, 11:30 AM",
      "commitName": "9610aff9eb922486478ab92ad5c4d02a11b2ad1f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 10:18 PM",
      "commitNameOld": "060ce11a33baa8a1c951cb5b7a857d5d81db09ef",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2345,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n-    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n+    if (cfg.isEnabled(SerializationFeature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n-    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n+    if (cfg.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6679caeac9198802d271f8659017bb63eebd615f": {
      "type": "Ybodychange",
      "commitMessage": "Further simplification; eliminated StdSerializerProvider\n",
      "commitDate": "2/1/12, 5:32 PM",
      "commitName": "6679caeac9198802d271f8659017bb63eebd615f",
      "commitAuthor": "Tatu",
      "commitDateOld": "2/1/12, 3:26 PM",
      "commitNameOld": "a57eca7f47d03b26320348520e926dde0da68509",
      "commitAuthorOld": "Tatu",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider(cfg).serializeValue(jgen, value);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2333,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n     SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n     if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n-        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n+        _serializerProvider(cfg).serializeValue(jgen, value);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2": {
      "type": "Ybodychange",
      "commitMessage": "Completed major rewrite of handling of on/off features for ObjectMapper/SerConfig/DeserConfig\n",
      "commitDate": "1/19/12, 12:31 PM",
      "commitName": "dfed9240ab1a46ed8c5dfea8d8dd4e38d86646f2",
      "commitAuthor": "Tatu",
      "commitDateOld": "1/18/12, 10:41 PM",
      "commitNameOld": "3108d85c7ca25507a10bd6d4b49b7a2fb807329b",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.58,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d getSerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2410,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n",
      "diff": "@@ -1,23 +1,23 @@\n protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n-    SerializationConfig cfg \u003d copySerializationConfig();\n+    SerializationConfig cfg \u003d getSerializationConfig();\n     if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n         jgen.useDefaultPrettyPrinter();\n     }\n     if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n         _configAndWriteCloseable(jgen, value, cfg);\n         return;\n     }\n     boolean closed \u003d false;\n     try {\n         _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n         closed \u003d true;\n         jgen.close();\n     } finally {\n         if (!closed) {\n             try {\n                 jgen.close();\n             } catch (IOException ioe) {\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4f23bb6779d434d88a7c4335f92d13ea639b373": {
      "type": "Yintroduced",
      "commitMessage": "First check-in, tons of compilation errors to resolve\n",
      "commitDate": "12/23/11, 12:31 AM",
      "commitName": "e4f23bb6779d434d88a7c4335f92d13ea639b373",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,23 @@\n+protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n+    SerializationConfig cfg \u003d copySerializationConfig();\n+    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n+        jgen.useDefaultPrettyPrinter();\n+    }\n+    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n+        _configAndWriteCloseable(jgen, value, cfg);\n+        return;\n+    }\n+    boolean closed \u003d false;\n+    try {\n+        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n+        closed \u003d true;\n+        jgen.close();\n+    } finally {\n+        if (!closed) {\n+            try {\n+                jgen.close();\n+            } catch (IOException ioe) {\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException {\n    SerializationConfig cfg \u003d copySerializationConfig();\n    if (cfg.isEnabled(SerializationConfig.Feature.INDENT_OUTPUT)) {\n        jgen.useDefaultPrettyPrinter();\n    }\n    if (cfg.isEnabled(SerializationConfig.Feature.CLOSE_CLOSEABLE) \u0026\u0026 (value instanceof Closeable)) {\n        _configAndWriteCloseable(jgen, value, cfg);\n        return;\n    }\n    boolean closed \u003d false;\n    try {\n        _serializerProvider.serializeValue(cfg, jgen, value, _serializerFactory);\n        closed \u003d true;\n        jgen.close();\n    } finally {\n        if (!closed) {\n            try {\n                jgen.close();\n            } catch (IOException ioe) {\n            }\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
      "functionStartLine": 2561,
      "functionName": "_configAndWriteValue",
      "functionAnnotation": "",
      "functionDoc": "Method called to configure the generator as necessary and then\ncall write functionality\n"
    }
  }
}