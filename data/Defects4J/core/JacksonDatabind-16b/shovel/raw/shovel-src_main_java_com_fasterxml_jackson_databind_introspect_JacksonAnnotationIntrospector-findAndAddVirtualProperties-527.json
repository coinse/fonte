{
  "origin": "codeshovel",
  "repositoryName": "JacksonDatabind-16b",
  "repositoryPath": "/tmp/JacksonDatabind-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JacksonAnnotationIntrospector.java",
  "functionName": "findAndAddVirtualProperties",
  "functionId": "findAndAddVirtualProperties___config-MapperConfig__?____ac-AnnotatedClass__properties-List__BeanPropertyWriter__",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 527,
  "functionEndLine": 562,
  "numCommitsSeen": 73,
  "timeTaken": 1603,
  "changeHistory": [
    "6f5cf623ba7a3e7a9e27917955ab388e35769687",
    "80674feaf5a593194a3810aaa1781a52442696da",
    "c25fbfc0da395b436d3b95cf00b96b27b71e4dd9",
    "0ccedce4c82588546ac3a4a62d663f17b51cb509",
    "2c67dce1784428cdb7a5a7a4079d1581b8ec90eb"
  ],
  "changeHistoryShort": {
    "6f5cf623ba7a3e7a9e27917955ab388e35769687": "Ybodychange",
    "80674feaf5a593194a3810aaa1781a52442696da": "Ybodychange",
    "c25fbfc0da395b436d3b95cf00b96b27b71e4dd9": "Ybodychange",
    "0ccedce4c82588546ac3a4a62d663f17b51cb509": "Ybodychange",
    "2c67dce1784428cdb7a5a7a4079d1581b8ec90eb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f5cf623ba7a3e7a9e27917955ab388e35769687": {
      "type": "Ybodychange",
      "commitMessage": "Further work on general-purpose virtual properties (not quite complete yet)\n",
      "commitDate": "12/7/14, 11:11 PM",
      "commitName": "6f5cf623ba7a3e7a9e27917955ab388e35769687",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/3/14, 10:17 PM",
      "commitNameOld": "80674feaf5a593194a3810aaa1781a52442696da",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 4.04,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n    if (ann \u003d\u003d null) {\n        return;\n    }\n    final boolean prepend \u003d ann.prepend();\n    JavaType propType \u003d null;\n    JsonAppend.Attr[] attrs \u003d ann.attrs();\n    for (int i \u003d 0, len \u003d attrs.length; i \u003c len; ++i) {\n        if (propType \u003d\u003d null) {\n            propType \u003d config.constructType(Object.class);\n        }\n        BeanPropertyWriter bpw \u003d _constructVirtualProperty(attrs[i], config, ac, propType);\n        if (prepend) {\n            properties.add(i, bpw);\n        } else {\n            properties.add(bpw);\n        }\n    }\n    JsonAppend.Prop[] props \u003d ann.props();\n    for (int i \u003d 0, len \u003d props.length; i \u003c len; ++i) {\n        BeanPropertyWriter bpw \u003d _constructVirtualProperty(props[i], config, ac);\n        if (prepend) {\n            properties.add(i, bpw);\n        } else {\n            properties.add(bpw);\n        }\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 516,
      "functionName": "findAndAddVirtualProperties",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,30 @@\n @Override\n public void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n     JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n     if (ann \u003d\u003d null) {\n         return;\n     }\n+    final boolean prepend \u003d ann.prepend();\n     JavaType propType \u003d null;\n-    for (JsonAppend.Attr attr : ann.attrs()) {\n-        PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n-        String attrName \u003d attr.value();\n-        PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n-        if (!propName.hasSimpleName()) {\n-            propName \u003d new PropertyName(attrName);\n-        }\n+    JsonAppend.Attr[] attrs \u003d ann.attrs();\n+    for (int i \u003d 0, len \u003d attrs.length; i \u003c len; ++i) {\n         if (propType \u003d\u003d null) {\n             propType \u003d config.constructType(Object.class);\n         }\n-        AnnotatedMember member \u003d new VirtualAnnotatedMember(ac.getRawType(), attrName, propType.getRawClass());\n-        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata, attr.include());\n-        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType));\n+        BeanPropertyWriter bpw \u003d _constructVirtualProperty(attrs[i], config, ac, propType);\n+        if (prepend) {\n+            properties.add(i, bpw);\n+        } else {\n+            properties.add(bpw);\n+        }\n+    }\n+    JsonAppend.Prop[] props \u003d ann.props();\n+    for (int i \u003d 0, len \u003d props.length; i \u003c len; ++i) {\n+        BeanPropertyWriter bpw \u003d _constructVirtualProperty(props[i], config, ac);\n+        if (prepend) {\n+            properties.add(i, bpw);\n+        } else {\n+            properties.add(bpw);\n+        }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "80674feaf5a593194a3810aaa1781a52442696da": {
      "type": "Ybodychange",
      "commitMessage": "Minor fixes to support inclusion criteria for attribute-backed props\n",
      "commitDate": "12/3/14, 10:17 PM",
      "commitName": "80674feaf5a593194a3810aaa1781a52442696da",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/3/14, 8:41 PM",
      "commitNameOld": "c25fbfc0da395b436d3b95cf00b96b27b71e4dd9",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n    if (ann \u003d\u003d null) {\n        return;\n    }\n    JavaType propType \u003d null;\n    for (JsonAppend.Attr attr : ann.attrs()) {\n        PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n        String attrName \u003d attr.value();\n        PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n        if (!propName.hasSimpleName()) {\n            propName \u003d new PropertyName(attrName);\n        }\n        if (propType \u003d\u003d null) {\n            propType \u003d config.constructType(Object.class);\n        }\n        AnnotatedMember member \u003d new VirtualAnnotatedMember(ac.getRawType(), attrName, propType.getRawClass());\n        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata, attr.include());\n        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType));\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 515,
      "functionName": "findAndAddVirtualProperties",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,22 @@\n @Override\n public void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n     JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n     if (ann \u003d\u003d null) {\n         return;\n     }\n     JavaType propType \u003d null;\n     for (JsonAppend.Attr attr : ann.attrs()) {\n         PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n         String attrName \u003d attr.value();\n         PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n         if (!propName.hasSimpleName()) {\n             propName \u003d new PropertyName(attrName);\n         }\n         if (propType \u003d\u003d null) {\n             propType \u003d config.constructType(Object.class);\n         }\n         AnnotatedMember member \u003d new VirtualAnnotatedMember(ac.getRawType(), attrName, propType.getRawClass());\n-        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata);\n-        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType, attr.include()));\n+        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata, attr.include());\n+        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c25fbfc0da395b436d3b95cf00b96b27b71e4dd9": {
      "type": "Ybodychange",
      "commitMessage": "minor clean up related to attribute-backed virtual properties\n",
      "commitDate": "12/3/14, 8:41 PM",
      "commitName": "c25fbfc0da395b436d3b95cf00b96b27b71e4dd9",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "12/3/14, 2:38 PM",
      "commitNameOld": "0ccedce4c82588546ac3a4a62d663f17b51cb509",
      "commitAuthorOld": "Cowtowncoder",
      "daysBetweenCommits": 0.25,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n    if (ann \u003d\u003d null) {\n        return;\n    }\n    JavaType propType \u003d null;\n    for (JsonAppend.Attr attr : ann.attrs()) {\n        PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n        String attrName \u003d attr.value();\n        PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n        if (!propName.hasSimpleName()) {\n            propName \u003d new PropertyName(attrName);\n        }\n        if (propType \u003d\u003d null) {\n            propType \u003d config.constructType(Object.class);\n        }\n        AnnotatedMember member \u003d new VirtualAnnotatedMember(ac.getRawType(), attrName, propType.getRawClass());\n        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata);\n        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType, attr.include()));\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 515,
      "functionName": "findAndAddVirtualProperties",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,22 @@\n @Override\n public void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n     JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n     if (ann \u003d\u003d null) {\n         return;\n     }\n-    JavaType defaultType \u003d null;\n+    JavaType propType \u003d null;\n     for (JsonAppend.Attr attr : ann.attrs()) {\n         PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n         String attrName \u003d attr.value();\n         PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n         if (!propName.hasSimpleName()) {\n             propName \u003d new PropertyName(attrName);\n         }\n-        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, null, propName, metadata);\n-        if (defaultType \u003d\u003d null) {\n-            defaultType \u003d config.constructType(Object.class);\n+        if (propType \u003d\u003d null) {\n+            propType \u003d config.constructType(Object.class);\n         }\n-        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac, defaultType, attr.include()));\n+        AnnotatedMember member \u003d new VirtualAnnotatedMember(ac.getRawType(), attrName, propType.getRawClass());\n+        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, member, propName, metadata);\n+        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac.getAnnotations(), propType, attr.include()));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0ccedce4c82588546ac3a4a62d663f17b51cb509": {
      "type": "Ybodychange",
      "commitMessage": "First part of #638, adding support for including attribute-backed virtual properties\n",
      "commitDate": "12/3/14, 2:38 PM",
      "commitName": "0ccedce4c82588546ac3a4a62d663f17b51cb509",
      "commitAuthor": "Cowtowncoder",
      "commitDateOld": "12/2/14, 11:05 PM",
      "commitNameOld": "2c67dce1784428cdb7a5a7a4079d1581b8ec90eb",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n    if (ann \u003d\u003d null) {\n        return;\n    }\n    JavaType defaultType \u003d null;\n    for (JsonAppend.Attr attr : ann.attrs()) {\n        PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n        String attrName \u003d attr.value();\n        PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n        if (!propName.hasSimpleName()) {\n            propName \u003d new PropertyName(attrName);\n        }\n        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, null, propName, metadata);\n        if (defaultType \u003d\u003d null) {\n            defaultType \u003d config.constructType(Object.class);\n        }\n        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac, defaultType, attr.include()));\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 515,
      "functionName": "findAndAddVirtualProperties",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,21 @@\n @Override\n public void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n     JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n     if (ann \u003d\u003d null) {\n         return;\n     }\n+    JavaType defaultType \u003d null;\n+    for (JsonAppend.Attr attr : ann.attrs()) {\n+        PropertyMetadata metadata \u003d attr.required() ? PropertyMetadata.STD_REQUIRED : PropertyMetadata.STD_OPTIONAL;\n+        String attrName \u003d attr.value();\n+        PropertyName propName \u003d _propertyName(attr.propName(), attr.propNamespace());\n+        if (!propName.hasSimpleName()) {\n+            propName \u003d new PropertyName(attrName);\n+        }\n+        SimpleBeanPropertyDefinition propDef \u003d SimpleBeanPropertyDefinition.construct(config, null, propName, metadata);\n+        if (defaultType \u003d\u003d null) {\n+            defaultType \u003d config.constructType(Object.class);\n+        }\n+        properties.add(AttributePropertyWriter.construct(attrName, propDef, ac, defaultType, attr.include()));\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2c67dce1784428cdb7a5a7a4079d1581b8ec90eb": {
      "type": "Yintroduced",
      "commitMessage": "Continue implementing JsonAppend\n",
      "commitDate": "12/2/14, 11:05 PM",
      "commitName": "2c67dce1784428cdb7a5a7a4079d1581b8ec90eb",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,7 @@\n+@Override\n+public void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n+    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n+    if (ann \u003d\u003d null) {\n+        return;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void findAndAddVirtualProperties(MapperConfig\u003c?\u003e config, AnnotatedClass ac, List\u003cBeanPropertyWriter\u003e properties) {\n    JsonAppend ann \u003d _findAnnotation(ac, JsonAppend.class);\n    if (ann \u003d\u003d null) {\n        return;\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
      "functionStartLine": 517,
      "functionName": "findAndAddVirtualProperties",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}