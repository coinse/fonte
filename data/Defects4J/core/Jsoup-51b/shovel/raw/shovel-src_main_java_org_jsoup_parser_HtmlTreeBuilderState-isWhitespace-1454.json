{
  "origin": "codeshovel",
  "repositoryName": "Jsoup-51b",
  "repositoryPath": "/tmp/Jsoup-51b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HtmlTreeBuilderState.java",
  "functionName": "isWhitespace",
  "functionId": "isWhitespace___t-Token",
  "sourceFilePath": "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1454,
  "functionEndLine": 1460,
  "numCommitsSeen": 25,
  "timeTaken": 4492,
  "changeHistory": [
    "e99193605b688e923d20054c13db897cff751607",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
    "8749726a79c22451b1f01b14fb2137f734e926b4"
  ],
  "changeHistoryShort": {
    "e99193605b688e923d20054c13db897cff751607": "Ybodychange",
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": "Yfilerename",
    "8749726a79c22451b1f01b14fb2137f734e926b4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e99193605b688e923d20054c13db897cff751607": {
      "type": "Ybodychange",
      "commitMessage": "Reuse Tokens, instead of creating all the time\n\nSaves an awful lot of GC. These are just data transfer objects, so not\nworth creating every time.\n",
      "commitDate": "10/27/14, 9:29 PM",
      "commitName": "e99193605b688e923d20054c13db897cff751607",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "10/26/14, 5:40 PM",
      "commitNameOld": "01a62698797658b0f51d323fdfb5e9744d843773",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 1.16,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private static boolean isWhitespace(Token t) {\n    if (t.isCharacter()) {\n        String data \u003d t.asCharacter().getData();\n        return isWhitespace(data);\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
      "functionStartLine": 1449,
      "functionName": "isWhitespace",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,7 @@\n private static boolean isWhitespace(Token t) {\n     if (t.isCharacter()) {\n         String data \u003d t.asCharacter().getData();\n-        for (int i \u003d 0; i \u003c data.length(); i++) {\n-            char c \u003d data.charAt(i);\n-            if (!StringUtil.isWhitespace(c))\n-                return false;\n-        }\n-        return true;\n+        return isWhitespace(data);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5000be31966a575f54d80ef85ee49ca1f5cb6ea8": {
      "type": "Yfilerename",
      "commitMessage": "First draft of a simple XML treebuilder / parser.\n\nThis provides an alternative to the HTML5 parser which enforces HTML\nsemantics on the parsed input. The simple XML parser has no understanding\nof HTML, and will parse the input as-is into a DOM.\n",
      "commitDate": "2/26/12, 5:23 PM",
      "commitName": "5000be31966a575f54d80ef85ee49ca1f5cb6ea8",
      "commitAuthor": "Jonathan Hedley",
      "commitDateOld": "9/30/11, 6:13 PM",
      "commitNameOld": "1e84edbe208aab0c9330eadc50f9773d81d70cd6",
      "commitAuthorOld": "Jonathan Hedley",
      "daysBetweenCommits": 149.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private static boolean isWhitespace(Token t) {\n    if (t.isCharacter()) {\n        String data \u003d t.asCharacter().getData();\n        for (int i \u003d 0; i \u003c data.length(); i++) {\n            char c \u003d data.charAt(i);\n            if (!Character.isWhitespace(c))\n                return false;\n        }\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
      "functionStartLine": 1455,
      "functionName": "isWhitespace",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/jsoup/parser/TreeBuilderState.java",
        "newPath": "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"
      }
    },
    "8749726a79c22451b1f01b14fb2137f734e926b4": {
      "type": "Yintroduced",
      "commitMessage": "Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the\nhttp://whatwg.org/html spec.\n",
      "commitDate": "7/2/11, 4:12 AM",
      "commitName": "8749726a79c22451b1f01b14fb2137f734e926b4",
      "commitAuthor": "Jonathan Hedley",
      "diff": "@@ -0,0 +1,12 @@\n+private static boolean isWhitespace(Token t) {\n+    if (t.isCharacter()) {\n+        String data \u003d t.asCharacter().getData();\n+        for (int i \u003d 0; i \u003c data.length(); i++) {\n+            char c \u003d data.charAt(i);\n+            if (!Character.isWhitespace(c))\n+                return false;\n+        }\n+        return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static boolean isWhitespace(Token t) {\n    if (t.isCharacter()) {\n        String data \u003d t.asCharacter().getData();\n        for (int i \u003d 0; i \u003c data.length(); i++) {\n            char c \u003d data.charAt(i);\n            if (!Character.isWhitespace(c))\n                return false;\n        }\n        return true;\n    }\n    return false;\n}",
      "path": "src/main/java/org/jsoup/parser/TreeBuilderState.java",
      "functionStartLine": 1455,
      "functionName": "isWhitespace",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}